QUESTION,USERID,USERNAME,ANSWER
"<p>Since debate without meaningful terms is <a href=""http://stackoverflow.com/questions/24270/whats-the-point-of-oop"" rel=""nofollow"">meaningless</a>, I figured I would point at the elephant in the room and ask: What exactly makes a language ""object-oriented""? I'm not looking for a textbook answer here, but one based on your experiences with OO languages that work well in your domain, whatever it may be.</p>

<p>A related question that might help to answer first is: What is the archetype of object-oriented languages and why?</p>
","2988","jwmittag","<p><a href=""http://C2.Com/cgi/wiki?DefinitionsForOo"">Definitions for Object-Orientation</a> are of course a <a href=""http://C2.Com/cgi/wiki?OoBestFeatures"">huge can of worms</a>, but here are my 2 cents:</p>

<p>To me, Object-Orientation is all about objects that collaborate by sending messages. That is, to me, the single most important trait of an object-oriented language.</p>

<p>If I had to put up an ordered list of all the features that an object-oriented language must have, it would look like this:</p>

<ol>
<li><a href=""http://C2.com/cgi/wiki?MessagePassing"">Objects sending messages to other objects</a></li>
<li>Everything is an Object</li>
<li><a href=""http://C2.Com/cgi/wiki?LateBinding"">Late Binding</a></li>
<li><a href=""http://C2.Com/cgi/wiki?PolyMorphism"">Subtype Polymorphism</a></li>
<li>Inheritance or something similarly expressive, like <a href=""http://C2.Com/cgi/wiki?DelegationInheritance"">Delegation</a></li>
<li><a href=""http://C2.com/cgi/wiki?EncapsulationDefinition"">Encapsulation</a></li>
<li><a href=""http://C2.com/cgi/wiki?InformationHiding"">Information Hiding</a></li>
<li>Abstraction</li>
</ol>

<p>Obviously, this list is very controversial, since it excludes a great variety of languages that are widely regarded as object-oriented, such as <a href=""http://Java.Com/"">Java</a>, <a href=""http://MSDN.Microsoft.Com/vcsharp/"">C#</a> and <a href=""http://Open-Std.Org/jtc1/sc22/wg21/"">C++</a>, all of which violate points 1, 2 and 3. However, there is no doubt that those languages allow for object-oriented programming (but so does <a href=""http://Open-Std.Org/jtc1/sc22/wg14/"">C</a>) and even facilitate it (which C doesn't). So, I have come to call languages that satisfy those requirements ""purely object-oriented"".</p>

<p>As archetypical object-oriented languages I would name <a href=""http://Research.Sun.Com/self/"">Self</a> and <a href=""http://NewspeakLanguage.Org/"">Newspeak</a>.</p>

<p>Both satisfy the above-mentioned requirements. Both are inspired by and successors to <a href=""http://Smalltalk.Org/"">Smalltalk</a>, and both actually manage to be ""more OO"" in some sense. The things that I like about Self and Newspeak are that both take the message sending paradigm to the extreme (Newspeak even more so than Self).</p>

<p>In Newspeak, <em>everything</em> is a message send. There are no instance variables, no fields, no attributes, no constants, no class names. They are all emulated by using getters and setters.</p>

<p>In Self, there are <em>no classes</em>, only objects. This emphasizes, what OO is <em>really</em> about: objects, not classes.</p>
"
"<p>Using the same <strong>sort</strong> command with the same input produces different results on different machines.  How do I fix that?</p>
","2988","jwmittag","<p>For more than you ever wanted to know about <code>sort</code>, read the <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/sort.html"" rel=""nofollow"" title=""sort"">specification of <code>sort</code></a> in the <a href=""http://OpenGroup.Org/onlinepubs/009695399/"" rel=""nofollow"" title=""Single Unix Specification v3"">Single Unix Specification v3</a>. It states</p>

<blockquote>
  <p>Comparisons [...] shall be performed using the collating sequence of the current locale.</p>
</blockquote>

<p>IOW, how <code>sort</code> sorts is dependent on the locale (language) settings of the environment that the script is running under.</p>
"
"<p>Is it possible to undo the changes caused by the following:</p>

<pre><code>git reset --hard HEAD~1
</code></pre>
","2988","jwmittag","<p>If you have not yet garbage collected your repository (e.g. using <code>git repack -d</code> or <code>git gc</code>, but note that garbage collection can also happen automatically), then your commit is still there – it's just no longer reachable through the HEAD.</p>

<p>You can try to find your commit by looking through the output of <code>git fsck --lost-found</code>.</p>

<p>Newer versions of Git have something called the ""reflog"", which is a log of all changes that are made to the refs (as opposed to changes that are made to the repository contents). So, for example, every time you switch your HEAD (i.e. every time you do a <code>git checkout</code> to switch branches) that will be logged. And, of course, your <code>git reset</code> also manipulated the HEAD, so it was also logged. You can access older states of your refs in a similar way that you can access older states of your repository, by using an <code>@</code> sign instead of a <code>~</code>, like <code>git reset HEAD@{1}</code>.</p>

<p>It took me a while to understand what the difference is between HEAD@{1} and HEAD~1, so here is a little explanation:</p>

<pre><code>git init
git commit --allow-empty -mOne
git commit --allow-empty -mTwo
git checkout -b anotherbranch
git commit --allow-empty -mThree
git checkout master # This changes the HEAD, but not the repository contents
git show HEAD~1 # =&gt; One
git show HEAD@{1} # =&gt; Three
git reflog
</code></pre>

<p>So, <code>HEAD~1</code> means ""go to the commit before the commit that HEAD currently points at"", while <code>HEAD@{1}</code> means ""go to the commit that HEAD pointed at before it pointed at where it currently points at"".</p>

<p>That will easily allow you to find your lost commit and recover it.</p>
"
"<p>The log4j network adapter sends events as a serialised java object. I would like to be able to capture this object and deserialise it in a different language (python). Is this possible?</p>

<p><em>NOTE</em> The network capturing is easy; its just a TCP socket and reading in a stream. The difficulty is the deserialising part</p>
","2988","jwmittag","<p><em>Theoretically</em>, it's possible. The Java Serialization, like pretty much everything in Javaland, is standardized. So, you <em>could</em> implement a deserializer according to that standard in Python. However, the Java Serialization format is not designed for cross-language use, the serialization format is closely tied to the way objects are represented inside the JVM. While implementing a JVM in Python is surely a fun exercise, it's probably not what you're looking for (-:</p>

<p>There are other (data) serialization formats that are specifically designed to be language agnostic. They usually work by stripping the data formats down to the bare minimum (number, string, sequence, dictionary and that's it) and thus requiring a bit of work on both ends to represent a rich object as a graph of dumb data structures (and vice versa).</p>

<p>Two examples are <a href=""http://JSON.Org/"" rel=""nofollow"" title=""JSON (JavaScript Object Notation)"">JSON (JavaScript Object Notation)</a> and <a href=""http://YAML.Org/"" rel=""nofollow"" title=""YAML (YAML Ain't Markup Language)"">YAML (YAML Ain't Markup Language)</a>.</p>

<p><a href=""http://ASN1.Elibel.Tm.Fr/en/"" rel=""nofollow"" title=""ASN.1 (Abstract Syntax Notation One)"">ASN.1 (Abstract Syntax Notation One)</a> is another data serialization format. Instead of dumbing the format down to a point where it can be easily understood, ASN.1 is self-describing, meaning all the information needed to decode a stream is encoded within the stream itself.</p>

<p>And, of course, <a href=""http://W3.Org/XML/"" rel=""nofollow"" title=""XML (eXtensible Markup Language)"">XML (eXtensible Markup Language)</a>, will work too, provided that it is not just used to provide textual representation of a ""memory dump"" of a Java object, but an actual abstract, language-agnostic encoding.</p>

<p>So, to make a long story short: your best bet is to either try to coerce log4j into logging in one of the above-mentioned formats, replace log4j with something that does that or try to somehow intercept the objects before they are sent over the wire and convert them before leaving Javaland.</p>

<p>Libraries that implement JSON, YAML, ASN.1 and XML are available for both Java and Python (and pretty much every programming language known to man).</p>
"
"<p>Since I got a quick response on the last Ruby <a href=""http://stackoverflow.com/questions/29511/ruby-convert-integer-to-string"" rel=""nofollow"">question</a> I asked, I have another one that's been bothering me. Is there a one line function call that quits the program and displays a message? I know in Perl its as simple as this:</p>

<pre><code>die(""Message goes here"")
</code></pre>

<p>Essentially I'm just tired of typing this:</p>

<pre><code>puts ""Message goes here""
exit
</code></pre>
","2988","jwmittag","<p>If you want to denote an actual error in your code, you could raise a <code>RuntimeError</code> exception:</p>

<pre><code>raise RuntimeError, 'Message goes here'
</code></pre>

<p>This will print a stacktrace, the type of the exception being raised and the message that you provided. Depending on your users, a stacktrace might be too scary, and the actual message might get lost in the noise. On the other hand, if you die because of an actual error, a stacktrace will give you additional information for debugging.</p>
"
"<p>I need to match and remove all tags using a regular expression in Perl.  I have the following:</p>

<pre><code>&lt;\\??(?!p).+?&gt;
</code></pre>

<p>But this still matches with the closing <code>&lt;/p&gt;</code> tag.  Any hint on how to match with the closing tag as well?</p>

<p>Note, this is being performed on xhtml.</p>
","2988","jwmittag","<p>In my opinion, trying to parse HTML with anything other than an HTML parser is just asking for a world of pain. HTML is a <em>really</em> complex language (which is one of the major reasons that XHTML was created, which is much simpler than HTML).</p>

<p>For example, this:</p>

<pre><code>&lt;HTML /
  &lt;HEAD /
    &lt;TITLE / &gt; /
    &lt;P / &gt;
</code></pre>

<p>is a complete, 100% well-formed, 100% valid HTML document. (Well, it's missing the DOCTYPE declaration, but other than that ...)</p>

<p>It is semantically equivalent to</p>

<pre><code>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;
      &amp;gt;
    &lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;
      &amp;gt;
    &lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>But it's nevertheless valid HTML that you're going to have to deal with. You <em>could</em>, of course, devise a regex to parse it, but, as others already suggested, using an actual HTML parser is just sooo much easier.</p>
"
"<p>Can anyone point me to a good tutorial on creating a bootable Linux CD from scratch?</p>

<p>I need help with a fairly specialized problem: my firm sells an expansion card that requires custom firmware. Currently we use an extremely old live CD image of RH7.2 that we update with current firmware. Manufacturing puts the cards in a machine, boots off the CD, the CD writes the firmware, they power off and pull the cards. Because of this cycle, it's essential that the CD boot and shut down as quickly as possible.</p>

<p>The problem is that with the next generation of cards, I have to update the CD to a 2.6 kernel. It's easy enough to acquire a pre-existing live CD - but those all are designed for showing off Linux on the desktop - which means they take forever to boot.</p>

<p>Can anyone fix me up with a current How-To?</p>

<p><hr /></p>

<h3>Update:</h3>

<p>So, just as a final update for anyone reading this later - the tool I ended up using was ""livecd-creator"".</p>

<p>My reason for choosing this tool was that it is available for RedHat-based distributions like CentOs, Fedora and RHEL - which are all distributions that my company supports already. In addition, while the project is very poorly documented it is extremely customizable. I was able to create a minimal LiveCD and edit the boot sequence so that it booted directly into the firmware updater instead of a bash shell.</p>

<p>The whole job would have only taken an hour or two if there had been a README explaining the configuration file!</p>
","2988","jwmittag","<p>There are a couple of interesting projects you could look into.</p>

<p>But first: does it have to be a CD-ROM? That's probably the slowest possible storage (well, apart from tape, maybe) you could use. What about a fast USB stick or a an IEE1394 hard-disk or maybe even an eSATA hard-disk?</p>

<p>Okay, there are several Live-CDs that are designed to be very small, in order to e.g. fit on a business card sized CD. Some were also designed to be booted from a USB stick, back when that meant 64-128 MiByte: <a href=""http://DamnSmallLinux.Org/"" rel=""nofollow"" title=""Damn Small Linux"">Damn Small Linux</a> is one of the best known ones, however it uses a 2.4 kernel. There is a sister project called <a href=""http://DamnSmallLinux.Org/dsl-n/"" rel=""nofollow"" title=""Damn Small Linux - Not"">Damn Small Linux - Not</a>, which has a 2.6 kernel (although it seems it hasn't been updated in years).</p>

<p>Another project worth noting is <a href=""http://grml.org/"" rel=""nofollow"" title=""grml"">grml</a>, a Live-CD for system administration tasks. It does not boot into a graphic environment, and is therefore quite fast; however, it still contains about 2 GiByte of software compressed onto a CD-ROM. But it also has a smaller flavor, aptly named <a href=""http://grml.org/faq/#whatissmall"" rel=""nofollow"" title=""grml-small"">grml-small</a>, which only contains about 200 MiByte of software compressed into 60 MiByte.</p>

<p>Then there is <a href=""http://Morphix.Org/"" rel=""nofollow"" title=""Morphix"">Morphix</a>, which is a Live-CD builder toolkit based on <a href=""http://Knoppix.De/"" rel=""nofollow"" title=""Knoppix"">Knoppix</a>. (""Morphable Knoppix""!) Morphix is basically a tool to build your own special purpose Live-CD.</p>

<p>The last thing I want to mention is <a href=""http://MachBoot.Com/"" rel=""nofollow"" title=""MachBoot"">MachBoot</a>. MachBoot is a super-fast Live-CD. It uses various techniques to massively speed up the boot process. I believe they even trace the order in which blocks are accessed during booting and then remaster the ISO so that those blocks are laid out contiguously on the medium. Their current record is less than 6 seconds to boot into a full graphical desktop environment. However, this also seems to be stale.</p>
"
"<p>I'm considering developing a website similar to stackoverflow, but the answers may also consist of drawings (schematics, in this case).  I want to have an area in the answer form where they can make this schematic without requiring special plugins, etc.  </p>

<ol>
<li>Are we to the point where SVG has or should have critical mass soon (1-2 years) such that designing a website where script-run SVG as a primary feature is reasonable (ie, requiring Firefox or another SVG/AJAX compliant browser)?</li>
<li>What are some good resources for learning cross platform SVG scripting (likely in javascript)?</li>
</ol>

<p>-Adam Davis</p>
","2988","jwmittag","<p>Unfortunately, I don't have an answer, but I do have three pointers to projects that you could look at.</p>

<p>The first is the <a href=""http://Research.Sun.Com/projects/lively/"">Lively Kernel</a> by Dan Ingalls (yes, <em>the</em> Dan Ingalls) at Sun Labs. It is an implementation of a Smalltalk Virtual World in JavaScript on top of SVG. More precisely, it is an implementation of the Morphic GUI framework from Squeak Smalltalk in JavaScript using SVG and a port of (parts of) Squeak Smalltalk in JavaScript.</p>

<p>Or, if you're not a Smalltalker and the above doesn't make sense to you: it's an Operating System, written in JavaScript with the JavaScript interpreter as the CPU, SVG as the graphics card and the browser as the computer.</p>

<p>This is about as extreme as it gets, when it comes to JavaScript and SVG. And it only <em>fully</em> works in Safari 3 and partly in Firefox 3, although there is an experimental port to Internet Explorer as well.</p>

<p>The second project is John Resig's <a href=""http://EJohn.Org/blog/processingjs/"">Processing.js</a> port of the Processing visualization language to JavaScript. It uses the <code>&lt;canvas&gt;</code> element instead of SVG precisely because of the problems that you mentioned. This one however, only works in Firefox 3.</p>

<p>The third one is <a href=""http://UselessPickles.Com/triangles/demo.html"">Real-Time 3D in JavaScript</a> by Useless Pickles. It uses <em>only</em> JavaScript, DOM and CSS and <em>no</em> SVG or <code>&lt;canvas&gt;</code> or Flash or whatever. <em>And</em> it is portable to almost any browser, including Internet Explorer 7 and up. Doing 2D should be even easier than this.</p>

<p>Between those three projects you should be able to find some inspiration and also to find some people who tried to push the envelope with JavaScript and SVG or JavaScript and Graphics and can tell you what works and what doesn't.</p>

<p>Conclusion: doing cross-browser SVG or cross-browser <code>&lt;canvas&gt;</code> is nigh impossible, but with a little bit of craziness, cross-browser graphics <em>without</em> SVG or <code>&lt;canvas&gt;</code> is possible.</p>
"
"<p>Here's a perfect example of the problem: <a href=""http://blog.teksol.info/2009/03/27/argumenterror-on-number-sum-when-using-classifier-bayes.html"" rel=""nofollow"">Classifier gem breaks Rails</a>.</p>

<p>** Original question: **</p>

<p>One thing that concerns me as a security professional is that Ruby doesn't have a parallel of Java's package-privacy.  That is, this isn't valid Ruby:</p>

<pre><code>public module Foo
  public module Bar
    # factory method for new Bar implementations
    def self.new(...)
      SimpleBarImplementation.new(...)
    end
    def baz
      raise NotImplementedError.new('Implementing Classes MUST redefine #baz')
    end
  end

  private class SimpleBarImplementation
    include Bar
    def baz
      ...
    end
  end
end
</code></pre>

<p>It'd be really nice to be able to prevent monkey-patching of Foo::BarImpl.  That way, people who rely on the library know that nobody has messed with it.  Imagine if somebody changed the implementation of MD5 or SHA1 on you!  I can call <code>freeze</code> on these classes, but I have to do it on a class-by-class basis, and other scripts might modify them before I finish securing my application if I'm not <strong>very</strong> careful about load order.</p>

<p>Java provides lots of other tools for defensive programming, many of which are not possible in Ruby.  (See Josh Bloch's book for a good list.)  Is this really a concern?  Should I just stop complaining and use Ruby for lightweight things and not hope for ""enterprise-ready"" solutions?</p>

<p>(And no, core classes are not frozen by default in Ruby.  See below:)</p>

<pre><code>require 'md5'
# =&gt; true
MD5.frozen?
# =&gt; false
</code></pre>
","2988","jwmittag","<p>I don't think this is a concern.</p>

<p>Yes, the mythical ""somebody"" can replace the implementation of MD5 with something insecure. But in order to do that, the mythical somebody must actually be able to get his code into the Ruby process. And if he can do that, then he presumably could also inject his code into a Java process and e.g. rewrite the bytecode for the MD5 operation. Or just intercept the keypresses and not actually bother with fiddling with the cryptography code at all.</p>

<p>One of the typical concerns is: I'm writing this awesome library, which is supposed to be used like so:</p>

<pre><code>require 'awesome'
# Do something awesome.
</code></pre>

<p>But what if someone uses it like so:</p>

<pre><code>require 'evil_cracker_lib_from_russian_pr0n_site'
# Overrides crypto functions and sends all data to mafia
require 'awesome'
# Now everything is insecure because awesome lib uses 
# cracker lib instead of builtin
</code></pre>

<p>And the simple solution is: don't do that! Educate your users that they shouldn't run untrusted code they downloaded from obscure sources in their security critical applications. And if they do, they probably deserve it.</p>

<p>To come back to your Java example: it's true that in Java you can make your crypto code <code>private</code> and <code>final</code> and what not. However, someone can <em>still</em> replace your crypto implementation! In fact, someone actually did: many open-source Java implementations use OpenSSL to implement their cryptographic routines. And, as you probably know, Debian shipped with a broken, insecure version of OpenSSL for years. So, all Java programs running on Debian for the past couple of years actually <em>did</em> run with insecure crypto!</p>
"
"<p>I mostly use Java and generics are relatively new. I keep reading that Java made the wrong decision or that .NET has better implementations etc. etc.</p>

<p>So, what are the main differences between C++, C#, Java in generics? Pros/cons of each?</p>
","2988","jwmittag","<p>There are already a lot of good answers on <em>what</em> the differences are, so let me give a slightly different perspective and add the <em>why</em>.</p>

<p>As was already explained, the main difference is <em>type erasure</em>, i.e. the fact that the Java compiler erases the generic types and they don't end up in the generated bytecode. However, the question is: why would anyone do that? It doesn't make sense! Or does it?</p>

<p>Well, what's the alternative? If you don't implement generics in the language, where <em>do</em> you implement them? And the answer is: in the Virtual Machine. Which breaks backwards compatibility.</p>

<p>Type erasure, on the other hand, allows you to mix generic clients with non-generic libraries. In other words: code that was compiled on Java 5 can still be deployed to Java 1.4.</p>

<p>Microsoft, however, decided to break backwards compatibility for generics. <em>That's</em> why .NET Generics are ""better"" than Java Generics.</p>

<p>Of course, Sun aren't idiots or cowards. The reason why they ""chickened out"", was that Java was significantly older and more widespread than .NET when they introduced generics. (They were introduced roughly at the same time in both worlds.) Breaking backwards compatibility would have been a huge pain.</p>

<p>Put yet another way: in Java, Generics are a part of the <em>Language</em> (which means they apply <em>only</em> to Java, not to other languages), in .NET they are part of the <em>Virtual Machine</em> (which means they apply to <em>all</em> languages, not just C# and Visual Basic.NET).</p>

<p>Compare this with .NET features like LINQ, lambda expressions, local variable type inference, anonymous types and expression trees: these are all <em>language</em> features. That's why there are subtle differences between VB.NET and C#: if those features were part of the VM, they would be the same in <em>all</em> languages. But the CLR hasn't changed: it's still the same in .NET 3.5 SP1 as it was in .NET 2.0. You can compile a C# program that uses LINQ with the .NET 3.5 compiler and still run it on .NET 2.0, provided that you don't use any .NET 3.5 libraries. That would <em>not</em> work with generics and .NET 1.1, but it <em>would</em> work with Java and Java 1.4.</p>
"
"<p>I've got a Sound Blaster Audigy 2 ZS (Part # SB0350) that I'm installing as part of a computer that I'm building. There's a nifty headphone and speaker jack pair mounted on the case which I would like to connect, and I'm not sure if it's possible.</p>

<p>Have:
4 pins to connect: Mic-In, L-Out, R-Out, Ground.  Pretty intuitive.
The following outputs on the sound card:
TAD, CD_IN, AUX_IN, CD_SPDIF, and an unlabled white 10-pin connector.</p>

<p>Does anyone know the pin values of TAD, CD_IN, ..., or the magical white connector? Or, perhaps, access to the manual of this card?</p>
","2988","jwmittag","<p>If all else fails, you could just grab (quite literally) the ""legs"" of the jacks on the card.</p>
"
"<p>I would like to add the following MIME type to a site run by Apache:</p>

<pre><code>&lt;mime-mapping&gt;
  &lt;extension&gt;jnlp&lt;/extension&gt;
  &lt;mime-type&gt;application/x-java-jnlp-file&lt;/mime-type&gt;
&lt;/mime-mapping&gt;
</code></pre>

<p>(That is the Tomcat format.)</p>

<p>I'm on a shared host, so I can only create an .htaccess file. Would someone please specify the complete contents of such a file?</p>
","2988","jwmittag","<pre><code>AddType application/x-java-jnlp-file .jnlp
</code></pre>

<p>Note that you might not actually be allowed to do that.</p>

<p>See also the <a href=""http://HTTPd.Apache.Org/docs/trunk/mod/mod_mime.html#addtype"">documentation of the AddType directive</a> and the <a href=""http://HTTPd.Apache.Org/docs/trunk/howto/htaccess.html"">.htaccess howto</a>.</p>
"
"<p>I am currently using the following command to upload my site content:</p>

<pre><code>scp -r web/* user@site.com:site.com/
</code></pre>

<p>This works great except that the .htaccess file is not sent. Presumably, this is because it's hidden.</p>

<p>I have tried adding a second line to send the file explicitely:</p>

<pre><code>scp -r web/.htaccess user@site.com:site.com/.htaccess
</code></pre>

<p>This works great except now I have to enter my password twice.</p>

<p>Any thoughts on how to make this deploy with only 1 or 0 entries of my password?</p>
","2988","jwmittag","<p>Some background info: the <code>*</code> wildcard does not match so-called ""dot-files"" (i.e. files whose name begins with a dot).</p>

<p>Some shells allow you to set an option, so that it <em>will</em> match dot-files, however, doing that is asking for a lot of pain: now <code>*</code> will also match <code>.</code> (the current directory) and <code>..</code> (the parent directory), which is usually not what is intended and can be quite surprising! (<code>rm -rf *</code> deleting the parent directory is probably not the best way to start a day ...)</p>
"
"<p>I'm writing a php script that involves scraping web pages. Currently, the script analyzes the page line by line, but it breaks if there is a tag that spans multiple lines, like </p>

<pre><code>&lt;img src=""example.jpg""
alt=""example""&gt;
</code></pre>

<p>If worse comes to worse, I could possibly preprocess the page by removing all line breaks, then re-inserting them at the closest >, but this seems like a kludge.</p>

<p>Ideally I'd be able to detect a tag that spans lines, conjoin only those to lines, and continue processing. So what's the best method to detect this?</p>
","2988","jwmittag","<p>This is one of my pet peeves: <em>never</em> parse HTML by hand. <em>Never</em> parse HTML with regexps. <em>Never</em> parse HTML with string comparisons. <em>Always</em> use an HTML parser to parse HTML – that's what they're there for.</p>

<p>It's been a long time since I've done any PHP, but a quick search turned up <a href=""http://SimpleHTMLDom.SourceForge.Net/"">this PHP5 HTML parser</a>.</p>
"
"<p>This is a follow on question to ""<a href=""http://stackoverflow.com/questions/33778/how-do-i-delete-1-file-from-a-revision-in-svn"" rel=""nofollow"">How do I delete 1 file from a revision in SVN?</a>"" but because it probably has a very different answer and I believe that others would benefit from knowing the answer. (I don't know the answer yet.)</p>

<p>The previous question was answered and I discovered that that it is not possible to remove a revision from SVN. The second best solution was to remove the file from SVN, commit and then add the file back and commit again.</p>

<p>I now want to make sure that the original file's revision history has gone. So I am hoping that the answer to the question ""How can I find the revision history of the file that was deleted and then resubmitted to SVN?"" is that you can't.</p>
","2988","jwmittag","<p>What makes you think that it is not possible to remove a revision from Subversion? The solution given to your other question (<code>svndumpfilter</code>) does exactly that (see the parameters <code>--drop-empty-revs</code> and <code>--renumber-revs</code>)! And when the revision is gone, there's obviously no way to get at the revision history, because it was never there in the first place.</p>
"
"<p>What's the most useful hack you've discovered for Mozilla's new <a href=""http://labs.mozilla.com/2008/08/introducing-ubiquity/"" rel=""nofollow"">Ubiquity</a> tool?</p>
","2988","jwmittag","<p>I just wrote this:</p>

<pre><code>makeSearchCommand({
  name: ""stackoverflow-tagsearch"",
  author: { name: ""Jörg W Mittag"", email: ""JoergWMittag+Ubiquity@GoogleMail.Com""},
  license: ""MIT X11"",
  url: ""http://Beta.StackOverflow.Com/questions/tagged/{QUERY}"",
  icon: ""http://StackOverflow.Com/favicon.ico"",
  description: ""Searches &lt;a href=\""http://StackOverflow.Com\""&gt;StackOverflow.Com&lt;/a&gt; for the given tag(s)."",
  help: ""Searches &lt;a href=\""http://StackOverflow.Com\""&gt;StackOverflow.Com&lt;/a&gt; for the given tag(s)."",
  preview: function(pBlock, directObj) {
  if (directObj.text)
    pBlock.innerHtml = ""Searches &lt;a href=\""http://StackOverflow.Com\""&gt;StackOverflow.Com&lt;/a&gt; for "" + directObj.text;
  else
    pBlock.innerHTML = ""Searches &lt;a href=\""http://StackOverflow.Com\""&gt;StackOverflow.Com&lt;/a&gt; for the given tag(s)."";
  }
});
</code></pre>

<p>Nice toy!</p>

<p>Now I need to figure out how to HTTP POST to <a href=""http://Beta.StackOverflow.Com/search"" rel=""nofollow"">http://Beta.StackOverflow.Com/search</a> with JQuery and Ubiquity ... If only there was a site where I could ask that question!</p>
"
"<p>I know about the ""cooperative"" threading of ruby using <a href=""http://en.wikipedia.org/wiki/Green_threads"">green threads</a>. How can I create real ""OS-level"" threads in my application in order to make use of multiple cpu cores for processing?</p>
","2988","jwmittag","<p><strong>Updated with Jörg's Sept 2011 comment</strong></p>

<p>You seem to be confusing two <em>very</em> different things here: the 
Ruby Programming Language and the specific threading model of one 
specific implementation of the Ruby Programming Language. There 
are currently around 11 different implementations of the Ruby 
Programming Language, with <em>very</em> different and unique threading 
models.</p>

<p>(Unfortunately, only two of those 11 implementations are actually 
ready for production use, but by the end of the year that number 
will probably go up to four or five.) (<strong>Update</strong>: it's now 5: MRI, JRuby, YARV (the interpreter for Ruby 1.9), Rubinius and IronRuby).</p>

<ol>
<li><p>The first implementation doesn't actually have a name, which 
makes it quite awkward to refer to it and is really annoying and 
confusing. It is most often referred to as ""Ruby"", which is even 
more annoying and confusing than having no name, because it 
leads to endless confusion between the features of the Ruby 
Programming Language and a particular Ruby Implementation.</p>

<p>It is also sometimes called ""MRI"" (for ""Matz's Ruby 
Implementation""), CRuby or MatzRuby.</p>

<p><a href=""http://RedMine.Ruby-Lang.Org/repositories/annotate/ruby-18/ext/thread/thread.c"">MRI implements Ruby Threads as Green Threads within its 
interpreter</a>. Unfortunately, it doesn't allow those threads 
to be scheduled in parallel, they can only run one thread at a 
time.</p>

<p>However, any number of C Threads (POSIX Threads etc.) can run 
in parallel to the Ruby Thread, so external C Libraries, or MRI 
C Extensions that create threads of their own can still run in 
parallel.</p></li>
<li><p>The second implementation is <a href=""http://WWW.AtDot.Net/yarv/"">YARV</a> (short for ""Yet 
Another Ruby VM""). <a href=""http://RedMine.Ruby-Lang.Org/repositories/annotate/ruby-19/thread.c"">YARV implements Ruby Threads as POSIX or 
Windows NT Threads</a>, however, it uses a Global Interpreter 
Lock (GIL) to ensure that only one Ruby Thread can actually be 
scheduled at any one time.</p>

<p>Like MRI, C Threads <em>can</em> actually run parallel to Ruby Threads.</p>

<p>In the future, it is possible, that the GIL <em>might</em> get broken 
down into more fine-grained locks, thus allowing more and more 
code to actually run in parallel, but that's so far away, it is 
not even <em>planned</em> yet.</p></li>
<li><p><a href=""http://JRuby.Org/"">JRuby</a> <a href=""http://SVN.JRuby.CodeHaus.Org/browse/jruby/trunk/jruby/src/org/jruby/RubyThread.java?r=HEAD"">implements Ruby Threads as Native Threads</a>, 
where ""Native Threads"" in case of the JVM obviously means ""JVM 
Threads"". JRuby imposes no additional locking on them. So, 
whether those threads can actually run in parallel depends on 
the JVM: some JVMs implement JVM Threads as OS Threads and some 
as Green Threads. (The mainstream JVMs from Sun/Oracle use exclusively OS threads since JDK 1.3)</p></li>
<li><p><a href=""http://XRuby.GoogleCode.Com/"">XRuby</a> also <a href=""http://Code.Google.Com/p/xruby/source/browse/trunk/src/com/xruby/runtime/builtin/RubyThread.java#21"">implements Ruby Threads as JVM Threads</a>. <strong>Update</strong>: XRuby is dead.</p></li>
<li><p><a href=""http://IronRuby.Net/"">IronRuby</a> <a href=""http://IronRuby.RubyForge.Org/svn/trunk/src/IronRuby.Libraries/Builtins/ThreadOps.cs"">implements Ruby Threads as Native Threads</a>, 
where ""Native Threads"" in case of the CLR obviously means 
""CLR Threads"". IronRuby imposes no additional locking on them, 
so, they should run in parallel, as long as your CLR supports 
that.</p></li>
<li><p><a href=""http://RubyDotNetCompiler.GoogleCode.Com/"">Ruby.NET</a> also <a href=""http://Code.Google.Com/p/rubydotnetcompiler/source/browse/trunk/src/RubyRuntime/Built-in%20Classes/Thread.cs#21"">implements Ruby Threads as CLR 
Threads</a>. <strong>Update:</strong> Ruby.NET is dead.</p></li>
<li><p><a href=""http://Rubini.us/"">Rubinius</a> <a href=""https://GitHub.Com/EvanPhx/Rubinius/tree/master/kernel/core/thread.rb#L9"">implements Ruby Threads as Green Threads 
within its Virtual Machine</a>. More precisely: the Rubinius 
VM exports a very lightweight, very flexible 
concurrency/parallelism/non-local control-flow construct, called 
a ""<a href=""https://GitHub.Com/EvanPhx/Rubinius/tree/cpp/vm/builtin/task.cpp"">Task</a>"", and all other concurrency constructs (Threads in 
this discussion, but also <a href=""https://GitHub.Com/EvanPhx/Rubinius/tree/master/kernel/core/continuation.rb#L45"">Continuations</a>, <a href=""https://GitHub.Com/EvanPhx/Rubinius/tree/master/lib/actor.rb#L31"">Actors</a> and 
other stuff) are implemented in pure Ruby, using Tasks.</p>

<p>Rubinius can not (currently) schedule Threads in parallel, 
however, adding that isn't too much of a problem: Rubinius can 
already <a href=""https://GitHub.Com/EvanPhx/Rubinius/tree/master/kernel/core/vm.rb#L5"">run several VM instances in several POSIX Threads in 
parallel</a>, within one Rubinius process. Since Threads are 
actually implemented in Ruby, they can, like any other Ruby 
object, be serialized and sent to a different VM in a different 
POSIX Thread. (That's the same model the BEAM <a href=""http://Erlang.Org/"">Erlang</a> VM 
uses for SMP concurrency. It is already <a href=""https://GitHub.Com/EvanPhx/Rubinius/tree/master/lib/vmactor.rb"">implemented for 
Rubinius Actors</a>.)</p>

<p><strong>Update</strong>: The information about Rubinius in this answer is about the Shotgun VM, which doesn't exist anymore. The ""new"" C++ VM does not use green threads scheduled across multiple VMs (i.e. Erlang/BEAM style), it uses a more traditional single VM with multiple native OS threads model, just like the one employed by, say, the CLR, Mono, and pretty much every JVM.</p></li>
<li><p><a href=""http://MacRuby.Org/"">MacRuby</a> started out as a port of YARV on top of the 
Objective-C Runtime and CoreFoundation and Cocoa Frameworks. It 
has now significantly diverged from YARV, but AFAIK it currently 
still <a href=""http://MacRuby.Org/trac/browser/MacRuby/trunk/thread.c?annotate=blame"">shares the same Threading Model with YARV</a>.
<strong>Update:</strong> MacRuby depends on apples garbage collector which is declared deprecated and will be removed in later versions of MacOSX, MacRuby is undead.</p></li>
<li><p><a href=""http://Cardinal2.RubyForge.Org/"">Cardinal</a> is a Ruby Implementation for the <a href=""http://ParrotCode.Org/"">Parrot 
Virtual Machine</a>. It doesn't implement threads yet, however, 
when it does, it will probably implement them as <a href=""http://SVN.Perl.Org/viewvc/parrot/trunk/src/thread.c?view=annotate"">Parrot 
Threads</a>.</p></li>
<li><p><a href=""http://MagLev.GemStone.Com/"">MagLev</a> is a Ruby Implementation for the <a href=""http://GemStone.Com/products/smalltalk/"">GemStone/S 
Smalltalk VM</a>. I have no information what threading model 
GemStone/S uses, what threading model MagLev uses or even if 
threads are even implemented yet (probably not).</p></li>
<li><p><a href=""http://HotRuby.Yukoba.Jp/"">HotRuby</a> is <em>not</em> a full Ruby Implementation of its 
own. It is an implementation of a YARV bytecode VM in 
JavaScript. HotRuby doesn't support threads (yet?) and when it 
does, they won't be able to run in parallel, because JavaScript 
has no support for true parallelism. There is an ActionScript 
version of HotRuby, however, and ActionScript might actually 
support parallelism. <strong>Update</strong>: HotRuby is dead.</p></li>
</ol>

<p>Unfortunately, only two of these 11 Ruby Implementations are 
actually production-ready: MRI and JRuby.</p>

<p>So, if you want true parallel threads, JRuby is currently your 
only choice – not that that's a bad one: JRuby is actually faster 
than MRI, and arguably more stable.</p>

<p>Otherwise, the ""classical"" Ruby solution is to use processes 
instead of threads for parallelism. The Ruby Core Library 
contains the <a href=""http://Ruby-Doc.Org/core/classes/Process.html""><code>Process</code> module</a> with the <a href=""http://Ruby-Doc.Org/core/classes/Process.html#M003179""><code>Process.fork</code> 
method</a> which makes it dead easy to fork off another Ruby 
process. Also, the Ruby Standard Library contains the 
<a href=""http://Ruby-Doc.Org/stdlib/libdoc/drb/rdoc/"">Distributed Ruby (dRuby / dRb)</a> library, which allows Ruby 
code to be trivially distributed across multiple processes, not 
only on the same machine but also across the network.</p>
"
"<p>Greetings!</p>

<p>I'm working on a regular expression in a .NET project to get a specific tag.  I would like to match the entire DIV tag and its contents:</p>

<pre><code>&lt;html&gt;
   &lt;head&gt;&lt;title&gt;Test&lt;/title&gt;&lt;/head&gt;
   &lt;body&gt;
     &lt;p&gt;The first paragraph.&lt;/p&gt;
     &lt;div id='super_special'&gt;
        &lt;p&gt;The Store paragraph&lt;/p&gt;
     &lt;/div&gt;
     &lt;/body&gt;
  &lt;/head&gt;
</code></pre>

<p>Code:</p>

<pre><code>    Regex re = new Regex(""(&lt;div id='super_special'&gt;.*?&lt;/div&gt;)"", RegexOptions.Multiline);


    if (re.IsMatch(test))
        Console.WriteLine(""it matches"");
    else
        Console.WriteLine(""no match"");
</code></pre>

<p>I want to match this:</p>

<pre><code>&lt;div id=""super_special""&gt;
   &lt;p&gt;Anything could go in here...doesn't matter.  Let's get it all&lt;/p&gt;
&lt;/div&gt;
</code></pre>

<p>I thought . was supposed to get all characters, but it seems to having trouble with the cariage returns.  What is my regex missing?</p>

<p>Thanks.</p>
","2988","jwmittag","<p>Please, pretty please, do yourself a <em>huge</em> favor: use an HTML parser for parsing HTML. Seriously. That's what they are there for.</p>

<p>HTML is a <em>very</em> complex language. No matter <em>how long</em> you will be tweaking, fiddling, fixing, honing your Regexp, there will <em>always</em> be a case you're missing.</p>

<p>Anyway, you have to tell your Regexp engine to match multiple lines instead of just one. In some of the most popular ones you do that by applying the <code>/m</code> modifier.</p>

<p>But let me repeat: <em>please</em> use an HTML parser. Everytime someone uses a Regexp to parse HTML, a kitten dies ...</p>
"
"<p>What is the single most effective practice to prevent <a href=""http://en.wikipedia.org/wiki/Arithmetic_overflow"" rel=""nofollow"">arithmetic overflow</a> and <a href=""http://en.wikipedia.org/wiki/Arithmetic_underflow"" rel=""nofollow"">underflow</a>?</p>

<p>Some examples that come to mind are:</p>

<ul>
<li>testing based on valid input ranges</li>
<li>validation using formal methods</li>
<li>use of invariants</li>
<li>detection at runtime using language features or libraries (this does not prevent it)</li>
</ul>
","2988","jwmittag","<p>I think you are missing one very important option in your list: choose the right programming language for the job. There are many programming languages which do not have these problems, because they don't have fixed size integers.</p>
"
"<p>What are the characteristics of a multitasking operating system?<br>
What makes it multitasking?<br>
Are there non-multitasking operating systems?</p>
","2988","jwmittag","<p>There's a popular non-multitasking OS that's not been listed yet: PalmOS.</p>
"
"<p>If you were writing a new application from scratch today, and wanted it to scale to all the cores you could throw at it tomorrow, what parallel programming model/system/language/library would you choose?  Why?</p>

<p>I am particularly interested in answers along these axes:</p>

<ol>
<li>Programmer productivity / ease of use (can mortals successfully use it?)</li>
<li>Target application domain (what problems is it (not) good at?)</li>
<li>Concurrency style (does it support tasks, pipelines, data parallelism, messages...?)
<li>Maintainability / future-proofing (will anybody still be using it in 20 years?)</li>
<li>Performance (how does it scale on what kinds of hardware?)</li>
</ol>

<p>I am being deliberately vague on the nature of the application in anticipation of getting good general answers useful for a variety of applications.</p>
","2988","jwmittag","<p>Two solutions I really like are <a href=""http://Moscova.Inria.Fr/join/"">join calculus</a> (<a href=""http://JoCaml.Inria.Fr/"">JoCaml</a>, <a href=""http://Research.Microsoft.Com/~nick/polyphony/"">Polyphonic C#</a>, <a href=""http://Research.Microsoft.Com/COmega/"">Cω</a>) and the <a href=""http://Wikipedia.Org/wiki/Actor_model"">actor model</a> (<a href=""http://Erlang.Org/"">Erlang</a>, <a href=""http://Scala-Lang.Org/"">Scala</a>, <a href=""http://ERights.Org/"">E</a>, <a href=""http://IoLanguage.Com/"">Io</a>).</p>

<p>I'm not particularly impressed with <a href=""http://Wikipedia.Org/wiki/Software_transactional_memory"">Software Transactional Memory</a>. It just feels like it's only there to allow threads to cling on to life a little while longer, even though they should have died decades ago. However, it does have three major advantages:</p>

<ol>
<li>People understand transactions in databases</li>
<li>There is already talk of transactional RAM hardware</li>
<li>As much as we all wish them gone, threads are probably going to be the dominant concurrency model for the next couple of decades, sad as that may be. STM could significantly reduce the pain.</li>
</ol>
"
"<p>After reading Practical Common Lisp I finally understood what the big deal about macros was, and I have been looking for a language for the .NET platform that supports this. There are a few lisp dialects for .NET but from what I have been able to gather all are either very beta or abandoned. Recently my interest has been sparked by Clojure, but it's for the java platform and while on probably could use ikvm it doesn't feel some integrated. Especially when you want to do stuff like WPF.</p>

<p>Recently I have been hearing whisper about F#, I tried to look at the documentation if I could find anything about macro support, but haven't found it. So does anyone know?</p>

<p>Thanks :)</p>
","2988","jwmittag","<p>Have you looked at <a href=""http://Boo.CodeHaus.Org/"" rel=""nofollow"">Boo</a>? While Boo doesn't have macros, it has an open compiler pipeline, which is a good alternative to macros for syntactic metaprogramming.</p>

<p>[EDIT] As noted in the comments, Boo <em>does</em> have macros now.</p>
"
"<p>I'm using exim on both the sending and relay hosts, the sending host seems to offer:</p>

<pre><code>HELO foo_bar.example.com
</code></pre>

<p>Response: </p>

<pre><code>501 Syntactically invalid HELO argument(s)
</code></pre>
","2988","jwmittag","<p>The argument to <code>HELO</code> should be a hostname or an IP address. foo_bar.example.com is neither an IP address nor a hostname (underscores are illegal in hostnames), so the error message is correct and there is nothing to fix.</p>
"
"<p>What is your best practical user-friendly user-interface design or principle? </p>

<p>Please submit those practices that you find actually makes things really useful - no matter  what - if it works for your users, share it!</p>

<hr>

<p>Summary/Collation</p>

<p>Principles</p>

<ol>
<li>KISS.</li>
<li>Be clear and specific in what an option will achieve: for example, use verbs that indicate the action that will follow on a choice (see: Impl. 1).</li>
<li>Use obvious default actions appropriate to what the user needs/wants to achieve.</li>
<li>Fit the appearance and behavior of the UI to the environment/process/audience: stand-alone application, web-page, portable, scientific analysis, flash-game, professionals/children, ...</li>
<li>Reduce the learning curve of a new user.</li>
<li>Rather than disabling or hiding options, consider giving a helpful message where the user can have alternatives, but only where those alternatives exist. If no alternatives are available, its better to disable the option - which visually then states that the option is not available - do not hide the unavailable options, rather explain in a mouse-over popup why it is disabled.</li>
<li>Stay consistent and conform to practices, and placement of controls, as is implemented in widely-used successful applications.</li>
<li>Lead the expectations of the user and let your program behave according to those expectations.</li>
<li>Stick to the vocabulary and knowledge of the user and do not use programmer/implementation terminology.</li>
<li>Follow basic design principles: contrast (obviousness), repetition (consistency), alignment (appearance), and proximity (grouping).</li>
</ol>

<p>Implementation</p>

<ol>
<li>(See answer by paiNie) ""Try to use verbs in your dialog boxes.""</li>
<li>Allow/implement undo and redo.</li>
</ol>

<p>References</p>

<ol>
<li>Windows Vista User Experience Guidelines [http://msdn.microsoft.com/en-us/library/aa511258.aspx]</li>
<li>Dutch websites - ""Drempelvrij"" guidelines [http://www.drempelvrij.nl/richtlijnen]</li>
<li>Web Content Accessibility Guidelines (WCAG 1.0) [http://www.w3.org/TR/WCAG10/]</li>
<li>Consistence [http://www.amazon.com/Design-Everyday-Things-Donald-Norman/dp/0385267746]</li>
<li>Don't make me Think [http://www.amazon.com/Dont-Make-Me-Think-Usability/dp/0321344758/ref=pdbbssr_1?ie=UTF8&amp;s=books&amp;qid=1221726383&amp;sr=8-1]</li>
<li>Be powerful and simple [http://msdn.microsoft.com/en-us/library/aa511332.aspx]</li>
<li>Gestalt design laws [http://www.squidoo.com/gestaltlaws]</li>
</ol>
","2988","jwmittag","<p><em>Never</em> ask ""Are you sure?"". Just allow unlimited, reliable undo/redo.</p>
"
"<p>This is probably too much to ask, but is there any language that does a really terrific job of representing time and date operations?  I'll grant straight away that it's <b>really hard</b> to write a truly great time library.  That said, are there any widespread languages that have one?  Basically, I want something that handles time and date as comprehensively as modern regular expression libraries do their jobs. Everything I've seen so far in Python and Java omits one or more pretty important pieces, or makes too many things hard.</p>

<p>At least this should be intuitive to do:</p>

<ul>
<li>find the number of days between two given dates, number of minutes between two given minute periods, etc.  </li>
<li>add and subtract intervals from timestamps  </li>
<li>allow simple conversion between timezones, with Daylight Saving Time changes by region automatically accounted for (given that there's an accurate supporting database of regional settings available)  </li>
<li>get the period that a given timestamp falls into, given period granularity (""what calendar day is this date in?"")  </li>
<li>support very general string-to-date conversions (given a pattern)</li>
</ul>

<p>Further, if there's a Java-style Calendar/GregorianCalendar setup, the general Calendar class should be accommodating toward subclasses if I need to roll my own Hebrew, Babylonian, Tolkien, or MartianCalendar. (Java Calendars make this pointlessly hard, for example.)</p>

<p>I am completely language-agnostic here.  It's fine if the thing chokes on computing ambiguous stuff like ""how many minutes are there between 2002 and next Valentine's Day?""</p>
","2988","jwmittag","<p>There is a really cool programming language called <em><a href=""http://FutureBoy.Us/frinkdocs/"" rel=""nofollow"">Frink</a></em>. It supports pretty much every unit ever invented, every physical or mathematical constant, timezones, bla bla bla …</p>

<p>It even has a <a href=""http://FutureBoy.Us/frink/"" rel=""nofollow"">web interface</a> and a <a href=""http://FutureBoy.Us/frinkdocs/FrinkApplet.html"" rel=""nofollow"">Java Applet</a>.</p>

<p>Some of your challenges above:</p>

<ul>
<li>find the number of days between two given dates, number of minutes between two given minute periods, etc.
<ul>
<li>How many days till Christmas: <code># 2008-12-25 # - now[] -&gt; days</code></li>
<li>How long since noon: <code>now[] - # 12:00 # -&gt; minutes</code></li>
</ul></li>
<li>add and subtract intervals from timestamps
<ul>
<li>When was my million minutes birthday: <code># 1979-01-06 # + 1 million minutes</code></li>
</ul></li>
<li>allow simple conversion between timezones, with Daylight Saving Time changes by region automatically accounted for (given that there's an accurate supporting database of regional settings available)
<ul>
<li>When did the Beijing Olympics start in London: <code># 2008-08-08 08:08 PM China # -&gt; London</code></li>
</ul></li>
<li>support very general string-to-date conversions (given a pattern)
<ol>
<li>Define a new date format: <code>### dd.MM.yyyy ###</code></li>
<li>Parse: <code># 18.09.2008 #</code></li>
</ol></li>
</ul>

<p>Frink integrates nicely with Java: it can be <a href=""http://FutureBoy.Us/frinkdocs/#EmbeddingFrink"" rel=""nofollow"">embedded in Java applications</a> and Frink programs can <a href=""http://FutureBoy.Us/frinkdocs/#JavaIntrospection"" rel=""nofollow"">call Java code</a>.</p>
"
"<p>What would be a good offline alternative of the online <a href=""http://www.lipsum.com/feed/html"">Lipsum generator</a>? It's frustrating when I'm not online and need some placeholder text for testing purpose. A CLI utility would be ideal, so that I can tailor the output to fit my needs.</p>
","2988","jwmittag","<p>Slightly off-topic: try to avoid using lorem ipsum for layout testing!</p>

<p>The letter frequencies in Latin are way different than in e.g. English or German. There's lots of 'i' and 'l', i.e. lots of narrow letters.</p>
"
"<p>In Ruby, like in many other OO programming languages, operators are overloadable. However, only certain character operators can be overloaded.</p>

<p>This list may be incomplete but, here are some of the operators that cannot be overloaded:  </p>

<pre><code>!, not, &amp;&amp;, and, ||, or
</code></pre>
","2988","jwmittag","<p>In Ruby 1.9, the <code>!</code> operator is actually also a method and can be overriden. This only leaves <code>&amp;&amp;</code> and <code>||</code> and their low-precedence counterparts <code>and</code> and <code>or</code>.</p>

<p>There's also some other ""combined operators"" that cannot be overriden, e.g. <code>a != b</code> is actually <code>!(a == b)</code> and <code>a += b</code> is actually <code>a = a+b</code>.</p>
"
"<p>I would like to pass an argument(s) to a method being defined using define_method, how would I do that?</p>
","2988","jwmittag","<p>In addition to Kevin Conner's answer: block arguments do not support the same semantics as method arguments. You cannot define default arguments or block arguments.</p>

<p>This is only fixed in Ruby 1.9 with the new alternative ""stabby lambda"" syntax which supports full method argument semantics.</p>

<p>Example:</p>

<pre><code># Works
def meth(default = :foo, *splat, &amp;block) puts 'Bar'; end

# Doesn't work
define_method :meth { |default = :foo, *splat, &amp;block| puts 'Bar' }

# This works in Ruby 1.9 (modulo typos, I don't actually have it installed)
define_method :meth, -&gt;(default = :foo, *splat, &amp;block) { puts 'Bar' }
</code></pre>
"
"<p>As popular as Ruby and Rails are, it seems like this problem would already be solved. JRuby and mod_rails are all fine and dandy, but why isn't there an Apache mod for just straight Ruby?</p>
","2988","jwmittag","<p>The basic problem is this: for a long time, MRI was the only feasible Ruby Implementation. MRI has a number of problems that make it hard to embed it into another application (which is basically what <a href=""http://ModRuby.Net/"">mod_ruby</a> does: it embeds MRI in Apache), especially a multi-threaded one (which Apache is). It is not particularly thread-safe and it has quite a bit of global state.</p>

<p>This global state means for example that if one Rails application modifies some class, then <em>all other</em> Rails applications that run on the same Apache server, will <em>also</em> see this modified class.</p>

<p>Another problem is that the MRI source code is not easily hackable. MRI is now more than 15 years old, and it's starting to show.</p>

<p>As a result of these problems, mod_ruby has never <em>really</em> properly worked, and at some point the maintainers simply gave up.</p>

<p>The C based PHP interpreter, on the other hand, was designed from day one to be run as mod_php inside Apache. Indeed, for the first couple of versions, there wasn't even a commandline version of the interpreter, mod_php was the <em>only</em> way to run PHP.</p>

<p><a href=""http://ModRails.Com/"">Phusion Passenger (aka mod_rack aka mod_rails)</a> solves this problem by basically giving up and sidestepping the problem: they simply run a seperate copy of MRI in a seperate process for every application. It works great, and not only for Ruby. It supports <a href=""http://WSGI.Org/"">WSGI</a> (standard interface for Python Web Frameworks), <a href=""http://Rack.RubyForge.Org/"">Rack</a> (standard interface for Ruby Web Frameworks) and direct support for Ruby on Rails.</p>

<p>My hopes are on <a href=""https://GitHub.Com/rue/mod_rubinius/"">mod_rubinius</a>, which unfortunately doesn't exist yet. <a href=""http://Rubini.us/"">Rubinius</a> was designed from the beginning to be thread-safe, embeddable, free of global state, not use the C stack and so on. It was designed to be able to run multiple Rubinius VMs inside one Rubinius process. This makes mod_rubinius infinitely easier to implement and maintain than mod_ruby. Unfortunately, of course, Rubinius is not released yet, and the real work on mod_rubinius cannot even begin until Rubinius is released. The good news is that mod_rubinius already has more manpower behind it than mod_ruby ever had, because it has paid developers working on it by a Rails hosting company that <em>desperately</em> wants to use it themselves.</p>
"
"<p>Is anyone out there using RoR for large scale, business critical enterprise applications?</p>

<p>Are there any other lightweight web-frameworks based on dynamic languages that people are using for these types of apps?</p>

<p>If you're not using these types of application frameworks what's stopping you?  Is it simply the inertia associated with any large IT organization.  Are the speed and stability issues of these frameworks enough of a problem that they offset the improvements in development cycle times?</p>
","2988","jwmittag","<p>IBM, Oracle, Sun and JPMorgan Chase are only a few of the companies that use Ruby on Rails. It probably doesn't get more enterprisey than that.</p>
"
"<p>I'm developing a performance critical application for Intel Atom processor.</p>

<p>What are the best gcc optimization flags for this CPU?</p>
","2988","jwmittag","<p>There is a cool framework called <a href=""http://freecode.com/projects/acovea"" rel=""nofollow"" title=""Acovea (Analysis of Compiler Options via Evolutionary Algorithm) - Using Natural Selection to Investigate Software Complexities"">Acovea (Analysis of Compiler Options via Evolutionary Algorithm)</a>, by Scott Rober Ladd, one of the GCC hackers. It's a genetic/evolutionary algorithm framework that tries to optimize GCC optimization flags for a specific piece of code via natural selection.</p>

<p>It works something like this: you write a little piece of benchmark code (it <em>really</em> has to be little, because it will be re-compiled and executed several thousand times) that represents the performance characteristics of the larger program you want to optimize. Then Acovea randomly constructs some dozens of different GCC commandlines and compiles and runs your benchmark with each of them. The best of these commandlines are then allowed to ""mate"" and ""breed"" new ""children"" which (hopefully) inherit the best ""genes"" from their ""parents"". This process is repeated for a couple dozen ""generations"", until a stable set of commandline flags emerges.</p>
"
"<p>Just like it reads.</p>
","2988","jwmittag","<p>The simplest and shortest explanation that I have found is: ""The Semantic Web is to Machines what the World Wide Web is to Humans"".</p>

<p>And as to why you would want that: for the same reasons why you let your Machine compute Pi to the quadrillionth digit instead of doing that yourself. So you can focus on <em>interesting</em> problems and leave the menial work to the Machine.</p>
"
"<p>How do I add an empty directory (that contains no files) to a Git repository?</p>
","2988","jwmittag","<p>You can't. This is an intentional design decision by the Git maintainers. Basically, the purpose of a Source Code Management System like Git is managing source code and empty directories aren't source code. Git is also often described as a content tracker, and again, empty directories aren't content (quite the opposite, actually), so they are not tracked.</p>
"
"<p>What makes a language strongly typed? I'm looking for the most important aspects of a strongly typed language.</p>

<p>Yesterday I asked if PowerShell was strongly typed, but no one could agree on the definition of ""strongly-typed"", so I'm looking to clarify the definition.</p>

<p>Feel free to link to wikipedia or other sources, but don't just cut and paste for your answer.</p>
","2988","jwmittag","<p>The term ""strongly typed"" has no agreed-upon definition.</p>

<p>It makes a ""great"" argument in a flamewar, because whenever someone is proven wrong, they can just redefine it to mean whatever they want it to mean. Other than that, the term serves no real purpose.</p>

<p>It is best to just not use the term, or, if you use it, rigorously define it first. If you see someone else use it, ask him to define the term.</p>

<p>Everybody has their own definition. Some that I have seen are:</p>

<ul>
<li>strongly typed = statically typed</li>
<li>strongly typed = explicitly typed</li>
<li>strongly typed = nominally typed</li>
<li>strongly typed = typed</li>
<li>strongly typed = has no implicit typecasts, only explicit</li>
<li>strongly typed = has no typecasts at all</li>
<li>strongly typed = what I understand / weakly typed = what I don't understand</li>
<li>strongly typed = C++ / weakly typed = everything else</li>
<li>strongly typed = Java / weakly typed = everything else</li>
<li>strongly typed = .NET / weakly typed = everything else</li>
<li>strongly typed = <em>my</em> programming language / weakly typed = <em>your</em> programming language</li>
</ul>

<p>In Type Theory, there exists the notion of one type system being <em>stronger</em> than another. In particular, if there exists an expression <code>e1</code> such that it is accepted by a type system <code>T1</code>, but rejected by a type system <code>T2</code>, then <code>T2</code> is said to be <em>stronger</em> than <code>T1</code>. There are two important things to note here:</p>

<ol>
<li>this a comparative, not an absolute: there is no <em>strong</em> or <em>weak</em>, only <em>stronger</em> and <em>weaker</em></li>
<li>there is no value implied by the term; <em>stronger</em> does not mean <em>better</em></li>
</ol>
"
"<p>For one and a half years, I have been keeping my eyes on the git community in hopes of making the switch away from SVN.  One particular issue holding me back is the inability to lock binary files. Throughout the past year I have yet to see developments on this issue.  I understand that locking files goes against the fundamental principles of distributed source control, but I don't see how a web development company can take advantage of git to track source code and image file changes when there is the potential for binary file conflicts.</p>

<p>To achieve the effects of locking, a ""central"" repository must be identified.  Regardless of the distributed nature of git, most companies will have a ""central"" repository for a software project.  We should be able to mark a file as requiring a lock from the governing git repository at a specified address.  Perhaps this is made difficult because git tracks file contents not files?</p>

<p>Do any of you have experience in dealing with git and binary files that should be locked before modification?</p>

<p>NOTE: It looks like Source Gear's new open source distributed version control project, Veracity, has locking as one of its goals.</p>
","2988","jwmittag","<p>When I was using Subversion, I religiously set the <code>svn:needs-lock</code> property on all binary and even the hard-to-edit text files. I <em>never</em> actually experienced any conflicts.</p>

<p>Now, in Git, I don't worry about such things. Remember: locks in Subversion aren't actually mandatory locks, they are merely communication tools. And guess what: I don't need Subversion to communicate, I can manage just fine with E-Mail, Phone and IM.</p>

<p>Another thing I did, is to replace many binary formats with plain text formats. I use reStructuredText or La&#932;<sub>&Epsilon;</sub>&Chi; instead of Word, CSV instead of Excel, ASCII-Art instead of Visio, YAML instead of databases, SVG instead of OO Draw, abc instead of MIDI, and so on.</p>
"
"<p>Right now, we are using Perforce for version control. It has the handy feature of a strictly increasing change number that we can use to refer to builds, eg ""you'll get the bugfix if your build is at least 44902"".</p>

<p>I'd like to switch over to using a distributed system (probably git) to make it easier to branch and to work from home. (Both of which are perfectly possible with Perforce, but the git workflow has some advantages.) So although ""tributary development"" would be distributed and not refer to a common revision sequencing, we'd still maintain a master git repo that all changes would need to feed into before a build was created.</p>

<p>What's the best way to preserve strictly increasing build ids? The most straightforward way I can think of is to have some sort of post-commit hook that fires off whenever the master repo gets updated, and it registers (the hash of) the new tree object (or commit object? I'm new to git) with a centralized database that hands out ids. (I say ""database"", but I'd probably do it with git tags, and just look for the next available tag number or something. So the ""database"" would really be .git/refs/tags/build-id/.)</p>

<p>This is workable, but I'm wondering if there is an easier, or already-implemented, or standard/""best practice"" way of accomplishing this.</p>
","2988","jwmittag","<p>I second the suggestion of using <code>git describe</code>. Provided that you have a sane versioning policy, and you don't do any crazy stuff with your repository, <code>git describe</code> will always be monotonic (at least as monotonic as you can be, when your revision history is a DAG instead of a tree) and unique.</p>

<p>A little demonstration:</p>

<pre><code>git init
git commit --allow-empty -m'Commit One.'
git tag -a -m'Tag One.' 1.2.3
git describe    # =&gt; 1.2.3
git commit --allow-empty -m'Commit Two.'
git describe    # =&gt; 1.2.3-1-gaac161d
git commit --allow-empty -m'Commit Three.'
git describe    # =&gt; 1.2.3-2-g462715d
git tag -a -m'Tag Two.' 2.0.0
git describe    # =&gt; 2.0.0
</code></pre>

<p>The output of <code>git describe</code> consists of the following components:</p>

<ol>
<li>The newest tag reachable from the commit you are asking to describe</li>
<li>The number of commits between the commit and the tag (if non-zero)</li>
<li>The (abbreviated) id of the commit (if #2 is non-zero)</li>
</ol>

<p>#2 is what makes the output monotonic, #3 is what makes it unique. #2 and #3 are omitted, when the commit <em>is</em> the tag, making <code>git describe</code> also suitable for production releases.</p>
"
"<p>I wonder how long it would usually take for:</p>

<ol>
<li>Professional</li>
<li>Average</li>
<li>Beginner</li>
</ol>

<p>to setup and configure CI for a new project?</p>
","2988","jwmittag","<p>I have never set up CI before, which puts me squarely in your ""Beginner"" category. Your question nudged me to try and setup a CI system for my projects; something which I've always avoided, because I thought it would cost me a lot of effort and time.</p>

<p>It took me all of 20 minutes.</p>

<p>I used a <em>fantastic</em> project called <a href=""https://GitHub.Com/TheWoolleyMan/CInABox/"" rel=""nofollow"">CInABox (Continuous Integration in a Box)</a>. It consists of two simple scripts which download and compile Ruby and download, install and configure <a href=""http://CruiseControlRb.ThoughtWorks.Com/"" rel=""nofollow"">CruiseControl.rb</a> for Ubuntu 8.04.</p>

<p>In just 20 minutes, I downloaded Ubuntu JeOS 8.04, configured a VirtualBox VM, installed Ubuntu in that VM, setup networking, installed Ruby, installed CruiseControl.rb, added my first project to CC.rb and watched the light go green! The most time was actually spent downloading Ubuntu, downloading Ruby and installing Ubuntu. The actual CI setup took less than 5 minutes.</p>

<p>Don't let the name fool you: CC.rb is <em>written in</em> Ruby, but you can build <em>anything</em> with it. In the default configuration, it assumes that you are using <code>rake</code> to build your project, but by setting just one configuration option, you can just as well use a shell script.</p>
"
"<p>In C#, I can do this:</p>

<pre><code>class Program
{
    static void Main(string[] args)
    {
        List&lt;Animal&gt; animals = new List&lt;Animal&gt;();

        animals.Add(new Dog());
        animals.Add(new Cat());

        foreach (Animal a in animals)
        {
            Console.WriteLine(a.MakeNoise());
            a.Sleep();
        }
    }
}

public class Animal
{
    public virtual string MakeNoise() { return String.Empty; }
    public void Sleep()
    {
        Console.Writeline(this.GetType().ToString() + "" is sleeping."");
    }
}

public class Dog : Animal
{
    public override string MakeNoise()
    {
        return ""Woof!"";
    }
}

public class Cat : Animal
{
    public override string MakeNoise()
    {
        return ""Meow!"";
    }
}
</code></pre>

<p>Obviously, the output is (Slightly paraphrased):</p>

<ul>
<li>Woof</li>
<li>Dog is Sleeping</li>
<li>Meow</li>
<li>Cat is Sleeping</li>
</ul>

<p>Since C# is often mocked for its verbose type syntax, how do you handle polymorphism/virtual methods in a duck typed language such as Ruby?</p>
","2988","jwmittag","<p>This is how I  would write it:</p>

<pre><code>class Animal
  def make_noise; '' end
  def sleep; puts ""#{self.class.name} is sleeping."" end
end

class Dog &lt; Animal; def make_noise; 'Woof!' end end
class Cat &lt; Animal; def make_noise; 'Meow!' end end

[Dog.new, Cat.new].each do |animal|
  puts animal.make_noise
  animal.sleep
end
</code></pre>

<p>It's not <em>really</em> different from the other solutions, but this is the style that I would prefer.</p>

<p>That's 12 lines vs. the 41 lines (actually, you can shave off 3 lines by using a collection initializer) from the original C# example. Not bad!</p>
"
"<p>I keep hearing this term tossed around in several different contexts. What is it?</p>
","2988","jwmittag","<p>The other answers already do a fantastic job explaining what declarative programming is, so I'm just going to provide some examples of why that might be useful.</p>

<h1>Context Independence</h1>

<p>Declarative Programs are <em>context-independent</em>. Because they only declare what the ultimate goal is, but not the intermediary steps to reach that goal, the same program can be used in different contexts. This is hard to do with <em>imperative programs</em>, because they often depend on the context (e.g. hidden state).</p>

<p>Take <code>yacc</code> as an example. It's a parser generator aka. compiler compiler, an external declarative DSL for describing the grammar of a language, so that a parser for that language can automatically be generated from the description. Because of its context independence, you can do many different things with such a grammar: </p>

<ul>
<li>Generate a C parser for that grammar (the original use case for <code>yacc</code>)</li>
<li>Generate a C++ parser for that grammar</li>
<li>Generate a Java parser for that grammar (using Jay)</li>
<li>Generate a C# parser for that grammar (using GPPG)</li>
<li>Generate a Ruby parser for that grammar (using Racc)</li>
<li>Generate a tree visualization for that grammar (using GraphViz)</li>
<li>simply do some pretty-printing, fancy-formatting and syntax highlighting of the yacc source file itself and include it in your Reference Manual as a syntactic specification of your language</li>
</ul>

<p>And many more &hellip;</p>

<h1>Optimization</h1>

<p>Because you don't prescribe the computer which steps to take and in what order, it can rearrange your program much more freely, maybe even execute some tasks in parallel. A good example is a query planner and query optimizer for a SQL database. Most SQL databases allow you to display the query that they are <em>actually</em> executing vs. the query that you <em>asked</em> them to execute. Often, those queries look <em>nothing</em> like each other. The query planner takes things into account that you wouldn't even have dreamed of: rotational latency of the disk platter, for example or the fact that some completely different application for a completely different user just executed a similar query and the table that you are joining with and that you worked so hard to avoid loading is already in memory anyway.</p>

<p>There is an interesting trade-off here: the machine has to work harder to figure out <em>how</em> to do something than it would in an imperative language, but when it <em>does</em> figure it out, it has much more freedom and much more information for the optimization stage.</p>
"
"<p>I ruined several unit tests some time ago when I went through and refactored them to make them more <a href=""http://en.wikipedia.org/wiki/Don%27t_repeat_yourself"">DRY</a>--the intent of each test was no longer clear.  It seems there is a trade-off between tests' readability and maintainability.  If I leave duplicated code in unit tests, they're more readable, but then if I change the <a href=""http://en.wikipedia.org/wiki/System_Under_Test"">SUT</a>, I'll have to track down and change each copy of the duplicated code.</p>

<p>Do you agree that this trade-off exists?  If so, do you prefer your tests to be readable, or maintainable?</p>
","2988","jwmittag","<p>Jay Fields coined the phrase that ""DSLs should be DAMP, not DRY"", where <em>DAMP</em> means <em>descriptive and meaningful phrases</em>. I think the same applies to tests, too. Obviously, too much duplication is bad. But removing duplication at all costs is even worse. Tests should act as intent-revealing specifications. If, for example, you specify the same feature from several different angles, then a certain amount of duplication is to be expected.</p>
"
"<p>When coding, what in your experience is a better approach? </p>

<ol>
<li>Break the problem down into small enough pieces and then implement each piece.</li>
<li>Break the problem down, but then implement using a top-down approach.</li>
<li>Any other?</li>
</ol>
","2988","jwmittag","<p>Both are valid approaches. Sometimes one just ""feels"" more natural than the other. However, there is one big problem: some mainstream languages and especially their frameworks and libraries really <em>heavily</em> on IDE support, such as syntax highlighting, background type checking, background compilation, intelligent code completion, IntelliSense and so on.</p>

<p>However, <em>this doesn't work with top-down coding!</em> In top-down coding, you constantly use variables, fields, constants, functions, procedures, methods, classes, modules, traits, mixins, aspects, packages and types <em>that you haven't implemented yet!</em> So, the IDE will constantly yell at you because of compile errors, there will be red squiggly lines everywhere, you will get no code completion and so on. So, the IDE pretty much <em>prohibits</em> you from doing top-down coding.</p>
"
"<p>I want to make my own operating system for the X86 architecture.</p>

<p>What would be the best language to use? (Along with assem of course)</p>

<p>What would the best compiler for the language be on a windows environment?</p>

<p>Are there any good tutorials on this subject?</p>

<p>Is it better to test it using an emulator or physical pc?</p>
","2988","jwmittag","<p>It doesn't really matter, what language you choose. If the language is Turing-complete, then you can write an OS in it.</p>

<p>However, the expressiveness of the language will make certain kinds of designs very easy or very hard to implement. For example, the ""liveliness"" and dynamism of the old Smalltalk OSs depends on the fact that they are implemented in Smalltalk. You <em>could</em> do that in C, too, but it would probably be so hard that you wouldn't even think about it. JavaScript or Ruby OTOH would probably be a great fit.</p>

<p><a href=""http://Research.Microsoft.Com/OS/Singularity/"" rel=""nofollow"">Microsoft Research's Singularity</a> is another example. It simply couldn't be implemented in anything other than Sing#, <a href=""http://Research.Microsoft.Com/SpecSharp/"" rel=""nofollow"">Spec#</a> and <a href=""http://MSDN.Microsoft.Com/vcsharp/"" rel=""nofollow"">C#</a> (or similar languages), because so much of the architecture is dependent on the static type safety and static verifiability of those languages.</p>

<p>One thing to keep in mind: the design space for OSs implemented in C is pretty much fully explored. There's literally thousands of them. In other languages, however, you might actually discover something that nobody has discovered before! There's only about a dozen or so OSs written in Java, about half a dozen in C#, something on the order of two OSs in Haskell, only <em>one</em> in Python and <em>none</em> in Ruby or JavaScript.</p>

<p>Try writing an OS in Erlang or Io, and see how that influences your thinking about Operating Systems!</p>
"
"<p>I have used ""traditional"" version control systems to maintain source code repositories on past projects. I am starting a new project with a distributed team and I can see advantages to using a distributed system. Given that I understand SourceSafe, CVS, and Subversion; what suggestions do you have for a Git newbie?</p>
","2988","jwmittag","<p>In my own experience moving from Subversion to Git, the most important thing is not what you need to learn, but what you need to <em>unlearn</em>. Distributed Version Control is <em>very</em> different from Centralized Version Control. CVC is a subset of DVC, so you can just do CVC in a DVC tool, but it will be more complicated than with a CVC tool.</p>

<p>Try to unlearn CVC, and get in the DVC mindset. If you just end up doing CVC in a DVC tool, you will merely be frustrated by all the added complexity and you will not realize what that added complexity is buying you in terms of flexibility.</p>

<p>All DVC tools have <em>great</em> and very powerful support for branching and merging. Use it. All the history is available at your fingertips. Use it. (For example: never comment out code, just delete it. You can always get it back, even on an airplane with no internet connection.)</p>

<p>One very important aspect of Git: all other tools have a more or less defined workflow. Git doesn't. Git is a DVCS workflow construction kit. This makes it sometimes hard to know what to do: you have to design and implement your own workflow (hint: use lots of shell scripts). I use Git for more than a year now, and I still haven't completely figured out my workflow yet.</p>
"
"<p>I've recently purchased an IBM Thinkpad that came with a fingerprint scanner. That got me thinking: are fingerprint scanners a good way to protect your code i.e. if someone takes your laptop or goes on your laptop while you're away, would they still be able to get in?</p>

<p>The question also applies for other biometrics techniques that the new Thinkpads have (iris scans, I believe).</p>

<p>Are there other ways of physically protecting your code? </p>
","2988","jwmittag","<p>Fingerprint readers offer <em>zero</em> protection for stolen laptops. Why? Your fingerprints are all over the thing!</p>
"
"<p>I understand that IronPython is an implementation of Python on the .NET platform just like IronRuby is an implementation of Ruby and F# is more or less OCaml.  </p>

<p>What I can't seem to grasp is whether these languages perform closer to their ""ancestors"" or closer to something like C# in terms of speed.  For example, is IronPython somehow ""compiled"" down to the same bytecode used by C# and, therefore, will run just as fast?</p>
","2988","jwmittag","<p>IronPython is actually the fastest Python implementation out there. For some definition of ""fastest"", at least: the startup overhead of the CLR, for example, is <em>huge</em> compared to CPython. Also, the optimizing compiler IronPython has, really only makes sense, when code is executed multiple times.</p>

<p>IronRuby has the potential to be as fast IronPython, since many of the interesting features that make IronPython fast, have been extracted into the Dynamic Language Runtime, on which both IronPython and IronRuby (and Managed JavaScript, Dynamic VB, IronScheme, VistaSmalltalk and others) are built.</p>

<p>In general, the speed of a language implementation is pretty much independent of the actual language features, and more dependent on the number of engineering man-years that go into it. IOW: dynamic vs. static doesn't matter, money does.</p>

<p>E.g., Common Lisp is a language that is even more dynamic than Ruby or Python, and yet there are Common Lisp compilers out there that can even give C a run for its money. Good Smalltalk implementations run as fast as Java (which is no surprise, since both major JVMs, Sun HotSpot and IBM J9, are actually just slightly modified Smalltalk VMs) or C++. In just the past 6 months, the major JavaScript implementations (Mozilla TraceMonkey, Apple SquirrelFish Extreme and the new kid on the block, Google V8) have made <em>ginormous</em> performance improvements, 10x and more, to bring JavaScript head-to-head with un-optimized C.</p>
"
"<p><a href=""http://en.wikipedia.org/wiki/Total_functional_programming"">Wikipedia</a> has this to say:</p>

<blockquote>
  <p>Total functional programming (also
  known as strong functional
  programming, to be contrasted with
  ordinary, or weak functional
  programming) is a programming paradigm
  which restricts the range of programs
  to those which are provably
  terminating.</p>
</blockquote>

<p>and</p>

<blockquote>
  <p>These restrictions mean that total
  functional programming is not
  Turing-complete. However, the set of
  algorithms which can be used is still
  huge. For example, any algorithm which
  has had an asymptotic upper bound
  calculated for it can be trivially
  transformed into a
  provably-terminating function by using
  the upper bound as an extra argument
  which is decremented upon each
  iteration or recursion.</p>
</blockquote>

<p>There is also a Lambda The Ultimate Post about a paper on <a href=""http://lambda-the-ultimate.org/node/2003"">Total Functional Programming</a>.</p>

<p>I hadn't come across that until last week on a mailing list.</p>

<p>Are there any more resources, references or any example implementations that you know of?</p>
","2988","jwmittag","<p>If I understood that correctly, Total Functional Programming means just that: Programming with Total Functions. If I remember my math courses correctly, a Total Function is a function which is defined over its entire domain, a Partial Function is one which has ""holes"" in its definition.</p>

<p>Now, if you have a function which for some input value <code>v</code> goes into an infinite recursion or an infinite loop or in general doesn't terminate in some other fashion, then your function isn't defined for <code>v</code>, and thus partial, i.e. not total.</p>

<p>Total Functional Programming doesn't allow you to write such a function. All functions always return a result for all possible inputs; and the type checker ensures that this is the case.</p>

<p>My guess is that this vastly simplifies error handling: there aren't any.</p>

<p>The downside is already mentioned in your quote: it's not Turing-complete. E.g. an Operating System is essentially a giant infinite loop. Indeed, we do not <em>want</em> an Operating System to terminate, we call this behaviour a ""crash"" and yell at our computers about it!</p>
"
"<p>I've begun to use TDD.  As mentioned in <a href=""http://stackoverflow.com/questions/64333/what-is-the-downside-to-test-driven-development#64402"">an earlier question</a> the biggest difficulty is handling interface changes.  How do you reduce the impact on your test cases as requirements change?</p>
","2988","jwmittag","<p>In TDD, your tests aren't tests. They are executable specifications. IOW: they are an executable encoding of your requirements. <em>Always</em> keep that in mind.</p>

<p>Now, suddenly it becomes obvious: if your requirements change, the tests <em>must</em> change! That's the whole point of TDD!</p>

<p>If you were doing waterfall, you would have to change your specification document. In TDD, you have to do the same, except that your specification isn't written in Word, it's written in xUnit.</p>
"
"<p>It sounds like Mozilla is having good luck improving JavaScript performance with <a href=""http://weblogs.mozillazine.org/roadmap/archives/2008/08/tracemonkey_javascript_lightsp.html"">TraceMonkey</a>. See also Andreas Gal's <a href=""http://www.ics.uci.edu/~franz/Site/pubs-pdf/ICS-TR-06-16.pdf"">paper on Trace Trees</a>.</p>

<p>Are these improvements available to other interpreters/compilers and if so, does this mean we'll see a cascade of improvements in other interpreted languages?</p>
","2988","jwmittag","<p>There's a research JVM by Andreas Gal called <a href=""http://HotPath.Org/"" rel=""nofollow"">HotPath</a>, and some people from his team are currently working on adding nested trace tree based JITting to <a href=""http://Research.Sun.Com/projects/maxine/"" rel=""nofollow"">Maxine</a> (Sun's new research JVM written in Java) and HotSpot. So, at least it is showing up in other VMs for other languages as well.</p>

<p>Also, the new <a href=""http://PyPy.Org/"" rel=""nofollow"">PyPy</a> JIT compiler (currently being prototyped in Prolog) uses some kind of tracing technique, although I don't know how closely related that is to Gal/Franz style nested trace trees.</p>

<p>The <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a> guys are definitely aware of this work, and very open to experimentation. I wouldn't be surprised, if some advanced compilation techniques start showing up there, soon.</p>

<p>BTW: there is a Ruby VM written in JavaScript, called <a href=""http://HotRuby.Accelart.Jp/"" rel=""nofollow"">HotRuby</a>. If you run that on TraceMonkey, you get trace tree based Ruby for free :-)</p>
"
"<p>I'm wondering which languages support (or don't support) native multithreading, and perhaps get some details about the implementation.  Hopefully we can produce a complete overview of this specific functionality.</p>
","2988","jwmittag","<p>This question doesn't make sense: whether a particular implementation chooses to implement threads as native threads or green threads has nothing to do with the language, that is an internal implementation detail.</p>

<p>There are Java implementations that use native threads and Java implementations that use green threads.<br />
There are Ruby implementations that use native threads and Ruby implementations that use green threads.<br />
There are Python implementations that use native threads and Python implementations that use green threads.<br />
There are even POSIX Thread implementations that use green threads, e.g. the old LinuxThreads library or the GNU pth library.</p>

<p>And just because an implementation uses native threads doesn't mean that these threads can actually run in parallel; many implementations use a Global Interpreter Lock to ensure only one thread can run at a time. On the other hand, using green threads doesn't mean that they can't run in parallel: the BEAM Erlang VM for example can schedule its green threads (more precisely green processes) across mulitple CPU cores, the same is planned for the Rubinius Ruby VM.</p>
"
"<p>What do you think about this <a href=""http://raven.rubyforge.org/"" rel=""nofollow"">build tool</a>? I'm thinking of migrating from maven2 to raven (my poms are getting bigger and bigger), but I'd like to hear some opinions first.</p>

<p>Thanks!</p>

<p>@andre:</p>

<p>Thank's for writing but I was actually looking for real experiences using raven. Anyway, the fact that nobody wrote is an indicator by itself (it seems few people are using it)</p>
","2988","jwmittag","<p>I haven't used either Raven or <a href=""http://Incubator.Apache.Org/buildr/"" rel=""nofollow"">Buildr</a>, but I have heard good things about the latter. In <a href=""http://Blog.LabNotes.Org/2007/05/03/buildr-or-when-ruby-is-faster-than-java/"" rel=""nofollow"">this blog article by Assaf Arkin</a>, there is a nice case study: a 5,443 line, 52 file Maven configuration was reduced to 485 lines of Buildr. And, even though everybody says ""Ruby is slow"", Buildr was 2-6x faster than Maven.</p>

<p>Also, unlike Raven, Buildr seems to still be maintained: it is currently in the incubator stage as an official Apache project.</p>
"
"<p>What are the alternative ""design methods"" to the Model View Controller? MVC seems to be popular (SO was built with it, I know that much) but is it the only method used?</p>
","2988","jwmittag","<p>One of the best write-ups of several different Interactive Application Architecture Patterns out there, is <a href=""http://lostechies.com/derekgreer/2007/08/25/interactive-application-architecture/"">this very detailed and well-researched blog-post</a>. It covers Model-View-Controller, three different flavors of Model-View-Presenter, several different flavors of Presentation-Abstraction-Control, Supervising Controller, Passive View and Hierarchical MVC.</p>

<p>Another interesting pattern is the <a href=""http://AtomicObject.Com/pages/Presenter+First/"">Presenter First</a> pattern by Atomic Objects. It's not just a Design Pattern, it's also a Process Pattern. IOW: the name ""Presenter First"" is not arbitrary, it actually describes a development process, in which the Presenter gets written first, driving the design of the rest of the system.</p>
"
"<p>Is there a way to deploy a Java program in a format that is not reverse-engineerable? </p>

<p>I know how to convert my application into an executable JAR file, but I want to make sure that the code cannot be reverse engineered, or at least, not easily. </p>

<p>Obfuscation of the source code doesn't count... it makes it harder to understand the code, but does not hide it.</p>

<p>A related question is <em><a href=""http://stackoverflow.com/questions/49379/how-to-lock-compiled-java-classes-to-prevent-decompilation"">How to lock compiled Java classes to prevent decompilation?</a></em></p>

<hr>

<p>Once I've completed the program, I would still have access to the original source, so maintaining the application would not be the problem. If the application is distributed, I would not want any of the users to be able to decompile it. Obfuscation does not achieve this as the users would still be able to decompile it, and while they would have difficulty following the action flows, they would be able to see the code, and potentially take information out of it.</p>

<p>What I'm concerned about is if there is any information in the code relating to remote access. There is a host to which the application connects using a user-id and password provided by the user. Is there a way to hide the host's address from the user, if that address is located inside the source code?</p>
","2988","jwmittag","<p>This is impossible. The CPU will have to execute your program, i.e. your program must be in a format that a CPU can understand. CPUs are much dumber than humans. Ergo, if a CPU can understand your program, a human can.</p>
"
"<p>How would you describe the running time of this sort, given a function <code>sorted</code> which returns True if the list is sorted that runs in O(n):</p>

<pre><code>def sort(l):
    while not sorted(l): random.shuffle(l)
</code></pre>

<p>Assume shuffling is perfectly random. </p>

<p>Would this be written in big-O notation? Or is there some other way of categorizing algorithms with random components?</p>
","2988","J&#246;rg W Mittag","<p>This Algorithm is called <a href=""http://Wikipedia.Org/wiki/Bogosort"">Bogosort</a>. It is an instance of a class of Algorithms called <a href=""http://Wikipedia.Org/wiki/Las_Vegas_algorithm"">Las Vegas Algorithms</a>. Las Vegas Algorithms are <a href=""http://Wikipedia.Org/wiki/Randomized_algorithm"">Randomized Algorithms</a> which always guarantee correct results but make no guarantees about the computing resources.</p>

<p>The time-complexity of Bogosort cannot directly be expressed in <a href=""http://Wikipedia.Org/wiki/Big_O_notation"">Bachmann-Landau Notation</a>, because of its probabilistic nature. However, we <em>can</em> make a statement about its <a href=""http://Wikipedia.Org/wiki/Expected_value"">expected</a> time-complexity. The expected time-complexity of Bogosort is <code>O(n·n!)</code>.</p>
"
"<p>I'm currently using <a href=""http://eigenclass.org/hiki.rb?rcov"">Rcov</a> to get C0 code coverage analysis for a rails project that I'm working on.</p>

<p>However, those results are practically meaningless- I have 100% coverage according to rcov (as it only covers C0 analysis) and I've barely written half the test cases for the functionality that exists thus far.</p>

<p>I'm used to the useful results from the code coverage in Visual Studio 2008 Team, which has C1 coverage.  Are there any tools that provide similar coverage for ruby?</p>
","2988","J&#246;rg W Mittag","<p>At the moment, there are no C1 coverage tools for Ruby. In fact, there aren't <em>any</em> coverage tools other than RCov.</p>

<p>Until recently, it was only possible to write tools like this by patching or extending the MRI interpreter in C. Since approximately two years ago, it is also possible to extend JRuby in Java, and there is actually since last month a port of RCov for JRuby. However, this requires both a knowledge of Ruby <em>and</em> C, and a pretty deep knowledge at that, because fiddling around with the internals of MRI is not for the faint at heart.</p>

<p>But only with Rubinius will it be possible to write dynamic analysis tools such as code coverage tools in Ruby itself, making tool writing accessible to a much larger portion of the Ruby community. My hope is that this, coupled with the substantial financial backing of tool vendors (many major IDE vendors are either working on or have already introduced Ruby IDEs, including CodeGear (ex-Borland), IntelliJ, NetBeans, Eclipse, SapphireSteel (Ruby in Steel for Visual Studio) and even Microsoft) will lead to rapid innovation in the Ruby tooling space in 2009 and we will see things like C1, C2 coverage, NPath complexity, much more fine-grained profiling and so on.</p>

<p>Until then, the only idea I have is to use Java tools. The JRuby guys try to emit the proper magic metadata to make their generated bytecode at least penetrable by the Java tools. So, maybe it is possible to use Java coverage tools with JRuby. However, I have no idea whether that actually works, nor if it is supposed to work.</p>
"
"<p>Is there a built in function equivalent to .NET's</p>

<pre><code>Guid.NewGuid();
</code></pre>

<p>in Cocoa?</p>

<p>My desire is to produce a string along the lines of 550e8400-e29b-41d4-a716-446655440000 which represents a unique identifier.</p>
","2988","J&#246;rg W Mittag","<p>UUIDs are handled in Core Foundation, by the CFUUID library. The function you are looking for is <a href=""http://Developer.Apple.Com/documentation/CoreFoundation/Reference/CFUUIDRef/Reference/reference.html#//apple_ref/c/func/CFUUIDCreate"">CFUUIDCreate</a>.</p>

<p>FYI for further searches: these are most commonly known as UUIDs, the term GUID isn't used very often outside of the Microsoft world. You might have more luck with that search term.</p>
"
"<p>Suppose you have a method that should create and return an array of some sort. What if the array doesn't get populated. Do you return an empty array or null/nothing?</p>
","2988","J&#246;rg W Mittag","<p>If you read your question closely, you will realize that you have actually already answered it yourself: you wrote ""a method that should create and return an array of some sort"" and not ""a method that should create and <em>maybe</em> return an array of some sort <em>or not</em>"".</p>

<p>Really, it depends on the specification. But with the way you phrased it, there's no way the method can return null. Which is the style I would prefer anyway, it just makes edge-case handling so much easier.</p>
"
"<p>I have an application that is database intensive.  Most of the applications methods are updating data in a database.  Some calls are wrappers to stored procedures while others perform database updates in-code using 3rd party APIs.  </p>

<p>What should I be testing in my unit tests?  Should I...</p>

<ol>
<li>Test that each method completes without throwing an exception -or-</li>
<li>Validate the data in the database after each test to make sure the state of data is as expected</li>
</ol>

<p>My initial thought is #2 but my concern is that I would be writing a bunch of <em>framework code</em> to go along with my unit tests.  I read that you shouldn't write a bunch of framework code for unit testing.</p>

<p>Thoughts?</p>

<p><strong>EDIT:</strong> What I mean by framework is writing a ton of other code that serves as a <em>library</em> to the unit testing code...not a third party framework.</p>
","2988","J&#246;rg W Mittag","<p>They shouldn't be <em>unit</em> tested at all! The whole point of those methods is to <em>integrate</em> with the outside world (i.e. the database). So, make sure your <em>integration</em> tests beat the you-know-what out of those methods and just forget about the unit tests.</p>

<p>They should be so simple that they are ""obviously bug-free"", anyway – and if they aren't, you should break them up in one part which has the logic and a dumb part which just takes a value and sticks it in the database.</p>

<p>Remember: the goal is 100% <em>test</em> coverage, not 100% <em>unit test</em> coverage; that includes <em>all</em> of your tests: unit, integration, functional, system, acceptance and manual.</p>
"
"<p>I am attempting to determine prior art for the following idea:</p>

<p>1) user types in some code in a language called (insert_name_here);</p>

<p>2) user chooses a destination language from a list of well-known output candidates (javascript, ruby, perl, python);</p>

<p>3) the processor translates insert_name_here into runnable code in destination language;</p>

<p>4) the processor then runs the code using the relevant system call based on the chosen language</p>

<p>The reason this works is because there is a pre-established 1 to 1 mapping between all language constructs from insert_name_here to all supported destination languages.</p>

<p>(<strong>Disclaimer:</strong> This obviously does not produce ""elegant"" code that is well-tailored to the destination language. It simply does a rudimentary translation that is runnable. The purpose is to allow developers to get a quick-and-dirty implementation of algorithms in several different languages for those cases where they do not feel like re-inventing the wheel, but are required for whatever reason to work with a specific language on a specific project.)</p>

<p>Does this already exist?</p>
","2988","J&#246;rg W Mittag","<p>Yes, a program that transform a program from one representation to another <em>does</em> exist. It's called a ""compiler"".</p>

<p>And as to your question whether that is always possible: as long as your target language is at least as powerful as the source language, then it is possible. So, if your target language is Turing-complete, then it is <em>always</em> possible, because there can be no language that is more powerful than a Turing-complete language.</p>

<p>However, there does not need to be a dumb 1:1 mapping.</p>

<p>For example: the Microsoft Volta compiler which compiles CIL bytecode to JavaScript sourcecode has a problem: .NET has threads, JavaScript doesn't. But you can implement threads with continuations. Well, JavaScript doesn't have continuations either, but you can implement continuations with exceptions. So, Volta transforms the CIL to CPS and then implements CPS with exceptions. (Newer versions of JavaScript have semi-coroutines in the form of generators; those could also be used, but Volta is intended to work across a wide range of JavaScript versions, including obviously JScript in Internet Explorer.)</p>
"
"<p>Way back in the days when ""delicious"" was just ""del.icio.us"", I had assumed that everyone had finally caught on that <a href=""http://www.shirky.com/writings/ontology_overrated.html"" rel=""nofollow"">Ontology is overrated</a>. </p>

<p>So why am I still having to roll my own tagging system using sqlite and a bunch of ruby scripts in order to address this obvious deficiency on my own local machine? I can tag on-line web links, blog posts, questions on stackoverflow.com, and all kinds of web-centric miscellany, but this very basic concept still seems to be missing (or hideously crippled) in the few operating systems I get to use. Perhaps I am just using the wrong OSs?</p>

<p>From what I've seen out there, the pickins' seem pretty slim.</p>

<p>What do you use?</p>
","2988","J&#246;rg W Mittag","<p>The BeOS operating system already did this in 1991, before it became fashionable on the web – in fact, the web didn't even exist then. There's several successors, reimplementations and filesystems inspired by the BeFS out there. Some operating systems that include them are <a href=""http://ZETA-OS.Com/"" rel=""nofollow"" title=""magnussoft ZETA operating system"">magnussoft ZETA</a> (discontinued successor to BeOS, uses the original BeFS), <a href=""http://Haiku-OS.Org/"" rel=""nofollow"" title=""Haiku operating system"">Haiku OS</a> (open source clone of BeOS, formerly known as OpenBeOS, uses an open source reimplementation of BeFS, called OpenBeFS), <a href=""http://SkyOS.Org/"" rel=""nofollow"" title=""SkyOS"">SkyOS</a> (proprietary commercial BeOS-inspired operating system, using a fork of OpenBeOS) and <a href=""http://Syllable.Org/"" rel=""nofollow"" title=""Syllable operating system"">Syllable</a> (BeOS-inspired open source OS, formerly called AtheOS, using a BeFS-inspired fileystem called AtheOS FS).</p>
"
"<p>I'm a fan of SVN and I am comfortable setting up my own svn repository, but I'm wondering if there are better options than creating a separate repository.</p>

<p>Basically I'm just looking for a way to keep track of or roll back changes before my code is reviewed and checked in to the main repository (SourceSafe). </p>

<p>Note: I can't control which version control system we use (would prefer svn or svk), so stuck with SourceSafe for the main repository.</p>
","2988","J&#246;rg W Mittag","<p>Most distributed version control systems unify the concepts of <em>working copy</em> and <em>repository</em>. In other words: the working copy <em>is</em> the repository.</p>

<p>If you want to put a source tree under version control, in most DVCSs it's as simple as</p>

<ol>
<li><code>cd $PROJECT</code></li>
<li><code>git init   # Create the repository</code></li>
<li><code>git add .  # Recursively add all files in the directory to the repository</code></li>
<li><code>git commit # Make the initial commit</code></li>
</ol>

<p>I believe the commands are exactly the same for Mercurial (with <code>hg</code> instead of <code>git</code>) and very similar for Bazaar, Darcs, Monotone, Codeville, Arch, and most other DVCSs.</p>
"
"<p>What is the Ruby idiomatic way for retrieving a single character from a string as a one-character string? There is the <code>str[n]</code> method of course, but (as of Ruby 1.8) it returns a character code as a fixnum, not a string. How do you get to a single-character string?</p>
","2988","J&#246;rg W Mittag","<p>In Ruby 1.9, it's easy. In Ruby 1.9, Strings are encoding-aware sequences of characters, so you can just index into it and you will get a single-character string out of it:</p>

<pre><code>'µsec'[0] =&gt; 'µ'
</code></pre>

<p>However, in Ruby 1.8, Strings are sequences of bytes and thus completely unaware of the encoding. If you index into a string and that string uses a multibyte encoding, you risk indexing right into the middle of a multibyte character (in this example, the 'µ' is encoded in UTF-8):</p>

<pre><code>'µsec'[0] # =&gt; 194
'µsec'[0].chr # =&gt; Garbage
'µsec'[0,1] # =&gt; Garbage
</code></pre>

<p>However, Regexps and some specialized string methods support at least a small subset of popular encodings, among them some Japanese encodings (e.g. Shift-JIS) and (in this example) UTF-8:</p>

<pre><code>'µsec'.split('')[0] # =&gt; 'µ'
'µsec'.split(//u)[0] # =&gt; 'µ'
</code></pre>
"
"<p>The only distributed revision control system I've used on my projects is bazaar. I don't know much about git and mercurial except how to do checkouts. The reason I like bazaar is the automv plugin. It detects when I've moved/deleted files manualy (from command line/ide etc.) which I tend to do alot when I'm in a hurry. But bazaar is really slow and I'm thinking of moving to git. Does git have something similar to this functionality? </p>
","2988","J&#246;rg W Mittag","<p>You might be looking for <a href=""http://Kernel.Org/pub/software/scm/git/docs/git-add.html"" rel=""nofollow""><code>git add --all</code></a>:</p>

<blockquote>
  <p>Update files that git already knows about (same as <code>--update</code>) <strong>and add all untracked files</strong> that are not ignored by <code>.gitignore</code> mechanism.</p>
</blockquote>

<p>(Emphasis mine.)</p>
"
"<p>Python, C++, Scheme, and others all let you define functions that take a variable number of arguments at the end of the argument list...</p>

<pre><code>def function(a, b, *args):
    #etc...
</code></pre>

<p>...that can be called as followed:</p>

<pre><code>function(1, 2)
function(1, 2, 5, 6, 7, 8)
</code></pre>

<p>etc... Are there any languages that allow you to do variadic functions with the argument list somewhere else? Something like this:</p>

<pre><code>def function(int a, string... args, int theend) {...}
</code></pre>

<p>With all of these valid:</p>

<pre><code>function(1, 2)
function(1, ""a"", 3)
function(1, ""b"", ""c"", 4)
</code></pre>

<p>Also, what about optional arguments anywhere in the argument list?</p>

<pre><code>def function(int a, int? b, int c, int... d) {}

function(1, 2) //a=1, c=2, b=undefined/null/something, d=[]
function(1,2,3) //a=1, b=2, c=3,d=[]
function(1,2,3,4,5) //a=1, b=2, c=3, d=[4,5]
</code></pre>
","2988","J&#246;rg W Mittag","<p>Future versions of Ruby (1.9 and up, Ruby 1.9 is scheduled to released at the end of January, 2009) can do this.</p>

<p>It is however not always obvious which value gets bound to which parameter.</p>

<p>This is what Ruby 1.9 accepts:</p>

<p>0 or more mandatory arguments followed by 0 or more optional arguments followed by 0 or more mandatory arguments followed by rest arguments followed by 0 or more mandatory arguments.</p>

<p>Example:</p>

<pre><code>def meth mand1, opt1 = :def1, o2 = :d2, *args, m2, m3
  puts %w[mand1 opt1 o2 m2 args m3].inject('') { |s, arg|
    s &lt;&lt; ""#{arg} = #{(eval arg).inspect}, ""
  }.gsub /, $/, ''
end

meth :arg1, :a2, :a3
# =&gt; mand1 = :arg1, opt1 = :def1, o2 = :d2, m2 = :a2, args = [], m3 = :a3
meth :arg1, :a2, :a3, :a4
# =&gt; mand1 = :arg1, opt1 = :a2, o2 = :d2, m2 = :a3, args = [], m3 = :a4
meth :arg1, :a2, :a3, :a4, :a5
# =&gt; mand1 = :arg1, opt1 = :a2, o2 = :a3, m2 = :a4, args = [], m3 = :a5
meth :arg1, :a2, :a3, :a4, :a5, :a6
# =&gt; mand1 = :arg1, opt1 = :a2, o2 = :a3, m2 = :a5, args = [:a4], m3 = :a6
meth :arg1, :a2, :a3, :a4, :a5, :a6, :a7
# =&gt; mand1 = :arg1, opt1 = :a2, o2 = :a3, m2 = :a6, args = [:a4, :a5], m3 = :a7
</code></pre>

<p>As you can see, mandatory arguments are bound first, from both the left and the right. Then optional arguments get bound and if any arguments are left over, they get bundled up in an array and bound to the rest argument.</p>
"
"<p>I prefer to use OOP in large scale projects like the one I'm working on right now. I need to create several classes in JavaScript but, if I'm not mistaken, there are at least a couple of ways to go about doing that. What would be the syntax and why would it be done in that way?</p>

<p>Or am I way off base here and there's only one way to define classes?</p>

<p>I would like to avoid using third-party libraries - at least at first.<br>
Looking for other answers, I found the article <em><a href=""http://www.webreference.com/js/column79/"">Object-Oriented Programming with JavaScript, Part I: Inheritance - Doc JavaScript</a></em> that discusses object-oriented programming in JavaScript. Is there a better way to do inheritance? </p>
","2988","J&#246;rg W Mittag","<p>The best way to define a class in JavaScript is to not define a class.</p>

<p>Seriously.</p>

<p>There are several different flavors of object-orientation, some of them are: </p>

<ul>
<li>class-based OO (first introduced by Smalltalk)</li>
<li>prototype-based OO (first introduced by Self)</li>
<li>multimethod-based OO (first introduced by CommonLoops, I think)</li>
<li>predicate-based OO (no idea)</li>
</ul>

<p>And probably others I don't know about.</p>

<p>JavaScript implements prototype-based OO. In prototype-based OO, new objects are created by copying other objects (instead of being instantiated from a class template) and methods live directly in objects instead of in classes. Inheritance is done via delegation: if an object doesn't have a method or property, it is looked up on its prototype(s) (i.e. the object it was cloned from), then the prototype's prototypes and so on.</p>

<p>In other words: there are no classes.</p>

<p>JavaScript actually has a nice tweak of that model: constructors. Not only can you create objects by copying existing ones, you can also construct them ""out of thin air"", so to speak. If you call a function with the <code>new</code> keyword, that function becomes a constructor and the <code>this</code> keyword will not point to the current object but instead to a newly created ""empty"" one. So, you can configure an object any way you like. In that way, JavaScript constructors can take on one of the roles of classes in traditional class-based OO: serving as a template or blueprint for new objects.</p>

<p>Now, JavaScript is a very powerful language, so it is quite easy to implement a class-based OO system <em>within JavaScript</em> if you want to. However, you should only do this if you really have a need for it and not just because that's the way Java does it.</p>
"
"<p>IS there any way i can do that?</p>
","2988","J&#246;rg W Mittag","<p>I did this once. It was almost 10 years ago, however, so I don't remember the details.</p>

<p>I used:</p>

<ul>
<li><code>wget</code> to download the pages</li>
<li><code>html2ps</code> to convert the individual pages to PostScript</li>
<li><code>ps2ps</code> to splice the individual PostScript files together</li>
<li><code>ps2ps</code> again, to put 4 pages on 1</li>
</ul>

<p>Then I sent the PostScript file to the printer. Since you want PDF you could add an additional step of <code>ps2pdf</code>.</p>
"
"<p>What are the real differences between anonymous type(var) in c# 3.0 and dynamic type(dynamic) that is coming in c# 4.0?</p>
","2988","J&#246;rg W Mittag","<p>You seem to be mixing three completely different, orthogonal things:</p>

<ul>
<li><em>static vs. dynamic</em> typing</li>
<li><em>manifest vs. implicit</em> typing</li>
<li><em>named vs. anonymous</em> types</li>
</ul>

<p>Those three aspects are completely independent, they have nothing whatsoever to do with each other.</p>

<p><em>Static vs. dynamic</em> typing refers to <em>when</em> the type checking takes place: dynamic typing takes place at <em>runtime</em>, static typing takes place <em>before runtime</em>.</p>

<p><em>Manifest vs. implicit</em> typing refers to whether the types are <em>manifest in the source code</em> or not: manifest typing means that the <em>programmer</em> has to write the types into the source code, implicit typing means that the <em>type system</em> figures them out on its own.</p>

<p><em>Named vs. anonymous</em> types refers to, well, whether the types have names or not.</p>

<p>The <code>dynamic</code> keyword in C# 4.0 means that this variable, parameter, method, field, property ... whatever is <em>dynamically typed</em>, i.e. that its type will be checked at runtime. Everything that is not typed as dynamic is statically typed. Whether a type is static or dynamic not only determines when type checking takes place, but in C# 4.0 it also determines, when <em>method dispatch</em> takes place. In C#, method dispatch is done before runtime, based on the static type (with the exception of runtime subtype polymorphism of course), whereas on dynamically typed objects in C# 4.0, method dispatch is done at runtime, based on the runtime type.</p>

<p>The <code>var</code> keyword in C# 3.0 means that this local variable will be <em>implicitly typed</em>, i.e. that instead of the programmer writing down the type explicitly, the type system will figure it out on its own. This has nothing to do with dynamic typing, at least in C# 3.0. The variable will be strongly statically typed just as if you had written down the type yourself. It is merely a convenience: for example, why would you have to write down all the type names <em>twice</em> in <code>HashMap&lt;int, string&gt; foo = new HashMap&lt;int, string&gt;();</code> when the type system can <em>clearly</em> figure out that <code>foo</code> is a <code>HashMap&lt;int, string&gt;</code>, so instead you write <code>var foo = new HashMap&lt;int, string();</code>. Please note that there is nothing dynamic or anonymous about this. The type is static and it has a name: <code>HashMap&lt;int, string&gt;</code>. Of course, in C# 4.0, if the type system figures out that the right hand side of the assignment is dynamic, then the type of the variable on the left hand side will be dynamic.</p>

<p>An <em>anonymous type</em> in C# 3.0 means that this type has no name. Well, actually, <em>real</em> anonymous types would have required a backwards-incompatible change to the Common Type System, so what <em>actually</em> happens behind the curtain is that the compiler will generate a very long, very random, unique and illegal name for the type and put that name in wherever the anonymous type appears. But from the programmer's point of view, the type has no name. Why is this useful? Well, sometimes you have intermediate results that you only need briefly and then throw away again. Giving such transient types a name of their own would elevate them to a level of importance that they simply don't deserve. But again, there is nothing dynamic about this.</p>

<p>So, if the type has no name, how can the programmer refer to it? Well, she can't! At least not directly. What the programmer <em>can</em> do, is describe the type: it has two properties, one called ""name"" of type <code>string</code>, the other called ""id"" of type <code>int</code>. That's the type I want, but I don't care what it's called.</p>

<p>Here is where the pieces start to come together. In C#, you have to declare the types of local variables by explicitly writing down the names of the types. But, how can you write down the name of a type that has no name? This is where <code>var</code> comes in: because since C# 3.0, this is actually no longer true: you no longer have to write down the names, you can also tell the compiler to figure it out. So, while what I wrote in the first paragraph above is true, that implicit typing and anonymous types don't have anything to do with other, it is also true that anonymous types would be pretty useless without implicit typing.</p>

<p>Note, however, that the opposite is not true: implicit typing is perfectly useful without anonymous types. <code>var foo = HashMap&lt;int, string&gt;</code> makes perfect sense and there's no anonymous type in sight.</p>
"
"<p>I have a repository which I have <em>already</em> cloned from SVN.  I've been doing some work in this repository in its Git form and I would hate to lose that structure by cloning again.  However, when I originally cloned the repository, I failed to correctly specify the <code>svn.authors</code> property (or a semantically-similar option).  Is there any way I can specify the SVN author mappings now that the repository is fully Git-ified?  Preferably, I would like to correct all of the old commit authors to represent the Git author rather than the raw SVN username.</p>
","2988","J&#246;rg W Mittag","<p><a href=""http://SChacon.GitHub.Com/git/git-filter-branch.html"" rel=""nofollow""><code>git filter-branch</code></a> can be used to rewrite large chunks of history.</p>

<p>In this case, you would probably do something like (totally untested):</p>

<pre><code>git filter-branch --env-filter '
    GIT_AUTHOR_NAME=`echo ""${GIT_AUTHOR_NAME}"" | sed -e ""s/svnname1/Right Name/; s/svnname2/Correct Name/""`
    GIT_COMMITTER_NAME=`echo ""${GIT_COMMITTER_NAME}"" | sed -e ""s/svnname1/Right Name/; s/svnname2/Correct Name/""`
    GIT_AUTHOR_EMAIL=`echo ""${GIT_AUTHOR_EMAIL}"" | sed -e ""s/svnname1/m@i.l/; s/svnname2/correct.name@e.mail/""`
    GIT_COMMITTER_EMAIL=`echo ""${GIT_COMMITTER_EMAIL}"" | sed -e ""s/svnname1/m@i.l/; s/svnname2/correct.name@e.mail/""`
'
</code></pre>

<p>As always, the following applies: in order to rewrite history, you need a <a href=""http://SChacon.GitHub.Com/git/git-rebase.html#_recovering_from_upstream_rebase"" rel=""nofollow"">conspiracy</a>.</p>
"
"<p>I have a class which is not thread safe:</p>

<pre><code>class Foo { 
    /* Abstract base class, code which is not thread safe */ 
};
</code></pre>

<p>Moreover, if you have foo1 and foo2 objects, you cannot call foo1->someFunc() until foo2->anotherFunc() has returned (this can happen with two threads). This is the situation and it can't be changed (a Foo subclass is actually a wrapper for a python script).</p>

<p>In order to prevent unwanted calls I've created the following -</p>

<pre><code>class FooWrapper {
public:
    FooWrapper(Foo* foo, FooWrappersMutex* mutex);
    /* Wrapped functions from Foo */
};
</code></pre>

<p>Internally, FooWrapper wraps calls to the Foo functions with the shared mutex.</p>

<p>I want to test FooWrapper for thread safety. My biggest problem is the fact that threads are managed by the operating system, which means I've got less control on their execution. What I would like to test is the following scenario:</p>

<ul>
<li>Thread 1 calls fooWrapper1->someFunc() and blocks while inside the function</li>
<li>Thread 2 calls fooWrapper2->anotherFunc() and returns immediately (since someFunc() is still executing)</li>
<li>Thread 1 finishes the execution</li>
</ul>

<p>What is the simplest to test a scenario like this automatically?</p>

<p>I'm using QT on Win32, although I would prefer a solution which is at least cross-platform as QT is.</p>
","2988","J&#246;rg W Mittag","<p>You might want to check out <a href=""http://Research.Microsoft.Com/CHESS/""><em>CHESS: A Systematic Testing Tool for Concurrent Software</em></a> by Microsoft Research. It is a testing framework for multithreaded programs (both .NET and native code).</p>

<p>If I understood that correctly, it replaces the operating system's threading libraries with its own, so that it can control thread switching. Then it analyzes the program to figure out every possible way that the execution streams of the threads can interleave and it re-runs the test suite for every possible interleaving.</p>
"
"<p>I am learning functional programming style. From this link <a href=""http://channel9.msdn.com/shows/Going+Deep/Brian-Beckman-Dont-fear-the-Monads/"">http://channel9.msdn.com/shows/Going+Deep/Brian-Beckman-Dont-fear-the-Monads/</a>, Brian Beckman gave a brilliant introduction about Monad. He mentioned that Monad is about composition of functions so as to address complexity. </p>

<blockquote>
  <p>A Monad includes a <code>unit</code> function that transfers type T to an amplified type M(T); and a Bind function that, given function from T to M(U), transforms type M(T) to another type M(U).  (U can be T, but is not necessarily). </p>
</blockquote>

<p>In my understanding, the language implementing monad should be type-checked statically. Otherwise, type errors cannot be found during compilation and ""Complexity"" is not controlled. Is my understanding correct?</p>
","2988","J&#246;rg W Mittag","<p>There are lots of implementations of monads in dynamically typed languages:</p>

<ul>
<li><a href=""http://Blog.PreTheory.Com/arch/2008/02/the_maybe_monad_in_ruby.php"">The Maybe Monad in Ruby</a></li>
<li><a href=""http://CWilliams.TextDriven.Com/pages/monads"">OO Monads and Ruby</a> (site is down, but the article <a href=""http://Web.Archive.Org/web/%2a/http://CWilliams.TextDriven.Com/pages/monads"">is available in the Internet Archive's Wayback Machine</a>)</li>
<li><a href=""http://Meta-Meta.BlogSpot.Com/2006/12/monads-in-ruby-part-1-identity.html"">Monads in Ruby Part 1: Identity</a>, <a href=""http://Meta-Meta.BlogSpot.Com/2006/12/monads-in-ruby-part-15-identity.html"">Monads In Ruby Part 1.5: Identity</a>, <a href=""http://Meta-Meta.BlogSpot.Com/2006/12/monads-in-ruby-part-2-maybe-then-again.html"">Monads in Ruby Part 2: Maybe (then again Maybe not)</a></li>
<li><a href=""http://MoonBase.Rydia.Net/mental/writings/programming/monads-in-ruby/"">Monads in Ruby</a></li>
<li><a href=""http://OSteele.Com/archives/2007/12/cheap-monads/"">Monads on the Cheap I: The Maybe Monad in JavaScript</a>, <a href=""http://OSteele.Com/archives/2008/02/inlined-frommaybe/"">More Monads on the Cheap: Inlined fromMaybe</a></li>
<li><a href=""http://WWW.ValuedLessons.Com/2008/01/monads-in-ruby-with-nice-syntax.html"">Monads in Ruby (with nice syntax!)</a>, <a href=""http://WWW.ValuedLessons.Com/2008/01/recently-i-wrote-about-ways-to-add.html"">List Monad in Ruby and Python</a></li>
<li><a href=""https://GitHub.Com/Aanand/Ruby-Do-Notation/"">Haskell-style monad do-notation for Ruby</a></li>
</ul>

<p>In general, the Church-Turing-Thesis tells us that everything that can be done in <em>one</em> language can also be done in <em>every other</em> language.</p>

<p>As you can probably tell from the selection of examples above, I am (mostly) a Ruby programmer. So, just as a joke, I took one of the examples above and re-implemented it in a language that I know <em>absolutely nothing</em> about, that is usually thought of as a not very powerful language, and that seems to be the only programming language on the planet for which I was not able to find a Monad tutorial. May I present to you &hellip; the Identity Monad in PHP:</p>

<pre><code>&lt;?php
class Identity {
  protected $val;
  public function __construct($val) { $this-&gt;val = $val; }
  public static function m_return($a) { return new Identity($a); }
  public static function m_bind($id_a, $f) { return $f($id_a-&gt;val); }
}

var_dump(Identity::m_bind(
  Identity::m_return(1), function ($x) {
    return Identity::m_return($x+1);
  }
));
?&gt;
</code></pre>

<p>No static types, no generics, no closures necessary.</p>

<p>Now, if you actually want to statically check monads, then you need a static type system. But that is more or less a tautology: if you want to statically check types, you need a static type checker. Duh.</p>

<p>With regards to your question:</p>

<blockquote>
  <p>In my understanding, the language implementing monad should be type-checked statically. Otherwise, type errors cannot be found during compilation and ""Complexity"" is not controlled. Is my understanding correct?</p>
</blockquote>

<p>You are right, but this has nothing to do with monads. This is just about static type checking in general, and applies equally well to arrays, lists or even plain boring integers.</p>

<p>There is also a red herring here: if you look for example at monad implementations in C#, Java or C, they are much longer and much more complex than, say, the PHP example above. In particular, there's <em>tons</em> of types everywhere, so it certainly <em>looks</em> impressive. But the ugly truth is: C#'s, Java's and C's type systems aren't actually powerful enough to express the type of <code>Monad</code>. In particular, <code>Monad</code> is a rank-2 polymorphic type, but C# and Java only support rank-1 polymorphism (they call it ""generics"", but it's the same thing) and C doesn't support even that.</p>

<p>So, monads are in fact <em>not</em> statically type-checked in C#, Java and C. (That's for example the reason why the LINQ monad comprehensions are defined as a pattern and not as a type: because you simply cannot <em>express</em> the type in C#.) All the static type system does, is make the implementation much more complex, without actually helping. It requires a much more sophisticated type system such as Haskell's, to get actual type-safety for monads.</p>

<p>Note: what I wrote above <em>only</em> applies to the generic <code>monad</code> type itself, as @Porges points out. You can certainly express the type of any <em>specific</em> monad, like <code>List</code> or <code>Maybe</code>, but you cannot express the type of <code>Monad</code> itself. And this means that you cannot type-check the fact that ""<code>List</code> IS-A <code>Monad</code>"", and you cannot type-check generic operations that work on all instances of <code>Monad</code>.</p>

<p>(Note that checking that <code>Monad</code> also obeys the monad <em>laws</em> in addition to conforming to the monad <em>type</em> is probably too much even for Haskell's type system. You'd probably need dependent types and maybe even a full-blown automatic theorem prover for that.)</p>
"
"<p>I'm working on improving our group's development process, and I'm considering how best to implement Design By Contract with Test-Driven Development.  It seems the two techniques have a lot of overlap, and I was wondering if anyone had some insight on the following (related) questions:</p>

<ul>
<li>Isn't it against the DRY principle to have TDD and DbC unless you're using some kind of code generator to generate the unit tests based on contracts?  Otherwise, you have to maintain the contract in two places (the test and the contract itself), or am I missing something?</li>
<li>To what extent does TDD make DbC redundant?  If I write tests well enough, aren't they equivalent to writing a contract?  Do I only get added benefit if I enforce the contract at run time as well as through the tests?</li>
<li>Is it significantly easier/more flexible to only use TDD rather than TDD with DbC?  </li>
</ul>

<p>The main point of these questions is this more general question: <strong>If we're already doing TDD properly, will we get a significant benefit for the overhead if we also use DbC?</strong></p>

<p>A couple of details, though I think the question is largely language-agnostic:</p>

<ul>
<li>Our team is very small, &lt;10 programmers.</li>
<li>We mostly use Perl.</li>
</ul>
","2988","J&#246;rg W Mittag","<p>I think there is overlap between DbC and TDD, however, I don't think there is duplicated work: introducing DbC will probably result in a reduction of test cases.</p>

<p>Let me explain.</p>

<p>In TDD, tests aren't really tests. They are behavioral specifications. However, they are <em>also</em> design tools: by writing the test first, you use the external API of your object under test – that you haven't actually written yet – in the same way that a user would. That way, you design the API in a way that makes sense to a user, and not in the way that makes it easiest for you to implement. Something like <code>queue.full?</code> instead of <code>queue.num_entries == queue.size</code>.</p>

<p>This second part cannot be replaced by Contracts.</p>

<p>The first part <em>can</em> be partially replaced by contracts, at least for unit tests. TDD tests serve as specifications of behavior, both to other developers (unit tests) and domain experts (acceptance tests). Contracts <em>also</em> specify behavior, to other developers, to domain experts, but also to the compiler and the runtime library.</p>

<p>But contracts have fixed granularity: you have method pre- and postconditions, object invariants, module contracts and so on. Maybe loop variants and invariants. Unit tests however, test units of behavior. Those might be smaller than a method or consist of multiple methods. That's not something you can do with contracts. And for the ""big picture"" you still need integration tests, functional tests and acceptance tests.</p>

<p>And there is another important part of TDD that DbC doesn't cover: the middle D. In TDD, tests <em>drive</em> your development process: you never write a single line of implementation code unless you have a failing test, you never write a single line of test code unless your tests all pass, you only write the minimal amount of implementation code to make the tests pass, you only write the minimal amount of test code to produce a failing test.</p>

<p>In conclusion: use tests to design the ""flow"", the ""feel"" of the API. Use contracts to design the, well, contract of the API. Use tests to provide the ""rhythm"" for the development process.</p>

<p>Something like this:</p>

<ol>
<li>Write an acceptance test for a feature</li>
<li>Write a unit test for a unit that implements a part of that feature</li>
<li>Using the method signature you designed in step 2, write the method prototype</li>
<li>Add the postcondition</li>
<li>Add the precondition</li>
<li>Implement the method body</li>
<li>If the acceptance test passes, goto 1, otherwise goto 2</li>
</ol>

<p>If you want to know what Bertrand Meyer, the inventor of Design by Contract, thinks about combining TDD and DbC, there is a nice paper by his group, called <a href=""http://SE.ETHZ.Ch/people/leitner/publications/cdd_leitner_esec_fse_2007.pdf"">Contract-Driven Design = Test-Driven Development - Writing Test Cases</a>. The basic premise is that contracts provide an abstract representation of all possible cases, whereas test cases only test specific cases. Therefore, a suitable test harness can be automatically generated from the contracts.</p>
"
"<p>This question is about the rare case of software that is neither in active development nor moribund.</p>

<p>First, why is it so rare for software to ever be finished?  It seems ""no longer in active development"" is often synonymous with ""moribund"".  Second, what are exceptions to this?  Donald Knuth's TeX is a famous example.  It's been untouched for years yet remains massively popular.  Knuth even has a cash bug bounty, which is never claimed anymore.  There are probably various unix utilities like this, used ubiquitously yet with the source code in stasis.  I'd like to collect some interesting examples and commentary on why this is rare.</p>

<p>Come to think of it, software is not unique in this regard.  I'm reminded of this gem from The Onion:</p>

<p><a href=""http://www.theonion.com/content/node/29571"" rel=""nofollow"">http://www.theonion.com/content/node/29571</a></p>

<p>In fact, I propose a new term for software like TeX that is ubiquitous yet no longer under active development because it's bug free and just works:  ""Comb Technology"".  </p>

<p><b>What are interesting examples of Comb Technology in software?</b></p>

<p>&nbsp;</p>

<p><img src=""http://yootles.com/outbox/so/comb.jpeg""></p>
","2988","J&#246;rg W Mittag","<p>I second Frederico's answer: the world changes, software adapts.</p>

<p>TeX is actually a pretty good example of what happens if you <em>don't</em> adapt: working with non-english text is a PITA, Unicode is a PITA, OpenType is a PITA, the fact that I have to compile my documents multiple times to get all the indices and references and bibliographies right is a PITA.</p>

<p>All those decisions made sense 21 years ago, but some of them don't anymore.</p>

<p>Unix tools are another example: many of them still assume that all input and output is 7 Bit US-ASCII. I can't even spell my name with that!</p>
"
"<p>I understand that the goal of moving towards <code>&lt;div&gt;</code> tags from <code>&lt;table&gt;</code> makes sense since it is more semantic. However, I don't understand the benefit gained if you still need a clearing block to make column-based layouts work. For example:</p>

<pre><code>&lt;!-- Note: location-info &amp; personal-info both float left. --&gt;
&lt;div class=""contact""&gt; 
    &lt;div class=""personal-info""&gt;
        &lt;p&gt;
           Shawn, etc, etc
        &lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=""location-info""&gt;
        &lt;p&gt;&lt;address&gt;etc&lt;/address&gt;&lt;/p&gt;
    &lt;/div&gt;
    &lt;br style=""clear:both"" /&gt; &lt;!-- clearing block --&gt;
 &lt;/div&gt;
</code></pre>

<p>The extraneous <code>&lt;br&gt;</code> tag is used strictly to describe style, and is required to make the layout work. Doesn't this ruin all benefits gained from removing tables?</p>
","2988","J&#246;rg W Mittag","<blockquote>
  <p>I understand that the goal of moving towards <code>&lt;div&gt;</code> tags from <code>&lt;table&gt;</code> makes sense since it is more semantic.</p>
</blockquote>

<p>Actually, it's exactly the opposite: moving from <code>&lt;table&gt;</code> to <code>&lt;div&gt;</code> makes your HTML <em>less</em> semantic. In fact, the <em>whole point</em> of the <a href=""http://W3.Org/TR/html5/interactive-elements.html#the-div"" rel=""nofollow""><code>&lt;div&gt;</code></a> (and <a href=""http://W3.Org/TR/html5/text-level.html#the-span"" rel=""nofollow""><code>&lt;span&gt;</code></a>) elements is to have <em>no</em> semantics!</p>

<p>It always ticks me off, when I see a forest of <code>&lt;div&gt;</code>s described as ""semantic HTML"". No, it's not! That's <em>un-</em>semantic HTML! Especially if it contains a lot of <code>&lt;div class='float-left'&gt;</code>, <code>&lt;div id='bottom'&gt;</code> and my personal favorites <code>&lt;div class='paragraph'&gt;</code> and <code>&lt;span class='emphasis'&gt;</code>.</p>

<p>Don't get me wrong, using un-semantic <code>&lt;div&gt;</code>s is certainly better than using <em>wrong</em>-semantic <code>&lt;table&gt;</code>s, but even better would be to use the semantically <em>correct</em> elements – although in many cases the problem is that HTML doesn't offer any. In your snippet for example, you use the <code>&lt;address&gt;</code> element, but according to <a href=""http://W3.Org/TR/html5/the-root.html#the-address"" rel=""nofollow"">the specification</a>, this element is <em>not</em> meant for marking up addresses! It is <em>only</em> for marking up the address <em>of the author of the page</em> – IOW it's utterly useless.</p>

<p>The example that you posted is missing a lot of context, so it is hard to say, but it actually looks like you might want to display either tabular or hierarchical data, in which case <code>&lt;table&gt;</code>s or <code>&lt;ul&gt;</code>s might be a better choice.</p>

<p><hr /></p>

<p>Totally unrelated to your question: you might want to take a look at the <a href=""http://Microformats.Org/wiki/hCard"" rel=""nofollow"">hCard</a> and <a href=""http://Microformats.Org/wiki/XOXO"" rel=""nofollow"">XOXO</a> microformats.</p>
"
"<p>What language is Sun's <code>JVM</code> written in?</p>
","2988","J&#246;rg W Mittag","<p>Sun actually has multiple JVMs. The <a href=""http://OpenJDK.Java.Net/groups/hotspot/"">HotSpot JVM</a> is written largely in C++, because HotSpot is heavily based on the <a href=""http://Strongtalk.Org/"">Animorphic Smalltalk VM</a> which is <a href=""http://Code.Google.Com/p/strongtalk/source/browse/#svn/trunk/vm"">written in C++</a>.</p>

<p>More interesting than HotSpot is IMHO the <a href=""http://Research.Sun.Com/projects/maxine/"">Maxine Research VM</a>, which is <a href=""http://Kenai.Com/projects/maxine/sources/maxine/show"">written (almost) completely in Java</a>.</p>
"
"<p>""Everything is an object"" was one of the first things I learned about Ruby, but in Peter Cooper's <em>Beginning Ruby: From Novice to Professional</em>, it is mentioned that ""<strong><em>almost</em></strong> everything in Ruby is an object"".</p>

<p>Can you give me some <strong>examples of <em>things</em> that are not objects in Ruby?</strong></p>
","2988","J&#246;rg W Mittag","<p>The most obvious one that jumps into my head would be blocks. Blocks can be easily reified to a <code>Proc</code> object, either by using the <code>&amp;block</code> parameter form in a parameter list or by using <code>lambda</code>, <code>proc</code>, <code>Proc.new</code> or (in Ruby 1.9) the ""stabby lambda"" syntax. But on its own, they aren't objects.</p>

<p>Another example are operators.</p>
"
"<p>I read that compiler can enforce dbc at compile time.. How does it do it?</p>
","2988","J&#246;rg W Mittag","<p>As far as I know, the most powerful static DbC language so far is <a href=""http://Research.Microsoft.Com/SpecSharp/"">Spec# by Microsoft Research</a>. It uses a powerful static analysis tool called <a href=""http://Research.Microsoft.Com/Boogie/"">Boogie</a> which in turn uses a powerful Theorem Prover / Constraint Solver called <a href=""http://Research.Microsoft.Com/projects/z3/"">Z3</a> to prove either the fulfillment or violation of contracts at design time.</p>

<p>If the Theorem Prover can prove that a contract will <em>always</em> be violated, that's a compile error. If the Theorem Prover can prove that a contract will <em>never</em> be violated, that's an optimization: the contract checks are removed from the final DLL.</p>

<p>As Charlie Martin points out, proving contracts in general is equivalent to solving the Halting Problem and thus not possible. So, there will be a lot of cases, where the Theorem Prover can neither prove nor disprove the contract. In that case, a runtime check is emitted, just like in other, less powerful contract systems.</p>

<p>Please note that Spec# is no longer being developed. The contract engine has been extracted into a library, called <a href=""http://Research.Microsoft.Com/Contracts/"">Code Contracts for .NET</a>, which will be a part of .NET 4.0 / Visual Studio 2010. However, there will be no language support for contracts.</p>
"
"<p>I am trying to install the ""libxml"" Gem (<a href=""http://libxml.rubyforge.org/install.xml"" rel=""nofollow"">http://libxml.rubyforge.org/install.xml</a>) and it says that libxml requires a few other libraries to be installed in order to build and function properly:</p>

<pre><code>  * libm      (math routines: very standard)
  * libz      (zlib)
  * libiconv
  * libxml2
</code></pre>

<p>I installed RubyGems but I wonder if ""libiconv"" for example is also a gem?</p>

<p>What is the way to download and install these libraries above?</p>

<p>Thanks!</p>
","2988","J&#246;rg W Mittag","<p>Those are all C libraries that have nothing whatsoever to do with Ruby, and are thus not packaged as Gems. You will have to install them via your Operating System's package manager, or, if your Operating System doesn't <em>have</em> a package manager, manually.</p>

<p>If your Operating System <em>does</em> have a package manager, however, you might be better off installing libxml-ruby via your OS package manager instead of via RubyGems, that way all the dependencies are automatically satisfied. On Debian-ish systems, the package is called <code>libxml-ruby</code> or something like that.</p>
"
"<p>I'm try to install the SQLite gem on a Fedora 9 Linux box with Ruby 1.8.6, Rails 2.2.2, gem 1.3, and sqlite-3.5.9. Here's the command I'm running and its results:</p>

<pre><code>sudo gem install sqlite3-ruby
Building native extensions.  This could take a while...
ERROR:  Error installing sqlite3-ruby:
    ERROR: Failed to build gem native extension.

/usr/bin/ruby extconf.rb install sqlite3-ruby
can't find header files for ruby.

Gem files will remain installed in /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4 for inspection.
Results logged to /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/ext/sqlite3_api/gem_make.out
</code></pre>

<p><code>gem_make.out</code> just repeats what was already sent to the console. How can I install this gem?</p>
","2988","J&#246;rg W Mittag","<p>The SQLite RubyGem isn't actually a *Ruby*Gem, it's a ""*C*Gem"", IOW it's written in C. This means it has to be compiled and linked to the Ruby interpreter when you install it and in order to do <em>that</em> it needs the C header files for the Ruby interpreter.</p>

<p>If you compile Ruby yourself, those header files will be installed automatically, however, in RedHat-ish systems, such header files are usually packaged in a seperate package, called <code>&lt;whatever&gt;-dev</code>. So, in this case you will need to install the <code>ruby-dev</code> package and possibly the <code>libsqlite3-dev</code> (Ubuntu) or <code>sqlite-devel</code> (Fedora) package as well.</p>

<p>However, you might be better off just installing your Operating System's pre-packaged <code>libsqlite3-ruby</code> package, that way all the dependencies are automatically satisfied.</p>

<p>(Note: all package names pulled out of thin air, might be different on your system.)</p>
"
"<p>I'm looking for good free bug-tracking software.</p>

<p>I notice that some (i.e. Mantis) are GPL-licensed.</p>

<p>Am I allowed to use Mantis to track bugs for commercial, non-GPL software that we are writing?</p>
","2988","J&#246;rg W Mittag","<p>If George Lucas uses Sony cameras to film Star Wars Episode VII, does Sony get all the money? Of course not; in fact, they might pay <em>him</em> for endorsing their product!</p>

<p>Please never forget: the GPL is <em>not</em> ""viral""! This concept of a ""viral license"" was invented by a Microsoft-sponsored marketing firm for an anti-Linux FUD campaign. Nothing could be further from the truth: even if the GPL <em>were</em> viral, such clauses would simply be illegal and thus null and void under pretty much any IP law anywhere in the world.</p>
"
"<p>On RedHat Enterprise Linux 5 the latest Ruby version available via RPM is 1.8.5.  My Rails app requires 1.8.6 or above so I need to compile Ruby from source.</p>

<p>I have tried the following to build it and it seems to build ok, but then I'm seeing gcc compilation errors when trying to run a plug-in which requires RubyInline.</p>

<p>There seems to be a lack of decent documentation for building Ruby from source, suitable for running Rails apps.</p>

<p>Here's how I compiled Ruby:</p>

<pre><code>./configure --prefix=/usr --with-openssl-include=/usr/include/openssl --with-openssl-lib=/usr/lib64/openssl/engines
make
sudo make install
</code></pre>

<p>I wonder whether there are specific compile flags I need to build this on a 64-bit system.  The actual error I'm seeing is </p>

<pre><code> error executing ""gcc -shared   -fPIC -g -O2   -I /usr/lib/ruby/1.8/x86_64-linux  -I /usr/include -L/usr/lib -o \""/home/deploy/.ruby_inline/Inline_ImageScience_aa58.so\"" \""/home/deploy/.ruby_inline/Inline_ImageScience_aa58.c\"" -lfreeimage -lstdc++ "":
</code></pre>

<p>Any advice would be greatly appreciated</p>
","2988","J&#246;rg W Mittag","<p>The best way would probably be to just ""steal"" a Ruby 1.8.6 RPM from Fedora. The second best way would be to steal a Ruby 1.8.6 SRPM from Fedora and build it yourself.</p>

<p>However, there is one thing you could do: add a <code>--disable-pthread</code> flag to the <code>configure</code> line and remove <code>--enable-pthread</code> if it's there. <code>--enable-pthread</code> makes MRI <em>significantly</em> slower, and is only needed if you want to use Ruby/Tk and your system's Tk library was built with <code>--enable-pthread</code>.</p>
"
"<p>A friend asked me last week how to enumerate or list all variables within a program/function/etc. for the purposes of debugging (essentially getting a snapshot of everything so you can see what variables are set to, or if they are set at all). I looked around a bit and found a relatively good way for Python:</p>

<pre>
#!/usr/bin/python                                                                                                                                                                                                                           
foo1 = ""Hello world""
foo2 = ""bar""
foo3 = {""1"":""a"",
        ""2"":""b""}
foo4 = ""1+1""

for name in dir():
    myvalue = eval(name)
    print name, ""is"", type(name), ""and is equal to "", myvalue
</pre>

<p>which will output something like:</p>

<pre>
__builtins__ is &lt;type 'str'&gt; and is equal to  &lt;module '__builtin__' (built-in)&gt;
__doc__ is &lt;type 'str'&gt; and is equal to  None
__file__ is &lt;type 'str'&gt; and is equal to  ./foo.py
__name__ is &lt;type 'str'&gt; and is equal to  __main__
foo1 is &lt;type 'str'&gt; and is equal to  Hello world
foo2 is &lt;type 'str'&gt; and is equal to  bar
foo3 is &lt;type 'str'&gt; and is equal to  {'1': 'a', '2': 'b'}
foo4 is &lt;type 'str'&gt; and is equal to  1+1
</pre>

<p>I have so far found a partial way in PHP (courtesy of <a href=""http://www.phpro.org/examples/List-all-variables.html"">link text</a>) but it only lists all variables and their types, not the contents:</p>

<pre>
&lt;?php
// create a few variables
$bar = 'foo';
$foo ='bar';
// create a new array object
$arrayObj = new ArrayObject(get_defined_vars());
// loop over the array object and echo variables and values
for($iterator = $arrayObj-&gt;getIterator(); $iterator-&gt;valid(); $iterator-&gt;next())
        {
        echo $iterator-&gt;key() . ' =&gt; ' . $iterator-&gt;current() . '&lt;br /&gt;';
        }
?&gt;
</pre>

<p><strong>So I put it to you: how do you list all variables and their contents in your favorite language?</strong></p>

<p><hr /></p>

<p>Edit by <a href=""http://stackoverflow.com/users/6309/vonc"">VonC</a>: I propose this question follows the spirit of a little ""<a href=""http://stackoverflow.com/questions/172184"">code-challenge</a>"".<br />
If you do not agree, just edit and remove the tag and the link.</p>
","2988","J&#246;rg W Mittag","<p>This is what it would look like in <a href=""http://Ruby-Lang.Org/"">Ruby</a>:</p>

<pre><code>#!/usr/bin/env ruby

foo1 = 'Hello world'
foo2 = 'bar'
foo3 = { '1' =&gt; 'a', '2' =&gt; 'b' }
foo4 = '1+1'

local_variables.each do |var|
  puts ""#{var} is #{var.class} and is equal to #{eval(var).inspect}""
end
</code></pre>

<p>which will output</p>

<pre>foo1 is String and is equal to ""Hello world""
foo2 is String and is equal to ""bar""
foo3 is String and is equal to {""1""=>""a"", ""2""=>""b""}
foo4 is String and is equal to ""1+1""</pre>

<p>However, didn't you mean to output the type of object the variable references instead of the type used to represent the variable identifier? IOW, the type of <code>foo3</code> should be <code>Hash</code> (or <code>dict</code>) instead of <code>String</code>, right? In that case, the code would be</p>

<pre><code>#!/usr/bin/env ruby

foo1 = 'Hello world'
foo2 = 'bar'
foo3 = { '1' =&gt; 'a', '2' =&gt; 'b' }
foo4 = '1+1'

local_variables.each do |var|
  val = eval(var)
  puts ""#{var} is #{val.class} and is equal to #{val.inspect}""
end
</code></pre>

<p>and the result is</p>

<pre>foo1 is String and is equal to ""Hello world""
foo2 is String and is equal to ""bar""
foo3 is Hash and is equal to {""1""=>""a"", ""2""=>""b""}
foo4 is String and is equal to ""1+1""</pre>
"
"<p>To quote <a href=""http://en.wikipedia.org/wiki/Weak_typing"">Wikipedia</a>:</p>

<blockquote>
  <p>Two commonly used languages that
  support many kinds of implicit
  conversion are C and C++, and it is
  sometimes claimed that these are
  weakly typed languages. However,
  others argue that these languages
  place enough restrictions on how
  operands of different types can be
  mixed, that the two should be regarded
  as strongly typed languages.</p>
</blockquote>

<p>Is there a more definitive answer?</p>
","2988","J&#246;rg W Mittag","<p>The term <em>strongly typed</em> doesn't have a agreed-upon definition. Therefore, unless you define what you <em>mean</em> by ""strongly typed"", it is impossible to answer your question.</p>

<p>In my experience, the terms ""strongly typed"" and ""weakly typed"" are used <em>exclusively</em> by trolls, because their lack of definitions allows the trolls to redefine them mid-argument to suit their agenda. Other than for starting flamewars, these terms are pretty much useless.</p>

<p>You might also want to take a look at <a href=""http://StackOverflow.Com/questions/121385/#122751"" rel=""nofollow"">What are the key aspects of a strongly typed language?</a> here on StackOverflow.</p>
"
"<p>Redirecting command output:</p>

<p>eg:</p>

<pre><code>echo ""Foo `./print_5_As.rb`""
</code></pre>

<p>would echo ""Foo AAAAA""</p>
","2988","J&#246;rg W Mittag","<p>The PowerShell syntax is based on the POSIX ksh syntax
(and interestingly <em>not</em> on any of Microsoft's languages
like CMD.EXE, VBScript or Visual Basic for Applications),
so many things work pretty much the same as in Bash. In
your case, command substitution is done with</p>

<pre><code>echo ""Foo $(./print_5_As.rb)""
</code></pre>

<p>in both PowerShell and Bash.</p>

<p>Bash still supports the ancient way (backticks), but
PowerShell cleaned up the syntax and removed redundant
constructs such as the two different command substitution
syntaxes. This frees up the backtick for a <em>different</em>
use in PowerShell: in POSIX ksh, the backslash is used as
escape character, but that would be <em>very</em> painful in
PowerShell because the backslash is the traditional path
component seperator in Windows. So, PowerShell uses the
(now unused) backtick for escaping.</p>
"
"<p>I've been doing a project at work recently focused on an almost entirely client-driven web  site. Obviously Javascript is used heavily, and I've been using jQuery on top of it which has turned out to be an absolute pleasure to work with.</p>

<p>One of the things that has surprised me in this is how much I like the JSON object syntax and it's use within javascript (highlighted by jQuery, which uses it everywhere). for those that aren't familiar with it, consider this brief example:</p>

<pre><code>function add(params) {
    params.result(params.a, params.b);
}

add({
    a: 1,
    b: 2,
    result: function(value) {
        alert(value);
    }
});
</code></pre>

<p>Of course, this example is extremely contrived but it illustrates the basic usage. The JSON describes an object on the fly, passed in this case as a parameter to the function, and even defines a function within it for use as a callback. I personally find this methodology very easy to use, understand, and produce APIs with (though I know there are those that would disagree with me.)</p>

<p>So my question is, is this type of syntax unique to javascript? I know that many languages have JSON parsers (and have used several) but they don't allow for this sort of inlined declaration. And granted, much of what you can do with this syntax can be duplicated via named parameters in various languages and lambda expressions or function pointers (Python jumps to mind), but I still don't find that quite as elegant.</p>

<p>Just curious, thanks for any replies!</p>
","2988","J&#246;rg W Mittag","<p>The canonical example is Lisp: in Lisp, the language isn't even defined in terms of text, it is defined in terms of data structures. There really is not difference between code and data: code is just a list whose first element is interpreted as an operation and the rest as operands.</p>

<p>Writing a program is just writing lists.</p>
"
"<p>Does anyone here use Spec# regularly? I would like to know if it is stable and powerful enough before I start using it everywhere.
It looks like the syntax is influencing c# 4.0, which will hopefully make it easier to upgrade once 4.0 is released. Thoughts?</p>
","2988","J&#246;rg W Mittag","<p>I guess it depends on what you mean by ""stable"". There are two possible interpretations:</p>

<ol>
<li>""not crashing""</li>
<li>""not changing""</li>
</ol>

<p>I don't know about #1, but if you mean #2, then, well, <a href=""http://Research.Microsoft.Com/SpecSharp/"" rel=""nofollow"">Spec#</a> has been abandoned and is no longer being developed, so that's probably as stable as you're gonna get.</p>

<p>The techniques and tools that were used in <a href=""http://Research.Microsoft.Com/SpecSharp/"" rel=""nofollow"">Spec#</a> (the static analysis tool called <a href=""http://Research.Microsoft.Com/Boogie/"" rel=""nofollow"">Boogie</a> and the theorem prover / constraint solver <a href=""http://Research.Microsoft.Com/projects/z3/"" rel=""nofollow"">Z3</a>) are now part of a new library called <a href=""http://Research.Microsoft.Com/Contracts/"" rel=""nofollow"">Code Contracts for .NET</a>. The upshot of being a library is that Code Contracts will work for <em>any</em> .NET language: C#, VB.NET, F#, Ruby, Python, JavaScript, Lisp, Smalltalk, Boo, you name it. The downside is that you get no language integration, so no nice syntax for contracts.</p>

<p>Code Contracts for .NET will be part of .NET 4.0 / Visual Studio 2010, but unfortunately there will be no DbC support in any of Microsoft's languages.</p>
"
"<p>I want to store certain items in the database with variable amount of properties.</p>

<p>For example:</p>

<p>An item can have 'url' and 'pdf' property both others do not en instead have 'image' and 'location' properties.</p>

<p>So the problem is an some items can have some properties and others a lot.</p>

<p>How would you design this database. How to make it searchable and performant?</p>

<p>What would the schema look like?</p>

<p>Thanks!</p>
","2988","J&#246;rg W Mittag","<p>That sounds like a perfect job for a document database.</p>
"
"<p>I think most of us agree that <strong>it's a good idea to use a descriptive name for variables</strong>, object attributes, and database columns. If you want to store something's name, you may as well call the attribute <code>Name</code> so people know what to put in it. </p>

<p>Where the unit of measurement isn't immediately apparent, I think you should go a step further and include the unit of measurement in the name. <code>Length_mm</code>, for example, should help remind developers that they'd better convert the length to mm if the user just entered it in inches. </p>

<p>My database administrator, however, just told me that <strong>including units of measurement in database column names is “frowned upon”</strong>. I think that's just <em>nuts</em>, but perhaps there's some risk DBAs know about that I don't. </p>

<p>Throw me a line, here: <strong>should we embed units of measurement in our attribute names?</strong> Why? Why not? </p>
","2988","J&#246;rg W Mittag","<p>I think putting units in your identifiers is a <em>huge</em> design smell. It almost surely means that you chose the wrong language: if units are so important to the project, you'd better be using a language whose type system is capable of representing them.</p>
"
"<p>I know many advantages of Open Source Software. But what are the advantages of Commercial software from customer view? When should I use/buy a Commercial Software instead of a Open Source Software?</p>
","2988","J&#246;rg W Mittag","<p>I think you are confusing two totally different things: commercial vs. non-commercial software and open source vs. closed source software. Those two have nothing to do with each other: there is a lot of commercial open source software and there is a lot of non-commercial closed source software.</p>

<p>All of the advantages of commercial software apply equally to open source and closed source. All of the advantages of open source apply equally to commercial and non-commercial. Thus, you can actually <em>combine</em> all those advantages by buying commercial open source software. (And even if that is not possible, you can very often buy commercial support for non-commercial open source software. Just like you can buy Windows support from companies other than Microsoft, you can also buy Linux support from people other than Linus Torvalds.)</p>

<p>So, to answer your original question:</p>

<blockquote>
  <p>When should I use/buy a Commercial Software instead of a Open Source Software?</p>
</blockquote>

<p>Yes. :-)</p>
"
"<p>Arc, if you don't know, is <a href=""http://www.paulgraham.com"">Paul Graham</a>'s ""100 year language"", or, more prosaically, new version of Lisp. It was heavily trailed on <a href=""http://www.reddit.com"">reddit</a> (back when reddit was interesting), and an early version was <a href=""http://www.paulgraham.com/arc0.html"">released</a> in January last year. </p>

<p>But nothing much seems to have happened since then - the <a href=""http://arclanguage.org/forum"">forum</a> is virtually dead, and there's nothing new on Paul Graham's own site. Does anybody know what's going on?</p>
","2988","J&#246;rg W Mittag","<p>Arc is not intended to be the next big thing. It is more intended to be the next big thing after the next big thing after the next big thing after the next big thing after the next big thing. In fact, the programmers for whom Arc is intended, haven't even been born yet ... heck, their <em>parents</em> haven't even been born yet!</p>

<p>So, cut the guy some slack! Designing a programming language is hard. Designing a programming language that stands the test of time is even harder.</p>

<p>I mean, sure, COBOL is still alive and kicking, but <em>that's</em> not the kind of immortality Paul Graham is looking for. He doesn't want programmers in 2109 writing Arc because they have to maintain some horrible legacy codebase, he wants them writing Arc because it's still the best, most beautiful, most enjoyable, most expressive, most powerful language.</p>

<p>If you are looking for a Lisp for 2009 (or even 2019), instead of 2109, then I second Brian C.'s suggestion: take a look at Clojure.</p>
"
"<p>I tried this experiment on my Linux desktop:</p>

<pre><code>int main()
{
  while(1)
    fork();
  return 0;
}
</code></pre>

<p>I ran this program as normal user(not root), i was surprised to find that it brought down my system, it has become unresponsive. 
I had hoped that due to resource limit exhaustion my process would have been killed,but apparently this is not the case. Any ideas why?</p>

<p>thanks,
Sid.</p>

<p>PS: this was my office Linux box on which i was experimenting from home, i hope everything 
will be okay when i restart it tomorrow ....</p>
","2988","J&#246;rg W Mittag","<p>Most likely, your system administrator didn't set up the user limits. If no user limits are set, then they can't protect anyone.</p>
"
"<p>We are developing a CMS in ASP.NET. We love the idea of add-ons (like in Wordpress, where any developer can add a menu button or a widget) and would like to enable developers to do the same with our system.  </p>

<p>However I think that the fact that C# is a compiled language is an obstacle in the way of add-ons.  </p>

<p>Am I right? Or is there a way to create add-ons for a ASP.NET application?</p>
","2988","J&#246;rg W Mittag","<p>Microsoft has created the <a href=""http://CodePlex.Com/MEF/"" rel=""nofollow"">Managed Extensibility Framework (MEF)</a>, specifically for this problem: providing .NET plugins for .NET applications. It is the framework that (future versions of) Visual Studio use for writing managed plugins.</p>

<p>However, <em>please</em> consider using a dynamic scripting language for this! Problems like this are <em>exactly</em> what they are specifically designed for. If you host the <a href=""http://CodePlex.Com/DLR/"" rel=""nofollow"">Dynamic Language Runtime</a> in your application, it not only means that your users can extend the application in <em>a</em> scripting language, but even in <em>any</em> dynamic language (scripting or otherwise) for which a DLR implementation exists: Ruby, Python, Smalltalk, Scheme, JavaScript, PHP, you name it. Biggest disadvantage: the DLR hasn't been released yet.</p>
"
"<p>For instance in C# or Java, you always have a main() method used to get your program running. What do you name the class that it is in? Some ideas I would use would just be ""Program"" or the name of the program itself. What would be considered conventional in this case?</p>
","2988","J&#246;rg W Mittag","<p>I don't put it in a class. In fact, I don't even use a method, just a snippet of code:</p>

<pre><code>#!/usr/bin/env ruby

puts 'Look Ma, no class, no method!'
</code></pre>
"
"<p>This is one of those things, that maybe so simple I'll never find it because everyone else already knows it.</p>

<p>I've got objects I have to check for nil in my views so I don't dereference a nil:</p>

<pre><code>&lt;%= if tax_payment.user; tax_payment.user.name; end %&gt;
</code></pre>

<p>Or I could do this variant:</p>

<pre><code>&lt;%= tax_payment.user ? tax_payment.user.name : '' %&gt;
</code></pre>

<p>So this is ok ... for most languages. But I feel like there must be some bit of shiny ruby or railness I'm still missing if this is the best I can do. </p>
","2988","J&#246;rg W Mittag","<p>For a little more comprehensive solution, you could check out the <a href=""http://Refactoring.Com/catalog/introduceNullObject.html"" rel=""nofollow""><em>Introduce Null Object</em> Refactoring</a>. The basic mechanics of this refactoring is that instead of checking for <code>nil</code> in the <em>client</em> code you instead make sure that the <em>provider</em> never produces a <code>nil</code> in the first place, by introducing a context-specific <em>null object</em> and returning that.</p>

<p>So, return an empty string, an empty array, an empty hash or a special empty customer or empty user or something instead of just <code>nil</code> and then you will never need to check for <code>nil</code> in the first place.</p>

<p>So, in your case you would have something like</p>

<pre><code>class NullUser &lt; User
    def name
        return ''
    end
end
</code></pre>

<p>However, in Ruby there is actually another, quite elegant, way of implementing the Introduce Null Object Refactoring: you don't actually need to <em>introduce</em> a Null Object, because <code>nil</code> is <em>already</em> an object! So, you could monkey-patch <code>nil</code> to behave as a NullUser – however, all the usual warnings and pitfalls regarding monkey-patching apply even more strongly in this case, since making <code>nil</code> silently swallow <code>NoMethodError</code>s or something like that can totally mess up your debugging experience and make it <em>really</em> hard to track down cases where there is a <code>nil</code> that shouldn't be there (as opposed to a <code>nil</code> that serves as a Null Object).</p>
"
"<h3>Original Question</h3>

<p>What I'd like is not a standard C pre-processor, but a variation on it which would accept from somewhere - probably the command line via -DNAME1 and -UNAME2 options - a specification of which macros are defined, and would then eliminate dead code.</p>

<p>It may be easier to understand what I'm after with some examples:</p>

<pre><code>#ifdef NAME1
#define ALBUQUERQUE ""ambidextrous""
#else
#define PHANTASMAGORIA ""ghostly""
#endif
</code></pre>

<p>If the command were run with '-DNAME1', the output would be:</p>

<pre><code>#define ALBUQUERQUE ""ambidextrous""
</code></pre>

<p>If the command were run with '-UNAME1', the output would be:</p>

<pre><code>#define PHANTASMAGORIA ""ghostly""
</code></pre>

<p>If the command were run with neither option, the output would be the same as the input.</p>

<p>This is a simple case - I'd be hoping that the code could handle more complex cases too.</p>

<p>To illustrate with a real-world but still simple example:</p>

<pre><code>#ifdef USE_VOID
#ifdef PLATFORM1
#define VOID void
#else
#undef VOID
typedef void    VOID;
#endif /* PLATFORM1 */
typedef void *  VOIDPTR;
#else
typedef mint     VOID;
typedef char *  VOIDPTR;
#endif /* USE_VOID */
</code></pre>

<p>I'd like to run the command with <code>-DUSE_VOID -UPLATFORM1</code> and get the output:</p>

<pre><code>#undef VOID
typedef void    VOID;
typedef void *  VOIDPTR;
</code></pre>

<p>Another example:</p>

<pre><code>#ifndef DOUBLEPAD
#if (defined NT) || (defined OLDUNIX)
#define DOUBLEPAD 8
#else
#define DOUBLEPAD 0
#endif /* NT */
#endif /* !DOUBLEPAD */
</code></pre>

<p>Ideally, I'd like to run with <code>-UOLDUNIX</code> and get the output:</p>

<pre><code>#ifndef DOUBLEPAD
#if (defined NT)
#define DOUBLEPAD 8
#else
#define DOUBLEPAD 0
#endif /* NT */
#endif /* !DOUBLEPAD */
</code></pre>

<p>This may be pushing my luck!</p>

<p>Motivation: large, ancient code base with lots of conditional code.  Many of the conditions no longer apply - the OLDUNIX platform, for example, is no longer made and no longer supported, so there is no need to have references to it in the code.  Other conditions are always true.  For example, features are added with conditional compilation so that a single version of the code can be used for both older versions of the software where the feature is not available and newer versions where it is available (more or less).  Eventually, the old versions without the feature are no longer supported - everything uses the feature - so the condition on whether the feature is present or not should be removed, and the 'when feature is absent' code should be removed too.  I'd like to have a tool to do the job automatically because it will be faster and more reliable than doing it manually (which is rather critical when the code base includes 21,500 source files).</p>

<p>(A really clever version of the tool might read <code>#include</code>'d files to determine whether the control macros - those specified by -D or -U on the command line - are defined in those files.  I'm not sure whether that's truly helpful except as a backup diagnostic.  Whatever else it does, though, the pseudo-pre-processor must not expand macros or include files verbatim.  The output must be source similar to, but usually simpler than, the input code.)</p>

<h3>Status Report (one year later)</h3>

<p>After a year of use, I am very happy with '<a href=""http://sunifdef.strudl.org/"">sunifdef</a>' recommended by the selected answer.  It hasn't made a mistake yet, and I don't expect it to.  The only quibble I have with it is stylistic.  Given an input such as:</p>

<pre><code>#if (defined(A) &amp;&amp; defined(B)) || defined(C) || (defined(D) &amp;&amp; defined(E))
</code></pre>

<p>and run with '-UC' (C is never defined), the output is:</p>

<pre><code>#if defined(A) &amp;&amp; defined(B) || defined(D) &amp;&amp; defined(E)
</code></pre>

<p>This is technically correct because '&amp;&amp;' binds tighter than '||', but it is an open invitation to confusion.  I would much prefer it to include parentheses around the sets of '&amp;&amp;' conditions, as in the original:</p>

<pre><code>#if (defined(A) &amp;&amp; defined(B)) || (defined(D) &amp;&amp; defined(E))
</code></pre>

<p>However, given the obscurity of some of the code I have to work with, for that to be the biggest nit-pick is a strong compliment; it is valuable tool to me.</p>

<hr>

<h3>The New Kid on the Block</h3>

<p>Having checked the URL for inclusion in the information above, I see that (as predicted) there is an new program called <a href=""http://coan2.sourceforge.net/"">Coan</a> that is the successor to 'sunifdef'.  It is available on SourceForge and has been since January 2010.  I'll be checking it out...further reports later this year, or maybe next year, or sometime, or never.</p>
","2988","J&#246;rg W Mittag","<p>I know absolutely nothing about C, but it sounds like you are looking for something like <a href=""http://FreshMeat.Net/projects/unifdef/""><code>unifdef</code></a>. Note that it hasn't been updated since 2000, but there is a successor called <a href=""http://SUnIfdef.Strudl.Org/"">""Son of unifdef"" (sunifdef)</a>.</p>
"
"<p>How does version control differ from plain backups?</p>

<p>Let's forget about the feature decoration, and concentrate on the soul of version control. Is there a clear line that backups must cross before they can be called a VCS? Or are they, at heart, the same thing with different target markets?</p>

<p>If there is a fundamental difference, what is the absolute minimum requirement for something to reach the status of version control?</p>

<p><em>When you answer, please don't just list features (such as delta compression, distributed/central repositories, and concurrent access solutions) that most version control systems have or should have, unless they actually are necessary for a VCS by definition.</em></p>
","2988","J&#246;rg W Mittag","<p>I see several fundamental differences between backups and version control:</p>

<ol>
<li>Backups only store the latest version, or, even if they store multiple versions, they don't store <em>every</em> version. A VCS <em>does</em> store every version,</li>
<li>That backup version is often out of date, because backups don't record every change, while VCSs do,</li>
<li>VCSs allow to pursue multiple alternative versions of the same change at the same time (i.e. branching).</li>
</ol>

<p>However, the single most important difference between backups and VCS is that, in a VCS, changes have <em>meaning</em>. In a backup, a new version is made, because some <em>computer</em> somewhere decided that it was <code>x</code> hours since the last backup; the change itself is completely <em>meaningless</em>. In a VCS, a new version is made, because some <em>human</em> decided that this version has its own <em>meaning</em>, its own identity, different from all the other versions. So, in a backup, all versions are equal (more precisely: they are equally meaningless), whereas in a VCS all versions are special (they have their own unique meanings). In a VCS, changes have an actual <em>history</em>, where one event led to another, in a backup there's just a string of unrelated events.</p>

<p>Closely related to this, is the notion of <em>change metadata</em>. In a VCS, every change has an <em>author</em>, a <em>timestamp</em> and, most importantly, a <em>commit message</em>. This commit message records <em>why</em> the change was made, in other words, it records the ""meaning"" I wrote about in the previous paragraph.</p>

<p>The <em>commit history</em> and especially the <em>commit messages</em> are the most important data in a VCS repository, not the actual code itself! This metadata is completely absent in a backup.</p>
"
"<p>I'm not sure why I need to use ul-li vs simply using divs when listing items. I can make both look exactly the same so where is the functional advantage to creating an unordered list vs lining up divs?</p>
","2988","J&#246;rg W Mittag","<blockquote>
  <p>Im not sure why i need to use ul-li vs simply using divs when listing items. I can make both <strong>look</strong> exactly the same</p>
</blockquote>

<p>That there is the key word in your question: ""look"". Can you also make them <em>type</em> the same for blind people using a Braille reader? Can you make them <em>sound</em> the same for blind people using a text-to-speech synthesizer? Can you <em>still</em> make them look the same for visually impaired people using custom client-side CSS user-stylesheets?</p>

<p>That word, ""look"", is a very dangerous word – when you use that in relation to HTML, all alarms should go off in your head. HTML is a language for describing the semantic structure of a hypermedia document. A semantic structure doesn't <em>have</em> a ""look"", it's an abstract concept.</p>

<p>Even if you don't care about all this semantic hocuspocus and you don't care about blind people, consider this: Google, Yahoo, MSN and Co. don't have eyes, they don't ""look"" at your rendered CSS.</p>
"
"<p>What are the things you wish Ruby (and more generally the Ruby community) would improve? </p>

<p>I read <a href=""http://blog.hasmanythrough.com/2008/6/20/recursive-lambda"" rel=""nofollow"">somewhere</a> that Ruby is the love-child of Smalltalk and LISP, with Miss Perl as the Nanny.</p>

<p>I have a lot of respect for Ruby's parents, but I'm not sure I like the influence Miss Perl had on the child.  Specifically, I don't like the predefined variables: I need a <a href=""http://grox.net/doc/ruby/ruby_on_rails_cheat_sheet.png"" rel=""nofollow"">cheat sheet</a> to know what they mean.  You could say ""just don't use them"".  Well, I don't... but other people do.  And when I download a plugin on the Web, I have no choice but to fetch my cheat-sheet if I ever need to go and touch the source code.  I just wish they would remove those from the language itself.</p>

<p>Also, I think that Ruby is too much of a moving target.  My code breaks on every new Ruby upgrade, even on minor releases.  This is true also of Ruby on Rails and most Rails plugins I have worked with: they just change all the time, and nobody seems to care whether the changes break everything or not.  IMHO, although I love a lot of things in Ruby, this lack of stability is almost a show-stopper.</p>
","2988","J&#246;rg W Mittag","<p>I would like to have support for static compile-time metaprogramming. The <a href=""http://ConvergePL.Org/documentation/current/ctmp/"" rel=""nofollow"">Converge Programming Language</a> might be a good starting point.</p>
"
"<p>What are the things you wish Ruby (and more generally the Ruby community) would improve? </p>

<p>I read <a href=""http://blog.hasmanythrough.com/2008/6/20/recursive-lambda"" rel=""nofollow"">somewhere</a> that Ruby is the love-child of Smalltalk and LISP, with Miss Perl as the Nanny.</p>

<p>I have a lot of respect for Ruby's parents, but I'm not sure I like the influence Miss Perl had on the child.  Specifically, I don't like the predefined variables: I need a <a href=""http://grox.net/doc/ruby/ruby_on_rails_cheat_sheet.png"" rel=""nofollow"">cheat sheet</a> to know what they mean.  You could say ""just don't use them"".  Well, I don't... but other people do.  And when I download a plugin on the Web, I have no choice but to fetch my cheat-sheet if I ever need to go and touch the source code.  I just wish they would remove those from the language itself.</p>

<p>Also, I think that Ruby is too much of a moving target.  My code breaks on every new Ruby upgrade, even on minor releases.  This is true also of Ruby on Rails and most Rails plugins I have worked with: they just change all the time, and nobody seems to care whether the changes break everything or not.  IMHO, although I love a lot of things in Ruby, this lack of stability is almost a show-stopper.</p>
","2988","J&#246;rg W Mittag","<p>Getting rid of the artificial distinction between Modules and Classes would be nice.</p>

<p>Both Modules and Classes are Namespaces. Modules are also Mixins, while Classes aren't. Classes can also be instantiated while Modules can't. This distinction is unnecessary. Just get rid of Modules and allow Classes to be used as Mixins.</p>

<p>An example of a language where this works is <a href=""http://NewspeakLanguage.Org/"" rel=""nofollow"">Newspeak</a>.</p>
"
"<p>What are the things you wish Ruby (and more generally the Ruby community) would improve? </p>

<p>I read <a href=""http://blog.hasmanythrough.com/2008/6/20/recursive-lambda"" rel=""nofollow"">somewhere</a> that Ruby is the love-child of Smalltalk and LISP, with Miss Perl as the Nanny.</p>

<p>I have a lot of respect for Ruby's parents, but I'm not sure I like the influence Miss Perl had on the child.  Specifically, I don't like the predefined variables: I need a <a href=""http://grox.net/doc/ruby/ruby_on_rails_cheat_sheet.png"" rel=""nofollow"">cheat sheet</a> to know what they mean.  You could say ""just don't use them"".  Well, I don't... but other people do.  And when I download a plugin on the Web, I have no choice but to fetch my cheat-sheet if I ever need to go and touch the source code.  I just wish they would remove those from the language itself.</p>

<p>Also, I think that Ruby is too much of a moving target.  My code breaks on every new Ruby upgrade, even on minor releases.  This is true also of Ruby on Rails and most Rails plugins I have worked with: they just change all the time, and nobody seems to care whether the changes break everything or not.  IMHO, although I love a lot of things in Ruby, this lack of stability is almost a show-stopper.</p>
","2988","J&#246;rg W Mittag","<p>Make Ruby completely Message Sending based, get rid of everything that is not a message send: local variables, global variables, instance variables, class hierarchy variables, constants, magic globals, magic constants, builtin operators, builtin keywords, even literals. See <a href=""http://Research.Sun.Com/self/"" rel=""nofollow"">Self</a>, <a href=""http://Ioke.Org/"" rel=""nofollow"">Ioke</a> or <a href=""http://NewspeakLanguage.Org/"" rel=""nofollow"">Newspeak</a> for the incredible power and elegance this gains.</p>
"
"<p>What are the things you wish Ruby (and more generally the Ruby community) would improve? </p>

<p>I read <a href=""http://blog.hasmanythrough.com/2008/6/20/recursive-lambda"" rel=""nofollow"">somewhere</a> that Ruby is the love-child of Smalltalk and LISP, with Miss Perl as the Nanny.</p>

<p>I have a lot of respect for Ruby's parents, but I'm not sure I like the influence Miss Perl had on the child.  Specifically, I don't like the predefined variables: I need a <a href=""http://grox.net/doc/ruby/ruby_on_rails_cheat_sheet.png"" rel=""nofollow"">cheat sheet</a> to know what they mean.  You could say ""just don't use them"".  Well, I don't... but other people do.  And when I download a plugin on the Web, I have no choice but to fetch my cheat-sheet if I ever need to go and touch the source code.  I just wish they would remove those from the language itself.</p>

<p>Also, I think that Ruby is too much of a moving target.  My code breaks on every new Ruby upgrade, even on minor releases.  This is true also of Ruby on Rails and most Rails plugins I have worked with: they just change all the time, and nobody seems to care whether the changes break everything or not.  IMHO, although I love a lot of things in Ruby, this lack of stability is almost a show-stopper.</p>
","2988","J&#246;rg W Mittag","<p>Replace the Mixin system with a <a href=""http://WWW.IAM.UniBe.Ch/~scg/Research/Traits/"" rel=""nofollow"">Traits</a> system.</p>
"
"<p>What are the things you wish Ruby (and more generally the Ruby community) would improve? </p>

<p>I read <a href=""http://blog.hasmanythrough.com/2008/6/20/recursive-lambda"" rel=""nofollow"">somewhere</a> that Ruby is the love-child of Smalltalk and LISP, with Miss Perl as the Nanny.</p>

<p>I have a lot of respect for Ruby's parents, but I'm not sure I like the influence Miss Perl had on the child.  Specifically, I don't like the predefined variables: I need a <a href=""http://grox.net/doc/ruby/ruby_on_rails_cheat_sheet.png"" rel=""nofollow"">cheat sheet</a> to know what they mean.  You could say ""just don't use them"".  Well, I don't... but other people do.  And when I download a plugin on the Web, I have no choice but to fetch my cheat-sheet if I ever need to go and touch the source code.  I just wish they would remove those from the language itself.</p>

<p>Also, I think that Ruby is too much of a moving target.  My code breaks on every new Ruby upgrade, even on minor releases.  This is true also of Ruby on Rails and most Rails plugins I have worked with: they just change all the time, and nobody seems to care whether the changes break everything or not.  IMHO, although I love a lot of things in Ruby, this lack of stability is almost a show-stopper.</p>
","2988","J&#246;rg W Mittag","<p>Replace Exceptions with a Common Lisp style <a href=""http://GigaMonkeys.Com/book/beyond-exception-handling-conditions-and-restarts.html"" rel=""nofollow"">Conditions</a> system.</p>
"
"<p>I was wondering if there is such a thing as regular expressions for sequential data that isn't a string.</p>

<p>I know that regular expressions essentially boil down to DFAs, but I'm more interested in higher-level languages for specifying these DFAs.</p>
","2988","J&#246;rg W Mittag","<p>There is absolutely nothing in the theory of regular expressions that prevents them from being applied to something else than just strings of characters. It's just that most regular expression engine implementations don't allow that.</p>

<p>However, if you have a regular expression engine that allows you to treat a string as un-encoded 8-Bit data (sometimes called <code>BINARY</code>, <code>8BIT</code> or <code>ASCII-8BIT</code>), then you can use that engine to parse byte-oriented binary data.</p>

<p><a href=""http://CompLang.Org/ragel/"" rel=""nofollow"">Ragel</a> is a state machine compiler that is specifically designed for parsing binary protocols. You write your state machine in a high-level (regexp-like) DSL and Ragel then compiles that into your target language – Ragel currently supports C, C++, Objective-C, D, Java and Ruby.</p>

<p>Most functional programming languages have powerful pattern matching facilities baked right into the language itself. those facilities can be used to pattern match binary data. One example of this is Erlang's support for <a href=""http://Erlang.Se/euc/00/bit%5Fsyntax.html"" rel=""nofollow"">building and pattern matching binary data structures</a>.</p>

<p><a href=""http://TinLizzie.Org/ometa/"" rel=""nofollow"">OMeta</a> is a pattern matching and pattern transformation language that is basically a superset of regular expressions, on steroids. It supports matching of not only strings of characters but also arrays and lists of integers and arbitrary objects.</p>
"
"<p>I'm curious to see how popular the alternatives to C are in the embedded developer world e.g. Ada...</p>

<p>I've only ever used C (with a little bit of assembler), but then my targets have very limited resources. Is there a move else where in this space to something else? What is winning the ware in set top boxes?</p>

<p>If !C what was the underlying reason?</p>

<ul>
<li>Compiler support for target </li>
<li>Trace \ static analysis tools</li>
<li>other...</li>
</ul>

<p>Thanks.</p>
","2988","J&#246;rg W Mittag","<p><a href=""http://Forth.Org/"">Forth</a> is quite popular for embedded development.</p>

<p>Also, while <a href=""http://Smalltalk.Org/"">Smalltalk</a> is probably not popular in the embedded community, <a href=""http://Smalltalk.Org/versions/OOVM.html"">embedded development</a> is definitely popular in the Smalltalk community.</p>
"
"<p>I have my git repo which, at the root, has two sub-dirs</p>

<pre><code>/finisht
/static
</code></pre>

<p>When this was in SVN, <code>/finisht</code> was checked out in one place, while <code>/static</code> was checked out elsewhere, like so:</p>

<pre><code>svn co svn+ssh://admin@domain.com/home/admin/repos/finisht/static static
</code></pre>

<p>Is there anyway to do this with git?</p>
","2988","J&#246;rg W Mittag","<p><strong>This answer is outdated and only apply to git versions lower than 1.7.0 (Feb. 2012). See below for newer versions.</strong></p>

<p>No, that's not possible in Git.</p>

<p>Implementing something like this in Git would be a substantial effort and it would mean that the integrity of the clientside repository could no longer be guaranteed. If you are interested, search for discussions on ""sparse clone"" and ""sparse fetch"" on the git mailinglist.</p>

<p>In general, the consensus in the Git community is that if you have several directories that are always checked out independently, then these are really two different projects and should live in two different repositories. You can glue them back together using <a href=""http://Book.Git-SCM.Com/5_submodules.html"">Git Submodules</a>.</p>
"
"<p>I'm probably doing something stupid but I can't figure out what it is.</p>

<p>The output I'm seeing from this program is</p>

<pre><code>foo

test
</code></pre>

<p>What I'm expecting to see is</p>

<pre><code>foo
abc
test
</code></pre>

<p>Does anyone see anything obviously wrong here?</p>

<pre><code>class Foo

    def initialize(l)
    @label = l
    end

    def label
    @label
    end

    def abc
    @abc
    end

    def abc=(abc)
    @abc
    end

end

foo = Foo.new(""foo"")
foo.abc=(""abc"")
puts foo.label
puts foo.abc
puts ""test""
</code></pre>
","2988","J&#246;rg W Mittag","<p>In addition to Logan's answer which tells you what the error was, here's how that error never would have occurred in the first place:</p>

<pre><code>class Foo
  def initialize(l)
    @label = l
  end

  attr_reader :label
  attr_accessor :abc
end
</code></pre>
"
"<p>You can find the syntax <a href=""http://daringfireball.net/projects/markdown/syntax"">here</a>.</p>

<p>The source that follows with the download is written in <a href=""http://en.wikipedia.org/wiki/Perl"">Perl</a>, which I have no intentions of honoring. It is riddled with regular expressions, and it relies on <a href=""http://en.wikipedia.org/wiki/MD5"">MD5</a> hashes to escape certain characters. Something is just wrong about that!</p>

<p>I'm about to hard code a parser for <a href=""http://en.wikipedia.org/wiki/Markdown"">Markdown</a>. What is experience with this?</p>

<p>If you don't have anything meaningful to say about the actual parsing of Markdown, spare me the time. (This might sound harsh, but yes, I'm looking for insight, not a solution, that is, a third-party library).</p>

<p>To help a bit with the answers, regular expressions are meant to <strong>identify patterns</strong>! NOT to parse an entire grammar. That people consider doing so is foobar.</p>

<ul>
<li>If you think about Markdown, it's fundamentally based around the concept of paragraphs.</li>
<li>As such, a reasonable approach might be to split the input into paragraphs. </li>
<li>There are many kinds of paragraphs, for example, heading, text, list, blockquote, and code.</li>
<li>The challenge is thus to identify these paragraphs and in what context they occur.</li>
</ul>

<p>I'll be back with a solution, once I find it's worthy to be shared.</p>
","2988","J&#246;rg W Mittag","<p>The only markdown implementation I know of, that uses an actual parser, is <a href=""https://GitHub.Com/JGM/"">Jon MacFarleane</a>’s <a href=""https://GitHub.Com/JGM/PEG-Markdown/"">peg-markdown</a>. <a href=""https://GitHub.Com/JGM/PEG-Markdown/tree/master/markdown%5Fparser.leg"">Its parser</a> is based on a <a href=""http://PDOS.CSAIL.MIT.Edu/~baford/packrat/"">Parsing Expression Grammar</a> parser generator called <a href=""http://Piumarta.Com/software/peg/"">leg</a>.</p>

<p><hr /></p>

<p>EDIT: <a href=""http://EigenClass.Org/R2/"">Mauricio Fernandez</a> recently released his <a href=""https://GitHub.Com/MFP/OcsiBlog/blob/master/simple%5Fmarkup.ml"">Simple Markup Markdown parser</a>, which he wrote as part of his <a href=""https://GitHub.Com/MFP/OcsiBlog/"">OcsiBlog</a> Weblog Engine. Because the parser is written in <a href=""http://Caml.INRIA.Fr/"">OCaml</a>, it is <em>extremely</em> simple and short (268 SLOC for the <a href=""https://GitHub.Com/MFP/OcsiBlog/blob/more-markdown-compat/simple%5Fmarkup.ml"">parser</a>, 43 SLOC for the <a href=""https://GitHub.Com/MFP/OcsiBlog/blob/more-markdown-compat/simple%5Fmarkup%5F%5Fhtml.ml"">HTML emitter</a>), yet <a href=""http://EigenClass.Org/R2/writings/markdown-redux-html-generation""><em>blazingly</em> fast</a> (20% faster than <a href=""http://WWW.Pell.Portland.Or.Us/~orc/Code/markdown/"">discount</a> (written in hand-optimized C) and <em>sixhundred</em> times faster than <a href=""http://Deveiate.Org/projects/BlueCloth/"">BlueCloth</a> (<a href=""http://Ruby-Lang.Org/"">Ruby</a>)), despite the fact that it isn't even optimized for performance yet. Because it is only intended for internal use by Mauricio himself for his weblog, there are a few deviations from the <a href=""http://DaringFireball.Net/projects/markdown/syntax/"">official Markdown specification</a>, but Mauricio has created <a href=""https://GitHub.Com/MFP/OcsiBlog/tree/more-markdown-compat/"">a branch which reverts most of those changes</a>.</p>
"
"<p>When using class files in Ruby, do you put the 'requires' statements at the top of the file, or inside the class definition?</p>
","2988","J&#246;rg W Mittag","<p>It doesn't really matter where you put them, but if you put them <em>inside</em> a <code>class</code> or <code>module</code> expression, then it looks like you are importing whatever is in the <code>require</code>d file into the class's namespace, which is not true: everything ends up in the global namespace (or whatever namespaces are defined <em>in the library</em>).</p>

<p>So, better put them at the top to avoid any confusion.</p>
"
"<p>I have the following HTML:</p>

<pre><code>&lt;html&gt;
&lt;body&gt;
&lt;h1&gt;Foo&lt;/h1&gt;
&lt;p&gt;The quick brown fox.&lt;/p&gt;
&lt;h1&gt;Bar&lt;/h1&gt;
&lt;p&gt;Jumps over the lazy dog.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>...and by using the RubyGem <a href=""http://nokogiri.rubyforge.org/nokogiri/"">Nokogiri</a> (a <a href=""http://wiki.github.com/why/hpricot"">hpricot</a> replacement), I'd like to change it into the following HTML:</p>

<pre><code>&lt;html&gt;
&lt;body&gt;
&lt;p class=""title""&gt;Foo&lt;/p&gt;
&lt;p&gt;The quick brown fox.&lt;/p&gt;
&lt;p class=""title""&gt;Bar&lt;/p&gt;
&lt;p&gt;Jumps over the lazy dog.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>In other words: How can I find and replace certain HTML tags by using Nokogiri? I know how to find them (using css keywords), but I don't know how to replace them while parsing the document.</p>

<p>Thanks for your help!</p>
","2988","J&#246;rg W Mittag","<pre><code>#!/usr/bin/env ruby
require 'rubygems'
gem 'nokogiri', '~&gt; 1.2.1'
require 'nokogiri'

doc = Nokogiri::HTML.parse &lt;&lt;-HERE
  &lt;html&gt;
    &lt;body&gt;
      &lt;h1&gt;Foo&lt;/h1&gt;
      &lt;p&gt;The quick brown fox.&lt;/p&gt;
      &lt;h1&gt;Bar&lt;/h1&gt;
      &lt;p&gt;Jumps over the lazy dog.&lt;/p&gt;
    &lt;/body&gt;
  &lt;/html&gt;
HERE

doc.search('h1').each do |heading|
  heading.name = 'p'
  heading['class'] = 'title'
end

puts doc.to_html
</code></pre>
"
"<p>I am looking to do a presentation at work to our development team. I was wondering if their is any new tool which would be easy to demonstrate. It is just an after work thing for talking about new technologies. Thanks</p>
","2988","J&#246;rg W Mittag","<p>I would say, the biggest thing in 2009 so far, and probably for the whole year, has been the <a href=""http://GBracha.BlogSpot.Com/2009/02/newspeak-prototype-escapes-into-wild.html"" rel=""nofollow"">release</a> of the <a href=""http://NewspeakLanguage.Org/downloads/"" rel=""nofollow"">prototype</a> of <a href=""http://GBracha.BlogSpot.Com/"" rel=""nofollow"">Gilad Bracha</a>'s <a href=""http://NewspeakLanguage.Org/"" rel=""nofollow"">Newspeak Programming Language</a>, and its accompanying <a href=""http://Blog.3plus4.Org/2008/05/08/which-is-which-in-newspeak-ui-brazil/"" rel=""nofollow"">GUI Framework Brazil</a>, the <a href=""http://Blog.3plus4.Org/2008/06/20/which-is-which-in-newspeak-ui-hopscotch/"" rel=""nofollow"">Application Development Framework Hopscotch</a> and the <a href=""http://GBracha.BlogSpot.Com/2008/11/dynamic-ides-for-dynamic-languages.html"" rel=""nofollow"">Hopscotch IDE and debugger</a>.</p>
"
"<p>Can someone please give me a recursive command that will go through a directory and make all normal files permission 644 and all sub directories 755?</p>

<p>I am really getting tired of doing this manually every time I have to install something on my host. I don't know enough BASH (Shell?) command to do this.</p>
","2988","J&#246;rg W Mittag","<p>No, there is no command to recursively change the permissions. If there were such a command, it would violate the Unix mantra: Do One Thing And Do It Well.</p>

<p>However, there are <em>two</em> commands: one for recursing (<code>find</code>), and one for changing permissions (<code>chmod</code>).</p>

<p>So, the magic command line is:</p>

<pre><code>find . -type d -exec chmod 0755 '{}' + -or -type f -exec chmod 0644 '{}' +
</code></pre>
"
"<p>According to the HTTP/1.1 Spec: </p>

<blockquote>
  <p>The <strong><code>POST</code></strong> method is used to request that the origin server accept the entity enclosed in the request as a new subordinate of the resource identified by the <code>Request-URI</code> in the <code>Request-Line</code></p>
</blockquote>

<p>In other words, <code>POST</code> is used to <strong>create</strong>.</p>

<blockquote>
  <p>The <strong><code>PUT</code></strong> method requests that the enclosed entity be stored under the supplied <code>Request-URI</code>. If the <code>Request-URI</code> refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version of the one residing on the origin server. If the <code>Request-URI</code> does not point to an existing resource, and that URI is capable of being defined as a new resource by the requesting user agent, the origin server can create the resource with that URI.""</p>
</blockquote>

<p>That is, <code>PUT</code> is used to <strong>create or update</strong>.</p>

<p>So, which one should be used to create a resource? Or one needs to support both?</p>
","2988","J&#246;rg W Mittag","<p>REST is a <em>very</em> high-level concept. In fact, it doesn't even mention HTTP at all!</p>

<p>If you have any doubts about how to implement REST in HTTP, you can always take a look at the <a href=""http://AtomEnabled.Org/developers/protocol/atom-protocol-spec.php"">Atom Publication Protocol (AtomPub)</a> specification. AtomPub is a standard for writing RESTful webservices with HTTP that was developed by many HTTP and REST luminaries, with some input from Roy Fielding, the inventor of REST and (co-)inventor of HTTP himself.</p>

<p>In fact, you might even be able to use AtomPub directly. While it came out of the blogging community, it is in no way restricted to blogging: it is a generic protocol for RESTfully interacting with arbitrary (nested) collections of arbitrary resources via HTTP. If you can represent your application as a nested collection of resources, then you can just use AtomPub and not worry about whether to use PUT or POST, what HTTP Status Codes to return and all those details.</p>

<p><a href=""http://AtomEnabled.Org/developers/protocol/atom-protocol-spec.php#crwp"">This is what AtomPub has to say about resource creation</a>:</p>

<blockquote>
  <p>To add members to a Collection, clients send POST requests to the URI of the Collection.</p>
</blockquote>
"
"<p>I've noticed that there are awvully few programming tutorials in my native language (Latvian). And one of the best ones seems to have gone permanently offline recently. As such I'm ever more inclined to start writing my own programming tutorial.</p>

<p>Since I'm no writer and free time is scarce, I thought of making this a wiki-thing. This way other interested enthusiasts (I already know a few) could also join in easily.</p>

<p>The question is - <strong>which wiki software out there is best suited for such a task?</strong> I've a few key features in mind that would be nice to have, I'll list them here:</p>

<ul>
<li>Full Unicode support, since Latvian has some nonstandard characters in it;</li>
<li>Revision control;</li>
<li>Access control (with anonymous access supported);</li>
<li>Code syntax coloring, preferably extensible so that tutorials for different programming languages can be made;</li>
<li>Automatic TOC generation from all the pages would be nice (but can be done by hand too);</li>
<li>Support for diagrams and mathematical formulas would be nice (but can also be done with picture uploads);</li>
<li>The ability to provide a ""printable"" version for pages would be nice, not to mention a possibility to compile the whole thing in a downloadable e-book.</li>
</ul>

<p>The server that I have has Linux on it, so preferably no ASP/ASP.NET - but that can be arranged too if really needed.</p>

<p><strong>Added:</strong> Well, it seems that there are really just two good candidates - DokuWiki and MediaWiki.  Both have the great feature of already having a Latvian localization. I'd go for MediaWiki, as it seems to have at least one major advantage - versioning of attachments. (Plus undoubtedly the best tested wiki system in the world) However I'm afraid if it isn't a bit too over-feature-ful for such a small project. Any comments on this?</p>
","2988","J&#246;rg W Mittag","<p>Unfortunately, I don't think that there is a Wiki that is particularly well suited for sourcecode-heavy articles.</p>

<p>However, you might want to head on over to the <a href=""http://LiteratePrograms.Org/"" rel=""nofollow"">Literate Programs Wiki</a>. Literate Programming is a <em>great</em> way of teaching programming, and the Literate Programs Wiki combines the MediaWiki Wiki software with the noweb Literate Programming system.</p>

<p>Maybe you can ask them to help you set up your own version. Or maybe you can just use their Wiki, after all, MediaWiki supports multiple languages.</p>
"
"<p>At my office, we have a network directory structure like this:</p>

<pre><code>/jobs/2004/3999-job_name/...
/jobs/2004/4000-job_name/...
</code></pre>

<p>The issue is that employees rename the ""4000-job_name"" folders (which in turn breaks other things that rely on the name being consistent with a database).</p>

<p>How can I stop users from renaming the parent folder while still allowing them full control of that folder's contents? </p>

<p>Please keep in mind that this is a Samba share that Windows users will be accessing.</p>
","2988","J&#246;rg W Mittag","<p>The question has already been answered, so I'm just gonna make a brief remark: in your question, you use the terms ""folder"" and ""directory"" interchangeably. Those two are very different, and in my experience 99% of all problems with Unix permissions have to do with confusing the two. Remember: Unix has directories, not folders.</p>

<p><hr /></p>

<p>EDIT: a folder is two pieces of cardboard glued together, that <em>contain</em> files. So, a folder is a container, it actually physically contains the files it holds. So, obviously a file can only be in one container at a time. To rename a file, you not only need access to the folder, you also need access to the file. Same to delete a file.</p>

<p>A directory, OTOH, is <em>itself</em> a file. <em>[This is, in fact, exactly how directories were implemented in older Unix filesystems: just regular files with a special flag, you could even open them up in an editor and change them.]</em> It contains a list of mappings from name to location (think phone directory, or a large warehouse). <em>[In Unix, these mappings are called <strong>links</strong> or <strong>hardlinks</strong>.]</em> Since the directory only contains the names of the files, not the files themselves, the same file can be present in multiple directories under different names. To change the name of a file (or more precisely to change <em>a</em> name of a file, since it can have more than one), you only need write access to the directory, not the file. Same to delete a file. Well, actually, you <em>can't</em> delete a file, you can only delete an entry in the directory – there could still be other entries in other directories pointing to that file. <em>[That's why the syscall/library function to delete a file is called <code>unlink</code> and not <code>delete</code>: because you just remove the link, not the file itself; the file gets automatically ""garbage collected"" if there are no more links pointing to it.]</em></p>

<p>That's why I believe the folder metaphor for Unix directories is wrong, and even dangerous. The number one security question on one of the Unix mailinglists I'm on, is ""Why can A delete B's files, even though he doesn't have write access to them?"" and the answer is, he only needs write access to the directory. So, because of the folder metaphor, people think that their files are safe, even if they are not. With the directory metaphor, it would be much easier to explain what's going on: if I want to delete you from my phonebook, I don't have to hunt you down and kill you, I just need a pencil!</p>
"
"<p>When trying to do something fairly advanced in C# (like some sort of hack), the concept of ""first class"" is raised.</p>

<p>For example, a method is a first class programming construct because you can do xyz with it (xyz is not what the method does, but what a method in general gives you, I can't remember what xyz was now), but in .NET 1.1 delegates were not able to be passed into methods because they were not first class programming constructs (I read something along these lines).</p>

<p>What exactly is a first class programming construct?</p>

<p>Thanks</p>
","2988","J&#246;rg W Mittag","<p>The notion of <a href=""http://C2.Com/cgi/wiki/?FirstClass"">""first-class citizen"" or ""first-class element""</a> in a programming language was introduced by British computer scientist <a href=""http://Wikipedia.Org/wiki/Christopher%5FStrachey"">Christopher Strachey</a> in the 1960s in the context of first-class functions. The most famous formulation of this principle is probably in <a href=""http://MITPress.MIT.Edu/sicp/full-text/book/book-Z-H-12.html#call%5Ffootnote%5FTemp%5F121"">Structure and Interpretation of Computer Programs</a> by Gerald Jay Sussman and Harry Abelson:</p>

<ul>
<li>They may be named by variables.</li>
<li>They may be passed as arguments to procedures.</li>
<li>They may be returned as the results of procedures.</li>
<li>They may be included in data structures.</li>
</ul>

<p>Basically, it means that you can do with this programming language element everything that you can do with all other elements in the programming language.</p>
"
"<p>I don't think this is possible without a bit of hacking but just throwing it out there.</p>

<p>In Git is it possible to relocate the bulk of the .git folder (/objects i assume) to another location. I am having a problem without my current hard drive filling up with git and i want to be able to move it to a separate hard drive to free up space.</p>
","2988","J&#246;rg W Mittag","<p>There are three possibilities I can think of:</p>

<ol>
<li>The <code>GIT_DIR</code> environment variable tells Git where to look for the repository. The default is <code>.git</code>, obviously, but you can also set it to <code>/some/where/else</code>, if you want.</li>
<li>The <code>GIT_OBJECT_DIR</code> environment variable does the same, but just for the <code>.git/objects</code> subdirectory, not the whole repository.</li>
<li>You can use the file <code>.git/objects/info/alternates</code> or the environment variable <code>$GIT_ALTERNATE_OBJECT_DIRECTORIES</code> to ""borrow"" objects from another repository.</li>
</ol>

<p>See the <a href=""http://Kernel.Org/pub/software/scm/git/docs/gitrepository-layout.html"" rel=""nofollow"">git-repositorylayout(5) manual page</a> for details.</p>
"
"<p>I've been a Visual Studio user since 1997, and used VB 3.0 before that. My whole professional life has been spent inside the Microsoft development environments.</p>

<p>Now I would like to branch out into Ruby on Rails to try something different, and it doesn't have the kind of vendor support that C# does (for very obvious reasons).</p>

<p>For someone coming from the world of Visual Studio, what is the best total environment (IDE, tools, gems, etc) to set up for RoR development on Windows that would make the transition easier?</p>
","2988","J&#246;rg W Mittag","<p>If you want to stick with Visual Studio, you can always use the <a href=""http://SapphireSteel.Com/Ruby-In-Steel-Developer-Overview"">Ruby in Steel</a> plugin by <a href=""http://SapphireSteel.Com/"">Sapphire Steel</a>. The best traditional IDE for Ruby is probably <a href=""http://NetBeans.Org/"">NetBeans</a>, it even has a special stripped-down <a href=""http://NetBeans.Org/features/ruby/"">Ruby Edition</a>.</p>

<p>However, note that unlike less expressive languages like Java, C# or VB.NET, you can not only get by, but even be <em>more</em> productive with a good text editor than with a traditional static IDE. IDEs like NetBeans, Eclipse and Visual Studio are designed with static languages in mind, and trying to force Ruby into that ecosystem is just unnatural.</p>

<p>There is a nice article on <a href=""http://AkitaOnRails.Com/2009/1/13/the-best-environment-for-rails-on-windows/""><em>The Best Environment for Rails on Windows</em></a> by Fabio Akita that you might want to read. While I don't agree with everything he writes (mostly because I don't use Rails), it is a pretty good introduction of how you might want to setup a development environment specifically for Rails.</p>
"
"<p>I want to check whether a value is equal to 1. Is there any difference in the following lines of code</p>

<p>Evaluated value == 1</p>

<p>1 == evaluated value</p>

<p>in terms of the compiler execution</p>
","2988","J&#246;rg W Mittag","<p>It depends on the programming language.</p>

<p>In Ruby, Smalltalk, Self, Newspeak, Ioke and many other single-dispatch object-oriented programming languages, <code>a == b</code> is actually a message send. In Ruby, for example, it is equivalent to <code>a.==(b)</code>. What this means, is that when you write <code>a == b</code>, then the method <code>==</code> in the class of <code>a</code> is executed, but when you write <code>b == a</code>, then the method in the class of <code>b</code> is executed. So, it's obviously <em>not</em> the same thing:</p>

<pre><code>class A; def ==(other) false end; end
class B; def ==(other) true  end; end

a, b = A.new, B.new

p a == b # =&gt; false
p b == a # =&gt; true
</code></pre>
"
"<p>Please can someone tell me a simple way to find href and src tags in an html file using regular expressions in Java?<br />
And then, how do I get the URL associated with the tag?</p>

<p>Thanks for any suggestion.</p>
","2988","J&#246;rg W Mittag","<p>Regular expressions can only parse regular languages, that's why they are called <em>regular</em> expressions. HTML is not a regular language, ergo it cannot be parsed by regular expressions.</p>

<p>HTML parsers, on the other hand, <em>can</em> parse HTML, that's why they are called HTML parsers.</p>

<p>You should use you favorite HTML parser instead.</p>
"
"<p>Just wondering how the world of assembly works, and I was reading about the assembly language on <a href=""http://en.wikipedia.org/wiki/Assembly%5Flanguage"" rel=""nofollow"">wiki</a> and this quote struck me:</p>

<blockquote>
  <p>It implements a symbolic representation of the numeric machine codes and other constants needed to program a particular CPU architecture.</p>
</blockquote>

<p>I always thought assembly was a fixed language based on your CPU (with different compilers and languages based on said CPU) so that for your CPU you could only use this type of assembly to talk to your hardware.</p>

<p>But based on that quote, there could be other languages that use other symbols to represent the same numeric machine code.</p>

<p>So, are there any other languages that talk straight to the hardware that aren't assembly? Or am I getting it wrong?</p>
","2988","J&#246;rg W Mittag","<p>Sure, there are lots of languages that talk directly to the hardware that are not assembly. For example, on the Burroughs B5000, the CPU was programmed in a variant of ALGOL, on the Lisp Machine, the CPU executed Lisp code directly, on the early Smalltalk workstations the CPU executed Smalltalk bytecode directly. Researchers have built CPUs based on graph-reduction engines that execute Lambda Calculus directly. There's more than one company that build Java processors, which are of course programmed in JVM bytecode.</p>
"
"<p>I've been looking at Haskell and I'd quite like to write a compiler (as a learning exercise) in it, since a lot of it's innate features can be readily applied to a compiler (particularly a recursive decent compiler).</p>

<p>What I can't quite get my head around is how to represent a language's grammar in a Haskell-ian way. My first thought was to use recursive data type definitions, but I can't see how I use them to match against keywords in the language (""if"") for example.</p>

<p>Thoughts and suggestions greatly appreciated,</p>

<p>Pete</p>
","2988","J&#246;rg W Mittag","<p>Maybe you can look at some real-world projects to see how they do it?</p>

<p>Less than a week ago, the <a href=""http://Projects.Haskell.Org/language-python/"" rel=""nofollow"">Language-Python</a> project was <a href=""http://Haskell.Org/pipermail/haskell-cafe/2009-March/058051.html"" rel=""nofollow"">announced</a> on the <a href=""http://Haskell.Org/pipermail/haskell-cafe/"" rel=""nofollow"">Haskell-Cafe mailinglist</a>. It's a <a href=""http://Python.Org/"" rel=""nofollow"">Python</a> parser implemented in Haskell, using the <a href=""http://Haskell.Org/happy/"" rel=""nofollow"">Happy</a> parser generator and <a href=""http://Haskell.Org/alex/"" rel=""nofollow"">Alex</a> lexer generator.</p>

<p>And of course, there is <a href=""http://PugsCode.Org/"" rel=""nofollow"">Pugs</a>, an implementation of <a href=""http://Dev.Perl.Org/perl6/"" rel=""nofollow"">Perl 6</a> in Haskell (the first implementation of Perl 6 that conforms to a significant subset of the Perl 6 specification).</p>
"
"<p>Is it correct to say that IBM's cell is a multi-core architecture? I have to give a presentation on ""Multi-core architectures"" and was wondering if I could focus on the Cell processor.</p>
","2988","J&#246;rg W Mittag","<p>Yes, it is. It contains 9 cores: 8 SPUs (Synergistic Processing Units), extremely simple, but fast 128-Bit SIMD processors, kind of like MMX on x86 or AltiVec on PowerPC, and 1 
PPE (PowerPC Processing Element), a stripped-down version of the PPC970 (this is the same processor that the G5 in Apple's PowerMacs was based on) without out-of-order execution. On the PlayStation 3, 1 of the 8 SPUs is deactivated, this allows Sony to ship chips with defects in one of the SPUs, thus giving a higher yield and driving costs down.</p>

<p>The way it is supposed to be used, is that the PPE is only used to distribute work to the SPUs, all the real computation is done there. While the PPE is based on the PPC970, it is <em>much</em> simpler and much slower than its big brother: a lot of the branch prediction logic, out-of-order execution, caches and so on has been removed to drive costs and more importantly power consumption and heat generation down. Also, you need chip real estate for the SPUs.</p>
"
"<p>Due to the nature of OpenID, wouldn't it be a lucrative target for spammers? For starters, you could create an OpenID account on any site and use it on any other site which would mean that I could log into a forum and write a few thousand posts if the forum assumes that logged in users can be trusted.</p>

<p>Do you agree OpenID is lucrative for spammers? Does OpenID anticipate an onslaught?</p>
","2988","J&#246;rg W Mittag","<p>Yes, that is a problem. No, that doesn't have anything to do with OpenID.</p>

<p>OpenID is designed to be a user-friendly replacement for E-Mail based login. It is only designed to solve the usability problems of E-Mail based logins, it is not designed to solve any of the security problems of E-Mail based logins.</p>

<p>If there are rogue OpenID providers out there, that allow users to create accounts willy-nilly, without checking their identity, then that is a problem. However, the exact same problem also exists today, with E-Mail logins: if E-Mail providers allow you to create E-Mail accounts without proving your identity, then you can use that E-Mail address to log into any forum.</p>

<p>However, this problem has been solved long ago for the E-Mail case: only allow logins with E-Mail addresses from trustworthy providers. And the same can be done for OpenID: only accept OpenIDs issued from trustworthy providers. If someone logs in with <code>http://John.Doe.VeriSign.Com/</code>, you let them in, and if someone tries to log in with <code>http://Any.Nymous.Evil-4aX0rZ.ru/</code>, you reject them.</p>
"
"<p>I have looked for a <strong>good</strong> example of a <strong>Builder pattern</strong> (in C#), but cannot find one either because I don't understand the Builder pattern or I am trying to do something that was never intended.  For example, if I have an abstract automobile and abstract builder methods to create car parts, I should be able to send all 30 of my choices to the Director, have it build the pieces I need, then build my automobile.  Regardless of which car, truck, semi, etc. produced, I should be able to ""drive"" it in exactly the same way.</p>

<p>First problem is most examples hard code property values in to the concrete parts, which I really think should come from a database.  I thought the idea was to send my choices to the Director (from a data source) and have the builder create a customized product based on my data.</p>

<p>Second problem is I want the builder methods to actually create the parts then assign them to the product, not pass strings but real strongly typed product parts.</p>

<p>For example, I want to create a form on the fly by having a Builder manufacture form fields for me, including a label, an input section, validation, etc.  This way I can read the object from my ORM, check out the object's metadata, pass this to my Builder and add the newly created user control result to my web form.</p>

<p>However, every Builder example I find only has hard coded data instead of passing choices from the main code to the Builder and kicking out a customized product.  Everything seems to be a big static case statement.  For example, if I have three parameters with 10 choices each, I don't want to build 30 concrete Builder methods, I want to create only enough to manufacture the properties my product requires, which may be only three.</p>

<p>I am tempted to have the Director exist in the main code only.  There should be a way to automatically determine which concrete builder method to call similar to polymorphism and method overloads (although that is a very bad example) instead of using a case statement within the pattern.  (Every time I need to add a new product type, I will need to modify the existing Director, which is bad).</p>
","2988","J&#246;rg W Mittag","<p>I've never thought about it this way, but LINQ (the pattern, not the syntax) is actually a builder, right?</p>

<p>It's a fluent interface that builds a query and can create queries in different representations (SQL, in-memory object queries, webservice queries, Bart de Smet even wrote an implementation of Linq-to-Excel).</p>
"
"<p>I'm looking for real world examples of some bad side effects of code coverage.</p>

<p>I noticed this happening at work recently because of a policy to achieve 100% code coverage. Code quality has been improving for sure but conversely the testers seem to be writing more lax test plans because 'well the code is fully unit tested'. Some logical bugs managed to slip through as a result. They were a REALLY BIG PAIN to debug because 'well the code is fully unit tested'.</p>

<p>I think that was partly because our tool did statement coverage only. Still, it could have been time better spent.</p>

<p>If anyone has other negative side effects of having a code coverage policy please share. I'd like to know what kind of other 'problems' are happening out there in the real-world.</p>

<p>Thanks in advance.</p>

<p>EDIT: Thanks for all the really good responses. There are a few which I would mark as the answer but I can only mark one unfortunately.</p>
","2988","J&#246;rg W Mittag","<p>One of the largest pitfalls of code coverage is that people just talk about code coverage without actually specifying <em>what</em> type of code coverage they are talking about. The characteristics of C0, C1, C2 and even higher levels of code coverage are <em>very</em> different, so just talking about ""code coverage"" doesn't even make sense.</p>

<p>For example, achieving 100% full path coverage is pretty much impossible. If your program has <code>n</code> decision points, you need 2<sup>n</sup> tests (and depending on the definition, every single bit in a value is a decision point, so to achieve 100% full path coverage for an extremely simple function that just adds two <code>int</code>s, you need 18446744073709551616 tests). If you only have <em>one</em> loop, you already need <em>infinitely many</em> tests.</p>

<p>OTOH, achieving 100% C0 coverage is trivial.</p>

<p>Another important thing to remember, is that code coverage does <em>not</em> tell you what code was tested. It only tells you what code was <em>run</em>! You can try it out yourself: take a codebase that has 100% code coverage. Remove all the assertions from the tests. Now the codebase <em>still</em> has 100% coverage, but does not test a single thing! So, code coverage does not tell you what's tested, only what's not tested.</p>
"
"<p>Exists an universal phone developement language?
I mean, for example, php or java or whatever</p>

<p>Edit : We have to develop a few phone applicatons, and we are looking for the best reusable language in differents devices (Blackberry, iPhone, Motorola, etc) </p>
","2988","J&#246;rg W Mittag","<p><a href=""https://GitHub.Com/Rhomobile/Rhodes/"" rel=""nofollow"">Rhodes</a> by <a href=""http://Rhomobile.Com/"" rel=""nofollow"">Rhomobile</a> is a Ruby framework for building cross-platform phone applications. It allows you to build a single application that works on all major smartphones: iPhone, BlackBerry, Windows Mobile, Symbian and Android. (The only obvious omissions seem to be OpenMoko and PalmOS/webOS, but all the phones you listed are supported.)</p>

<p>The way Rhodes works, is that you write your application in Ruby and your UI in HTML. A Ruby implementation, the Rhodes framework itself, your application scripts and your HTML files then get packaged up into what looks to the phone's operating system like a single native application. Rhodes then runs a webserver inside of the phone and serves the application from there, using the phone's builtin web browser UI component and a JavaScript UI library for making the web app look like a native app. (E.g. iUI for the iPhone.)</p>

<p>There was a nice <a href=""http://MtnWestRubyConf.Org/2009/speakers#rhomobile"" rel=""nofollow"">introduction to Rhodes (with live coding)</a> by the Rhomobile CEO at the Mountain West RubyConf 2009, the <a href=""http://MWRC2009.Confreaks.Com/14-mar-2009-11-05-rhodes-the-open-source-ruby-framework-for-building-mobile-applications-adam-blum.html"" rel=""nofollow"">video is available at the Confreaks website</a>.</p>
"
"<p>I am writing an article on Unicode and discussing the advantages of this encoding scheme over outdated methods like ASCII. </p>

<p>As part of my research I am looking for a reference that listed the languages that could be fully represented using only the characters supported by ASCII. Haven't had much luck tracking it down with Google and I thought I'd tap the collective knowledge of SO to see if anyone had a reasonable list.</p>

<h2>Key points:</h2>

<ul>
<li>All languages listed must be able to
be <strong>completely</strong> represented using the character set available in ASCII.  </li>
<li>I know this won't be comprehensive,
but I am mostly interested in the
most common written languages.</li>
</ul>
","2988","J&#246;rg W Mittag","<p>There are no natural languages that I know of that can be fully represented in ASCII. Even American English, the language for which ASCII was invented, doesn't work: for one, there are a lot of foreign words that have been integrated into the American English language that cannot be represented in ASCII, like <em>resumé</em>, <em>naïve</em> or a word that probably every programmer uses regularly, <em>schönfinkeln</em>.</p>

<p>And two, ASCII is missing pretty much all typographic characters like “quotation marks”, dashes of various lengths (– and —), ellipses (…), thin and wide spaces and so on, all of which are used in American English.</p>
"
"<p>Should I just go to SourceForge and try to find something that looks interesting by doing a search? Or is there a Ruby-specific website that helps you to find open source projects to contribute to?</p>

<p>After you find it one, do you usually just send an email to the project owner to see if you can help or do you just start submitting code to their repository and they will take it or leave it after reviewing it for quality?</p>
","2988","J&#246;rg W Mittag","<p>The standard hosting site for Ruby projects is <a href=""https://RubyForge.Org/"" rel=""nofollow"">RubyForge</a>. Another site that is slightly older than RubyForge, is the <a href=""http://RAA.Ruby-Lang.Org/"" rel=""nofollow"">Ruby Application Archive (RAA)</a>. In addition to RubyForge, there are also a lot of Ruby projects hosted on <a href=""https://SourceForge.Net/"" rel=""nofollow"">SourceForge</a>. Projects that are specific or related to <a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a>, are sometimes hosted on <a href=""http://Codehaus.Org/"" rel=""nofollow"">CodeHaus</a> or Sun's new project hosting site <a href=""https://Kenai.Com/"" rel=""nofollow"">Kenai</a>. For <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a>, some projects live on <a href=""http://CodePlex.Com/"" rel=""nofollow"">CodePlex</a>. Projects that use the <a href=""http://Git-SCM.Com/"" rel=""nofollow"">Git</a> Version Control System, are often hosted on either <a href=""http://Gitorious.Org/"" rel=""nofollow"">Gitorious</a> or <a href=""https://GitHub.Com/"" rel=""nofollow"">GitHub</a>, whereas projects that use the <a href=""http://Darcs.Net/"" rel=""nofollow"">Darcs</a> Version Control System tend to be self-hosted.</p>

<p>However, especially larger Ruby projects often have their own infrastructure, e.g. <a href=""http://Merbivore.Com/"" rel=""nofollow"">Merb</a>, <a href=""http://DataMapper.Org/"" rel=""nofollow"">DataMapper</a> and of course <a href=""http://RubyOnRails.Org/"" rel=""nofollow"">Ruby on Rails</a>.</p>
"
"<p>I have a 2GB text file on my linux box that I'm trying to import into my database.</p>

<p>The problem I'm having is that the script that is processing this rdf file is choking on one line:</p>

<pre><code>mismatched tag at line 25462599, column 2, byte 1455502679:
&lt;link r:resource=""http://www.epuron.de/""/&gt;
&lt;link r:resource=""http://www.oekoworld.com/""/&gt;
&lt;/Topic&gt;
=^
</code></pre>

<p>I want to replace the <code>&lt;/Topic&gt;</code> with <code>&lt;/Line&gt;</code>.  I can't do a search/replace on all lines but I do have the line number so I'm hoping theres some easy way to just replace that one line with the new text.</p>

<p>Any ideas/suggestions?</p>
","2988","J&#246;rg W Mittag","<p>The tool for editing text <em>files</em> in Unix, is called <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/ed.html""><code>ed</code></a> (as opposed to <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/sed.html""><code>sed</code></a>, which as the name implies is a <em>stream editor</em>).</p>

<p><code>ed</code> was once intended as an interactive editor, but it can also easily scripted. The way <code>ed</code> works, is that all commands take an address parameter. The way to address a specific line is just the line number, and the way to change the addressed line(s) is the <code>s</code> command, which takes the same regexp that <code>sed</code> would. So, to change the 42nd line, you would write something like <code>42s/old/new/</code>.</p>

<p>Here's the entire command:</p>

<pre><code>FILENAME=/path/to/whereever
LINENUMBER=25462599

ed -- ""${FILENAME}"" &lt;&lt;-HERE
    ${LINENUMBER}s!&lt;/Topic&gt;!&lt;/Line&gt;!
    w
    q
HERE
</code></pre>

<p>The advantage of this is that <code>ed</code> is standardized, while the <code>-i</code> flag to <code>sed</code> is a proprietary GNU extension that is not available on a lot of systems.</p>
"
"<p>In a <a href=""http://stackoverflow.com/questions/700684/content-ideas-for-a-short-javascript-lesson"">recent question</a>, I received suggestions to talk on, amongst other things, the aspect of JavaScript where functions are 'first class' objects.  What does the 'first class' mean in this context, as opposed to other objects?</p>

<p>EDIT (Jörg W Mittag): Exact Duplicate: <a href=""http://StackOverflow.Com/questions/646794/"" rel=""nofollow"">""What is a first class programming construct?""</a></p>
","2988","J&#246;rg W Mittag","<p>The notion of <a href=""http://C2.Com/cgi/wiki/?FirstClass"">""first-class functions""</a> in a programming language was introduced by British computer scientist <a href=""http://Wikipedia.Org/wiki/Christopher%5FStrachey"">Christopher Strachey</a> in the 1960s. The most famous formulation of this principle is probably in <a href=""http://MITPress.MIT.Edu/sicp/full-text/book/book-Z-H-12.html#call%5Ffootnote%5FTemp%5F121"">Structure and Interpretation of Computer Programs</a> by Gerald Jay Sussman and Harry Abelson:</p>

<ul>
<li>They may be named by variables.</li>
<li>They may be passed as arguments to procedures.</li>
<li>They may be returned as the results of procedures.</li>
<li>They may be included in data structures.</li>
</ul>

<p>Basically, it means that you can do with functions everything that you can do with all other elements in the programming language. So, in the case of JavaScript, it means that everything you can do with an Integer, a String, an Array or any other kind of Object, you can <em>also</em> do with functions.</p>
"
"<p>When you step back and look at ... </p>

<ul>
<li>the nature of animals, insects, plants and the problems they have organically solved</li>
<li>perhaps even the nature and balance of the universe</li>
</ul>

<p>Have you ever been able to solve a problem by deriving an approach from nature?</p>

<p>I've heard of <a href=""http://en.wikipedia.org/wiki/Ant%5Fcolony%5Foptimization"" rel=""nofollow"">Ant Colony Algorithms</a> being able to optimize supply chain amongst other things.  Also <a href=""http://en.wikipedia.org/wiki/Fractal"" rel=""nofollow"">Fractal</a>'s being the ""geometry of nature"" have been applied to a wide range of problems.</p>

<p>Now that spring is here again and the world is coming back to life I'm wondering if anybody has some experiences they can share.</p>

<p>Thanks</p>

<p>PS I would recommend watching the ""<a href=""http://www.pbs.org/wgbh/nova/fractals/"" rel=""nofollow"">Hunting the Hidden Dimension</a>"" Nova episode on fractals.</p>
","2988","J&#246;rg W Mittag","<p>I personally have never solved a problem by applying ideas from nature. However, I have solved problems by applying other people's solutions inspired by nature.</p>

<p>Many graph layout algorithms, and layout algorithms in general, are based on mechanics (springs, rubber bands, gravity) or simple insect-like behavior (follow your leader, maximize/minimize distance).</p>

<p>And, of course, I like object-oriented programming, which was developed by Nygaard and Dahl for simulations of physical real-world objects, and was perfected by Alan Kay, a microbiologist who modeled OO explicitly after the way simple cells can form complex organisms capable of complex behavior. So, in a sense, everybody who does OO, is indirectly deriving his program from nature.</p>
"
"<p>The file is initially</p>

<pre><code>$cat so/app.yaml 
application: SO
...
</code></pre>

<p>I run the following command. I get an empty file.</p>

<pre><code>$sed s/SO/so/ so/app.yaml &gt; so/app.yaml 
$cat so/app.yaml 
$
</code></pre>

<p><strong>How can you use SED to edit the file and not giving me an empty file?</strong></p>
","2988","","<p>You are using the wrong tool for the job. <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/sed.html""><code>sed</code></a> is a <em>stream</em> editor (that's why it's called <strong>s</strong><code>ed</code>), so it's for in-flight editing of streams in a pipe. <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/ed.html""><code>ed</code></a> OTOH is a <em>file</em> editor, which can do everything <code>sed</code> can do, except it works on files instead of streams. (Actually, it's the other way round: <code>ed</code> is the original utility and <code>sed</code> is a clone that avoids having to create temporary files for streams.)</p>

<p><code>ed</code> works very much like <code>sed</code> (because <code>sed</code> is just a clone), but with one important difference: you can move around in files, but you can't move around in streams. So, all commands in <code>ed</code> take an address parameter that tells <code>ed</code>, <em>where</em> in the file to apply the command. In your case, you want to apply the command <em>everywhere</em> in the file, so the address parameter is just <code>,</code> because <code>a,b</code> means ""from line <code>a</code> to line <code>b</code>"" and the default for <code>a</code> is <code>1</code> (beginning-of-file) and the default for <code>b</code> is <code>$</code> (end-of-file), so leaving them both out means ""from beginning-of-file to end-of-file"". Then comes the <code>s</code> (for substitute) and the rest looks much like <code>sed</code>.</p>

<p>So, your <code>sed</code> command <code>s/SO/so/</code> turns into the ed command <code>,s/SO/so/</code>.</p>

<p>And, again because <code>ed</code> is a file editor, and more precisely, an interactive file editor, we also need to write (<code>w</code>) the file and quit (<code>q</code>) the editor.</p>

<p>This is how it looks in its entirety:</p>

<pre><code>ed -- so/app.yaml &lt;&lt;-HERE
    ,s/SO/so/
    w
    q
HERE
</code></pre>

<p>See also <a href=""http://stackoverflow.com/questions/703459/#703535"">my answer</a> to a similar question.</p>

<p>What happens in your case, is that executing a pipeline is a two-stage process: first construct the pipeline, then run it. <code>&gt;</code> means ""open the file, <em>truncate</em> it, and connect it to filedescriptor 1 (<code>stdout</code>)"". <em>Only then</em> is the pipe actually run, i.e. sed is executed, but at this time, the file has already been truncated.</p>

<p>Some versions of <code>sed</code> also have a <code>-i</code> parameter for in-place editing of files, that makes <code>sed</code> behave a little more like <code>ed</code>, but using that is not advisable: first of all, it doesn't support all the features of <code>ed</code>, but more importantly, it is a non-standardized proprietary extension of GNU <code>sed</code> that doesn't work on many non-GNU systems. It's been a while since I used a non-GNU system, but last I used one, neither Solaris nor OpenBSD nor HP-UX nor IBM AIX <code>sed</code> supported the <code>-i</code> parameter.</p>
"
"<p>I need to test some <em>existing</em> <code>http://</code> URL parsing code for compliance to <a href=""http://www.ietf.org/rfc/rfc3986.txt"" rel=""nofollow"">RFC 3986</a>.</p>

<p>I do not want to reinvent the wheel and to bump in to various corner cases.</p>

<p>Is there some existing comprehensive test suite for that? </p>

<p>I do not specify the language I use since I expect the test suite to be generic enough to be adaptable. I would settle for anything sane though.</p>
","2988","","<p>The <a href=""http://Addressable.RubyForge.Org/"" rel=""nofollow""><code>Addressable</code></a> Ruby library has a very comprehensive <a href=""http://Addressable.RubyForge.Org/specdoc/"" rel=""nofollow"">Spec Suite</a> (618 examples with 800 expectations in 123 example groups, weighing in at over 3700 SLOC), which covers large parts of RfC3986. The code is <a href=""https://GitHub.Com/Sporkmonger/Addressable/blob/master/spec/addressable/uri%5Fspec.rb"" rel=""nofollow"">here</a>. I'm not sure how directly you can run this on your library, maybe you can get it working unmodified, by writing a simple API-compatible Ruby-wrapper for your library? Otherwise, the Spec is really well patterned, so you should be able to get pretty far with some simple Rename Method Refactorings and Regexp-fu.</p>
"
"<p>In simple terms, what does Rake do? What purposes does it have? I understand it's a build tool but I'm looking a bit more detail. (For a simpleton.)</p>
","2988","","<p><a href=""http://Rake.RubyForge.Org/"">Rake</a> is an implementation of <a href=""http://MartinFowler.Com/articles/rake.html#DependencyBasedProgramming"">dependency-based declarative programming</a> in the <a href=""http://Ruby-Lang.Org/"">Ruby Programming Language</a>. Basically, Rake is to Ruby what <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/make.html"">Make</a> is to C, with the notable difference, that Make is an external <a href=""http://MartinFowler.Com/bliki/DomainSpecificLanguage.html"">DSL</a>, while Rake is an internal DSL.</p>
"
"<p>Semantic HTML makes it easier for Google to crawl and 'understand' a website but what about microformats? Are microformats any more semantic/crawlable then standard HTML markup?</p>
","2988","","<p>AFAIK, all major search engines support the rel-nofollow microformat. Beyond that, I'm not aware of any support. However, there are smaller, more specialized search engines that have been specifically designed with microformats in mind. E.g. there are search engines that allow you to do searches on relationships between persons, using the XFN microformat.</p>
"
"<p>I'm trying to get my head around TDD methodology and have run into - what I think is - a chicken-and-egg problem: what to do if a bug fix involves the changing of a method's signature.</p>

<p>Consider the following method signature: </p>

<pre><code>string RemoveTokenFromString (string delimited, string token)
</code></pre>

<p>As the name suggests, this method removes all instances of a <code>token</code> from <code>delimited</code> and returns the resultant string. </p>

<p>I find later that this method has a bug (e.g. the wrong bits are being removed from the string). So I write a test case describing the scenario where the bug occurs and make sure that the test fails.</p>

<p>When fixing the bug, I find that the method needs more information to be able to do its job properly - and this bit of information can only be sent in as a parameter (the method under test is part of a static class).</p>

<p>What do I do then? If I fix the bug, this compels me to change the unit test - would that be 'correct' TDD methodology?  </p>
","2988","","<p>You have fallen into the most dangerous trap in TDD: you think TDD is about testing, but it isn't. However, it is easy to fall into that trap, since all the terminology in TDD is about testing. This is why BDD was invented: it is essentially TDD, but without the confusing terminology.</p>

<p>In TDD, tests aren't really tests, they are examples. And assertions aren't really assertions, they are expectations. And you aren't dealing with units, you are dealing with behaviors. BDD just calls them that. (Note: BDD has evolved since it was first invented, and it now incorporates things that aren't part of TDD, but the original intention was just ""many people do TDD wrong, so use different words to help them do it right"".)</p>

<p>Anyway, if you think of a test not as a test, but a behavioral example of how the method should work, it should become obvious that as you develop a better understanding of the expected behavior, deleting or changing the test is not only allowed by TDD, it is <em>the only correct choice</em>! Always keep that in mind!</p>
"
"<p>My question boils down to : <em>“Why not use exception (or error) handling for regular program flow?""</em></p>

<p>To avoid all standard-answers I could have Googled on, I will provide an example you all can attack at will.</p>

<p>C# and Java (and too many others) have with plenty of types some of ‘overflow’ behaviour I don’t like at all (e.g <code>type.MaxValue + type.SmallestValue == type.MinValue</code> for example :  <code>int.MaxValue + 1 == int.MinValue</code>).</p>

<p>But, seen my vicious nature, I’ll add some insult to this injury by expanding this behaviour to, let’s say an Overridden <code>DateTime</code> type. (I know <code>DateTime</code> is sealed in .NET, but for the sake of this example, I’m using a pseudo language that is exactly like C#, except for the fact that DateTime isn’t sealed).</p>

<p>The overridden <code>Add</code> method: </p>

<pre class=""lang-cs prettyprint-override""><code>/// &lt;summary&gt;
/// Increments this date with a timespan, but loops when
/// the maximum value for datetime is exceeded.
/// &lt;/summary&gt;
/// &lt;param name=""ts""&gt;The timespan to (try to) add&lt;/param&gt;
/// &lt;returns&gt;The Date, incremented with the given timespan. 
/// If DateTime.MaxValue is exceeded, the sum wil 'overflow' and 
/// continue from DateTime.MinValue. 
/// &lt;/returns&gt;
public DateTime override Add(TimeSpan ts) 
{
    try
    {                
        return base.Add(ts);
    }
    catch (ArgumentOutOfRangeException nb)
    {
        // calculate how much the MaxValue is exceeded
        // regular program flow
        TimeSpan saldo = ts - (base.MaxValue - this);
        return DateTime.MinValue.Add(saldo)                         
    }
    catch(Exception anyOther) 
    {
        // 'real' exception handling.
    }
}
</code></pre>

<p>Of course an if could solve this just as easy, but the fact remains that I just fail to see why you couldn’t use exceptions (logically that is, I can see that when performance is an issue that in certain cases exceptions should be avoided).</p>

<p>I think in many cases they are more clear than if-structures and don’t break any contract the method is making.</p>

<p>IMHO (In My Honest Opinion) the “Never use them for regular program flow” reaction everybody seems to have is not that well underbuild as the strength of that reaction can justify.</p>

<p>Or am I mistaken?</p>

<p>I've read other posts, dealing with all kind of special cases, but my point is there's nothing wrong with it if you are both:</p>

<ol>
<li>Clear</li>
<li>Honour the contract of your method</li>
</ol>

<p>Shoot me.</p>
","2988","","<p>I don't think there is anything wrong with using Exceptions for flow-control. Exceptions are somewhat similar to continuations and in statically typed languages, Exceptions are more powerful than continuations, so, if you need continuations but your language doesn't have them, you can use Exceptions to implement them.</p>

<p>Well, actually, if you need continuations and your language doesn't have them, you chose the wrong language and you should rather be using a different one. But sometimes you don't have a choice: client-side web programming is <em>the</em> prime example – there's just no way to get around JavaScript.</p>

<p>An example: <a href=""http://LiveLabs.Com/volta/"" rel=""nofollow"">Microsoft Volta</a> is a project to allow writing web applications in straight-forward .NET, and let the framework take care of figuring out which bits need to run where. One consequence of this is that Volta needs to be able to compile CIL to JavaScript, so that you can run code on the client. However, there is a problem: .NET has multithreading, JavaScript doesn't. So, Volta implements continuations in JavaScript using JavaScript Exceptions, then implements .NET Threads using those continuations. That way, Volta applications that use threads can be compiled to run in an unmodified browser – no Silverlight needed.</p>
"
"<p>So the idea behind an array and a function are very similar from a black-box perspective. You pass in the input value(s) and retrieve the output value. So is it better to keep array syntax and function syntax the same or is it better to have differences?</p>

<p>e.g.</p>

<blockquote>
  <p>print array[0]</p>
  
  <p>print func(0)</p>
</blockquote>

<p>versus</p>

<blockquote>
  <p>print array(0)</p>
  
  <p>print func(0)</p>
</blockquote>
","2988","","<p>You are absolutely right. Arrays, and also Maps and Dictionaries and arguably even Objects are essentially functions in the mathematical sense. And, indeed, there are languages, which treat Arrays as functions of integers, Maps and Dictionaries as functions of their keys and Objects as functions of their slots. Two of those languages are <a href=""http://Scala-Lang.Org/"" rel=""nofollow"">Scala</a> and <a href=""http://Clojure.Org/data%5Fstructures#toc15"" rel=""nofollow"">Clojure</a>.</p>
"
"<p>I thought the Linux kernel would have a massive amount of SLOC but it isn't even making OpenGrok blink.  I know the question of the largest project has been asked but what collection of code is arguable the largest.  i would prefer either tar, gz, or a hub style place where I can script and point my subversion or git client.</p>
","2988","","<p>I think there are some Linux and also some BSD distributions that keep all the sources of all the packages in a single sourcetree, especially in the embedded or special purpose space. <a href=""http://Src.OpenSolaris.Org/source/xref/"" rel=""nofollow"">OpenSolaris</a> is managed in a similar way.</p>
"
"<p>This is something that has been bugging me for a while.  When I see any Ruby method printed in text, it usually appears as:</p>

<pre><code>Class#method
</code></pre>

<p>or </p>

<pre><code>#method
</code></pre>

<p>Now, I would use:</p>

<pre><code>Class.method
</code></pre>

<p>Why are all Ruby methods preceded by a pound sign?  Is there any reason for it?  Just curious.</p>
","2988","","<p>I just realized that none of the other answers touch the most trivial aspect of the question: why the <code>#</code> sign?</p>

<p>I have two theories:</p>

<ol>
<li>It might come from Smalltalk, where symbols are written <code>#sym</code> (instead of <code>:sym</code>) as they are in Ruby. So, if you want to <em>refer</em> to a Method <em>object</em> (as opposed to <em>calling</em> a method), then you would call something like <code>Array &gt;&gt; #new.</code> (The <code>&gt;&gt;</code> is itself a method that returns the method passed to it. So, in Ruby that would be <code>Array.method :new</code>.) In Smalltalk documentation, methods are generally referred to as <code>Class&gt;&gt;method</code>, but in Ruby <code>Class:method</code> would have made more sense, except that it is easily confused with <code>Class::method</code>. Therefore, <code>Class#method</code> was chosen.</li>
<li>My other theory is that it simply was chosen because <code>#</code> is the comment character in Ruby.</li>
</ol>

<p>A definitive answer can only be given by whoever invented that convention. If it was invented for the <em>Programming Ruby</em> book, that would be either Dave Thomas or Andy Hunt, but I kind of doubt that. The book came out in 2001, Ruby started in 1993, how were they referring to methods before then?</p>
"
"<p>Need to convert the following code from Ruby to C#. However I'm kind of puzzled by the use of the yield keyword and the general syntax of Ruby. Can anyone that knows a little bit Ruby please help out and convert the code </p>

<pre><code>class &lt; &lt; Cache
STALE_REFRESH = 1
STALE_CREATED = 2

# Caches data received from a block
#
# The difference between this method and usual Cache.get
# is following: this method caches data and allows user
# to re-generate data when it is expired w/o running
# data generation code more than once so dog-pile effect
# won't bring our servers down
#
def smart_get(key, ttl = nil, generation_time = 30.seconds)
  # Fallback to default caching approach if no ttl given
  return get(key) { yield } unless ttl

  # Create window for data refresh
  real_ttl = ttl + generation_time * 2
  stale_key = ""#{key}.stale""

  # Try to get data from memcache
  value = get(key)
  stale = get(stale_key)

  # If stale key has expired, it is time to re-generate our data
  unless stale
    put(stale_key, STALE_REFRESH, generation_time) # lock
    value = nil # force data re-generation
  end

  # If no data retrieved or data re-generation forced, re-generate data and reset stale key
  unless value
    value = yield
    put(key, value, real_ttl)
    put(stale_key, STALE_CREATED, ttl) # unlock
  end

  return value
end
</code></pre>

<p>end</p>
","2988","","<p>I don't know C# at all, so anything I say about C# should be taken with a grain of salt. However, I will try to explain what goes on in that piece of Ruby code.</p>

<pre><code>class &lt;&lt; Cache
</code></pre>

<p>Ruby has something called <em>singleton methods</em>. These have nothing to do with the Singleton Software Design Pattern, they are just methods that are defined for one and only one object. So, you can have two instances of the same class, and add methods to one of those two objects.</p>

<p>There are two different syntaxes for singleton methods. One is to just prefix the name of the method with the object, so <code>def foo.bar(baz)</code> would define a method <code>bar</code> only for object <code>foo</code>. The other method is called <em>opening up the singleton class</em> and it looks syntactically similar to defining a class, because that's also what happens semantically: singleton methods actually live in an invisible class that gets inserted between the object and its actual class in the class hierarchy.</p>

<p>This syntax looks like this: <code>class &lt;&lt; foo</code>. This opens up the singleton class of object <code>foo</code> and every method defined inside of that class body becomes a singleton method of object <code>foo</code>.</p>

<p>Why is this used here? Well, Ruby is a pure object-oriented language, which means that <em>everything</em>, including classes is an object. Now, if methods can be added to individual objects, and classes are objects, this means that methods can be added to individual classes. In other words, Ruby has no need for the artificial distinction between regular methods and static methods (which are a fraud, anyway: they aren't really methods, just glorified procedures). What is a static method in C#, is just a regular method on a class object's singleton class.</p>

<p>All of this is just a longwinded way of explaining that everything defined between <code>class &lt;&lt; Cache</code> and its corresponding <code>end</code> becomes <code>static</code>.</p>

<pre><code>  STALE_REFRESH = 1
  STALE_CREATED = 2
</code></pre>

<p>In Ruby, every variable that starts with a capital letter, is actually a constant. However, in this case we won't translate these as <code>static const</code> fields, but rather an <code>enum</code>, because that's how they are used.</p>

<pre><code>  # Caches data received from a block
  #
  # The difference between this method and usual Cache.get
  # is following: this method caches data and allows user
  # to re-generate data when it is expired w/o running
  # data generation code more than once so dog-pile effect
  # won't bring our servers down
  #
  def smart_get(key, ttl = nil, generation_time = 30.seconds)
</code></pre>

<p>This method has three parameters (four actually, we will see exactly <em>why</em> later), two of them are optional (<code>ttl</code> and <code>generation_time</code>). Both of them have a default value, however, in the case of <code>ttl</code> the default value isn't really used, it serves more as a marker to find out whether the argument was passed in or not.</p>

<p><code>30.seconds</code> is an extension that the <code>ActiveSupport</code> library adds to the <code>Integer</code> class. It doesn't actually do anything, it just returns <code>self</code>. It is used in this case just to make the method definition more readable. (There are other methods which do something more useful, e.g. <code>Integer#minutes</code>, which returns <code>self * 60</code> and <code>Integer#hours</code> and so on.) We will use this as an indication, that the type of the parameter should not be <code>int</code> but rather <code>System.TimeSpan</code>.</p>

<pre><code>    # Fallback to default caching approach if no ttl given
    return get(key) { yield } unless ttl
</code></pre>

<p>This contains several complex Ruby constructs. Let's start with the easiest one: trailing conditional modifiers. If a conditional body contains only one expression, then the conditional can be appended to the end of the expression. So, instead of saying <code>if a &gt; b then foo end</code> you can also say <code>foo if a &gt; b</code>. So, the above is equivalent to <code>unless ttl then return get(key) { yield } end</code>.</p>

<p>The next one is also easy: <code>unless</code> is just syntactic sugar for <code>if not</code>. So, we are now at <code>if not ttl then return get(key) { yield } end</code></p>

<p>Third is Ruby's truth system. In Ruby, truth is pretty simple. Actually, falseness is pretty simple, and truth falls out naturally: the special keyword <code>false</code> is false, and the special keyword <code>nil</code> is false, everything else is true. So, in this case the conditional will <em>only</em> be true, if <code>ttl</code> is either <code>false</code> or <code>nil</code>. <code>false</code> isn't a terrible sensible value for a timespan, so the only interesting one is <code>nil</code>. The snippet would have been more clearly written like this: <code>if ttl.nil? then return get(key) { yield } end</code>. Since the default value for the <code>ttl</code> parameter is <code>nil</code>, this conditional is true, if no argument was passed in for <code>ttl</code>. So, the conditional is used to figure out with how many arguments the method was called, which means that we are not going to translate it as a conditional but rather as a method overload.</p>

<p>Now, on to the <code>yield</code>. In Ruby, every method can accept an implicit code block as an argument. That's why I wrote above that the method actually takes <em>four</em> arguments, not three. A code block is just an anonymous piece of code that can be passed around, stored in a variable, and invoked later on. Ruby inherits blocks from Smalltalk, but the concept dates all the way back to 1958, to Lisp's lambda expressions. At the mention of anonymous code blocks, but at the very least now, at the mention of lambda expressions, you should know how to represent this implicit fourth method parameter: a delegate type, more specifically, a <code>Func</code>.</p>

<p>So, what's <code>yield</code> do? It transfers control to the block. It's basically just a very convenient way of invoking a block, without having to explicitly store it in a variable and then calling it.</p>

<pre><code>    # Create window for data refresh
    real_ttl = ttl + generation_time * 2
    stale_key = ""#{key}.stale""
</code></pre>

<p>This <code>#{foo}</code> syntax is called <em>string interpolation</em>. It means ""replace the token inside the string with whatever the result of evaluating the expression between the braces"". It's just a very concise version of <code>String.Format()</code>, which is exactly what we are going to translate it to.</p>

<pre><code>    # Try to get data from memcache
    value = get(key)
    stale = get(stale_key)

    # If stale key has expired, it is time to re-generate our data
    unless stale
      put(stale_key, STALE_REFRESH, generation_time) # lock
      value = nil # force data re-generation
    end

    # If no data retrieved or data re-generation forced, re-generate data and reset stale key
    unless value
      value = yield
      put(key, value, real_ttl)
      put(stale_key, STALE_CREATED, ttl) # unlock
    end

    return value
  end
end
</code></pre>

<p>This is my feeble attempt at translating the Ruby version to C#:</p>

<pre><code>public class Cache&lt;Tkey, Tvalue&gt; {
    static const enum Stale { Refresh, Created };

    /* Caches data received from a delegate
     *
     * The difference between this method and usual Cache.get
     * is following: this method caches data and allows user
     * to re-generate data when it is expired w/o running
     * data generation code more than once so dog-pile effect
     * won't bring our servers down
    */
    public static Tvalue SmartGet(Tkey key, TimeSpan ttl, TimeSpan generationTime, Func&lt;Tvalue&gt; strategy)
    {
        // Create window for data refresh
        var realTtl = ttl + generationTime * 2;
        var staleKey = String.Format(""{0}stale"", key);

        // Try to get data from memcache
        var value = Get(key);
        var stale = Get(staleKey);

        // If stale key has expired, it is time to re-generate our data
        if (stale is null)
        {
            Put(staleKey, Stale.Refresh, generationTime); // lock
            value = null; // force data re-generation
        }

        // If no data retrieved or data re-generation forced, re-generate data and reset stale key
        if (value is null)
        {
            value = strategy();
            Put(key, value, realTtl);
            Put(staleKey, Stale.Created, ttl) // unlock
        }

        return value;
    }

    // Fallback to default caching approach if no ttl given
    public static Tvalue SmartGet(Tkey key, Func&lt;Tvalue&gt; strategy)
    {
        return Get(key, strategy);
    }

    // Simulate default argument for generationTime
    // C# 4.0 has default arguments, so this wouldn't be needed.
    public static Tvalue SmartGet(Tkey key, TimeSpan ttl, Func&lt;Tvalue&gt; strategy)
    {
        return SmartGet(key, ttl, new TimeSpan(0, 0, 30), strategy);
    }

    // Convenience overloads to allow calling it the same way as 
    // in Ruby, by just passing in the timespans as integers in 
    // seconds.
    public static Tvalue SmartGet(Tkey key, int ttl, int generationTime, Func&lt;Tvalue&gt; strategy)
    {
        return SmartGet(key, new TimeSpan(0, 0, ttl), new TimeSpan(0, 0, generationTime), strategy);
    }

    public static Tvalue SmartGet(Tkey key, int ttl, Func&lt;Tvalue&gt; strategy)
    {
        return SmartGet(key, new TimeSpan(0, 0, ttl), strategy);
    }
}
</code></pre>

<p>Please note that I do not know C#, I do not know .NET, I have not tested this, I don't even know if it is syntactically valid. Hope it helps anyway.</p>
"
"<p>Ok, suppose I have Ruby program to read version control log files and do something with the data. (I don't, but the situation is analogous, and I have fun with these analogies). Let's suppose right now I want to support Bazaar and Git. Let's suppose the program will be executed with some kind of argument indicating which version control software is being used.</p>

<p>Given this, I want to make a LogFileReaderFactory which given the name of a version control program will return an appropriate log file reader (subclassed from a generic) to read the log file and spit out a canonical internal representation. So, of course, I can make BazaarLogFileReader and GitLogFileReader and hard-code them into the program, but I want it to be set up in such a way that adding support for a new version control program is as simple as plopping a new class file in the directory with the Bazaar and Git readers.</p>

<p>So, right now you can call ""do-something-with-the-log --software git"" and ""do-something-with-the-log --software bazaar"" because there are log readers for those. What I want is for it to be possible to simply add a SVNLogFileReader class and file to the same directory and automatically be able to call ""do-something-with-the-log --software svn"" without ANY changes to the rest of the program. (The files can of course be named with a specific pattern and globbed in the require call.)</p>

<p>I know this can be done in Ruby... I just don't how I should do it... or if I should do it at all.</p>
","2988","","<p>This is really just riffing off Brian Campbell's solution. If you like this, <em>please</em> upvote <em>his</em> answer, too: he did all the work.</p>

<pre><code>#!/usr/bin/env ruby

class Object; def eigenclass; class &lt;&lt; self; self end end end

module LogFileReader
  class LogFileReaderNotFoundError &lt; NameError; end
  class &lt;&lt; self
    def create type
      (self[type] ||= const_get(""#{type.to_s.capitalize}LogFileReader"")).new
    rescue NameError =&gt; e
      raise LogFileReaderNotFoundError, ""Bad log file type: #{type}"" if e.class == NameError &amp;&amp; e.message =~ /[^: ]LogFileReader/
      raise
    end

    def []=(type, klass)
      @readers ||= {type =&gt; klass}
      def []=(type, klass)
        @readers[type] = klass
      end
      klass
    end

    def [](type)
      @readers ||= {}
      def [](type)
        @readers[type]
      end
      nil
    end

    def included klass
      self[klass.name[/[[:upper:]][[:lower:]]*/].downcase.to_sym] = klass if klass.is_a? Class
    end
  end
end

def LogFileReader type
</code></pre>

<p>Here, we create a global method (more like a procedure, actually) called <code>LogFileReader</code>, which is the same name as our module <code>LogFileReader</code>. This is legal in Ruby. The ambiguity is resolved like this: the module will always be preferred, except when it's obviously a method call, i.e. you either put parentheses at the end (<code>Foo()</code>) or pass an argument (<code>Foo :bar</code>).</p>

<p>This is a trick that is used in a few places in the stdlib, and also in Camping and other frameworks. Because things like <code>include</code> or <code>extend</code> aren't actually keywords, but ordinary methods that take ordinary parameters, you don't have to pass them an actual <code>Module</code> as an argument, you can also pass anything that <em>evaluates</em> to a <code>Module</code>. In fact, this even works for inheritance, it is perfectly legal to write <code>class Foo &lt; some_method_that_returns_a_class(:some, :params)</code>.</p>

<p>With this trick, you can make it look like you are inheriting from a generic class, even though Ruby doesn't have generics. It's used for example in the delegation library, where you do something like <code>class MyFoo &lt; SimpleDelegator(Foo)</code>, and what happens, is that the <code>SimpleDelegator</code> <em>method</em> dynamically creates and returns an anonymous subclass of the <code>SimpleDelegator</code> <em>class</em>, which delegates all method calls to an instance of the <code>Foo</code> class.</p>

<p>We use a similar trick here: we are going to dynamically create a <code>Module</code>, which, when it is mixed into a class, will automatically register that class with the <code>LogFileReader</code> registry.</p>

<pre><code>  LogFileReader.const_set type.to_s.capitalize, Module.new {
</code></pre>

<p>There's a lot going on in just this line. Let's start from the right: <code>Module.new</code> creates a new anonymous module. The block passed to it, becomes the body of the module – it's basically the same as using the <code>module</code> keyword.</p>

<p>Now, on to <code>const_set</code>. It's a method for setting a constant. So, it's the same as saying <code>FOO = :bar</code>, <em>except</em> that we can pass in the name of the constant as a parameter, instead of having to know it in advance. Since we are calling the method on the <code>LogFileReader</code> module, the constant will be defined inside that namespace, IOW it will be named <code>LogFileReader::Something</code>.</p>

<p>So, what <em>is</em> the name of the constant? Well, it's the <code>type</code> argument passed into the method, capitalized. So, when I pass in <code>:cvs</code>, the resulting constant will be <code>LogFileParser::Cvs</code>.</p>

<p>And what do we set the constant to? To our newly created anonymous module, which is now no longer anonymous!</p>

<p>All of this is really just a longwinded way of saying <code>module LogFileReader::Cvs</code>, except that we didn't know the ""Cvs"" part in advance, and thus couldn't have written it that way.</p>

<pre><code>    eigenclass.send :define_method, :included do |klass|
</code></pre>

<p>This is the body of our module. Here, we use <code>define_method</code> to dynamically define a method called <code>included</code>. And we don't actually define the method on the module itself, but on the module's <em>eigenclass</em> (via a small helper method that we defined above), which means that the method will not become an instance method, but rather a ""static"" method (in Java/.NET terms).</p>

<p><code>included</code> is actually a special hook method, that gets called by the Ruby runtime, everytime a module gets included into a class, and the class gets passed in as an argument. So, our newly created module now has a hook method that will inform it whenever it gets included somewhere.</p>

<pre><code>      LogFileReader[type] = klass
</code></pre>

<p>And this is what our hook method does: it registers the class that gets passed into the hook method into the <code>LogFileReader</code> registry. And the key that it registers it under, is the <code>type</code> argument from the <code>LogFileReader</code> method way above, which, thanks to the magic of closures, is actually accessible inside the <code>included</code> method.</p>

<pre><code>    end
    include LogFileReader
</code></pre>

<p>And last but not least, we include the <code>LogFileReader</code> module in the anonymous module. [Note: I forgot this line in the original example.]</p>

<pre><code>  }
end

class GitLogFileReader
  def display
    puts ""I'm a git log file reader!""
  end
end

class BzrFrobnicator
  include LogFileReader
  def display
    puts ""A bzr log file reader...""
  end
end

LogFileReader.create(:git).display
LogFileReader.create(:bzr).display

class NameThatDoesntFitThePattern
  include LogFileReader(:darcs)
  def display
    puts ""Darcs reader, lazily evaluating your pure functions.""
  end
end

LogFileReader.create(:darcs).display

puts 'Here you can see, how the LogFileReader::Darcs module ended up in the inheritance chain:'
p LogFileReader.create(:darcs).class.ancestors

puts 'Here you can see, how all the lookups ended up getting cached in the registry:'
p LogFileReader.send :instance_variable_get, :@readers

puts 'And this is what happens, when you try instantiating a non-existent reader:'
LogFileReader.create(:gobbledigook)
</code></pre>

<p>This new expanded version allows three different ways of defining <code>LogFileReader</code>s:</p>

<ol>
<li>All classes whose name matches the pattern <code>&lt;Name&gt;LogFileReader</code> will automatically be found and registered as a <code>LogFileReader</code> for <code>:name</code> (see: <code>GitLogFileReader</code>),</li>
<li>All classes that mix in the <code>LogFileReader</code> module and whose name matches the pattern <code>&lt;Name&gt;Whatever</code> will be registered for the <code>:name</code> handler (see: <code>BzrFrobnicator</code>) and</li>
<li>All classes that mix in the <code>LogFileReader(:name)</code> module, will be registered for the <code>:name</code> handler, regardless of their name (see: <code>NameThatDoesntFitThePattern</code>).</li>
</ol>

<p>Please note that this is just a very contrived demonstration. It is, for example, definitely <em>not</em> thread-safe. It might also leak memory. Use with caution!</p>
"
"<p>I have been extremely naughty. I have been developing a piece of software (I'm the only developer) for a little while (O.K., it's over the course of a few years), but have not used any sort of source control.</p>

<p>I have resolved to use source control (git seems most likely, as the windows tools seem to have come on a lot on the last few months) from now on. What I do have is dated backups of the entire directory of my (.NET) solution.</p>

<p>What I would like to do is automagically have my backups visible in the revision history. It will be messy. Projects and files will have been added/removed over the course of the solution history. I'm not bothered about such problems as what I know to be renamed files being interpreted as removal of a file and addition of a new, unrelated one.</p>

<p>More generally my problem is: I have time ordered copies of a changing directory. Importing the first into git is easy I assume. But, I then want all subsequent copies of the directory to be merged, in date order, one at a time without me having to commit every sub-directory and file individually.</p>

<p>Is this possible, or is it just that I am punished for not using source control from the off?</p>

<p>Edit: If I go ahead with the 'commit all snapshots individually' method manually (there are less than 20 snapshots), is there a way  (as Esko Luontola suggests I might want to) of overriding the commit dates with the dates I have for the snapshot. git commit does not appear to have a flag to allow this. Is there another way (I'm using Vista)?</p>

<p>Edit: In answer to my issue of using the original dates: You have to set the GIT_AUTHOR_DATE and/or GIT_COMMITER_DATE environment variables to override the use of current dates and times when performing the commit.</p>

<p>The reason there are two sets of variables (there are also GIT_(AUTHOR|COMMITER)_(NAME|DATE|EMAIL)) is to distinguish between, say, the author who emails a patch, and the maintainer who is actually doing the commits into the repo.</p>

<p>Note if using git extensions on VS: If you set (export varname=""value"") these variables using the 'git bash' command line, and then switch back to the GUI to do a commit, it seems to ignore them. You have to stay on the command line and run 'git commit' from there.</p>
","2988","","<p>I don't quite know why you don't want to just commit all snapshots individually. I mean, a shell script (or Perl, Python, Ruby, Tcl, whatever) to do that, is probably less than 5 lines of code and less than 10 minutes of work.</p>

<p>Also, there is <a href=""http://Software.Complete.Org/software/wiki/vcs-load-dirs/"" rel=""nofollow""><code>git load-dirs</code></a>, which would allow you to cut that down to maybe 3 lines and 5 minutes. But you still have to load every dir indvidually.</p>

<p>But, if you are so inclined, there is the <a href=""http://Kernel.Org/pub/software/scm/git/docs/git-fast-import.html"" rel=""nofollow""><code>git fast-import</code></a> tool which is intended to make writing repository converters and importers easier. According to the manpage, you could write an importer in about 100 lines and a couple of hours.</p>

<p>However, all this ignores the biggest problem: the <em>value</em> of a VCS lies <em>not</em> in the contents – you could just as well use regular backups for that – but in the commit messages. And no magic tool is going to help you there, you'll have to type them all in yourself … and more importantly, you'll have to remember exactly <em>why</em> you made every single little change over the last years.</p>
"
"<p>On UNIX, I have to produce numeric results out of previous data by means of various command-line utilities. These utilities read the starting data (in general, but not only, from csv files), perform computations, and write the data (again, in general, but not only, to csv files).</p>

<p>Of course, I don't want to run the risk to have outdated derived data, so I need to chain the data dependency through the utilities. A trivial similarity can be seen with a spreadsheet: when you change a cell, all the other cells that are related change as well, in a cascade fashion. However, due to the more complex and automatized nature of my task, I cannot use a spreadsheet.</p>

<p>Now, the first idea you can have is to use make, which is something I already had experience with. It is trivial, and fits the task well. You are however dependent on files, so if you have a dependency against some data that is stored in a database, you must trick the system. I also know about biomake, but as far as I remember is made in prolog, and I don't want to adventure through that path.</p>

<p>Before I adventure the makefile path, I am interested in additional input from you. 
Does any of you have nice suggestions on how to do this kind of data handling, better utilities than make, and on how to organize the file layout (of the data and the makefiles)?</p>

<p>Thanks</p>
","2988","","<p><a href=""http://Rake.RubyForge.Org/"" rel=""nofollow"">Rake</a> is a Ruby implementation of Dependency-Oriented Programming that is heavily inspired by Make and Ant, but <em>much</em> cleaner and nicer to use.</p>

<p>Recently, there has been a newcomer on the scene, which is called <a href=""http://Tap.RubyForge.Org/"" rel=""nofollow"">Tap</a>. It also allows Dependency-Oriented Programming but extends it with concepts such as Workflows. It was designed by a PhD biochemistry student who works in a biomolecular research lab, specifically to do exactly the things you mention: keeping scientific data derived from experiments up to date.</p>
"
"<p>This may be a dumb question...but I was just looking into the Mono project and they have a section about installing <a href=""http://mono-project.com/Mono:Windows"">Mono on Windows</a>.  But, since Windows obviously already has the .NET runtime can anyone tell me what exactly is the point of having Mono for Windows?  Does it help with cross platform development or something?</p>
","2988","","<p>There are a couple of features Mono has that .NET doesn't.</p>

<p>Mono is highly modular. You can break it apart in tiny little pieces and only deploy <em>exactly</em> those parts that you need. Don't want System.Xml? Fine, it's gone.</p>

<p>Mono is embeddable. You can host it inside your C/C++ application, to allow users to script it from a safe managed sandboxed environment. The most famous example of this is mod_mono, which hosts Mono inside the Apache webserver, and is how ASP.NET is implemented in Mono, for example. This feature goes great together with the modularization mentioned above.</p>

<p>This has already been mentioned: static linking. <em>Also</em> goes great together with modularization.</p>

<p>Compiler as a Service is another one. Anders Hejlsberg has been talking about it for a <em>long</em> time, and <em>maybe</em>, just maybe it is going to be ready for C# 5.0. Well, Mono already has it, and actually had it for years.</p>

<p>Miguel de Icaza, Mono's Lead Developer also has an initiative that he calls ""Embrace and Extend.NET"", which extends the CLI in ways not (currently) possible with other CLI implementations (including .NET). So far, Embrace and Extend.NET has three features.</p>

<p>Mono.Simd, which gives safe and controlled access to the SIMD instructions of the underlying CPU (e.g. SSE on Intel or AltiVec on PowerPC). Used for Games and Graphics.</p>

<p>64 Bit array indices, which are allowed by the ECMA specification, but Mono is the only VM that actually provides them. Used in supercomputing.</p>

<p>And most recently, continuations. This is actually the first time that Mono strays outside the realm of the specification: long array indices are perfectly valid as per the spec, and Mono.Simd also works on every CLI compliant implementation (albeit <em>very</em> S-L-O-W), but Mono.Tasklet needs special support from the VM that is not part of either CLI or .NET. This is used for game logic and e.g. in Second Life.</p>
"
"<p>I actually know that it's better to have an version control, but I wonder if Time Machine doesn't make a good job on this for lazy programmers?</p>
","2988","","<p>The single most important and valuable thing in a version control repository is <em>not</em> the content, it's not even the history (that's #2), it's the <em>commit messages</em>. And you don't have those in a backup program.</p>
"
"<p>The description is a bit terse. I simply added a file on my local master branch and pushed it back to a remote repo. Any idea why this is coming up?</p>

<pre>
warning: updating the current branch
warning: Updating the currently checked out branch may cause confusion,
warning: as the index and work tree do not reflect changes that are in HEAD.
warning: As a result, you may see the changes you just pushed into it
warning: reverted when you run 'git diff' over there, and you may want
warning: to run 'git reset --hard' before starting to work to recover.
warning: 
warning: You can set 'receive.denyCurrentBranch' configuration variable to
warning: 'refuse' in the remote repository to forbid pushing into its
warning: current branch.
warning: To allow pushing into the current branch, you can set it to 'ignore';
warning: but this is not recommended unless you arranged to update its work
warning: tree to match what you pushed in some other way.
warning: 
warning: To squelch this message, you can set it to 'warn'.
warning: 
warning: Note that the default will change in a future version of git
warning: to refuse updating the current branch unless you have the
warning: configuration variable set to either 'ignore' or 'warn'.   
</pre>
","2988","","<p>Actually, it means pretty much exactly what it says: somebody is working in the repository that you are pushing to, and that somebody has currently checked out the exact same branch that you are pushing to.</p>

<p>This is very confusing, because now he thinks that he has checked out the latest version of the branch, when, in fact, you have just updated the branch to a newer version. So, when he now runs <code>git commit</code>, <em>his</em> commit will essentially revert all the commits that you just pushed. And when he runs <code>git diff</code> he will see the opposite of everything you just pushed, even though he maybe hasn't even changed anything.</p>

<p>For that reason, it is generally considered bad practice to push to a non-bare repository; you should only ever push to bare repositories, i.e. repositories that do not have an attached working copy. At the very least you should make sure that you do not push to the currently checked-out branch, but generally you shouldn't just shove your code into someone else's repository, you should ask them to pull from you instead.</p>

<p>In some special cases, like when you are serving a website from a Git repository and you want to update the website by pushing to it, it actually makes sense to push to the currently checked-out branch, but in that case you must make sure that you have a hook installed that actually <em>updates</em> the checked-out working copy, otherwise your website will never be updated.</p>
"
"<p>I have a local git repo which I recently made a commit to, then pushed to a shared repo. Only after I pushed it to the shared repo did I realize I made an ugly mistake. I amended it locally no problem after I fixed my source with:</p>

<pre><code>git commit -C HEAD -a --amend
</code></pre>

<p>After that, I tried another git push origin and I get the following error:</p>

<pre><code>! [rejected]        mybranch -&gt; mybranch (non-fast forward)
</code></pre>

<p>What's the best way to rectify this situation?</p>
","2988","","<p>If you want to force the push, you can ... ehm ... pass <code>--force</code> to <code>push</code>.</p>

<p>However, it is generally considered bad form to rewrite history on a public repository.</p>
"
"<p>Functional languages lead to use of recursion to solve a lot of problems, and therefore many of them perform Tail Call Optimization (TCO). TCO causes calls to a function from another function (or itself, in which case this feature is also known as Tail Recursion Elimination, which is a subset of TCO), as the last step of that function, to not need a new stack frame, which decreases overhead and memory usage.</p>

<p>Ruby obviously has ""borrowed"" a number of concepts from functional languages (lambdas, functions like map and so forth, etc.), which makes me curious: Does Ruby perform tail call optimization?</p>
","2988","","<p>No, Ruby doesn't perform TCO. However, it also doesn't <em>not</em> perform TCO.</p>

<p>The Ruby Language Specification doesn't say anything about TCO. It doesn't say you have to do it, but it also doesn't say you <em>can't</em> do it. You just can't <em>rely</em> on it.</p>

<p>This is unlike Scheme, where the Language Specification <em>requires</em> that <em>all</em> Implementations <em>must</em> perform TCO. But it is also unlike Python, where Guido van Rossum has made it very clear on multiple occasions (the last time just a couple of days ago) that Python Implementations <em>should not</em> perform TCO.</p>

<p>Yukihiro Matsumoto is sympathetic to TCO, he just doesn't want to force <em>all</em> Implementations to support it. Unfortunately, this means that you cannot rely on TCO, or if you do, your code will no longer be portable to other Ruby Implementations.</p>

<p>So, some Ruby Implementations perform TCO, but most don't. YARV, for example, supports TCO, although (for the moment) you have to explicitly uncomment a line in the source code and recompile the VM, to activate TCO – in future versions it is going to be on by default, after the implementation proves stable. The Parrot Virtual Machine supports TCO natively, therefore Cardinal could quite easily support it, too. The CLR has some support for TCO, which means that IronRuby and Ruby.NET could probably do it. Rubinius could probably do it, too.</p>

<p>But JRuby and XRuby don't support TCO, and they probably won't, unless the JVM itself gains support for TCO. The problem is this: if you want to have a fast implementation, and fast and seamless integration with Java, then you should be stack-compatible with Java and use the JVM's stack as much as possible. You can quite easily implement TCO with trampolines or explicit continuation-passing style, but then you are no longer using the JVM stack, which means that everytime you want to call into Java or call from Java into Ruby, you have to perform some kind of conversion, which is slow. So, XRuby and JRuby chose to go with speed and Java integration over TCO and continuations (which basically have the same problem).</p>

<p>This applies to all implementations of Ruby that want to tightly integrate with some host platform that doesn't support TCO natively. For example, I guess MacRuby is going to have the same problem.</p>
"
"<p>Possibly related to <a href=""http://stackoverflow.com/questions/286988/git-pulling-changes-from-clone-back-onto-the-master"">http://stackoverflow.com/questions/286988/git-pulling-changes-from-clone-back-onto-the-master</a></p>

<p>I was working on an ASP.NET project when I discovered I needed to make an ""experimental"" set of changes which may or may not have been required in the production version.</p>

<p>The obvious thing to do was to create a branch.</p>

<p>However as I was familiar with darcs and svn but not git, I assumed that a clone was the ""normal"" way to create a branch (I now know that <code>git branch</code> would have been more appropriate.)</p>

<p>I continued to work on the experimental change in the clone and, at the same time, other changes in the original repository.</p>

<p>Since then I have discovered that the experimental changes <em>are</em> desirable in the production version and would like to merge the two change sets.</p>

<p>If I had originally done a branch instead of a clone, this would be trivial.  I'm sure it's not too hard to merge between separate repositories, but having looked through the docs I don't think it can be done with a single command (a simple <code>pull</code> does not work.)</p>

<p>I haven't (yet) explicitly configured one repository as a ""remote"" of the other, but I am guessing this will be part of the solution.</p>

<p>The upstream repository at the time did not use any VCS - it was just a directory full of zips with version numbers appended to the file names.</p>

<p>So I would like to know:</p>

<ul>
<li>What's the easiest way to merge the change sets across repositories? (I don't expect any major conflicts.)</li>
<li>Just how harmful is it to clone instead of branching?  Have I lost any information by doing this, e.g. shared history, common dependencies?</li>
</ul>
","2988","","<p>Regarding the second part of your question:</p>

<blockquote>
  <p>Just how harmful is it to clone instead of branching? Have I lost any information by doing this, e.g. shared history, common dependencies?</p>
</blockquote>

<p>Git is a distributed version control system. The <em>whole point</em> of a DVCS is to be able to merge changes back and forth between different repositories.</p>
"
"<p>I need a script in any language to capitalize the first letter of every word in a file.</p>

<p>Thanks for all the answers. </p>

<p>Stackoverflow rocks!</p>
","2988","","<p>Here's another Ruby solution, using Ruby's nice little one-line scripting helpers (automatic reading of input files etc.)</p>

<pre><code>ruby -ni~ -e ""puts $_.gsub(/\b\w+\b/) { |word| word.capitalize }"" foo.txt
</code></pre>

<p>(Assuming your text is stored in a file named <code>foo.txt</code>.)</p>

<p>Best used with Ruby 1.9 and its awesome multi-language support if your text contains non-ASCII characters.</p>
"
"<p>For Python, it can create a pre-compiled version file.pyc so that the program can be run without interpreted again.  Can Ruby, PHP, and Perl do the same on the command line?</p>
","2988","","<p>There is no portable bytecode specification for Ruby, and thus also no standard way to load precompiled bytecode archives. However, almost all Ruby implementations use some kind of bytecode or intcode format, and several of them can dump and reload bytecode archives.</p>

<p><a href=""http://Ruby-Lang.Org/"">YARV</a> always compiles to bytecode before executing the code, however that is usually only done in memory. There are ways to dump out the bytecode to disk. <a href=""https://GitHub.Com/RubySpec/MatzRuby/blob/trunk/iseq.c#L1427-1429"">At the moment, there is no way to read it back <em>in</em></a>, however. This will change in the future: work is underway on a bytecode verifier for YARV, and once that is done, bytecode can safely be loaded into the VM, without fear of corruption. Also, the JRuby developers have indicated that they are willing to implement a <a href=""https://GitHub.Com/JRuby/JRuby/blob/da23e51968ffc17d750fca340f4b9538e5e2b425/src/org/jruby/ast/executable/YARVMachine.java"">YARV VM emulator inside JRuby</a>, once the YARV bytecode format and verifier are stabilized, so that you could load YARV bytecode into JRuby. (Note that this version is <a href=""https://GitHub.Com/JRuby/JRuby/commit/2257c8f811fab8d675a942c86ab712922dc46c6f/"">obsolete</a>.)</p>

<p><a href=""http://Rubini.us/"">Rubinius</a> also always compiles to bytecode, and it has a <a href=""https://GitHub.Com/EvanPhx/Rubinius/blob/master/kernel/compiler/compiled%5Ffile.rb"">format for compiled files</a> (<code>.rbc</code> files, analogous to JVM <code>.class</code> files) and there is talk about a bytecode archive format (<code>.rba</code> files, analogous to JVM <code>.jar</code> files). There is a chance that Rubinius might implement a YARV emulator, if deploying apps as YARV bytecode ever becomes popular. Also, the JRuby developers have indicated that they are willing to implement a <a href=""https://GitHub.Com/JRuby/JRuby/blob/da23e51968ffc17d750fca340f4b9538e5e2b425/src/org/jruby/ast/executable/RubiniusMachine.java"">Rubinius bytecode emulator inside JRuby</a>, if Rubinius bytecode becomes a popular way of deploying Ruby apps. (Note that this version is <a href=""https://GitHub.Com/JRuby/JRuby/commit/2257c8f811fab8d675a942c86ab712922dc46c6f/"">obsolete</a>.)</p>

<p><a href=""http://XRuby.GoogleCode.Com/"">XRuby</a> is a pure compiler, it compiles Ruby sourcecode straight to JVM bytecode (<code>.class</code> files). You can deploy these <code>.class</code> files just like any other Java application.</p>

<p><a href=""http://JRuby.Org/"">JRuby</a> started out as an interpreter, but it has both a JIT compiler and an <a href=""https://GitHub.Com/JRuby/JRuby/tree/master/src/org/jruby/compiler/"">AOT compiler</a> (<code>jrubyc</code>) that can compile Ruby sourcecode to JVM bytecode (<code>.class</code> files). Also, work is underway to create a <a href=""https://GitHub.Com/JRuby/JRuby/blob/master/tool/compiler2.rb""><em>new</em> compiler that can compile (type-annotated) Ruby code to JVM bytecode</a> that actually looks like a Java class and can be used from Java code without barriers.</p>

<p><a href=""http://RubyDotNETCompiler.GoogleCode.Com/"">Ruby.NET</a> is a pure compiler that compiles Ruby sourcecode to CIL bytecode (PE <code>.dll</code> or <code>.exe</code> files). You can deploy these just like any other CLI application.</p>

<p><a href=""http://IronRuby.Net/"">IronRuby</a> also compiles to CIL bytecode, but typically does this in-memory. However, you can pass <a href=""https://GitHub.Com/IronRuby/IronRuby/blob/master/Merlin/Main/Languages/Ruby/Ruby/Hosting/RubyOptionsParser.cs#L275-276"">commandline switches to it</a>, so it dumps the <code>.dll</code> and <code>.exe</code> files out to disk. Once you have those, they can be deployed normally.</p>

<p><a href=""https://SDN.SAP.Com/irj/scn/wiki?path=/display/Research/BlueRuby"">BlueRuby</a> automatically pre-parses Ruby sourcecode into BRIL (BlueRuby Intermediate Language), which is basically a serialized parsetree. (See <a href=""https://SDN.SAP.Com/irj/scn/go/portal/prtroot/docs/library/uuid/408a9a3b-03f9-2b10-b29c-f0a3374b19d8""><em>Blue Ruby - A Ruby VM in SAP ABAP</em></a>(PDF) for details.)</p>

<p>I <em>think</em> (but I am definitely not sure) that there is a way to get <a href=""https://GitHub.Com/Cardinal/Cardinal/"">Cardinal</a> to dump out <a href=""http://ParrotCode.Org/"">Parrot</a> bytecode archives. (Actually, Cardinal only compiles to PAST, and then Parrot takes over, so it would be Parrot's job to dump and load bytecode archives.)</p>
"
"<p>I ask out of ignorance.  It's been over two years since I heard James Duncan Davidson say that Ant needed a successor, something more like a scripting language.  It seemed that Maven 1/Jelly tried to do that, and Maven 2 has tried again in its way (""or the highway""), but without overwhelming success.  Ant seems still to be the default and I continue to use it effectively, but am still frustrated by aspects of it that have to do with it being XML-based.  </p>

<p>I don't mean to discuss <a href=""http://stackoverflow.com/questions/80622/maven-or-ant"">Ant vs. Maven</a>, but to ask, is there a successor or alternative that I am unaware of?  </p>

<p><strong>Edit:</strong>  I'm being prompted to pick a best answer, and I would like to pick both ""VonC"" for mentioning Ivy and ""dfa"" for pointing out the DSLs.  There doesn't seem to be an SO way to pick two ""correct"" answers, so I've upvoted both.</p>

<p>Thank you for the great answers.  I hope they will evolve over time.</p>
","2988","","<p>I read somewhere (can't remember where, and Google can't either – which is a little suspicious and could mean that I just made that up …) that James Duncan Davidson himself replaced Ant with <a href=""http://Rake.RubyForge.Org/"" rel=""nofollow"">Rake</a> for all his Java work.</p>

<p>I mean, this sort of scenario is pretty much what scripting languages are <em>born</em> for!</p>
"
"<p>Is it possible to implement the ?? operator in Ruby?</p>

<pre><code>a = nil
b = 1

x = a ?? b # x should == 1
x = b ?? 2 # x should == 1
</code></pre>
","2988","","<p>In Ruby, the short-circuiting Boolean operators (<code>||</code>, <code>&amp;&amp;</code>, <code>and</code> and <code>or</code>) do not return <code>true</code> or <code>false</code>, but rather the first operand that determines the outcome of the entire expression. This works, because Ruby has a rather simple idea of truth. Or rather, it has a rather simple idea of falsehood: <code>nil</code> is false, and obviously <code>false</code> is false. <em>Everything else</em> is true.</p>

<p>So, since <code>||</code> is true when <em>at least one</em> of its operands is true, and operands are evaluated from left to right, this means that <code>a || b</code> returns <code>a</code>, when <code>a</code> is true. But when <code>a</code> is false, then the outcome of the expression is solely dependent on <code>b</code>, and thus <code>b</code> is returned.</p>

<p>That means that, because <code>nil</code> is false, you can just use <code>||</code> instead of <code>??</code> for the examples that you gave. (There is also the nifty <code>a ||= b</code> operator, which kind of works like <code>a || a = b</code>, but not quite.)</p>

<p>However, that <em>only</em> works, because you don't use Booleans in your examples. If you expect to deal with Boolean values, that won't work:</p>

<pre><code>b = false

x = b || 2 # x should be == false, but will be 2
</code></pre>

<p>In that case, you will have to use <code>#nil?</code>, and a conditional expression:</p>

<pre><code>b = false

x = unless b.nil? then b else 2 end # x should be == 2
</code></pre>

<p>or using the ternary conditional operator:</p>

<pre><code>b = false

x = b.nil? ? 2 : b # x should be == false
</code></pre>

<p>If you want to, you can wrap that up in a nice method:</p>

<pre><code>class Object
  def _? b = nil
    return self
  end
end

class NilClass
  def _? b = nil
    return yield if block_given?
    return b
  end
end

b = false

x = b._? { 2 } # x should be == false
x = b._? 2 # x should be == false
</code></pre>

<p>This cute snippet brought to you by polymorphism, open classes and the fact that <code>nil</code> is actually an object <em>representing nothingness</em> (unlike, say, Java, where <code>null</code> <em>is</em> actually nothing).</p>
"
"<p>Quick one, has anyone come across a library similar to Ruby's cucumber (a human readable DSL for defining use case stories that can be tested against) in the .NET sphere? </p>
","2988","","<p>Sure. It's called <a href=""http://Cukes.Info/"">Cucumber</a>. There's an example for how to test .NET code in the <a href=""https://GitHub.Com/AslakHellesoy/Cucumber/tree/master/examples/cs/"">Cucumber examples directory</a> and documentation on the Cucumber Wiki for both <a href=""https://Wiki.GitHub.Com/AslakHellesoy/Cucumber/IronRuby-and-NET/"">.NET</a> and <a href=""https://Wiki.GitHub.Com/AslakHellesoy/Cucumber/IronRuby-and-Mono/"">Mono</a>.</p>
"
"<p>I would appreciate it if someone could help me understand the difference between using a Yielder in an Enumerator vs. just invoking yield in an Enumerator.</p>

<p>The ""Well-grounded Rubyist"" suggests that one doesn't ""yield from the block"" but doesn't explain precisely what's going on.</p>

<p>Thanks</p>
","2988","","<p>The <code>Enumerator::Yielder#yield</code> method and the <code>Enumerator::Yielder::&lt;&lt;</code> method are <em>exactly the same</em>. In fact, they are aliases.</p>

<p>So, which one of those two you use, is 100% personal preference, just like <code>Enumerable#collect</code> and <code>Enumerable#map</code> or <code>Enumerable#inject</code> and <code>Enumerable#reduce</code>.</p>
"
"<p>Coming from a Python background, where there is always a ""right way to do it"" (a ""Pythonic"" way, if you will) when it comes to style, I'm wondering if the same exists for Ruby. I've kind of been using my own style guidelines but I'm thinking about releasing my source code, and I'd like it to adhere to any unwritten rules that might exist.</p>

<p><strong>So my question is:</strong> Is it ""The Ruby Way"" to explicitly type out <code>return</code> in methods? I've seen it done with and without, but is there a ""right way"" to do it? Is there maybe a ""right <em>time</em>"" to do it? For example:</p>

<pre><code>def some_func(arg1, arg2, etc)
  value = arg1 + arg2 + etc #or whatever
  # Do some stuff...
  return value # &lt;-- Is the 'return' needed here?
end
</code></pre>
","2988","","<p>I personally use the <code>return</code> keyword to distinguish between what I call <em>functional methods</em>, i.e. methods that are executed primarily for their return value, and <em>procedural methods</em> that are executed primarily for their side-effects. So, methods in which the return value is important, get an extra <code>return</code> keyword to draw attention to the return value.</p>

<p>I use the same distinction when <em>calling</em> methods: functional methods get parentheses, procedural methods don't.</p>

<p>And last but not least, I also use that distinction with blocks: functional blocks get curly braces, procedural blocks (i.e. blocks that ""do"" something) get <code>do</code>/<code>end</code>.</p>

<p>However, I try not to be religious about it: with blocks, curly braces and <code>do</code>/<code>end</code> have different precedence, and rather than adding explicit parentheses to disambiguate an expression, I just switch to the other style. The same goes for method calling: if adding parentheses around the parameter list makes the code more readable, I do it, even if the method in question is procedural in nature.</p>
"
"<p>I'm trying to use git on windows to clone a remote repository. I can clone it on my mac fine but on windows I get a problem.</p>

<p>WHen using git bash to clone, I get a message saying the server's host key is not cached in the registry. It asks me to preess y or n to trust the host.</p>

<p>THe problem is that if I press y or n nothing happens. It just hangs there. Should I use OpenSSH instead of PuTTY?</p>

<p>Thanks</p>
","2988","","<p>The problem is that MSysGit starts PLink in the background, i.e. the terminal is not actually connected to the input of PLink. That means that you simply <em>can't</em> type anything into PLink.</p>

<p>You simply have to connect to the server once using PLink or PuTTY, answer <em>Yes</em> and from then on, you won't be asked again.</p>
"
"<p>Is there a Ruby IDE for windows that supports auto completion for user defined classes (like textmate does)?</p>

<pre><code>class MyClass
    attr_accessor :name, :age
    def initialize(name, age)
        @name, @age = name, age
    end
end

mc = MyClass.new
mc....
</code></pre>

<p>The last line should list [name, age]</p>
","2988","","<p>Basically, all of them.</p>

<p>Really, I haven't seen <em>any</em> IDE that doesn't do this. In fact, that's the whole <em>point</em> of an IDE, isn't it?</p>
"
"<p>So I've been using Smalltalk for about 6 months now (Squeak and Pharo), mostly doing data analytics, and I'm about to start my first Seaside app. So my question to all you Smalltalkers out there is, what is your favorite persistence solution? I've been looking at Magma, GOODS, and GLORP. I'm a long-time python hacker, so I get ORM, but it seems like Magma or GOODS would be a better solution, since they seem object-oriented.</p>

<p>A quick note: I want to scale my app across multiple VM's, so just saving data to the image wont really work.</p>

<p>Thanks!</p>
","2988","","<p>If you want to scale across multiple VMs, you might want to to take a look at <a href=""http://GemStone.Com/products/smalltalk/"" rel=""nofollow"">GemStone/S</a>.</p>

<p>Be aware, however, that GemStone is a <a href=""http://Seaside.GemStone.Com/docs/GLASS-Announcement.htm"" rel=""nofollow"">proprietary, commercial product</a>. So, you <em>will</em> have to pay for it. However, the pricing model is generally designed in such a way, that if you <em>need</em> a bigger edition then you will generally also have the users to <em>pay</em> for that edition. The prices start out at 0 $ for the 4 GiByte disk / 1 GiByte RAM / 1 CPU version.</p>

<p>Another thing to note is that GemStone Smalltalk is its own dialect, so your Squeak code will probably not run unmodified, but should be fairly easy to port. (For example, the GemStone engineers have created an adapter that allows you to load Monticello (Squeak's version control system) packages into GemStone/S, also they generally make sure that Seaside runs.)</p>

<p>So, what is GemStone? Basically, it's a distributed VM with automatic object persistence. It's easiest to explain compared to a normal Smalltalk VM. If you have two Smalltalk VMs running side-by-side, each of them has its own Object Memory (i.e. the thing the garbage collector manages). And that Object Memory is in RAM. In GemStone, all VMs in a cluster share the <em>same</em> Object Memory <em>and</em> it lives on disk, not in RAM. So, you don't <em>need</em> a database, not even an object-oriented one, because your objects are ""just there"", everywhere, all the time.</p>

<p>(That's only a very simplistic description. For example, the heap is not <em>really</em> shared across VMs. That wouldn't make sense, you wouldn't want to replicate every temporary object you create across the network. Instead, you have a global repository object (basically, a dictionary) and just like the garbage collector will start at some well-known root object and then keep all objects that are reachable from there, and delete those that aren't, GemStone will start at the global repository object, and persist/replicate <em>only</em> the objects that are reachable from there.)</p>

<p>GemStone also has database-ish features, so access to the global repository is wrapped in ACID transactions, and there is a SQL-inspired but Smalltalkish query language.</p>

<p>GemStone has a nice appliance that they call ""<a href=""http://Seaside.GemStone.Com/"" rel=""nofollow"">GLASS</a>"" (for GemStone, Linux, Apache, Seaside and Smalltalk) analogous to the well-known ""LAMP"" (Linux, Apache, MySQL and PHP). GLASS includes the gratis edition of GemStone with Seaside preinstalled and everything setup with Apache running on top of Xubuntu, everything neatly packaged into a VMWare disk image.</p>
"
"<p>Given the following two ways of defining a class method in Ruby:</p>

<pre><code>class Foo
  class &lt;&lt; self
    def bar
      # ...
    end
  end

  def self.baz
    # ...
  end
end
</code></pre>

<p>Is there a difference between the two? Is one more preferable than the other?</p>
","2988","","<p>Just to clarify the terminology: there is no such thing as a ""class method"" in Ruby. What you are doing is to define a <em>singleton method</em> on the <em>object</em> that is the class <code>Foo</code> (remember, classes are objects, too, just like any other). In turn, singleton methods don't really exist, either, they are just normal instance methods on the <em>eigenclass</em> (commonly referred to as <code>Foo′</code>) of the object, which in this case is also the metaclass of the class <code>Foo</code>.</p>

<p>Confused yet? :-)</p>

<p>Basically, there is no difference between doing this:</p>

<pre><code>foo = Object.new
class &lt;&lt; foo
  def bar
    # ...
  end
end

def foo.baz
  # ...
end
</code></pre>

<p>and this:</p>

<pre><code>class Foo
  class &lt;&lt; self
    def bar
      # ...
    end
  end

  def self.baz
    # ...
  end
end
</code></pre>

<p>Because inside a class definition, <code>self</code> is bound to the class object (in this case <code>Foo</code>), that is equivalent to:</p>

<pre><code>class Foo
  class &lt;&lt; Foo
    def bar
      # ...
    end
  end

  def Foo.baz
    # ...
  end
end
</code></pre>

<p>Which is in turn equivalent to:</p>

<pre><code>Foo = Class.new
class &lt;&lt; Foo
  def bar
    # ...
  end
end

def Foo.baz
  # ...
end
</code></pre>

<p>Which as you can see is pretty much exactly the same as my first example. This shows that there really is no difference between a singleton method on a class method and a singleton method on any other kind of object, therefore it doesn't make sense to talk about ""class methods"" in Ruby.</p>

<p>You can also see how these two notations relate to the notion of singleton methods and eigenclasses:</p>

<pre><code>def foo.baz
  # ...
end
</code></pre>

<p>says ""add the singleton method <code>baz</code> to the object <code>foo</code>"" and </p>

<pre><code>class &lt;&lt; foo
  def bar
    # ...
  end
end
</code></pre>

<p>""open up the eigenclass of object <code>foo</code> and then add instance method <code>bar</code> to the eigenclass"". But, as we established earlier, a singleton method of the object and an instance method of the object's eigenclass are really the same thing. That's why it wouldn't make sense for those two notations to behave differently.</p>
"
"<p>I'm  having a problem writing a regular expression. How could I write the following:</p>

<ol>
<li>start with an optional access level (a digit from 1 to 5) </li>
<li>followed by a space </li>
<li>then a user name consisting of between 3 and 5 small letters </li>
<li>followed by between 3 and 5 digits </li>
<li>then one or more spaces </li>
<li>and then a four digit pin number </li>
<li>then one or more spaces </li>
<li>and the same pin again for confirmation..</li>
</ol>

<p>If the information is valid, display an alert saying ""Thank you."" Otherwise ""The information entered is incorrect.""</p>

<p>I wrote the following, but it doesn't work properly:</p>

<pre><code>reg=/^(\d{1,5})?/s ([a-z]{3,5}\b\d{3,5}\s) \s\1 $/;
</code></pre>

<p>I would appreciate any help.</p>
","2988","","<p>What you are describing is not a regular language, therefore it cannot be parsed by a regular expression. The problem is your requirements 6 and 8: regular expressions don't have memory, therefore it is impossible to check that the PINs in 6 and 8 are identical.</p>
"
"<p>I have a folder in my repository called 'activity'. It keeps getting strangely deleted from the repository, and isn't seen as an untracked file.</p>

<p>In github, it is rendered as a folder with a green arrow, and the text '→ f32111b' next to it. This has happened several times now, and only with this one folder. </p>

<p>I've already checked .gitignore. Is there another reason why a folder called 'activity' would be trouble in git? </p>
","2988","","<p>That's not a directory, that's a submodule. Or at least GitHub seems to think so.</p>

<p>What does your <code>.gitmodules</code> file look like? Did you maybe forget to run <code>git submodule init</code> and <code>git submodule update</code>?</p>

<p>Submodules can be a little bit tricky, especially when you convert from a directory to a submodule or back.</p>
"
"<p>I have this code:</p>

<pre><code>def setVelocity (x, y, yaw)
  setVelocity (Command2d.new(x,y,yaw))
end
def setVelocity (vel)
......
end
</code></pre>

<p>vel is a Command2D class that has 3 attributes, is Comparable and defines + , basically is a convenient class for me to manage those 3 attributes, so I want to use it internally in my library (dont want to make them private, either give them weird names). 
But Ruby seems to keep only the last setVelocity even when the number of parameters is different. so when I call setVelocity with 3 parameters will say that I need to call that method with only one parameter. </p>
","2988","","<p>Just for comparison, here's how I would solve it:</p>

<pre><code>#!/usr/bin/env ruby

class Command2D
  def initialize(x, y, yaw)
    @command = [x, y, yaw]
  end
end

class Vehicle
  def velocity=(command_or_array)
    case command_or_array
    when Command2D
      self.velocity_from_command = command_or_array
    when Array
      self.velocity_from_array = command_or_array
    else
      raise TypeError, 'Velocity can only be a Command2D or an Array of [x, y, yaw]'
    end
  end

  private

  def velocity_from_command=(command)
    @velocity = command
  end

  def velocity_from_array=(ary)
    raise TypeError, 'Velocity must be an Array of [x, y, yaw]' unless ary.length == 3
    @velocity = Command2D.new(*ary)
  end
end

v1 = Vehicle.new
v1.velocity = Command2D.new(1, 2, 3)

v2 = Vehicle.new
v2.velocity = [1, 2, 3]

p v1
p v2
</code></pre>
"
"<p>Having been an imperative developer for some years now, I had never had the urge to learn functional programming.</p>

<p>A couple months ago at last I decided to learn Haskell. It's quite a cool language, but I'm puzzled about how an event driven real app would be programmed in such a language. Do you know of a good tutorial about it?</p>

<p><strong>Note:</strong> When I say ""real app"" I'm not talking of a real world, production ready app. I just mean a little sample app, just to get the grasp of it. I think something like a simplified version of the windows caculator would be great, and then perhaps something a bit more complex.</p>
","2988","","<p>When you say ""real world"" examples you are presumably thinking about problems that are inherently sequential or stateful or do lots of I/O, right?</p>

<p>So, how about games?</p>

<ul>
<li><a href=""http://Haskell.Org/haskellwiki/Frag"">Frag</a> is a Quake clone, implemented for an undergraduate thesis (<a href=""http://WWW.CSE.UNSW.Edu.Au/~pls/thesis/munc-thesis.pdf"">Functional Programming and 3D Games, Mun Hon Cheong, 2005</a>). <a href=""http://www.youtube.com/watch?v=0jYdu2u8gAU"">Here's a video of it in action</a>.</li>
<li><a href=""https://GitHub.Com/Mokehehe/Monao/"">Super Monao Bros.</a> (formerly known as <em>Super Nario Bros.</em>) is, well, you can probably figure out which game it is a clone of. (<a href=""http://Mokehehe.BlogSpot.Com/"">This is the author's English language weblog.</a>)</li>
<li><a href=""http://Prog21.Dadgum.Com/23.html"">Purely Functional Retrogames</a> is a 4-part series of blog articles about how to write games in a purely functional language, explained using Pacman as the example. (<a href=""http://Prog21.Dadgum.Com/24.html"">Part 2</a>, <a href=""http://Prog21.Dadgum.Com/25.html"">Part 3</a>, <a href=""http://Prog21.Dadgum.Com/26.html"">Part 4</a>.)</li>
</ul>

<p>Or, what about an <a href=""http://XMonad.Org/"">X Window Manager</a>, an extensible <a href=""http://Haskell.Org/haskellwiki/Yi"">Emacs clone text editor</a> or an <a href=""http://Leksah.Org/"">IDE</a>?</p>

<p>Then, there is the book, which even has your question already in the title: <a href=""http://Book.RealWorldHaskell.Org/"">Real World Haskell</a> <em>and</em> which is also <a href=""http://Book.RealWorldHaskell.Org/read/"">available for free</a>!</p>

<p>Another thing you might want to look at, is <a href=""http://Google.Com/search?q=Functional+Reactive+Programming"">Functional Reactive Programming</a>. (It is used in Frag, for example.) The interesting thing about FRP is that it allows you to look at the problem of, say, GUI programming from a very different angle. If you read the GUI chapter in the RWH book, you will see that it talks about how you can write a GUI application just like in C, only better. FRP OTOH allows you to write it in a <em>totally different</em> way that wouldn't even be <em>possible</em> in C.</p>

<p>A lot of times (I'm not saying that this is the case in your question, but it is a recurring pattern) when someone says ""but can Haskell be used in the real world"", what they are <em>really</em> saying is ""I know how to do this in C, and in Haskell I cannot do it in exactly the same way, therefore it must be impossible in Haskell, therefore Haskell is not ready for the real world"". But what they are missing out on, is that there might be a totally different and <em>much better</em> way to solve the problem. (It's like saying ""Erlang doesn't have threads, therefore it cannot possibly be used to implement concurrent systems."") And FRP is just one example.</p>
"
"<p>With Ruby 1.9, the YARV-VM was merged into Ruby. So <a href=""http://www.atdot.net/yarv"" rel=""nofollow"">http://www.atdot.net/yarv</a> seems to be outdated.</p>

<p>Where can I find documentation on <code>RubyVM::InstructionSequence</code>?
Especially on <code>#compile_file</code>?</p>

<p>Where can I find an up-to-date Instruction Table like <a href=""http://www.atdot.net/yarv/insnstbl.html"" rel=""nofollow"">http://www.atdot.net/yarv/insnstbl.html</a> ?</p>
","2988","","<p>The documentation for that part of YARV is rather poor. I'm not sure whether that is because the only developer who truly understands it doesn't speak English or whether it is deliberate, because that part of YARV still is in heavy development.</p>

<p>Your best bet is to use the source, ask questions on the ruby-core mailinglist or (for best results) learn Japanese and ask questions on the ruby-dev mailinglist.</p>

<p>The thing is, before there is a working bytecode verifier (à la JVM), the developers really don't want you messing about with bytecode too much, because by creating illegal or otherwise ""funny"" bytecode sequences by hand (i.e. not produced by the YARV compiler itself) you can crash the VM (or worse).</p>
"
"<p>I'm encountering some strange behavior so I'm hoping someone can help shed some light on this. When I do a <em>git push</em>, it ends with a ""fatal: The remote end hung up unexpectedly"" but checking the git logs and the remote repo seems to indicate the push went through fine. Rerunning the <em>git push</em> returns ""Everything is up to date"".</p>

<p>So a little background, I have dropbear and git installed on a Palm Pre and am trying to commit changes to a repo on gitorious. Since dropbear is kind of screwy, I had to create a shell script (called sssh) that does the equivalent of </p>

<pre><code>ssh -i ~/.ssh/id_rsa $*
</code></pre>

<p>as dropbear will not automatically scan for the publickey. Additionally, I have defined GIT_SSH to be /opt/bin/sssh.</p>

<p>So at this point, everything <em>seems</em> to work but I am not sure why the ""fatal"" message keeps popping up. Any ideas?</p>

<p>Update: Edited to show what I have in .git/config.</p>

<pre><code>root@castle:/opt/src/modifications# cat .git/config
[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[branch ""master""]
    remote = origin
    merge = refs/heads/master
[remote ""origin""]
    url = git@gitorious.org:webos-internals/modifications.git
    fetch = +refs/heads/*:refs/remotes/origin/*
[remote ""all""]
    url = git@gitorious.org:webos-internals/modifications.git
    url = git@github.com:jauderho/webos-hacks.git
</code></pre>
","2988","","<p>This is only a guess (you should probably ask on the <a href=""https://Groups.Google.Com/group/git-users/"" rel=""nofollow"">Git For Human Beings Mailinglist</a> or if that doesn't help the developer mailinglist (git@vger.kernel.org)).</p>

<p>My guess is, that either Dropbear itself or your wrapper script exits in such a way that Git thinks there is something wrong with the connection. It might be something as trivial as Git trying to pattern match on some string returned by OpenSSH that is not 100% identical on Dropbear, or a wrong exit code, or something like that.</p>
"
"<p>Can anyone point to programming language which has python-like syntax, but from the very beginning was designed to generate native code? I'm aware of Boo only, but it uses .net, not native code generation. Well, if nothing else than python-like languages which generate .net/java bytecode are fine too. </p>
","2988","","<p>I must admit that I don't quite understand your question, for two reasons:</p>

<ol>
<li><p>You are asking for a language with native code generation, but native code generation has nothing to do with the language, it is a trait of the implementation. <em>Every</em> language can have an implementation with native code generation. Several Python implementations have native code generation. There are C compilers that compile to JVM bytecode, CIL bytecode or even ECMAScript sourcecode. There are even C <em>interpreters</em>. There are also compilers that compile Java sourcecode or JVM bytecode to native code.</p></li>
<li><p>Why do you care about the syntax? It is probably the least important factor about choosing a programming language.</p></li>
</ol>

<p>Anyway, <a href=""http://nimrod-lang.org"" rel=""nofollow"">Nimrod</a> is a programming language which has an implementation which supports native code generation (or more precisely an implementation which supports C source code generation) and whose syntax is a hybrid between Wirthian style (by the looks of it the most important influences are Oberon and Delphi) and Python.</p>

<p>However, the fact that it has Pythonic syntax isn't going to help you at all if you don't like European style language design or Wirthian style OOP.</p>
"
"<p>I've got a bit of an odd situation.  If I were using a hash, this issue would be easy, however, I'm trying to use ""OpenStruct"" in Ruby as it provides some decently cool features.</p>

<p>Basically, I think I need to ""constantize"" a return value.  I've got a regular expression:</p>

<pre><code>  textopts = OpenStruct.new()
  textopts.recipients = []
  fileparts = fhandle.read.split(""&lt;&lt;--&gt;&gt;"")

  fileparts[0].chomp.each{|l|
    if l =~ /Recipient.*/i
      textopts.recipients &lt;&lt; $&amp;
    elsif l =~ /(ServerAddress.*|EmailAddress.*)/i
      textopts.$&amp; = $&amp;.split("":"")[1]
    end
  }
</code></pre>

<p>I need a way to turn the $&amp; for ""textopts"" into a valid property for filling.  I've tried ""constantize"" and some others, but nothing works.  I would assume this is possible, but perhaps I'm wrong.  Obviously if I were using a hash I could just do  ""textopts[$&amp;] = ....."".</p>

<p>Any ideas?</p>
","2988","","<p>Keeping the structure of your solution, this is one way to do it:</p>

<pre><code>  textopts = OpenStruct.new(:recipients =&gt; [])
  fileparts = fhandle.read.split('&lt;&lt;--&gt;&gt;')

  fileparts.first.chomp.each_line do |l|
    case l
    when /Recipient.*/i
      textopts.recipients &lt;&lt; $&amp;
    when /(Server|Email)Address.*/i
      textopts.send ""#{$&amp;}="", $&amp;.split(':')[1]
    end
  end
</code></pre>

<p>But I can't help but think that this should be a proper parser.</p>
"
"<p>How do I write a regular expression to match the following:</p>

<pre><code>CONTEXT_84 = 
</code></pre>

<p>or</p>

<pre><code>CONTEXT_5 =
</code></pre>
","2988","","<p>Your question already contains the answer: you ask</p>

<blockquote>
  <p>how do I match <code>CONTEXT_84 =</code> <strong>or</strong> <code>CONTEXT_5 =</code>?</p>
</blockquote>

<p>That's already all you need, the only thing missing is how to say <strong>or</strong> in Regexp, and that's <code>|</code>.</p>

<p>So, your solution is</p>

<pre><code>CONTEXT_84 =|CONTEXT_5 =
</code></pre>

<p>You can shorten that by pulling out the common parts:</p>

<pre><code>CONTEXT_(84|5) =
</code></pre>

<p>And you're done!</p>
"
"<p>When you are designing an application (assumed in English), and you ask the user to provide a path to a directory/folder, do you use the term <strong>Directory</strong> or <strong>Folder</strong>?</p>

<p>Is one more understood than the other? Is one more ""correct"" than the other?</p>
","2988","","<p>Please note that they are <em>not</em> synonyms. Directories and Folders behave differently. For example, if you want to remove a File from a Folder, you need access to the Folder <em>and</em> the File, because the File is <em>stored</em> inside the Folder.</p>

<p>If, however, you want to remove a File from a Directory, you need access <em>only</em> to the Directory, because a Directory itself is just a regular File that lists the <em>locations</em> of (but does not <em>contain</em>) other Files. So, you just need to strike out that entry from the Directory, no access to the File is required.</p>

<p>This distinction is pretty important, because false and thus misleading metaphors can be at least confusing and in the worst case pretty dangerous when talking about filesystems. (Confusion about filesystem behaviour often translates into accidental information disclosure, data loss or security holes.)</p>

<p>A great percentage of questions on Unix mailinglists, but also here, on ServerFault and on SuperUser, about what to the asker <em>seems</em> to be confusing filesystem behaviour, can be traced directly back to thinking about Folders, when Unix does in fact have Directories.</p>

<p>So, in other words: use ""Folder"" when dealing with folders and ""Directory"" when dealing with directories.</p>
"
"<p>How do you setup a git repository where some users can see certain parts of the source code and other users can see all of it? I've seen lots of guides for only giving certain users commit access, but these assume everyone should have read access. I've also heard of gitosis, but I'm not sure it supports this and it hasn't had any commits in over a year so I think it's dead.</p>
","2988","","<p>Git doesn't support access control on the repository. You <em>can</em> however, implement access control on the repository <em>yourself</em>, by using <a href=""http://Kernel.Org/pub/software/scm/git/docs/githooks.html"" rel=""nofollow"">hooks</a>, more specifically the <code>update</code> hook.</p>
"
"<p>I took a glimpse on <a href=""http://en.wikipedia.org/wiki/Hoare%5Flogic"">Hoare Logic</a> in college. What we did was really simple. Most of what I did was proving the correctness of simple programs consisting of <code>while</code> loops, <code>if</code> statements, and sequence of instructions, but nothing more. These methods seem very useful!</p>

<p>Are formal methods used in industry widely?</p>

<p>Are these methods used to prove mission-critical software?</p>
","2988","","<p>Well, Sir Tony Hoare joined Microsoft Research about 10 years ago, and one of the things he started was a formal verification of the Windows NT kernel. Indeed, this was one of the reasons for the long delay of Windows Vista: starting with Vista, large parts of the kernel <em>are</em> actually formally verified wrt. to certain properties like absence of deadlocks, absence of information leaks etc.</p>

<p>This is certainly not typical, but it is probably the single most important application of formal program verification, in terms of its impact (after all, almost every human being is in some way, shape or form affected by a computer running Windows).</p>
"
"<p>edit: Prolog is the answer. </p>
","2988","","<p>I believe the type system of the <a href=""https://ProjectFortress.Sun.Com/"" rel=""nofollow"">Fortress Programming Language</a> works in some way similar to what you describe. It uses an Object-Oriented Type System with Generic Traits to describe e.g. Algebraic Properties of Operators (like Associativity, Commutativity, Distributivity, Identity, Symmetry, One-Element, Zero-Element and so on). It needs to know all these in order to automatically distribute computations across nodes in a cluster.</p>
"
"<p>I'm near the beginning of a new project and (gasp!) for the first time ever I'm trying to include unit tests in a project of mine.</p>

<p>I'm having trouble devising some of the unit tests themselves.  I have a few methods which have been easy enough to test (pass in two values and check for an expected output).  I've got other parts of the code which are doing more complex things like running queries against the database and I'm not sure how to test them.</p>

<pre><code>public DataTable ExecuteQuery(SqlConnection ActiveConnection, string Query, SqlParameterCollection Parameters)
{
    DataTable resultSet = new DataTable();
    SqlCommand queryCommand = new SqlCommand();
    try
    {
        queryCommand.Connection = ActiveConnection;
        queryCommand.CommandText = Query;

        if (Parameters != null)
        {
            foreach (SqlParameter param in Parameters)
            {
                 queryCommand.Parameters.Add(param);
            }
        }

        SqlDataAdapter queryDA = new SqlDataAdapter(queryCommand);
        queryDA.Fill(resultSet);
    }
    catch (Exception ex)
    {
        //TODO: Improve error handling
        Console.WriteLine(ex.Message);
    }

    return resultSet;
}
</code></pre>

<p>This method essentially takes in all the necessary bits and pieces to extract some data from the database, and returns the data in a DataTable object.</p>

<p>The first question is probably the most complex: What should I even test in a situation like this?</p>

<p>Once that's settled comes the question of whether or not to mock out the database components or try to test against the actual DB.</p>
","2988","","<p>The whole point of a unit test is to <em>test a unit</em> (duh) in isolation. The whole point of a database call is to <em>integrate</em> with another unit (the database). Ergo: it doesn't make sense to unit test database calls.</p>

<p>You should, however, integration test database calls (and you can use the same tools you use for unit testing if you want).</p>
"
"<p>I had this error when I do rake in the app directory, looks like YAML was failed to load.
Can anybody help? 
Thanks</p>

<pre><code>C:\Development\RUBY\laibe\ilr&gt;rake --trace
(in C:/Development/RUBY/laibe/ilr)
** Invoke default (first_time)
** Invoke spec (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
rake aborted!
syntax error on line 26, col -1: `'
C:/Ruby/lib/ruby/1.8/yaml.rb:133:in `load'
C:/Ruby/lib/ruby/1.8/yaml.rb:133:in `load'
C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/initializer.rb:880:in `database_configuration'
C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/initializer.rb:416:in `initialize_database'
C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/initializer.rb:141:in `process'
C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/initializer.rb:113:in `send'
C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/initializer.rb:113:in `run'
C:/Development/RUBY/laibe/ilr/config/environment.rb:12
C:/Ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
C:/Ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/dependencies.rb:156:in `requi
</code></pre>
","2988","","<p>If you want an answer, you must provide the relevant information. The error message says very clearly what is wrong: there is an error in line 26 of your <code>database.yml</code>. But since you haven't told us, what line 26 actually <em>is</em>, there is no way to answer your question.</p>
"
"<p>A friend who is new to OO programming asked me the difference between a Member and Property, and I was ashamed to admit that I couldn't give him a good answer. Since properties can also be objects themselves, I was left with a general description and list of exceptions.</p>

<p>Can somebody please lay out a good definition of when to consider something a member vs. a property? Maybe I'm bastardizing the concept, or is it just that a member is just the internal name I use, and the property is what's exposed to other objects?</p>

<p>I don't think that not knowing the answer to this question has affected the quality of my programming, and it's just a semantics point, but it still bothers me that I can't explain it to him.</p>
","2988","","<p>Neither of the two terms has any defined meaning whatsoever in Object-Oriented Programming or Object-Oriented Design. Nor do they have any defined meaning in the overwhelming majority of programming languages.</p>

<p>Only a very small number of programming languages have a concept called <em>property</em> or <em>member</em>, and even fewer have both.</p>

<p>Some examples of languages that have either one of the two are C++ (which has members), ECMAScript (which has properties) and C# (which has both). However, these terms don't necessarily denote the same concepts in different programming languages. For example, the term ""member"" means roughly the same thing in C++ and C#, but the term ""property"" means completely different things in ECMAScript and C#. In fact, the term ""property"" in ECMAScript denotes roughly the same concept (ie. means roughly the same thing) as the term ""member"" in C++ and C#.</p>

<p>All this is just to say that those two terms mean exactly what the relevant specification for the programming language says they mean, no more and no less. (Insert gratuitous Lewis Carroll quote here.)</p>
"
"<p>The Ruby on Rails website recommends installing Ruby from source under Linux.
I encountered a number of C library problems building ruby from source on a clean install of Unbuntu 9.</p>

<p>All the instructions I found on the net about installing ruby on ubuntu have involved using the prepackaged (.deb-based) ruby. Clearly this isn't what the rails people recommend.</p>

<p>When I did a clean source build of ruby I found Rubygems failed to install because the zlib extension didn't work.</p>

<p>Two problems occur:</p>

<p>1) The zlib extension isn't built.</p>

<p>Solution:</p>

<p>i) ensure zlib is uncommented in the Setup file within the extn directory of the ruby source, and</p>

<p>ii) ensure these zlib ubuntu packages are installed:</p>

<pre><code>aptitude install zlib1g
aptitude install zlib1g-dbg
aptitude install zlib1g-dev
aptitude install zlibc
</code></pre>

<p>2) After fixing Problem 1 above (and doing a clean rebuild of ruby), zlib still doesn't work because the extension fails to load. </p>

<p>You can see that the module fails to load by running this and getting the output ""false"":</p>

<pre><code>puts require 'zlib'
</code></pre>

<p>I observed this happens to any number of other C extensions in the extn directory, so it appears to be a more general problem with these extensions than just something zlib-specific.</p>

<p>To summarise:</p>

<ul>
<li>My build of ruby finds the ruby-specific C zlib extension but it fails to load the zlib module.</li>
<li>This behaviour appears to happen to other extensions in /extn.</li>
</ul>

<p>Is there a way I can find out why a module fails to load? some kind of trace/verbose mode?</p>
","2988","","<p>I don't see what your problem is. You say that <code>require 'zlib'</code> returns <code>false</code>. But that means that it <em>did</em> work! If there were an error, you would get a <code>LoadError</code> exception.</p>
"
"<p>The ruby extensions in the ""ext"" directory of my ubuntu ruby interpreter i.e. zlib, etc, io, ... fail to load.</p>

<p>I mean they're recognized as extensions - I don't get a ""no such file"" error, yet they fail to load (i.e. return false).</p>

<p>Running this:
    puts require 'zlib'</p>

<p>prints ""false""</p>

<p>Is there a way of tracking down why a module fails to load? some kind of trace or debug I could use?</p>
","2988","","<p>A return value of <code>false</code> does <em>not</em> mean that there was an error. It means that the library wasn't loaded <em>again</em>, because it was <em>already loaded</em>.</p>

<p>If there were an error, you would get a <code>LoadError</code> exception.</p>
"
"<p>The situation: I have multiple classes that should each hold a variable with a configuration hash; a different hash for each class but the same for all instances of a class.</p>

<p>At first, i tried like this</p>

<pre><code>class A
  def self.init config
    @@config = config
  end

  def config
    @@config
  end
end

class B &lt; A; end
class C &lt; A; end
</code></pre>

<p>But soon noticed that it wouldn't work that way because @@config is held in the context of A, not B or C, thus:</p>

<pre><code>B.init ""bar""
p B.new.config  # =&gt; ""bar""
p C.new.config  # =&gt; ""bar"" - which would be nil if B had it's own @@config

C.init ""foo""
p B.new.config  # =&gt; ""foo"" - which would still be ""bar"" if C had it's own @@config
p C.new.config  # =&gt; ""foo""
</code></pre>

<p>I thought of using it like this:</p>

<pre><code>modules = [B, C]
modules.each do |m|
  m.init(@config[m.name])
end
# ...
B.new  # which should then have the correct config
</code></pre>

<p>Now, it's clear to me why that happens, but I'm not sure about the reason for it being like this.</p>

<p>Couldn't it work the other way too, holding the class variable in the context of the subclass?</p>

<p>What i also found irritating was the fact that self is always the subclass even when called 'in' the superclass. From this, I first expected the code from the superclass is ""executed in the context of"" the subclass.</p>

<p>Some enlightenment about this would be greatly appreciated.</p>

<p>On the other hand, I likely have to accept it works that way and that I have to find another way to do this.</p>

<p>Is there a ""meta"" way to do this? (I tried with class_variable_set etc. but with no luck)</p>

<p>Or maybe is the whole idea of that 'init' method flawed in the first place and there's some other ""pattern"" to do this?</p>

<p>I could just make @@config a hash, holding all the configs and always pick the right one, but I find that a little awkward.. (isn't inheritance there to solve this kind of problem? ;)</p>
","2988","","<p>The <code>@@variables</code> aren't class variables. They are <em>class hierarchy variables</em>, i.e. they are shared between the entire class hierarchy, including all subclasses and all instances of all subclasses. (It has been suggested that one should think of <code>@@variables</code> more like <code>$$variables</code>, because they actually have more in common with <code>$globals</code> than with <code>@ivars</code>. That way lies less confusion. Others have gone further and suggest that they should simply be removed from the language.)</p>

<p>Ruby doesn't have class variables in the sense that, say, Java (where they are called static fields) has them. It doesn't <em>need</em> class variables, because classes are also objects, and so they can have <em>instance</em> variables just like any other object. All you have to do is to remove the extraneous <code>@</code>s. (And you will have to provide an accessor method for the class instance variable.)</p>

<pre><code>class A
  def self.init config
    @config = config
  end

  def self.config # This is needed for access from outside
    @config
  end

  def config
    self.class.config # this calls the above accessor on self's class
  end
end
</code></pre>

<p>Let's simplify this a bit, since <code>A.config</code> is clearly just an attribute_reader:</p>

<pre><code>class A
  class &lt;&lt; self
    def init config
      @config = config
    end

    attr_reader :config
  end

  def config
    self.class.config
  end
end
</code></pre>

<p>And, in fact, <code>A.init</code> is just a writer with a funny name, so let's rename it to <code>A.config=</code> and make it a writer, which in turn means that our pair of methods is now just an accessor pair. (Since we changed the API, the test code has to change as well, obviously.)</p>

<pre><code>class A
  class &lt;&lt; self
    attr_accessor :config
  end

  def config
    self.class.config
  end
end

class B &lt; A; end
class C &lt; A; end

B.config = ""bar""
p B.new.config  # =&gt; ""bar""
p C.new.config  # =&gt; nil

C.config = ""foo""
p B.new.config  # =&gt; ""bar""
p C.new.config  # =&gt; ""foo""
</code></pre>

<p>However, I can't shake the feeling that there is something more fundamentally iffy about the design, if you need this at all.</p>
"
"<p>Why would anybody use the ""standard"" random number generator from <a href=""http://msdn.microsoft.com/en-us/library/system.random.aspx"">System.Random</a> at all instead of always using the cryptographically secure random number generator from <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.randomnumbergenerator.aspx"">System.Security.Cryptography.RandomNumberGenerator</a> (or its subclasses because RandomNumberGenerator is abstract)?</p>

<p>Nate Lawson tells us in his Google Tech Talk presentation ""<a href=""http://www.youtube.com/watch?v=ySQl0NhW1J0"">Crypto Strikes Back</a>"" at minute 13:11 not to use the ""standard"" random number generators from Python, Java and C# and to instead use the cryptographically secure version.</p>

<p>I know the difference between the two versions of random number generators (see <a href=""http://stackoverflow.com/questions/101337/what-is-the-difference-between-a-randomly-generated-number-and-secure-randomly-ge"">question 101337</a>).</p>

<p>But what rationale is there to not always use the secure random number generator? Why use System.Random at all? Performance perhaps?</p>
","2988","","<p>The most obvious reasons have already been mentioned, so here's a more obscure one: cryptographic PRNGs typically need to be continually be reseeded with ""real"" entropy. Thus, if you use a CPRNG too often, you could deplete the system's entropy pool, which (depending on the implementation of the CPRNG) will either weaken it (thus allowing an attacker to predict it) or it will block while trying to fill up its entropy pool (thus becoming an attack vector for a DoS attack).</p>

<p>Either way, your application has now become an attack vector for other, totally unrelated applications which – unlike yours – actually vitally <em>depend</em> on the cryptographic properties of the CPRNG.</p>

<p>This is an actual real world problem, BTW, that has been observed on headless servers (which naturally have rather small entropy pools because they lack entropy sources such as mouse and keyboard input) running Linux, where applications incorrectly use the <code>/dev/random</code> kernel CPRNG for all sorts of random numbers, whereas the correct behavior would be to read a small seed value from <code>/dev/urandom</code> and use that to seed their <em>own</em> PRNG.</p>
"
"<p>I've heard of ASP.NET compiled DLLs which only works on Windows Server, but I would like to know if there are any other compiled server side languages?, maybe even ones for Apache server?</p>

<p>Installation of the runtime shouldn't be a problem because I will have physical access to the Unix/Windows servers, but if it is a CGI plugin its an added benefit since I can install it using only FTP.</p>
","2988","","<p>The term ""compiled language"" doesn't make any sense. A language isn't compiled. A language isn't interpreted. A language just <em>is</em>.</p>

<p>Whether a particular implementation uses a compiler or an interpreter is a trait of the implementation and has nothing to do with the language. Indeed, <em>every</em> language can be implemented with either an interpreter or a compiler. In fact, the vast majority of modern language implementations (CPython, Perl, PHP, YARV, IronRuby, HotSpot, Mono, CLR, TraceMonkey and so on) use <em>both</em> an interpreter <em>and</em> a compiler. HotSpot for example constantly switches between compiler and interpreter depending on which is faster.</p>

<p>So, to answer your question: <em>every</em> language that can access environment variables, read text from stdin and write text to stdout can be used with CGI and thus Apache (and indeed pretty much every webserver on the planet). And <em>every</em> language can be compiled. Therefore, <em>every</em> language can be used in the way you describe.</p>
"
"<p>I'm trying to do something which is probably very simple, I have a directory structure such as:</p>

<pre><code>dir/
    subdir1/
    subdir2/
        file1
        file2
        subsubdir1/
            file3
</code></pre>

<p>I would like to run a command in a bash script that will delete all files recursively from dir on down, but leave all directories. Ie:</p>

<pre><code>dir/
    subdir1/
    subdir2/
        subsubdir1
</code></pre>

<p>What would be a suitable command for this?</p>
","2988","","<pre><code>find dir -type f -exec rm '{}' +
</code></pre>
"
"<p>I have an FAQ in HTML (<a href=""http://centmail.net/faq"" rel=""nofollow"">example</a>) in which the questions refer to each other a lot.  That means whenever we insert/delete/rearrange the questions, the numbering changes.  LaTeX solves this very elegantly with \label and \ref -- you give items simple tags and LaTeX worries about converting to numbers in the final document.</p>

<p>How do people deal with that in HTML?</p>

<p>ADDED: Note that this is no problem if you don't have to actually refer to items by number, in which case you can set a tag with </p>

<p><code>&lt;a name=""foo""&gt;</code></p>

<p>and then link to it with </p>

<p><code>&lt;a href=""#foo""&gt;some non-numerical way to refer to foo&lt;/a&gt;</code>.</p>

<p>But I'm assuming ""foo"" has some auto-generated number, say from an <code>&lt;ol&gt;</code> list, and I want to use that number to refer to and link to it.</p>
","2988","","<p>There is nothing like this in HTML.</p>

<p>The way you would normally solve this, is by having the HTML for the links generated, by either parsing the HTML itself and inserting the TOC (you can do that on the server, before you send the HTML out to the browser, or on the client, by traversing the DOM with a little piece of ECMAScript and simply collecting and inspecting all <code>&lt;a&gt;</code> elements) or generating the entire HTML document from a higher level source like a database, an XML document, markdown or – why not? – even La&#932;<sub>&Epsilon;</sub>&Chi;.</p>
"
"<p>I want to use windows apis in JRuby. Please suggest any api that can do the work of Ctypes(python). </p>
","2988","","<p>JRuby includes the FFI API which was originally created for Rubinius, but is now supported on JRuby, MacRuby, MagLev, TinyRb, MRI and YARV (the last two via the FFI gem) as well.</p>

<p>The FFI API is specifically designed to make it very easy to bind to C libraries, without having to actually write any C (all the mappings are written in a declarative Ruby DSL).</p>

<p>Daniel J. Berg, the maintainer of the win32-api gem and all the other win32 libraries is currently working on getting them to run on JRuby by porting them to FFI, but he has hit a couple of roadblocks, unfortunately.</p>
"
"<p>I've read a lot about the available .NET unit testing frameworks. What is not clear to me is what are the key features that differentiate the available frameworks. What are the must-have features that you look for when evaluating unit testing frameworks?</p>
","2988","","<p>One thing that I miss in pretty much <em>every</em> testing framework is <em>uniform assertions</em>, by which I mean that tests should look the same regardless of what I am asserting. Whether I do state-based assertions on a value, behavior-based assertions on a mock or asserting that an exception should be thrown.</p>

<p>I am going to use Ruby as an example, but this applies to any environment. (And, BTW, you are not limited to C# frameworks for testing .NET applications, you can use <em>any</em> .NET language, of which Ruby of course is one, as are Python, Scheme, F#, …)</p>

<p>This is <code>test/unit</code> (a port of an early version of JUnit) with Mocha for mocking.</p>

<pre><code>def test_state
  assert_equal 2, 1+1
end

def test_exception
  assert_raises(NoMethodError) { [].not_a_method }
end

def test_behavior
  o = Object.new
  o.expects(:ping).with(:pong)
  o.ping(:pong)
end
</code></pre>

<p>Note how all the assertions look different and are in a different place and the actual test code is in three different place as well.</p>

<p>And this is Expectations, which AFAIK is the only framework that gets it right. (Indeed, it was created specifically for the purpose of uniform assertions.) Unfortunately, it is no longer maintained or supported as the author isn't doing any Ruby work anymore.</p>

<pre><code>expect 2 do
  1+1
end

expect NoMethodError do
  [].not_a_method
end

expect Object.new.to.receive(:ping).with(:pong) do |o|
  o.ping(:pong)
end
</code></pre>

<p>Note how the assertions always look the same, and both the assertions and the test code are always in the same spot.</p>

<p>Newer frameworks, such as xUnit.Net and Mockito are definitely getting close, though.</p>
"
"<p>I've read a lot about the available .NET unit testing frameworks. What is not clear to me is what are the key features that differentiate the available frameworks. What are the must-have features that you look for when evaluating unit testing frameworks?</p>
","2988","","<p>Developer-facing unit tests (note that I am <em>not</em> talking about customer-facing acceptance tests!) are like production code: they should be written in such a way that it is obvious what they are doing. Indeed, this is even more important for tests than it is for production code, because with production code you have the tests to tell you whether the code works or not, with tests, all you have is reading them and seeing whether they make sense or not.</p>

<p>Therefore, developer-facing unit tests should not need comments. And test names <em>are</em> comments, therefore, your framework should not force you to name your tests.</p>

<p>Here is an example (in RSpec, which of course can also be used on .NET, this time):</p>

<pre><code>describe Array do
  it 'should be empty' do
    Array.new.should be_empty
  end
end
</code></pre>

<p>This is just stupid. Any developer that needs a test name to understand what this test is doing should seriously rethink his career choice. Also, all the same problems with comments apply: what if somebody changes the test but forgets to change the name? Now the name is not only useless, but also misleading! This is much better:</p>

<pre><code>describe Array do
  it do
    Array.new.should be_empty
  end
end
</code></pre>

<p>RSpec has another nifty trick up its sleeve: it will automatically create an instance of the class you are testing for you, so that you don't have to say <code>ClassUnderTest.new.should</code> again and again, you can just say <code>should</code>:</p>

<pre><code>describe Array do
  it { should be_empty }
end
</code></pre>

<p>And, BTW, just like a developer can figure out what this is testing, so can RSpec. This is what it spits out in all three cases if you ask it for a customer-readable summary of the testsuite:</p>

<pre><code>Array
 - should be empty
</code></pre>
"
"<p>As much as I love Netbeans for Ruby programming the traditional white background and drab color coding leave me with Textmate envy.</p>

<p>Is there any solution to this in the absence of buying a Mac?</p>
","2988","","<p>I use the <em>Dark Psstels</em> theme from the <em>Extra Ruby Color Themes</em> plugin. Be advised, though, that NetBeans only allows you to style the <em>editor</em>, the rest of the IDE will still look as butt-ugly as it did before. (Pardon my French.)</p>

<p>If you want to change <em>that</em>, you will have to change the entire Swing Look&amp;Feel. There are also some plugins which do that, but they are mostly for testing. (There is one which switches NetBeans to the Napkin LAF, which as the name implies makes everything look like it's scribbled on a napkin. This is very useful if you use the NetBeans Application Platform to build your <em>own</em> NetBeans-based applications (does anybody do that?), but otherwise pretty useless.)</p>

<p>Note that this isn't much of a problem if you maximize the editor and put NetBeans in fullscreen mode.</p>
"
"<p><strong>Why does /cdrom has the same inode -number than <code>/sys/devices/platform/power</code> in Ubuntu?</strong></p>

<p>The following have the same inode number in my Ubuntu</p>

<pre><code>./media/BACKUP_1/MISC
./cdrom
./sys/devices/platform/power
</code></pre>

<p>I get them by running the following at root</p>

<pre><code>find . -inum 12 2&gt; /dev/null
</code></pre>

<p><hr /></p>

<p><strong>Reply to Leffler's answer</strong></p>

<p>I run</p>

<pre><code>stat cdrom
</code></pre>

<p>I get</p>

<pre><code>  File: `cdrom' -&gt; `media/cdrom'
  Size: 11              Blocks: 0          IO Block: 4096   symbolic link
Device: 801h/2049d      Inode: 12          Links: 1
Access: (0777/lrwxrwxrwx)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2009-08-03 04:25:35.000000000 +0300
Modify: 2009-08-03 04:19:05.000000000 +0300
Change: 2009-08-03 04:19:05.000000000 +0300
</code></pre>

<p>What does this info tell you?</p>

<p><strong>Reply to Leffler's edit</strong></p>

<blockquote>
  <p>Often, you can dissect the device
  number into a major and minor device
  number which is what 'ls -l' prints
  for a device.</p>
</blockquote>

<p>This command <code>ls -l cdrom</code> gives me this</p>

<pre><code>lrwxrwxrwx 1 root root 11 2009-08-03 04:19 cdrom -&gt; media/cdrom
</code></pre>

<p><strong>How can you see the major and minor device number from this?</strong></p>
","2988","","<p>An inode uniquely identifies a file on a filesystem. In your example, you are looking at three <em>different</em> filesystems: <code>/</code>, <code>/media/BACKUP_1</code> (presumably an external VFAT32 drive or stick) and <code>/sys</code>.</p>

<p>These are three different filesystems; it is perfectly normal for the same inode number to be used on different filesystems. If inode numbers had to be unique across <em>all</em> filesystems, that would be a pretty harsh requirement, for several reasons:</p>

<ul>
<li>there could only be 2<sup><code>sizeof(inode_t)</code> &times; BITS_PER_BYTE</sup> files in the entire world and </li>
<li>every computer on the entire planet would need to be connected to every other computer all the time so that they don't accidentally hand out the same number twice.</li>
</ul>

<p>Just imagine this: you create a file on your external device. Then you detach it and attach it to a different computer, which also creates a file. How would computer A know which inode numbers are already used by computer B?</p>

<p>Also, in your case there is a different peculiarity: <code>/sys</code> is not a ""real"" filesystem, it is a virtual filesystem. It only exposes internal kernel datastructures as files and directories. And it doesn't even do this all the time, it only does this when you actually look at it – then, and only then do the files magically spring into existence. Therefore, its inode numbers are synthesized and don't really have any use at all – indeed, IIRC some virtual filesystems just set the inode number to <code>0</code> for <em>every</em> file, or at least they tried to until they realized that this broke all sorts of tools.</p>

<p>In addition to that, <code>/media/BACKUP_1</code> is presumably a VFAT32 filesystem, which is a DOS filesystem. Inodes are a Unix concept, so VFAT32 doesn't even <em>have</em> inodes, and again they are synthesized.</p>

<p>Indeed, many modern Unix filesystems don't have inodes either, they store files in B<sup>+</sup> trees or some other highly optimized data structure and address them implicitly through their position in the tree. I know that the Reiser4 filesystem had some trouble because in some cases they didn't synthesize inode numbers at all or synthesized very big inode numbers that again broke some tools. (Some stupid implementations of tools which needed to do things similar to <code>find -inode</code> simply built an array from 0 to the highest inode number they could find, which would then consume all available memory on the machine if they were presented with an extremely large inode number.)</p>
"
"<p>I have been programming in object-oriented languages for years now but secretly I look at some of the things my colleagues do with envy.  A lot of them seem to have some inner OO instinct that I don't have - no matter how hard I try.  I've read all the good books on OO but still can't seem to crack it.  I feel like the guy who gave 110% to be a professional footballer but just didn't have the natural talent to make it.  I'm at a loss and thinking of switching careers - what should do I?</p>
","2988","","<p>Try some programming in <a href=""http://SelfLanguage.Org/"" rel=""nofollow"">Self</a>, one of the most pure OO languages around. So pure, in fact, that it doesn't even have classes, only objects. It also doesn't have variables, fields, statics, attributes, only methods. Also interesting is the fact that every object in the system is also an object on the screen and vice-versa.</p>

<p>Some of the interesting papers on Self are <a href=""http://SelfLanguage.Org/%5Fstatic/tutorial/Tutorial/"" rel=""nofollow""><em>Prototype-Based Application Construction Using SELF 4.0</em></a> (the Self tutorial), <a href=""http://SelfLanguage.Org/documentation/published/self-power.html"" rel=""nofollow""><em>Self: The Power of Simplicity</em></a> and <a href=""http://SelfLanguage.Org/documentation/published/organizing-programs.html"" rel=""nofollow""><em>Organizing Programs Without Classes</em></a>. Also, <a href=""http://Video.Google.Com/videoplay?docid=5776880551404953752"" rel=""nofollow""><em>Self: The Video (Randall B. Smith; Dave Ungar)</em></a> is terrific, having two of the language's designers explain Self's ideas.</p>

<p>This works for pretty much any concept, actually, at least for me: find the language which most purely embodies the concept you want to learn about and just use it.</p>
"
"<p>Over the years I seen many people use the word ""generics"", I honestly have not a clue what it means, whatever it is I most likely use it but just don't know that it was called that. :p</p>
","2988","","<p>Generics are just Java's Implementation of Parametric Polymorphism. They work just like Parametric Polymorphism in any other language.</p>
"
"<p>By ""concurrency"" I mean lightweight processes like Erlang's actors and concurrent GC aimed to make such a processes work smoothly.</p>

<p>It would be very cool if INRIA got rid of those drawbacks of the current OCaml implementation to make OCaml more prepared for the multicore future.</p>

<p>P.S. F# isn't what I'm looking for.</p>
","2988","","<p>There is <a href=""http://JoCaml.INRIA.Fr/"" rel=""nofollow"">J&amp;oCaml</a>, which is …</p>

<blockquote>
  <p><a href=""http://Caml.INRIA.Fr/ocaml/"" rel=""nofollow"">Objective Caml</a> plus (&amp;) the <a href=""http://Moscova.INRIA.Fr/join/"" rel=""nofollow"">join calculus</a>, that is, OCaml extended for concurrent and distributed programming.</p>
</blockquote>
"
"<p>Sometimes, I work on projects for a week or so and then get side tracked for a few months doing something else. It's sometimes a pain to go back to the code and figuring out what I was last working on.</p>

<p>Any suggestions on how to document unfinished projects that are going to get sidelined for a few months?</p>

<p>For the most part, I do, php and C with some python.</p>

<p>I use Eclipse with subclipse and Trac plugins and Geany as my main IDEs </p>
","2988","","<p>Use some kind of a simple issue racker. There are a couple of issue trackers that don't really need any sophisticated installation and most importantly don't need a server. They work by keeping the issue ""database"" inside your version control system. (This is basically a more tool-based version of the <a href=""http://StackOverflow.Com/questions/1313832/1313926#1313926"">TODO suggestion</a> by @jmucchiello ).</p>

<p>Here's some examples:</p>

<ul>
<li><a href=""http://BugsEverywhere.Org/"" rel=""nofollow"">Bugs Everywhere!</a></li>
<li><a href=""http://DisTract.WellQuite.Org/"" rel=""nofollow"">DisTract</a></li>
<li><a href=""http://DITrack.Org/"" rel=""nofollow"">DITrack</a></li>
<li><a href=""http://Ditz.RubyForge.Org/"" rel=""nofollow"">Ditz</a></li>
<li><a href=""https://GitHub.Com/SChacon/TicGit/"" rel=""nofollow"">TicGit</a></li>
</ul>

<p><a href=""http://Dist-Bugs.KiteNet.Net/"" rel=""nofollow"">Dist-Bugs</a> is a website which is devoted to discussing these kinds of ""distributed bug trackers"".</p>

<p><a href=""http://Fossil-SCM.Org/"" rel=""nofollow"">Fossil</a> is a distributed version control system, which also includes a bug tracker and a Wiki. (Note: the Fossil website itself is completely running off Fossil.)</p>

<p><a href=""http://IkiWiki.Info/"" rel=""nofollow"">ikiwiki</a> is a ""Wiki compiler"", which generates Wikis out of static text files in a version control system. It can also be used as a lightweight bug tracker, in fact, the <a href=""http://IkiWiki.Info/bugs/"" rel=""nofollow"">ikiwiki bug tracker</a> itself runs ikiwiki (as does the ikiwike website and also the dist-bugs website).</p>
"
"<p>I can't find many docs on this. How do I package a gem such that the C extension is compiled when the gem is installed?</p>

<p>In particular I want to do this:</p>

<ul>
<li><p>on Linux and MacOSX i would like compile the C extension on gem install</p></li>
<li><p>on Windows I would like to simply install a precompiled .so</p></li>
</ul>

<p>any help on this, in particular example source, would be very useful :)</p>
","2988","","<p><a href=""http://Blog.MMediaSys.Com/"" rel=""nofollow"">Luis Lavena</a> has created <a href=""http://Rake-Compiler.RubyForge.Org/"" rel=""nofollow""><code>rake-compiler</code></a> just for this purpose.</p>

<ul>
<li><a href=""http://Rake-Compiler.RubyForge.Org/"" rel=""nofollow"">Homepage</a></li>
<li><a href=""http://RubyForge.Org/projects/rake-compiler/"" rel=""nofollow"">Project Page</a></li>
<li><a href=""https://GitHub.Com/LuisLavena/Rake-Compiler/"" rel=""nofollow"">GitHub project</a></li>
<li><a href=""https://Wiki.GitHub.Com/LuisLavena/Rake-Compiler/"" rel=""nofollow"">GitHub Wiki</a></li>
</ul>

<p>However, are you sure that you need a C extension? The thing about C extensions is that every Ruby implementation has their own C extension API (and non-C based ones like XRuby, JRuby, Ruby.NET, IronRuby, HotRuby, MagLev, Red Sun don't have one at all), which means that your C extension will only work on <em>one</em> implementation. And, since MRI <em>only</em> implements Ruby 1.8 and YARV <em>only</em> implements Ruby 1.9, and we are currently in a transition phase between 1.8 and 1.9, chances are that a lot of people will use at least two different implementations. (I personally use 5: MRI, YARV, JRuby, IronRuby and Rubinius.)</p>

<p>Maybe you are better off using <a href=""https://Wiki.GitHub.Com/FFI/FFI/"" rel=""nofollow"">Ruby-FFI</a>. Ruby-FFI is an FFI (Foreign Function Interface) for Ruby (<em>duh</em>), which allows you to bind to and map C libraries in pure Ruby in a manner that is portable across Ruby implementations. The FFI API was first developed by <a href=""http://Blog.FallingSnow.Net/"" rel=""nofollow"">Evan Phoenix</a> as the native extension API for <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a>, it was then adopted by <a href=""http://Blog.Headius.Com/"" rel=""nofollow"">Charles Oliver Nutter</a> (and implemented by <a href=""http://WMeissner.BlogSpot.Com/"" rel=""nofollow"">Wayne Meissner</a>) for <a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a>. <a href=""http://WMeissner.BlogSpot.Com/"" rel=""nofollow"">Wayne</a> then also wrote the <a href=""https://Wiki.GitHub.Com/FFI/FFI/"" rel=""nofollow"">Ruby-FFI gem</a>, which contains C extensions for MRI and YARV. <a href=""http://MacRuby.Org/blog/"" rel=""nofollow"">Laurent Sansonetti</a> implemented Ruby-FFI for <a href=""http://MacRuby.Org/"" rel=""nofollow"">MacRuby</a>, <a href=""http://MACournoyer.Com/"" rel=""nofollow"">Marc-André Cournoyer</a>'s <a href=""http://Code.MACournoyer.Com/tinyrb/"" rel=""nofollow"">tinyrb</a> also <a href=""https://GitHub.Com/WMeissner/TinyRb/"" rel=""nofollow"">supports FFI</a> (again written by <a href=""http://WMeissner.BlogSpot.Com/"" rel=""nofollow"">Wayne Meissner</a>) and the <a href=""http://MagLev.GemStone.Com/"" rel=""nofollow"">MagLev</a> developers are also working on it. Which means that if you can make your library work with FFI as opposed to a C extension, you will automatically support 6 Ruby implementations instead of just one.</p>

<p>The only reason to use a C extension as opposed to an FFI extension would be, if you really <em>do</em> want some implementation specific behavior. One example of this would be the <a href=""http://ParseTree.RubyForge.Org/"" rel=""nofollow"">ParseTree</a> gem, which reaches deep into the intestines of MRI and rips out the in-memory representation of the parse tree.</p>

<p>Last but not least, take a look at the <a href=""https://github.com/jacius/nice-ffi/"" rel=""nofollow"">Nice-FFI</a> project by <a href=""http://Blog.Jacius.Info/"" rel=""nofollow"">John Croisant</a>, which aims to make using <a href=""https://Wiki.GitHub.Com/FFI/FFI/"" rel=""nofollow"">Ruby-FFI</a> even nicer.</p>
"
"<p>I have two ruby files. The first is</p>

<pre><code>require 'www/poster'

poster = Poster.new()
</code></pre>

<p>The second ('www/poster.rb') is</p>

<pre><code>require ...

class Poster ... end
</code></pre>

<p>The problem is, when I run the first file, I get an error: </p>

<pre><code>in `&lt;main&gt;': uninitialized constant Poster (NameError)
</code></pre>

<p><strong>But</strong> if I replace the original code with just </p>

<pre><code>require ...
class Poster

end

__END__
class Poster #original class here
</code></pre>

<p>it's ok. The code worked fine in Ruby 1.8.6, problems started after upgrading to 1.9.1p129 (2009-05-12 revision 23412) [i386-mswin32]. Is there any workaround?</p>
","2988","","<p>There is absolutely nothing whatsoever in your code that would cause it to behave differently in Ruby 1.9 than in Ruby 1.8. And indeed, when I copy &amp; paste the code you posted into two files, they work exactly like the are supposed to, in all of the following configurations:</p>

<ul>
<li>MRI Ruby 1.8.6 (2009-03-31 patchlevel 368) [i386-mingw32]</li>
<li>YARV Ruby 1.9.1p129 (2009-05-12 revision 23412) [i386-mingw32]</li>
<li>JRuby 1.4.0dev (ruby 1.8.7p174) (2009-08-24 6586) (Java HotSpot(TM) Client VM 1.6.0_14-ea) [x86-java]</li>
<li>JRuby 1.4.0dev (ruby 1.9.1p0) (2009-08-24 6586) (Java HotSpot(TM) Client VM 1.6.0_14-ea) [x86-java]</li>
</ul>
"
"<p>I'm trying to read unsigned integers from a file (stored as consecutive byte) and convert them to Integers. I've tried this:</p>

<pre><code>file = File.new(filename,""r"")
num = file.read(2).unpack(""S"") #read an unsigned short
puts num #value  will be less than expected
</code></pre>

<p>What am I doing wrong here?</p>
","2988","","<p>There are a couple of libraries that help with parsing binary data in Ruby, by letting you declare the data format in a simple high-level declarative DSL and then figure out all the packing, unpacking, bit-twiddling, shifting and endian-conversions by themselves.</p>

<p>I have never used one of these, but here's two examples. (There are more, but I don't know them):</p>

<ul>
<li><a href=""http://RedShift.SourceForge.Net/bit-struct/"" rel=""nofollow"">BitStruct</a></li>
<li><a href=""http://BinData.RubyForge.Org/"" rel=""nofollow"">BinData</a></li>
</ul>
"
"<p>I seem to use bland words such as <em>node</em>, <em>property</em>, <em>children</em> (etc) too often, and I fear that someone else would have difficulty understanding my code simply because the parts' names are vague, common words.</p>

<p><strong>How do you find creative names for classes and components to make them more memorable?</strong></p>

<p>I am particularly having trouble with generic tools which have no real description except their rather generic functional purpose. I would like to know if others have found creative ways to name things rather than simply naming them by their utility, such as <code>AnonymousFunctionWrapperCallerExecutorFactory</code>.</p>
","2988","","<p>I don't really have an answer, but three things for you to think about.</p>

<ol>
<li>The late Phil Karlton famously said: ""There are only two hard problems in computer science. Cache Invalidation and Naming Things."" So, the fact that you are having trouble coming up with good names is entirely normal and even expected.</li>
<li>OTOH, having trouble naming things can also be a sign of bad design. (And yes, I am perfectly aware, that #1 and #2 contradict each other. Or maybe one should think of it more like balancing each other.) E.g., if a thing has too many responsibilities, it is pretty much impossible to come up with a good name. (Witness all the ""Service"", ""Util"", ""Model"" and ""Manager"" classes in bad OO designs. Here's an example Google Code Search for <a href=""http://Google.Com/codesearch?q=ManagerFactoryFactory"" rel=""nofollow"">""ManagerFactoryFactory""</a>.)</li>
<li>Also, your names should map to the domain jargon used by subject matter experts. If you can't find a subject matter expert, that's a sign that you are currently worrying about code that you're not supposed to worry about. (Basically, code that implements your core business domain should be implemented and designed well, code in ancillary domains should be implemented and designed so-so, and all other code should not be implemented or designed at all, but bought from a vendor, where what you are buying is <em>their</em> core business domain. [Please interpret ""buy"" and ""vendor"" liberally. Community-developed Free Software is just fine.])</li>
</ol>

<p>Regarding #3 above, you mentioned in another comment that you are currently working on implementing a tree data structure. Unless your company is in the business of selling tree data structures, that is not a part of your core domain. And the reason that you have trouble finding good names could be that you are working outside your core domain. Now, ""selling tree data structures"" may sound stupid, but there <em>are</em> actually companies that do that. For example, the BCL team inside Microsoft's developer division: they actually sell (well, for certain definitions of ""sell"", anyway) the .NET framework's Base Class Libraries, which include, among others, tree data structures. But note that for example Microsoft's C++ compiler team actually (literally) buys <em>their</em> STL from a third-party vendor – they figure that their core domain is writing compilers, and they leave the writing of libraries to a company who considers writing STLs <em>their</em> core domain. (And indeed, AFAIK, that company does <em>nothing but</em> write and sell STL implementations. That's their sole product.)</p>

<p>If, however, selling tree data structures <em>is</em> your core domain, then the names you listed are just fine. They are the names that subject matter experts (programmers, in this case) use when talking about the domain of tree data structures.</p>
"
"<p>What are most common <strong>Ruby on Rails antipatterns</strong> and how to avoid them?</p>
","2988","","<p>Not learning Ruby.</p>
"
"<p>According to <a href=""http://blog.headius.com/2009/08/introducing-surinx.html"">Charles Nutter</a>, <strong>Duby</strong> is</p>

<blockquote>
  <p>a static-typed language with Ruby's
  syntax and Java's type system. Duby
  supports all Ruby's literals, uses
  local type inference (only argument
  types <em>must</em> be declared), and runs as
  fast as Java (because it produces
  nearly identical bytecode). But with
  the advent of invokedynamic, Duby
  needed a playmate.</p>
</blockquote>

<p><strong>1. What's invokedynamic and why does Duby ""need a playmate""?</strong></p>

<p><strong>Juby</strong>, on the other hand, is</p>

<blockquote>
  <p>intended to be basically like Duby, in
  that it uses Java's types and Ruby's
  syntax. But it takes advantage of the
  new invokedynamic opcode to be 100%
  dynamic. Juby is a dynamic Duby, or
  perhaps a dynamic Java with Ruby
  syntax. It's not hard to comprehend.</p>
</blockquote>

<p>Actually it is hard to comprehend.</p>

<p><strong>2. Could someone elaborate a little bit more on what this distinction is about?</strong></p>

<p><strong>3. Why do we need (<em>need!</em>) another Ruby-related language?</strong> Or, rather, two more Ruby-related languages?</p>
","2988","","<p>I'm going to answer the questions out of order, starting with the simplest one:</p>

<blockquote>
  <p>2. Could someone elaborate a little bit more on what this distinction is about?</p>
</blockquote>

<p><a href=""http://Duby.Kenai.Com/"">Duby</a> is statically typed, <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a> (which is the final name for what was for a short amount of time called <a href=""https://GitHub.Com/Headius/Surinx/"">Juby</a>) is dynamically typed. That's already all there is to it.</p>

<p>Actually, there is one small detail as a consequence of this: <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a> syntax is a strict subset of <a href=""http://Ruby-Lang.Org/"">Ruby</a> syntax, i.e. every syntactically valid <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a> program is also a syntactically valid <a href=""http://Ruby-Lang.Org/"">Ruby</a> program. <a href=""http://Duby.Kenai.Com/"">Duby</a> OTOH is <em>almost</em> a syntactic subset, except for its mandatory method parameter type annotations:</p>

<pre><code>def foo(bar =&gt; Integer, baz =&gt; String) =&gt; Array
  # ...
end
</code></pre>

<p>That's illegal in <a href=""http://Ruby-Lang.Org/"">Ruby</a>.</p>

<blockquote>
  <p>3. Why do we need (need!) another <a href=""http://Ruby-Lang.Org/"">Ruby</a>-related language?</p>
</blockquote>

<p>First off: other than syntactic similarity, these languages are in no way, shape or form related to <a href=""http://Ruby-Lang.Org/"">Ruby</a>.</p>

<p>So, why did <a href=""http://Blog.Headius.Com/"">Charles Oliver Nutter</a> create <a href=""http://Duby.Kenai.Com/"">Duby</a>? He is the lead developer of the <a href=""http://JRuby.Org/"">JRuby</a> <a href=""http://Ruby-Lang.Org/"">Ruby</a> implementation, which is an implementation of the <a href=""http://Ruby-Lang.Org/"">Ruby programming language</a> for the JVM. Like most <a href=""http://Ruby-Lang.Org/"">Ruby</a> implementations, it is written in the dominant programming language of the underlying platform: <a href=""https://GitHub.Com/RubySpec/MatzRuby/tree/ruby%5F1%5F8/"">MRI</a>, <a href=""https://GitHub.Com/RubySpec/MatzRuby/tree/trunk/"">YARV</a> and <a href=""http://Code.MACournoyer.Com/tinyrb/"">tinyrb</a> are implemented 100% in C, <a href=""http://MacRuby.Org/"">MacRuby</a> mostly in C with a bit of Objective-C, <a href=""http://RubyDotNetCompiler.GoogleCode.Com/"">Ruby.NET</a> and <a href=""http://IronRuby.Net/"">IronRuby</a> 100% in C#, <a href=""http://HotRuby.Accelart.Jp/"">HotRuby</a> in <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm"">ECMAScript</a>, <a href=""https://GitHub.Com/JonathanBranam/RedSun/"">Red Sun</a> in ActionScript, <a href=""https://GitHub.Com/Cardinal/Cardinal/"">Cardinal</a> in PIR and NQP and so on. (The only <a href=""http://Ruby-Lang.Org/"">Ruby</a> implementations that contain a significant amount of <a href=""http://Ruby-Lang.Org/"">Ruby</a> code are <a href=""http://Rubini.us/"">Rubinius</a> (about 70% <a href=""http://Ruby-Lang.Org/"">Ruby</a>, 30% C++) and <a href=""http://MagLev.GemStone.Com/"">MagLev</a> (unknown amounts of <a href=""http://Ruby-Lang.Org/"">Ruby</a> and <a href=""http://Smalltalk.Org/"">Smalltalk</a>).) And naturally, <a href=""http://XRuby.Com/"">XRuby</a> and <a href=""http://JRuby.Org/"">JRuby</a> are implemented 100% in Java.</p>

<p>Now, the funny thing is, <a href=""http://Blog.Headius.Com/"">Charlie</a> came to <a href=""http://Ruby-Lang.Org/"">Ruby</a>, because he didn't like his day job, doing Java development. And now, he <em>still</em> writes Java code all day long! Of course, he doesn't like that, and so he was looking for another programming language in which to implement the core of <a href=""http://JRuby.Org/"">JRuby</a>. One option would certainly be to just write it all in <a href=""http://Ruby-Lang.Org/"">Ruby</a>, but with <a href=""http://C2.Com/cgi/wiki/?MetaCircularEvaluator"">metacircular implementations</a> there usually comes a point of diminishing returns, where the implementations degenerates into academic masturbation. It would certainly make sense to rewrite the libraries, the ahead-of-time compiler (actually, <a href=""https://GitHub.Com/JRuby/JRuby/blob/master/tool/compiler2.rb"">that's already being done</a>) and some of the core classes in <a href=""http://Ruby-Lang.Org/"">Ruby</a>, but some parts of the engine core are better written in something closer to the execution model of the JVM itself.</p>

<p><a href=""http://Blog.Headius.Com/"">Charlie</a> was looking at the available options: <a href=""http://Scala-Lang.Org/"">Scala</a>, <a href=""http://Groovy.CodeHaus.Org/"">Groovy</a>, <a href=""http://FanDev.Org/"">Fan</a>, <a href=""http://Clojure.Org/"">Clojure</a>, <a href=""http://Nice.SourceForge.Net/"">Nice</a>, but all of them had a significant disadvantage: a fairly large language runtime. The size of the <a href=""http://JRuby.Org/"">JRuby</a> runtime is already a big problem in terms of memory consumption and startup latency (especially compared to <a href=""https://GitHub.Com/RubySpec/MatzRuby/tree/ruby%5F1%5F8/"">MRI</a> or <a href=""https://GitHub.Com/RubySpec/MatzRuby/tree/trunk/"">YARV</a> and even more so if you actually include the JVM itself in your measurements), and rewriting it in a language that adds its <em>own</em> runtime to that weight is simply a no-go. Unfortunately, there was no programming language which satisfied the two basic criteria <a href=""http://Blog.Headius.Com/"">Charlie</a> was looking for: no runtime and compiles to JVM bytecode that is at least as efficient as the equivalent Java.</p>

<p>So, he decided to create his own. The reason why he chose to use a syntax similar to <a href=""http://Ruby-Lang.Org/"">Ruby</a>, is actually quite simple: he didn't need to write a parser for it, <a href=""http://Duby.Kenai.Com/"">Duby</a> just uses <a href=""http://JRuby.Org/"">JRuby</a>'s already existing parser with one minor modification to support method parameter type annotations. (Actually, he also likes <a href=""http://Ruby-Lang.Org/"">Ruby</a>'s syntax, that was of course also a factor.)</p>

<p>As you know the syntax is actually the least important part of a programming language. (Its irrelevance isn't always <em>obvious</em> from the <a href=""http://Google.Com/search?q=Python+indentation+sucks"">amount of arguing about it</a>, but that's just because syntax is the only thing you can argue about without having to actually understand what you are talking about.) Much more important than the syntax is the type system and the evaluation semantics. And here comes the trick: <a href=""http://Duby.Kenai.Com/"">Duby</a> doesn't have either! It <em>only</em> has syntax! It's like a parasite: it simply ""borrows"" the type system and semantics from its underlying platform. That means that on the JVM, <a href=""http://Duby.Kenai.Com/"">Duby</a>'s type system <em>is</em> the Java type system, and <a href=""http://Duby.Kenai.Com/"">Duby</a>'s semantics <em>are</em> Java's semantics. To put it another way: <a href=""http://Duby.Kenai.Com/"">Duby</a> isn't a programming language <em>at all</em>, rather it is ""just"" an alternative syntax for Java.</p>

<p>That means that there is no mapping, no conversion overhead and no speed difference between <a href=""http://Duby.Kenai.Com/"">Duby</a> and Java. And that means that the internals of <a href=""http://JRuby.Org/"">JRuby</a> could be written in <a href=""http://Duby.Kenai.Com/"">Duby</a>, without losing any features.</p>

<p>So, that's <a href=""http://Duby.Kenai.Com/"">Duby</a>.</p>

<p>In order to explain <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a>, I'll first answer your first question:</p>

<blockquote>
  <p>1. What's <a href=""http://JCP.Org/en/jsr/detail?id=292"">invokedynamic</a> and why does <a href=""http://Duby.Kenai.Com/"">Duby</a> ""need a playmate""?</p>
</blockquote>

<p><a href=""http://JCP.Org/en/jsr/detail?id=292""><code>invokedynamic</code></a> is specifically a new bytecode that is going to be added to the 3rd edition of the JVM specification and that is going to be released in JDK7. However, more generally <a href=""http://JCP.Org/en/jsr/detail?id=292""><code>invokedynamic</code></a> is usually used as a stand-in to refer to a whole bunch of features, of which the <em>actual</em> <a href=""http://JCP.Org/en/jsr/detail?id=292""><code>invokedynamic</code> bytecode</a> is only one, that are currently being developed under the umbrella of <a href=""http://JCP.Org/en/jsr/detail?id=292"">JSR-292 ""Supporting Dynamically Typed Languages on the Java Platform""</a>. And even more generally, the name <a href=""http://JCP.Org/en/jsr/detail?id=292""><code>invokedynamic</code></a> is used as a moniker for the general change of strategy both in Sun and in the JCP as a whole to turn the Java platform into a general purpose language platform for all sorts of languages.</p>

<p>The specific purpose of <a href=""http://JCP.Org/en/jsr/detail?id=292"">JSR-292</a> (which is what <a href=""http://Blog.Headius.Com/"">Charlie</a> alludes to in his blog post), is to make dynamic method dispatch faster – indeed, almost as fast as <em>static</em> dispatch in Java, at least in the best case.</p>

<p><a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a> is a dynamically typed programming language which basically does the same thing as <a href=""http://Duby.Kenai.Com/"">Duby</a>: like <a href=""http://Duby.Kenai.Com/"">Duby</a>, it <em>also</em> has <em>only</em> syntax, like <a href=""http://Duby.Kenai.Com/"">Duby</a>, it <em>also</em> used the Java type system. But <em>unlike</em> <a href=""http://Duby.Kenai.Com/"">Duby</a>, it does <em>not</em> use <em>Java's</em> method invocation semantics, instead it uses <a href=""http://JCP.Org/en/jsr/detail?id=292""><em><code>invokedynamic</code>s</em></a> method invocation semantics. IOW: it is dynamically typed and uses dynamic dispatch.</p>

<p>So, that's <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a>.</p>

<p>Now, I can answer the second half of your third question:</p>

<blockquote>
  <p>3. Why do we need (need!) […] two more Ruby-related languages?</p>
</blockquote>

<p>I already answered for <a href=""http://Duby.Kenai.Com/"">Duby</a>, here's the answer for <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a>: it's what <a href=""http://Groovy.CodeHaus.Org/"">Groovy</a> <em>should</em> have been – a lightweight (actually, <em>zero</em>-weight) dynamic expressive scripting language for the JVM. Also, it is currently the simplest way to play around with the inner workings of <a href=""http://JCP.Org/en/jsr/detail?id=292""><code>invokedynamic</code></a>. (The current development snapshots of <a href=""http://JRuby.Headius.Com%3A8080/hudson/job/jruby-dist/"">JRuby 1.4</a> also support it, but that's a much more complex project.)</p>

<p><hr /></p>

<p>Two things I left out: <a href=""http://Duby.Kenai.Com/"">Duby</a> actually uses local variable type inference, so, unlike Java, you only have to declare the types of method parameters, but everything <em>inside</em> a method will be type-inferred.</p>

<p>And secondly, both <a href=""http://Duby.Kenai.Com/"">Duby</a> and <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a> are not actually tied to the JVM. Since they just steal their semantics and type systems from the underlying platform, they can be ported almost anywhere, where you have a rough mapping from <a href=""http://Ruby-Lang.Org/"">Ruby</a> syntax to platform concepts. Off the top of my head, I could imagine ports of <a href=""http://Duby.Kenai.Com/"">Duby</a> to C, C++, Objective-C (iPhone, anyone?), <a href=""http://DigitalMars.Com/d/"">D</a>, <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-335.html"">CLI</a> and ActionScript and ports of <a href=""https://GitHub.Com/Headius/Surinx/"">Surinx</a> to the <a href=""http://CodePlex.Com/DLR/"">DLR</a>, <a href=""http://Smalltalk.Org/"">Smalltalk</a>, <a href=""http://ParrotCode.Org/"">Parrot</a>, <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm"">ECMAScript</a>, <a href=""http://Python.Org/"">Python</a>, <a href=""http://Perl.Com/"">Perl</a>, <a href=""http://PHP.Net/"">PHP</a> and Objectice-C. In fact, there are already the beginnings of a <a href=""http://Kenai.Com/projects/duby/sources/mercurial/content/lib/duby/c/compiler.rb"">C port of Duby</a>.</p>
"
"<p>Basically i would like to know which platform is currently used to develop mobile applications i.e. J2ME etc etc...
Also any new ideas on mobile applications would be quite helpful.</p>
","2988","","<p>There is a framework called <a href=""https://GitHub.Com/Rhomobile/Rhodes/"" rel=""nofollow"">Rhodes</a> by <a href=""http://Rhomobile.Com/"" rel=""nofollow"">Rhomobile</a> that allows development of native applications for all major smartphones. See <a href=""http://StackOverflow.Com/questions/698829/699133/#699133"">my answer</a> to a similar question earlier this year.</p>
"
"<p>The only way I know is:</p>

<pre><code>find /home -xdev -samefile file1
</code></pre>

<p>But it's really slow. I would like to find a tool like <code>locate</code>.
The real problems comes when you have a lot of file, I suppose the operation is O(n).</p>
","2988","","<p>There is no mapping from <code>inode</code> to name. The only way is to walk the entire filesystem, which as you pointed out is O(number of files). (Actually, I think it's &theta;(number of files)).</p>
"
"<p>I have a script with a factory method that I would like to return a different implementation of some class depending on whether or not the script is running from JRuby or Ruby. Anyone have any ideas on how I could tell the difference from inside my script? </p>

<p>Some initial thoughts I had were:</p>

<ul>
<li><p>Attempt to 'include Java' and rescue back to the Ruby implementation if it fails. This method doesn't work. Ruby's smart enough to error out regardless of my begin/rescue/end.</p></li>
<li><p>Do something goofy with process IDs. I'd rather avoid this, since it always feels like a hack.</p></li>
</ul>
","2988","","<p>I don't quite understand your question. You seem to be mixing two completely different abstraction levels: Ruby is a programming language, JRuby is a compiler for the Ruby programming language. The question whether your program is running in Ruby or in JRuby just plain doesn't make sense: when it's running in JRuby, it <em>is</em> running in Ruby, because JRuby is an implementation of Ruby.</p>

<p>It's the same as asking ""how can I tell if I'm driving in a Ford vs. a car?""</p>

<p>If you want to know in what Ruby implementation you're running, then you can check the global <code>RUBY_ENGINE</code> constant. It is supposed to universally and uniquely identify the engine you are running on, although it unfortunately fails for three reasons:</p>

<ol>
<li>on some engines, it <em>doesn't</em> tell you what engine it is running on, for example on YARV I would expect <code>RUBY_ENGINE</code> to be <code>'yarv'</code>, but it is actually <code>'ruby'</code>. So, it fails at the ""identify"" part.</li>
<li>even worse: on MRI, it is <em>also</em> <code>'ruby'</code>, which means that not only does it not tell you what engine you are running on, but there also totally <em>different</em> engines that return the <em>same</em> value. IOW, it also fails at the ""unique"" part.</li>
<li>and last but not least, <code>RUBY_ENGINE</code> is fairly new, so it is not yet supported by all engines, which means it fails at the ""universal"" part.</li>
</ol>

<p>Still, for your purposes something like</p>

<pre><code>if defined? RUBY_ENGINE &amp;&amp; RUBY_ENGINE == 'jruby'
</code></pre>

<p>should work fine.</p>
"
"<p>Can anyone recommend a good gem or library for managing a mailing list with Ruby?  No Rails solutions, if possible, please (I don't want to have ActionWhatever dependencies, this will most likely be done with Ramaze).</p>

<p>I just need basic features, like management of the list itself (CRUD operations on the user list), plus being able to send notifications, welcome messages, and also auto respond to basic things like subscribe and unsubscribe.</p>

<p>Optimally, people should be able to subscribe via both a Ramaze web page (i.e. I'd have Ramaze call/access the lib's API), as well as by sending an email to a specific email address.  But I am willing to forego the operations by email.</p>

<p>I'm willing to entertain non-Ruby, or non-programmatic solutions, if they are good, but the ability to subscribe from a web page [under my control] is a must.</p>

<p>EDIT: Sorry, one important detail I forgot to add: This is intended to be a one-way mailing list.  That is, people should be able to subscribe and unsubscribe alright, but only one person should be allowed to send to the list for broadcasting.</p>
","2988","","<p>I'm not exactly sure about your requirements. If you only need basic features, why do you care what language it is implemented in? You would only need to know this if you need advanced features that you have to implement yourself!</p>

<p>Given your requirements, pretty much <em>any</em> mailing list server will fit the bill.</p>

<p>However, there is a specific suggestion I would like to make, just because I think it is an extremely cool example of a refreshing take on e-mail applications: <a href=""http://LamsonProject.Org/"" rel=""nofollow"">Lamson</a>.</p>

<p>Lamson is <em>not</em> a mailing list server, rather it is an e-mail application development framework (similar to how Rails is a web application development framework). Lamson is not written in Ruby, but in Python, but it is quite simply the best thing that has happened to e-mail since, well, <em>ever</em>. It was written by <a href=""http://ZedShaw.Com/"" rel=""nofollow"">Zed Shaw</a> (of <a href=""http://Mongrel.RubyForge.Org/"" rel=""nofollow"">Mongrel</a> fame), and is based on the premise that just like Rails proved that web development doesn't have to be a PITA, e-mail development doesn't have to be, either. (In that way it is similar to <a href=""http://Adhearsion.Com/"" rel=""nofollow"">Adhearsion</a>, which also took the ideas of Rails and applied to a totally different domain, in this case telephony.)</p>

<p>There is already a mailing list service based on Lamson, called <a href=""http://LibreList.Com/"" rel=""nofollow"">Libre List</a>, which (naturally) hosts the Lamson mailing lists, among others. <a href=""http://Bazaar.LaunchPad.Net/~zedshaw/lamson/development/files/head%3A/examples/librelist/"" rel=""nofollow"">The source code to Libre List</a> is included in the Lamson source distribution as an example.</p>
"
"<p>In Perl, there is an ability to break an outer cycle like this:</p>

<pre><code>AAA: for my $stuff (@otherstuff) {
         for my $foo (@bar) {
             last AAA if (somethingbad());
         }
      }
</code></pre>

<p>(syntax may be wrong), which uses a loop label to break the outer loop from inside the inner loop. Is there anything similar in Ruby?</p>
","2988","","<p>What you want is non-local control-flow, which Ruby has several options for doing:</p>

<ul>
<li>Continuations, </li>
<li>Exceptions, and</li>
<li><code>throw</code>/<code>catch</code></li>
</ul>

<p><strong>Continuations</strong></p>

<p>Pros:</p>

<ul>
<li>Continuations are the standard mechanism for non-local control-flow. In fact, you can build <em>any</em> non-local control-flow (subroutines, procedures, functions, methods, coroutines, state machines, generators, conditions, exceptions) on top of them: they are pretty much the nicer twin of <code>GOTO</code>.</li>
</ul>

<p>Cons:</p>

<ul>
<li>Continuations are not a mandatory part of the Ruby Language Specification, which means that some implementations (XRuby, JRuby, Ruby.NET, IronRuby) don't implement them. So, you can't rely on them.</li>
</ul>

<p><strong>Exceptions</strong></p>

<p>Pros:</p>

<ul>
<li>There is a paper that proves mathematically that Exceptions can be more powerful than Continuations. IOW: they can do everything that continuations can do, and more, so you can use them as a replacement for continuations.</li>
<li>Exceptions are universally available.</li>
</ul>

<p>Cons:</p>

<ul>
<li>They are called ""exceptions"" which makes people think that they are ""only for exceptional circumstances"". This means three things: somebody reading your code might not understand it, the implementation might not be optimized for it (and, yes, exceptions <em>are</em> godawful slow in almost any Ruby implementation) and worst of all, you will get sick of all those people constantly, mindlessly babbling ""exceptions are only for exceptional circumstances"", as soon as they glance at your code. (Of course, they won't even try to understand what you are doing.)</li>
</ul>

<p><strong><code>throw</code>/<code>catch</code></strong></p>

<p>This is (roughly) what it would look like:</p>

<pre><code>catch :aaa do
  stuff.each do |otherstuff|
    foo.each do |bar|
      throw :aaa if somethingbad
    end
  end
end
</code></pre>

<p>Pros:</p>

<ul>
<li>The same as exceptions.</li>
<li>In Ruby 1.9, using exceptions for control-flow is actually <em>part of the language specification</em>! Loops, enumerators, iterators and such all use a <code>StopIteration</code> exception for termination.</li>
</ul>

<p>Cons:</p>

<ul>
<li>The Ruby community hates them even more than using exceptions for control-flow.</li>
</ul>
"
"<p>Django as a framework is a neat little package. There are very few files (compared to Rails) and it's got a clean structure. The fact that you can plug and unplug apps between different projects is an extremely nifty feature. At the same time, Ruby's hacking ability is unparalleled. It's complete object-orientedness makes it more expressive and fun.</p>

<p>To cut the story short, is there a Django-like or Django inspired framework on Ruby?
If not, would be possible for an implementation of Django on Ruby? What would be the challenges?</p>

<p>If one were to create a Django-inspired framework for Ruby, how would it's Domain Specific Language (DSL) nature come into play?</p>

<p>I've spent a good chunk of my past life using Symfony, which is a PHP framework heavily inspired from Rails. When I saw Django, it came as a bout of fresh air. I'm really curious to know what you guys think and have to say on this.</p>

<p><strong><em>Update:</strong> I stumbled on a framework call <a href=""http://ramaze.net/"" rel=""nofollow"">Ramaze</a> for Ruby. It seems to be a bare-bones MVC framework with pluggable components for the JS framework, ORM layer and the templating engine. So you could use Prototype / Sequel / Sass, or Mootools / ActiveRecord / XSLT, or any other combination of your choice! As a side-note, Merb is an interesting choice too.</em></p>

<p><strong><em>Update 2:</strong> I'm sticking to PHP for big-ass commercial projects and Django for my personal projects. Reason why I decided to side with Django was the amount of flexibility it offered. That said, I realized that with greater power comes greater responsibility.
My advice to others: if you know exactly what you want - go with Django. It's probably easier to define things explicitly in it than in Rails. Merb may have been a good choice too, but I didn't have the time to explore it. Django seemed like a good fit and so I stopped being anal about the language I'm using. Thanks for all the help guys!</em></p>
","2988","","<p>I think you need to define a little closer what you mean by ""Django-like"". Depending on your exact definition, any of these might fit the bill:</p>

<ul>
<li><a href=""http://RubyOnRails.Org/"" rel=""nofollow"">Ruby on Rails</a></li>
<li><a href=""http://Wiki.MackFramework.Com/"" rel=""nofollow"">Mack</a></li>
<li><a href=""http://RubyWaves.Com/"" rel=""nofollow"">Waves</a></li>
<li><a href=""http://Merbivore.Com/"" rel=""nofollow"">Merb</a></li>
<li><a href=""http://Iowa.SwiftCore.Org/"" rel=""nofollow"">Iowa</a></li>
</ul>
"
"<p>I'm looking for some good examples of code that violates the Single Responsibility Principle.  Don't show me any examples from Uncle Bob's books or web sites since those are plastered all over the internet, like this one:</p>

<pre><code>interface Modem
{
    public void dial(String pno);
    public void hangup();
    public void send(char c);
    public char recv();
}
</code></pre>
","2988","","<p>Actually, in most OO languages that I have used, the top-level <code>Object</code> class is a good example. In Ruby, for example, the <code>Object</code> class (or more precisely the <code>Kernel</code> mixin, which gets mixed into <code>Object</code>) has 45 public instance methods. Now, some of those are aliases, but there's still got to be at least 20, and they are from all over the place. I can easily identify at least 5 responsibilities.</p>

<p>Now, I don't mean to pick on Ruby. It is my favorite programming language. That's why I used it as an example: because it's the language I'm most familiar with. And I am reasonably sure that what I wrote about Ruby applies 100% also to at least Java and .NET.</p>
"
"<p>I have decided to give a try to TDD and BDD on my already started project, encouraged by answers to questions like this:
<a href=""http://stackoverflow.com/questions/294909/should-i-start-using-tdd-on-a-project-that-doesnt-use-it-already"">http://stackoverflow.com/questions/294909/should-i-start-using-tdd-on-a-project-that-doesnt-use-it-already</a></p>

<p>I am struggling to really start with it.
My project (opensource, hosted in <a href=""http://gitorious.org/rubots"" rel=""nofollow"">http://gitorious.org/rubots</a>) is game-like and uses Ruby to wrap and connect to a control server and a physical simulation environment. 
The script is executed, then a GUI appears and when the user click on start 2 external c++ programs are launched, one of them being a physical simulation, they are controlled by a library with Ruby bindings. 
There is no way of reseting the simulation and the control program, they should be started again. Start them and have them in a working state takes like 5 seconds. 
On this context any test needs of whole starting phase before anything moves and the simulation depend on external configuration files that should be provided also.</p>

<p>It is really worth it start writing test cases?
How? Every test with a :before or similar that starts the game, launch the applications, etc? Then every test will at least take 5 seconds (and considerably more if I have to commit a command and wait for the entities of the simulation to answer). </p>

<p>I am missing something. Should I skip not only BDD and TDD but also test units for this kind of application?</p>
","2988","","<p>At RubyConf 2007, William Bereza of <a href=""http://AtomicObject.Com/"" rel=""nofollow"">Atomic Object</a> gave a talk about <a href=""http://RubyConf2007.ConFreaks.Com/d3t1p4%5Fembedded%5Fdevelopment%5Fwith%5Fruby.html"" rel=""nofollow"">Enhancing Embedded Development with Ruby</a>, in which he describes how they applied the <a href=""http://AtomicObject.Com/pages/Why+Choose+Us/"" rel=""nofollow"">principles that Atomic Object stands for</a> (Agile, BDD, Automated Tests, …) to an embedded project involving autonomous robotic vehicles. A couple of months earlier, he had given the same talk at <a href=""http://Conferences.OReillyNet.Com/cs/os2007/view/e%5Fsess/12565/"" rel=""nofollow"">O'Reilly OSCON 2007</a>.</p>

<p>There's a wealth of resources on the Atomic Objects website:</p>

<ul>
<li><a href=""http://AtomicObject.Com/pages/Embedded+Software/"" rel=""nofollow"">Agile Embedded Software Development</a>, </li>
<li><a href=""http://AtomicObject.Com/pages/Papers/"" rel=""nofollow"">Papers</a>, </li>
<li><a href=""http://AtomicObject.Com/pages/Presentations/"" rel=""nofollow"">Presentations</a> and </li>
<li><a href=""http://AtomicObject.Com/pages/Software+Commons/"" rel=""nofollow"">Free Software</a> including
<ul>
<li><a href=""http://AtomicObject.Com/pages/System+Testing+in+Ruby/"" rel=""nofollow"">SysTiR (System Testing in Ruby)</a> and </li>
<li><a href=""http://EmbUnity.SourceForge.Net/"" rel=""nofollow"">Unity - Compact Test Framework for (Embedded) C</a></li>
</ul></li>
</ul>

<p>There is also a great story about Ward Cunningham and TDDing an embedded system, that Robert C. Martin (""Uncle Bob"") told during <a href=""http://RailsConf.Blip.TV/file/2089545/"" rel=""nofollow"">his keynote at RailsConf 2009</a> (The story goes roughly from 15:50 to 17:20). The story goes something like this:</p>

<p>Bob comes to visit Ward, who took him down to the basement, where he is staring on little circles on a screen like its the coolest thing in the universe and he is excited like a little kid unwrapping her first bicycle on Christmas. What he had done, was trying to figure out how to completely TDD an embedded device (in this case a video converter) <em>without ever touching the device at all</em>. What he had done, was the following: he had started writing a Unit test in JUnit, using a mock. Then made that test pass, and so on, just like you would normally do. Then he replaced all the methods with ones that generated the appropriate assembly code for the device. Since all the logic was written (and tested) in Java, the ""leaf"" methods themselves were extremely simple methods that only did extremely simple things like ""write an <code>int</code> into a register"" or ""read a <code>bool</code> from a flag register"" for which the assembly code was so simple that it was ""obviously correct"".</p>

<p>And, sure enough, when he assembled his generated code and flashed the device, it worked the very first time, without him having ever tried the code on the device, and also without him having written any substantial assembly code.</p>

<p>So, that's two approaches: in Atomic Object's case they wrote the software in C and the tests in Ruby, and generated <em>tests</em> from the Ruby code. In Ward's case, he wrote the tests <em>and</em> the code in Java, and generated the <em>code</em> from the Java code.</p>
"
"<p>I always hear about UML being used in Java projects but never in Ruby ones. Is this just a cultural difference or is there less of a need for modeling in Ruby development because it's part of a more 'agile' culture?</p>
","2988","","<p>One of the obvious reasons is that well-designed Ruby programs rely heavily on Mixins, which AFAIK simply cannot be modeled in UML at all. I know that Schärli et al developed an extension to UML that can represent Traits which given the close relationship between Traits and Mixins could probably be adapted or just reused for representing Mixins, but then it's not UML anymore.</p>
"
"<p>Let's say I have a project that is a class library. I have a class in that library and this class has some methods that are used inside the class only. Like this:</p>

<pre><code>public class MyClass
{
  public void MyPublicMethod
  {
    int k

    // do something ...

    int z = MyInternalMethod(k);
    // do something else ...

  }

  internal int MyInternalMethod(int i)
  {
        // do something ...

  }
}
</code></pre>

<p>Now I want to write unit tests for these methods. I would create a ""Unit Tests"" project, reference the nunit from it and write something like this</p>

<pre><code>[TestFixture]
public class UnitTests
{
  private MyClass myClass;

  [SetUp]
  public void SetupTest
  {
    myClass = new MyClass();
  }

  [Test]
  public void TestMyInternalMethod
  {
    int z = 100;
    int k = myClass.MyInternalMethod(z); //CAN NOT DO THIS!
    Assert.AreEqual(k, 100000);
  }

  [TearDown]
  public void TearDown
  {
    myClass = null;
  }
}
</code></pre>

<p>Of course, I can not do this, because of the MyInternalMethod scope. What would be the proper way to handle this situation?</p>
","2988","","<p>There's two cases: either your private methods get called from some public method, in which case you can test them through that method. Or, they don't get called from some public method, in which they cannot be called at all, are dead code, and should be deleted, not tested.</p>

<p>Note that if you are doing TDD, private methods can only spring into existence by extracting them from public methods, in which case they are already tested automatically.</p>
"
"<p>Our git repositories started out as parts of a single monster svn repository where the individual projects each had their own tree like so:</p>

<pre><code>project1/branches
        /tags
        /trunk
project2/branches
        /tags
        /trunk
</code></pre>

<p>Obviously, it was pretty easy to move files from one to another with 'svn mv'. In git, each project is in its own repository, and today I was asked to move a subdirectory from project2 to project1. I did something like this:</p>

<pre><code>$ git clone project2 
$ cd project2
$ git filter-branch --subdirectory-filter deeply/buried/java/source/directory/A -- --all
$ git remote rm origin  # so I don't accidentally the repo ;-)
$ mkdir -p deeply/buried/different/java/source/directory/B
$ for f in *.java; do 
&gt;  git mv $f deeply/buried/different/java/source/directory/B
&gt;  done
$ git commit -m ""moved files to new subdirectory""
$ cd ..
$ git clone project1
$ cd project1
$ git remote add p2 ../project2
$ git fetch p2
$ git branch p2 remotes/p2/master
$ git merge p2 
$ git remote rm p2
$ git push
</code></pre>

<p>But that seems pretty convoluted. Is there a better way to do this sort of thing in general? Or have I adopted the right approach?</p>
","2988","","<p>Take a look at the ""<a href=""http://thread.gmane.org/gmane.comp.version-control.git/5126/"">coolest merge ever</a>"". The gitk GUI which is included in Git was originally developed independently, and later merged into Git, preserving all of its history. I routinely re-read how it is done, and I still don't fully understand it, but it's a great example of Git's power.</p>
"
"<p>When I open a Ruby file (*.rb) inside Visual Studio, it reads like a regular text file - with no syntax highlighting on language keywords.</p>

<p>Is there any way to set this up in Visual Studio?</p>

<p>Update: No, I don't use Visual Studio for Ruby development - I use Netbeans. But I would like to open a Ruby file in Visual Studio and see the proper highlighting.</p>
","2988","","<p>There is a Ruby plugin for Visual Studio by Sapphire Steel Software, called <a href=""http://SapphireSteel.Com/"" rel=""nofollow"">Ruby in Steel</a>.</p>
"
"<p>I am thinking to learn programming language with dynamic type system. </p>

<p>Which one should I learn first? </p>

<p>Criteria:</p>

<ol>
<li>I can learn and start programming in a day or two</li>
<li>Easy, Concise</li>
<li>In few days I should be able to write small scripts for some batch jobs with file systems.</li>
</ol>

<p>To mention, I am normally a quick learner.</p>
","2988","","<p>F# is obviously <em>incredibly</em> bad for learning a language with a dynamic type system, because it doesn't have a dynamic type system. Quite the opposite: it's got a much more advanced <em>static</em> type system than the current mainstream languages, for example Java, C, C++ or its cousins C# and Visual Basic.NET.</p>

<p>As for the other two, I don't think that there is a clear winner.</p>

<p>However, for your first dynamic language, I would recommend <a href=""http://SelfLanguage.Org/"">Self</a>, <a href=""http://NewspeakLanguage.Org/"">Newspeak</a> or <a href=""http://Ioke.Org/"">Ioke</a>. All three of these are <em>incredibly</em> dynamic, much more so than Ruby or Python.</p>

<p>Unfortunately, Ioke and Newspeak are very new and Self hasn't been updated in a while (although it has picked up steam in the recent months), so, as an alternative I would suggest <a href=""http://IoLanguage.Com/"">Io</a>.</p>

<p>I personally find that when I want to learn about some new concept, it's easiest to learn it with a language that takes it to the extreme: static typing, functional programming and lazy evaluation in Haskell, OO in Self, class-based OO in Newspeak, syntactic metaprogramming in Scheme, concurrency in Clojure, fault-tolerance in Erlang, Design-by-Contract in Spec#, concatenative programming in Factor and so on.</p>

<p>One of the biggest problems newcomers on the Ruby mailinglists have, is that they are <em>still</em> writing Java, C#, PHP, C++, C, Pascal, but just with Ruby syntax. That won't happen with Self! The language is just too different, so that it will force you to embrace its dynamism. In Ruby or Python you will have to force yourself.</p>
"
"<p>First, <a href=""http://stackoverflow.com/questions/550329/how-to-open-a-file-with-the-default-associated-program"">I found a couple</a> of <a href=""http://stackoverflow.com/questions/526037/java-how-to-open-user-system-preffered-editor-for-given-file"">java specific questions</a> and answers for this. I am looking for more ""native"", but cross platform solution, using C, C++, some kind of shell scripts, or, in my case, Qt. </p>

<p>So the question is, are there standard, cross platform, ways to programmatically open the associated application for certain file types. Or at least to find out if there are associated applications and be able to locate and launch them?</p>

<p>By cross platform I mean Windows, OSX and linux (gnome/kde). The use case is having a database with stored files as blobs that will be read on the three different targets.</p>
","2988","","<p>I don't know of any cross-platform way.</p>

<p>In Windows, there is the <code>start</code> command, which will launch the associated default application. (E.g. <code>start foo.doc</code> will launch the default Word document editor, <code>start <a href=""http://StackOverflow.Com/"">http://StackOverflow.Com/</a></code> the default web browser and <code>start mailto:mail@example.com</code> the default mail app.)</p>

<p>In OS X there is the <code>open</code> command, which does the same thing.</p>

<p>Linux is just an Operating System kernel. OS kernels don't know anything about ""filetypes"" or ""MIME types"" or ""associated applications"" or anything like that. Therefore, such a thing simply <em>cannot exist</em> for Linux.</p>

<p>The Freedesktop Group has a <a href=""http://Portland.FreeDesktop.Org/xdg-utils-1.0/xdg-open.html"" rel=""nofollow"">specification for an <code>xdg-open</code> command</a>, which works on all Freedesktop-compliant graphical desktops (be they Linux, FreeBSD, NetBSD, OpenBSD, DragonflyBSD, OpenSolaris or otherwise). However, it is obviously not guaranteed to work on non-Freedesktop systems and it is <em>certainly</em> not guaranteed to work on non-graphical systems.</p>

<p>In all three cases, this is a command line application, not a C or C++ API, but you can obviously call it via <code>system</code>.</p>
"
"<p>I have a method which returns an File object. I need to know when the file is getting closed. This is not as simple as overwriting the close method. The close method is not called if the file is closed by the destructor.</p>

<p>It should work like this:</p>

<pre><code>def something
    get_lock_on_file
    file File.new(""foobar"")
    file.on_close { release_lock_on_file }
    file
end
</code></pre>

<p>How do I implement file#on_close(&amp;block) ?</p>
","2988","","<p>I am afraid there is nothing you can do. If the <code>File#close</code> method doesn't get called, then it's somewhat likely that the file will actually only be automatically closed by the operating system, when the Ruby interpreter exits. In other words: at the time that the file is closed, the Ruby interpreter (or at least your program) is long gone, so there is just no way that your program can be notified.</p>

<p>I guess you could achieve some somewhat reasonable coverage by </p>

<ul>
<li>overriding the <code>File</code> object's <code>#close</code> method, </li>
<li>installing your own finalizer and </li>
<li>installing an <code>at_exit</code> handler.</li>
</ul>

<p>However, all of these have their problems: the <code>#close</code> method might not get called. The finalizer is only run when the object is garbage collected, which may be much later than you expect (and if you never run out of memory, then the garbage collector never runs and the finalizer never gets called). And even the <code>at_exit</code> handler is not guaranteed to run, if the interpreter crashes.</p>
"
"<p>I'm trying to redefine the File.dirname method to first change %20s to spaces.  But the following gives me an error</p>

<pre><code>class File
   old_dirname = instance_method(:dirname)    

   define_method(:dirname) { |s|
       s = s.gsub(""%20"","" "")
       old_dirname.bind(self).call(s)
   }
end
</code></pre>

<p>This trhows a NameError exception: undefined method 'dirname' for class 'File'</p>

<p>What is the right way to do this?</p>
","2988","","<p>As Chuck already wrote, <code>File::dirname</code> is a singleton method of the <code>File</code> class object (or more precisely an instance method of the <code>File</code> class object's metaclass), not an instance method of the <code>File</code> class.</p>

<p>So, you have to open up <code>File</code>'s metaclass, not the <code>File</code> class itself:</p>

<pre><code>#!/usr/bin/env ruby

class &lt;&lt; File
  old_dirname = instance_method :dirname

  define_method :dirname do |*args|
    old_dirname.bind(self).(*args).gsub '%20', ' '
  end
end

require 'test/unit'
class TestFileDirname &lt; Test::Unit::TestCase
  def test_that_it_converts_percent20_to_space
    assert_equal '/foo bar/baz', File.dirname('/foo%20bar/baz/quux.txt')
  end
end
</code></pre>

<p>However, I agree with @sheldonh: this breaks the API contract of <code>File::dirname</code>.</p>
"
"<p>I am writing some unit tests like the following:</p>

<pre><code>def executing_a_signal
  a_method(a_signal.new, a_model, a_helper);
  assert_equal(new_state, a_model.state)
end
</code></pre>

<p>The tests work fine, but the method which runs just before the assertion to execute the logic prints various messages to the console, mainly via <code>puts</code>.</p>

<p>Is there a quick, perhaps built-in, way to suppress that output to the console? I am only interested in the final effect of the method on the model object, and for the sake of keeping the console clean basically, I was hoping to find a way to simply prevent all output to the console without re-writing or commenting out those <code>puts</code> statements just for my tests.</p>

<p>It is definitely not a critical issue, but would very much like to hear any thoughts or ideas (or workaround) on it.</p>
","2988","","<p>There's two solutions: redirecting where <code>puts</code> writes to (the solution given by @cldwalker above), or overwriting the <code>puts</code> method itself to be a no-op. (The implementation should be obvious: <code>module Kernel; def puts(*args) end end</code>).</p>

<p>However, in this case, what would <em>really</em> be the best solution is ""listening to your tests"". Because, oftentimes when something is awkward to test, your tests are really trying to tell you that something is wrong with your design. In this case, I smell a violation of the Single Responsibility Principle: why the heck does a Model object need to know how to write to the console? Its responsibility is representing a Domain Concept, not logging! That's what Logger objects are for!</p>

<p>So, an alternative solution would be to have the Model object delegate the responsibility for logging to a Logger object, and use dependency injection to inject the Model object with a suitable Logger object. That way, you can simply inject a <em>fake</em> logger for the test. Here's an example:</p>

<pre><code>#!/usr/bin/env ruby

class SomeModel
  def initialize(logger=Kernel) @logger = logger end
  def some_method_that_logs; @logger.puts 'bla' end
end

require 'test/unit'
require 'stringio'
class TestQuietLogging &lt; Test::Unit::TestCase
  def setup; @old_stdout, $&gt; = $&gt;, (@fake_logdest = StringIO.new) end
  def teardown; $&gt; = @old_stdout end

  def test_that_default_logging_is_still_noisy
    SomeModel.new.some_method_that_logs

    assert_equal ""bla\n"", @fake_logdest.string
  end

  def test_that_logging_can_be_made_quiet
    fake_logger = Object.new
    def fake_logger.puts *args; end

    SomeModel.new(fake_logger).some_method_that_logs

    assert_equal '', @fake_logdest.string
  end
end
</code></pre>

<p>At the very least, the Model object should take the <code>IO</code> object that it is logging <em>to</em> as an argument, so that you can simply inject <code>StringIO.new</code> into it for the test:</p>

<pre><code>#!/usr/bin/env ruby

class SomeModel
  def initialize(logdest=$&gt;) @logdest = logdest end
  def some_method_that_logs; @logdest.puts 'bla' end
end

require 'test/unit'
require 'stringio'
class TestQuietLogging &lt; Test::Unit::TestCase
  def setup; @old_stdout, $&gt; = $&gt;, (@fake_logdest = StringIO.new) end
  def teardown; $&gt; = @old_stdout end

  def test_that_default_logging_is_still_noisy
    SomeModel.new.some_method_that_logs

    assert_equal ""bla\n"", @fake_logdest.string
  end

  def test_that_logging_can_be_made_quiet
    fake_logdest = (@fake_logdest = StringIO.new)

    SomeModel.new(fake_logdest).some_method_that_logs

    assert_equal '', @fake_logdest.string
    assert_equal ""bla\n"", fake_logdest.string
  end
end
</code></pre>

<p>If you still want to be able to just say <code>puts whatever</code> in your Model or you are afraid that someone might forget to call <code>puts</code> on the logger object, you can provide your own (private) puts method:</p>

<pre><code>class SomeModel
  def initialize(logdest=$&gt;) @logdest = logdest end
  def some_method_that_logs; puts 'bla' end
  private
  def puts(*args) @logdest.puts *args end
end
</code></pre>
"
"<p>There are lots of examples of how to strip HTML tags from a document using Ruby, Hpricot and Nokogiri have inner_text methods that remove all HTML for you easily and quickly.</p>

<p>What I am trying to do is the opposite, remove all the text from an HTML document, leaving just the tags and their attributes.</p>

<p>I considered looping through the document setting inner_html to nil but then really you'd have to do this in reverse as the first element (root) has an inner_html of the entire rest of the document, so ideally I'd have to start at the inner most element and set inner_html to nil whilst moving up through the ancestors.</p>

<p>Does anyone know a neat little trick for doing this efficiently? I was thinking perhaps regex's might do it but probably not as efficiently as an HTML tokenizer/parser might.</p>
","2988","","<p>I just came up with this, but @andre-r's solution is <em>soo</em> much better!</p>

<pre><code>#!/usr/bin/env ruby

require 'nokogiri'

def strip_text doc
  Nokogiri(doc).tap { |doc|
    doc.traverse do |node|
      node.content = nil if node.text?
    end
  }.to_s
end

require 'test/unit'
require 'yaml'
class TestHTMLStripping &lt; Test::Unit::TestCase
  def test_that_all_text_gets_strippped_from_the_document
    dirty, clean = YAML.load DATA
    assert_equal clean, strip_text(dirty)
  end
end
__END__
---
- |
  &lt;!DOCTYPE html&gt;
  &lt;html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'&gt;
    &lt;head&gt;
        &lt;meta http-equiv='Content-type'     content='text/html; charset=UTF-8' /&gt;
        &lt;title&gt;Test HTML Document&lt;/title&gt;
        &lt;meta http-equiv='content-language' content='en' /&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Test &lt;abbr title='Hypertext Markup Language'&gt;HTML&lt;/abbr&gt; Document&lt;/h1&gt;
        &lt;div class='main'&gt;
            &lt;p&gt;
                &lt;strong&gt;Test&lt;/strong&gt; &lt;abbr title='Hypertext Markup Language'&gt;HTML&lt;/abbr&gt; &lt;em&gt;Document&lt;/em&gt;
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/body&gt;
  &lt;/html&gt;
- |
  &lt;!DOCTYPE html&gt;
  &lt;html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""&gt;
  &lt;head&gt;
  &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;meta http-equiv=""content-language"" content=""en""&gt;
  &lt;/head&gt;
  &lt;body&gt;&lt;h1&gt;&lt;abbr title=""Hypertext Markup Language""&gt;&lt;/abbr&gt;&lt;/h1&gt;&lt;div class=""main""&gt;&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;abbr title=""Hypertext Markup Language""&gt;&lt;/abbr&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;
  &lt;/html&gt;
</code></pre>
"
"<p>I am currently involved in developing with C# - Here is some background:
We implement MVP with our client application and we have a cyclomatic rule which states that no method should have a cyclomatic complexity greater than 5.
This leads to a lot of small private methods which are generally responsible for one thing.</p>

<p>My question is about unit testing a class:</p>

<p>Testing the private implementation through the public methods is all fine... I don't have a problem implementing this. </p>

<p>But... what about the following cases:</p>

<blockquote>
  <p><strong>Example 1.</strong> Handle the result of an async data retrival request (The callback method shouldn't be public purely for testing)</p>
  
  <p><strong>Example 2.</strong> An event handler which does an operation (such as update a View label's text - silly example I know...)</p>
  
  <p><strong>Example 3.</strong> You are using a third party framework which allows you to extend by overriding protected virtual methods (the path from the public methods to these virtual methods are generally treated as black box programming and will have all sorts of dependancies that the framework provides that you don't want to know about)</p>
</blockquote>

<p>The examples above don't appear to me to be the result of poor design.
They also do not appear be be candidates for moving to a seperate class for testing in isolation as such methods will lose their context.</p>

<p>Doesn anyone have any thoughts about this?</p>

<p>Cheers,
Jason</p>

<p><strong>EDIT:</strong>
I don't think I was clear enough in my original question - I can test private methods using accessors and mock out calls/ methods using TypeMock. That isn't the problem. The problem is testing things which don't need to be public, or can't be public. </p>

<p>I don't want to make code public for the sake of testing as it can introduce security loopholes (only publishing an interface to hide this is not an option because anyone can just cast the object back to its original type and get access to stuff I wouldn't want them to) </p>

<p>Code that gets refactored out to another class for testing is fine - but can lose context. I've always thought it bad practice to have 'helper' classes which can contain a pot of code with no specific context - (thinking SRP here). I really don't think this works for event handlers either.</p>

<p>I am happy to be proven wrong - I just am unsure how to test this functionality! I have always been of the mind that if it can break or be changed - test it.</p>

<p>Cheers, Jason</p>
","2988","","<p>There is really only two cases you need to consider:</p>

<ol>
<li>the private code is called, directly or indirectly from public code and</li>
<li>the private code is <em>not</em> called from public code.</li>
</ol>

<p>In the first case, the private code is automatically being tested by the tests which exercise the public code that calls the private code, so there is no need to test the private code. And in the second case, the private code cannot be called at all, therefore it should be deleted, not tested.</p>

<p>Ergo: there is no need to explicitly test the private code.</p>

<p>Note that when you do TDD it is <em>impossible</em> for untested private code to even exist. Because when you do TDD, the only way that private code can be appear, is by an Extract {Method|Class|...} Refactoring from public code. And Refactorings are, by definition, behavior-preserving and therefore test-coverage-preserving. And the only way that public code can appear is as the result of a failing test. If public code can only appear as already tested code as the result of a failing test, and private code can only appear as the result of being extracted from public code via a behavior-preserving refactoring, it follows that untested private code can never appear.</p>
"
"<p>Do you know any example of an <a href=""http://en.wikipedia.org/wiki/Esoteric%5Fprogramming%5Flanguage"" rel=""nofollow"">esoteric language</a> used to write any practical-use, real-world program? Is there any, however obscure, domain of computer science where an esoteric language has actually been proven useful for solving a specific problem?</p>
","2988","","<p>There is no practical use for an esoteric programming language, pretty much by definition. However, just because you cannot <em>use</em> them, doesn't mean they aren't <em>useful</em>.</p>

<p>For example, when you look at esoteric programming languages, you can roughly divide them into categories: some are created as a joke, some are created just for fun, some are created as Turing tarpits, but there are also some that are created to prove or illustrate a point. And these <em>are</em> actually useful for exactly that: illustrating a point, maybe in a programming languages class, maybe to the community or to the industry. Even though they are useless for practical purposes, they are use*ful* for educational purposes.</p>

<p>Take non-deterministic esoteric programming languages. These are programming languages for which the evaluation semantics of certain expressions are not defined deterministically, but for example probabilistically or based on the phase of the moon or something like that. If you look at the definition of such a language, you will immediately think: ""Well, that's just stupid."" And it is! (For example, the Hello World program in Java2k is almost a page of code, and it isn't even guaranteed to print ""Hello World"" every time, only most of the time.) And yet, most of today's mainstream programming languages have non-deterministic concurrency models. IOW: as soon as you start a thread in Java, C#, Python, Ruby, Perl, even Erlang or Clojure, your program becomes just as random as in the esoteric language Java2k. So, why do we think one is stupid and accept the other as normal, even though they are essentially the same thing? By taking non-determinism to the extreme, and packaging it up in a fun way, esolangs allow us to ask that question.</p>

<p>Another example is Turing tarpits. A Turing tarpit is an esolang which has almost no features but is still Turing-complete. Such a Turing tarpit can be used to demonstrate two different things: you can use it to demonstrate what exactly it is that makes some languages more ""powerful"" (in the sense of expressive power) than others. If you search around on the web, you will find people ask ""if Lisp is so much better than Java, why don't you show me some program that you can write in Lisp but I cannot write in Java."" And, of course, that's stupid: both languages are Turing-complete, so there is no such program. However, by contrasting Java with, say, Brainfuck, you can show that this is just not meaningful question to ask.</p>

<p>And the other thing you can demonstrate with Turing tarpits is that you can never make a language more powerful (in both senses of the word: computational power and expressive power) by removing features. It sounds obvious, but there are people who actually believe that Microsoft should just remove mutable state from C#, and it would magically become more powerful.</p>

<p>In general, Turing tarpits are good for demonstrating the distinction between the computational power and the expressive power of a programming language.</p>

<p>Other ways in which esolangs can be useful is that they can serve as an inspiration for programming language research. Think of Unlambda, which, as the name implies, is a functional language which is <em>not</em> based on the lambda calculus. In other words: it's a functional language which doesn't have functions.</p>

<p>And last but not least, esolangs can force you to look at a problem from a completely different angle (yes, I admit, it's mostly an awkward angle, but hey, some movie directors (Hitchcock, for example) owe their whole career to looking at things from awkward angles) and they tease your brain like a good puzzle. That is, for example, the whole reason for the existence and the name of Brainfuck.</p>
"
"<p>For example, why do you do this in LINQ</p>

<pre><code>var products = from p in Products
               select p.Name;
</code></pre>

<p>when they could have done this:</p>

<pre><code>var products = select p.Name from Products p;
</code></pre>

<p>Does the second offer some limitations in linq?
Maybe the above examples are too simple to actually see why linq is written in one order and sql is written in another.</p>
","2988","","<p>Actually, LINQ's syntax is more closely based on XQuery than it is on SQL, and XQuery does it that way, too.</p>

<p>The main reasons have already been given: in C#, VB.NET and indeed most programming languages, scope flows from top to bottom and left to right, just the way we normally read. The way SQL is written, scope jumps around: an identifier gets already <em>used</em> in the <code>SELECT</code> part of the query, but it only gets introduced later, in the <code>FROM</code> part of the query. That's why the designers of XQuery decided to flip it around and LINQ just follows.</p>

<p>It also matches the mental model better: you have list of data sources (<code>FROM</code>), then you filter out the data you're interested in (<code>WHERE</code>), then you sort this data (<code>ORDERBY</code>) and lastly you either project it into a different representation (<code>SELECT</code>) or partition the results (<code>GROUP BY</code>). After that, you can inject the results into the next query (<code>INTO</code>).</p>
"
"<p>Clojure is a functional lisp, reportedly not at all object-oriented, even though it runs on the JVM, a VM designed for an object oriented language.  Clojure provides identical interfaces for iterating over lists and vectors by abstracting them to an interface called seq.  This is even implemented internally using a Java interface called ISeq.  Is this not an example of object-oriented abstraction?  How can it be claimed that Clojure is not object-oriented?</p>

<p>I guess a corollary to this question--- when can polymorphism be considered distinct from object orientation?</p>
","2988","","<blockquote>
  <p>I guess a corollary to this question--- when can polymorphism be considered distinct from object orientation?</p>
</blockquote>

<p>Polymorphism has absolutely no relation to object-orientation. It simply means that the same operation can behave differently depending on the type(s) of its operands.</p>

<p>Functional languages like ML or Haskell have had polymorphism for more than 30 years, and someone with a better knowledge of PL history can probably point out some examples pre-1962 (i.e. pre-OO).</p>

<p>Christopher Strachey described the distinction between parametric polymorphism and ad-hoc polymorphism in 1967, so polymorphism must have <em>already</em> existed then. Since polymorphism was only introduced in OO in Simula-67, my guess is that polymorphism <em>must</em> have existed before it was introduced in OO.</p>
"
"<p>I have a local repository called TestRepo. I clone it with the --bare option, zip this clone up, and throw it on my server. Unzip it, and it's still bare. </p>

<p>I then clone the bare remote repository locally over ssh with something like</p>

<pre><code>git clone ssh://git@host.com/~/TestRepo.git TestRepoCloned
</code></pre>

<p>The local TestRepoCloned is <strong>not</strong> bare and has a remote called ""origin."" It appears to be tracking correctly from the looks of its config file</p>

<pre><code>[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    ignorecase = true
[remote ""origin""]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = ssh://git@host.com/~/TestRepo.git
[branch ""master""]
    remote = origin
    merge = refs/heads/master
</code></pre>

<p>I edit an existing file. I commit the change to the current branch (master) via</p>

<pre><code>git commit -a -m ""Edited a file.""
</code></pre>

<p>The commit succeeds and all is well.</p>

<p>I decide to push this change to the remote repository via SSH with a </p>

<pre><code>git push
</code></pre>

<p>The remote repository is now no longer bare, but has a complete working directory, and I get continuous error messages on all further attempts to push to it. </p>

<p>Everything I've read seems to suggest that what I'm doing is correct, but it simply is not working. How am I supposed to push changes to a bare remote repo and actually <strong>keep it bare</strong>? </p>
","2988","","<p>This shouldn't happen. My guess is that there is either some sort of hook script (probably <code>post-receive</code>), which causes a checkout <em>or</em> that there's a bug in Git. Both of these aren't very likely, but that's the only thing I can imagine.</p>
"
"<p>Pardon the total newbiew question but why is @game_score always nil?</p>

<pre><code>#bowling.rb

class Bowling
  @game_score = 0
    def hit(pins)
    	@game_score = @game_score + pins
    end

    def score
    	@game_score
    end
end
</code></pre>
","2988","","<p>Let's walk through the code, shall we?</p>

<pre><code>#bowling.rb

class Bowling
  @game_score = 0 # (1)
</code></pre>

<p>At this point (1), we are still inside the <em>class</em> <code>Bowling</code>. Remember: classes are just objects like any other. So, at this point you are assigning <code>0</code> to the instance variable <code>@game_score</code> <em>of the class object <code>Bowling</code></em>.</p>

<pre><code> def hit(pins)
  @game_score = @game_score + pins # (2)
</code></pre>

<p>Now (2), we are inside an <em>instance method</em> of the <code>Bowling</code> class. I.e.: this is a method that is going to belong to an <em>instance</em> of <code>Bowling</code>. So, now the instance variable <code>@game_score</code> belongs to an <em>instance</em> of the <code>Bowling</code> class, and not to the class itself.</p>

<p>Since <em>this</em> instance variable is never initialized to anything, it will evaluate to <code>nil</code> (in Ruby, uninitialized variables always evaluate to <code>nil</code>), so this evaluates to <code>@game_score = nil + pins</code> and since <code>nil</code> doesn't have a <code>#+</code> method, this will result in a <code>NoMethodError</code> exception being raised.</p>

<pre><code> end
 def score
  @game_score # (3)
</code></pre>

<p>And here (3), we are again inside an <em>instance method</em> of the <code>Bowling</code> class. This will always evaluate to <code>nil</code>, for the reason I outlined above: <code>@game_score</code> is never initialized, therefore it evaluates to <code>nil</code>.</p>

<pre><code> end
end
</code></pre>

<p>We can use Ruby's reflection capabilities to take a look at what's going on:</p>

<pre><code>p Bowling.instance_variable_get(:@game_score) # =&gt; 0
b = Bowling.new
p b.instance_variable_get(:@game_score) # =&gt; nil
</code></pre>

<p>Now let's inject a value into the instance variable:</p>

<pre><code>b.instance_variable_set(:@game_score, 1)
p b.score # =&gt; 1
b.hit(3)
p b.score # =&gt; 4
</code></pre>

<p>So, we see that everything works as it should, we only need to figure out how to make sure the instance variable gets initialized.</p>

<p>To do that, we need to write an initializer method. Strangely, the initializer method is actually a private <em>instance method</em> called <code>initialize</code>. (The reason why <code>initialize</code> is an instance method and not a class method, is actually quite simple. Ruby splits object creation in two phases: memory allocation and object initialization. Memory allocation is done by a <em>class</em> method called <code>alloc</code> and object initialization is done by an <em>instance</em> method called <code>initialize</code>. (Objective-C programmers will recognize this.) The reason why <code>alloc</code> is a class method is simply that at this point in the execution there is no instance yet. And the reason that <code>initialize</code> is an instance method is that object initialization is obviously per-object. As a convenience, there is a standard factory class method called <code>new</code> that calls both <code>alloc</code> and <code>initialize</code> for you.)</p>

<pre><code>class Bowling
 def initialize
  @game_score = 0
 end
end
</code></pre>

<p>Let's test this:</p>

<pre><code>c = Bowling.new
p c.score # =&gt; 0
c.hit(2)
p c.score # =&gt; 2
</code></pre>

<p>BTW: just some minor Ruby style tips: indentation is 2 spaces, not 1 tab. And your <code>hit</code> method would more idiomatically be <code>@game_score += pins</code>.</p>
"
"<p><strong>This is Ruby 1.8 Question:</strong></p>

<p>We all know how to use <code>Array#uniq</code> :</p>

<pre><code>[1,2,3,1].uniq #=&gt; [1,2,3]
</code></pre>

<p>However I'm wondering if we can monkey patch it in a way to work with complex objects. The current behavior is like this:</p>

<pre><code>[{""three""=&gt;""3""}, {""three""=&gt;""4""}, {""three""=&gt;""3""}].uniq 
#=&gt; [{""three""=&gt;""3""}, {""three""=&gt;""4""}, {""three""=&gt;""3""}]
</code></pre>

<p>The requested one is:</p>

<pre><code>[{""three""=&gt;""3""}, {""three""=&gt;""4""}, {""three""=&gt;""3""}].uniq 
#=&gt; [{""three""=&gt;""3""}, {""three""=&gt;""4""}]
</code></pre>
","2988","","<p>I've run into this myself many times. Hash equality in Ruby 1.8.6 is broken:</p>

<pre><code>require 'test/unit'

class TestHashEquality &lt; Test::Unit::TestCase
  def test_that_an_empty_Hash_is_equal_to_another_empty_Hash
    assert({}.eql?({}), 'Empty Hashes should be eql.')
  end
end
</code></pre>

<p>Passes in Ruby 1.9 and Ruby 1.8.7, fails in Ruby 1.8.6.</p>
"
"<p>A long time ago, Rob Pike and Luca Cardelli wrote a <a href=""http://doc.cat-v.org/bell%5Flabs/squeak/"" rel=""nofollow"">paper</a> called ""Squeak: a language for communicating with mice"". It was based on Hoare's communicating sequential processes, but it was compiled into single-threaded C code - no threads or scheduler at runtime. However, I can't find a compiler for Squeak, and Rob Pike went on to write <a href=""http://herpolhode.com/rob/"" rel=""nofollow"">newsqueak</a>, which does have a nondeterministic scheduler at runtime, and so isn't what I want.</p>

<p>Esterel is also a language with a lot of support for concurrency, which can be compiled into single-threaded C code - but Esterel Technologies sells SCADE Studio for so much money, they won't even say how much it costs on their <a href=""http://www.esterel-technologies.com/"" rel=""nofollow"">web page</a>.</p>

<p>The Columbia Esterel Compiler is <a href=""http://www1.cs.columbia.edu/~sedwards/cec/"" rel=""nofollow"">available</a>. Are there other modern languages that compile ""multi-threaded"" algorithms into single-threaded, deterministic output?</p>

<p>Thanks.</p>
","2988","","<p>I'm not quite sure what you are asking. Are you looking for programming languages with deterministic concurrency models?</p>

<p>If so, the canonical example would be the <a href=""http://WWW.Mozart-Oz.Org/"" rel=""nofollow"">Mozart Programming System</a>, based on the Distributed Oz Programming Language.</p>
"
"<p>How do I parse HTML using regular expressions in C#?</p>

<p>For example, given HTML code</p>

<pre><code>&lt;s2&gt; t1 &lt;/s2&gt;  &lt;img src='1.gif' /&gt;  &lt;span&gt; span1 &lt;span/&gt;
</code></pre>

<p>I am trying to obtain</p>

<pre><code>1.  &lt;s2&gt;
2.  t1
3. &lt;/s2&gt;
4. &lt;img src='1.gif' /&gt;
5. &lt;span&gt;
6. span1
7. &lt;span/&gt;
</code></pre>

<p>How do I do this using regular expressions in C#?</p>

<p>In my case, the HTML input is not well-formed XML like XHTML. Therefore I can not use XML parsers to do this.</p>
","2988","","<p>This has already been answered literally dozens of times, but it bears repeating: regular expressions can only parse regular languages, that's why they are called regular expressions. HTML is not a regular language (as probably every college student in the last decade has proved at least once), and therefore cannot be parsed by regular expressions.</p>
"
"<p>This is just a hypothetical question, if you wouldn't have the <code>Array</code> and the <code>Hash</code> class, would there be any way of implementing an Array class in pure Ruby? How?</p>
","2988","","<p>Sure you can. Ruby is a Turing-complete language. You can implement <em>everything</em> that you can implement in <em>any</em> language in Ruby.</p>
"
"<p>For example, is it possible to have Scala, Java, and Clojure source all compile/build together properly inside the same project?  Or, do I have to do them as separate project libraries then used by whatever I pick as the ""master"" project?</p>

<p>If neither of those, how's everyone else doing it?</p>
","2988","","<p>Unfortunately, while the Java <em>community</em> seems to be very enthusiastic about polyglot programming, the IDE vendors haven't really kept up. They generally <em>do</em> have plugins for Java, Scala, Clojure, Groovy, Ruby, ECMAScript, Python, C++ projects, but <em>mixing</em> multiple languages in <em>one</em> project is generally not supported.</p>

<p>In Ruby, for example, it is quite common to use Swing as a GUI via JRuby. But if you want to use Matisse, the NetBeans Swing GUI builder you must use a Java project, you cannot use Matisse in a Ruby project. However, if you use a Java project, then you can't have a Ruby main executable, you must have a Java main executable. Also, you don't get Rake support and other things that the Ruby project type supports. (The ugly workaround is to write a Java main executable which creates a <code>JRubyEngine</code> instance by hand, loads the <em>Ruby</em> main executable into it and runs it.)</p>

<p>The Eclipse Scala plugin supports a limited amount of polyglotism, but the hoops that they have to jump through are tremendous. Basically, they use runtime bytecode patching to inject Scala Aspects into the Java Development Tools Eclipse plugin, to get type-driven cross-language refactorings to work. The Groovy plugin does similar things, as does AspectJ (in fact, they originally came up with the idea of using aspect weaving to inject new functionality into JDT). So, all of these plugins allow polyglot programming with themselves and Java. But unfortunately not with each other. (Although several of the maintainers have expressed interest in more closely collaborating.)</p>

<p>In general, I fear that the only solution is new IDEs.</p>
"
"<p>What's the slickest, most Ruby-like way to do this?</p>

<pre><code>[1, 3, 10, 5].diff
</code></pre>

<p>should produce</p>

<pre><code>[2, 7, -5]
</code></pre>

<p>that is, an array of first order differences. I've come up with a solution which I'll add below, but it requires ruby 1.9 and isn't all that slick. what else is possible?</p>
","2988","","<p>I like this functional style:</p>

<pre><code>module Enumerable
  def diff
    each_cons(2).map {|pair| pair.reverse.reduce :-}
  end
end
</code></pre>

<p>EDIT: I just realized that the <code>reverse</code> is totally unnecessary. If this were a functional language, I would have used pattern matching, but Ruby doesn't support pattern matching. It <em>does</em>, however, support destructuring bind, which is a good enough approximation for pattern matching in this case.</p>

<pre><code>each_cons(2).map {|first, second| second - first}
</code></pre>

<p>No smiley, though.</p>

<p>I like how this sounds if you just read it out loud from left to right: ""For each pair, apply the difference between the first and second elements of the pair."" In fact, I normally don't like the name <code>collect</code> and prefer <code>map</code> instead, but in this case that reads even better:</p>

<pre><code>each_cons(2).collect {|first, second| second - first}
</code></pre>

<p>""For each pair, collect the difference between its elements."" Sounds almost like a definition of first order difference.</p>
"
"<p>While I understand what simulation and emulation mean in general, I almost always get confused about them. Assume that I create a piece of software that mimics existing hardware/software, what should I call it? A simulator or an emulator?</p>

<p>Could anyone explain the difference in terms of programming?<br>
Bonus: What is the difference in English between these two terms? (Sorry, I am not a native speaker :)</p>
","2988","","<p>Some years ago I came up with a very short adage that, I believe, captures the essence of the difference quite nicely:</p>

<blockquote>
  <p>A simulator is an emulator on a mission.</p>
</blockquote>

<p>By that I mean that you use an emulator when you can't use the real thing, and you use a simulator when you can't use the real thing <em>and you want to find something out about it</em>.</p>
"
"<p>When I started OO programming many years ago I gained the impression that variables (if that is the right word) were either ""primitives"" (int, double, etc.) or first-class objects (String, JPane, etc.). This is reinforced by a recent answer on primitives in Java and C# (@Daniel Pryden: <a href=""http://stackoverflow.com/questions/1597999/are-primitives-different-in-java-and-c"">Are primitive types different in Java and C#?</a>). However don't know whether C# ValueTypes are primitives, objects or some other beast such as second-class objects. I see that SO has only one use of the <code>first-class</code> tag so maybe it is no longer a useful term.</p>

<p>I did not find <a href=""http://en.wikipedia.org/wiki/First-class_object"">the Wikipedia article</a> useful (""This article is in need of attention from an expert on the subject.""). I'd be grateful for a taxonomy and current usage of terms, primarily related to Java and C# (though maybe other languages will shed enlightenment).</p>

<p><strong>Clarification</strong>: I'd like to understand the term <em>first-class</em> and what its range of use is.</p>
","2988","","<p>The notion of <a href=""http://C2.Com/cgi/wiki/?FirstClass"">""first-class citizen"" or ""first-class element""</a> in a programming language was introduced by British computer scientist <a href=""http://Wikipedia.Org/wiki/Christopher%5FStrachey"">Christopher Strachey</a> in the 1960s in the context of first-class functions. The most famous formulation of this principle is probably in <a href=""http://MITPress.MIT.Edu/sicp/full-text/book/book-Z-H-12.html#call%5Ffootnote%5FTemp%5F121"">Structure and Interpretation of Computer Programs</a> by Gerald Jay Sussman and Harry Abelson:</p>

<ul>
<li>They may be named by variables.</li>
<li>They may be passed as arguments to procedures.</li>
<li>They may be returned as the results of procedures.</li>
<li>They may be included in data structures.</li>
</ul>

<p>Basically, it means that you can do with this programming language element everything that you can do with all other elements in the programming language.</p>
"
"<p>I'm interested in how one would go in getting this to work :</p>

<pre><code>me = ""this is a string""
class &lt;&lt; me
  alias :old&lt;&lt; :&lt;&lt;
  def &lt;&lt;(text)
    old&lt;&lt;(text)
    puts ""appended #{text}""
  end
end
</code></pre>

<p>I'd like that when something gets appended to the <code>me</code> variable, the object will use the redefined method.</p>

<p>If I try to run this, I get <code>syntax error, unexpected ':', expecting kEND</code> at <code>:&lt;&lt;</code>.</p>
","2988","","<p>As others have already explained, the problem is simply that <code>old&lt;&lt;</code> is not a legal Ruby identifier. You can, with tricks, create a method with that name, but you can't call it in the normal ways, and it certainly won't be recognized as an operator.</p>

<p>However, all the answers so far, while they have certainly answered your question, have completely ignored the <em>underlying</em> problem: that method shouldn't even have a name in the first place! And if it doesn't have a name, then the problem of the name being illegal simply doesn't even arise.</p>

<pre><code>#!/usr/bin/env ruby

require 'test/unit'
require 'stringio'
class TestOperatorDecorator &lt; Test::Unit::TestCase
  def setup; @old_stdout, $&gt; = $&gt;, (@fake_stdout = StringIO.new) end
  def teardown; $&gt; = @old_stdout end

  def test_that_me_dot_append_writes_to_stdio
    me = 'this is a string'
    class &lt;&lt; me
      old_method = instance_method :&lt;&lt;

      define_method :&lt;&lt; do |text|
        old_method.bind(self).(text)
        puts ""appended #{text}""
      end
    end

    me &lt;&lt; 'Test'

    assert_equal ""appended Test\n"", @fake_stdout.string
  end
end
</code></pre>

<p>In this case, the method never gets named, which not only means that we don't have to invent a name for it, it also means that it doesn't pollute the namespace.</p>
"
"<p>Experimenting with Ruby's Benchmark module...</p>

<pre><code>&gt;&gt; Benchmark.bm(7) { |b| b.report('Report:') { s = '' ; 10000.times { s += 'a' } }  }
             user     system      total        real
Report:  0.150000   0.010000   0.160000 (  0.156361)
</code></pre>

<p>What are the meanings of ""user"", ""system"", and ""real""?</p>
","2988","","<p>These are the same times that the Unix <code>time</code> command or other typical benchmarking tools would report:</p>

<ul>
<li><em>user</em>: the amount of time spent executing userspace code (i.e.: your code), </li>
<li><em>system</em>: the amount of time spent executing kernel code and </li>
<li><em>real</em>: the ""real"" amount of time it took to execute the code (i.e. <em>system</em> + <em>user</em> + time spent waiting for I/O, network, disk, user input, etc.). Also known as ""wallclock time"".</li>
</ul>
"
"<p>Is it possible to add a gem dependency only if the person is using a certain version of ruby?</p>

<p><strong>Background:</strong> I'm working on a <a href=""http://github.com/agrimm/chaser"" rel=""nofollow"">fork of a project</a> that uses Test::Unit::Autorunner and the like. They are part of the standard library in ruby 1.8, but aren't part of the standard library in 1.9.1, and is instead in the ""test-unit"" gem. I want to add a dependency that says that if someone's using ruby 1.9.1 or later, install the ""test-unit"" gem, but if they're using 1.8 or earlier, they don't need to install anything.</p>
","2988","","<p>You can't. You need to build two gems, one with</p>

<pre><code>spec.required_ruby_version = '~&gt; 1.8.6'
</code></pre>

<p>and one with</p>

<pre><code>spec.required_ruby_version = '~&gt; 1.9.1'
spec.add_dependency 'test-unit', '~&gt; 2.0.5'
</code></pre>
"
"<p>Perl has been one of my go-to programming language tools for years and years. Perl 6 grammars looks like a great language feature. I'd like to know if someone has started something like this for Ruby. </p>
","2988","","<p>No. And, since Perl6 grammars are a <em>language</em> feature, and Ruby doesn't allow the language to be extended, it is actually <em>impossible</em> to implement this in an ""addon"".</p>

<p>However, there are numerous libraries for Ruby which implement different kinds of Parsing or Grammar Systems. The standard library already contains <code>racc</code>, which is an LALR(1) parser generator (comparable to and somewhat compatible with the venerable <code>yacc</code>). Then there is the <a href=""http://AnTLR.Org/"" rel=""nofollow"">ANTLR</a> parser generator, which has a Ruby backend (although I am not sure whether that actually works).</p>

<p>The closest thing to Perl6 grammars in Ruby would be the <a href=""https://GitHub.Com/Aquasync/Ruby-OMeta/"" rel=""nofollow"">Ruby-OMeta project</a> (make sure to also take a look at <a href=""https://GitHub.Com/ZenSpider/Ruby-OMeta/"" rel=""nofollow"">Ryan Davis's fork</a>), which unfortunately ist still under development. (Or rather, no longer under active development.)</p>

<p>So, keeping to stuff that actually <em>exists</em>, I recommend you take a look at the <a href=""https://RubyForge.Org/projects/grammar/"" rel=""nofollow"">Grammar project</a> and <a href=""http://Treetop.RubyForge.Org/"" rel=""nofollow"">Treetop</a>.</p>
"
"<p>I recently used the &lt;&lt;- operator to output a multi-line string, this way...</p>

<pre><code>&lt;&lt;-form
  &lt;h1&gt;Name to say hi!&lt;/h1&gt;
  &lt;form method=""post""&gt;
    &lt;input type=""text"" name=""name""&gt;
    &lt;input type=""submit"" value=""send""&gt;
  &lt;/form&gt;
form
</code></pre>

<p>But I stole the &lt;&lt;- operator from some Open Source code, but I didn't find any documentation on it.</p>

<p>I kinda figured out that it works the same as in bash:</p>

<pre><code>$ cat &lt;&lt;EOF &gt;&gt; form.html
&gt; &lt;h1&gt;Name to say hi!&lt;/h1&gt;
&gt; &lt;form method=""post""&gt;
&gt;   &lt;input type=""text"" name=""name""&gt;
&gt;   &lt;input type=""submit"" value=""send""&gt;
&gt; &lt;/form&gt;
&gt; EOF
</code></pre>

<p>Does it works that way? I just wanna find documentation on it...</p>

<p>PS: My full example is a <a href=""http://gist.github.com/220852"" rel=""nofollow"">simple get/post Sinatra app</a></p>
","2988","","<p>The reason why you cannot find any documentation on the <code>&lt;&lt;-</code> operator is because it isn't an operator. It's literal syntax, like <code>'</code> or <code>""</code>.</p>

<p>Specifically, it's the <em>here document</em> syntax which is one of the many syntactic forms of string literals in Ruby. Ruby here documents are similar to POSIX <code>sh</code> here documents, but handling of whitespace removal is different: in POSIX <code>sh</code> here documents delimited by <code>&lt;&lt;-</code>, only leading <em>tabs</em> are removed, but they are removed from the <em>contents</em> of the string, whereas in Ruby <em>all</em> leading whitespace is removed, but only from the <em>delimiter</em>.</p>
"
"<p>Assuming we have the rule:</p>

<pre><code>a: b c d e
</code></pre>

<p>and <code>b</code>, <code>c</code>, <code>d</code> and <code>e</code> are independent of each other.</p>

<p>Is the order of making <code>b</code>, <code>c</code>, <code>d</code>, <code>e</code> defined? It seems that generally they will be made in order <code>b</code>, <code>c</code>, <code>d</code>, <code>e</code>, but may it sometimes happen, that the order will be different?</p>
","2988","","<p>No, the order is not defined. That is the whole <em>point</em> in using declarative dependency-oriented programming: that the computer can pick the optimal evaluation order, or in fact, evaluate them even <em>at the same time</em>.</p>
"
"<p>This is one of those things that you read once, say ""aha!"" and then forget. Exactly my case.</p>

<p>Why is the line-break tag in xhtml preferentially written with a space <code>&lt;br /&gt;</code> and not in the also ok format <code>&lt;br/&gt;</code> ? I remember the reason was interesting, and as you can imagine it's not easy to find with google.</p>

<p>For sure it's not an issue of xml well-formedness. From W3C</p>

<pre><code>[44]    EmptyElemTag	   ::=   	'&lt;' Name (S Attribute)* S? '/&gt;'	

   Empty-element tags may be used for any element which has no content, whether
   or not it is declared using the keyword EMPTY. For interoperability, the 
   empty-element tag should be used, and should only be used, for elements which 
   are declared EMPTY.

Examples of empty elements:

&lt;IMG align=""left""  src=""http://www.w3.org/Icons/WWW/w3c_home"" /&gt; 
&lt;br&gt;&lt;/br&gt; 
&lt;br/&gt;
</code></pre>

<p>So the space at the end is optional.</p>
","2988","","<p>For XHTML: both of them. For HTML4 and earlier: neither.</p>
"
"<p>Last week I successfully completed the transition of all our company applications from Ruby 1.8.6 to Ruby 1.8.7 including local and remote configurations.
From now on, development won't need to ensure backward-compatibility with Ruby 1.8.6.</p>

<p>For the sake of curiosity, I tried to run the test suite of a couple of projects against Ruby 1.9.1. As expected, I found some encoding-related issue but I was really shocked when I discovered low-level incompatibilities such as a Rack::Link known bug.
At this point, the idea of moving development to Ruby 1.9.1 is simply not applicable.</p>

<p>I was wondering if anyone has successfully deployed a Rails project with Ruby 1.9.1. Which Ruby version do you use for your Rails projects? Are you planning to upgrade to a more recent version?</p>
","2988","","<p><a href=""http://Gitorious.Org/"">Gitorious</a> is a pretty large and complex Rails project with a large number of users. Gitorious runs fine on both Ruby 1.8 and Ruby 1.9, but the biggest Gitorious installation, which is Gitorious.Org itself, has been running exclusively on Ruby 1.9 and YARV for quite some time now. (At least since May, I think.)</p>

<p>And the best part is of course that it is not only Open Source but a truly Open Project with open mailinglist, open bugtracker and open <a href=""http://Gitorious.Org/Gitorious/"">repository</a>, so that you can see <em>exactly</em> how they did it and how much work it was.</p>
"
"<p>I would like to show the user some help on specific operations in my program of the form:</p>

<p>Please type ""apt-get install foobar"" to install the foobar feature.</p>

<p>Is there anything to do this or do i have to leave it to the user and offer a dozend choices from Red Hat, Suse, Debian/Ubuntu, Mandriva, Slackware, Gentoo .... </p>
","2988","","<p>No, there is no generic way to find out which Linux distribution you are running on.</p>

<p>There is the <a href=""http://refspecs.linux-foundation.org/LSB%5F4.0.0/LSB-Core-generic/LSB-Core-generic/lsbrelease.html"" rel=""nofollow""><code>lsb_release</code></a> command, which is specified in the Linux Standard Base specification. But obviously this command is only present on LSB-compliant distributions, and many smaller or specialized distributions are <em>not</em> LSB-compliant. (For example, the distribution I am running on my FritzBox router is not.)</p>

<p>And if you are assuming an LSB-compliant distribution anyway, then why not simply package your application as an <a href=""http://refspecs.linux-foundation.org/LSB%5F4.0.0/LSB-Core-generic/LSB-Core-generic/packagefmt.html"" rel=""nofollow"">LSB package</a>? That way it works the same on <em>all</em> LSB-compliant distributions.</p>
"
"<p>I am looking for a binary diff tool which allows me to mask parts of the binary files so they won't be taken into account.</p>

<p>The challenge I am facing is the following: Once we finished actively developing a branch of our embedded software we put it into maintenance. This means it is still build once a week to ensure that it doesn't erode and is not buildable any more. This is necessary so that once we urgently need to fix a bug or add a little feature we can concentrate on this and not need to solve other problems as well.</p>

<p>With our current approach we know that the branch still builds without errors but we do not know whether the produced binaries are is still the same. So I thought comparing a “golden master”  binary against what was build and decide whether they are identical would be an approach to this. Anyhow, the files will never be identical to the bit because e.g. build dates are part of the binaries.</p>

<p>Does anyone have an idea or has even solved this puzzle before? I guess I am not the first developer facing this challenge.</p>

<p>Regards,
Mark</p>
","2988","","<p><a href=""http://LinuxFromScratch.Org/"" rel=""nofollow"">The Linux from Scratch project</a> ran into this problem when they were transitioning from Glibc 2.2 to Glibc 2.3, I think in 2001. They developed some scripts and techniques to reduce the amount of noise, but it was still <em>only</em> reducing the amount of noise. They still needed to manually inspect the remaining differences. Anyway, if you dig around the <a href=""http://WWW.LinuxFromScratch.Org/mail.html"" rel=""nofollow"">mailinglist archives</a> from around 2001 to 2003, you should find some pointers.</p>

<p>However, aren't you going at this the wrong way? I mean, the interesting question is not so much whether it still builds identical binaries, but rather whether it still <em>works</em>, isn't it? So, it is much more interesting whether it still passes the testsuite rather than whether it is still the same binary.</p>

<p>After all, nobody cares whether it is still the same binary, if there is no obversable difference in behavior. And if it's broken, then nobody is going to take ""Yes, I know, but it is broken exactly the same way it was last week, and I can prove it!"" as an excuse.</p>
"
"<p>To embed some IronPython Code into C# I want to use the ScriptEngine</p>

<pre><code>using IronPython.Hosting;
using Microsoft.Scripting.Hosting;
</code></pre>

<p>I found the reference for IronPython, but where is the necessary reference for Scripting.Hosting? I can't find it within VisualStudio 2008, targeting .Net 3.5. </p>
","2988","","<p><code>Microsoft.Scripting</code> is part of the <a href=""https://DLR.CodePlex.Com/"" rel=""nofollow"">Dynamic Language Runtime</a>. The Dynamic Language Runtime is part of .NET 4, <a href=""https://IronPython.CodePlex.Com/"" rel=""nofollow"">IronPython</a> and <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a> and is also available standalone.</p>

<p><a href=""http://WWW.IUnknown.Com/"" rel=""nofollow"">John Lam</a>, the lead developer of IronRuby, created a little library called <a href=""https://GitHub.Com/JFLam/Repl-Lib/"" rel=""nofollow""><em>repl-lib</em></a>, which implements a simple editor/REPL hybrid for IronRuby and IronPython which you can just drop into your application. <a href=""http://WWW.IUnknown.Com/2009/05/dynamic-languages-at-teched-2009.html"" rel=""nofollow"">In a blog post</a>, John Lam demonstrates how he used repl-lib to add scripting to the <a href=""http://WittyTwitter.GoogleCode.Com/"" rel=""nofollow"">Witty .NET Twitter client</a> in <a href=""https://Gist.GitHub.Com/113483/"" rel=""nofollow"">8(!) lines of code</a> (plus 90 or so lines of XAML for the REPL UI and the REPL button).</p>

<p>That blog post is based on <a href=""http://WWW.MSTechEd.Com/online/view.aspx?tid=37078878-b803-4496-904f-154771aaac81"" rel=""nofollow"">a presentation at TechEd 2009</a>, which I unfortunately don't have access to, but if you do, you should check it out.</p>

<p>Be sure to also check out the <a href=""https://GitHub.Com/JFLam/Repl-Lib/Network/"" rel=""nofollow"">forks of repl-lib</a>, especially <a href=""https://GitHub.Com/JRedville/Repl-Lib/"" rel=""nofollow"">Jim Deville's</a>.</p>
"
"<p>Our C++ application reads configuration data from XML files that look something like this: </p>

<pre><code>&lt;data&gt;
 &lt;value id=""FOO1"" name=""foo1"" size=""10"" description=""the foo"" ... /&gt;
 &lt;value id=""FOO2"" name=""foo2"" size=""10"" description=""the other foo"" ... /&gt;
 ...
 &lt;value id=""FOO300"" name=""foo300"" size=""10"" description=""the last foo"" ... /&gt;
&lt;/data&gt;
</code></pre>

<p>The complete application configuration consist of ~2500 of these XML files (which translates into more than 1.5 million key/value attribute pairs).  The XML files come from many different sources/teams and are validated against a schema.  However, sometimes the <code>&lt;value/&gt;</code> nodes look like this:</p>

<pre><code>&lt;value name=""bar1"" id=""BAR1"" description=""the bar"" size=""20"" ... /&gt;
</code></pre>

<p>or this:</p>

<pre><code>&lt;value id=""BAT1"" description=""the bat"" name=""bat1""  size=""25"" ... /&gt;
</code></pre>

<p>To make this process fast, we are using <a href=""http://expat.sourceforge.net/"">Expat</a> to parse the XML documents.  Expat exposes the attributes as an array - like this:</p>

<pre><code>void ExpatParser::StartElement(const XML_Char* name, const XML_Char** atts)
{
 // The attributes are stored in an array of XML_Char* where:
 //  the nth element is the 'key'
 //  the n+1 element is the value
 //  the final element is NULL
 for (int i = 0; atts[i]; i += 2) 
 {
  std::string key = atts[i];
  std::string value = atts[i + 1];
  ProcessAttribute (key, value);
 }
}
</code></pre>

<p>This puts all the responsibility onto our <code>ProcessAttribute()</code> function to read the 'key' and decide what to do with the value.  <strong>Profiling the app has shown that ~40% of the total XML Parsing time is dealing with these attributes by name/string.</strong> </p>

<p>The overall process could be sped up dramatically if I could guarantee/enforce the order of the attributes (for starters, no string comparisons in <code>ProcessAttribute()</code>).  For example, if 'id' attribute was <em>always</em> the 1st attribute we could deal with it directly:</p>

<pre><code>void ExpatParser::StartElement(const XML_Char* name, const XML_Char** atts)
{
 // The attributes are stored in an array of XML_Char* where:
 //  the nth element is the 'key'
 //  the n+1 element is the value
 //  the final element is NULL
 ProcessID (atts[1]);
 ProcessName (atts[3]);
 //etc.
}
</code></pre>

<p>According to the W3C schema specs, I can use <code>&lt;xs:sequence&gt;</code> in an XML schema to enforce the order of elements - but it doesn't seem to work for attributes - or perhaps I'm using it incorrectly:</p>

<pre><code>&lt;xs:element name=""data""&gt;
 &lt;xs:complexType&gt;
  &lt;xs:sequence&gt;
   &lt;xs:element name=""value"" type=""value_type"" minOccurs=""1"" maxOccurs=""unbounded"" /&gt;
  &lt;/xs:sequence&gt;
 &lt;/xs:complexType&gt;
&lt;/xs:element&gt;

&lt;xs:complexType name=""value_type""&gt;
 &lt;!-- This doesn't work --&gt;
 &lt;xs:sequence&gt;
  &lt;xs:attribute name=""id"" type=""xs:string"" /&gt;
  &lt;xs:attribute name=""name"" type=""xs:string"" /&gt;
  &lt;xs:attribute name=""description"" type=""xs:string"" /&gt;
 &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;
</code></pre>

<p>Is there a way to enforce attribute order in an XML document?  If the answer is ""no"" - could anyone perhaps suggest a alternative that wouldn't carry a huge runtime performance penalty?</p>
","2988","","<p>XML attributes don't <em>have</em> an order, therefore there is no order to enforce.</p>

<p>If you want something ordered, you need XML elements. Or something different from XML. JSON, YAML and bEncode, e.g. have both maps (which are unordered) and sequences (which are ordered).</p>
"
"<p>I love the Google Project Hosting web app. It includes bug tracking, wiki and SCM in one interface. (Example: <a href=""http://code.google.com/p/n2markdowneditors/"">WMD Editor</a>)</p>

<p>This solution is closed source and not for sale. While searching similar solutions I found <a href=""http://trac.edgewall.org/"">Trac</a> which has a rougher interface.</p>

<p>Could you list similar solutions?</p>

<p><a href=""http://stackoverflow.com/questions/1170831/distributed-revision-control-wiki-and-bug-tracking-all-in-one"">Someone asked the same question, but specified Git as the SCM.</a></p>
","2988","","<p>[EDIT] Since I wrote this answer, an exciting new fully-integrated distributed project management software has hit 1.0: <a href=""http://Veracity-SCM.Com/"">Veracity</a> by SourceGear.</p>

<hr>

<p><a href=""http://Fossil-SCM.Org/"">Fossil-SCM</a> is a nice distributed SCM, where ""SCM"" has the <em>original</em> meaning of ""Software Configuration Management"" and not the new diluted meaning of ""Source Code Management"".</p>

<p>What this means is that Fossil integrates distributed version control, distributed bug tracking and distributed wiki into one repository. Not one <em>UI</em>, like, say, Trac but one <em>single repository</em>.</p>

<p>So, if you clone a Fossil repository, you do not just get the latest version of the source code plus all its history, like you would get with Git, Mercurial, Bazaar, Monotone, Darcs or any other version control system, you <em>also</em> get the current bug database plus all its history and the current wiki plus all its history.</p>

<p>Fossil is written by D. Richard Hipp, who is not only the author of SQLite but also CVSTrac (the precursor of Trac). So, you <em>know</em> it's gotta be good.</p>

<p>If you want to see an example of Fossil in action, just the follow the link I posted: Fossil is hosted in Fossil itself and the Fossil homepage is actually just the Fossil repository itself.</p>

<p>BTW: even if you don't end up using Fossil, just spend some time learning its concepts. It's a rather brilliant design, and you're probably going to learn something which you can apply even if you are using Trac, Git, Instiki or whatever.</p>
"
"<p>I have a (Windows) GIT repository in a folder called <strong>XXX</strong>, and I have second GIT repository called <strong>YYY</strong>.</p>

<p>I want to import the <strong>XXX</strong> repository into the <strong>YYY</strong> repository, add all <strong>XXX</strong>'s change history to <strong>YYY</strong>, and rename <strong>XXX</strong> to <strong>ZZZ</strong>.</p>

<p>Folder structure before:</p>

<pre><code>XXX
 |- .git
 |-  ZZZ
</code></pre>

<p>Folder structure after:</p>

<pre><code>YYY
 |- .git  &lt;-- This now contains the change history from XXX
 |-  ZZZ  &lt;-- This was originally XXX
 |-  (other folders)
</code></pre>

<p>Can this be done, or must I resort to using sub-modules?</p>
","2988","","<p>There is a well-known instance of this in the Git repository itself, which is collectively known in the Git community as ""<a href=""http://Thread.GMANE.Org/gmane.comp.version-control.git/5126/"">the coolest merge ever</a>"" (after the subject line Linus Torvalds used in the e-mail to the Git mailinglist which describes this merge). In this case, the <code>gitk</code> Git GUI which now is part of Git proper, actually used to be a seperate project. Linus managed to merge that repository into the Git repository in a way that </p>

<ul>
<li>it appears in the Git repository as if it had always been developed as part of Git, </li>
<li>all the history is kept intact and </li>
<li>it can still be developed independently in its old repository, with changes simply being <code>git pull</code>ed.</li>
</ul>

<p>The e-mail contains the steps needed to reproduce, but it is not for the faint of heart: first, Linus <em>wrote</em> Git, so he probably knows a bit more about it than you or me, and second, this was almost 5 years ago and Git has improved <em>considerably</em> since then, so maybe it is now much easier.</p>

<p>In particular, I guess nowadays one would use a gitk submodule, in that specific case.</p>
"
"<p>I have a lot of APIs/Classes that I have developed in Ruby and Python that I would like to use in my .NET apps. Is it possible to instantiate a Ruby or Python Object in C# and call its methods?</p>

<p>It seems that libraries like IronPython do the opposite of this. Meaning, they allow Python to utilize .NET objects, but not the reciprocal of this which is what I am looking for... Am I missing something here?</p>

<p>Any ideas?</p>
","2988","","<p>This is one of the two things that the <a href=""http://DLR.CodePlex.Com/"">Dynamic Language Runtime</a> is supposed to do: everybody thinks that the DLR is only for language implementors to make it easier to implement dynamic languages on the CLI. But, it is also for application writers, to make it easier to host dynamic languages in their applications.</p>

<p>Before the DLR, every language had their own hosting API. Now, the DLR has a <a href=""http://DLR.CodePlex.Com/wikipage?title=Docs%20and%20specs"">standardized hosting specification</a> that works the same for <em>every</em> language, and with support for dynamically typed objects in C# 4 and VB.NET 10, it gets easier than ever:</p>

<pre><code>// MethodMissingDemo.cs
using System;
using IronRuby;

class Program
{
	static void Main()
	{
		var rubyEngine = Ruby.CreateEngine();
		rubyEngine.ExecuteFile(""method_missing_demo.rb"");
		dynamic globals = rubyEngine.Runtime.Globals;

		dynamic methodMissingDemo = globals.MethodMissingDemo.@new();

		Console.WriteLine(methodMissingDemo.HelloDynamicWorld());

		methodMissingDemo.print_all(args);
	}
}

# method_missing_demo.rb
class MethodMissingDemo
  def print_all(args)
    args.map {|arg| puts arg}
  end

  def method_missing(name, *args)
    name.to_s.gsub(/([[:lower:]\d])([[:upper:]])/,'\1 \2')
  end
end
</code></pre>

<p>Here you see stuff getting passed around in every possible direction. The C# code is calling a method on the Ruby object <em>which doesn't even exist</em> and the Ruby code is iterating over a .NET array and printing its contents to the console.</p>
"
"<p>Is it possible to create binaries of other platform on Linux? Say I have a program that can be compiled using gcc to <code>.o</code> file but can we use it to output <code>exe</code> that can be run on windows ?</p>
","2988","","<p>Sure. If you have a compiler that can produce Windows binaries, it doesn't matter what system the compiler is running on.</p>

<p>A lot of Windows binaries for Unix-centric Open Source Projects are produced without anyone ever running Windows. E.g. <a href=""https://GitHub.Com/LuisLavena/Rake-Compiler/"" rel=""nofollow"">Rake-Compiler</a> is a project for building binary extensions for the MRI and YARV Ruby implementations. One of the main objectives of Rake-Compiler is that extension writers can publish extensions for Windows from Linux or OSX.</p>
"
"<p>I began reading the book ""Code Complete"" 2nd edition, but stopped reading when I noticed most of the solutions were easily solvable in Ruby with Ruby idioms. Is there a similar book for Ruby?</p>

<p>Here's the version that I started reading:</p>

<p><a href=""http://rads.stackoverflow.com/amzn/click/0735619670"">http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670</a></p>
","2988","","<p>For such an old programming language (well, maybe not ""Lisp"" old, but Ruby is older than Java, after all) and a community that fanatic about code quality, style and beauty, the Ruby book market is surprisingly light on ""higher level"" books.</p>

<p>There are several reasons for this: a lot of Rubyists are already seasoned Smalltalk or Lisp programmers when they pick up Ruby, so they don't need those books. And Ruby and Smalltalk are similar enough that you can just read a Smalltalk book instead. (For example, you can pretty much read <a href=""http://Stephane.Ducasse.Free.Fr/FreeBooks/"" rel=""nofollow"">Stéphane Ducasse's list of free Smalltalk books</a> from top to bottom.) The same goes for Perl.</p>

<p>Until very recently, the best higher level Ruby book was basically <a href=""http://C2.Com/cgi/wiki?SmalltalkBestPracticePatterns"" rel=""nofollow""><em>Smalltalk Best Practice Patterns</em></a> by <a href=""http://ThreeRiversInstitute.Org/"" rel=""nofollow"">Kent Beck</a>. (There is a newer version of this book, called <a href=""http://Amazon.Com/dp/0321413091/"" rel=""nofollow""><em>Implementation Patterns</em></a> which uses Java instead of Smalltalk. However, since Kent's Java style is very Smalltalk-ish, it is essentially SBPP, 2nd Ed.) However, since then, several higher level books have been released or are in the works:</p>

<ul>
<li><a href=""http://DesignPatternsInRuby.Com/"" rel=""nofollow""><em>Design Patterns in Ruby</em></a> by <a href=""http://RussOlsen.Com/"" rel=""nofollow"">Russ Olsen</a>, </li>
<li><a href=""http://RubyBestPractices.Com/"" rel=""nofollow""><em>Ruby Best Practices</em></a> by <a href=""http://Twitter.Com/seacreature/"" rel=""nofollow"">Gregory T. Brown</a>, </li>
<li><a href=""http://Amazon.Com/dp/0321603508/"" rel=""nofollow""><em>Refactoring: Ruby Edition</em></a> by <a href=""http://JayFields.Com/"" rel=""nofollow"">Jay Fields</a>, <a href=""http://ShaneHarvie.Com/"" rel=""nofollow"">Shane Harvie</a>, <a href=""http://MartinFowler.Com/"" rel=""nofollow"">Martin Fowler</a> and Kent Beck (a re-interpretation of Fowler's book in Ruby) and </li>
<li><a href=""http://ReinH.Com/"" rel=""nofollow"">Rein Henrichs</a> is (or at least was, as of last year) working on <em>Ruby Best Practice Patterns</em>.</li>
</ul>
"
"<p>I would like to write a Ruby program which can parse three separate text files, each containing different delimiters, then sort them according to certain criteria. </p>

<p>Can someone please point me in the right direction? </p>
","2988","","<p>If by ""text files with delimiters"" you mean CSV files (character seperated values), then you can use the <a href=""http://Ruby-Doc.Org/stdlib/libdoc/csv/rdoc/"" rel=""nofollow""><code>csv</code> library</a>, which is part of the standard library, to parse them. CSV gives you objects that look and feel like Ruby <code>Hash</code>es and <code>Array</code>s, so you can use all the standard Ruby methods for sorting, filtering and iterating, including the aforementioned <code>Enumerable#sort_by</code>.</p>
"
"<p>I've been looking on <a href=""http://golang.org/"">golang.org</a> for a Windows compiler, but I can't seem to find it. I can only see Linux and OS X compilers. Does anyone know if Go programming can be done on Windows, or is it something that Google hasn't implemented yet?</p>

<p>Update: appears that as of now (Nov. 2012) <a href=""http://golang.org/"">golang.org</a> has official binary releases for windows 32/x86_64.</p>
","2988","","<p>Despite the fact that Go is only two days old, this question has <em>already</em> become a FAQ on the Go mailinglist. (Unfortunately, it has not yet been added to the FAQ list on the website.)</p>

<p>Basically, Go is done by a very small group of people, so they simply do not have the time nor the resources to do a Windows port. That very small group of people also happens to be the people who invented Unix, so that was kind of a natural first target.</p>
"
"<p>I <a href=""http://github.com/softcraft-development/sprint/blob/master/lib/sprint.rb"" rel=""nofollow"">have a class</a> which exposes a string value and an int value (a command output and exit code respectively). In addition to exposing them through <code>to_s</code> and <code>to_i</code>, I'm also using <code>to_str</code> and <code>to_int</code>, like so:</p>

<pre><code>class Status
  def to_s
    @output
  end
  alias :to_str :to_s

  def to_i
    @status.exitstatus
  end
  alias :to_int :to_i
end
</code></pre>

<p>My idea behind this is to be able to use this object in as many situations as possible. having it coerceable to a string or int increases that usability. For instance, I can concatenate the object with a string:</p>

<pre><code>a_string = ""Output was: "" + results
</code></pre>

<p>(I wanted to use this as an example of int coercion, but Fixnum.+ doesn't like it, so it doesn't actually work:)</p>

<pre><code>an_int = 1 + results
</code></pre>

<p>Everything I've read so far has said that this is probably a ""bad"" thing to do. The common theme goes like this: ""Use <code>to_s</code>/<code>to_i</code> when your object can be represented as a string/int, but <code>to_str</code>/<code>to_int</code> only if your object <em>is fundamentally</em> a string/int"".</p>

<p>There's no question that my class is not ""fundamentally"" a string or an int. However
I have some problems with this rule:</p>

<ol>
<li>It makes my class less flexible/usable. For example: I couldn't use String.+ to concatenate the Status output with the other string if I didn't have Status.to_str.</li>
<li>It seems to violate the spirit of duck-typing. The user of an object (ie: a method that gets it as a parameter) shouldn't care what that object <em>is</em>, it should only care what it can <em>do</em>. (In this case, ""do"" means ""can be represented as a string/int"".)</li>
<li>The arguments for ""is fundamentally a string/int"" are pretty fuzzy to me. For example, you'll see that <code>Float.to_int</code> is mentioned a lot. The story goes that since a floating-point number always has an integer component, <code>to_int</code> is a valid method. However, I think this is spurious: a Float is <em>not</em> an integer (as it has a non-integer component) and so trying to equate their ""typeness"" doesn't make much sense. You can legitimately <em>convert</em> a Float to an integer (through truncation), but then I can say that I can <em>convert</em> my Status to an integer as well (by ""truncating"" all of the non-exit-code information).</li>
</ol>

<p>So, my question is: <em>is there any real (ie: practical) harm</em> in implementing <code>to_str</code> and <code>to_int</code>?</p>

<p><hr></p>

<p>Update: Jörg W Mittag gave an example that made me thing of something. To rephrase the question: is there really a need to have <code>to_str</code>/<code>to_int</code> when you already have <code>to_s</code>/<code>to_i</code>? (Besides the fact that particular methods are already expecting <code>to_str</code> over <code>to_s</code>)</p>

<p>For instance, in Jörg's Array.join example, the array members are converted via to_s while the separator is converted via to_str. But is this really necessary? If Array.join called separator.to_s instead, then you could successfully pass many more objects to it (ex: Integers, Symbols, etc) and gain that much more flexibility. Does Ruby benefit from having this separation?</p>
","2988","","<blockquote>
  <p>It makes my class less flexible/usable. For example: I couldn't use <code>String#+</code> to concatenate the Status output with the other string if I didn't have <code>Status#to_str</code>.</p>
</blockquote>

<p>This is a bad example, because concatenating strings is unidiomatic Ruby. String interpolation is the preferred way:</p>

<pre><code>a_string = ""Output was: #{results}""
</code></pre>

<p>And this <em>just works</em>&trade;, because string interpolation actually calls <code>to_s</code> on the result of the interpolated expression.</p>

<blockquote>
  <p>It seems to violate the spirit of duck-typing. The user of an object (ie: a method that gets it as a parameter) shouldn't care what that object <em>is</em>, it should only care what it can <em>do</em>. (In this case, ""do"" means ""can be represented as a string/int"".)</p>
</blockquote>

<p>I would argue that ""can be represented as a string/int"" isn't really behavior. IOW: ""what the object can do"" is about interesting behavior in a certain context, and ""can be represented as a string/int"" isn't really interesting behavior.</p>

<p>If you say that ""Status IS-A Integer"" (which is essentially what <code>to_int</code> means), then it follows that you can, for example, do arithmetic with it. But what does it even <em>mean</em> to ""add 42 to <em>file not found</em>""? What is the logarithm of success? What is the square root of failure?</p>

<p>In the above string interpolation example, the interesting behavior is ""can be displayed"". And that is basically indicated by implementing <code>#to_s</code>. Concatenating two strings, OTOH, requires, well, two strings.</p>

<blockquote>
  <p>The arguments for ""is fundamentally a string/int"" are pretty fuzzy to me. For example, you'll see that <code>Float#to_int</code> is mentioned a lot. The story goes that since a floating-point number always has an integer component, <code>to_int</code> is a valid method. However, I think this is spurious: a Float is <em>not</em> an integer (as it has a non-integer component) and so trying to equate their ""typeness"" doesn't make much sense. You can legitimately <em>convert</em> a Float to an integer (through truncation), but then I can say that I can <em>convert</em> my Status to an integer as well (by ""truncating"" all of the non-exit-code information).</p>
</blockquote>

<p>Again, this is a rather weak argument, because I actually agree with you: that's wrong.</p>

<p>In German Law, we have a principle which is hard to grasp and un-inituitive, but which I think applies here perfectly. It is called ""Keine Gleichheit im Unrecht"" (No Equality in Wrongness). It means that the basic right of Equaliy, which is granted in the Constitution, only applies <em>within</em> the Law. To put it another way: OJ doesn't make murder legal.</p>

<p>So, just because there is crap code in the Ruby core library (and believe me, there is a <em>lot</em>), doesn't mean you get to write crap, too :-)</p>

<p>In this particular case, <code>Float#to_int</code> is just plain wrong and shouldn't exist. <code>Float</code> <em>is not</em> a subtype of <code>Integer</code>. At first glance, the opposite seems to be true, i.e. <code>Integer#to_float</code> is valid, but actually that's not true, either: in Ruby, <code>Integer</code>s have arbitrary precision, but <code>Float</code>s have fixed precision. It <em>would</em> be valid to implement <code>Fixnum#to_float</code>, but that would be a bad idea, since <code>Integer</code>s can magically convert from <code>Fixnum</code> to <code>BigInteger</code> and back, and thus the <code>#to_float</code> method would ""magically"" appear and vanish.</p>

<p>The thing that finally helped <em>me</em> understand the difference between <code>to_x</code> and <code>to_xyz</code> was <code>Array#join</code>: it prints out the elements of the array, separated by a separator object. It does this by calling <code>to_s</code> on each element of the array and <code>to_str</code> on the separator. Once you understand <em>why</em> it calls <code>to_s</code> on one and <code>to_str</code> on the other, you're basically set.</p>

<p>(Although your comments on <code>Float#to_int</code> already indicate that you <em>do</em> understand.)</p>

<hr>

<p>Side note: for double dispatch in an algebraic context, Ruby actually uses the <code>#coerce</code> protocol. So, if you wanted the <code>1 + a_status</code> example to work, you would need to implement <code>Status#coerce</code>. But, please don't.</p>
"
"<p>Apparently, when you move a function from one source code file to another, the git revision log (for the new file) can show you where that code fragment was originally coming from (see for example the Viewing History section in <a href=""http://nathanj.github.com/gitguide/tour.html"">this tutorial</a>).</p>

<p>How does this work?</p>
","2988","","<p>It doesn't track them. That's the beauty of it.</p>

<p>Git only records snapshots of the entire project tree: here's what <em>all files</em> looked like before the commit and here's how they look like after. <em>How</em> we got from here to there, Git doesn't care.</p>

<p>This allows intelligent tools to be written <em>after</em> a commit has already happened, to extract information from that commit. For example, rename detection in Git is done by comparing all deleted files against all new files and comparing pairwise similarity metrics. If the similarity metric is greater than <code>x</code>, they are considered renamed, if it is between <code>y</code> and <code>x</code> (<code>y &lt; x</code>), it is considered to be a rename+edit, and if it is below <code>y</code>, they are considered independent. The cool thing is that you, as a ""commit archaeologist"", can specify after the fact, what <code>x</code> and <code>y</code> should be. This would not work if the commit simply recorded ""this file is a rename of that file"".</p>

<p>Detecting moved content works similar: you slice every file into pieces, compute similarity metrics between all the slices and can then deduce that this slice which was deleted over here and this very similar slice which was added over there are actually the same slice that was moved from here to there.</p>

<p>However, as tonfa mentioned in his answer, this is <em>very</em> expensive, so it is not normally done. But it <em>could</em> be done, and that's the point.</p>

<p>BTW: this is pretty much the exact opposite of the Operational Transformation model used by Google Wave, EtherPad, Gobby, SubEthaEdit, ACE and Co.</p>
"
"<p>Can anyone please provide me in layman's terms the difference between developing a JRuby and a Ruby, Rails application?</p>

<p>I use NetBeans as my Ruby on Rails IDE and every-time I create a project is asks me that question - and I don't really get the difference.  Are there any pro and cons?</p>
","2988","","<p>Ruby is a programming language. JRuby is an implementation of the Ruby programming language.</p>

<p>Asking about the difference between the two doesn't really make sense: they are on two entirely different levels of abstraction.</p>

<p>It's similar to asking what is the difference between a car and a Prius. It doesn't make sense, either: a Prius an implementation of the general concept of a car. You could ask what's the difference between a Prius and a Hummer or the difference between a car and an aeroplane, but the difference between a car and a Prius doesn't make sense.</p>

<p>Similarly, with Ruby, you could ask about the difference between Ruby and Python or JRuby and MRI, but the difference between Ruby and JRuby doesn't make sense.</p>
"
"<p>In other o/s RSpec returns nicely coloured results (red, green etc).</p>

<p>However in the windows (Vista) command prompt my text output is just plain old boring white.</p>

<p>How can I bring colour to my RSpec test results?</p>

<p>Thanks</p>

<p>Evolve</p>
","2988","","<p>You need to install the <code>win32console</code> gem. BTW: which version of RSpec are you using? Every single version of RSpec I have ever used, actually prints out</p>

<pre><code>You must 'gem install win32console' to use colour on Windows
</code></pre>

<p>when you try to colorize output.</p>
"
"<p>I just helped a friend to set up a Github account to collaborate on my project. His commits come through, but for some reason on the ""Source"" page of my repository next to his commit is only his name and not his username (with a link).</p>

<p>It seems strange, since Github obviously recognizes him (I added him to the list of collaborators etc.</p>

<p>Seems like a stupid question, but Google couldn't help.</p>

<p>Thanks!</p>
","2988","","<p>Does your friend have the e-mail address he is using for his commits correctly set up as an alias in GitHub? Otherwise, how is GitHub to know who he is? Git itself only records the full name and the e-mail address and obviously not the GitHub username, since you can use Git perfectly fine without GitHub.</p>

<p>Please note that StackOverflow is not the GitHub support forum. There are better places for questions like this, like, say, the GitHub support forum.</p>
"
"<p>I am quite new to ruby but enjoying it so far quite immensely.  There are some things that have given me some trouble and the following is no exception.</p>

<p>What I am trying to do here is create a sort of 'super-directory' by sub-classing 'Dir'.  I've added a method called 'subdirs' that is designed to list the directory object's files and push them into an array if the file is a directory itself.  The issue is, the results from my test (File.directory?) is strange - here is my method code:</p>

<pre><code>  def subdirs
    subdirs = Array.new
    self.each do |x|
      puts ""Evaluating file: #{x}""
      if File.directory?(x)
        puts ""This file (#{x}) was considered a directory by File.directory?""
        subdirs.push(x)
        #yield(x) if block_given?
      end
    end
    return subdirs
  end
</code></pre>

<p>And strangely, even though there are plenty of directories in the directory I've chosen (""/tmp"") - the result of this call only lists ""."" and ""..""</p>

<pre><code>puts ""Testing new Directory custom class: FileOps/DirClass""

nd   = Directory.new(""/tmp"")
subs = nd.subdirs
</code></pre>

<p>And the results:</p>

<pre><code>Evaluating file: mapping-root
Evaluating file: orbit-jvxml
Evaluating file: custom-directory
Evaluating file: keyring-9x4JhZ
Evaluating file: orbit-root
Evaluating file: .
This file (.) was considered a directory by File.directory?
Evaluating file: .gdmFDB11U
Evaluating file: .X0-lock
Evaluating file: hsperfdata_mishii
Evaluating file: .X11-unix
Evaluating file: .gdm_socket
Evaluating file: ..
This file (..) was considered a directory by File.directory?
Evaluating file: .font-unix
Evaluating file: .ICE-unix
Evaluating file: ssh-eqOnXK2441
Evaluating file: vesystems-package
Evaluating file: mapping-jvxml
Evaluating file: hsperfdata_tomcat
</code></pre>
","2988","","<p>Mark Westling has already answered your immediate question, but since you mention you are new to Ruby, here are a couple of other style suggestions:</p>

<pre><code>def subdirs
  subdirs = Array.new
</code></pre>

<p>It is generally preferred to use literal syntax where possible, so the common way to express this would be <code>subdirs = []</code>.</p>

<pre><code>  self.each do |x|
</code></pre>

<p><code>self</code> is the implicit receiver in Ruby, so you can just leave it off. (This is not Python, after all.) However, the primary purpose of code is communication, so if you believe, this communicates your intent better, leave it in.</p>

<p>Speaking of communication: <code>x</code> is not a terribly communicative name, unless you are talking about points in a cartesian coordinate system. How about <code>file</code>, or if you are uncomfortable with the Unix notion that directories are also files, the more neutral <code>entry</code>? (Actually, the best one would probably be <code>path</code>, but we will see soon how that might become confusing.)</p>

<p>My third suggestion is actually personal preference that is contrary to common Ruby style: common Ruby style dictates that one-line blocks are delimited with <code>{</code>/<code>}</code> and multiline blocks are delimited with <code>do</code>/<code>end</code>, just like you did. I don't like that, because it is an arbitrary distinction that doesn't convey any <em>meaning</em>. (Remember that ""communication"" thing?) So, I actually do things differently: if the block is imperative in nature and, for example, changes some global state, I use the keywords (because the block is actually <code>do</code>ing some work) and if the block is functional in nature and just returns a new object, I prefer to use braces (because they look nicely mathematical). So, in this case, I would use braces.</p>

<pre><code>    if File.directory?(x)
</code></pre>

<p>As Mark already explained, you need to do something like <code>File.directory?(File.join(path, entry))</code> here, where <code>Dir#path</code> is a public attribute of the <code>Dir</code> class returning the path that <code>Dir.new</code> was initialized with.</p>

<p>Here you also see, why we didn't use <code>path</code> as the name of the block parameter. Otherwise we would need to write <code>File.directory?(File.join(self.path, path))</code>.</p>

<pre><code>      subdirs.push(x)
</code></pre>

<p>The canonical way to append an element to an array, or indeed append pretty much anything to anything in Ruby, is the <code>&lt;&lt;</code> operator. So, this should read <code>subdirs &lt;&lt; entry</code>.</p>

<p><code>Array#push</code> is an alias of <code>Array#&lt;&lt;</code>, which is mainly intended to let you use an <code>Array</code> as a stack (in conjunction with <code>Array#pop</code>).</p>

<pre><code>    end
  end
  return subdirs
</code></pre>

<p>Here is another disconnect between my personal style and common Ruby style: in Ruby, if there is no explicit <code>return</code>, the return value is simply the value of the last expression. This means, you can leave off the <code>return</code> keyword and common Ruby style says you should. I, however, prefer to use this similar to the block delimiters: use <code>return</code> for methods that are functional in nature (because they actually ""return"" a value) and no <code>return</code> for imperative methods (because their <em>real</em> return value is not what comes after the <code>return</code> keyword, but what side-effects they have on the environment). So, like you, I would use a <code>return</code> keyword here, despite common style.</p>

<p>It is also customary, to seperate the return value from the rest of the method body by a blank line. (The same goes for setup code, by the way.)</p>

<pre><code>end
</code></pre>

<p>So, this is where we stand right now:</p>

<pre><code>def subdirs
  subdirs = []

  each { |entry|
    if File.directory?(File.join(path, entry))
      subdirs &lt;&lt; entry
    end
  }

  return subdirs
end
</code></pre>

<p>As you can see, the <code>if</code> expression really only serves to skip one iteration of the loop. This is much better communicated by using the <code>next</code> keyword:</p>

<pre><code>def subdirs
  subdirs = []

  each { |entry|
    next  unless File.directory?(File.join(path, entry))
    subdirs &lt;&lt; entry
  }

  return subdirs
end
</code></pre>

<p>As you can see, we managed to remove one level of nesting from the block structure, which is always a good sign.</p>

<p>This idiom is called a ""guard clause"", and is quite popular in functional programming, where a lot of languages even have guard constructs built in, but it is also used heavily in pretty much any other language on the planet, because it greatly simplifies control flow: the idea is analogous to a guard posted outside a castle: instead of letting the bad guys into the castle (method, procedure, function, block, ...) and then painfully trying to track their every move and constantly being afraid to miss something or lose them, you simply post a guard at the <em>entrance</em> of your castle (the beginning of your method, block, ...) who doesn't let them in to begin with (which jumps to the end of the procedure, returns early from the method, skips one iteration of the loop, ...). In Ruby, you can use <code>raise</code>, <code>return</code>, <code>next</code> and <code>break</code> for this. In other languages, even <code>GOTO</code> is fine (this is one of those rare cases, where a <code>GOTO</code> can actually <em>clear up</em> control flow).</p>

<p>However, we can simplify this even further, by recognizing the iterator pattern: you take a list (the directory entries) and then you ""squash"" that list down to a single object (the <code>subdirs</code> array). To a category theorist, this screams ""catamorphism"", to a hardcore functional programmer ""<code>fold</code>"", to a softcore functional programmer ""<code>reduce</code>"", to a Smalltalk programmer ""<code>inject:into:</code>"" and to a Rubyist ""<code>Enumerable#inject</code>"":</p>

<pre><code>def subdirs
  return inject([]) { |subdirs, entry|
    next subdirs  unless File.directory?(File.join(path, entry))
    subdirs &lt;&lt; entry
  }
end
</code></pre>

<p><code>inject</code> uses the return value of the previous iteration to seed the next one, that's why we have to return <code>subdirs</code>, even if we are skipping an iteration, by using <code>next subdirs</code> instead of plain <code>next</code> (which would return <code>nil</code>, so that on the next iteration <code>subdirs</code> would be <code>nil</code> and <code>subdirs &lt;&lt; entry</code> would raise a <code>NoMethodError</code>.)</p>

<p>(Notice that I used curly braces for the block, even though the block actually modifies its argument. I feel this is still a ""functional"" block, though. YMMV.)</p>

<p>The last thing we can do is to recognize that what we are doing is just filtering (or in other words ""selecting"") elements of an array. And Ruby already has a method built in, which does exactly that: <code>Enumerable#select</code>. Witness the single-line awesomeness that using the full power of Ruby generates:</p>

<pre><code>def subdirs
  return select { |entry| File.directory?(File.join(path, entry)) }
end
</code></pre>

<p>As a general tip: learn the wonders of <code>Enumerable</code>. It is <em>the</em> workhorse of Ruby programming, similar to <code>IEnumerable&lt;T&gt;</code> in .NET, <code>dict</code>s in Python, lists in functional languages or associative arrays in PHP and Perl.</p>
"
"<p>I'm sure it's a silly question to those who know, but I can't find an explanation of what it does or what it is.</p>

<pre><code>CSV.open('data.csv', 'r') do |row|
  p row
end
</code></pre>

<p>What does ""<code>p row</code>"" do?</p>
","2988","","<p><code>Kernel#p</code> is the little debugging brother of <code>Kernel#puts</code>: it more or less works exactly like it, but it converts its arguments using <code>#inspect</code> instead of <code>#to_s</code>.</p>

<p>The reason why it has such a cryptic name is so that you can quickly throw it into an expression and take it out again when debugging. (I guess it's a lot less useful now that Ruby is getting better and better ""proper"" debugging support.)</p>

<p>Some alternatives to <code>Kernel#p</code> are <code>Kernel#pp</code> (pretty print) from the <code>pp</code> standard library and <code>Kernel#y</code> (YAML) from the <code>yaml</code> standard library.</p>
"
"<p>In Ruby, I have a string of identical characters -- let's say they're all exclamation points, as in <code>!!!!</code>. I would like to replace the characters at certain indices with '*' if the integer corresponding to that index meets some criteria.</p>

<p>For example, let's say I want to replace all the characters whose indices are even numbers and are greater than 3. In the string <code>!!!!!!!!</code> (8 characters long), that results in <code>!!!!*!*!</code> (indices 4 and 6 have been replaced).</p>

<p>What's the most compact way to do this?</p>
","2988","","<p>For those of you who, like me, are obsessed with the endless possibilities that chained enumerators give us:</p>

<pre><code>str = '!!!!!!!!'
res = '!!!!*!*!'

str.replace(str.chars.with_index.inject('') { |s, (c, i)|
  next s &lt;&lt; c unless i%2 == 0 &amp;&amp; i &gt; 3
  s &lt;&lt; '*'
})

require 'test/unit'
class TestStringReplacement &lt; Test::Unit::TestCase
  def test_that_it_replaces_chars_at_even_indices_greater_than_3_with_asterisk
    assert_equal res, str
  end
end
</code></pre>
"
"<p>What is the best way to get the day of the year for any specific date in Ruby?</p>

<p>For example: <code>31/dec/2009</code> should return <code>day 365</code>, and <code>01/feb/2008</code> should return <code>day 32</code></p>
","2988","","<p><a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Date.html#M001460"" rel=""nofollow""><code>Date#yday</code></a> is what you are looking for.</p>

<p>Here's an example:</p>

<pre><code>require 'date'

require 'test/unit'
class TestDateYday &lt; Test::Unit::TestCase
  def test_that_december_31st_of_2009_is_the_365th_day_of_the_year
    assert_equal 365, Date.civil(2009, 12, 31).yday
  end
  def test_that_february_1st_of_2008_is_the_32nd_day_of_the_year
    assert_equal 32, Date.civil(2008, 2, 1).yday
  end
  def test_that_march_1st_of_2008_is_the_61st_day_of_the_year
    assert_equal 61, Date.civil(2008, 3, 1).yday
  end
end
</code></pre>
"
"<p>I'm at the point in learning Ruby where I'd like to look at some small-ish libraries' source code to see how they were built. I do not know what is considered a small library but was hoping SO could recommend some easy-to-understand libraries to study.</p>

<p>So if anyone knows a very tiny library or two that's a good example for novice Rubyists to study, please recommend!</p>

<p>I wanted to use <a href=""http://github.com/manveru/innate"" rel=""nofollow"">Manveru's Innate</a> lib because it tries to stay under 2000 LOC but I'm not yet familiar with the Ruby shorthand that is used so much within it.</p>

<p>Maybe some ~100 - ~500 LOC libs would be better for me? Thank you.</p>
","2988","","<p><a href=""http://Blog.ZenSpider.Com/"" rel=""nofollow"">Ryan ""ZenSpider"" Davis</a>'s stuff is always interesting. It is however, not entirely suited for beginners. On the one hand, Ryan is absolutely fanatical about keeping things, simple, short and clean, which helps understandability quite a bit. On the other hand, he <em>does</em> use pretty much all of Ruby's power to achieve that.</p>

<p>One of the most amazing examples of his work, is MiniTest, the new testing framework which replaces Test::Unit in the Ruby 1.9 standard library. It contains a <a href=""http://BFTS.RubyForge.Org/svn/minitest/dev/lib/minitest/unit.rb"" rel=""nofollow"">full xUnit style testing framework in 419 lines</a>, an <a href=""http://BFTS.RubyForge.Org/svn/minitest/dev/lib/minitest/spec.rb"" rel=""nofollow"">RSpec style BDD framework in 87 lines</a> and a <a href=""http://BFTS.RubyForge.Org/svn/minitest/dev/lib/minitest/mock.rb"" rel=""nofollow"">full mocking framework in a whopping 28 lines</a>.</p>

<p>But, for example, the way that the BDD framework is so small, is that it uses reflective metaprogramming to dynamically loop over the assertion methods from the testing framework and rename them to BDD style <code>must_</code> methods.</p>

<p>Another nice example is also a BDD framework by Christian Neukirchen: <a href=""https://GitHub.Com/ChNeukirchen/Bacon/blob/master/lib/bacon.rb"" rel=""nofollow"">Bacon has 291 lines</a>. Also check out <a href=""https://GitHub.Com/ChNeukirchen/"" rel=""nofollow"">his other stuff</a>, for example <em>his</em> <a href=""https://GitHub.Com/ChNeukirchen/Amok/blob/master/lib/amok.rb"" rel=""nofollow"">mocking framework in 131 lines</a>, <a href=""https://GitHub.Com/ChNeukirchen/Ji/blob/master/ji.rb"" rel=""nofollow"">forum software in 488 lines</a> and <a href=""https://GitHub.Com/ChNeukirchen/Trivium/blob/master/trivium.rb"" rel=""nofollow"">blog engine in 146 lines</a>.</p>

<p>Last but not least, there is Gregory Brown's <a href=""https://GitHub.Com/Sandal/Prawn/"" rel=""nofollow"">Prawn PDF Generation library</a>. The interesting thing about Prawn is actually that it was deliberately written <em>not only</em> as a PDF Generation library but <em>also</em> as an example of well-written, well-designed Ruby code. Again, <a href=""https://GitHub.Com/Sandal/"" rel=""nofollow"">his other stuff</a> is also interesting, like <a href=""https://GitHub.Com/Sandal/Korma/blob/master/korma.rb"" rel=""nofollow""><em>his</em> blogging engine in 184 lines</a>.</p>

<p>Speaking of Greg Brown and well-written code: Greg is the author of the book <a href=""http://RubyBestPractices.Com/"" rel=""nofollow"">Ruby Best Practices</a>, which uses real-life code examples from real-life Ruby projects to show what good, well-written, well-designed Ruby code looks like. (Plus, it also has a chapter called <em>Ruby Worst Practices</em> with anti-examples.) And, you don't even have to buy the book (although you <em>really</em> should), because <a href=""https://GitHub.Com/Sandal/RBP/"" rel=""nofollow"">all the code samples are on GitHub</a>!</p>
"
"<p>I've read a lot about how great Clojure is when it comes to concurrency, but none of the tutorials I've read actually explain how to create a thread. Do you just do (.start (Thread. func)), or is there another way that I've missed?</p>
","2988","","<p>Yes, the way that you start a Java Thread in Clojure is something like what you have there.</p>

<p>However, the <em>real</em> question is: why would you want to do that? Clojure has <em>much</em> better concurrency constructs than threads.</p>

<p>If you look at the canonical concurrency example in Clojure, <a href=""https://Clojure-Study-DC.GoogleGroups.Com/web/ants.clj"">Rich Hickey's ant colony simulation</a>, you will see that is uses exactly 0 threads. The only reference to <code>java.lang.Thread</code> in the entire source is three calls to <code>Thread.sleep</code>, whose sole purpose is to slow the simulation down so that you can actually <em>see</em> what is going on in the UI.</p>

<p>All the logic is done in Agents: one agent for every ant, one agent for the animation and one agent for the pheromone evaporation. The playing field is a transactional ref. Not a thread nor lock in sight.</p>
"
"<p>Let's say your app enables users to create their own tables in the database to hold their own, custom data. Each table would have it's own schema. What are some good approaches?</p>

<p>My first stab involved dynamically creating migration files and model files bu I'd like to run this on heroku where you can't write to the filesystem. </p>

<p>I'm thinking eval may be the way to go to create and run the migration class and the model class. But I want to make sure the model class exists when a new process of the app is spawned. Can probably do this by storing these class definition with each user as they create new tables and then run through them all at startup. But now it's convulted enough that I may be missing something obvious.  </p>
","2988","","<p>There is (was?) a cool Wiki project, called <a href=""http://Informl.FolkLogic.Net/"" rel=""nofollow"">Informl</a>. It was a Wiki, not just for web <em>pages</em> but for web <em>applications</em>. (Get it? It's <em>informal</em> because it's a Wiki, it's got <em>forms</em> because it is an application, and it's user-generated, thus Web 2.0, which means that according to an official UN resolution it is legally required to have a name which is missing a vwl.)</p>

<p>So, in other words, it was not just about user-generated <em>content</em>, but also user-generated structured <em>data</em>.</p>

<p>They did this by generating PostgreSQL-specific SQL at runtime to create new tables and then have ActiveRecord reload the schemas.</p>

<p>The code is up on <a href=""https://RubyForge.Org/projects/informl/"" rel=""nofollow"">RubyForge</a>. It's based on Rails 1.2.3. I guess you could do <em>much</em> better than that today, <em>especially</em> with the upcoming extensibility interfaces in Rails 3.</p>
"
"<p>I am currently working on a project using svn (server is version 1.4 which means no modern merge tools available). </p>

<p>I want to merge a branch with quite a few weeks of work in it. The problem is that back when the branch was created, it was made as a copy only of a subfolder.</p>

<p>Svn structure of project:</p>

<pre><code>/trunk/folder1
              /file1
              /file2
       folder2
       folder3
       ...
</code></pre>

<p>Now I'm struggling to merge a branch back into trunk.</p>

<p>Now the problem is that the guy that created the branch only copied /trunk/folder1 and not the entire trunk. This creates a problem for git-svn, as it thinks that I created a bunch of files in the folder.</p>

<pre><code> git co master
 git merge branch1
 ...
 create mode 100644 trunk/file1
 create mode 100644 trunk/file2
</code></pre>

<p>(assuming that the files were originally in <code>/trunk/folder1/file1</code>)</p>

<p>The original reason i'm not using svn for this, is because of too many conflickts. (<code>svn merge</code> requires server 1.5+ and we're only on 1.4, <code>svnmerge.py</code> can only merge small chunks at a time and requires a LOT of mental overload ... i have used a half day to get only half way through)</p>

<p>Using <code>git merge</code> seems promising, but at first I need to tell git to use a subfolder of my master branch as merge target. How is that done?</p>
","2988","","<p>The <code>subtree</code> merge strategy was created specifically for this use case. It looks for files in the remote branch that match files in a subdirectory in the local branch, and if it does find them, it rewrites all the paths to make the two directory structures match up, before invoking the ""normal"" <code>recursive</code> merge strategy.</p>

<p>So, try</p>

<pre><code>git merge -s subtree branch1
</code></pre>
"
"<p>With Subversion I could use TortoiseSVN to view the history/log of a file.</p>

<p>How can I do this with Git? </p>

<p>Just looking for history record for a particular file, and then the ability to compare the different versions.</p>
","2988","","<p>Of course, if you want something as close to TortoiseSVN as possible, you could just use <a href=""http://TortoiseGit.GoogleCode.Com/"" rel=""nofollow"">TortoiseGit</a>.</p>
"
"<p>Can someone tell me where I can find the initial code, Linus Torvalds shared with hackers. I was thinking it will be a great place to learn about operating systems.</p>
","2988","","<p>If you want to look at the history in a ""nice"" way, you could use <a href=""http://Git.Kernel.Org/?p=linux/kernel/git/davej/history.git"" rel=""nofollow"">Dave Jones's Linux-History Git repository</a>, which includes all versions (at least all the versions that still exist, sadly some of the 0.99 versions have been lost forever) from 0.01 to 2.4.0. There is another <a href=""http://Git.Kernel.Org/?p=linux/kernel/git/tglx/history.git"" rel=""nofollow"">history repository from Thomas Gleixner</a>, which covers 2.4.0 to 2.6.12 and of course everything <em>since</em> 2.6.12 is available in <a href=""http://Git.Kernel.Org/?p=linux/kernel/git/torvalds/linux-2.6.git"" rel=""nofollow"">Linus's Git repository</a>. Linus also has a <a href=""http://Git.Kernel.Org/?p=linux/kernel/git/torvalds/old-2.6-bkcvs.git"" rel=""nofollow"">repository</a> which contains an import of the CVS export of the BitKeeper repository from 2.5.0 to 2.6.12.</p>

<p>You can use Git's graft feature to glue these repositories together to get a unified view of the entire history. There are also various scripts floating around that try to make these repositories even more accurate, like <a href=""http://LWN.Net/Articles/285366/"" rel=""nofollow"">this one</a> for example.</p>
"
"<p>Consider the following code:</p>

<pre><code>module ModName
  def aux
    puts 'aux'
  end
end
</code></pre>

<p>If we replace <code>module</code> with <code>class</code>, we can do the following:</p>

<pre><code>ModName.new.aux
</code></pre>

<p>Modules cannot be instanced, though. Is there a way to call the <code>aux</code> method on the module?</p>
","2988","","<blockquote>
  <p>the module definition evaluates to 'this is...', why?</p>
</blockquote>

<p>In Ruby, everything is an expression, there are no statements or declarations. Which means that everyhing evaluates to a value. (However, this doesn't necessarily mean that it evaluates to a <em>useful</em> value. For example, the <code>puts</code> method always evaluates to <code>nil</code>, just like a <code>def</code> method definition expression (except in Rubinius, where the <code>def</code> expression evaluates to a <code>CompiledMethod</code> object for the method being defined).)</p>

<p>So, if everything evaluates to a value, what should a module definition expression evaluate to? Well, there are a couple of candidates: it could evaluate to <code>nil</code>, just like a method definition expression. Or it could evaluate to the module object itself, after all, this <em>is</em> what we are defining, right? But actually, Matz chose a third option: module (and class) definition expressions actually evaluate to whatever the last expression inside the module definition body evaluates to. (This allows you to easily simulate the other two possibilities by just putting <code>nil</code> or <code>self</code> as the last expression inside a module definition body.)</p>

<p>In your case, the last expression inside the module definition body is an assignment. But, an assignment? What the heck does <em>that</em> return? Isn't that a statement? No, not in Ruby. <em>Everything</em> is an expression, and assignments are no exception: assignment expressions evaluate to whatever the right hand side evaluates to. Here, the right hand side of the assignment expression is a string literal, which evaluates to a string object.</p>

<p>So, the entire module definition expression evaluates to the string <code>'this is a const in module'</code>.</p>
"
"<p>I'd like my rack application to be able to interface with a server-side javascript engine.</p>

<p>As of now the only way i know this could be possible, is by running JRuby and Rhino on the JVM, but I'm hoping for a leaner solution.</p>

<p>Has anyone heard of another, more rubyish perhaps, option  ?</p>

<p>Edit : Reading the comments I'm starting to think I've been mistaken assumig that having both JRuby and Rhino run on the JVM would imply some interoperability between ruby and javascript...?<br>
That's not a desirable solution for me anyhow, but still i'd like to clear that up.</p>
","2988","","<ul>
<li><a href=""https://GitHub.Com/JBarnette/Johnson/"" rel=""nofollow"">Johnson</a> is a RubyGem that turns the Mozilla SpiderMonkey JavaScript engine into an MRI C extension and allows very deep integration between Ruby and JavaScript, </li>
<li>there is a <a href=""https://GitHub.Com/SMParkes/Johnson/"" rel=""nofollow"">fork of Johnson</a> which replaces the SpiderMonkey engine with the Mozilla TraceMonkey engine and </li>
<li><a href=""https://GitHub.Com/Defunkt/Lyndon/"" rel=""nofollow"">Lyndon</a> is like Johnson but with JavaScriptCore instead of SpiderMonkey and MacRuby instead of MRI.</li>
</ul>

<p>I think I also remember someone working on embedding V8 with MRI, but I can't find the reference right now.</p>

<p>The main problem with Johnson is that MRI is an incredibly crappy language implementation that leaks memory left and right, and the only language implementation in the world that could possibly be even more crappy is SpiderMonkey. Thus, the TODO list in the Johnson Git repository doesn't exactly inspire confidence; it only contains one item, and I quote literally:</p>

<blockquote>
  <p>Stop freaking segfaulting.</p>
</blockquote>

<p>Lyndon is built on a much better foundation, but it obviously requires running OSX on the server. Plus, MacRuby hasn't been released yet.</p>

<p>I think JRuby+Rhino is probably the most stable option, although you will have to build the integration yourself: they are just two independent language implementations that happen to live on the same VM, but there is no integration between them.</p>

<p>A different take on the problem is <a href=""http://RKelly.RubyForge.Org/"" rel=""nofollow"">RKelly</a> which is a JavaScript parser and execution engine written in Ruby.</p>

<p>As an alternative you could try to approach the problem from a different direction: instead of keeping your application logic in JavaScript and running that both on the client and the server, you could keep your application logic in Ruby and run that on the server and the client: there are a couple of compilers out there that can compile (a subset of) Ruby to JavaScript. On of them is <a href=""https://RubyForge.Org/projects/rubyjs/"" rel=""nofollow"">RubyJS</a>. (There is also <a href=""http://HotRuby.Yukoba.Jp/"" rel=""nofollow"">HotRuby</a>, which is a YARV bytecode interpreter written in JavaScript, but that would very likely be tremendous overkill for what you are doing.)</p>

<p>And last but not least you could do what Rails originally did with their JavaScript helpers: you neither define your logic in Ruby nor JavaScript, instead you define it <em>once</em> in an internal Ruby DSL and <em>generate</em> both the Ruby <em>and</em> JavaScript logic from that.</p>
"
"<p>This is the command I gave in command prompt:</p>

<pre><code>gem install sqlite3-ruby &gt; sqlite3-ruby.txt
</code></pre>

<p>This is the content of sqlite3-ruby.txt</p>

<blockquote>
  <p>Successfully installed sqlite3-ruby-1.2.5-x86-mswin32<br>
  1 gem installed<br>
  Installing ri documentation for sqlite3-ruby-1.2.5-x86-mswin32...<br>
  Installing RDoc documentation for sqlite3-ruby-1.2.5-x86-mswin32...</p>
</blockquote>

<p>Rest of the command prompt was full of the following:</p>

<blockquote>
  <p>...<br>
  No definition for _wrap_sqlite3_value_text<br>
  No definition for _wrap_sqlite3_value_text16<br>
  No definition for _wrap_sqlite3_value_text16le<br>
  No definition for _wrap_sqlite3_value_text16be<br>
  No definition for _wrap_sqlite3_value_type<br>
  No definition for _wrap_sqlite3_result_blob<br>
  No definition for _wrap_sqlite3_result_double<br>
  No definition for _wrap_sqlite3_result_error<br>
  No definition for _wrap_sqlite3_result_error16<br>
  No definition for _wrap_sqlite3_result_int<br>
  No definition for _wrap_sqlite3_result_int64<br>
  No definition for _wrap_sqlite3_result_text<br>
  No definition for _wrap_sqlite3_result_text16<br>
  No definition for _wrap_sqlite3_result_text16le<br>
  No definition for _wrap_sqlite3_result_text16be<br>
  No definition for _wrap_sqlite3_result_value<br>
  No definition for _wrap_sqlite3_aggregate_context<br>
  ...</p>
</blockquote>

<p>While trying to create a database, I tried the following in command prompt:</p>

<pre><code>rake db:create
</code></pre>

<p>A message box pops up saying that sqlite3.dll is missing. I need to reinstall the application. I tried <code>gem update sqlite3-ruby</code> command again and same thing happened.</p>

<p>How to resolve this issue? Thanks in advance.</p>
","2988","","<blockquote>
  <p>A message box pops up saying that sqlite3.dll is missing</p>
</blockquote>

<p>Well, is it?</p>
"
"<p>I'm trying to convert an all-uppercase string in Ruby into a lower case one, but with each word's first character being upper case. Example:</p>

<p>convert ""MY STRING HERE"" to ""My String Here"". </p>

<p>I know I can use the .downcase method, but that would make everything lower case (""my string here""). I'm scanning all lines in a file and doing this change, so is there a regular expression I can use through ruby to achieve this?</p>

<p>Thanks!</p>
","2988","","<p>While trying to come up with my own method (included below for reference), I realized that there's some pretty nasty corner cases. Better just use the method already provided in <a href=""http://RubyWorks.GitHub.Com/facets/"">Facets</a>, the mostest awesomest Ruby library evar:</p>

<pre><code>require 'facets/string/titlecase'

class String
  def titleize
    split(/(\W)/).map(&amp;:capitalize).join
  end
end

require 'test/unit'
class TestStringTitlecaseAndTitleize &lt; Test::Unit::TestCase
  def setup
    @str = ""i just saw \""twilight: new moon\"", and man!   it's crap.""
    @res = ""I Just Saw \""Twilight: New Moon\"", And Man!   It's Crap.""
  end
  def test_that_facets_string_titlecase_works
    assert_equal @res, @str.titlecase
  end
  def test_that_my_own_broken_string_titleize_works
    assert_equal @res, @str.titleize # FAIL
  end
end
</code></pre>

<p>If you want something that more closely complies to typical writing style guidelines (i.e. does not capitalize words like ""and""), there are a couple of ""titleize"" gems on GitHub.</p>
"
"<p>I am trying to make a quick/efficient Mandelbrot implementation in Ruby. A long long time ago, one way to speed it up was using fixed point integers instead of floats.</p>

<p>So i made the following benchmark, comparing float and integer raising to a square, using multiplication or square ** operand.</p>

<pre><code>require 'benchmark'

Benchmark.bmbm(10) do |x|  
  x.report(""float-multip"") do
    for z in 0..100000 
      zf = z.to_f
      y = zf*zf
    end
  end  

  x.report(""float-square"") do
    for z in 0..100000 
      zf = z.to_f
      y = zf**2
    end
  end  

  x.report(""int-multip"") do
    zo = 0
    for zi in 0..100000 
      y2 = zo*zo
      zo += 1
    end
  end   

  x.report(""int-multip"") do
    for zi in 0..100000 
      y2 = zi**2
    end
  end  
end
</code></pre>

<p>and this generates the following output:</p>

<pre><code>Rehearsal ------------------------------------------------
float-multip   0.125000   0.000000   0.125000 (  0.125000)
float-square   0.125000   0.000000   0.125000 (  0.125000)
int-multip     0.250000   0.000000   0.250000 (  0.250000)
int-multip     0.282000   0.000000   0.282000 (  0.282000)
--------------------------------------- total: 0.782000sec

                   user     system      total        real
float-multip   0.110000   0.000000   0.110000 (  0.110000)
float-square   0.125000   0.000000   0.125000 (  0.125000)
int-multip     0.219000   0.016000   0.235000 (  0.235000)
int-multip     0.265000   0.015000   0.280000 (  0.282000)
</code></pre>

<p>which clearly shows the the Fixnum multiplication is almost twice as slow as floating point.</p>

<p>I have two questions:</p>

<ul>
<li>Can anyone explain this? A reason I can imagine is that Fixnum multiplication is slower because of the internal checking whether or not it needs to be converted to a Bignum.</li>
<li>secondly is there than a quick integer multiplication for ruby?</li>
</ul>
","2988","","<p>A couple of things come to mind. You do not specify what Ruby implementation you are using. Since you run Ruby 1.8.6 on Windows, I am going to assume that you are using MRI installed via the Windows One-Click Installer.</p>

<p>This is kind of a worst-case scenario:</p>

<ol>
<li>MRI is the slowest of all the Ruby implementations</li>
<li>MRI on Windows is <em>even slower</em> than MRI on Linux or OSX</li>
<li>The One-Click Installer uses the pre-compiled binaries from Ruby-Lang.Org, which are compiled with Microsoft Visual C++ 6.0 from 1996, and thus are <em>even slower</em> than MRI on Windows compiled with Microsoft Visual C++ 10.0 or GCC 4.x or even GCC 3.x.</li>
</ol>

<p>Here's a couple of tips that you could try to improve performance:</p>

<ul>
<li>use the <a href=""http://RubyInstaller.Org/"" rel=""nofollow"">RubyInstaller</a> project, which uses interpreters compiled with GCC 3.x instead of MSVC6, </li>
<li>maybe recompile the interpreter yourself (it's not that hard with the Rakefiles provided by the <a href=""https://GitHub.Com/OneClick/RubyInstaller/"" rel=""nofollow"">RubyInstaller</a> project) with GCC 4.x and/or different optimization options (RubyInstaller is compiled with moderate optimization options and for generic 386 CPUs), </li>
<li>use a newer version of MRI than 1.8.6, </li>
<li><p>use a different implementation of Ruby: </p>

<ul>
<li>YARV is significantly faster than MRI (unfortunately, it only implements Ruby 1.9, so you might have to change your code), </li>
<li><a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a> is significantly faster than YARV in a lot of scenarios, and it implements both Ruby 1.8 and Ruby 1.9 (it also has a <code>-fast</code> commandline option, which is slightly incompatible with Ruby, but improves performance, including arithmetic performance) and </li>
<li><a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a> might also be faster than YARV, depending on the workload.</li>
</ul></li>
</ul>

<p>In the latter two cases you might want to revise your benchmarks a bit. Both eventually can compile Ruby code to native machine code, but it might take a while. JRuby for example compiles to JVM bytecode after a method has been executed 20 times and HotSpot Server compiles JVM bytecode to native machine code after it has executed 20000 times. Also, compilation itself takes time, so the program needs to run a while to gain back that cost through improved performance.</p>

<p>In particular, Charles Oliver Nutter, one of the JRuby lead developers, said that depending on the workload, JRuby might take up to 5-15 seconds to ramp up to full speed. Your benchmarks are about 100x too fast (here's a sentence you don't hear every day ...).</p>
"
"<p>What do you use for generating documentation for your Ruby files?</p>
","2988","","<p>I use <a href=""http://YARDoc.Org/"" rel=""nofollow"">YARD</a>.</p>
"
"<p>I am just curious if there is a programming language which has state machines (similar to boost::statechart) as primary language construct.</p>

<p>Analogies - c# has delegates  where java uses the observer pattern and C has callbacks. Perl and python have built-in hashes while C++ and java needs a library.</p>

<p><strong>Update:</strong></p>

<p>This should be general programming language in the sense of C++, C#, Java, Lisp ...</p>

<p>I mean ""mature"" state machines with all bells and whistles on the level of Harel formalism or UML state diagrams or boost::statechart.</p>
","2988","","<p><a href=""http://CompLang.Org/ragel/"">Ragel</a> is a state machine language. IOW, it's not a language that <em>also</em> supports state machines, it's a language that <em>only</em> supports state machines. Which obviously means that it's not Turing-complete, but who needs that?</p>

<p>More precisely, Ragel is a state machine compiler, which takes a description of a state machine in a regexp-like language and generates an implementation of that state machine in C, C++, Objective-C, D, Java or Ruby. (Think <code>yacc</code> but for state machines instead of LALR(1) table parsers.) The primary purpose of Ragel is parsing binary protocols (such as networking protocols or also on-disk file formats), but it can just as well be used for text.</p>

<p>One famous example of using Ragel is the Mongrel webserver for Ruby: its HTTP kernel is written in Ragel, which makes it <em>extremely</em> fast and secure. The HTTP kernel is so good in fact, that it has been reused a number of times in different applications: Thin, Unicorn and Rainbows are also webservers, and in fact direct competitors to Mongrel. Ebb is a reverse HTTP proxy. RFuzz is a fuzz testing tool for web applications. Also, some security tools use it.</p>

<p>Ragel also allows embedding code in the host language into the state machine, thus making it Turing-complete, and able to not only <em>recognize</em> but also <em>interpret</em> protocols.</p>

<p>In general, <em>every</em> language with support for advanced user-defined control-flow via either coroutines (e.g. Lua) or continuations (e.g. Scala) or <code>GOTO</code> (e.g. PHP) or proper tail calls (e.g. Scheme) can be used to easily <em>implement</em> state machines. (Generators (Python) aka iterators (C#), which are basically ""crappy coroutines"" might or might not work, depending on your definition of ""work"".) And any language which has flexible syntax (e.g. Ruby) or supports metasyntactic abstraction (e.g. Clojure) can be used to <em>describe</em> state machines. (Support for non-ASCII identifiers helps, too, so that you can use actual arrows for your state machine.)</p>

<p>Which means that if you <em>combine</em> the two, and use a language that supports <em>both</em> tail calls <em>and</em> metasyntactic abstraction, you get very nice state machines, <em>without</em> requiring native language support. Shriram Krishnamurthi gave a now (in)famous talk titled ""The Swine before Perl"" at the inaugural Lightweight Languages Conference, in which he demonstrated an FSM implementation in Scheme. (Here are the <a href=""http://www.ai.mit.edu/projects/dynlangs/ll1/shriram-talk.ppt"">slides</a>, an <a href=""http://www.cs.brown.edu/~sk/Publications/Talks/SwineBeforePerl/audio.mp3"">audio recording</a> and a <a href=""http://www.cs.brown.edu/~sk/Publications/Papers/Published/sk-automata-macros/"">paper explaining the code</a>). The code itself is a 26 line (very short lines, actually) macro, that allows you to write code like this:</p>

<pre><code>(define my-regex
  (automaton init
             [init : (c → more)]
             [more : (a → more)
                     (d → more)
                     (r → end)]
             [end : accept]))
</code></pre>

<p>This is a specification of the state machine corresponding to the regular expression <code>c(a|d)*r</code>. And it is not only a specification, but also a runnable program <em>implementing</em> that state machine.</p>

<p>I can call it like this:</p>

<pre><code>(my-regex '(c a d a d d r))
</code></pre>

<p>And in this case get the result <code>#t</code> (which is Scheme-speak for <code>true</code>).</p>
"
"<p>I find the whole process of merging two projects (one committed to SVN the other not) very lengthy. Manual changes are too many and too hard to make the new merged project compile. Is there any alternative to this ? The project that is not Checked into SVN has a backup. I do not want to use softwares such as Python etc.</p>
","2988","","<p>So, doing it manually is too hard. And you don't want to use software.</p>

<p>Then ...</p>

<ol>
<li>what <em>do</em> you want to use?</li>
<li>If you don't want to use software, why are you asking on a programming website?</li>
</ol>
"
"<p>I am just curious as to why the <code>&lt;center&gt;</code> tag in HTML was deprecated.</p>

<p>The <code>&lt;center&gt;</code> was a simple way of quickly center-aligning blocks of text and images by encapsulating the container in a <code>&lt;center&gt;</code> tag, and I really cannot find any simpler way on how to do it now.</p>

<p>Anyone know of any simple way on how to center ""stuff"" (not the <code>margin-left:auto; margin-right:auto;</code> and width thing), something that replaces <code>&lt;center&gt;</code> ?  And also, why was it deprecated?</p>
","2988","","<p>Food for thought: what would a text-to-speech synthesizer do with <code>&lt;center&gt;</code>?</p>
"
"<p>Cucumber has a few different hook methods like Before, After or AfterStep. </p>

<p>I was wondering - why doesn't these method names follow Ruby's naming conventions to write method names all lowercase?</p>

<p>Thanks.</p>
","2988","","<ol>
<li>The <code>Before</code>, <code>After</code>, <code>AfterStep</code>, <code>World</code> etc. Ruby hooks are uppercase because the <code>Given</code>, <code>When</code>, <code>Then</code> Ruby hooks are uppercase.</li>
<li>The <code>Given</code>, <code>When</code>, <code>Then</code> Ruby hooks are uppercase because the <code>Given</code>, <code>When</code>, <code>Then</code> Gherkin keywords are uppercase.</li>
<li>The <code>Given</code>, <code>When</code>, <code>Then</code> Gherkin keywords are uppercase because the Gherkin language is intended to match the standard template for <a href=""http://DanNorth.Net/introducing-bdd/"">BDD User Stories</a>.</li>
</ol>
"
"<p>I am trying to print numbers from 1 to 100 without using loops, using C#. Any clues?</p>
","2988","","<pre><code>using IronRuby;

class Print1To100WithoutLoopsDemo
{
    static void Main()
    {
        Ruby
            .CreateEngine()
            .Execute(""(1..100).each {|i| System::Console.write_line i }"");
    }
}
</code></pre>

<p>Hey, why not?</p>
"
"<p>I'm thinking in:</p>

<pre><code>class X
    def new()
        @a = 1
    end
    def m( other ) 
         @a == other.@a
    end
end

x = X.new()
y = X.new()
x.m( y )
</code></pre>

<p>But it doesn't works.</p>

<p>The error message is:</p>

<pre><code>syntax error, unexpected tIVAR
</code></pre>

<p>How can I compare two private attributes from the same class then?</p>
","2988","","<p>There have already been several good answers to your immediate problem, but I have noticed some other pieces of your code that warrant a comment. (Most of them trivial, though.)</p>

<p>Here's four trivial ones, all of them related to coding style:</p>

<ol>
<li>Indentation: you are mixing 4 spaces for indentation and 5 spaces. It is generally better to stick to just <em>one</em> style of indentation, and in Ruby that is generally 2 spaces.</li>
<li>If a method doesn't take any parameters, it is customary to leave off the parantheses in the method definition.</li>
<li>Likewise, if you send a message without arguments, the parantheses are left off.</li>
<li>No whitespace after an opening paranthesis and before a closing one, except in blocks.</li>
</ol>

<p>Anyway, that's just the small stuff. The big stuff is this:</p>

<pre><code>def new
  @a = 1
end
</code></pre>

<p>This does <em>not</em> do what you think it does! This defines an <em>instance</em> method called <code>X#new</code> and <em>not</em> a class method called <code>X.new</code>!</p>

<p>What you are calling here:</p>

<pre><code>x = X.new
</code></pre>

<p>is a <em>class</em> method called <code>new</code>, which you have inherited from the <code>Class</code> class. So, you never call your new method, which means  <code>@a = 1</code> never gets executed, which means <code>@a</code> is always undefined, which means it will always evaluate to <code>nil</code> which means the <code>@a</code> of <code>self</code> and the <code>@a</code> of <code>other</code> will always be the same which means <code>m</code> will always be <code>true</code>!</p>

<p>What you probably want to do is provide a constructor, except Ruby doesn't <em>have</em> constructors. Ruby only uses factory methods.</p>

<p>The method you <em>really</em> wanted to override is the <em>instance</em> method <code>initialize</code>. Now you are probably asking yourself: ""why do I have to override an <em>instance</em> method called <code>initialize</code> when I'm actually calling a <em>class</em> method called <code>new</code>?""</p>

<p>Well, object construction in Ruby works like this: object construction is split into two phases, <em>allocation</em> and <em>initialization</em>. Allocation is done by a public class method called <code>allocate</code>, which is defined as an instance method of class <code>Class</code> and is generally <em>never</em> overriden. It just allocates the memory space for the object and sets up a few pointers, however, the object is not really usable at this point.</p>

<p>That's where the initializer comes in: it is an instance method called <code>initialize</code>, which sets up the object's internal state and brings it into a consistent, fully defined state which can be used by other objects.</p>

<p>So, in order to fully create a new object, what you need to do is this:</p>

<pre><code>x = X.allocate
x.initialize
</code></pre>

<p>[Note: Objective-C programmers may recognize this.]</p>

<p>However, because it is too easy to forget to call <code>initialize</code> and as a general rule an object should be fully valid after construction, there is a convenience factory method called <code>Class#new</code>, which does all that work for you and looks something like this:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = alloc
    obj.initialize(*args, &amp;block)

    return obj
  end
end
</code></pre>

<p>[Note: actually, <code>initialize</code> is private, so reflection has to be used to circumvent the access restrictions like this: <code>obj.send(:initialize, *args, &amp;block)</code>]</p>

<p>Lastly, let me explain what's going wrong in your <code>m</code> method. (The others have already explained how to solve it.)</p>

<p>In Ruby, there is no way (note: in Ruby, ""there is no way"" actually translates to ""there is always a way involving reflection"") to access an instance variable from outside the instance. That's why it's called an instance variable after all, because it belongs to the instance. This is a legacy from Smalltalk: in Smalltalk there are no visibility restrictions, <em>all</em> methods are public. Thus, instance variables are the <em>only</em> way to do encapsulation in Smalltalk, and, after all, encapsulation is one of the pillars of OO. In Ruby, there <em>are</em> visibility restrictions (as we have seen above, for example), so it is not strictly necessary to hide instance variables for that reason. There is another reason, however: the Uniform Access Principle.</p>

<p>The UAP states that how to <em>use</em> a feature should be independent from how the feature is <em>implemented</em>. So, accessing a feature should always be the same, i.e. uniform. The reason for this is that the author of the feature is free to change how the feature works internally, without breaking the users of the feature. In other words, it's basic modularity.</p>

<p>This means for example that getting the size of a collection should always be the same, regardless of whether the size is stored in a variable, computed dynamically every time, lazily computed the first time and then stored in a variable, memoized or whatever. Sounds obvious, but e.g. Java gets this wrong:</p>

<pre><code>obj.size # stored in a field
</code></pre>

<p>vs.</p>

<pre><code>obj.getSize() # computed
</code></pre>

<p>Ruby takes the easy way out. In Ruby, there is only <em>one</em> way to use a feature: sending a message. Since there is only one way, access is trivially uniform.</p>

<p>So, to make a long story short: you simply can't access another instance's instance variable. you can only interact with that instance via message sending. Which means that the other object has to either provide you with a method (in this case at least of <code>protected</code> visibility) to access its instance variable, or you have to violate that object's encapsulation (and thus lose Uniform Access, increase coupling and risk future breakage) by using reflection (in this case <code>instance_variable_get</code>).</p>

<p>Here it is, in all its glory:</p>

<pre><code>#!/usr/bin/env ruby

class X
  def initialize(a=1)
    @a = a
  end

  def m(other) 
    @a == other.a
  end

  protected

  attr_reader :a
end

require 'test/unit'
class TestX &lt; Test::Unit::TestCase
  def test_that_m_evaluates_to_true_when_passed_two_empty_xs
    x, y = X.new, X.new
    assert x.m(y)
  end
  def test_that_m_evaluates_to_true_when_passed_two_xs_with_equal_attributes
    assert X.new('foo').m(X.new('foo'))
  end
end
</code></pre>

<p>Or alternatively:</p>

<pre><code>class X
  def m(other) 
    @a == other.instance_variable_get(:@a)
  end
end
</code></pre>

<p>Which one of those two you chose is a matter of personly taste, I would say. The <code>Set</code> class in the standard library uses the reflection version, although <em>it</em> uses <code>instance_eval</code> instead:</p>

<pre><code>class X
  def m(other) 
    @a == other.instance_eval { @a }
  end
end
</code></pre>

<p>(I have no idea why. Maybe <code>instance_variable_get</code> simply didn't exist when <code>Set</code> was written. Ruby is going to be 17 years old in February, some of the stuff in the stdlib is from the very early days.)</p>
"
"<p>I have a question regarding the and/&amp;&amp;/= keywords in Ruby.</p>

<p>The ruby docs say that the precedence for the mentioned keywords is: (1)&amp;&amp;, (2)=, (3)and.</p>

<p>I have this snippet of code I wrote:</p>

<pre><code>def f(n) 
 n
end

if a = f(2) and  b = f(4) then  
    puts ""1) #{a} #{b}""	
 end

if a = f(2) &amp;&amp;  b = f(4) then   
    puts ""2) #{a} #{b}""		
end
</code></pre>

<p>The output is:</p>

<p>1) 2 4 [Expected]</p>

<p>2) 4 4 [<strong>Why</strong>?]</p>

<p>For some reason using the &amp;&amp; causes both a and b to evaluate to 4?</p>
","2988","","<p>I don't quite understand the question you are asking. I mean, you have <em>already</em> given the answer yourself, <em>before</em> even asking the question: <code>&amp;&amp;</code> binds tighter than <code>=</code> while <code>and</code> binds less tightly than <code>=</code>.</p>

<p>So, in the first case, the expression is evaluated as follows:</p>

<pre><code>( a=f(2) )  and  ( b=f(4) )
( a=  2  )  and  ( b=f(4) )
      2     and  ( b=f(4) ) # a=2
      2     and  ( b=  4  ) # a=2
      2     and        4    # a=2; b=4
                       4    # a=2; b=4
</code></pre>

<p>In the second case, the evaluation is as follows:</p>

<pre><code>a   =   (  f(2) &amp;&amp; ( b=f(4) )  )
a   =   (    2  &amp;&amp; ( b=f(4) )  )
a   =   (    2  &amp;&amp; ( b=  4  )  )
a   =   (    2  &amp;&amp;       4     ) # b=4
a   =                    4       # b=4
                         4       # b=4; a=4
</code></pre>
"
"<p>It used to be that disk compression was used to increase storage space at the expense of efficiency but we were all on single processor systems back then. </p>

<p>These days there are extra cores around to potentially do the decompression work in parallel with processing the data. </p>

<p>For I/O bound applications (particularly read heavy sequential data processing) it might be possible to increase throughput by only reading and writing compressed data to disk.</p>

<p>Does anyone have any experience to support or reject this conjecture?</p>
","2988","","<p>Yes! In fact, processors are so ridiculously fast now that it even makes sense for memory. (IBM does this, I believe.) I believe, some of the current big iron machines even do compression on the CPU cache.</p>
"
"<p>My application needs to deal with <strong>arrays of fixed size</strong>. The problem is that sometimes elements are nil but nil is a forbidden value. I think an easy way is to <em>replace nil values with an the closest non-nil value</em> (right before or right after).</p>

<p>The nil values can be first, last or even multiples. Here are some examples of what I'm looking for:</p>

<pre><code>[1,2,3,nil,5] =&gt; [1,2,3,3,5]
[nil,2,3,4,5] =&gt; [2,2,3,4,5]
[1,nil,nil,4,5] =&gt; [1,1,4,4,5]
</code></pre>

<p>I am sure there is an elegant way to do this. Can you help?</p>
","2988","","<p>This is a variant of <a href=""http://stackoverflow.com/questions/1842504/#1842728"">@Callum's solution</a>:</p>

<pre><code>require 'test/unit'
class TestArrayCompletion &lt; Test::Unit::TestCase
  def test_that_the_array_gets_completed_correctly
    ary = [nil,1,2,nil,nil,3,4,nil,nil,nil,5,6,nil]
    expected = [1,1,2,2,3,3,4,4,nil,5,5,6,6]
    actual = ary.zip([nil]+ary.take(ary.length-1), ary.drop(1)).
               map(&amp;:compact).map(&amp;:first)

    assert_equal expected, actual
  end
end
</code></pre>
"
"<p>I'm writing a project at the moment that involves running two parallel threads to pull data from different sources at regular intervals. I am using the Threads functionality in ruby 1.9 to do this but am unfortunately running up against deadlock problems. Also I have a feeling that the <code>Thread.join</code> method is causing the threads to queue rather than run in parallel.</p>

<p>I'm new to multithreading programming and any advice would be greatly appreciated</p>

<p>Cheers</p>

<p>Patrick</p>

<p>EDIT: The shared resource that both these threads are accessing is a mysql database which could be the problem. The deadlock arrises after a few iterations of these threads being run.</p>
","2988","","<p>Which Ruby 1.9 implementation are you using? YARV cannot run Ruby Threads in parallel. At the moment, there is no production-ready implementation of Ruby 1.9 which can run threads in parallel. JRuby can threads in parallel, but its Ruby 1.9 implementation is not quite complete yet. (Although it <em>is</em> stable, so if all the features you need are there, you can use it.)</p>
"
"<p>Do anybody has experience hosting an email application in Lamson in Google App Engine?
Is it possible? Is it easy? Works well? Thanks</p>
","2988","","<p>I have no experience in using Lamson on GAE. However, one important difference between GAE and traditional LAMP hosting is the storage backend and since Lamson <em>already</em> has support for a dozen different storage backends, the interfaces should be well-defined and narrow, so that adding a GAE backend should be rather trivial. (More precisely, Lamson simply doesn't <em>care</em> about the storage backend.)</p>
"
"<p>Ok so I had to crack a Heineken for this one. Trying to solve a shortest path problem with a text file.</p>

<p>My research took me to:
<a href=""http://en.wikipedia.org/wiki/Maze"" rel=""nofollow"">link text</a>
<a href=""http://en.wikipedia.org/wiki/Pathfinding"" rel=""nofollow"">link text</a>
pretty good information for my algorithm</p>

<p>Basically, I'm trying to start out at 'S' for start and quit at 'F' for finish or return no solution message</p>

<p>the  two self styled tests or text files being considered</p>

<pre><code>      ##########
      #S       #
      ######   # 
      #F       #
      ##########

      and non-solvable

      ##########
      #S       #
      ########## 
      #F       #
      ##########
</code></pre>

<p>My problem is I'm having trouble writing a pathfinding def for this and returning it to the custom print def. Below is the code for the whole darn thing. As well as my first attempt at it. Spaces are free to be a path. Walls are defined as any other key but the space bar. Also be warned my while loop for quiting will return an error, I'm working that out right now. </p>

<pre><code>  puts ""enter a file name (example maze1.mz) PRESS ENTER"" 
  filename = gets.chomp.to_s
  while filename != 'quit' do


  def read_maze( filename )
  local_maze = []
  mz_file = File.open(filename,""r"")

  while ! mz_file.eof? do
  line = mz_file.gets.chomp
  local_maze &lt;&lt; line.scan(/./)
  end

  mz_file.close
  return local_maze
  end

  def solve_maze(row, column, blank_spot, blank_spot_not ) #parse throug args
  #from http://en.wikipedia.org/wiki/Maze
  #from http://en.wikipedia.org/wiki/Pathfinding


  return unless self[column][row]   #condition for its full
  return if self[column][row] != space #condition for printable spot
  return if self[column][row] == blank_spot_not #can't use this spot
  return if self[column][row]== full or f encountered
  #maze is full can't solve or finished
  self[column][row] = blank_spot_not

  #direction up down left right
  solve_maze(column+1, row, space, blank_spot_not) #right
  solve_maze(column-1, row, space, blank_spot_not) #left
  solve_maze(column, row+1, space, blank_spot_not) #up
  solve_maze(column, row-1, space, blank_spot_not) #down



 end

 def print_maze( maze )
 maze.each {|row|
 puts row.join('')
  }
 end


 maze = read_maze(filename)
 print_maze(maze)
 solve_maze(maze)
 print_maze(maze)

 puts ""would you like to further drive yourself nuts with this maze solver""

 filename = gets.chomp.to_s
 maze = read_maze(filename)
 print_maze(maze)

 end

 puts ""you have quit""
</code></pre>
","2988","","<p>Here's a couple of hints regarding your code:</p>

<ul>
<li><code>solve_maze</code> takes four parameters, but you are only passing one in the initial invocation (<code>solve_maze(maze)</code>)</li>
<li>All your objects are either strings or arrays of strings, but you are constantly doing integer math with them</li>
<li>You are constantly using <code>self</code> to refer to the current object, but you don't even <em>have</em> a current object, since you are writing in a procedural style, not an object-oriented one. [Note: I know that in Ruby, you <em>always</em> have a current object, which in this case is the anonymous top-level object.]</li>
</ul>

<p>Here's a couple of more hints regarding your workflow:</p>

<ul>
<li>Forget about the while loop. Why would you want the possibility of solving multiple mazes when you cannot even solve one at the momen? You can always add that in later.</li>
<li>Forget about reading the maze from a file, just hardcode it in a string. You can always add that in later.</li>
<li>In fact, forget about parsing the string altogether, just hardcode the maze in a datastructure that is convenient for you to deal with. I'd suggest a two-dimensional array of Booleans. You can always ... well, you get the drift.</li>
<li>Start with a simple maze. Like, <em>really</em> simple. Like, one tile where you already start up at the destination. Then move on to a maze with two tiles where the destination is right next to the start.</li>
</ul>

<p>Examples:</p>

<pre><code>solvable = [
  [false, false, false, false, false, false, false, false, false, false],
  [false,  true,  true,  true,  true,  true,  true,  true,  true, false],
  [false, false, false, false, false, false,  true,  true,  true, false],
  [false,  true,  true,  true,  true,  true,  true,  true,  true, false],
  [false, false, false, false, false, false, false, false, false, false]
]

unsolvable = [
  [false, false, false, false, false, false, false, false, false, false],
  [false,  true,  true,  true,  true,  true,  true,  true,  true, false],
  [false, false, false, false, false, false, false, false, false, false],
  [false,  true,  true,  true,  true,  true,  true,  true,  true, false],
  [false, false, false, false, false, false, false, false, false, false]
]

start  = [1, 1]
finish = [3, 1]
</code></pre>

<p>This way, you can simply use <code>if</code> to check whether the path is free or not, since empty tiles are <code>true</code> and walls are <code>false</code></p>

<p>Here's a neat trick: in Ruby, everything which is not either <code>false</code> or <code>nil</code> is true. This means, you can put everything you want (except <code>false</code> or <code>nil</code>, of course) in there instead of <code>true</code> and the <code>if</code> trick will still work. For example, you can encode the distance information that the algorithm needs directly in the maze itself. Just put some <em>really</em> big number instead of <code>true</code> in there, and <code>0</code> into the finish:</p>

<pre><code>infin = 1.0/0.0

solvable = [
  [false, false, false, false, false, false, false, false, false, false],
  [false, infin, infin, infin, infin, infin, infin, infin, infin, false],
  [false, false, false, false, false, false, infin, infin, infin, false],
  [false,   0  , infin, infin, infin, infin, infin, infin, infin, false],
  [false, false, false, false, false, false, false, false, false, false]
]

unsolvable = [
  [false, false, false, false, false, false, false, false, false, false],
  [false, infin, infin, infin, infin, infin, infin, infin, infin, false],
  [false, false, false, false, false, false, false, false, false, false],
  [false,   0  , infin, infin, infin, infin, infin, infin, infin, false],
  [false, false, false, false, false, false, false, false, false, false]
]

start  = [1, 1]
finish = [3, 1]
</code></pre>

<p>However, start simple:</p>

<pre><code>maze   = [[0]]
start  = [0, 0]
finish = [0, 0]

maze   = [[0, infin]]
start  = [0, 1]
finish = [0, 0]

maze = [
  [false, false, false],
  [false, infin, false],
  [false,   0  , false],
  [false, false, false]
]
start  = [1, 1]
finish = [2, 1]

maze = [
  [false, false, false],
  [false, infin, false],
  [false, infin, false],
  [false,   0  , false],
  [false, false, false]
]
start  = [1, 1]
finish = [3, 1]
</code></pre>
"
"<p>Other than .NET or Java, which language can be used to write an application for Windows and Linux?</p>
","2988","","<ul>
<li>Every programming language (or more precisely every programming language execution engine) which can interface with native code can be used to implement GUI applications. This alone already includes pretty much every single programming language ever created in the last 60 years, including but not limited to C, C++, Objective-C, Objective-C++, D, Eiffel, Fortran, Pascal, Modula, Oberon, Go, Haskell, OCaml, Python, Ruby, Perl, PHP, Tcl, C#, VB.NET, Java, Scala, F#, Newspeak, Animorphic Smalltalk, Eiffel, Lua, Potion, Falcon, Dao, Nimrod, Genie, Vala, Scheme, CommonLisp, Cobol.</li>
<li>Every programming language that runs on the Java platform can be used to write GUI applications. This includes about 400 languages that we publicly know about, plus who knows how many languages that are not publicly known. This list includes Java, Scala, NetRexx, Python, Ruby, PHP, ECMAScript, Groovy, Fan, Clojure, JavaFX, AspectJ, Fortress, Cobol.</li>
<li>Every programming language that runs on the CLI and/or .NET platform (hint: .NET is not a programming language, it's a marketing term for a combination of a CIL execution engine, CLI implementation, CTS implementation, BCL implementation and a framework) can be used to write GUI applications. This includes about 200 languages that we publicly know about. This list includes C#, VB.NET, F#, Eiffel.NET, Spec#, Sing#, X#, Polyphonic C#, Cω, Ruby, Python, Perl, Tcl, PHP, C++, SABLE, Scheme, CommonLisp, Clojure, Fan, Scala, Cobol, Cobra, Perl.</li>
<li>A lot of programming languages bring their <em>own</em> GUI framework for writing GUI applications, for example Tcl, Newspeak, Dolphin Smalltalk, Squeak Smalltalk, Delphi, Rebol.</li>
</ul>

<p>And that's just the ones that I could think of off the top of my head.</p>
"
"<p>I want to check with ""gem outdated"" if there are any gem updates. Is it possible to get the result of the gem software in a script as string or value?</p>

<p>I don't want to execute system() oder something similar.</p>

<p>thanks for your help</p>
","2988","","<p>RubyGems is actually a library, the <code>gem</code> commandline tool is only a small wrapper around that library. You can do anything you can do with the commandline tool from that library (and indeed some things you can't do with the commandline tool).</p>

<p>However, the library API is not as well documented as the commandline tool's parameters. There <em>is</em> a testuite, though.</p>
"
"<p>I'm trying to develop a workflow which allows us to maintain seperate Visual studio 2005 and 2008 versions of a library, while making sure that changes to one branch are always replicated in the other branch.</p>

<p>At the moment, I recommend that changes are only ever made to the default (VS2005) branch and then once complete, merged into the VS2008 branch. Unfortunately this relies on the discipline not to just fix problems as and when they are found and when you are in a crunch, that can be difficult. This has resulted in me having to attempt to retrofit changes from one branch back into the default at a later date.</p>

<p>I know that we could store the changes between the VS2005 and VS2008 project in a patch queue, but I'm the only one in my team who is comfortable with using the command line, my colleagues prefer to do everything though Tortoise HG.</p>

<p>As such, I rely on fixing up problems after the fact. My current procedure involves exporting patches for every changeset in the VS2008 branch and applying them to the default branch. This is time consuming, but much less error prone than trying to merge the tip of the VS2008 branch with the tip of default, and then hand converting back to VS2005 by hand.</p>

<p>Having read <a href=""http://stackoverflow.com/questions/1086222/in-mercurial-how-do-i-apply-a-reverse-patch-to-a-particular-file"">this article</a>, I tried backing out the 'upgrade' changeset, but the resulting backout changeset always ends up as the new tip of the VS2008 branch, plus I can't then merge the changes back in, since the resulting merge ends up in the VS2008 branch, even if I attempt to explicitly close the branch on commit.</p>

<p>I've tried going at this in a number of ways, but I always end up with a new VS2008 branch tip and no way to merge the changes back into the default branch. As such, I'm starting to thing that I've missed something obvious here.</p>

<p>So, ultimately, what do other people feel is best practice when trying to maintain two versions of a library where the only difference you want between the two are Visual Studio version numbers, embedded into the project and solution files?</p>

<p>Edit: The problem that I'm trying to avoid is that if you add a VS2005 project to a VS2008 solution (for easier debugging) it automatically 'upgrades' the VS2005 project to VS2008, resulting in a 'changed' working copy and a spattering of unecessary 'conversion' files. So, rather than people being tempted to commit their 'upgrade' to the mainline, I prefer to keep the branches seperate and require the user to pick the version they need on the first update after the clone.</p>

<hr>

<p>Further edit, with solution.</p>

<p>With some more messing about, I found a way to make this workflow work with standard TortoiseHg tools, and command line intervention only needed to set things up.</p>

<p>Firstly, I updated back to the changeset in which the project was converted from VS2005 to VS2008. I backed out that revision, created a patch of the backout and stripped the backed out changeset (since it was in the default branch). Then I applied the backout patch to the conversion changeset (using: hg patch --no-commit patch) and then comitted the patch with a new ""VS2005"" branch name. I then merged in the tip of the (unnamed) VS2005 branch.</p>

<p>The next step was to update to the old tip of the (unamed) VS2008 branch, make an inconsequential change and commit it as a new ""VS2008"" branch. I then merged in the changes from the VS2005 tip, but when I comitted did not allow the changes to the csproj files to be comitted. I then reverted these files after the commit.</p>

<p>Finally, I updated to the VS2005 tip and merged in the VS2008 tip.</p>

<p>This resulted in two tips, both with identical code, except for the differences due to the VS2005 to VS2008 conversion.</p>

<p>New workflow:</p>

<ul>
<li>Work in either VS2005 or VS2008 branch, as required.</li>
<li>Once updates are done in one branch, update to the other branch, merge the changes from the modified branch in and commit to it's own branch. Then update back to your preferred branch.</li>
<li>If updates occur in both branches simultaneously, do both branches seperately, i.e,. update to the VS2005 tip and merge in the VS2008 tip, then update to the VS2008 tip and merge in the previous (pre-merge) VS2005 tip.</li>
</ul>
","2988","","<p>Instead of solving the problem you could try to make it go away: try <a href=""http://IndustriousOne.Com/premake/"" rel=""nofollow"">premake</a>.</p>

<p>Premake is pre-build system (as the name implies it is intended to run pre-make or pre-MSBuild if you will). You describe your project <em>once</em> in a declarative internal DSL built on top of the <a href=""http://Lua.Org/"" rel=""nofollow"">Lua scripting language</a> and premake can automatically generate solutions and projects for VS2008, 2005, 2003 and 2002, MonoDevelop, SharpDevelop, Code::Blocks, CodeLite or a GNU Makefile for either Unix, Cygwin or MinGW. It currently supports building C++, C and C# projects, including cross-compiling for 32/64 Bit, OSX Universal Binaries, PlayStation 3 and XBox 360.</p>

<p>The configuration language is <a href=""http://IndustriousOne.Com/basic-script/"" rel=""nofollow"">very clean and declarative</a>. However, being built as an internal DSL on top of Lua, you also have the full support of a very powerful, beautiful, expressive (and most importantly Turing-complete) scripting language at your fingertips. Both the structure and the terminology of the configuration language are directly based on Visual Studio: it talks about <a href=""http://IndustriousOne.Com/solutions-and-projects/"" rel=""nofollow"">solutions, projects</a>, <a href=""http://IndustriousOne.Com/configurations-0/"" rel=""nofollow"">configurations</a> and <a href=""http://IndustriousOne.Com/platforms/"" rel=""nofollow"">platforms</a>.</p>

<p>The premake tool itself is <a href=""http://IndustriousOne.Com/premake/download/"" rel=""nofollow"">distributed as just a single .exe</a> which includes the Lua interpreter, Lua standard library and of course the premake script itself. It has absolutely no external dependencies, does not write a configuration file nor writes or even just reads the registry.</p>

<p>All you need to do is to translate the VS2008 solution into premake <em>once</em> by hand.</p>
"
"<p>I know it should be possible to communicate with a NAT/Router on a local network and ask for ports to be forwarded via UPnP, but I don't know any of the specifics.</p>

<p>I've found <a href=""http://rubyforge.org/frs/shownotes.php?group%5Fid=1513&amp;release%5Fid=35786"" rel=""nofollow"">a gem</a> that looks like it might be useful, but beyond that I'm at a loss (The gem's homepage appears to be down).</p>

<p>Does anyone have any pointers?</p>
","2988","","<p>This is a Seattle.rb project. Somehow they have re-organized their homepage. The correct link is now <a href=""http://SeattleRb.RubyForge.Org/UPnP/"" rel=""nofollow"">http://SeattleRb.<strong>RubyForge.</strong>Org/UPnP/</a> instead of just <a href=""http://SeattleRb.Org/UPnP/"" rel=""nofollow"">http://SeattleRb.Org/UPnP/</a></p>

<p>You can find all the UPnP projects <a href=""http://SeattleRb.Org/"" rel=""nofollow"">on the Seattle.rb homepage</a> or on the <a href=""http://SeattleRb.RubyForge.Org/"" rel=""nofollow"">Seattle.rb RubyForge page</a>, near the bottom of the page, with links to their RDocs.</p>
"
"<p>I have been a Java programmer for a while and I am trying to switch to ruby for a while. I was just trying to develop a small test program in ruby and my intention is something like following.</p>

<ol>
<li>I want to create a simple linked list type of an object in ruby; where an instance variable in class points to another instance of same type.</li>
<li><p>I want to populate and link all nodes; before the constructor is called and only once. Something that we'd usually do in Java Static block.</p></li>
<li><p>Initialize method is a constructor signature in ruby. Are there any rules around them? Like in Java you cannot call another constructor from a constructor if its not the first line (or after calling the class code?)</p></li>
</ol>

<p>Thanks for the help.
-Priyank</p>
","2988","","<blockquote>
  <p>I want to create a simple linked list type of an object in ruby; where an instance variable in class points to another instance of same type.</p>
</blockquote>

<p>Just a quick note: the word <em>type</em> is a very dangerous word in Ruby, especially if you come from Java. Due to an historic accident, the word is used both in dynamic typing and in static typing to mean two only superficially related, but very different things.</p>

<p>In dynamic typing, a type is a label that gets attached to a <em>value</em> (<em>not</em> a reference).</p>

<p>Also, in Ruby the concept of type is much broader than in Java. In Java programmer's minds, ""type"" means the same thing as ""class"" (although that's not true, since Interfaces and primitives are also types). In Ruby, ""type"" means ""what can I do with it"".</p>

<p>Example: in Java, when I say something is of type <em>String</em>, I mean it is a direct instance of the <code>String</code> class. In Ruby, when I say something is of type <em>String</em>, I mean it is either</p>

<ul>
<li>a direct instance of the <code>String</code> class or </li>
<li>an instance of a subclass of the <code>String</code> class or </li>
<li>an object which responds to the <code>#to_str</code> method or </li>
<li>an object which behaves indistinguishably from a String.</li>
</ul>

<blockquote>
  <p>I want to populate and link all nodes; before the constructor is called and only once. Something that we'd usually do in Java Static block.</p>
</blockquote>

<p>In Ruby, everything is executable. In particular, there is no such thing as a ""class declaration"": a class body is just exectuable code, just like any other. If you have a list of method definitions in your class body, those are not declarations that are read by the compiler and then turned into a class object. Those are expressions that get executed by the evaluator one by one.</p>

<p>So, you can put any code you like into a class body, and that code will be evaluated when the class is created. Within the context of a class body, <code>self</code> is bound to the class (remember, classes are just objects like any other).</p>

<blockquote>
  <p>Initialize method is a constructor signature in ruby. Are there any rules around them? Like in Java you cannot call another constructor from a constructor if its not the first line (or after calling the class code?)</p>
</blockquote>

<p>Ruby doesn't <em>have</em> constructors. Constructors are just factory methods (with stupid restrictions); there is no reason to have them in a well-designed language, if you can just use a (more powerful) factory method instead.</p>

<p>Object construction in Ruby works like this: object construction is split into two phases, <em>allocation</em> and <em>initialization</em>. Allocation is done by a public class method called <code>allocate</code>, which is defined as an instance method of class <code>Class</code> and is generally <em>never</em> overriden. It just allocates the memory space for the object and sets up a few pointers, however, the object is not really usable at this point.</p>

<p>That's where the initializer comes in: it is an instance method called <code>initialize</code>, which sets up the object's internal state and brings it into a consistent, fully defined state which can be used by other objects.</p>

<p>So, in order to fully create a new object, what you need to do is this:</p>

<pre><code>x = X.allocate
x.initialize
</code></pre>

<p>[Note: Objective-C programmers may recognize this.]</p>

<p>However, because it is too easy to forget to call <code>initialize</code> and as a general rule an object should be fully valid after construction, there is a convenience factory method called <code>Class#new</code>, which does all that work for you and looks something like this:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = alloc
    obj.initialize(*args, &amp;block)

    return obj
  end
end
</code></pre>

<p>[Note: actually, <code>initialize</code> is private, so reflection has to be used to circumvent the access restrictions like this: <code>obj.send(:initialize, *args, &amp;block)</code>]</p>

<p>That, by the way, is the reason why to construct an object you <em>call</em> a public class method <code>Foo.new</code> but you <em>implement</em> a private instance method <code>Foo#initialize</code>, which seems to trip up a lot of newcomers.</p>

<p>To answer your question: since an initializer method is just a method like any other, there are absolutely no restrictions as to what you can do whithin an initializer, in particular you can call <code>super</code> whenever, wherever, however and how often you want.</p>

<p>BTW: since <code>initialize</code> and <code>new</code> are just normal methods, there is no reason why they need to be called <code>initialize</code> and <code>new</code>. That's only a convention, although a pretty strong one, since it is embodied in the core library. In your case, you want to write a collection class, and it is quite customary for a collection class to offer an alternative factory method called <code>[]</code>, so that I can call <code>List[1, 2, 3]</code> instead of <code>List.new(1, 2, 3)</code>.</p>

<p>Just as a side note: one obvious advantage of using normal methods for object construction is that you can construct instances of anonymous classes. This is not possible in Java, for absolutely no sensible reason whatsoever. The only reason why it doesn't work is that the constructor has the same name as the class, and anonymous classes don't have a name, ergo there cannot be a constructor.</p>

<p>Although I am not quite sure why you would need to run anything before object creation. Unless I am missing something, shouldn't a list basically be</p>

<pre><code>class List
  def initialize(head=nil, *tail)
    @head = head
    @tail = List.new(*tail) unless tail.empty?
  end
end
</code></pre>

<p>for a Lisp-style cons-list or </p>

<pre><code>class List
  def initialize(*elems)
    elems.map! {|el| Element.new(el)}
    elems.zip(elems.drop(1)) {|prv, nxt| prv.instance_variable_set(:@next, nxt)}
    @head = elems.first
  end

  class Element
    def initialize(this)
      @this = this
    end
  end
end
</code></pre>

<p>for a simple linked list?</p>
"
"<p>I've been studying my fundamental data structures a bunch recently, trying to make sure I've got them down cold.</p>

<p>By ""fundamental"", I mean the real basic ones. Fancy ones like Red-Black Trees and Bloom Filters are clearly worth knowing, but they're usually either enhancements of fundamental ones (Red-Black Trees are binary search trees with special properties to keep them balanced) or they're only useful in very specific situations (Bloom Filters).</p>

<p>So far, I'm ""fluent"" in the following data structures:</p>

<ul>
<li>Arrays</li>
<li>Linked Lists</li>
<li>Stacks/Queues</li>
<li>Binary Search Trees</li>
<li>Heaps/Priority Queues</li>
<li>Hash Tables</li>
</ul>

<p>However, I feel like I'm missing something. Are there any fundamental ones that I'm forgetting about?</p>

<p><strong>EDIT: Added these after posting the question</strong></p>

<ul>
<li>Strings (suggested by catchmeifyoutry)</li>
<li>Sets (suggested by Peter)</li>
<li>Graphs (suggested by Nick D and aJ)</li>
<li>B-Trees (Suggested by tloach)
<ul>
<li>I'm a little on-the-fence about whether these are too fancy or not, but I think they're different enough from the fundamental structures (and important enough) to be worth studying as fundamental.</li>
</ul></li>
</ul>
","2988","","<p><a href=""http://Wikipedia.Org/wiki/Tuple"" rel=""nofollow"">Tuples</a>.</p>

<p>Also, if I could nominate one not-basic data structure, it would be the persistent bit-partitioned prefix Hash Tries from Clojure. In general, I believe persistence to be a very important and often overlooked property of any data structure.</p>
"
"<p>I've the following string. How can I extract out the ""somesite.com/2009/10/monit-on-ubuntu/"" part from it using ruby regular expression? </p>

<pre><code>http://linkto.com/to/1pyTZl/somesite.com/2009/10/monit-on-ubuntu/t
</code></pre>

<p>The common is, starts with ""/to/some-alpha-num"" and always ends with ""/t""</p>
","2988","","<p>That string looks like it's actually not a string but a URI. So, let's treat it as one:</p>

<pre><code>require 'uri'
uri = URI.parse(str)
</code></pre>

<p>Now, extracting the path component of the URI is a piece of cake:</p>

<pre><code>path = uri.path
</code></pre>

<p>Now we have already greatly limited the amount of stuff that can go wrong with our own parsing. The only part of the URI we still have to deal with, is the path component.</p>

<p>A <code>Regexp</code> that matches the part you are interested in looks like this:</p>

<pre><code>%r|/to/\w+/(.*/)t$|i
</code></pre>

<p>If we put all of that together, we end up with something like this:</p>

<pre><code>require 'uri'

def URI.extract(uri)
  return parse(uri).path[%r|/to/\w+/(.*/)t$|i, 1]
end

require 'test/unit'
class TestUriExtract &lt; Test::Unit::TestCase
  def test_that_the_path_gets_extracted_correctly
    uri  = 'http://linkto.com/to/1pyTZl/somesite.com/2009/10/monit-on-ubuntu/t'
    path = 'somesite.com/2009/10/monit-on-ubuntu/'
    assert_equal path, URI.extract(uri)
  end
end
</code></pre>
"
"<p>I have reinstalled my computer with <a href=""http://en.wikipedia.org/wiki/Windows%5F7"">Windows 7</a>, and <a href=""http://en.wikipedia.org/wiki/Eclipse%5F%28software%29"">Eclipse</a> 3.5.1 (Galileo). </p>

<p>The weird thing is that I can not see any files that Eclipse produces.
I can not find the workspace, can not find the files from the <a href=""http://en.wikipedia.org/wiki/Subversion%5F%28software%29"">SVN</a> after check out.</p>

<p>It seems like Windows 7 can not read the files produced by Eclipse ... wierd</p>

<p>What could be the reason for this?</p>
","2988","","<p>Where do you have Eclipse installed? Where is your workspace?</p>

<p>In Windows 7 (Vista, actually), a lot of security policies that existed only on paper in earlier versions of Windows, are now actually enforced by the operating system. For example, according to Microsoft's documentation, it has been pretty much illegal to write to <code>C:\Program Files</code> for decades now, but if you actually tried it, it still worked. Not anymore. As of Vista, <code>C:\Program Files</code> is off-limits.</p>

<p>However, in order not to break existing (broken) applications, Microsoft introduced filesystem virtualization. If an application tries to write to <code>C:\Program Files</code>, it gets silently redirected to <code>C:\Users\%Username%\AppData\Local\VirtualStore\Program Files</code>. So, this specific application sees all the files it created or changed in <code>C:\Program Files</code>, but <em>other</em> applications, and this includes the Explorer, see only the unchanged / empty directory.</p>

<p>This does not just apply to <code>C:\Program Files</code> but also to other system directories as well. Also, it applies to system parts of the registry, like <code>HKEY_LOCAL_MACHINE</code> for example.</p>

<p>In order to sidestep all of this, I simply installed my copy of Eclipse in <code>%LocalAppData%\eclipse</code> (that's <code>C:\Users\%Username%\AppData\Local\eclipse</code>) and created my workspace in <code>%AppData%\eclipse</code> (that's <code>C:\Users\%Username%\AppData\Roaming\eclipse</code>). That <em>Just Works</em>&trade;.</p>
"
"<p>How can I quickly check if Linux <code>unzip</code> is installed using Perl?</p>
","2988","","<p>Just run it.</p>

<p>Seriously.</p>

<p>Presumably, the reason <em>why</em> you want to know if it is installed, is because you need to run it later. In that case, it isn't enough to know whether it is installed, anyway&nbsp;&ndash; you also need to know whether it is executable, whether it is in the path, whether the user id the script is running under has the necessary privileges to run it, and so on. You can check all that by simply just running it.</p>
"
"<p>I posted a <a href=""http://stackoverflow.com/questions/1829621/setting-variables-with-blocks-in-ruby"">similar question</a> to this not too long ago in regards to formatting a MySQL query using a block and got very good responses, but they were very specific to the problem at hand. This time around, I'm dealing with getting the <code>.sum()</code>s of rows in a table. Here's what I've got now:</p>

<pre><code>def balance
  balance = 0
  items.each do |item|
    balance = balance + item.charges.sum(:revenue, :conditions =&gt; ['created_at &gt;= ?', Time.now.beginning_of_month])
  end
  balance
end
</code></pre>

<p>My goal here is to get the total of all charges for this month for a given user. Charges belong to items, which belong users. I'm sure there's a better way to do this in Ruby/Rails.</p>

<p>What would you do?</p>
","2988","","<p>This is a very common recursion pattern. It is called a <em>catamorphsim</em> in category theory, a <em>fold</em> in mathematics and functional programming, it is also sometimes called <em>reduce</em> and in Smalltalk it is called <code>inject:into:</code>. In Ruby, it is called <code>inject</code> or <code>reduce</code> (these two methods are aliases).</p>

<p>The idea is that you have a collection of values and you want to ""reduce"" or ""fold"" that collection of multiple values into a single value. (The Smalltalk name <code>inject:into:</code> comes from the fact that you inject a starting value into a block which is called for each element of the collection.)</p>

<pre><code>def balance
  this_month = Time.now.beginning_of_month
  items.reduce(0) { |balance, item|
    balance + item.charges.sum(:revenue, :conditions =&gt; ['created_at &gt;= ?', this_month])
  }
end
</code></pre>
"
"<p>I have a small code snippet that I'm trying to get to work in Ruby. </p>

<pre><code>digest = HMAC.digest(Digest.new(SHA1), Base64.decode64(key), HashString) return Base64.encode64(digest.to_s()).chomp()
</code></pre>

<p>I tried it as follows:</p>

<pre><code>hashstring = ""POST application/octet-stream
Thu, 05 Jun 2008 16:38:19 GMT /rest/objects date:Thu, 05 Jun 2008 16:38:19 GMT groupacl:other=NONE listable-meta:part4/part7/part8=quick meta:part1=buy
id: 6039ac182f194e15b9261d73ce044939/user1 useracl:jane=FULL_CONTROL,juan=WRITE""

key = ""AKLuryj6zs8ste4Y3jTGQp71xq0=""


def hash(hs, keyh)
  digest = HMAC.digest(Digest.new(SHA1), Base64.decode64(keyh), hs)
  return Base64.encode64(digest.to_s()).chomp()
end

puts hash hashstring,key
</code></pre>

<p>this gives me the error 
file.rb:1:in `require': no such file to load -- hmac-md5 (LoadError)
    from file.rb:1</p>

<p>I'm unfamiliar with ruby or how include/require modules work. (or if they are bundled with the language or require seperate downloading. What file/code am I missing to make this function?</p>
","2988","","<p>There seems to be something <em>seriously</em> wrong. Ruby tells you that are trying to call <code>require</code> in the first line of your script, and that it can't find the file that your are telling it to load. But! You don't <em>call</em> <code>require</code> in the first line of your script! In fact, you don't call <code>require</code> <em>anywhere</em> in your script.</p>

<p><em>Something</em> must be <em>severely</em> broken.</p>

<p><em>One</em> potential problem I see in your code, is that <code>hash</code> is a standard method in Ruby, that is <em>already</em> defined for a totally different purpose. Overriding it is probably going to lead to problems sooner or later. However, the error you are seeing happens way before we even get to that, so it's not relevant for the <em>immediate</em> problem at hand.</p>

<p>As far as I can make out, this seems to be what you are trying to do:</p>

<pre><code>require 'openssl'
require 'base64'

DIGEST = OpenSSL::Digest::Digest.new('sha1')

def hmac(hs, keyh)
  digest = OpenSSL::HMAC.digest(DIGEST, Base64.decode64(keyh), hs)
  return Base64.encode64(digest).chomp
end

require 'test/unit'
class TestHmac &lt; Test::Unit::TestCase
  def test_that_the_hmac_gets_computed_correctly
    hashstring = 'POST application/octet-stream
Thu, 05 Jun 2008 16:38:19 GMT /rest/objects date:Thu, 05 Jun 2008 16:38:19 GMT groupacl:other=NONE listable-meta:part4/part7/part8=quick meta:part1=buy
id: 6039ac182f194e15b9261d73ce044939/user1 useracl:jane=FULL_CONTROL,juan=WRITE'
    key        = 'AKLuryj6zs8ste4Y3jTGQp71xq0='
    assert_equal 'KxQMJeaVqxFdujha89UuksEUiAg=', hmac(hashstring, key)
  end
end
</code></pre>

<p>But I am still puzzled how you can get an error message from <code>require</code> when you are <em>never</em> calling it in the first place.</p>
"
"<p>I know of ""imperative"" and ""functional"" programming but there was little I could find on ""datatype"" programming. Is there such a thing and how is it related to the other paradigms?</p>
","2988","","<p>I have never heard of that term. Google hasn't, either. (The only hit is this very question.)</p>

<p>The closest thing I can think of, is <a href=""http://LucaCardelli.Name/"" rel=""nofollow""><em>Typeful Programming</em></a>, which is a programming paradigm introduced by Luca Cardelli in a 1989 <a href=""http://LucaCardelli.Name/Papers/TypefulProg.A4.pdf"" rel=""nofollow"">paper</a> by the same title.</p>

<p>The idea of typeful programming is that you use types extensively and primarily to model your domain, drive your design, structure your program and in general solve your problem, the same way you use objects in object-oriented programming, procedures in procedural programming, functions in functional programming, clauses in logic programming, processes in Erlang, and so on. This is a typical style in Haskell.</p>

<p>[EDIT: I hadn't seen your comments on the question, when I wrote this answer. I guess this second one is what you are looking for.]</p>

<p>Another term that I stumbled upon while doing the above-mentioned Google search, is the term <em>datatype-generic programming</em>. This is a <a href=""http://WWW.ComLab.Ox.Ac.UK/research/pdt/ap/dgp/"" rel=""nofollow"">research project</a> that ran from 2003 to 2006 that aims to create a new mechanism for writing programs that parametrize over types much further as is possible today with, say, parametric polymorphism in Haskell or templates in C++.</p>
"
"<p>I'm reading a book ""How to Do Everything with JavaScript"" and I'm currently learning how to define classes. The book says there are 2 ways. first using functions in javascript 1.x. second, using class in javascript 2.0.</p>

<p>what I'm trying is:</p>

<pre><code>class Car {
    var Make : String;
    var Model : String;
    var Year : Integer;
    var Color : String;
    var FullName : String;

    function Car (make, model, year, color) {
        this.Make = make;
        this.Model = model;
        this.Year = year;
        this.Color = color;
        this.FullName = this.Year + "" "" + ""&lt;b&gt;"" + this.Make + ""&lt;/b&gt; "" + this.Model;
    }
}

var mySUV = new Car(""Toyota"", ""4Runner SR5"",2001, ""Thundercloud"");
document.write (""I drive a "" + mySUV.FullName);
</code></pre>

<p>The code is not working when I'm trying to run it. I use komodo editor to develop and when I define a class like I mentioned before, It gives me a warning ""strict warning: class is a reserved identifier"".</p>

<p>Is there something wrong with the code? Thanks in advance for any help.</p>
","2988","","<p>JavaScript 2.0 aka ECMAScript 4 was abandoned in 2008, before it was ever released. There will never be a class-based version of ECMAScript. Which is a good thing.</p>
"
"<p>From my understanding, garbage collection in java cleans up some object iff nothing else is 'pointing' to that object.  My question is, what happens if we have something like:</p>

<pre><code>class Node{
    public object value;
    public Node next;
    public Node(object o, Node n) { value = 0; next = n;}
}

 //...some code
{
    Node a = new Node(""a"", null), 
         b = new Node(""b"", a), 
         c = new Node(""c"", b);
    a.next = c;
}//end of scope
//...other code
</code></pre>

<p><code>a</code>, <code>b</code>, and <code>c</code> should be garbage collected, but they are all being referenced by other objects.  How does the Java garbage collection deal with this? (or is it simply a memory drain?)</p>
","2988","","<p>You are correct. The specific form of garbage collection you describe is called ""<em>reference counting</em>"". The way it works (conceptually, at least, most modern implementations of reference counting are actually implemented quite differently) in the simplest case, looks like this:</p>

<ul>
<li>whenever a reference to an object is added (e.g. it is assigned to a variable or a field, passed to method, and so on), its reference count is increased by 1</li>
<li>whenever a reference to an object is removed (the method returns, the variable goes out of scope, the field is re-assigned to a different object or the object which contains the field gets itself garbage collected), the reference count is decreased by 1</li>
<li>as soon as the reference count hits 0, there is no more reference to the object, which means nobody can use it anymore, therefore it is garbage and can be collected</li>
</ul>

<p>And this simple strategy has exactly the problem you decribe: if A references B and B references A, then both of their reference counts can <em>never</em> be less than 1, which means they will never get collected.</p>

<p>There are four ways to deal with this problem:</p>

<ol>
<li>Ignore it. If you have enough memory, your cycles are small and infrequent and your runtime is short, maybe you can get away with simply not collecting cycles. Think of a shell script interpreter: shell scripts typically only run for a few seconds and don't allocate much memory.</li>
<li>Combine your reference counting garbage collector with <em>another</em> garbage collector which doesn't have problems with cycles. CPython does this, for example: the main garbage collector in CPython is a reference counting collector, but from time to time a tracing garbage collector is run to collect the cycles.</li>
<li>Detect the cycles. Unfortunately, detecting cycles in a graph is a rather expensive operation. In particular, it requires pretty much the same overhead that a tracing collector would, so you could just as well use one of those.</li>
<li>Don't implement the algorithm in the naive way you and I would: since the 1970s, there have been multiple quite interesting algorithms developed that combine cycle detection and reference counting in a single operation in a clever way that is significantly cheaper than either doing them both seperately or doing a tracing collector.</li>
</ol>

<p>By the way, the <em>other</em> major way to implement a garbage collector (and I have already hinted at that a couple of times above), is <em>tracing</em>. A tracing collector is based on the concept of <em>reachability</em>. You start out with some <em>root set</em> that you know is <em>always</em> reachable (global constants, for example, or the <code>Object</code> class, the current lexical scope, the current stack frame) and from there you <em>trace</em> all objects that are reachable from the root set, then all objects that are reachable from the objects reachable from the root set and so on, until you have the transitive closure. Everything that is <em>not</em> in that closure is garbage.</p>

<p>Since a cycle is only reachable within itself, but not reachable from the root set, it will be collected.</p>
"
"<p>So, I get this warning when I'm running my tests in ruby/RoR</p>

<p>.(eval):289: warning: don't put space before argument parentheses</p>

<p>I've checked every where (but obvoiusly not) and I can't find the origin of this error.</p>

<p>The above error just pops up inbetween the unit tests ...</p>

<p>Can someone clue me in onto how to find the location of this error?</p>
","2988","","<p>The file and line number are contained in the backtrace. However, in your case, the warning is inside a string being <code>eval</code>ed at runtime. Which means <em>there is no file</em>. (Actually, the <code>eval</code> method <em>does</em> take optional arguments for the file name and line number that should be displayed in a backtrace, but in this case whoever wrote the code in question unfortunately forgot to pass those arguments.)</p>

<p>I fear that you have no other choice than to manually examine every single call to <code>eval</code> in your entire codebase, and that <em>includes</em> Rails, your testing framework, your entire application, your tests, your plugins, your helpers, the ruby standard library, ...</p>

<p>Of course, you should be aware that the problem might not be obvious as in</p>

<pre><code>eval 'foo (bar, baz)'
</code></pre>

<p>It could also be something like</p>

<pre><code>def foo(*args)
  puts args.join
end

bar = 'Hello'
baz = 'World'

foostr = 'foo'                        # in one file
barstr = 'bar'                        # in another file in a different directory
bazstr = 'baz'                        # in another file in a different directory
argstr = ""(#{barstr}, #{bazstr})""     # in yet another file
$,     = ' '                          # in some third-party plugin
str    = [foostr, argstr].join        # in a fourth file
eval str                              # somewhere else entirely
eval str, binding, __FILE__, __LINE__ # this is how it *should* be done
</code></pre>

<p>Note the difference between the two warning messages: the first one reads exactly like the one you posted, but the <em>second</em> one has the filename instead of <code>(eval)</code> and the line number inside the file instead of the line number inside the eval string.</p>

<p>By the way: the line number <code>289</code> in the warning message is the line number <em>inside the <code>eval</code>d string</em>! In other words: somewhere in your application there is a string being <code>eval</code>d, which is <em>at least</em> 289 lines long! (Actually, it is more likely that this done not in your application but rather in Rails. The Rails router used to be a particularly bad offender, I don't know if this is still the case.)</p>
"
"<p>We are planning to write a highly concurrent application in any of the Very-High Level programming languages.</p>

<p>1) Do Python, Ruby, or Haskell support true multithreading? </p>

<p>2) If a program contains threads, will a Virtual Machine automatically assign work to multiple cores (or to physical CPUs if there is more than 1 CPU on the mainboard)? </p>

<p><strong>True multithreading</strong> = multiple independent threads of execution utilize the resources provided by multiple cores (not by only 1 core).</p>

<p><strong>False multithreading</strong> = threads emulate multithreaded environments without relying on any native OS capabilities.</p>
","2988","","<blockquote>
  <p>1) Do Python, Ruby, or Haskell support true multithreading?</p>
</blockquote>

<p>This has nothing to do with the language. It is a question of the hardware (if the machine only has 1 CPU, it is simply physically impossible to execute two instructions at the same time), the Operating System (again, if the OS doesn't support true multithreading, there is nothing you can do) and the language implementation / execution engine.</p>

<p>Unless the language specification explicitly forbids or enforces true multithreading, this has absolutely nothing whatsoever to do with the language.</p>

<p><em>All</em> the languages that you mention, plus all the languages that have been mentioned in the answers so far, have multiple implementations, some of which support true multithreading, some don't, and some are built on top of <em>other</em> execution engines which might or might not support true multithreading.</p>

<p>Take Ruby, for example. Here are just <em>some</em> of its implementations and their threading models:</p>

<ul>
<li>MRI: green threads, no true multithreading</li>
<li>YARV: OS threads, no true multithreading</li>
<li>Rubinius: OS threads, true multithreading</li>
<li>MacRuby: OS threads, true multithreading</li>
<li>JRuby, XRuby: JVM threads, depends on the JVM (if the JVM supports true multithreading, then JRuby/XRuby does, too, if the JVM doesn't, then there's nothing <em>they</em> can do about it)</li>
<li>IronRuby, Ruby.NET: just like JRuby, XRuby, but on the CLI instead of on the JVM</li>
</ul>

<p>See also <a href=""http://StackOverflow.Com/questions/56087/57802/#57802"">my answer to another similar question about Ruby</a>. (Note that that answer is more than a year old, and some of it is no longer accurate. Rubinius, for example, uses truly concurrent native threads now, instead of truly concurrent green threads. Also, since then, several <em>new</em> Ruby implementations have emerged, such as BlueRuby, tinyrb, Ruby Go Lightly, Red Sun and SmallRuby.)</p>

<p>Similar for Python:</p>

<ul>
<li>CPython: native threads, no true multithreading</li>
<li>PyPy: native threads, depends on the execution engine (PyPy can run natively, or on top of a JVM, or on top of a CLI, or on top of <em>another</em> Python execution engine. Whenever the underlying platform supports true multithreading, PyPy does, too.)</li>
<li>Unladen Swallow: native threads, currently no true multithreading, but fix is planned</li>
<li>Jython: JVM threads, see JRuby</li>
<li>IronPython: CLI threads, see IronRuby</li>
</ul>

<p>For Haskell, at least the Glorious Glasgow Haskell Compiler supports true multithreading with native threads. I don't know about UHC, LHC, JHC, YHC, HUGS or all the others.</p>

<p>For Erlang, <em>both</em> BEAM and HiPE support true multithreading with green threads.</p>

<blockquote>
  <p>2) If a program contains threads, will a Virtual Machine automatically assign work to multiple cores (or to physical CPUs if there is more than 1 CPU on the mainboard)?</p>
</blockquote>

<p>Again: this depends on the Virtual Machine, the Operating System and the hardware. Also, some of the implementations mentioned above, don't even <em>have</em> Virtual Machines.</p>
"
"<p>Is it necessary to code RTOS in C language always? Why can't that be coded in java or some other technology..?? Is that because of the absence of pointer concept in java?</p>
","2988","","<blockquote>
  <p>Is it necessary to code RTOS in C language always?</p>
</blockquote>

<p>No. There are RTOS written in Lisp or Smalltalk, for example.</p>

<blockquote>
  <p>Why can't that be coded in java or some other technology..??</p>
</blockquote>

<p>What makes you think it can't?</p>

<blockquote>
  <p>Is that because of the absence of pointer concept in java?</p>
</blockquote>

<p>No, it's because there is a myth that Operating Systems can only be written in C. A myth that can be trivially proven false, yet still refuses to die.</p>

<p>This myth is so pervasive, that people who want to write a new OS, are simply too afraid to try anything other than C.</p>
"
"<p>Could someone give me a clear distinction between latent and manifest type system?</p>
","2988","","<p>Sometimes, the same concept gets invented independently in different areas of computer science. This is one of those occasions. What the Scheme community calls <em>latent</em> and <em>manifest</em> typing, the rest of the world calls <em>implicit</em> and <em>explicit</em> typing. The meaning is exactly the same:</p>

<p>In <em>explicit</em> / <em>manifest</em> typing, the programmer has to <em>explicitly</em> write down the types, thus the types become <em>manifest</em> in the source code.</p>

<p>In <em>implicit</em> / <em>latent</em> typing, the programmer does not write down the types. The types are thus <em>implicit</em> or <em>latent</em>.</p>

<p>Please note that the question of implicit vs. explicit typing is completely orthogonal to e.g. dynamic vs. static typing, strong vs. weak typing, sound vs. unsound typing, safe vs. unsafe typing and nominal vs. structural vs. duck typing.</p>

<p>Haskell for example is implicitly, strongly, statically, sound, safe, structurally typed.</p>
"
"<p>What applications can you make with the programming language Ruby?  Can you name a few commercial/famous ones written only in Ruby?</p>

<p>What I'd really like to know is can you just learn Ruby instead of C/C++ to make commercial software e.g web server, photoshop, desktop applications, even an operating system etc.</p>

<p>Except Ruby on Rails which I already use!</p>
","2988","","<blockquote>
  <p>What applications can you make with the programming language Ruby?</p>
</blockquote>

<p>Ruby is Turing-complete, which means that <em>everything</em> that can be written in <em>any other</em> Turing-complete language, can <em>also</em> be written in Ruby. Also, no language can be <em>more</em> than Turing-complete, which means that <em>anything</em> that <em>can't</em> be written in Ruby, can also not be written in any <em>other</em> language.</p>

<blockquote>
  <p>Can you name a few commercial/famous ones written only in Ruby?</p>
</blockquote>

<p>One very famous application that is a) famous completely independent from Ruby, and b) famous long before Rails came along, is FreeBSD's <code>portupgrade</code> command.</p>

<p><a href=""http://Metasploit.Com/"">Metasploit</a> is a network security toolkit written in Ruby.</p>

<p><a href=""http://LimeChat.Net/mac/"">LimeChat</a> is an IRC client written in Ruby.</p>

<p>The US Government's <a href=""http://NGDc.NOAA.Gov/"">National Geophysical Datacenter</a> uses Ruby to run their image processing cluster, processing terabytes of satellite data every day.</p>

<p><a href=""http://NASARb.RubyForge.Org/"">NASA</a> uses Ruby for statistics, simulation and also unit testing Fortran programs.</p>

<p>The Monterey Bay Aquarium Research Institute (MBARI) has an autonomous underwater laboratory, called the <a href=""http://MBARI.Org/ESP/"">Environmental Sample Processor (ESP)</a> which can collect water, particle and microorganism samples from the ocean and run several molecular experiments and genome analysis right there, under water, all by itself. It runs Ruby. Now, it's not commercial, and probably doesn't count as famous, either, but hey, it's a friggin' underwater robot!</p>

<p>Note: there are <em>many</em> more. I tried to find the <em>least</em> obvious ones I could think of, since I figured someone else would post Twitter and Basecamp anyway.</p>

<blockquote>
  <p>What I'd really like to know is can you just learn Ruby instead of C/C++ to make commercial software e.g web server, photoshop, desktop applications, even an operating system etc.</p>
</blockquote>

<p>Well, there are multiple web servers written in Ruby; one of them (WEBRick) ships in the Ruby standard library. There are also multiple desktop applications written in Ruby (some listed above).</p>

<p>Adobe Lightroom is written largely in Lua, with only the hardcore image processing done in some lower-level language (I <em>think</em> C, but I suspect there might be a whole lot of MMX/SSE assembly in there, too) but the UI, the batch processing, and application logic are all implemented in Lua. Also, Lightroom is developed in an IDE Adobe specifically wrote for this task, which is written 100% in Lua. There is no reason why the same couldn't be done in Ruby. There is also no reason why there would <em>have</em> to be C or assembly in there, it's just that modern mainstream CPUs are heavily tuned for C and pretty hostile for languages like Ruby or Lua. Also, Adobe is a pretty old company, so they have tons of image manipulation code written in C or assembly just lying around, so why rewrite it?</p>

<p>As for operating systems: like with Photoshop, I don't know that anybody has done it <em>yet</em>, but there is no reason why they shouldn't be able to. Ruby is closely related to Lisp and Smalltalk, and both of these have multiple operating systems written in them.</p>

<p>Now, whether you can actually get a <em>job</em> writing an OS in Ruby, that's a whole other question :-)</p>

<p>However, there is pretty much no execution environment for which no Ruby execution engine is available. For the JVM, there is JRuby, which also runs on Java ME smartphones, Android and Google App Engine. For the CLI, there is (soon) IronRuby, which runs on all the important CLI variants: .NET, Mono and Silverlight. For the Objective-C runtime, there is MacRuby, which is officially sponsored by Apple and is indeed targeted to become a standard way to develop OSX desktop applications. (It's also probably going to run on the iPhone, although the MacRuby developers, being Apple employees, are not allowed to officially acknowledge that fact.) For Unix-like systems, there are MRI, YARV and (soon) Rubinius, which also run on Windows and many other systems, although maybe not quite as fast and stable.</p>
"
"<p>I'm looking to build a jukebox and I am wondering how one would secure songs that are in <code>&lt;audio&gt;</code> tags with HTML 5. I don't want people to be able to download the song, but I'd like to stream it via those <code>&lt;audio&gt;</code> tags. Any suggestions?</p>
","2988","","<p>This is not possible. In order for the client computer to be able to play the song, the song has to be transferred there. Period.</p>
"
"<p>David Korn, a proponent of the Unix philosophy, chided Perl programmers a few years ago in <a href=""http://news.slashdot.org/article.pl?sid=01/02/06/2030205&amp;mode=thread"">a Slashdot interview</a> for writing monolithic Perl scripts without making use of the Unix toolkit through pipes, redirection, etc. ""Unix is not just an operating system,"" he said, ""it is a way of doing things, and the shell plays a key role by providing the glue that makes it work.""</p>

<p>It seems that reminder could apply equally to the Ruby community. Ruby has great features for working together with other Unix tools through popen, STDIN, STDOUT, STDERR, ARGF, etc., yet it seems that increasingly, Rubyists are opting to use Ruby bindings and Ruby libraries and build monolithic Ruby programs.</p>

<p>I understand that there may be performance reasons in certain cases for going monolithic and doing everything in one Ruby process, but surely there are a lot of offline and asynchronous tasks that could be well handled by Ruby programs working together with other small programs each doing one thing well in the Unix fashion, with all the advantages that this approach offers. </p>

<p>Maybe I'm just missing something obvious. Is the Unix Philosophy still as relevant today as it was 10 years ago?</p>
","2988","","<p>I guess the rather simple explanation is that Unix tools are only available on Unix. The vast majority of users, however, run Windows.</p>

<p>I remember the last time I tried to install Nokogiri, it failed because it couldn't run <code>uname -p</code>. There was absolutely no valid reason to do that. All the information that can be obtained by running <code>uname -p</code> is also available from within Ruby. Plus, <code>uname -p</code> is actually not even Unix, it's a non-standard GNU extension which isn't even guaranteed to work on Unix, and is for example completely broken on several Linux distributions.</p>

<p>So, you could either use Unix and lose 90% of your users, or use Ruby.</p>
"
"<p>After reading about Erlang's lighweight processes I was pretty much sure that they were ""green threads"". Until I read that there are differences between green threads and Erlang's processes. But I don't get it.</p>

<p>What are the actual differences?</p>
","2988","","<p>When people object to calling Erlang's processes ""green threads"", they aren't objecting to the ""green"" part, they are objecting to the ""threads"" part.</p>

<p>The difference between threads and processes is basically, that threads have <em>only</em> their own instruction pointer, but share everything else (especially state, memory, address space). Processes OTOH are completely isolated and share nothing.</p>

<p>Erlang's processes share nothing, thus, they are true processes. However, they are usually implemented in a ""green"" manner. So, technically, they are ""green processes"".</p>

<p>I usually call them ""green threads"" when I want to emphasize the light weight <em>implementation</em>, and call them ""processes"" when I want to emphasize the shared-nothing <em>semantics</em>. That way I don't have to explain what I mean by ""green processes"".</p>
"
"<p>I am trying to remove text that is within parentheses (along with the parentheses themselves) but am having trouble with the scenario where there are parentheses within parentheses.  This is the method I am using (in Ruby): </p>

<pre><code>sentence.gsub(/\(.*?\)/, """")
</code></pre>

<p>and that works fine until I have a sentence such as: </p>

<pre><code>""This is (a test (string))""
</code></pre>

<p>Then the above chokes.  Anyone have any idea how to do this? I am completely stumped.</p>
","2988","","<p>The problem with this is that languages containing nested parentheses (or indeed <em>anything</em> nested, IOW anything that requires recursion) are not regular, they are at least context-free. This means that they cannot be described by a regular grammar. Regular expressions are a compact notation for regular grammars. Ergo, nested parentheses cannot be described by regular expressions.</p>

<p>However, we aren't talking about regular expressions here, we are talking about <code>Regexp</code>s. While their semantics and syntax are (very) loosely based on regular expressions, they are quite different and especially much more powerful. Depending on the particular flavor of <code>Regexp</code> you use, they may or may not be able to express recursion and thus parse nested parentheses. Perl <code>Regex</code>, for example <em>can</em> parse nested parentheses. I'm not sure whether Ruby's <code>Regexp</code> can, but I really don't care, because the way that <code>Regexp</code> are more powerful than regular expressions is generally achieved by bolting more and more syntax onto them.</p>

<p>This turns regular expressions, which are designed to be simple, in incomprehensible monsters. (If you can tell at a glance what the Perl <code>Regex</code> posted by @Anon does, then go for it. But I can't and thus I prefer not to use it.)</p>

<p>I prefer using a more powerful parser, rather than a complex <code>Regexp</code>.</p>

<p>In this case, you have a context-free language, therefore you can use a very simple recursive descent parser. You can further simplify your recursive descent parser by handling those sub-parts which <em>are</em> regular with a regular expression. Finally, if you replace the recursion in the recursive descent parser with iteration + mutation and make clever use of Ruby's boolean semantics, the entire parser gets basically condensed down to this single line:</p>

<pre><code>while str.gsub!(/\([^()]*?\)/, ''); end
</code></pre>

<p>Which I don't think is too bad.</p>

<p>Here's the entire thing with some extra removal of duplicate whitespace and (of course) a test suite:</p>

<pre><code>require 'test/unit'
class TestParenthesesRemoval &lt; Test::Unit::TestCase
  def test_that_it_removes_even_deeply_nested_parentheses
    str = 'This is (was?) some ((heavily) parenthesized (but not overly so 
          (I hope))) text with (superflous) parentheses: )(.'
    res = 'This is some text with parentheses: )(.'

    while str.gsub!(/\([^()]*?\)/, ''); end
    str.squeeze!(' ')

    assert_equal res, str
  end
end
</code></pre>
"
"<p>I am really a big fan of javascript. It is really a great prototype based OOP language. Now I want to learn some other prototype based language. Really really interested in some design guideline i.e How can I manage the code without classes etc. Which language should I choose ? Some resource in design patterns for prototype based language ?</p>
","2988","","<p>The answer to <em>both</em> of your questions is <a href=""http://SelfLanguage.Org/"">Self</a>. Self is the <em>original</em> prototype-based OO language, and also probably the best one (for a completely unscientific and subjective definition of ""best"", of course). (In fact, IMHO it's (together with <a href=""http://NewspeakLanguage.Org/"">Newspeak</a>) one of the best OO languages, period.)</p>

<p>Anyway, the nice thing about Self is that it also contains a lot of excellent <a href=""http://SelfLanguage.Org/documentation/"">documentation</a>, including but not limited to the famous Self tutorial <em><a href=""http://SelfLanguage.Org/%5Fstatic/tutorial/Tutorial/"">Prototype-Based Application Construction Using SELF 4.0</a></em></p>

<p>There are also a great number of resources at the <a href=""http://Research.Sun.Com/self/"">old Self website at Sun Research</a>:</p>

<ul>
<li><em><a href=""http://Research.Sun.Com/self/papers/self-power.html"">Self: The Power of Simplicity</a></em> is the original paper that introduced Self at OOPSLA 1987</li>
<li><em><a href=""http://Research.Sun.Com/self/papers/programming-as-experience.html"">Programming as an Experience: The Inspiration for Self</a></em> is a retrospective paper about Self from ECOOP 1995</li>
</ul>

<p>These two (together with the tutorial mentioned above) explain pretty much exactly what you are asking about. (In fact, the second one pretty much contains your question <em>""How can I manage the code without classes""</em> word for word in the title):</p>

<ul>
<li><em><a href=""http://Research.Sun.Com/self/papers/parents-shared-parts.html"">Parents are Shared Parts: Inheritance and Encapsulation in Self</a></em></li>
<li><em><a href=""http://Research.Sun.Com/self/papers/organizing-programs.html"">Organizing Programs Without Classes</a></em></li>
</ul>

<p>Then, there is <em>Self; The Movie</em>, an introductory video about the Self programming language, the Self GUI, the Self system and the Self VM starring Self's lead designers and developers. Unfortunately, it came out in 1995 on VHS, and when the video was finally digitized, the original tapes were already degraded. You can find several versions of the video on <a href=""http://Smalltalk.Org.Br/movies/"">this site with Smalltalk videos</a>. I personally find the <a href=""http://Smalltalk.Org.Br/movies/Self%5Fbig.mov"">Large QuickTime</a> easiest to view.</p>

<p>Here's a couple of other interesting Self links:</p>

<ul>
<li><a href=""http://C2.Com/cgi/wiki?SelfLanguage"">Self at Ward's Wiki</a></li>
<li><a href=""http://Cetus-Links.Org/oo%5Fself.html"">A Self link list</a></li>
<li><a href=""http://MerlinTec.Com:8080/Self"">A Wiki page about Self</a> by a company that used to make Self CPUs</li>
</ul>

<p>Dave Ungar, the primary designer of Self gace a talk at Stanford in September, titled <em><a href=""http://Stanford.Edu/class/ee380/Abstracts/090930"">Self and self: whys and wherefores</a></em>. Streaming video of this talk <a href=""http://EE380.Stanford.Edu/cgi-bin/videologger.php?target=090930-ee380-300.asx"">is available</a>.</p>

<p>A slight problem with Self is that it was basically abandoned by Sun in 1995 in favor of an obscure little scripting language for making animated cartoon characters in electronic TV guides on TV set-top-boxes. (You might have heard of it, it's called Java.) Thus, the latest stable release 4.3 only runs on OSX on PowerPC ( <em>maybe</em> x86, too) and Solaris on a Sparc CPU. A couple of months ago, though, the Self project was picked up again by some of its former members as well as some new fans of the language, and it has now been ported to Linux and OSX on x86, with a usable 4.4 Alpha 2 release available and a final release expected in January.</p>

<p>A couple of other interesting prototype-based languages are:</p>

<ul>
<li><a href=""http://Wikipedia.Org/wiki/NewtonScript"">NewtonScript</a> (inspired by Self) was intended to be the application development language for the Apple Newton PDA; it is also the direct inspiration for JavaScript</li>
<li><a href=""http://SlateLanguage.Org/"">Slate</a> is ""a clean slate object-oriented Smalltalk-style environment""</li>
<li><a href=""http://IoLanguage.Com/"">Io</a> is a prototype-based programming language inspired by Smalltalk (all values are objects, all messages are dynamic), Self (prototype-based), NewtonScript (differential inheritance), Act1 (actors and futures for concurrency), Lisp (code is a runtime inspectable/modifiable tree) and Lua (small, embeddable)</li>
<li><a href=""http://Ioke.Org/"">Ioke</a> is a prototype-based programming language that is inspired by Io, Smalltalk, Lisp and Ruby</li>
</ul>

<p>As far as your question about how to structure programs goes, I must admit that I find that classes actually <em>obscure</em> the object-oriented design. I mean, there is a <em>reason</em> why it's called Object-Oriented Programming, not Class-Oriented Programming.</p>
"
"<p>How can I write a unit test for a method that has a using statement?</p>

<p>For example let assume that I have a method <code>Foo</code>.</p>

<pre><code>public bool Foo()
{
    using (IMyDisposableClass client = new MyDisposableClass())
    {
        return client.SomeOtherMethod();
    }
}
</code></pre>

<p>How can I test something like the code above?</p>

<p>Sometimes I choose not to use <code>using</code> statement and <code>Dispose()</code> an object manually.  I hope that someone will show me a trick I can use.</p>
","2988","","<p>Your question doesn't make sense. If you are doing TDD, then the method that you posted is <em>already</em> fully tested, otherwise it couldn't even exist in the first place. So, your question doesn't make sense.</p>

<p>If, on the other hand, the method that you posted does already exist, but isn't fully tested, then you aren't doing TDD anyway, and your question about TDD doesn't make sense, either.</p>

<p>In TDD, it is simply <em>impossible</em> for untested code to exist. Period.</p>
"
"<p>I am trying to understand why grep built by me is much slower than the one that comes with the system and trying to find what compiler options are used by grep that comes with the system.</p>

<p>OS Version: CentOS release 5.3 (Final)
grep on system: </p>

<pre>
  Version: grep (GNU grep) 2.5.1
  Size: 88896 bytes
  ldd output: 
 libpcre.so.0 => /lib64/libpcre.so.0 (0x0000003991800000)
 libc.so.6 => /lib64/libc.so.6 (0x0000003985a00000)
 /lib64/ld-linux-x86-64.so.2 (0x0000003984a00000)
</pre>

<p>grep built by me:</p>

<pre>
  Version: 2.5.1
  Size: 256437 bytes
  ldd output:
 libpcre.so.0 => /lib64/libpcre.so.0 (0x0000003991800000)
 libc.so.6 => /lib64/libc.so.6 (0x0000003985a00000)
 /lib64/ld-linux-x86-64.so.2 (0x0000003984a00000)
</pre>

<p>The performance of system grep (330 msecs) is way faster than grep that I built (22430 msecs) when run a regex search on a large list text file.</p>

<p>Following is the command I used to time ..</p>

<pre>
% time src/grep "".*asa.*"" large_list.txt > /dev/null
real 0m22.430s
user 0m22.291s
sys 0m0.080s
</pre>

<p>OR</p>

<pre>
% time bin/grep "".*asa.*"" large_list.txt > /dev/null
real 0m0.331s
user 0m0.236s
sys 0m0.081s
</pre>

<p>The system grep is clearly using some optiomizing options that is giving huge performance difference. </p>

<p>Can some body help me with what options the system grep may be built with? </p>

<p>Here is the compile options for one of the source files when I build ..<br>
<code>gcc -DLIBDIR=\""/usr/local/lib\"" -DHAVE_CONFIG_H -I. -I.. -I.. -I. -I../intl    -g -O2 -MT xstrtol.o -MD -MP -MF .deps/xstrtol.Tpo -c -o xstrtol.o xstrtol.c</code></p>

<p>The output of ./configure:</p>

<pre>
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking for gawk... (cached) gawk
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking for a BSD-compatible install... /usr/bin/install -c
checking for ranlib... ranlib
checking for getconf... getconf
checking for CFLAGS value to request large file support... 
checking for LDFLAGS value to request large file support... 
checking for LIBS value to request large file support... 
checking for _FILE_OFFSET_BITS... no
checking for _LARGEFILE_SOURCE... no
checking for _LARGE_FILES... no
checking for function prototypes... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for string.h... (cached) yes
checking for size_t... yes
checking for ssize_t... yes
checking for an ANSI C-conforming const... yes
checking for inttypes.h... yes
checking for unsigned long long... yes
checking for ANSI C header files... (cached) yes
checking for string.h... (cached) yes
checking for stdlib.h... (cached) yes
checking sys/param.h usability... yes
checking sys/param.h presence... yes
checking for sys/param.h... yes
checking for memory.h... (cached) yes
checking for unistd.h... (cached) yes
checking libintl.h usability... yes
checking libintl.h presence... yes
checking for libintl.h... yes
checking wctype.h usability... yes
checking wctype.h presence... yes
checking for wctype.h... yes
checking wchar.h usability... yes
checking wchar.h presence... yes
checking for wchar.h... yes
checking for dirent.h that defines DIR... yes
checking for library containing opendir... none required
checking whether stat file-mode macros are broken... no
checking for working alloca.h... yes
checking for alloca... yes
checking whether closedir returns void... no
checking for stdlib.h... (cached) yes
checking for unistd.h... (cached) yes
checking for getpagesize... yes
checking for working mmap... yes
checking for btowc... yes
checking for isascii... yes
checking for iswctype... yes
checking for mbrlen... yes
checking for memmove... yes
checking for setmode... no
checking for strerror... yes
checking for wcrtomb... yes
checking for wcscoll... yes
checking for wctype... yes
checking whether mbrtowc and mbstate_t are properly declared... yes
checking for stdlib.h... (cached) yes
checking for mbstate_t... yes
checking for memchr... yes
checking for stpcpy... yes
checking for strtoul... yes
checking for atexit... yes
checking for fnmatch... yes
checking for stdlib.h... (cached) yes
checking whether  defines strtoumax as a macro... no
checking for strtoumax... yes
checking whether strtoul is declared... yes
checking whether strtoull is declared... yes
checking for strerror in -lcposix... no
checking for inline... inline
checking for off_t... yes
checking whether we are using the GNU C Library 2.1 or newer... yes
checking argz.h usability... yes
checking argz.h presence... yes
checking for argz.h... yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking locale.h usability... yes
checking locale.h presence... yes
checking for locale.h... yes
checking nl_types.h usability... yes
checking nl_types.h presence... yes
checking for nl_types.h... yes
checking malloc.h usability... yes
checking malloc.h presence... yes
checking for malloc.h... yes
checking stddef.h usability... yes
checking stddef.h presence... yes
checking for stddef.h... yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking for unistd.h... (cached) yes
checking for sys/param.h... (cached) yes
checking for feof_unlocked... yes
checking for fgets_unlocked... yes
checking for getcwd... yes
checking for getegid... yes
checking for geteuid... yes
checking for getgid... yes
checking for getuid... yes
checking for mempcpy... yes
checking for munmap... yes
checking for putenv... yes
checking for setenv... yes
checking for setlocale... yes
checking for stpcpy... (cached) yes
checking for strchr... yes
checking for strcasecmp... yes
checking for strdup... yes
checking for strtoul... (cached) yes
checking for tsearch... yes
checking for __argz_count... yes
checking for __argz_stringify... yes
checking for __argz_next... yes
checking for iconv... yes
checking for iconv declaration... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
checking for nl_langinfo and CODESET... yes
checking for LC_MESSAGES... yes
checking whether NLS is requested... yes
checking whether included gettext is requested... no
checking for libintl.h... (cached) yes
checking for GNU gettext in libc... yes
checking for dcgettext... yes
checking for msgfmt... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... /usr/bin/xgettext
checking for bison... bison
checking version of bison... 2.3, ok
checking for catalogs to be installed...  af be bg ca cs da de el eo es et eu fi fr ga gl he hr hu id it ja ko ky lt nb nl pl pt pt_BR ro ru rw sk sl sr sv tr uk vi zh_TW
checking for dos file convention... no
checking host system type... (cached) x86_64-unknown-linux-gnu
checking host system type... (cached) x86_64-unknown-linux-gnu
checking for DJGPP environment... no
checking for environ variable separator... :
checking for working re_compile_pattern... yes
checking for getopt_long... yes
configure: WARNING: Included lib/regex.c not used
checking whether strerror_r is declared... yes
checking for strerror_r... yes
checking whether strerror_r returns char *... no
checking for strerror... (cached) yes
checking for strerror_r... (cached) yes
checking for vprintf... yes
checking for doprnt... no
checking for ANSI C header files... (cached) yes
checking for working malloc... yes
checking for working realloc... yes
checking for pcre_exec in -lpcre... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating lib/Makefile
config.status: creating lib/posix/Makefile
config.status: creating src/Makefile
config.status: creating tests/Makefile
config.status: creating po/Makefile.in
config.status: creating intl/Makefile
config.status: WARNING:  intl/Makefile.in seems to ignore the --datarootdir setting
config.status: creating doc/Makefile
config.status: creating m4/Makefile
config.status: creating vms/Makefile
config.status: creating bootstrap/Makefile
config.status: creating config.h
config.status: config.h is unchanged
config.status: executing depfiles commands
config.status: executing default-1 commands
config.status: creating po/POTFILES
config.status: creating po/Makefile
config.status: executing stamp-h commands
</pre>

<p>Thanks,
kumar</p>
","2988","","<p>Why don't you just get CentOS's SRPM for the grep binary and compare their compile options to yours? I would guess that this is much more efficient than having the entire StackOverflow community blindly poke around in the dark until they hit something.</p>

<p>EDIT: Are you using a locale with a multibyte encoding? (Note: if you have no idea what that means, then the answer is probably ""Yes"", since UTF-8 has been the default for most Linux distributions for several years now and indeed RedHat (and thus CentOS) were the very first to make the switch).</p>

<p>In that case, GNU grep <em>is</em> dog slow. And this not only applies to GNU grep but to pretty much all GNU tools that do some kind of text processing. The FSF refuses to accept any patches to improve multibyte performance, unless those patches are proven to not slow down fixed-width encodings. However, since <em>any</em> patch to improve performance for multibyte encodings must <em>at least</em> contain some <code>if</code> statement somewhere, it is actually impossible to write a patch that does not at least slow down fixed-width encodings by at least the overhead of that <code>if</code> statement. Thus, UTF-8 performance of GNU tools <em>will</em> continue to suck until the end of time.</p>

<p>Anyway, most Linux distributors don't give a rat's <em>bleep</em> what the FSF thinks and patch GNU grep anyway. The <a href=""ftp://Download.Fedora.RedHat.Com/pub/fedora/linux/development/source/SRPMS/grep-2.5.3-6.fc12.src.rpm"">Fedora Rawhide SRPM</a> contains a patch called <a href=""https://Savannah.GNU.Org/patch/?3803""><code>grep-2.5.3-egf-speedup.patch</code></a>, which speeds up the UTF-8 performance of GNU grep by several orders of magnitude. (Since this patch is already from 2005, I assume that it is also used in CentOS.) This patch is also used in Mac OSX, Debian, Ubuntu, ..., pretty much nobody uses GNU grep as distributed by GNU. Text processing in a multibyte encoding will never be as fast as in a fixed-width encoding, but it should at least be comparable, not 50x (or even 1500x as some people have reported) slower.</p>

<p>There's also another patch called <a href=""https://Savannah.GNU.Org/patch/?3802""><code>dfa-optional</code></a>, which makes grep simply use GNU libc's regex engine instead of its own, which is not only <em>much</em> faster when dealing with UTF-8 but also has far fewer bugs.</p>

<p>So, you might want to re-run your benchmarks with <code>export LC_ALL=POSIX</code> set. If that fixes your problem, you need to apply either one of the two above-mentioned patches.</p>

<p>More information is also available in these two RedHat bugreports:</p>

<ul>
<li><a href=""https://Bugzilla.RedHat.Com/show%5Fbug.cgi?id=69900"">Bug 69900 - grep writing output very slow</a></li>
<li><a href=""https://Bugzilla.RedHat.Com/show%5Fbug.cgi?id=121313"">Bug 121313 - grep SLOW on multibyte LC_CTYPE</a></li>
</ul>

<p>The moral of the story: despite popular belief, the Linux distributors <em>do</em> know what they are doing, at least sometimes. Don't second-guess them.</p>
"
"<p>I've written a Ruby script that is reading a file (<code>File.read()</code>) that contains unicode characters, and it works fine from the command line.</p>

<p>However, when I try to put it into an Automator Workflow (Mac OS X), I get this error;</p>

<pre><code>2009-12-23 17:55:15 -0500: /Users/jeffreyaylesworth/bin/symbols:19:in `split': invalid byte sequence in US-ASCII (ArgumentError)
(traceback)
</code></pre>

<p>So when running from Automator, split suddenly doesn't like non ASCII characters. As far as I can tell, both are running from the same version of Ruby (the version number is the same).</p>

<p>I'm not too concerned about why they are acting different (but if someone knows, that's great), but I would like a solution to make split accept non ASCII characters.</p>

<p>If it helps, I need to split text at a single character into two pieces, so if something that's similar to C's tokenizer would work, I can use that.</p>
","2988","","<p>You don't specify the encoding of the file. Since it is impossible to reliably determine the encoding of a file automatically, the encoding must be explicitly specified. If it isn't, the external encoding is used, if that isn't set, the encoding specified in the environment is going to be used, and if the environment doesn't specify an encoding, the file is assumed to be in 7 bit US-ASCII.</p>

<p>In your case, it seems that there is either a difference in the two environments (automated scripts are often run in a very restrictive environment without locale settings) or in the way the interpreter gets invoked.</p>

<p>So, you'd need to do something like</p>

<pre><code>File.read('/path/to/file', encoding: 'UTF-8')
</code></pre>
"
"<p>In order to write testable C# code, I use DI heavily.</p>

<p>However lately I've been messing around with IronPython and found that as you can mock any methods/classes/functions etc... you like, the need for DI is gone.</p>

<p>Is this the case for dynamic langagues such as Python?</p>

<p>Instead of:</p>

<pre><code>class Person(Address) {
...
</code></pre>

<p>You can have:</p>

<pre><code>class Person() {
...
    // Address initialised in here.
</code></pre>

<p>For dynamic languages and therefore following manaual DI for dynamic langagues is simply not needed.</p>

<p>Any advice on this?</p>
","2988","","<p>I strongly disagree with your statement that Dependency Injection is not needed in dynamically typed languages. The reasons for why DI is useful and necessary are completely independent of the typing discipline of the language.</p>

<p>The main difference is that DI in dynamically typed languages is easy and painless: you don't need a heavyweight framework and a gazillion lines of XML configuration.</p>

<p>In Ruby, for example, there are only two DI frameworks. Both were written by a Java programmer. Neither of the two frameworks is used by a <em>single</em> project. Not even by the <em>author</em> of those frameworks.</p>

<p>However, DI is used all over the place in Ruby.</p>

<p>Jamis Buck, who is the author of both of those frameworks gave a talk called <em><a href=""http://RubyConf2008.ConFreaks.Com/recovering-from-enterprise.html"">Recovering from Enterprise</a></em> at RubyConf 2008 about how and why he wrote those frameworks and why that was a bad idea, which is well worth watching. (Just substitute ""Python"" everytime he says ""Ruby"" and everything will be just as valid.)</p>
"
"<p>Is  there any possibility to return multiple values from method?  Something like this:</p>

<pre><code>def do()
  return [""a"", 10, SomeObject.new]
end

[a, b, c] = do
</code></pre>
","2988","","<p>Ruby has a limited form of destructuring bind:</p>

<pre><code>ary = [1, 2, 3, 4]
a, b, c = ary
p a # =&gt; 1
p b # =&gt; 2
p c # =&gt; 3

a, b, *c = ary
p c # =&gt; [3, 4]

a, b, c, d, e = ary
p d # =&gt; 4
p e # =&gt; nil
</code></pre>

<p>It also has a limited form of structuring bind:</p>

<pre><code> a = 1, 2, 3
 p a # =&gt; [1, 2, 3]
</code></pre>

<p>You can combine those two forms like so:</p>

<pre><code>a, b = b, a # Nice way to swap two variables

a, b = 1, 2, 3
p b # =&gt; 2

def foo; return 1, 2 end
a, b = foo
p a # =&gt; 1
p b # =&gt; 2
</code></pre>

<p>There's several other things you can do with destructuring / structuring bind. I didn't show using the splat operator (<code>*</code>) on the right hand side. I didn't show nesting (using parantheses). I didn't show that you can use destructuring bind in the parameter list of a block or method.</p>

<p>Here's just an appetizer:</p>

<pre><code>def foo(((a, b, c, d), e, *f), g, *h)
  local_variables.sort.each do |lvar| puts ""#{lvar} =&gt; #{eval(lvar).inspect}"" end
end

foo([[1, 2, 3], 4, 5, 6], 7, 8, 9)
# a =&gt; 1
# b =&gt; 2
# c =&gt; 3
# d =&gt; nil
# e =&gt; 4
# f =&gt; [5, 6]
# g =&gt; 7
# h =&gt; [8, 9]
</code></pre>
"
"<p>When we bid for Government RFP's they usually ask us to use 'Open source technologies'. Since Microsoft.NET framework is free to use, can it be considered 'open source technology' for this purpose?</p>
","2988","","<p>No, the .NET framework is <em>not</em> Open Source, it's a proprietary Microsoft product. In fact, .NET already fails the most obvious requirement for being Open Source: its source is not open.</p>

<p>The price has absolutely <em>nothing</em> to do with it. (Quite the opposite, actually: one of the freedoms granted by Open Source is to charge however much you want.)</p>

<p>The question of whether or not something is Open Source is a question of copyright and, more broadly, intellectual property.</p>

<p>Just the availability of <em>complete</em> source code for the <em>entire</em> product is not enough. The copyright license covering the source code must also allow anyone (without discrimination against either people, fields of use or combination of the product with other products) to <em>modify</em> the product and distribute and sell the modified product (also re-distribute and sell the original product).</p>

<p>The <em>exact</em> definition of Open Source is given by the Open Source Initiative in its <a href=""http://OpenSource.Org/docs/osd/"" rel=""nofollow"">Open Source Definition</a> (<a href=""http://OpenSource.Org/docs/definition.php"" rel=""nofollow"">annotated version</a>). Note that .NET violates <em>at least</em> articles 1, 2, 3, 6, 7 and maybe 5. A full ist of all copyright licenses that have been certified by the OSI to conform to the OSD can be found <a href=""http://OpenSource.Org/licenses/"" rel=""nofollow"">here</a>. Note again that .NET's license is <em>not</em> listed here.</p>

<p>Another, related, definition is the <a href=""http://GNU.Org/philosophy/free-sw.html"" rel=""nofollow"">Free Software Definition</a> by the Free Software Foundation. Note that .NET violates all four freedoms. The FSF also maintains a <a href=""http://GNU.Org/licenses/license-list.html"" rel=""nofollow"">list of licenses that conform to the FSD</a>. Again, .NET's license is not listed as a Free Software License.</p>

<p>That said, a small subset of .NET 2.0 has been standardized as ECMA-335 and ISO/IEC 23271:2006 (CLI), ECMA-334 and ISO/IEC 23270:2006 (C#) and ECMA-372 (C++/CLI). However, this <em>only</em> covers .NET 2.0, so no WPF, no Silverlight, no LINQ, no local variable type inference, no generic co- and contravariance, no anonymous types, no expression trees, no extension methods, no lambda expressions, no <code>dynamic</code>. It also only covers a subset of .NET 2.0, some notable missing features are Visual Basic.NET, WinForms, ASP.NET and in general everything having to with Windows interop or COM interop.</p>

<p>There <em>are</em> Open Source implementations of ECMA-334/335/372, most notably <a href=""http://Mono-Project.Com/"" rel=""nofollow"">Mono</a>. In fact, Mono not only implements the ECMA specifications, but some other parts as well, such as some .NET 3.0, 3.5 and even 4.0 compatibility, Moonlight (compatible with Silverlight 2.0), ASP.NET.</p>

<p>However, those parts that go beyond the ECMA specifications are not covered by Microsoft's Specification Patent Promise, and thus at least some people fear that those parts might be subject to patent litigations. (Although that is IMHO very unlikely, and easy to circumvent.)</p>

<p>However, the <em>most important</em> thing to do is: <strong>Ask your lawyer</strong>. StackOverflow is a programmer website. You probably wouldn't ask your lawyer about programming advice, either, so why is it that people always ask programmers for legal advice?</p>
"
"<p>I just wondered whether there is any good reason for or even an advantage in having to invoke <code>Proc</code>s using <code>proc.call(args)</code> in Ruby, which makes higher-order function syntax much more verbose and less intuitive.</p>

<p>Why not just <code>proc(args)</code>? Why draw a distinction between functions, lambdas and blocks? Basically, it's all the same thing so why this confusing syntax? Or is there any point for it I don't realize?</p>
","2988","","<p>You <em>need</em> some way to distinguish between <em>calling</em> the <code>Proc</code> and <em>passing</em> it around.</p>

<p>In Python and ECMAScript, it's simple: with parentheses it's a call, without it's not. In Ruby, leaving off the parentheses is <em>also</em> a call, therefore, there must be some <em>other</em> way to distinguish.</p>

<p>In Ruby 1.8, <code>Proc#call</code> and its alias <code>Proc#[]</code> serve that distinction. As of Ruby 1.9, there is a new allowed method name <code>()</code> which gets called like this <code>obj.()</code> and <code>Proc#()</code> is <em>also</em> an alias for <code>Proc#call</code>.</p>

<p>So, you can call a <code>Proc</code> like this:</p>

<ul>
<li>foo.call(1, 2, 3)</li>
<li>foo[1, 2, 3]</li>
<li>foo.(1, 2, 3)</li>
</ul>

<p>And you can even also define <code>()</code> for your <em>own</em> classes.</p>

<p>BTW: the same problem is also why you have to use the <code>method</code> method to get a hold of a method object.</p>
"
"<p>I've just started working with Ruby, and discovered statement modifiers when RubyMine suggested I change this code:</p>

<pre><code>if !VALID_DIRECTIONS.include?(direction)
   raise ArgumentError, ""Invalid direction""
end
</code></pre>

<p>to this:</p>

<pre><code>raise ArgumentError, ""Invalid direction"" if !VALID_DIRECTIONS.include?(direction)
</code></pre>

<p>I like how it makes the code more succinct.  However, I can see it potentially misleading at a first glance and imposing a readability issue, because it places the effect before the condition.  Then again, maybe that's just because I'm so used to C-style languages.</p>

<p>Has anyone run into trouble as a result of using statement modifiers, or do you feel they have improved your code?  Also, does anyone have general guidelines for using the modifiers (i.e., works particularly well for some operations, or not for some others)?</p>
","2988","","<p>I find that I usually have no trouble reading those trailing conditionals (as they are also sometimes called), provided that <em>other</em> code readability guidelines are still followed. Putting a 60 character expression and a 40 character condition on the same line, you are going to end up with a 100 character gob of text, which is surely going to be unreadable, completely independent of the issue of trailing conditionals.</p>

<p>In the specific code sample you are showing, it is pretty much obvious that there <em>must</em> be a conditional following. Who would want to <code>raise</code> an <code>ArgumentError</code> without even taking a look at the arguments first?</p>

<p>Also, trailing conditionals are similar to guard clauses in math and functional languages, which also tend to be written <em>after</em> the expression they are guarding.</p>

<p>Last but not least, putting a couple of <code>raise Bar if foo</code> and <code>return nil if quux</code> expressions at the beginning of methods, as kind of guards, is actually considered <em>good</em> style, to simplify the control flow of the method. Again: since these come at the beginning of the method, it is kind of obvious that there <em>has</em> to be a condition, otherwise <code>return</code>ing from the beginning of the method wouldn't make sense.</p>

<p><hr></p>

<p>PS: I would actually use <code>unless</code> there, to get rid of the negation. With more complicated conditions, I find that <code>unless</code> can sometimes be hard to parse, but in this case, it's <em>more</em> obvious, at least IMHO.</p>
"
"<p>In order to write more concisely, rather than do this:</p>

<pre><code>test_value = method_call_that_might_return_nil()
if test_value
  do_something_with test_value
end
</code></pre>

<p>I've been assigning in the conditional:</p>

<pre><code>if test_value = method_call_that_might_return_nil()
  do_something_with test_value
end
</code></pre>

<p>Is this bad style? The still-more-concise syntax:</p>

<pre><code>do_something_with test_value if test_value = method_call_that_might_return_nil()
</code></pre>

<p>is not allowed, as discussed <a href=""http://stackoverflow.com/questions/1380331/conditional-statement-and-assigning-value-in-ruby"">in another SO question</a>, and will remain that way in 1.9, according to Matz (http://redmine.ruby-lang.org/issues/show/1141).</p>

<p>Given the possible confusion of assignment and comparison, does this make it too hard to read the code?</p>
","2988","","<p>One <em>somewhat</em> widespread idiom is to use <code>and</code>, which would look something like this:</p>

<pre><code>tmp = method_call_that_might_return_nil and do_something_with tmp
</code></pre>

<p>Another possibility would be to call <code>#nil?</code> explicitly, that way the intent becomes a little bit clearer; in particular it is really obvious that you actually <em>meant</em> to assign instead of compare:</p>

<pre><code>unless (tmp = method_call_that_might_return_nil).nil?
  do_something_with tmp
end
</code></pre>
"
"<p>In Python if i want to give out an app without sources i can compile it in bytecode .pyc, is there a way to do something like it in ruby?</p>
","2988","","<p>I wrote a <a href=""http://StackOverflow.Com/questions/884186/can-ruby-php-or-perl-create-a-pre-compiled-file-for-the-code-like-python/885171/#885171"">much more detailed answer to this question</a> over at the question <a href=""http://StackOverflow.Com/questions/884186/""><em>Can Ruby, PHP, or Perl create a pre-compiled file for the code like Python?</em></a></p>

<p>The answer is: it depends. The Ruby <em>Language</em> has no provisions for compiling to bytecode and/or running bytecode. It also has no specfication of a bytecode format. The reason for this is simple: it would be much too restricting for language implementors if they were forced to use a specific bytecode format, or even bytecodes at all. For example, XRuby and JRuby compile to JVM bytecode, Ruby.NET and IronRuby compile to CIL bytecode, Cardinal compiles to PAST, SmallRuby compiles to Smalltalk/X bytecode, MagLev compiles to GemStone/S bytecode. For all of these implementations it would be plain stupid to use any other bytecode format than the one they currently use, since their whole point is interoperating with other language implementations that use the same bytecode format.</p>

<p>Simlar for MacRuby: it compiles to native code, not bytecode. Again, using bytecode would be stupid, since one of the goals is to run Ruby on the iPhone, which pretty much requires native code.</p>

<p>And of course there is MRI, which is a pure AST-walking script interpreter and thus doesn't have a bytecode format.</p>

<p>That being said, there <em>are</em> some Ruby <em>Implementations</em> which allow compiling to and loading from bytecode. Rubinius allows that, for example. (Indeed, it <em>has</em> to have that functionality since its Ruby compiler is written in Ruby, and thus the compiler must be compiled to Rubinius bytecode first, in order to solve the Catch-22.)</p>

<p>YARV also can save and load bytecode, although the loading functionality is currently disabled until a bytecode verifier is implemented that prevents users from loading manipulated bytecode that could crash or otherwise subvert the interpreter.</p>

<p>But, of course, both of these have their own bytecode formats and don't understand each other's (nor tinyrb's or RubyGoLightly's or ...) Also, neither of those formats is understood by a JVM or a CLR and vice versa.</p>

<p>However, the whole point is irrelevant because, as Mark points out, you can always reverse engineer the byte code anyway, especially in cases like CPython, PyPy, Rubinius, YARV, tinyrb, RubyGoLightly, where the bytecode format was specifically designed to be very close to the source language.</p>

<p>In general it is simply impossible to protect code that way. The reason is simple: you want the machine to be able to execute the code. (Otherwise what's the point in writing it in the first place?) However, in order to execute the code, the machine must <em>understand</em> the code. Since machines are much dumber than humans, it follows that any code that can be understood by a machine can just as well be understood by a human, no matter whether that code happens to be in source form, bytecode, assembly, native code or a deck of punch cards.</p>

<p>There is only one workable technical solution: if you control the <em>entire</em> execution pipeline, i.e. build your own CPU, your own computer, your own operating system, your own compiler, your own interpreter, and so forth and use strong cryptography to protect all of those, <em>then</em> and <em>only</em> then <em>might</em> you be able to protect your code. However, as e.g. Microsoft found out the hard way with the XBox 360, even doing all of that and hiring some of the smartest cryptographers and mathematicians on the planet, doesn't guarantee success.</p>

<p>The only <em>real</em> solution is not a technical but a social one: as soon as you have written your code, it is <em>automatically</em> fully protected by copyright law, without you having to do one single thing. That's it. Your code is protected.</p>
"
"<p>I'm using pdf-writer gem in ruby.</p>

<p>While drawing a table, i need to set the shade_color and shade_color2 of table so that the rows get the alternate shade and shade2 colors.</p>

<p>Can anyone tell me how to set them?</p>

<p>Like table.shade2 = Color::RGB::Magenta</p>

<p>But i have a hexa vaue like 989898. Now, how to use this.</p>

<p>Any help is appreciated. </p>

<p>Thanks</p>
","2988","","<p>Just as a sidenote: PDF::Writer has been more or less abandoned and been replaced by <a href=""http://Prawn.MajesticSeaCreature.Com/"" rel=""nofollow"">Prawn</a>.</p>
"
"<p>I am using Ruby 1.8.6 for the following code:</p>

<pre><code># Create an array and override the #to_s on that object
thing = [1,2,3]
def thing.to_s
  'one'
end

print ""Using print: ""
print thing

puts
puts ""Using puts: ""
puts thing
</code></pre>

<p>Output:</p>

<pre><code>Using print: one
Using puts: 
1
2
3
</code></pre>

<p>So <strong><em>thing</em></strong> is an <strong><em>Array</em></strong> and I have overridden <strong><em>thing</em></strong>#to_s. <strong><em>print</em></strong> seems to use my overriden implementation while <strong><em>puts</em></strong> does not. Why?</p>

<p>I have followed the source code of Kernel#puts and Kernel#print (which are C-implementations) and see that they are very different implementations. I want to know what might be the design-decision (if any) behind this?</p>

<p>By the way, if I create <strong><em>thing</em></strong> as an instance of another class I wrote (or as a Hash/String/other-classes I tried), both print and puts use the overridden implementation of to_s.</p>
","2988","","<p>Oh boy ... This has already been the topic of a countless number of endless threads on the ruby-talk mailinglist, the ruby-core mailinglist and a gazillion of blogs.</p>

<p>The gist of it is that <code>puts</code> special cases <code>Array</code>s. Why it special cases those, why it special cases <em>only</em> those (as opposed to, say, all <code>Enumerable</code>s), why <em>it</em> special cases those (and not, say, <code>print</code>), nobody really knows. It is the way it is.</p>

<p>BTW, since you mentioned the POLS: the Ruby community has always made it <em>very</em> clear that the POLS <em>only</em> applies to matz. So, Ruby is about not surprising matz. If you or me or anybody else is surprised, that doesn't count.</p>
"
"<p>When writing executable scripts, and declarative configuration files that use a common language (eg. Python), I often find it undesirable to add an extension to the file name. Many syntax-highlighting text editor (eg. Geany) are subsequently unable to automatically determine the filetype.</p>

<p>Is there any standard method for indicating to editors the type of source in the file?</p>
","2988","","<h2>Vim</h2>

<p>Vim has a concept called a <a href=""http://VimDoc.SourceForge.Net/htmldoc/usr_21.html#21.6"">modeline</a>. A modeline is a specially formatted line either withinin the first or last 5 lines of the textfile, which allows you to <code>:setlocal</code> local variables. For example, for C:</p>

<pre><code> /* vi: set filetype=c fileencoding=UTF-8 shiftwidth=4 tabstop=4 expandtab */
</code></pre>

<p>or Ruby:</p>

<pre><code> # vi: set filetype=ruby fileencoding=UTF-8 shiftwidth=2 tabstop=2 expandtab
</code></pre>

<p><a href=""http://VimDoc.SourceForge.Net/htmldoc/options.html#modeline"">Some more documentation</a>.</p>

<h2>Emacs</h2>

<p>Emacs has a similar concept, called <a href=""http://GNU.Org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html#Specifying-File-Variables"">File Variables</a>.</p>

<p>File Variables are either specified at the beginning of the file (in the first line, or if there is a shebang line, then in the second) in this form:</p>

<pre><code>/* *-* mode: cc c-basic-offset: 4; tab-width: 4; indent-tabs-mode: nil *-* */
</code></pre>

<p>or at the end:</p>

<pre><code># Local Variables:
# mode: ruby
# coding: utf-8
# c-basic-offset: 2
# tab-width: 2
# indent-tabs-mode: nil
# End:
</code></pre>

<h2>jEdit</h2>

<p>jEdit calls this <a href=""http://jEdit.Org/users-guide/buffer-local.html"">buffer-local properties</a>. The have to sit within the first or last 10 lines and look like this:</p>

<pre><code># :mode=ruby:indentSize=2:tabSize=2:noTabs=true:
</code></pre>

<p>jEdit also uses the shebang line as a fallback for mode detection.</p>

<h2>Komodo Edit</h2>

<p>There is a plugin called <a href=""http://Community.ActiveState.Com/forum/komode-modeline-support-komodo/"">Komode</a> (pun intended) which adds modeline support to Komodo Edit:</p>

<pre><code># komode: le=unix language=ruby codepage=utf8 tab=2 notabs indent=2
</code></pre>

<p>It also understands a limited subset of Vim modelines.</p>

<h2>Others</h2>

<p>A lot of other editors also have either their own variants of this, or support one of the above (usually Vim).</p>

<h2>Python / Ruby encoding</h2>

<p>Both Ruby 1.9 and Python require that the encoding for non-ASCII source files be explicitly specified. Fortunately, they do this in a way that is compatible with both Emacs and Vim modelines. (Basically, they look for the string <code>coding</code> followed by a non-word character followed by whitespace followed by a valid encoding name. Both Vim's <code>fileencoding=</code> and Emacs' <code>coding:</code> satisfy these requirements.)</p>

<h2>Modeline Generator</h2>

<p>Here is a simple <a href=""http://Wireshark.Org/tools/modelines.html"">modeline generator</a>, which generates modelines for Vim, Emacs and jEdit.</p>
"
"<p>I am using the authlogic gem with Ruby on Rails, and I have been using the following to obtain the id of the user that is currently logged in:</p>

<pre><code>current_user = UserSession.find
id = current_user &amp;&amp; current_user.record.id
</code></pre>

<p>I'm not understanding how current_user &amp;&amp; current_user.record.id returns the current user id. I would think this would return a boolean. Can someone explain how this works?</p>
","2988","","<p>There is no <code>Boolean</code> type in Ruby; Ruby has a rather simple view of truth (or more precisely, it has a rather simple view of <em>falsehood</em>).</p>

<ul>
<li>the <code>false</code> object, which is the singleton instance of <code>FalseClass</code> is considered <strong>falsy</strong></li>
<li>the <code>nil</code> object, which is the singleton instance of <code>NilClass</code> is <strong>falsy</strong></li>
<li><em>every other object</em> is <strong>truthy</strong> (including, obviously, the <code>true</code> object, which is the singleton instance of <code>TrueClass</code>)</li>
</ul>

<p>[BTW: this means that a lot of objects that are considered <strong>falsy</strong> in some other languages, are actually <strong>truthy</strong> in Ruby, like the integer <code>0</code>, the real value <code>0.0</code>, the empty string, the empty array, the empty hash, the character <code>'F'</code>]</p>

<p>So, the Boolean operators <code>&amp;&amp;</code>, <code>||</code>, <code>and</code> and <code>or</code> <em>do not</em> return Boolean values. Instead they return <em>the first object that determines the outcome of the expression</em>.</p>

<p>(They are also short-circuiting, which means that they only evaluate the minimum sub-expressions that are needed to determine the outcome of the expression. So, an alternate formulation would be that they return the result of the last expression that was evaluated. Which, in turn, is analogous to what blocks, methods, class bodies and module bodies do.)</p>

<p>So, what does it <em>mean</em> to return the first object that determines the outcome? That's simple, really: the result of the expression</p>

<pre><code> a &amp;&amp; b
</code></pre>

<p>is <strong>truthy</strong> if <em>both</em> <code>a</code> and <code>b</code> are <strong>truthy</strong>, otherwise it is <strong>falsy</strong>. So, if <code>a</code> is <strong>falsy</strong>, it is <em>completely</em> irrelevant what <code>b</code> is: the result will be <strong>falsy</strong> either way. So, we might just as well simply return <code>a</code>. (Remember, a doesn't have to be <code>false</code>, it could also be <code>nil</code> and the programmer might want to know which one of the two it was.)</p>

<p>If, OTOH, <code>a</code> is <strong>truthy</strong> (IOW it is neither <code>nil</code> nor <code>false</code>), then the result of the whole expression is <em>solely</em> dependent on <code>b</code>: if <code>b</code> is <strong>truthy</strong>, the whole result will be <strong>truthy</strong>, otherwise if <code>b</code> is <strong>falsy</strong>, the whole result will be <strong>falsy</strong>. So, we might just as well return <code>b</code> itself, instead of first converting it to a Boolean.</p>

<p><code>||</code> and <code>or</code> are analogous or more precisely <em>dual</em> to <code>&amp;&amp;</code> and <code>and</code>.</p>

<p>You posted this example:</p>

<pre><code>id = current_user &amp;&amp; current_user.record.id
</code></pre>

<p>Here, the author isn't even <em>expecting</em> <code>current_user</code> to be a Boolean value! Instead, he expects it to be either a <code>User</code> or <code>nil</code>. But that's perfectly fine, because a <code>User</code> is <strong>truthy</strong> and <code>nil</code> is <strong>falsy</strong>, so they still can be used in a Boolean expression.</p>

<p>The basic intention is that the author wants to prevent a <code>NoMethodError</code> exception being raised, if he tries to call <code>#record</code> on <code>nil</code>.</p>

<p>An alternative way of expressing this would be </p>

<pre><code>id = current_user.record.id unless current_user.nil?
</code></pre>

<p>If you want all the gory details, check out Section 11.1 (page 36) of the <a href=""http://ruby-std.netlab.jp/draft_spec/draft_ruby_spec-20091201-hl.pdf"">Draft ISO Ruby Specification</a> or the excutable specifications of the <a href=""http://RubySpec.Org/"">RubySpec project</a>. (<a href=""https://GitHub.Com/RubySpec/RubySpec/blob/master/language/and_spec.rb"">Here's the one for <code>&amp;&amp;</code></a>.)</p>

<p>I wrote a <a href=""http://JoergWMittag.GitHub.Com/b001e/"">pure Ruby implementation of Ruby's Boolean operators and conditional expressions</a> once for fun. The meat of the implementations is these <a href=""https://GitHub.Com/JoergWMittag/b001e/blob/master/lib/b001e/falsiness.rb"">two</a> <a href=""https://GitHub.Com/JoergWMittag/b001e/blob/master/lib/b001e/truthiness.rb"">mixins</a>.</p>
"
"<p>Hi I have a strange situation here:</p>

<pre><code># Is there a semantic difference between these 2 in ruby?


class MyClass &lt; ClassThatExtendsActiveRecordBase

...

# code snippet A:

  def image_width(size); self.image.width(size); end

# vs code snippet B

  def image_width(size)
    self.image.width(size)
  end

end
</code></pre>

<p>I have a situation where code snippet A didn't appear to be recognised as a function 
but when I modify A by substituting semicolons with return chars to produce B the methods are recognised (this is ruby 1.8.7)</p>

<p>Is anyone able to help me understand what is happening that this occurs? </p>
","2988","","<blockquote>
  <p>Is there a semantic difference between these 2 in ruby?</p>
</blockquote>

<p>There shouldn't be. And there isn't, at least with the versions I have tested:</p>

<ul>
<li><strong>YARV 1.9.2 Snapshot</strong> ruby 1.9.2dev (2010-01-02 trunk 26229) [i686-linux]</li>
<li><strong>YARV 1.9.1p243</strong> ruby 1.9.1p243 (2009-07-16 revision 24175) [i386-mingw32]</li>
<li><strong>MRI 1.8.7p174</strong> ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-linux]</li>
<li><strong>MRI 1.8.6p383</strong> ruby 1.8.6 (2009-08-04 patchlevel 383) [i386-mingw32]</li>
<li><strong>JRuby 1.5 Snapshot (1.9 mode)</strong> jruby 1.5.0.dev (ruby 1.9.2dev trunk 24787) (2009-11-02 6586) (Java HotSpot(TM) Client VM 1.7.0-ea) [x86-java]</li>
<li><strong>JRuby 1.5 Snapshot (1.8 mode)</strong> jruby 1.5.0.dev (ruby 1.8.7 patchlevel 174) (2009-11-02 6586) (Java HotSpot(TM) Client VM 1.7.0-ea) [x86-java]</li>
<li><strong>JRuby 1.4.0 (1.9 mode)</strong> jruby 1.4.0 (ruby 1.9.2dev trunk 24787) (2009-11-02 69fbfa3) (Java HotSpot(TM) Client VM 1.7.0-ea) [x86-java]</li>
<li><strong>JRuby 1.4.0 (1.8 mode)</strong> jruby 1.4.0 (ruby 1.8.7 patchlevel 174) (2009-11-02 69fbfa3) (Java HotSpot(TM) Client VM 1.7.0-ea) [x86-java]</li>
<li><strong>JRuby 1.3.1 (1.9 mode)</strong> jruby 1.3.1 (ruby 1.8.6p287) (2009-06-15 2fd6c3d) (Java HotSpot(TM) Client VM 1.6.0_14) [i386-java]</li>
<li><strong>JRuby 1.3.1 (1.8 mode)</strong> jruby 1.3.1 (ruby 1.9.1p0) (2009-06-15 2fd6c3d) (Java HotSpot(TM) Client VM 1.6.0_14) [i386-java]</li>
<li><strong>IronRuby</strong> IronRuby 0.9.1.0 on .NET 4.0.0.0</li>
<li><strong>IronRuby</strong> IronRuby 0.9.2.0 on .NET 2.0.0.0</li>
</ul>

<p>Since the code example you posted is incomplete and doesn't even parse correctly, I used a slightly modified version to test:</p>

<pre><code>class C &lt; Object
  def semicolon(arg); self.foo(arg); end

  def newlines(arg)
    self.foo(arg)
  end

  def really_short(arg) foo(arg) end

  def foo(arg) arg end
end

require 'test/unit'
class TestMethodDefinition &lt; Test::Unit::TestCase
  def test_that_semicolons_work
    assert_equal :foo, C.new.semicolon(:foo)
  end
  def test_that_newlines_work
    assert_equal :foo, C.new.newlines(:foo)
  end
  def test_that_really_short_definitions_work
    assert_equal :foo, C.new.really_short(:foo)
  end
end
</code></pre>

<p>You wrote</p>

<blockquote>
  <p>[...] didn't appear to be recognised as a function</p>
</blockquote>

<p>What do you mean by that? There is no such thing as a function Ruby, so the fact that functions don't work shouldn't really be surprising.</p>

<p>Also, what do you mean by ""recognised""? This word has a very specific meaning in programming, but you don't appear to be using it with that meaning.</p>

<p>And lastly, what does it mean that it ""appears"" to not work? Does it or doesn't it work?</p>

<p>Could you provide a <em>complete</em> and <em>minimal</em> testcase that exhibits the behavior you are seeing? Also, please describe:</p>

<ul>
<li>what is the behavior you are <em>expecting</em></li>
<li>why you think that behavior should occur</li>
<li>what is the behavior you are <em>actually</em> observing</li>
<li>what are the precise error messages you are getting</li>
</ul>

<p>At the moment, it looks like a very subtle bug in your specific installation of Ruby.</p>
"
"<p>Just about everyone uses them, but many, including me simply take it for granted that they just work.</p>

<p>I am looking for high-quality material. Languages I use are: Java, C, C#, Python, C++, so these are of most interest to me.</p>

<p>Now, C++ is probably a good place to start since you can throw anything in that language. </p>

<p>Also, C is close to assembly. How would one emulate exceptions using pure C constructs and no assembly?</p>

<p>Finally, I heard a rumor that Google employees do not use exceptions for some projects due to speed considerations. Is this just a rumor? How can anything substantial be accomplished without them?</p>

<p>Thank you.</p>
","2988","","<p>Exceptions are just a specific example of a more general case of advanced non-local flow control constructs. Other examples are:</p>

<ul>
<li><em>notifications</em> (a generalization of exceptions, originally from some old Lisp object system, now implemented in e.g. CommonLisp and Ioke), </li>
<li><em>continuations</em> (a more structured form of <code>GOTO</code>, popular in high-level, higher-order languages), </li>
<li><em>coroutines</em> (a generalization of subroutines, popular especially in Lua), </li>
<li><em>generators</em> à la Python (essentially a restricted form of coroutines), </li>
<li><em>fibers</em> (cooperative light-weight threads) and of course the already mentioned </li>
<li><code>GOTO</code>.</li>
</ul>

<p>(I'm sure there's many others I missed.)</p>

<p>An interesting property of these constructs is that they are all roughly equivalent in expressive power: if you have <em>one</em>, you can pretty easily build all the others.</p>

<p>So, how you best implement exceptions depends on what other constructs you have available: </p>

<ul>
<li>Every CPU has <code>GOTO</code>, therefore you can always fall back to that, if you must.</li>
<li>C has <code>setjmp</code>/<code>longjmp</code> which are basically MacGyver continuations (built out of duct-tape and toothpicks, not quite the real thing, but will at least get you out of the immediate trouble if you don't have something better available). </li>
<li>The JVM and CLI have exceptions of their own, which means that if the exception semantics of your language match Java's/C#'s, you are home free (but if not, then you are screwed). </li>
<li>The Parrot VM as both exceptions and continuations. </li>
<li>Windows has its own framework for exception handling, which language implementors can use to build their own exceptions on top.</li>
</ul>

<p>A very interesting use case, both of the <em>usage</em> of exceptions <em>and</em> the <em>implementation</em> of exceptions is Microsoft Live Lab's Volta Project. (Now defunct.) The goal of Volta was to provide architectural refactoring for Web applications at the push of a button. So, you could turn your one-tier web application into a two- or three-tier application just by putting some <code>[Browser]</code> or <code>[DB]</code> attributes on your .NET code and the code would then automagically run on the client or in the DB. In order to do that, the .NET code had to be translated to JavaScript source code, obviously.</p>

<p>Now, you <em>could</em> just write an entire VM in JavaScript and run the bytecode unmodified. (Basically, port the CLR from C++ to JavaScript.) There are actually projects that do this (e.g. the HotRuby VM), but this is both inefficient and not very interoperable with other JavaScript code.</p>

<p>So, instead, they wrote a compiler which compiles CIL bytecode to JavaScript sourcecode. However, JavaScript lacks certain features that .NET has (generators, threads, also the two exception models aren't 100% compatible), and more importantly it lacks certain features that compiler writers <em>love</em> (either <code>GOTO</code> or continuations) and that could be used to implement the above-mentioned missing features.</p>

<p>However, JavaScript <em>does</em> have exceptions. So, they used <em>JavaScript Exceptions</em> to implement <em>Volta Continuations</em> and then they used <em>Volta Continuations</em> to implement <em>.NET Exceptions</em>, <em>.NET Generators</em> and even <em>.NET Managed Threads</em>(!!!)</p>

<p>So, to answer your original question:</p>

<blockquote>
  <p>How are exceptions implemented under the hood?</p>
</blockquote>

<p>With Exceptions, ironically! At least in this very specific case, anyway.</p>

<p>Another great example is some of the exception proposals on the Go mailing list, which implement exceptions using Goroutines (something like a mixture of concurrent coroutines ans CSP processes). Yet another example is Haskell, which uses Monads, lazy evaluation, tail call optimization and higher-order functions to implement exceptions. Some modern CPUs also support basic building blocks for exceptions (for example the Vega-3 CPUs that were specifically designed for the Azul Systems Java Compute Accelerators).</p>
"
"<p>I know that I can view the difference between HEAD and current state with <code>meld .</code>. But how can I view the differences between branches, for example <code>master</code> and <code>devel</code> with meld?</p>

<p>At the moment I do the following steps:</p>

<ol>
<li>Rename folder of working copy<br/>
    For example <code>mv /projectA /projectA_master</code>)</li>

<li>Clone the project again <br/>
    <code>git clone url</code></li>

<li>Switch to <code>devel</code> branch <br/>
    <code>cd projectA && git -b devel origin/devel</code> </li>

<li>View differences with meld <br/>
    <code>meld /projectA_Master projectA</code></li>
</ol> 

<p>Isn't there an easier way to get the same result in meld? I only need it to review the changes and not primarily for merging.</p>
","2988","","<p>Short &amp; sweet:</p>

<pre><code>git config --global diff.tool meld
</code></pre>

<p>This configures Git to use <code>meld</code> as the diff tool. (You don't need to specify the command line arguments, support for <code>meld</code> is built into Git.)</p>

<p>Then, if you want a graphical diff instead of a textual one, you simply invoke <code>git difftool</code> instead of <code>git diff</code> (they both take the same arguments). In your case:</p>

<pre><code>git difftool master..devel
</code></pre>

<hr>

<p>Update:  If you don't want the one-file-at-a-time diff, but instead want to use meld's ""subdirectory"" view with all the changes between the two branches, note the <code>-d</code> or <code>--diff-dir</code> option for <code>git difftool</code>.  For example, when I'm on branch XYZ and I want to see what is different between this and branch ABC, I run this:</p>

<pre><code>git difftool -d ABC
</code></pre>
"
"<p>I've seen a lot of projects using <code>v1.2.3</code> as the naming convention for tags in git. I've also seen some use <code>1.2.3</code>. Is there an officially endorsed style, or are there any good arguments for using either?</p>
","2988","","<p>I don't know of any standards. I simply choose my tag names such that I can stick a </p>

<pre><code>VERSION = `git describe`
</code></pre>

<p>in my build scripts. So, the tag naming convention actually depends on the version naming convention of the project.</p>
"
"<p>I am trying to settle on a GUI framework for Ruby and I have yet to decide which one I prefer and would like some input. I mainly want to pick the framework with the most support and community involvement. I have shied away from Shoes because the site is down and because I would like some challenge and understanding of what is going on behind the scenes.</p>

<p>I took a look at this post (which is a bit dated so I was hoping for some modern input):
<a href=""http://www.ruby-forum.com/topic/48681"">Best Ruby GUI Framework</a></p>

<p>The two frameworks I have looked at are <a href=""http://www.fxruby.org/"">FXRuby</a> and <a href=""http://ruby-gnome2.sourceforge.jp/"">Ruby-GTK2</a> and I was hoping someone could give some pros and cons to these frameworks or perhaps a recommendation of a GUI framework for Ruby.</p>

<p>Oh and if you do think Shoes is the way to go, please mention that as well.</p>

<p>Thanks!!</p>
","2988","","<p>Swing or SWT.</p>

<p>Yes, I know, it's a <em>really</em> sad state of affairs if any of those two is the best answer to any problem, but that's the way it is.</p>
"
"<p>I am hosting a ruby gem repository which hosts several of my gems for my applications. I am running into some problems when I try to install one of my gems that has the same name as a gem on rubyforge.</p>

<p>gem.config</p>

<pre><code>---
:benchmark: false
:update_sources: true 
:verbose: true
:backtrace: false
:sources:
- http://gems.rubyforge.org
- http://localhost:8888
:bulk_threshold: 1000
</code></pre>

<p>Using the command to install mygem:</p>

<pre><code>gem install mygem --config-file gem.config
</code></pre>

<p>This will install the 'mygem' from the <a href=""http://gems.rubyforge.org"" rel=""nofollow"">http://gems.rubyforge.org</a> repository. When I re-order the sources in the gem.config file, I get the same results.</p>

<p>Is there a way to define my gem repository as the default and fallback to another repository if the gem can't be found?</p>
","2988","","<p>Gem names must be globally unique. If there are multiple gems with the same name, the results are undefined.</p>
"
"<p>The idea would be to replace ERB with templates that are pure XHTML and that the view would be pure code manipulating the template content.</p>

<p>Have this been done already ?</p>
","2988","","<p>There used to be <a href=""http://InfoQ.Com/news/2007/07/mockup-driven-dev-lilu/"" rel=""nofollow"">Lilu</a> by <a href=""http://Rashkovskii.Com/"" rel=""nofollow"">Yuri Rashkovskii</a>, but it is no longer maintained. It is <a href=""http://Gitorious.Org/lilu/"" rel=""nofollow"">still available</a>, though, so if you're interested you can maintain it yourself. (It's very little code, actually, and the templating part proper doesn't need to change anyway. The only part that probably <em>does</em> need to change is the integration into the Rails view engine, and that should be fairly trivial, now that Rails 3 actually does <em>have</em> a proper view engine.)</p>

<p>A newer system that leverages HTML5's <code>data-</code> attributes, is <a href=""http://StoneAn.Com/page/ruhl/"" rel=""nofollow"">RuHL</a> by <a href=""http://StoneAn.Com/"" rel=""nofollow"">Andrew Stone</a>. Here's a quick taste (stolen from the website):</p>

<pre><code>&lt;!-- view.html --&gt;
&lt;html&gt;
  &lt;body&gt;
    &lt;p data-ruhl=""say_hello""/&gt;
  &lt;/body&gt;
&lt;/html&gt;

# model.rb
def say_hello
  ""Hello World""
end

&lt;!-- result.html --&gt;
&lt;html&gt;
  &lt;body&gt;
    &lt;p&gt;Hello World&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
"<p>While trying to brush up my Ruby skills I keep running across this case which I can't figure out an explanation for by just reading the API docs. An explanation would be greatly appreciated. Here's the example code:</p>

<pre><code>for name in [ :new, :create, :destroy ]
  define_method(""test_#{name}"") do
    puts name
  end
end
</code></pre>

<p>What I want/expect to happen is that the <code>name</code> variable will be bound to the block given to <code>define_method</code> and that when <code>#test_new</code> is called it will output ""new"". Instead each defined method outputs ""destroy"" -- the last value assigned to the name variable. What am I misunderstanding about <code>define_method</code> and its blocks? Thanks!</p>
","2988","","<p>The problem here is that <code>for</code> loop expressions do not create a new scope. The only things that create new scopes in Ruby are script bodies, module bodies, class bodies, method bodies and blocks.</p>

<p>If you actually look up the behavior of <code>for</code> loop expressions in the Draft ISO Ruby Specification, you will find that a <code>for</code> loop expression gets executed exactly like an <code>each</code> iterator <em>except</em> for the fact that it does not create a new scope.</p>

<p>No Rubyist would ever use a <code>for</code> loop, anyway: they would use an iterator instead, which <em>does</em> take a block and thus creates a new scope.</p>

<p>If you use an idiomatic iterator, everything works as expected:</p>

<pre><code>class Object
  %w[new create destroy].each do |name|
    define_method ""test_#{name}"" do
      puts name
    end
  end
end

require 'test/unit'
require 'stringio'
class TestDynamicMethods &lt; Test::Unit::TestCase
  def setup; @old_stdout, $&gt; = $&gt;, (@fake_logdest = StringIO.new) end
  def teardown; $&gt; = @old_stdout end

  def test_that_the_test_create_method_prints_create
    Object.new.test_create
    assert_equal ""create\n"", @fake_logdest.string
  end
  def test_that_the_test_destroy_method_prints_destroy
    Object.new.test_destroy
    assert_equal ""destroy\n"", @fake_logdest.string
  end
  def test_that_the_test_new_method_prints_new
    Object.new.test_new
    assert_equal ""new\n"", @fake_logdest.string
  end
end
</code></pre>
"
"<p>In Ruby, I want to store some stuff in a Hash, but I don't want it to be case-sensitive. So for example:</p>

<pre><code>h = Hash.new
h[""HELLO""] = 7
puts h[""hello""]
</code></pre>

<p>This should output 7, even though the case is different. Can I just override the equality method of the hash or something similar?</p>

<p>Thanks.</p>
","2988","","<pre><code>require 'test/unit'
class TestCaseIndifferentHash &lt; Test::Unit::TestCase
  def test_that_the_hash_matches_keys_case_indifferent
    def (hsh = {}).[](key) super(key.upcase) end

    hsh['HELLO'] = 7
    assert_equal 7, hsh['hello']
  end
end
</code></pre>
"
"<p>So as I understand it, the <code>===</code> operator tests to see if the RHS object is a member of the LHS object. That makes sense. But how does this work in Ruby? I'm looking at the Ruby docs and I only see <code>===</code> defined in <code>Object</code>, I don't see it in <code>Integer</code> itself. Is it just not documented?</p>
","2988","","<p><code>Integer</code> is a class, which (at least in Ruby) means that it is just a boring old normal object like any other object, which just happens to be an instance of the <code>Class</code> class (instead of, say, <code>Object</code> or <code>String</code> or <code>MyWhateverFoo</code>).</p>

<p><code>Class</code> in turn is a subclass of <code>Module</code> (although arguably it shouldn't be, because it violates the Liskov Substition Principle, but that is a discussion for another forum, and is also a dead horse that has already been beaten many many times). And in <code>Module#===</code> you will find the definition you are looking for, which <code>Class</code> inherits from <code>Module</code> and instances of <code>Class</code> (like <code>Integer</code>) understand.</p>

<p><code>Module#===</code> is basically defined symmetric to <code>Object#kind_of?</code>, it returns <code>true</code> if its argument is an instance of itself. So, <code>3</code> is an instance of <code>Integer</code>, therefore <code>Integer === 3</code> returns <code>true</code>, just as <code>3.kind_of?(Integer)</code> would.</p>

<blockquote>
  <p>So as I understand it, the <code>===</code> operator tests to see if the RHS object is a member of the LHS object.</p>
</blockquote>

<p>Not necessarily. <code>===</code> is a method, just like any other method. It does whatever I want it to do. And in some cases the ""is member of"" analogy breaks down. In this case it is already pretty hard to swallow. If you are a hardcore type theory freak, then viewing a type as a set and instances of that type as members of a set is totally natural. And of course for <code>Array</code> and <code>Hash</code> the definition of ""member"" is also obvious.</p>

<p>But what about <code>Regexp</code>? Again, if you are formal languages buff and know your Chomsky backwards, then interpreting a <code>Regexp</code> as an infinite set of words and <code>String</code>s as members of that set feels completely natural, but if not, then it sounds kind of weird.</p>

<p>So far, I have failed to come up with a concise description of <em>precisely</em> what <code>===</code> means. In fact, I haven't even come up with a good name for it. It is usually called the <em>triple equals operator</em>, <em>threequals operator</em> or <em>case equality operator</em>, but I strongly dislike those names, because it has absolutely nothing to do with equality.</p>

<p>So, what does it do? The best I have come up with is: imagine you are making a table, and one of the column headers is <code>Integer</code>. Would it make sense to write <code>3</code> in that column? If one of the column headers is <code>/ab*a/</code>, would it make sense to write <code>'abbbba'</code> in that column?</p>

<p>Based on that definition, it could be called the <em>subsumption operator</em>, but that's even worse than the other examples ...</p>
"
"<p>What is GOP and does it relate to either the <a href=""http://en.wikipedia.org/wiki/Graph_%28mathematics%29"" rel=""nofollow"">maths</a> or <a href=""http://en.wikipedia.org/wiki/Graph_%28data_structure%29"" rel=""nofollow"">data structure</a> definitions of graphs?</p>

<p>How does it compare to aop, oop, functional, logic or other paradigms?</p>
","2988","","<p>I have never heard about it before, but a quick Google search seems to suggest that it is basically workflow programming, where the workflows are represented as graphs.</p>

<p>Actually, from what I have read, I don't understand why it's not called <em>state machine programming</em> or rather <em>flowchart programming</em>, since that seems to be basically what it's doing.</p>

<p>For example, this here is an example of a working program in a graph-oriented programming language (in this case Windows Workflow Foundation), <a href=""http://MSDN.Microsoft.Com/library/ee342461.aspx"" rel=""nofollow"">taken from MSDN</a>:<img src=""http://I.MSDN.Microsoft.Com/ee342461.image006.jpg"" alt=""Windows Workflow Foundation Example""></p>
"
"<p>I am a newie in Ruby and I am facing a problem regarding ""each""-like loops. Suppose a code like the following</p>

<pre><code>startIndex = 1
endIndex = 200

(startIndex..endIndex).each do |value|
   p value
   if value&gt;150 then endIndex=100
end
</code></pre>

<p>When I run the code it will run until 200, not until 150. Is there any way to change the limits of the loop range dynamically in Ruby?</p>

<p>Thanks in advance for your help</p>

<p>Tryskele</p>
","2988","","<p>No, what you are trying to do won't work. However, it is also <em>completely</em> unnecessary, since there is a <em>much</em> better, idiomatic way to do the exact same thing you are trying to do:</p>

<pre><code>p *(1..150)
</code></pre>
"
"<p>I've started to write a file format specification for a domain-specific data type. My goal is to improve interoperability between a large number of data providers and search algorithms. I want the result to be available for use, patent-free and without distribution fees.</p>

<p>I'm looking for advice on which license to use, both for the specification and for the contributor agreement, if I need one.</p>

<p>If this were software then I know enough about the GPL, MIT, etc. licenses to make an informed decision. If this were a straight document then I would pick one of the Creative Commons licenses, likely <a href=""http://creativecommons.org/licenses/by/3.0/"" rel=""nofollow"">CC by attribution</a>.</p>

<p>Looking around, I don't find any common license statement or much in the way of advice. I'm leaning towards the one used in RFC (for example, the <a href=""http://www.w3.org/Protocols/rfc2616/rfc2616-sec21.html#sec21"" rel=""nofollow"">HTTP/1.1 copyright statement</a>) but that says ""this document itself may not be modified in any way"" (with exceptions), which is something I'm not used to from developing code under the MIT and GPL licenses. But that restrictions seems pretty common in specifications.</p>

<p>Unlike most documents but like code, specifications can be affected by patent. Is it best practices these days to also state that the specification is patent-free and require any contributors to reveal any patent conflicts they may know of and/or freely license those patents for the purposes of implementing the spec?</p>

<p>Should I require some sort of contributor agreement?</p>

<p>Or should I just wing it, choose the RFC copyright statement (or CC-By-Attribution), and not worry about this?</p>
","2988","","<blockquote>
  <p>""this document itself may not be modified in any way"" (with exceptions) [...] But that restrictions seems pretty common in specifications.</p>
</blockquote>

<p>Actually, it is pretty much a <em>requirement</em>. If anybody could change it at will, it wouldn't be much of a specification: that would defeat the whole <em>purpose</em> to ""improve interoperability between a large number of data providers and search algorithms"".</p>

<p>Dalke: Is it? I'm so used to implementation-defined and ad hoc format definitions and people who break the spec left and right that I didn't think it would add anything, and protection would hinder future extension if I decide to not continue maintaining the code. I thought conformance was better handled by trademark law, like how DRM-based CDs which violate Phillips' Red Book can't use the ""CD"" logo.</p>

<blockquote>
  <p>[...] which is something I'm not used to from developing code under the MIT and GPL licenses</p>
</blockquote>

<p>Actually, you <em>are</em> used to it, you just don't realize it: the whole reason why you were able to just write the three letters ""GPL"" above and blindly assume that everybody knows precisely what you mean, is because the GPL itself contains exactly that same restriction. (""<a href=""http://GNU.Org/licenses/gpl.html"" rel=""nofollow""><em>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</em></a>"") The GPL itself is not distributed under a Free License, precisely <em>because</em> if anybody where allowed to modify it, it would lose its meaning.</p>

<p>Dalke: You're right, although the GFDL's ""invariant section"" sprang immediately to mind when I was considering the possibilities. I will point out that people do things in the license grant which modify the terms of the GPL to, among other things, make it non-free, and I've personally modified the three-clause BSD license to scratch out Berkeley and put in my name, but those are quibbles.</p>

<blockquote>
  <p>Is it best practices these days to also state that the specification is patent-free and require any contributors to reveal any patent conflicts they may know of and/or freely license those patents for the purposes of implementing the spec?</p>
</blockquote>

<p>Yes. It is clear from your question that you care a great deal about making the barrier for implementors as low as possible. Then, what good is a free, open, royalty-free specification if I have to pay for a patent license anyway? This <em>has</em> to be addressed, preferably by an IP/patent lawyer with extensive expertise in such questions (including, but not limited to, the specific challenges that open source projects face with regards to patent licensing).</p>

<p>There are some quite subtle pitfalls in there. For example, one common theme is to require that patent licenses be made available under what is usually called <a href=""http://Wikipedia.Org/wiki/Fair,_Reasonable_and_Non_Discriminatory_terms"" rel=""nofollow""><em>FRAND</em></a> (or <a href=""http://Wikipedia.Org/wiki/Reasonable_and_Non_Discriminatory_Licensing"" rel=""nofollow""><em>RAND</em></a>) terms, which stands for <em>fair, reasonable and non-discriminatory</em>. Which sounds good, right? Except there's a subtle problem there: charging 1 cent for every copy is certainly <em>reasonable</em> and if you charge everybody the same amount, it's also <em>fair</em> and <em>non-discriminatory</em>. Except that open source projects (and even freely distributable proprietary ones) <em>cannot</em> enforce those terms, therefore they cannot implement the specification.</p>

<p>Dalke: Very true. But for licenses that's a well described topic. There are reams of text on the matter, and suggestions, and podcasts, and even automated license choosers. For specifications, not so much. I did know about the RAND issue, and I've heard stories about other spec where a contributor at the end said ""Oh! Look at that! We've got a patent on it. Well lucky us!"" A question is how much I should worry about it.</p>

<p>So, <em>proper</em> patent promises or covenants or whatever you call them, are <em>very</em> important. (As are trademarks, by the way.)</p>

<p>For example, the W3C originally wanted to adopt a RAND license for its specifications, but after significant protests from projects such as Mozilla and Apache, they decided upon a royalty-free model. So, even an organization which cares deeply about freedom and openness <em>almost</em> made a mistake with the potential of killing every single open source web browser, feedreader and XML parser.</p>

<blockquote>
  <p>Or should I just wing it, choose the RFC copyright statement (or CC-By-Attribution), and not worry about this?</p>
</blockquote>

<p>""Winging"" important legal decisions is how people end up bankrupt or even in jail. Or at least extremely unhappy. While the first two are pretty unlikely in this case, I assume that you <em>will</em> be unhappy if you find out in two years that your specification is completely useless because of a glitch in its patent/copyright/IP legalese.</p>

<p>Dalke: I knew that word would be a draw. ;)</p>

<p>There are legal firms that specialize in pro bono work for non-profit developers of open source projects; maybe one of those will help you. The most well-known ones are probably the <a href=""http://SoftwareFreedom.Org/"" rel=""nofollow"">Software Freedom Law Center (SLFC)</a> in the US and the <a href=""http://ifrOSS.Org/"" rel=""nofollow"">Institut für Rechtsfragen der Freien und Open Source Software (ifrOSS)</a> in Germany.</p>

<p>And whaddaya know, the <a href=""http://ifrOSS.Org/ifross_html/home2_2009.html#ARTIKEL18"" rel=""nofollow"">fourth news item on the ifrOSS homepage</a> is about the <a href=""http://OpenWebFoundation.Org/legal/agreement/"" rel=""nofollow"">Open Web Foundation Agreement</a>, which is a license template by the <a href=""http://OpenWebFoundation.Org/"" rel=""nofollow"">Open Web Foundation</a> specifically <a href=""http://OpenWebFoundation.Org/legal/"" rel=""nofollow"">for  open, non-proprietary community-driven specifications for web technologies</a>.</p>

<p>Dalke: Thanks. I'm in Sweden, so I wonder how well those resources will apply to me. Looking at the  OWF I see it's US-based but it tries hard to be international, and I see one thing I don't like; the requirement for attribution. It does look like they are the people to talk to. Thanks for the pointer!</p>
"
"<p>I'm looking for a library that would allow me to synchronize text in real-time between multiple users (ala Google Docs).</p>

<p>I've stumbled upon Operational Transformation, which seems to fit my needs. Having said that, I understand the gist of OT, but not the math nor implementation of OT.</p>

<p>Thus, I was wondering if there was a drag'n'drop Javascript library that would hook into a text area, generate the transforms, then allow me to apply those transformations onto another client?</p>

<p>(I've gotten the Etherpad source, but I can't make head or tails out of it. If anyone could point out how to leverage on Etherpad's OT implementation, that'll be great too!)</p>
","2988","","<p>I think that parts of Google Wave's OT implementation are Open Source (and more parts are coming).</p>

<p>I'm not sure if this is what you are looking for, but an alternative to OT is <a href=""http://neil.fraser.name/writing/sync/"">Differential Synchronization</a>:</p>

<ul>
<li><a href=""http://Google-Diff-Match-Patch.GoogleCode.Com/"">Google-Diff-Match-Patch - Diff, Match and Patch libraries for Plain Text</a>: ""<em>The Diff Match and Patch libraries offer robust algorithms to perform the operations required for synchronizing plain text.</em>""</li>
<li><a href=""http://Google-MobWrite.GoogleCode.Com/"">Google-MobWrite - Real-time Synchronization and Collaboration Service</a>: ""<em>MobWrite converts forms and web applications into collaborative environments. Create a simple single-user system, add one line of JavaScript, and instantly get a collaborative system.</em>"" (Uses Google-Diff-Match-Patch.)</li>
</ul>
"
"<p>You can see all over the web people advising to not use git rebase in a public branch, but I can't see what's the problem if you always rebase a feature branch.</p>

<p>My team always use branchs for features (wow), we are used to have it just locally, so rebase isn't a problem, but sometimes we wanna show the code of a partially done feature to another developer, so we just publicize it, but then we lost all the advantages of git rebase, or at least that's what you can read at the web.</p>

<p>I don't understand what's the problem if the developers working at the same public branch never merge it to any branch (when there is still development on that branch) and when they pull it, they do it with a rebase operation. Any changes made to the branch will be always rebase on top of the remote branch, so never lost and you won't have the problem of having the same commit duplicated.</p>

<h3>Append 1:</h3>

<p>None of the answers until now showed the problems that will happen and how it will happen, so I will try to be clearer.</p>

<p>I will give an example of a workflow using rebase (badly described in the previously paragraphs, sorry) that I don't see any problem.</p>

<p>Initial state:</p>

<pre><code>master         ==========A
origin/feature           +=====AB
feature user A           +=====AB
feature user B           +=====AB
</code></pre>

<p>master get a few commits and user A does a few commits:</p>

<pre><code>master         ==========A=====C
origin/feature           +=====AB
feature user A           +=====AB====D
feature user B           +=====AB
</code></pre>

<p>User A does a ""git pull --rebase"" (he always does it) to update his branch, nothing new comes, then he rebase to master and push:</p>

<pre><code>master         ==========A=====C
origin/feature                 +=====ACB'=====ACB'D
feature user A                 +=====ACB'=====ACB'D
feature user B           +=====AB
</code></pre>

<p>(notice the B' is the new commits that still represents the changes B)</p>

<p>Then user B does a few commits:</p>

<pre><code>master         ==========A=====C
origin/feature                 +=====ACB'=====ACB'D
feature user A                 +=====ACB'=====ACB'D
feature user B           +=====AB======E
</code></pre>

<p>User B finally does a ""git pull --rebase"" as always, there is no need to rebase on master, so he just pushes:</p>

<pre><code>master         ==========A=====C
origin/feature                 +=====ACB'=====ACB'D======E'
feature user A                 +=====ACB'=====ACB'D
feature user B                 +=====ACB'=====ACB'D======E'
</code></pre>
","2988","","<p>If you rebase, you rewrite history. And just like in the real world, if you want to rewrite history, you need a conspiracy: everybody has to be ""in"" on the conspiracy (at least everybody who knows about the history, i.e. everybody who has ever pulled from the branch).</p>

<p>As long as the circle of people who pull from the branch is tightly controlled, it is fairly easy to get a conspiracy going, however, as soon as you publish that history, it becomes a <em>lot</em> harder. It's not impossible, though: the <code>pu</code> branch in Junio C Hamano's Git repository for example, gets rebased after every release, and that is a widely published repository. The way this works is that the fact that the branch will be frequently rebased and the times when that will happen, are widely documented on the Git website, the Git wiki and the Git mailinglist, and every rebase is announced on the mailinglist in advance so that people can prepare for it.</p>
"
"<p>Let's say I have this string:</p>

<p>""birthday cake is my favorite""</p>

<p>I need to convert that to:</p>

<p>""birthday|cake|is|my|favorite""</p>

<p>How would I go about doing that with Ruby?</p>
","2988","","<p>This is <em>precisely</em> what <code>String#tr</code> (and <code>String#tr_s</code>) is for:</p>

<pre><code># Look, Ma! No Regexp!
'birthday cake is my     favorite'.tr_s(' ', '|')
# =&gt; ""birthday|cake|is|my|favorite""
</code></pre>

<p>I admit, the method names aren't the most intuitive. (Unless you are a Mac OSX, Unix, Linux, Cygwin or MinGW user, of course, in which case <code>tr</code> and <code>tr -s</code> will be part of your daily arsenal.)</p>
"
"<p>Why is is that the following fails?</p>

<pre><code>module Test
    def test
        puts ""test""
    end

    puts ""testing""
    test
end
</code></pre>

<p>I get this output:</p>

<pre><code>testing
test.rb:6:in `test': wrong number of arguments (ArgumentError)
    from test.rb:6:in `&lt;module:Test&gt;'
    from test.rb:1:in `&lt;main&gt;'
</code></pre>

<p>Is it because the module hasn't been ""compiled"" yet, since the end keyword hasn't been reached?</p>
","2988","","<pre><code>module Test
  def test # This is an instance method
    puts ""test""
  end

  puts ""testing""
  test     # This is a call to a module method
end
</code></pre>

<p>The two are <em>completely</em> unrelated. Somewhere higher up in your inheritance chain, you have a module method named <code>test</code> which takes at least one argument. (I'm guessing it is the <code>Kernel#test</code> method, which takes two arguments.) Since you call it <em>without</em> an argument, you get an <code>ArgumentError</code> exception.</p>

<p>If you were to provide a little more detail about what the <em>actual</em> problem is, that you are trying to solve, it would be possible to give a better answer. Until then, here's a couple of ideas:</p>

<p>Make the method a module method:</p>

<pre><code>module Test
  def self.test; puts ""test"" end

  puts ""testing""
  test
end
</code></pre>

<p>Extend the module with itself:</p>

<pre><code>module Test
  def test; puts ""test"" end

  extend self

  puts ""testing""
  test
end
</code></pre>

<p>Create an instance of the module:</p>

<pre><code>module Test
  def test; puts ""test"" end
end

puts ""testing""
Object.new.extend(Test).test
</code></pre>

<p>Mix the module into a class, and create an instance of that:</p>

<pre><code>module Test
  def test; puts ""test"" end
end

class Foo; include Test end

puts ""testing""
Foo.new.test
</code></pre>

<p>Mix the module into <code>Module</code>:</p>

<pre><code>module Test
  def test; puts ""test"" end
end

class Module; include Test end

module Test
  puts ""testing""
  test
end
</code></pre>

<p>Mix the module into <code>Object</code>:</p>

<pre><code>module Test
  def test; puts ""test"" end
end

class Object; include Test end

puts ""testing""
test
</code></pre>

<p>Mix the module into the <code>main</code> object:</p>

<pre><code>module Test
  def test; puts ""test"" end
end

include Test

puts ""testing""
test
</code></pre>
"
"<p>I'm writing a library that depend on a specific gem. I require the gem and use it in my code and everything is hunky-dory as long as the gem is installed on the user's machine. but what if it is not?!</p>

<p>I thought it's fine cause I can rescue from the require command and print a message to the output to inform the user about the lacking gem and finish it gracefully but I get an error!</p>

<p>Could you tell me how it should be done or what is wrong with this piece of code: </p>

<pre><code>begin 
 require ""some_gem""
rescue
 puts ""please install some_gem first!"" 
end
</code></pre>
","2988","","<p><code>require</code> raises a <code>LoadError</code> exception if it can't load the required library. However, you <em>never</em> rescue from <code>LoadError</code> anywhere, you rescue from <code>StandardError</code>.</p>

<p>If you want to rescue from <code>LoadError</code>, you have to say so:</p>

<pre><code>begin 
  require 'some_gem'
rescue LoadError
  puts 'please install some_gem first!'
end
</code></pre>

<p>Even better yet, make sure that you are actually printing the <em>correct</em> missing dependency:</p>

<pre><code>begin 
  require 'some_gem'
rescue LoadError =&gt; e
  raise unless e.message =~ /some_gem/
  puts 'please install some_gem first!'
end
</code></pre>

<p>(This re-raises the exact same exception that was rescued from, in case that the exception was actually caused by some other missing library somewhere else. You wouldn't want to print misleading information, right?)</p>

<p>Depending on what the intended target audience for the library is and whether or not they might be scared away by a backtrace being dumped to their console, you might want to re-raise the exception in any case, instead of just swallowing it:</p>

<pre><code>begin 
  require 'some_gem'
rescue LoadError =&gt; e
  puts 'please install some_gem first!' if e.message =~ /some_gem/
  raise
end
</code></pre>

<p>Or, you could skip the <code>puts</code> and instead raise an exception with the message set to what you want to say:</p>

<pre><code>begin 
  require 'some_gem'
rescue LoadError =&gt; e
  raise e.exception('please install some_gem first!') if e.message =~ /some_gem/
  raise
end
</code></pre>

<p>Except now the exception is raised in the wrong place and thus has the wrong line number and stacktrace and thus is misleading, but that is easily fixed:</p>

<pre><code>begin 
  require 'some_gem'
rescue LoadError =&gt; e
  raise unless e.message =~ /some_gem/
  friendly_ex = e.exception('please install some_gem first!')
  friendly_ex.set_backtrace(e.backtrace)
  raise friendly_ex
end
</code></pre>

<p>Now you print pretty much the same thing that you would have printed with the <code>puts</code>, <em>but</em> you have a ""proper"" exception that for example allows better debugging or allows a consumer of your library to rescue <em>that</em> exception and handle it their way, both of which would have been impossible or at least hard with your solution that just swallows the exception.</p>
"
"<p>I need to support a method named 'send-request' as an extension function to be used in an XSLT transformation. This is provided by an extension object on <code>XslCompiledTransform</code>. The cool thing about extension objects vs. <code>&lt;msxsl:script&gt;</code> is, well, that I don't have to use <code>&lt;msxsl:script&gt;</code>, you just declare the namespace and call the function. The bad thing is that the function name must match exactly the CIL method name.</p>

<p>So, I'm wondering, is there a .NET language that supports hyphens in method names ? CLS compliance is not required, the method is invoked using reflection.</p>

<p>Or, can I use some technique that modifies the IL of an assembly to change the method name ?</p>

<p>Or, is there a way to intercept the reflection <code>GetMethod</code> call and trick the caller that a method 'send-request' exists, but return a 'SendRequest' method instead ?</p>
","2988","","<p>Hyphens in identifier names are pretty common in Lisp and Scheme, and thus I suspect it is natively supported in <a href=""http://IronScheme.Codeplex.Com/"" rel=""nofollow"">IronScheme</a>, at least. It's also pretty easy to create methods like this in Ruby, <em>despite</em> the fact that hypens are actually illegal in Ruby identifiers, so you could use <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a>.</p>

<p>Also, there's the <code>@</code> escape-thingy in C# that allows you to use otherwise illegal identifiers, but I couldn't quite figure out how to use it for this case.</p>
"
"<p>I have a mod_rails server where disk space, oddly enough, is at a premium.  Is there a way for me to compress my application's source, like <a href=""http://docs.python.org/library/zipimport.html"" rel=""nofollow"">Python's zipimport</a>?</p>

<p>There are obvious disadvantages to this, so I should probably just break down and spend a nickel on disk space, but I figured it'd be worth a shot.</p>
","2988","","<p><code>require</code> and <code>load</code> are just methods like any other. You can undefine them, redefine them, override them, hook them, wrap them to do anything you want. In fact, that's exactly how RubyGems works.</p>

<p>Now, I don't know whether someone has already implemented this <em>for you</em>, but I actually remember some discussions about this on the <a href=""http://ruby-forum.com/forum/4"" rel=""nofollow"">ruby-talk</a> mailinglist.</p>

<p>However, there <em>are</em> some examples of loading library code from alternative locations that you can look at, and maybe copy / adapt what <em>they</em> are doing for your purpose:</p>

<ul>
<li><a href=""http://blog.astrails.com/2009/5/12/ruby-http-require"" rel=""nofollow"">http_require</a> does pretty much what it sounds like: it allows you to <a href=""https://GitHub.Com/astrails/http_require/blob/master/lib/http_require.rb"" rel=""nofollow""><code>require</code> an HTTP URI</a></li>
<li><a href=""http://copiousfreetime.rubyforge.org/crate/"" rel=""nofollow"">Crate</a> is a Ruby packaging tool which packages a Ruby application into a single binary and a couple of SQLite databases; it modifies <code>require</code> to load libraries out of an (encrypted) SQLite database instead of the filesystem</li>
<li>and of course I already mentioned <a href=""http://RubyGems.Org/"" rel=""nofollow"">RubyGems</a></li>
</ul>
"
"<p>I have two files I've been trying to compare with diff. The files are automatically generated and feature a number of lines that look like:</p>

<pre><code>//!   Generated Date  : Mon, 14, Dec 2009
</code></pre>

<p>I'd like those differences to be ignored, and have set out to use the ""-I REGEX"" flag to make that happen.</p>

<p>However, the number of spaces that appear between ""Date"" and the colon varies and unfortunately, it seems the flavor of regular expressions employed by diff lacks a number of the basic regex utilities.</p>

<p>For instance, I cannot for the life of me get the ""one or more"" plus-sign to work. Same deal with the ""\s"" representation of whitespace.</p>

<pre><code>diff -I '.*Generated Date\s+:.*' ....
</code></pre>

<p>and</p>

<pre><code>diff -I '.*Generated Date +:.*' ....
</code></pre>

<p>both fail spectacularly.</p>

<p>Rather than continuing to blindly try things, can somebody out there point me to a good reference on the diff-specific subset of regular expressions?</p>

<p>Thanks!</p>

<p>===== EDIT =======</p>

<p>Thanks to FalseVinylShrub, I've established that I should be escaping my '+' and any similar characters. This fixes the problem somewhat. Diff successfully matches</p>

<pre><code>.*Generated Date \+.*
</code></pre>

<p>and</p>

<pre><code>.*Generated Date  *.*
</code></pre>

<p>(Note that there are two spaces between ""Date"" and ""*"".)</p>

<p>However, the second I try to add the ':' to that expression, like so:</p>

<pre><code>.*Generated Date \+:.*
</code></pre>

<p>and</p>

<pre><code>.*Generated Date \+\:.*
</code></pre>

<p>Both versions fail to match the string in question and cause diff to take a significantly greater amount of time to run. Any thoughts there?</p>
","2988","","<p><a href=""http://OpenGroup.Org/onlinepubs/9699919799/utilities/diff.html"" rel=""nofollow"">According to the specification</a>, <code>diff</code> doesn't support regular expressions, nor does it have an <code>-I</code> switch.</p>

<p>You appear to be using a non-standard <code>diff</code> with non-standard extensions. How those non-standard extensions work, should be described in the documentation of whatever non-standard <code>diff</code> you are using.</p>
"
"<p>The linux kernel uses a kind of ram disk to access modules at an early boot stage. Out of curiosity I want to understand I have a question:
The file containing the initramfs/initrd must be accessible for the kernel at this stage. This means the kernel must have support for the appropriate filesystem. So why couldn't the content of the initramfs just be in the very same filesystem as plain files?</p>
","2988","","<blockquote>
  <p>The file containing the initramfs/initrd must be accessible for the kernel at this stage.</p>
</blockquote>

<p>This seems to be the heart of your confusion: it's not the <em>kernel</em> that reads the initramfs/initrd, it's the <em>bootloader</em>! The kernel does not need to know how to access the initramfs/initrd. That's the whole <em>point</em> of the exercise!</p>

<p>The <em>bootloader</em> loads the initramfs/initrd into memory, and there is a well-defined communication protocol which allows the bootloader to tell the kernel at what memory address it loaded the initramfs/initrd.</p>

<p>In the case of initramfs, the initramfs image(s) may also be appended to the kernel image.</p>
"
"<p>Good morning</p>

<p>I would like to enable my customers to read their data on my website through cell phones.</p>

<p>My website is ASP.NET application.</p>

<p>I saw Nokia and Apple has their own SDKs that enables you to accomplish it creating software application. </p>

<ul>
<li>Is there a unique language platform I can code my software in order to run it on all cell phone brands? Like java or c++?</li>
<li>If so, is there a quick start application so I'll be able to start studying it?</li>
</ul>

<p>thank you</p>
","2988","","<p>If you use the <a href=""http://RhoMobile.Com/products/rhodes/"" rel=""nofollow"">Rhodes</a> framework by <a href=""http://RhoMobile.Com/"" rel=""nofollow"">Rhomobile</a>, you can write your application <em>once</em> in Ruby, and then deploy to iPhone, Windows Mobile, RIM (Blackberry), Symbian (Nokia) and Android.</p>

<p>You will still have to <em>install</em> all the SDKs for the different phones (which means you pretty much need to use OSX), but you don't have to <em>use</em> them: Rhodes will take care of how to call all the different compilers to generate the different executables.</p>

<p>If you sign up for the <a href=""http://RhoHub.Com/"" rel=""nofollow"">RhoHub</a> hosted development service, you don't even need to install <em>anything</em>, you can build apps for all supported phones on RhoHub's build cloud at the push of a button.</p>

<p>Since this is the third time that this exact same question has been asked, you might also want to look at the other two:</p>

<ul>
<li><a href=""http://StackOverflow.Com/questions/698829/"">Language for phone software development</a></li>
<li><a href=""http://StackOverflow.Com/questions/1338802/"">Which platform is used in companies now-a-days to implement mobile applications?</a></li>
</ul>
"
"<p>What's the difference between the <code>or</code> and <code>||</code> operators in Ruby? Or is it just preference?</p>
","2988","","<p>As the others have already explained, the <em>only</em> difference is the precedence. However, I would like to point out that there are actually <em>two</em> differences between the two:</p>

<ol>
<li><code>and</code>, <code>or</code> and <code>not</code> have <em>much</em> lower precedence than <code>&amp;&amp;</code>, <code>||</code> and <code>!</code></li>
<li><code>and</code> and <code>or</code> have the <em>same</em> precedence, while <code>&amp;&amp;</code> has <em>higher</em> precedence than <code>||</code></li>
</ol>

<p>In general, it is good style to avoid the use of <code>and</code>, <code>or</code> and <code>not</code> and use <code>&amp;&amp;</code>, <code>||</code> and <code>!</code> instead. (The Rails core developers, for example, reject patches which use the keyword forms instead of the operator forms.)</p>

<p>The reason why they exist at all, is not for boolean formulae but for control flow. They made their way into Ruby via Perl's well-known <code>do_this or do_that</code> idiom, where <code>do_this</code> returns <code>false</code> or <code>nil</code> if there is an error and <em>only then</em> is <code>do_that</code> executed instead. (Analogous, there is also the <code>do_this and then_do_that</code> idiom.)</p>

<p>Examples:</p>

<pre><code>download_file_via_fast_connection or download_via_slow_connection
download_latest_currency_rates and store_them_in_the_cache
</code></pre>

<p>Sometimes, this can make control flow a little bit more fluent than using <code>if</code> or <code>unless</code>.</p>

<p>It's easy to see why in this case the operators have the ""wrong"" (i.e. identical) precedence: they never show up together in the same expression anyway. And when they <em>do</em> show up together, you generally <em>want</em> them to be evaluated simply left-to-right.</p>
"
"<p>I've been looking at Haskell lately and it seems like a very nice way to watch programming problems from an alternative point of view - alternative to my usual imperative (I have a strong C++ background) view, at least.</p>

<p>However, all the articles I see seem to deal with the same kinds of programming problems:</p>

<ul>
<li>Parsers</li>
<li>Compilers</li>
<li>Numeric computation problems</li>
</ul>

<p>I'd like to give Haskell a try myself, by writing some GUI application. Hence, I'm wondering: does it make sense to write event-driven systems like GUIs in a functional programming language like Haskell? Or is that a problem domain at which imperative languages excel? Unfortunately it still takes quite some time for me to switch my mind to 'functional' mode, so I have a hard time deciding argueing against or in favor of using a functional programming language for an event-driven system.</p>

<p>I'd also be interested in examples of GUI applications (or event-driven systems, in general) which are implemented in Haskell.</p>
","2988","","<p>Here's a couple of Google keywords for you:</p>

<ul>
<li><a href=""http://Google.Com/search?q=Functional+Reactive+Programming"">Functional Reactive Programming (FRP)</a>, a programming paradigm for, well reactive (aka event-driven) programming in purely functional languages, </li>
<li><a href=""http://Leksah.Org/"">Leksah</a>, a Haskell IDE written in Haskell, </li>
<li><a href=""http://Haskell.Org/haskellwiki/Yi"">Yi</a>, an Emacs-like editor which replaces Lisp with Haskell as the implementation, configuration, customization and scripting language, </li>
<li><a href=""https://GitHub.Com/Mokehehe/Monao/"">Super Monao Bros.</a> (yes, you guessed it, a Jump&amp;Run game)</li>
<li><a href=""http://Haskell.Org/haskellwiki/Frag"">Frag</a> (First-Person Shooter)</li>
<li><a href=""http://Prog21.Dadgum.Com/23.html"">Purely Functional Retrogames</a> is a 4-part series of blog articles about how to write games in a purely functional language, explained using Pacman as the example. (<a href=""http://Prog21.Dadgum.Com/24.html"">Part 2</a>, <a href=""http://Prog21.Dadgum.Com/25.html"">Part 3</a>, <a href=""http://Prog21.Dadgum.Com/26.html"">Part 4</a>.)</li>
</ul>
"
"<p>I was reading <strong><a href=""http://www.dabeaz.com/blog/2010/01/presentation-on-new-python-gil.html"" rel=""nofollow"">this</a></strong> page on the new GIL found/to be found in Python 3.2 and I was wondering if it is the ""killer feature"" that will trigger a transition from Python 2.x to 3.x.</p>

<p>What do you guys think?</p>
","2988","","<p>It's still a GIL. Python implementations <em>without any GIL at all</em> have been available for over a decade now. Python implementations that are <em>much</em> faster than CPython have been available for years.</p>

<p>(Almost) noone uses them, which clearly shows that nobody cares about performance or the GIL, so I hardly see them being a ""killer feature"". Killer features are something that people actually <em>want</em>.</p>
"
"<p>If I have a class instance, containing several included modules, can I dynamically un-include a specific module (In order to replace it)?</p>

<p>Thanks.</p>
","2988","","<p>No. You can't un-include a mixin in the Ruby <em>Language</em>. On some Ruby <em>Implementations</em> you can do it by writing an implementation specific extension in C or Java (or even Ruby in the case of Rubinius), though.</p>
"
"<p>Are there any applications out there that will let me encode my Ruby on Rails code so others can't read it? I plan on selling a few small applications, but I really don't want everyone knowing my code.</p>

<p>Thanks.</p>
","2988","","<p>If you want people to able to run your code (and if you don't, then why did you write it in the first place?), then their CPU needs to be able to execute your code. In order to be able to <em>execute</em> the code, the CPU needs to be able to <em>understand</em> it.</p>

<p>Since CPUs are dumb, and humans aren't, this means that humans can understand the code as well.</p>

<p>The only way you can protect your code through technical means, is if you ""own"" the entire execution path: you need to build your own CPU, your own computer, write your own operating system and your own Ruby interpreter. Then, and <em>only then</em> can you protect your code. (But note that even the <em>tiniest</em> mistake will render all of your protections useless. Microsoft, Apple, Sony, the Music Industry and the Movie Industry can attest to that.)</p>

<p>Or, you could just do nothing, which means that your code will be automatically protected by copyright law.</p>
"
"<p>Could anyone be able to give a regular expressiont to match the link text between <code>&lt;a&gt; and &lt;/a&gt;</code> tags in a HTML snippet.</p>

<p>Sample data: <code>&lt;a href=""link.html""&gt;Link Title&lt;/a&gt; - 15 comments &lt;br/&gt; &lt;a href=""otherlink.html""&gt;Some other Title&lt;/a&gt; - 6 comments</code></p>

<p>Requirement: I need to extract only the link texts (i.e. the one between <code>&lt;a&gt; and &lt;/a&gt;</code> - <em>Link Title</em> and <em>Some other Title</em>) to use in my application. </p>

<p>Please note that the link text might contain non-english characters and all possible puncutations also. I tried using '.' operator, but since it does a <em>greedy</em> match, it matches the entire text between first <code>&lt;a&gt;</code> and last <code>&lt;/a&gt;</code>. But I want only the link texts.</p>

<p>Any help?</p>
","2988","","<p>This has been discussed literally dozens of times already on StackOverflow (and thousands of times in other fora), but apparently it <em>still</em> needs repeating: <strong>it can't be done</strong>.</p>

<p>Regular Expressions can only parse Regular Languages. HTML is <em>not</em> a Regular Language. Proving that you cannot parse HTML with Regular Expressions is a regular (pun intended) homework assignment on pretty much every college and university on the planet. It has been proven by literally tens of thousands of people. It is as watertight as any mathematical proof can be. It is a very short, very simple, very approachable proof. There is no way that anyone will be able to find a hidden flaw in it, because the proof is so simple and small that there is plainly nowhere a flaw <em>could</em> hide.</p>

<p>Oh, and did I mention <strong>it can't be done</strong>?</p>

<p>This is not the Traveling Salesman Problem, where it takes a <em>very long time</em> to run. It is not P=NP, where we don't know whether it is true or not.</p>

<p>This is genuinely, absolutely, 100%, positively, totally, provably impossible.</p>

<p>I forgot. Did I already mention <strong>it can't be done</strong>?</p>
"
"<p>In PHP/Java one can do:</p>

<pre><code>class Sub extends Base
{
}
</code></pre>

<p>And automatically all public/protected methods, properties, fields, etc of the Super class become a part of the Sub class which can be overridden if necessary.</p>

<p>What's the equivalent for that in Javascript?</p>
","2988","","<p>You can't inherit from a class in JavaScript, because there are no classes in JavaScript.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/176264/whats-the-difference-between-a-uri-and-a-url"">What&#39;s the difference between a URI and a URL?</a>  </p>
</blockquote>



<p>Is there any difference? I'm talking about URI for identifying, but URL for locating. Aren't both the same thing?</p>
","2988","","<blockquote>
  <p>Where is the difference between locating a ressource and identifying a ressource?</p>
</blockquote>

<p>Knowing who I am doesn't tell you <em>anything</em> about where I am.</p>
"
"<p>I'm reading an article about Xen, a virtual machine monitor. They say that an operating system requires some modification in order to be able to act as a guest OS on top of Xen. Now, for an OS like Linux, I can understand what a ""modification"" might mean but in the case of an OS like say, Windows XP, what does it mean? I mean, XP is closed source proprietary OS right? </p>
","2988","","<p>Xen was originally a university project. As a researcher (or as a government agency tasked with infrastructure security), you <em>can</em> get the Windows sourcecode from Microsoft. You're just not allowed to distribute your own version of Windows.</p>

<p>This is exactly what they did: they had the sourcecode of Windows XP and then they ported XP to Xen, just to show that if Microsoft were ever to officially support Xen, it would be doable.</p>
"
"<p>I am a Java/C++ programmer and Ruby is my first scripting language. I sometimes find that I am not using it as productively as I could in some areas, like this one for example:</p>

<p>Objective: to parse only certain lines from a file. The pattern I am going with is that there is one very large line with a size greater than 15, the rest are definitely smaller. I want to ignore all the lines before (and including) the large one.</p>

<pre><code>def do_something(str)
   puts str
end


str = 
'ignore me
me too!
LARGE LINE ahahahahha its a line!
target1
target2
target3'

flag1 = nil
str.each_line do |line|
  do_something(line) if flag1
  flag1 = 1 if line.size &gt; 15
end
</code></pre>

<p>I wrote this, but I think it could be written a lot better, ie, there must be a better way than setting a flag. Recommendations for how to write beautiful lines of Ruby also welcome.</p>

<p><strong>Note/Clarification:</strong> I need to print ALL lines AFTER the first appearance of the LARGE LINE.</p>
","2988","","<pre><code>str.lines.drop_while {|l| l.length &lt; 15 }.drop(1).each {|l| do_something(l) }
</code></pre>

<p>I like this, because if you read it from left to right, it reads almost exactly like your original description:</p>

<p>Split the string in lines and drop lines shorter than 15 characters. Then drop another line (i.e. the first one with more than 14 characters). Then do something with each remaining line.</p>

<p>You don't even need to necessarily understand Ruby, or programming <em>at all</em> to be able to verify whether this is correct.</p>
"
"<p>I've got two <code>List</code> objects and I want to pair them up, just like the <a href=""http://docs.python.org/library/functions.html#zip""><code>zip()</code></a> function in Python. I'm pretty sure this isn't available in the JDK, but is there something like this in a fairly widespread library, similar to <a href=""http://commons.apache.org/collections/"">Apache Commons Collections</a>? Thanks.</p>
","2988","","<p><a href=""http://FunctionalJava.Org/"">Functional Java</a> has <a href=""http://FunctionalJava.GoogleCode.Com/svn/artifacts/latest/javadoc/fj/data/List.html#zipWith%28%29""><code>zip</code></a>, <code>zipWith</code> and <code>zipIndex</code> the way you would expect from Haskell or Scala. (Indeed, the authors are pretty much all Haskell programmers.)</p>
"
"<p>Admittedly, I have a bit silly question. Basically, I am wondering if
there are some special mechanisms provided by Intel processors to efficiently
execute a series of dummy, i.e., NOP instructions? For instance,I could imagine there
could be some kind of pre-fetch mechanism that identifies NOPS, discards them
and tries to fetch some useful instructions instead. Or are these NOPS dispatched
to the execution unit as normal instructions, meaning that i can roughly process
5 nops each cycle (under the assumption that there are 5 execution units)</p>

<p>Thanks,
Reinhard</p>
","2988","","<p>Discarding them would be pretty bad idea: they are often used for busy-waiting. If you discard <code>NOP</code>s, you make your wait-loop much tighter than it should be and potentially introduce considerable communications overhead.</p>

<p>If you feel that <code>NOP</code>s are inefficient, you could try <code>HLT</code> which saves some energy. Or you could even send the CPU into a sleep state. However, these only make sense if you want to ""do nothing"" for a considerable amount of time <em>and</em> they usually require suvervisor privileges.</p>
"
"<p>There seem to be two distinct ways to implement conditional requests using HTTP headers, both of which can be used for caching, range requests, concurrency control etc...:</p>

<ol>
<li><strong>If-Unmodified-Since and If-Modified-Since</strong>, where the client sends a <strong>timestamp</strong> of the resource.</li>
<li><strong>If-Modified and If-None-Modified</strong>, where the client sends an <strong>ETag</strong> representation of the resource. </li>
</ol>

<p>In both cases, the client sends a piece of information it has about the resource, which allows the server to determine whether the resource has changed since the client last saw it. The server then decides whether to execute the request depending on the conditional header supplied by the client.</p>

<p>I don't understand why two separate approaches are available. Surely, ETags supersede timestamps, since the server could quite easily choose to generate ETags from timestamps.</p>

<p>So, my questions are:</p>

<ul>
<li>In which scenarios might you favour If-Unmodified-Since/If-Modified-Since over ETags?</li>
<li>In which scenarios might you need both?</li>
</ul>
","2988","","<p>There is one rather big difference: I can only use ETags if I have already asked the server for one in the past. Timestamps, OTOH, I can make up as I go along.</p>
"
"<p>Which <strike>interpreted languages</strike> pointer-free languages (IE: Python, Java, Perl, PHP, Ruby, Javascript, etc) have manual memory management? I don't recall ever hearing of one.</p>

<p>Isn't the major concern about interpreted languages the non-deterministic delays (or space complexity when there isn't enough delay) of garbage collection? So why not just write something exactly like Java, but forces you free memory manually?</p>

<p>EDIT</p>

<p>What I mean by manual memory management is that the language would have references to objects, and you can delete the object using a reference.</p>

<p>Example:</p>

<pre><code>Object a = new Object(); // a is a reference to the object
Object b = a; // b is a reference to the same object
a.method(); // fine
delete b; // delete the object referenced by b
a.method(); // null dereference exception
</code></pre>

<p>So what caveats (Other than memory leaks) could there be in a language like this example?</p>
","2988","","<blockquote>
  <p>Which interpreted languages have manual memory management? I don't recall ever hearing of one.</p>
</blockquote>

<p>There is no such thing as an <em>interpreted language</em>. A language is neither compiled nor interpreted. A language just <em>is</em>. A language is a bunch of abstract mathematical rules. Interpretation or Compilation are traits of a language <em>implementation</em>, they have <em>nothing</em> to do with the language. <em>Every</em> language can be implemented by either a compiler or an interpreter; most modern high-performance language implementations actually use <em>both</em> and switch between them depending on which one is faster in a particular context.</p>

<p>Is C a compiled language? There are C interpreters out there. Is Python an interpreted language? All 8 current Python implementations use a compiler.</p>

<p>So, since <em>every</em> language can have an interpreted implementation, C and C++ are examples of interpreted languages with manual memory management. (And this is not just a theoretical hair-splitting contest, there <em>are</em> actually C and C++ interpreters out there. The VxWorks real-time operating system even contains one right in the kernel, and NASA once used this interpreter to fix a buggy kernel module on a spacecraft.)</p>

<p>Another example would be the very first version of Lisp from 1958: it had manual memory management (based on reference counting), but it was replaced only a couple of months later with a version with automatic memory management, which it has used ever since. Although again, <em>any</em> language can be implemented with either a compiler or an interpreter, so I don't know whether that version had an interpreted implementation or a compiled one. (In fact, I'm not sure whether it was implemented <em>at all</em>.)</p>

<p>If you relax your criteria a little bit and realize that memory management is only a special case of general resource management, then you will find that pretty much <em>all</em> languages, whether you want to call them compiled or interpreted or something else entirely, have some form of manual resource management for at least <em>some</em> kind of resource (file handles, database connections, network connections, caches, ...).</p>
"
"<p>The following statements represent my understanding of type systems (which suffers from too little hands-on experience outside the Java world); please correct any errors.</p>

<p>The static/dynamic distinction seems pretty clear-cut:</p>

<ul>
<li><strong>Statically typed</strong> langauges assign each variable, field and parameter a type and the compiler prevents assignments between incompatible types. Examples: C, Java, Pascal.</li>
<li><strong>Dynamically typed</strong> languages treat variables as generic bins that can hold anything you want - types are checked (if at all) only at runtime when you actually perform operations on the values, not when you assign them. Examples: Smalltalk, Python, JavaScript.</li>
<li><strong>Type inference</strong> allows statically typed languages to look like (and have some of the advantages of) dynamically typed ones, by inferring types from the context so that you don't have to declare them most of the time - but unlike in dynamic languages, you cannot e.g. use a variable to hold a string initially and then assign an integer to it. Examples: Haskell, Scala</li>
</ul>

<p>I am much less certain about the strong/weak distinction, and I suspect that it's not very clearly defined:</p>

<ul>
<li><strong>Strongly typed</strong> languages assign each runtime value a type and only allow operations to be performed that are defined for that type, otherwise there is an explicit type error.</li>
<li><strong>Weakly typed</strong> languages don't have runtime type checks - if you try to perform an operation on a value that it does not support, the results are unpredictable. It may actually do something useful, but more likely you'll get corrupted data, a crash, or some undecipherable secondary error.</li>
<li>There seems to be at least two different kinds of weakly typed languages (or perhaps a continuum):
<ul>
<li>In C and assembler, values are basically buckets of bits, so anything is possible and if you get the compiler to dereference the first 4 bytes of a null-terminated string, you better hope it leads somewhere that does not contain legal machine code.</li>
<li>PHP and JavaScript are also generally considered weakly typed, but do not consider values to be opaque bit buckets; they will, however, perform implicit type conversions.</li>
</ul></li>
<li>But these implicit conversions seem to apply mainly to string/integer/float variables - does that really warrant the classification as weakly typed? Or are there other issues where these languages's type system may obfuscate errors?</li>
</ul>
","2988","","<blockquote>
  <p>I am much less certain about the strong/weak distinction, and I suspect that it's not very clearly defined.</p>
</blockquote>

<p>You are right: it isn't.</p>

<p>This is what Benjamin C. Pierce, author of <em>Types and Programming Languages</em> and <em>Advanced Types and Programming Languages</em> has to say:</p>

<blockquote>
  <p>I spent a few weeks... trying to sort out the terminology of ""<em>strongly typed</em>,"" ""<em>statically typed</em>,"" ""<em>safe</em>,"" etc., and found it amazingly difficult.... The usage of these terms is so various as to render them almost useless.</p>
</blockquote>

<p>Luca Cardelli, in his <em>Typeful Programming</em> article, defines it as the absence of unchecked run-time type errors. Tony Hoare calls that <em>exact same</em> property ""security"". Other papers call it ""type safety"" or simply ""safety"".</p>

<p>Mark-Jason Dominus <a href=""http://Groups.Google.Com/group/comp.lang.perl.moderated/msg/89b5f256ea7bfadb/"">wrote a classic rant about this</a> a couple of years ago on the comp.lang.perl.moderated newsgroup, in a discussion about whether or not Perl was strongly typed. In this rant he states that within just a few hours of research, he was able to find 8 different, sometimes contradictory definitions, mostly from respected sources like college textbooks or peer-reviewed papers. In particular, those texts contained examples that were meant to help the students distinguish between strongly and weakly typed languages, and according to those examples, C is strongly typed, C is weakly typed, C++ is strongly typed, C++ is weakly typed, Lisp is strongly typed, Lisp is weakly typed, Perl is strongly typed, Perl is weakly typed. (Does that clear up any confusion?)</p>

<p>The <em>only</em> definition that I have seen consistently applied is:</p>

<ul>
<li><em>strongly typed</em>: my programming language</li>
<li><em>weakly typed</em>: your programming language</li>
</ul>
"
"<p><strong>Please Note:</strong> Portable as in portableapps.com, not in the traditional sense of a language that can be used on multiple architectures or operating systems. Whoever coined this usage of the word portable should be whacked. :)</p>

<p>I'm a DBA and sysadmin, mostly for Windows machines running SQL Server. I'm looking for a programming/scripting language for Windows that doesn't require Admin access or an installer, needing no install process other than expanding it into a folder. My intent is to have a language for automation around which I can standardize.  </p>

<p>Up to this point, I've been using a combination of batch files and Unix shell, using sh.exe from <a href=""http://unxutils.sourceforge.net"">UnxUtils</a> but it's far from a perfect solution. </p>

<p>I've evaluated a handful of options, all of them have at least one serious shortcoming or another. I have a strong preference for something open source or dual license, but I'm more interested in finding the right tool than anything else. Not interested that anything that relies on Cygwin or Java, but at this point I'd be fine with something that needs .NET.</p>

<p><strong>Requirements:</strong></p>

<ul>
<li>Manageable footprint (1-100 files, under 30 MB installed)</li>
<li>Run on Windows XP and Server (2003+)</li>
<li>No installer (exe, msi)</li>
<li>No reliance on a JVM or Cygwin install</li>
<li>Works with external pipes, processes, and files</li>
<li>Support for MS SQL Server or ODBC connections</li>
</ul>

<p><strong>Bonus Points:</strong></p>

<ul>
<li>Open Source</li>
<li>FFI for calling functions in native DLLs</li>
<li>GUI support (native or gtk, wx, fltk, etc)</li>
<li>Linux, AIX, and/or OS X support</li>
<li>Dynamic, object oriented and/or functional, interpreted or bytecode compiled; interactive development</li>
<li>Able to package or compile scripts into executables</li>
</ul>

<p><strong>So far I've tried:</strong></p>

<ul>
<li>Ruby: 148 MB on disk, 23000 files</li>
<li>Portable Python: 54 MB on disk, 2800 files</li>
<li>Strawberry Perl: 123 MB on disk, 3600 files</li>
<li>REBOL: Great, except closed source and no MSSQL or ODBC in free version</li>
<li>Squeak Smalltalk: Great, except poor support for scripting </li>
</ul>
","2988","","<p>In addition to the Lua suggestion, there is also <a href=""http://Idle.ThomasLauer.Com/"" rel=""nofollow"">Idle</a>. It is basically a superset of Lua 5.1, with both the language (and libraries) and the implementation based on Lua. It was originally created to be a more complete scripting solution for Windows: because Lua is primarly intended for embedding, it has a rather small standard library and it is usually expected that the embedding application provides a rich library to Lua.</p>

<p>This makes sense for an embedded language, because, after all, there isn't much common functionality between, say Adobe Lightroom, Nginx and World of Warcraft, so there simply is nothing you can put in a <em>standard</em> library. But for a more general purpose OS scripting language, one would want a slightly larger library. Thus, Idle bundles a couple of libraries that are third-party (and sometimes hard to get to work on Windows) in Lua in its standard library.</p>

<p>Some of the things that the Idle standard library adds over Lua are tight Win32 integration, SQLite3 support, networking support, a PEG parser generator and archive support.</p>

<p>Also, Idle has support for embedding Perl and C code into your Idle programs.</p>
"
"<p><strong>Please Note:</strong> Portable as in portableapps.com, not in the traditional sense of a language that can be used on multiple architectures or operating systems. Whoever coined this usage of the word portable should be whacked. :)</p>

<p>I'm a DBA and sysadmin, mostly for Windows machines running SQL Server. I'm looking for a programming/scripting language for Windows that doesn't require Admin access or an installer, needing no install process other than expanding it into a folder. My intent is to have a language for automation around which I can standardize.  </p>

<p>Up to this point, I've been using a combination of batch files and Unix shell, using sh.exe from <a href=""http://unxutils.sourceforge.net"">UnxUtils</a> but it's far from a perfect solution. </p>

<p>I've evaluated a handful of options, all of them have at least one serious shortcoming or another. I have a strong preference for something open source or dual license, but I'm more interested in finding the right tool than anything else. Not interested that anything that relies on Cygwin or Java, but at this point I'd be fine with something that needs .NET.</p>

<p><strong>Requirements:</strong></p>

<ul>
<li>Manageable footprint (1-100 files, under 30 MB installed)</li>
<li>Run on Windows XP and Server (2003+)</li>
<li>No installer (exe, msi)</li>
<li>No reliance on a JVM or Cygwin install</li>
<li>Works with external pipes, processes, and files</li>
<li>Support for MS SQL Server or ODBC connections</li>
</ul>

<p><strong>Bonus Points:</strong></p>

<ul>
<li>Open Source</li>
<li>FFI for calling functions in native DLLs</li>
<li>GUI support (native or gtk, wx, fltk, etc)</li>
<li>Linux, AIX, and/or OS X support</li>
<li>Dynamic, object oriented and/or functional, interpreted or bytecode compiled; interactive development</li>
<li>Able to package or compile scripts into executables</li>
</ul>

<p><strong>So far I've tried:</strong></p>

<ul>
<li>Ruby: 148 MB on disk, 23000 files</li>
<li>Portable Python: 54 MB on disk, 2800 files</li>
<li>Strawberry Perl: 123 MB on disk, 3600 files</li>
<li>REBOL: Great, except closed source and no MSSQL or ODBC in free version</li>
<li>Squeak Smalltalk: Great, except poor support for scripting </li>
</ul>
","2988","","<p>Every somewhat modern Windows version comes pre-installed with both VBScript and JScript. The doesn't meet <em>all</em> your features (compile to an executable comes to mind), but they certainly have an unbeatable advantage with the installation size: it's hard to beat <code>0</code>.</p>
"
"<p>In Perl, reference to anything is a simple scalar, and has the <code>$</code> sigil. It's sometimes hard to say what kind of reference it is. </p>

<p>I personally prefix variable names for references with a letter, which indicates ref type. Examples:    </p>

<pre><code>my $aValues = [];                # arrayref
my $hValue  = {};                # hashref
my $oValue  = bless {};          # object
my $sValue  = \(my $s = 'foo');  # scalarref
...
</code></pre>

<p>I've seen both supporters and opponents to such notation. Do you use it? Does it have any disadvantages?  </p>
","2988","","<p>The purpose of Hungarian notation is to embed semantic annotations that </p>

<ul>
<li>cannot otherwise be expressed within the language, especially the type system AND</li>
<li>are not apparent from the context</li>
</ul>

<p>in the names of variables. Now, since Perl doesn't have a static type system, it might appear that Hungarian notation should be fairly common. But, take the canonical example for the value of Hungarian notation: tracking the origin of untrusted data.</p>

<p>One of the oft-cited examples for Hungarian notation is to prefix all string variables in an application with either <code>s</code> or <code>u</code> (for <em>safe</em> and <em>unsafe</em>), depending on whether the string came from a trusted source (or has been sanitized) or an untrusted one. But: just replace <em>unsafe</em> with <em>tainted</em> and you have a perfect description of tainting in Perl. So, in this case, even though Perl doesn't have a static type system, it has a <em>dynamic</em> type system that allows you to express the semantics of trusted/untrusted within the language and thus Hungarian notation is superfluous. (And even in a language without built-in support for tainting, there are usually much better ways, such as subtyping (Python, Ruby, Smalltalk, ...), annotations/attributes (Java, C#, ...), metadata (Clojure, ...) and static typing (Haskell, ML, ...).)</p>

<p>Also, Perl is pretty darn expressive, and thus it is much easier to keep the entire context for a variable in your head (or within one screenful of code), so, often enough the semantics are apparent from the surrounding code.</p>

<p>Good naming also helps, of course.</p>

<p>Remember: Hungarian notation was invented for C, which isn't expressive and has a static type system whose pretty much only use is as the punchline of a joke.</p>
"
"<p>I'm having problems getting <a href=""http://code.macournoyer.com/thin/"" rel=""nofollow"">thin</a> working on my Windows 7 machine (I've already installed eventmachine v0.8.1):</p>

<blockquote>
  <p><code>&gt;</code>gem install thin --ignore-dependencies<br>
  checking for main() in -lc... no<br>
  creating Makefile</p>
  
  <p>make<br>
  'make' is not recognized as an internal or external command, operable program or batch file.</p>
</blockquote>

<p>Are there not meant to be precompiled binaries available for thin?</p>
","2988","","<p>Apparently, there aren't any pre-built binaries.</p>

<p>You will need a C compiler installed. If you installed Ruby via the RubyInstaller, that is going to be really easy, if you used the One-Click Installer, it's goint to be a PITA.</p>

<p>See also: <a href=""http://StackOverflow.Com/questions/2100213/"">problems installing thin on Windows</a>, which contains an answer by the RubyInstaller and One-Click Installer maintainer.</p>
"
"<p>In Ironpython site exists references to a language called VBx using DLR. But i can't find any reference to this in google. Where is it? </p>

<p>Edit: Is a Implement of Visual Basic 6.0 in DLR? if yes is so cool. Is more expected for people using VB6 yet and can't migrate because big frameworks.</p>
","2988","","<p>VBx was one of the four language implementations that were originally driving the design of the DLR, the other three being IronPython (from which the DLR was extracted in the first place), IronRuby and Managed JavaScript.</p>

<p>VBx was intended to be a dynamic version of Visual Basic.NET or a .NET version of Visual Basic 6, whichever way you want to look at it. It was primarily intended as a testbed for the flexibility of the DLR, secondarily as a testbed for a more dynamic version of VB.NET and tertiarily (is that a word?) as a scripting language for Silverlight. It has fulfilled its primary goal and the designers of VB.NET decided that they want to pursue goals two and three <em>within</em> the existing VB.NET language, rather than producing <em>yet</em> another slightly different incompatible version of VB. (You already have VB.NET, VB, VBA and VBScript.)</p>

<p>Managed JavaScript was also abandoned, the team was folded into the IE team and is responsible for the ECMAScript 5 engine in IE 9.</p>
"
"<p>I want to make my variable (a proxy object) evaluate to false when used in conditional sentences. I know I can use .nil? and even var == nil but I think that's not good enough. What I am trying go do is to:</p>

<pre><code>if myproxy # not only myprroxy.nil? or myproxy == nil, but just that
  # myproxy's backend object is not nil
else
  # myproxy's backend object is nil
end
</code></pre>

<p>Any ideas?</p>
","2988","","<p>The only two objects that evaluate to a false-ish value in a boolean context in Ruby are <code>nil</code>, the singleton instance of <code>NilClass</code> and <code>false</code>, the singleton instance of <code>FalseClass</code>. <em>Every</em> other object evaluates to a tru-ish value.</p>

<p>If you want that <code>else</code> branch to be taken, then <code>myproxy</code> <em>must</em> evaluate to either <code>nil</code> or <code>false</code>.</p>

<p>If you want something boolean-ish that you have actual control over, you could try a <code>case</code> expression and override the case subsumption operator <code>MyProxy#===</code>.</p>
"
"<p>I'm about to develop some commercial software that will run on OSX and Linux. The program will be doing some heavy string manipulation, base64 encoding, zlib compression and may require http libraries in the future.</p>

<p>Does anyone have a suggestion?</p>

<p>Many thanks in advance, 
Toby.</p>
","2988","","<p>I'd suggest <a href=""http://Ruby-Lang.Org/"" rel=""nofollow"">Ruby</a>. Its string manipulation isn't quite up to Perl's or ELisp's standards, but reasonably close and base64, ZLib and HTTP are part of the standard library. And it runs on pretty much every platform under the sun, including Windows, OSX, Linux, Unix, JVM, CLI and Objective-C.</p>
"
"<p>I recently discovered the <a href=""http://github.com/mislav/hanna"">Hanna RDoc template</a> and I like it a lot more than the default.  I want to use it in my project, but I also don't want my project to require it.</p>

<p>The only change I had to make to my Rakefile to get the hanna template to work was to change </p>

<pre><code>require 'rake/rdoctask'
</code></pre>

<p>to</p>

<pre><code>require 'hanna/rdoctask'
</code></pre>

<p>Is there any way to attempt a require, and capture/recover from the error?  I noticed load and require return a boolean in irb, so I thought maybe I could do this:</p>

<pre><code>unless require 'hanna/rdoctask'
  require 'rake/rdoctask'
end
</code></pre>

<p>Sadly, rake aborted as soon as the require failed.  Then I tried:</p>

<pre><code>begin
  require 'hanna/rdoctask'
rescue
  require 'rake/rdoctask'
end
</code></pre>

<p>but that didn't work either.</p>

<p>Is there any way to accomplish what I'm attempting here?</p>
","2988","","<blockquote>
  <p>I noticed load and require return a boolean in irb</p>
</blockquote>

<p>The return value of <code>require</code> tells you whether the library was <em>actually</em> loaded: it's <code>true</code> if the library was loaded and <code>false</code> if the library was found but not loaded because it had <em>already</em> been loaded.</p>

<p>Failure is indicated with a <code>LoadError</code> exception.</p>
"
"<p>I'm using <code>gets</code> to pause my script's output until the user hits the enter key.  If I don't pass any arguments to my script then it works fine.  However, if I pass any arguments to my script then gets dies with the following error:</p>

<pre><code>ruby main.rb -i
main.rb:74:in `gets': No such file or directory - -i (Errno::ENOENT)
    from main.rb:74:in `gets'
    ...
</code></pre>

<p>The error message is showing the argument I passed to the script.  Why would gets be looking at ARGV?</p>

<p>I'm using OptionParser to parse my command line arguments.  If I use <code>parse!</code> instead of <code>parse</code> (so it removes things it parses from the argument list) then the application works fine.</p>

<p>So it looks like gets is reading from ARGV for some reason.  Why?  Is this expected?  Is there a way to get it to not do that (doing <code>gets()</code> didn't help).</p>
","2988","","<p>The <em>whole point</em> of <code>Kernel#gets</code> is to treat the arguments passed to the program as filenames and read those files. The very first sentence in <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Kernel.html#M002605"" rel=""nofollow"">the documentation</a> reads:</p>

<blockquote>
  <p>Returns (and assigns to $_) the next line from the list of files in ARGV (or $*)</p>
</blockquote>

<p>That's just how <code>gets</code> works. If you want to read from a <em>specific</em> <code>IO</code> object (say, <code>$stdin</code>), just call <code>gets</code> on that object.</p>
"
"<p>Is there a ruby idiom for ""If  do-this,"" and ""do-this"" just as a simple command?</p>

<p>for example, I'm currently doing</p>

<pre><code>object.method? a.action : nil
</code></pre>

<p>to leave the else clause empty, but I feel like there's probably a more idiomatic way of doing this that doesn't involve having to specify a nil at the end. (and alternatively, I feel like taking up multiple lines of code would be wasteful in this case.</p>
","2988","","<p>As a general rule: you pretty much never need the ternary operator in Ruby. The reason why you need it in C, is because in C <code>if</code> is a statement, so if you want to return a value you <em>have</em> to use the ternary operator, which is an expression.</p>

<p>In Ruby, <em>everything</em> is an expression, there <em>are</em> no statements, which makes the ternary operator pretty much superfluous. You can always replace</p>

<pre><code>cond ? then_branch : else_branch
</code></pre>

<p>with</p>

<pre><code>if cond then then_branch else else_branch end
</code></pre>

<p>So, in your example:</p>

<pre><code>object.method ? a.action : nil
</code></pre>

<p>is equivalent to</p>

<pre><code>if object.method then a.action end
</code></pre>

<p>which as @Greg Campbell points out is in turn equivalent to the trailing <code>if</code> modifier form</p>

<pre><code>a.action if object.method
</code></pre>

<p>Also, since the boolean operators in Ruby not just return <code>true</code> or <code>false</code>, but the value of the last evaluated expression, you can use them for control flow. This is an idiom imported from Perl, and would look like this:</p>

<pre><code>object.method and a.action
</code></pre>
"
"<p>I've recently started programming in Ruby, and I am looking at exception handling.</p>

<p>I was wondering if <code>ensure</code> was the Ruby equivalent of <code>finally</code> in C#? Should I have:</p>

<pre><code>file = File.open(""myFile.txt"", ""w"")

begin
  file &lt;&lt; ""#{content} \n""
rescue
  #handle the error here
ensure
  file.close unless file.nil?
end
</code></pre>

<p>or should I do this?</p>

<pre><code>#store the file
file = File.open(""myFile.txt"", ""w"")

begin
  file &lt;&lt; ""#{content} \n""
  file.close
rescue
  #handle the error here
ensure
  file.close unless file.nil?
end
</code></pre>

<p>Does <code>ensure</code> get called no matter what, even if an exception isn't raised?</p>
","2988","","<p>Yes, <code>ensure</code> ensures that the code is always evaluated. That's why it's called <code>ensure</code>. So, it is equivalent to Java's and C#'s <code>finally</code>.</p>

<p>The general flow of <code>begin</code>/<code>rescue</code>/<code>else</code>/<code>ensure</code>/<code>end</code> looks like this:</p>

<pre><code>begin
  # something which might raise an exception
rescue SomeExceptionClass =&gt; some_variable
  # code that deals with some exception
rescue SomeOtherException =&gt; some_other_variable
  # code that deals with some other exception
else
  # code that runs only if *no* exception was raised
ensure
  # ensure that this code always runs, no matter what
end
</code></pre>

<p>You can leave out <code>rescue</code>, <code>ensure</code> or <code>else</code>. You can also leave out the variables in which case you won't be able to inspect the exception in your exception handling code. (Well, you can always use the global exception variable to access the last exception that was raised, but that's a little bit hacky.) And you can leave out the exception class, in which case all exceptions that inherit from <code>StandardError</code> will be caught. (Please note that this does not mean that <em>all</em> exceptions are caught, because there are exceptions which are instances of <code>Exception</code> but not <code>StandardError</code>. Mostly very severe exceptions that compromise the integrity of the program such as <code>SystemStackError</code>, <code>NoMemoryError</code>, <code>SecurityError</code>, <code>NotImplementedError</code>, <code>LoadError</code>, <code>SyntaxError</code>, <code>ScriptError</code>, <code>Interrupt</code>, <code>SignalException</code> or <code>SystemExit</code>.)</p>

<p>Some blocks form implicit exception blocks. For example, method definitions are implicitly also exception blocks, so instead of writing</p>

<pre><code>def foo
  begin
    # ...
  rescue
    # ...
  end
end
</code></pre>

<p>you write just</p>

<pre><code>def foo
  # ...
rescue
  # ...
end
</code></pre>

<p>or</p>

<pre><code>def foo
  # ...
ensure
  # ...
end
</code></pre>

<p>The same applies to <code>class</code> definitions and <code>module</code> definitions.</p>

<p>However, in the specific case you are asking about, there is actually a much better idiom. In general, when you work with some resource which you need to clean up at the end, you do that by passing a block to a method which does all the cleanup for you. It's similar to a <code>using</code> block in C#, except that Ruby is actually powerful enough that you don't have to wait for the high priests of Microsoft to come down from the mountain and graciously change their compiler for you. In Ruby, you can just implement it yourself:</p>

<pre><code># This is what you want to do:
File.open('myFile.txt', 'w') do |file|
  file.puts content
end

# And this is how you might implement it:
def File.open(filename, mode='r', perm=nil, opt=nil)
  yield filehandle = new(path, mode, perm, opt)
ensure
  filehandle.close
end
</code></pre>

<p>And what do you know: this is <em>already</em> available in the core library as <code>File.open</code>. But it is a general pattern that you can use in your own code as well, for implementing any kind of resource cleanup (à la <code>using</code> in C#) or transactions or whatever else you might think of.</p>

<p>The only case where this doesn't work, if acquiring and releasing the resource are distributed over different parts of the program. But if it is localized, as in your example, then you can easily use these resource blocks.</p>

<hr>

<p>BTW: in modern C#, <code>using</code> is actually superfluous, because you can implement Ruby-style resource blocks yourself:</p>

<pre><code>class File
{
    static T open&lt;T&gt;(string filename, string mode, Func&lt;File, T&gt; block)
    {
        var handle = new File(filename, mode);
        try
        {
            return block(handle);
        }
        finally
        {
            handle.Dispose();
        }
    }
}

// Usage:

File.open(""myFile.txt"", ""w"", (file) =&gt;
{
    file.WriteLine(contents);
});
</code></pre>
"
"<p>Is there an equivalent of the DLR (Dynamic Language Runtime for .NET) on the JVM? I'm aware that I could go about and implement my own dynamic bindings and emitting my own bytecode with Java. But is there any pre-built framework (like the DLR) so I don't have to re-invent the wheel?</p>
","2988","","<p>The DLR is several different things, some of which have direct equivalents in Java, some of which exist in different forms and some of which have no equivalent. Some of those which <em>do</em> have an equivalent are already part of the platform, some will be part of Java 7 and some are available from third parties.</p>

<h2>Runtime Binder and Caching Infrastructure</h2>

<p>The DLR has a runtime binding and caching infrastructure, which makes dynamic dispatch fast and efficient. How to make dynamic dispatch as fast as static dispatch and much faster than C++-style virtual table dispatch, has been known for more than 20 years, but most dynamic execution engines don't employ those technologies such as Polymorphic Inline Caching, Dynamic Type Inference, Type Feedback Optimization and so on. The DLR tries to provide a single implementation, which can be shared by all DLR-based languages (including the C# runtime binder used for the <code>dynamic</code> keyword in C# 4).</p>

<p>The Java equivalent to this is <a href=""http://JCP.Org/en/jsr/detail?id=292"">JSR-292</a>, which extends the JVM with a runtime binding and caching infrastructure. The main difference between the DLR and JSR-292 is that JSR-292 is implemented at the VM level, which means that in order to use it, you need a new VM. JSR-292 is going to be part of the next JVM specification, which in turn is going to be part of the Java 7 platform specification, but that is still a year or so away. (It is already available, in current <a href=""http://JDK7.Dev.Java.Net/"">JDK7 Early Access</a> releases, though, and has been for quite some time.)</p>

<p>The DLR, OTOH is just a library, and you can install it on the CLR 2.0, if you want to. Indeed, you don't even need the CLR, <em>any</em> CLI-compliant VES will do, such as Novell's <a href=""http://Mono-Project.Com/"">Mono</a>. And since the DLR is Open Source, Novell can just download the source code from the Microsoft website, and ship it as part of Mono, without writing a single of code ... which is exactly what they are doing. Sun's implementation of JSR-292 is also Open Source, but that doesn't help IBM, Oracle, Apache, RedHat, GNU and so on, because it is very VM-specific, so every JVM vendor has to implement it themselves. (And there is a <em>lot</em> of those, Sun <em>alone</em> has four different JVMs.)</p>

<p>[Note: there <em>is</em> a Rémi Forax's <a href=""http://JVM-Language-Runtime.GoogleCode.Com/"">JSR-292 backport</a>, which implements JSR-292 for older JVMs via bytecode rewriting. It is 100% compatible, but pretty slow.]</p>

<h2>Meta-Object Protocol for Interoperability</h2>

<p>The DLR contains a MOP (the <code>IDynamicObject</code> interface), which allows all DLR-based languages to interoperate with each other and with CLI-based languages on a much higher level and with much tighter integration than having to go through the CTS.</p>

<p>In the Java space, the equivalent is Attila Szegedi's (the maintainer of the Rhino JavaScript compiler for the JVM) <a href=""http://DynaLang.SourceForge.Net/"">dynalang</a> project, which is inspired by the CommonLisp MOP. It is however, </p>

<ul>
<li>not finished, </li>
<li>not widely used (yet) and</li>
<li>a third-party library, not part of the standard platform.</li>
</ul>

<p>All three of those are probably going to change sometime, but at least the last one is probably <em>not</em> going to happen for Java 7.</p>

<h2>Standardized Embedding API</h2>

<p>The DLR provides a standardized embedding API for DLR-based languages, which allows you to embed a language runtime in your application without having to learn a different API for every different runtime. Indeed, you don't even have to <em>know</em> what the runtime is!</p>

<p>The equivalent to this is the JSR-223 Java Scripting API which has been part of the Java platform since Java 6 and lives in the <a href=""http://Java.Sun.Com/javase/6/docs/api/javax/script/package-summary.html""><code>javax.script</code> package</a>.</p>

<h2>Code Representation and Compiler</h2>

<p>The DLR contains a standard representation for code (DLR trees, Expression trees) and both an interpreter and a highly optimizing compiler for those trees, which allows langage implementors to concentrate on their language-specific compiler frontends and have the DLR deal with the nitty-gritty of code generation behind the scenes.</p>

<p>There is no equivalent in Java.</p>

<h2>Dynamic capabilities for static languages</h2>

<p>C# 4 and VB.NET 10 add dynamic typing for easier integration with dynamic languages. While this has technically nothing to do with the DLR, it uses the DLR for some of its work.</p>

<p>There is no equivalent in Java.</p>
"
"<p>I have doubt whether we can achieve multiple inheritence using 'module' concept or Is there any other keywords or concepts which achieve multiple inheritence in ruby?</p>
","2988","","<p>Ruby supports mixin composition. A class can only inherit from <em>one</em> superclass, but it can mix in <em>many</em> modules.</p>

<p>That's not, strictly speaking, multiple inheritance, but it offers at least sharing of behavior across different classes.</p>
"
"<p>code:</p>

<pre><code>file.write 'objectclass: groupOfUniqueNames\n'
</code></pre>

<p>Oddly enough, the \n is actually being printed... What is wrong here?</p>
","2988","","<p>The <em>only</em> two escape sequences allowed in a single quoted string are <code>\'</code> (for a single quote) and <code>\\</code> (for a single backslash). If you want to use other escape sequences, like <code>\n</code> (for newline), you have to use a double quoted string.</p>

<p>So, this will work:</p>

<pre><code>file.write ""objectclass: groupOfUniqueNames\n""
</code></pre>

<p>Although I personally would simply use <code>puts</code> here, which already adds a newline:</p>

<pre><code>file.puts 'objectclass: groupOfUniqueNames'
</code></pre>
"
"<p>I've been looking at the source code of a few gems lately. One idiom that I keep seeing is the use of a nested module containing version constants that are joined into a version string i.e. variations around this sort of thing:</p>

<pre><code>module ChunkyBacon
  module Version
    MAJOR = 0
    MINOR = 6
    TINY  = 2
  end

  VERSION = [Version::MAJOR, Version::MINOR, Version::TINY].compact * '.'
end
</code></pre>

<p>What's the advantage (if any) of storing the library version information in this way? Why not just do:</p>

<pre><code>module ChunkyBacon
  VERSION = '0.6.2'.freeze
end
</code></pre>
","2988","","<p>Having version information in a string is generally a bad idea.</p>

<p>For example, there can <em>never</em> be a Ruby 1.10, because too many applications which test for compatibility using <code>if RUBY_VERSION &gt; '1.6'</code> would break. (Because lexicographically, <code>1.10 &lt; 1.6</code>) That's why there is this complicated scheme where what <em>would</em> normally have been Ruby 1.9.x was instead Ruby 1.9.0-x and what <em>would</em> have been Ruby 1.10.x is now Ruby 1.9.x+1. So, the upcoming version of Ruby, which is Ruby 1.9.2, and which <em>looks</em> like it were an unstable development version, is <em>really</em> Ruby 1.10.1, which is a production version.</p>

<p>This leads to a lot of confusion. For example, even many seasoned Ruby community leaders, are still spreading the misinformation that Ruby 1.9 is a development version, <em>despite</em> the fact that the change in versioning policy has been widely communicated.</p>

<p>The Opera web browser is another example. When Opera 10.0 was released, it originally reported its version number as, well, 10.0. However, during the betatest it became clear that many websites, among them very big and well-respected ones, completely broke, because Opera was the first-ever mainstream browser to hit 10.0, and those websites were doing simple string compare and thus thought they were dealing with Opera 1.0, which doesn't support JavaScript or CSS. The <em>only</em> workable solution was that the final release of Opera 10.0 prints 9.80 as the version number.</p>

<p>Mark Russinovich also had a great rant about comparing version numbers during his presentation about the Windows 7 kernel at Microsoft PDC. He was explaining to the audience why the version number of Windows 7, which used to be 7 in the early builds, was 6.1 in the release. The reason is that a lot of applications either degraded or failed to work at all. Some would simply check for <code>if major == 6 then enhanced_vista_mode else crappy_xp_mode</code> which means they would run degraded in Windows 7. Others were even more aggressive and had something like <code>if major == 6 then enhanced_vista_mode elsif major == 5 then crappy_xp_mode else unsupported_windows_version</code> and they would refuse to work at all. (Which is of course stupid since Windows 7 is completely backwards compatible with Vista.)</p>

<p>So, Microsoft changed the version number to 6.1, and Russinovich said, half joking, half sad and serious, that this obviously means that the version number for Windows 8 would have to be 6.1.1. and so on.</p>

<p>So, to make a long story short: programmers are too stupid to parse version numbers themselves, you <em>must</em> do it for them.</p>
"
"<p>Below you can see that I'm calling <code>File.open</code> only once but rspec is telling me it received it 3 times.</p>

<pre><code>def self.import_file(filename)
  current_file = filename.split('/').last
  destroy_all([""filename = ?"",current_file])

  unpack_format = ""A#{INPUT_FILE_FORMAT.map{|element| element[1]}.join(""A"")}""
  debugger
  File.open(filename, 'r').each do |line|
    hash_created = create_hash(line, unpack_format).merge({:filename=&gt;current_file})
    create(hash_created)
  end
end  

it ""should delete previous records with the same filename"" do
  Payrec.should_receive(:destroy_all).with([""filename = ?"", ""testfile.txt""])
  File.should_receive(:open).and_return([@file_line])
  Payrec.import_file ""testfile.txt""
end
</code></pre>

<p>The output is</p>

<pre><code>&lt;File (class)&gt; expected :open with (any args) once, but received it 3 times
</code></pre>
","2988","","<p>Everybody and his dog calls <code>File.open</code>. I could imagine a ton of reasons why it would called: RSpec reading its config file, Rails reading its config file(s), Cucumber reading its config file, the debugger creating a temporary file, something else creating a temporary file and so on.</p>

<p>You should check <em>who</em> is calling <code>File.open</code>, <em>where</em> that call happens, <em>what</em> the arguments are and <em>why</em> that is happening.</p>

<p>But, this is something you will just have to deal with, when setting expectations on core methods.</p>

<p>Imagine, for example, you are running your specs on Rubinius. In Rubinius, the compiler is written in Ruby. It doesn't currently cache its compiled results, but it is certainly conceivable that it <em>could</em> cache them, and then it would naturally use <code>File.open</code>. Bam! Now your specs randomly break depending on whether you hit the JIT threshold or not.</p>

<p>Or, even worse: all of Rubinius uses arrays and symbols extensively to implement just about everything. Try setting some expectations on <em>those</em>!</p>
"
"<p>Are dynamic languages slower than static languages because, for example, the run-time has to check the type consistently?</p>
","2988","","<p>No.</p>

<p>Dynamic languages are not slower than static languages. In fact, it is impossible for <em>any</em> language, dynamic or not, to be slower than another language (or faster, for that matter), simply because a language is just a bunch of abstract mathematical rules. You cannot <em>execute</em> a bunch of abstract mathematical rules, therefore they cannot ever be slow(er) or fast(er).</p>

<p>The statement that ""dynamic languages are slower than static languages"" is not only <em>wrong</em>, it doesn't even make <em>sense</em>. If English were a typed language, that statement wouldn't even typecheck.</p>

<p>In order for a language to even be able to <em>run</em>, it has to be <em>implemented</em> first. <em>Now</em> you can measure performance, <em>but</em> you aren't measuring the performance of the <em>language</em>, you are measuring the performance of the <em>execution engine</em>. Most languages have many different execution engines, with very different performance characteristics. For C, for example, the difference between the fastest and slowest implementations is a factor of 100000 or so!</p>

<p>Also, you cannot <em>really</em> measure the performance of an execution engine, either: you have to write some code to <em>run</em> on that exection engine first. But now you aren't measuring the performance of the execution engine, you are measuring the performance of the <em>benchmark code</em>. Which has very little to do with the performance of the execution engine and <em>certainly</em> nothing to do with the performance of the <em>language</em>.</p>

<p>In general, running well-designed code on well-designed high-performance execution engines will yield about the same performance, independent of whether the language is static or dynamic, procedural, object-oriented or functional, imperative or declarative, lazy or strict, pure or impure.</p>

<p>In fact, I would propose that the performance of a system is solely dependent on the amount of money that was spent making it fast, and completely independent of any particular typing discipline, programming paradigm or language.</p>

<p>Take for example Smalltalk, Lisp, Java and C++. All of them are, or have at one point been, <em>the</em> language of choice for high-performance code. All of them have <em>huge</em> amounts of engineering and research man-centuries expended on them to make them fast. All of them have highly-tuned proprietary commercial high-performance execution engines available. Given roughly the same problem, implemented by roughly comparable developers, they all perform roughly the same.</p>

<p>Two of those languages are dynamic, two are static. Java is interesting, because although it is a static language, most modern high-performance implementations are actually <em>dynamic</em> implementations. (In fact, several modern high-performance JVMs are actually either Smalltalk VMs in disguise, derived from Smalltalk VMs or written by Smalltalk VM companies.) Lisp is also interesting, because although it is a dynamic language, there are some (although not many) static high-performance implementations.</p>

<p>And we haven't even begun talking about the <em>rest</em> of the execution environment: modern mainstream operating systems, mainstream CPUs and mainstream hardware architectures are heavily biased towards static languages, to the point of being actively hostile for dynamic languages. Given that modern mainstream execution environments are pretty much of a worst-case scenario for dynamic languages, it is quite astonishing how well they actually perform and one can only imagine what the performance in a less hostile environment would look like.</p>
"
"<p>please some1 tell me the difference between a 'static variable' and a 'dynamic variable' in oops or in java. Also their usage if possible.</p>
","2988","","<p>That question doesn't make much sense. Java doesn't have dynamic variables. CommonLisp has them, for example, but Java doesn't.</p>
"
"<p>I would like to do some fairly heavy-duty reflection in the Ruby programming language. I would like to create a function which would return the names of the arguments of various calling functions higher up the call stack (just one higher would be enough but why stop there?). I could use Kernel.caller go to the file and parse the argument list but that would be ugly and unreliable. </p>

<p>The function that I would like would work in the following way:</p>

<pre><code>module A
  def method1( tuti, fruity) 
    foo
  end
  def method2(bim, bam, boom)  
    foo
  end
  def foo
    print caller_args[1].join("","") #the ""1"" mean one step up the call stack
  end

end

A.method1
 #prints ""tuti,fruity""
A.method2
 #prints ""bim, bam, boom""
</code></pre>

<p>I would not mind using <a href=""http://rubyforge.org/projects/parsetree/"">ParseTree</a> or some similar tool for this task but looking at Parsetree, it is not obvious how to use it for this purpose. Creating a C extension like <a href=""http://eigenclass.org/hiki/ruby%2Bbacktrace%2Bdata"">this</a> is another possibility but it would be nice if someone had already done it for me.</p>

<p>Edit2: I can see that I'll probably need some kind of C extension. I suppose that means my question is what combination of C extension would work most easily. I don't think caller+ParseTree would be enough by themselves. </p>

<p>As far as why I would like to do this goes, rather than saying ""automatic debugging"", perhaps I should say that I would like to use this functionality to do automatic checking of the calling and return conditions of functions. Say </p>

<pre><code>def add x, y 
  check_positive
  return x + y
end
</code></pre>

<p>Where check_positive would throw an exception if x and y weren't positive (obviously, there would be more to it than that but hopefully this gives enough motivation)</p>
","2988","","<p>In Ruby 1.9.2, you can trivially get the parameter list of any <code>Proc</code> (and thus of course also of any <code>Method</code> or <code>UnboundMethod</code>) with <code>Proc#parameters</code>:</p>

<pre><code>A.instance_method(:method1).parameters # =&gt; [[:req, :tuti], [:req, :fruity]]
</code></pre>

<p>The format is an array of pairs of symbols: type (required, optional, rest, block) and name.</p>

<p>For the format you want, try</p>

<pre><code>A.instance_method(:method1).parameters.map(&amp;:last).map(&amp;:to_s)
  # =&gt; ['tuti', 'fruity']
</code></pre>

<p>Of course, that still doesn't give you access to the caller, though.</p>
"
"<p>What does the following code mean in Ruby?</p>

<pre><code>||=
</code></pre>

<p>Does it have any meaning or reason for the syntax?</p>
","2988","","<p>This question has been discussed so often on the Ruby mailing-lists and Ruby blogs that there are now even threads on the Ruby mailing-list whose only purpose is to collect links to <em>all the other threads</em> on the Ruby mailing-list that discuss this issue.</p>

<p>Here's one: <a href=""http://Ruby-Forum.Com/topic/151660/"">The definitive list of ||= (OR Equal) threads and pages</a></p>

<p>If you <em>really</em> want to know what is going on, take a look at Section 11.3.1.2 ""Abbreviated assignments"" of the <a href=""http://WWW.IPA.Go.Jp/osc/english/ruby/"">Ruby Language Draft Specification</a>.</p>

<p>As a first approximation, </p>

<pre><code>a ||= b
</code></pre>

<p>is equivalent to </p>

<pre><code>a || a = b
</code></pre>

<p>and <em>not</em> equivalent to </p>

<pre><code>a = a || b
</code></pre>

<p>However, that is only a first approximation, especially if <code>a</code> is undefined. The semantics also differ depending on whether it is a simple variable assignment, a method assignment or an indexing assignment:</p>

<pre><code>a    ||= b
a.c  ||= b
a[c] ||= b
</code></pre>

<p>are all treated differently.</p>
"
"<p>I've got an array in Ruby that essentially represents a square boolean matrix. Dots represent zeroes, while any other character represents ones. Example:</p>

<pre><code>irb(main):044:0&gt; g
=&gt; ["".b"", ""m.""] # This grid has two '1' values and two '0' values.
</code></pre>

<p>I'd like to perform a specified logical operation (say, OR) on this array with another similar array to get a third result. For example, if <code>h</code> is <code>[""q."", ""r.""]</code>, then something akin to <code>g.perform_or(h)</code> should yield a new array <code>[""qb"", ""r.""]</code>. (The choice of <code>r</code> to represent the result of <code>'m' || 'r'</code> is arbitrary and not relevant; any other non-'.' character can be there.)</p>

<p>How might I do this?</p>

<p><hr></p>

<p>Edit: I made an error in my example. Apologies!</p>
","2988","","<p>Man, this one has been gathering dust on my disk for a <em>loong</em> time:</p>

<pre><code>class String
  def to_bool; return chars.map {|c| if c == '.' then false else c end } end
  def from_bool; return self end
end

class TrueClass;  def from_bool; return 't' end end
class FalseClass; def from_bool; return '.' end end

class Array
  def to_bool;   map(&amp;:to_bool) end
  def from_bool; map {|row| row.map(&amp;:from_bool).join} end

  def |(other)
    to_bool.zip(other.to_bool).inject([]) {|row, (l, r)|
      row &lt;&lt; l.zip(r).inject([]) {|col, (l, r)|
        col &lt;&lt; (l || r).from_bool
      }
    }
  end

  def &amp;(other)
    to_bool.zip(other.to_bool).inject([]) {|row, (l, r)|
      row &lt;&lt; l.zip(r).inject([]) {|col, (l, r)|
        col &lt;&lt; (l &amp;&amp; r).from_bool
      }
    }
  end
end
</code></pre>

<p>Here's a (rather incomplete) testsuite:</p>

<pre><code>require 'test/unit'
class TestLogicMatrix &lt; Test::Unit::TestCase
  def test_to_bool
    assert_equal [['a', false], [false, 'z']], ['a.', '.z'].to_bool
  end
  def test_from_bool
    assert_equal ['a.', 'tz'], [['a', false], [true, 'z']].from_bool
  end
  def test_that_OR_works
    assert_equal ['qb', 'm.'], (['.b', 'm.'] | ['q.', 'r.']).from_bool
  end
  def test_that_AND_works
    assert_equal ['..', 'r.'], (['.b', 'm.'] &amp; ['q.', 'r.']).from_bool
  end
end
</code></pre>
"
"<p>I am trying to dynamically create a class using the eval method.  It is working fine except for one small problem.  As my code shows I am creating the Browser class inside the BrowserFactory class.  When I do this the Browser class has an added namespace of BrowserFactory.  Is there anyway to evaluate the Browser class from a string without the BrowserFactory namespace being attached?</p>

<pre><code>
class BrowserFactory
  def self.create_browser(browser)
    super_class = nil
    case browser
    when 'IE'
      require 'watir'
      super_class = 'Watir::IE'
    when 'celerity'
      require 'celerity'
      super_class = 'Celerity::Browser'
    end

    raise StandardError.new(""Browser '#{browser}' is not currentlys supported"") if super_class.nil?

    eval &#60;&#60;EOS
class Browser &#60; #{super_class}
include Singleton
include BrowserModification
end
EOS

    return Browser.instance
  end

end
</code></pre>
","2988","","<pre><code>def BrowserFactory(browser)
  case browser
  when 'IE'
    require 'watir'
    Watir::IE
  when 'celerity'
    require 'celerity'
    Celerity::Browser
  else
    raise ArgumentError, ""Browser '#{browser}' is not currently supported""
  end.new.extend(BrowserModification)
end
</code></pre>

<p>Here's a small testsuite:</p>

<pre><code>module Watir; class IE; def to_s; 'IE' end end end
module Celerity; class Browser; def to_s; 'Celerity' end end end

module BrowserModification; def to_s; ""Modified#{super}"" end end

require 'test/unit'
class TestBrowserFactory &lt; Test::Unit::TestCase
  def test_that_celerity_responds_as_modified_celerity
    assert_equal 'ModifiedCelerity', BrowserFactory('celerity').to_s
  end
  def test_that_internet_explorer_responds_as_modified_internet_explorer
    assert_equal 'ModifiedIE', BrowserFactory('IE').to_s
  end
  def test_that_an_invalid_browser_raises_an_exception
    assert_raise ArgumentError do BrowserFactory('xyz') end
  end
end
</code></pre>
"
"<p>How can I convert a 'normal' Git repository to a bare one?</p>

<p>The main difference seems to be:</p>

<ul>
<li><p>in the normal git repository you have a <code>.git</code> folder inside the repository containing all relevant data and all other files build your working copy</p></li>
<li><p>in a bare Git repository, there is no working copy and the folder (let's call it <code>repo.git</code>) contains the actual repository data</p></li>
</ul>
","2988","","<p>In short: replace the contents of <code>repo</code> with the contents of <code>repo/.git</code>, then tell the repository that it is now a bare repository.</p>

<p>To do this, execute the following commands:</p>

<pre><code>cd repo
mv .git .. &amp;&amp; rm -fr *
mv ../.git .
mv .git/* .
rmdir .git

git config --bool core.bare true
cd ..; mv repo repo.git # renaming just for clarity
</code></pre>

<p>Note that this is different from doing a <code>git clone --bare</code> to a new location (see below).</p>
"
"<p>I've just been reading about REST URLs and seen the following example:</p>

<p>/API/User/GetUser</p>

<p>Now if this is accessed over HTTP with a verb GET isn't this a bad URL becuase it describes the action (GET) in the URL?</p>
","2988","","<p>There is no such thing as a <em>REST URL</em>. In fact, the word <em>REST URL</em> is pretty much an oxymoron. The <em>Hypermedia As The Engine Of Application State</em> Constraint guarantees that URLs are irrelevant: you are only ever following links presented to you by the server, anyway. You never see, read or type a URI anywhere. (Just like browsing the web: you don't look at the URL of a link, read it, memorize it and then type it into the address bar; you just click on it and don't care what it actually says.)</p>

<p>The term <em>REST URL</em> implies that you care about your URLs in your REST architecture. However, if you care about your URLs in your REST architecture, you are not RESTful. Therefore, <em>REST URL</em> is an oxymoron.</p>

<p>[Note: Proper URI design is <em>very</em> important for the URI-ness of a URI, especially the <em>I</em> part. Also, there's plenty of good <em>usability</em> reasons for <em>pretty</em> URLs. But both of these have nothing whatsoever to do with REST.]</p>
"
"<p>Back at the PDC in 2008, in the C# futures talk by Anders Hejlsberg he talked about rewriting the C# compiler and providing a ""compiler as a service"" I certainly got the impression at the time that they were targeting the C# 4.0 timeframe for this....</p>

<p>Well, does anyone know what the state of this is? it doesn't seem to be there in the CTP and there is almost no information on the WEB apart from links to the 2008 PDC session video (roughly an hour in). </p>

<p>Has this initiative gone dark?</p>
","2988","","<p>It's already <a href=""http://tirania.org/blog/archive/2010/Apr-27.html"" rel=""nofollow"">available in Mono</a> for quite some time.</p>
"
"<p>Taking an example of Fibonacci Series from the Clojure Wiki, the Clojure code is :</p>

<pre><code>(def fib-seq
 (lazy-cat [0 1] (map + (rest fib-seq) fib-seq)))
</code></pre>

<p>If you were to think about this starting from the [0 1], how does it work ? Would be great if there are suggestions on the thought process that goes into thinking in these terms.</p>
","2988","","<p>My Clojure is a bit rusty, but this seems to be a literal translation of the famous Haskell one-liner:</p>

<pre><code>fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
</code></pre>

<p>[I'm going to be using pseudo-Haskell, because it's a little bit more succinct.]</p>

<p>The first thing you need to do, is simply let laziness sink in. When you look at a definition like this:</p>

<pre><code>zeroes = 0 : zeroes
</code></pre>

<p>Your immediate gut reaction as a strict programmer would be ""ZOMG infinite loop! Must fix bug!"" But it isn't an infinite loop. This is a <em>lazy</em> infinite loop. If you do something stupid like</p>

<pre><code>print zeroes
</code></pre>

<p>Then, yes, there <em>will</em> be an infinite loop. But as long as you simply use a finite number of elements, you will never notice that the recursion doesn't actually terminate. This is <em>really</em> hard to get. I still don't.</p>

<p>Laziness is like the monetary system: it's based on the assumption that the vast majority of people never use the vast majority of their money. So, when <em>you</em> put $1000 in the bank, they don't keep it in their safe. They lend it to someone else. Actually, they <em>leverage</em> the money, which means that they lend $5000 to someone else. They only ever need enough money so that they can quickly reshuffle it so that it's <em>there</em> when you are looking at it, giving you the <em>appearance</em> that they actually keep your money.</p>

<p>As long as they can manage to always give out money when you walk up to an ATM, it doesn't actually matter that the vast majority of your money isn't there: they only need the small amount you are withdrawing at the point in time when you are making your withdrawal.</p>

<p>Laziness works the same: whenever you look at it, the value is there. If you look at the first, tenth, hundreth, quadrillionth element of <code>zeroes</code>, it <em>will</em> be there. But it will <em>only</em> be there, <em>if</em> and <em>when</em> you look at it, <em>not</em> before.</p>

<p>That's why this inifintely recursive definition of <code>zeroes</code> works: as long as you don't try to look at the <em>last</em> element (or <em>every</em> element) of an infinite list, you are safe.</p>

<p>Next step is <code>zipWith</code>. (Clojure's <code>map</code> is just a generalization of what in other programming languages are usually three different functions: <code>map</code>, <code>zip</code> and <code>zipWith</code>. In this example, it is used as <code>zipWith</code>.)</p>

<p>The reason why the <code>zip</code> family of functions is named that way, is because it actually works like a zipper, and that is also how to best visualize it. Say we have some sporting event, where every contestant gets two tries, and the score from both tries is added up to give the end result. If we have two sequences, <code>run1</code> and <code>run2</code> with the scores from each run, we can calculate the end result like so:</p>

<pre><code>res = zipWith (+) run1 run2
</code></pre>

<p>Assuming our two lists are <code>(3 1 6 8 6)</code> and <code>(4 6 7 1 3)</code>, we line both of those lists up side by side, like the two halves of a zipper, and then we zip them together using our given function (<code>+</code> in this case) to yield a new sequence:</p>

<pre><code>3   1   6   8   6
+   +   +   +   +
4   6   7   1   3
=   =   =   =   =
7   7  13   9   9
</code></pre>

<p>Contestant #3 wins.</p>

<p>So, what does our <code>fib</code> look like?</p>

<p>Well, it starts out with a <code>0</code>, then we append a <code>1</code>, then we append the sum of the infinite list with the infinite list shifted by one element. It's easiest to just draw that out:</p>

<ul>
<li><p>the first element is zero:</p>

<pre><code>0
</code></pre></li>
<li><p>the second element is one:</p>

<pre><code>0   1
</code></pre></li>
<li><p>the third element is the first element plus the first element of the rest (i.e. the second element). We visualize this again like a zipper, by putting the two lists on top of each other.</p>

<pre><code>0   1
+
1
=
1
</code></pre></li>
<li><p>Now, the element that we just computed is not just the <em>output</em> of the <code>zipWith</code> function, it is at the same time also the <em>input</em>, as it gets appended to both lists (which are actually the same list, just shifted by one):</p>

<pre><code>0   1   1
+   +
1   1
=   =
1   2
</code></pre></li>
<li><p>and so forth:</p>

<pre><code>0   1   1   2
+   +   +
1   1   2
=   =   =
1   2   3


0   1   1   2   3   ^
+   +   +   +       |
1   1   2   3   ^   |
=   =   =   =   |   |
1   2   3   5---+---+
</code></pre></li>
</ul>

<p>Or if you draw it a little bit differently and merge the result list and the second input list (which really are the same, anyway) into one:</p>

<pre><code>0   1   1   2   3   ^
+   +   +   +   +   |
1 = 1 = 2 = 3 = 5---+
</code></pre>

<p>That's how <em>I</em> visualize it, anyway.</p>
"
"<p>I have to wait quite long time (comparing to my friends machines) for executing scripts on jRuby, especially when I'm running rake tasks or tests. I've tried jRuby version 1.3.1 and 1.4.1 with and without ruby-debug gem and the same problem occurred in each configuration.</p>

<p>The question is simple: 
Is there any way to improve jRuby load process? 
..or have I something wrong with my jvm configuration or jRuby installation (I'm using jRuby via rvm - ruby version manager)?</p>
","2988","","<p>There are a couple of things you could try:</p>

<ul>
<li>use the very latest and greatest version of JRuby (due to the extensive testsuites, even the bleeding edge git master branch is usually pretty stable), they are <em>constantly</em> working on startup time</li>
<li>choose your JVM wisely, Oracle JRockit for example is geared towards servers and thus startup performance is not a concern (those apps are only restarted once every couple of years anyway), Sun has mainly neglected the desktop for the last ten years or so, but has gotten consistently better since 1.6u12 (try the recently released 1.6u18) and also in 1.7. IBM's J9 is also said to be pretty lightweight.</li>
<li>try nailgun, which is a project that keeps a JVM running as a daemon in the background (there is builtin support in JRuby, try running your scripts with <code>jruby --ng</code>)</li>
<li>just don't use JRuby for unit tests and rake tasks: the ThoughtWorks Mingle team, for example uses MRI for unit tests, rake tasks and development and JRuby for integration tests, regression tests and production. (This obviously only works if you don't use any Java libraries in your rake tasks and tests.)</li>
</ul>

<p>However, tests and scripts <em>are</em> the worst case scenario for JRuby. The JRuby runtime <em>alone</em> is already pretty heavy, much heavier than MRI. Just loading the entire beast from disk into RAM can already take longer than running the same script in MRI. And we haven't even added the startup time for the JVM yet!</p>
"
"<p>I was looking through some Rails source code and came across</p>

<pre><code># File vendor/rails/activesupport/lib/active_support/vendor/builder-2.1.2/builder/css.rb, line 129
129:     def target!
130:       @target * ''
131:     end
</code></pre>

<p>What does the * '' do? Is that multiplication by an empty string...? And why would you do that.</p>
","2988","","<p><a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Array.html#M000743"" rel=""nofollow""><code>Array#*</code></a> with a <code>String</code> argument is equivalent to <code>Array#join</code>.</p>
"
"<p>How do I a string against a regex such that it will return true if the <strong>whole</strong> string matches (not a substring)?</p>

<p>eg:</p>

<pre><code>test( \ee\ , ""street"" ) #=&gt; returns false
test( \ee\ , ""ee"" ) #=&gt; returns true!
</code></pre>

<p>Thank you.</p>
","2988","","<p>So, what you are asking is how to test whether the two strings are equal, right? Just use string equality! This passes every single one of the examples that both you and Tomas cited:</p>

<pre><code>'ee'   == 'street' # =&gt; false
'ee'   == 'ee'     # =&gt; true
""a\na"" == 'a'      # =&gt; false
""a\na"" == ""a\na""   # =&gt; true
</code></pre>
"
"<p>Anyone else having trouble installing cuke4nuke via gem install cuke4nuke?</p>

<p>I'm getting the following error and can't figure out what to do to solve it:</p>

<pre>
Building native extensions.  This could take a while...
ERROR:  Error installing cuke4nuke:
        ERROR: Failed to build gem native extension.

C:/Ruby/bin/ruby.exe extconf.rb
checking for strncpy_s()... no
creating Makefile

nmake
'nmake' is not recognized as an internal or external command,
operable program or batch file.
</pre>

<p>I'm running:</p>

<p>Windows 7 32-bit box
Ruby 1.8.6 (2008-08-11 patchlevel 287) [i386-mswin32]<br/>
RubyGems 1.3.5<br/>
<strong>edit</strong> I also installed the RubyInstaller's devkit</p>

<p>I have the following gems installed:</p>

<pre>
actionmailer (2.3.5)
actionpack (2.3.5)
activerecord (2.3.5)
activeresource (2.3.5)
activesupport (2.3.5)
builder (2.1.2)
cucumber (0.6.2, 0.5.0, 0.4.4)
diff-lcs (1.1.2)
fxri (0.3.6)
fxruby (1.6.16)
hpricot (0.6.164)
json (1.2.0)
json_pure (1.2.0)
log4r (1.0.5)
polyglot (0.2.9)
ptools (1.1.6)
rack (1.0.1)
rails (2.3.5)
rake (0.8.7, 0.8.1)
ruby-opengl (0.60.0)
term-ansicolor (1.0.4)
test-unit (2.0.1)
treetop (1.4.3, 1.4.2)
win32-api (1.2.1, 1.2.0)
win32-clipboard (0.4.4)
win32-dir (0.3.2)
win32-eventlog (0.5.0)
win32-file (0.5.5)
win32-file-stat (1.3.1)
win32-process (0.5.9)
win32-sapi (0.1.4)
win32-sound (0.4.1)
win32console (1.2.0)
windows-api (0.2.4)
windows-pr (0.9.3)
</pre>
","2988","","<p>You didn't follow the installation instructions.</p>

<p>The installation instructions say to use the MinGW version of MRI, but you are using the MSVC version. Also, you have to install a C compiler and C build environment, again as per the installation instructions. If you use the MinGW version, you can use the Devkit provided by the RubyInstaller authors, if you use the MSVC version, you need to install the same compiler that was used to compile MRI: Microsoft Visual C 6.0 (which is no longer available and hasn't been for years).</p>
"
"<p>I am using <strong>JRuby</strong> along with <strong>Cucumber</strong> and is looking for a way of running </p>

<pre><code> jruby -S gem update --system
 jruby -S gem install cucumber
</code></pre>

<p>from within the Java <a href=""http://java.sun.com/javase/6/docs/api/javax/script/ScriptEngine.html"" rel=""nofollow"">ScriptEngine</a>. No amount of Googling have let me to a solution to this problem. Basically I want to be able to do something like this</p>

<pre><code> ScriptEngineManager manager = new ScriptEngineManager();
 ScriptEngine jRubyEngine = manager.getEngineByName(""jruby"");
 : // some unknown code here
 jRubeEngine.eval(""call gems install/update from inside JRuby"")
</code></pre>

<p>Is there a way of accomplishing this?</p>
","2988","","<p>RubyGems is just a Ruby library. The <code>gem</code> command is only a thin wrapper around the library. Everything you can do with the command, you can do with the library.</p>

<p>I've never actually used the library, but I guess what you want to look at is the <a href=""http://RubyGems.RubyForge.Org/rubygems-update/Gem/DependencyInstaller.html"">Gem::DepencyInstaller</a> and the code would look something like this (<em>completely</em> untested, just pulled out of my you-know-what):</p>

<pre><code>ScriptEngineManager manager = new ScriptEngineManager();
ScriptEngine jRubyEngine = manager.getEngineByName(""jruby"");
String s = ""
  require 'rubygems'
  require 'rubygems/dependency_installer'
  Gem::DependencyInstaller.new.install('cucumber')
"";
jRubyEngine.eval(s);
</code></pre>
"
"<p>I know a lot of Java people have started looking at Scala since it runs on the JVM, and a lot of people in the Microsoft world are looking at F#, but what does Ruby have as a natural functional successor?</p>

<p>In a pure FP sense Ruby doesn't lack anything, instead it has too much some may say. A functional language forces the programmer to not use global variables and other idioms so much (although it is possible to use globals in functional languages)</p>
","2988","","<p>There's two <em>very</em> different definitions of what ""functional programming"" means. You can kind-of do the one in Ruby, but you cannot do the other.</p>

<p>Those two definitions are:</p>

<ul>
<li>programming with first-class functions and </li>
<li>programming with mathematical functions</li>
</ul>

<p>You can kind-of program with first-class functions in Ruby. It has support for first-class functions. In fact, it has <em>too much</em> support for them: there is <code>Proc.new</code>, <code>proc</code>, <code>lambda</code>, <code>Method</code>, <code>UnboundMethod</code>, blocks, <code>#to_proc</code> and <code>-&gt;()</code> (and probably some others that I forget).</p>

<p>All of these <a href=""http://Innig.Net/software/ruby/closures-in-ruby.rb"">behave slightly differently</a>, have slightly different syntax, slightly different behavior and slightly different restrictions. For example: the only one of these which is syntactically lightweight enough that you can actually use it densely, is blocks. But blocks have some rather severe restrictions: you can only pass one block to a method, blocks aren't objects (which in an object-oriented language in wich ""everything is an object"" is a <em>very</em> severe restriction) and at least in Ruby 1.8 there are also some restrictions w.r.t parameters.</p>

<p>Referring to a method is another thing that is fairly awkward. In <a href=""http://Python.Org/"">Python</a> or <a href=""http://ECMAScript.Org/"">ECMAScript</a> for example, I can just say <code>baz = foo.bar</code> to refer to the <code>bar</code> method of the <code>foo</code> object. In Ruby, <code>foo.bar</code> is a method <em>call</em>, if I want to refer to the <code>bar</code> method of <code>foo</code>, I have to say <code>baz = foo.method(:bar)</code>. And if I now want to <em>call</em> that method, I cannot just say <code>baz()</code>, I have to say <code>baz.call</code> or <code>baz[]</code> or (in Ruby 1.9) <code>baz.()</code>.</p>

<p>So, first-class functions in Ruby aren't <em>really</em> first-class. They are much better than second-class, and they are <em>good enough</em>&trade;, but they aren't fully first-class.</p>

<p>But generally, Rubyists do not leave Ruby just for first-class functions. Ruby's support is good enough that any advantages you might gain from better support in another language usually is eaten up by the training effort for the new language or by something <em>else</em> that you are accustomed to that you must now give up. Like, say RubyGems or tight Unix integration or Ruby on Rails or syntax or &hellip;</p>

<p>However, the <em>second</em> definition of FP is where Ruby falls flat on its face. If you want to do programming with mathematical functions in Ruby, you are in for a world of pain. You cannot use the absolute majority of Ruby libraries, because most of them are stateful, effectful, encourage mutation or are otherwise impure. You cannot use the standard library for the same reasons. You cannot use the core library. You cannot use any of the core datatypes, because they are all mutable. You could just say ""I don't care that they are mutable, I will simply not mutate them and always copy them"", but the problem is: someone else still can mutate them. Also, because they are mutable, Ruby cannot optimize the copying and the garbage collector isn't tuned for that kind of workload.</p>

<p>It just doesn't work.</p>

<p>There is also a couple of features that have really nothing to do with functional programming but that most functional languages tend to have, that Ruby is missing. Pattern matching, for example. Laziness also was not that easy to achieve before <code>Enumerator</code>s were more aggressively used in Ruby 1.9. And there's still some stuff that works with strict <code>Enumerable</code>s or <code>Array</code>s but not with lazy <code>Enumerator</code>s, although there's actually no reason for them to <em>require</em> strictness.</p>

<p>And for <em>this</em> definition of FP, it definitely makes sense to leave Ruby behind.</p>

<p>The two main languages that Rubyists have been flocking to, are <a href=""http://Erlang.Org/"">Erlang</a> and <a href=""http://Clojure.Org/"">Clojure</a>. These are both relatively good matches for Ruby, because they are both dynamically typed, have a similar REPL culture as Ruby, and (this is more a Rails thing than a Ruby thing) are also very good on the web. They have still pretty small and welcoming communities, the original language creators are still active in the community, there is a strong focus on doing new, exciting and edgy things, all of which are traits that the Ruby community also has.</p>

<p>The interest in Erlang started, when someone showed the original 1993 introduction video ""<a href=""http://Archive.Org/details/ErlangTheMovie/"">Erlang: The Movie</a>"" at RubyConf 2006. A couple of high-profile Rails projects started using Erlang, for example <a href=""http://Powerset.Com/"">PowerSet</a> and <a href=""https://GitHub.Com/"">GitHub</a>. Erlang is also easy to master for Rubyists, because it doesn't take purity quite as far as <a href=""http://Haskell.Org/"">Haskell</a> or <a href=""http://Clean.CS.RU.Nl/"">Clean</a>. The <em>inside</em> of an actor is pretty pure, but the act of sending messages itself is of course a side-effect. Another thing that makes Erlang easy to grasp, is that Actors and Objects are actually the same thing, when you follow <a href=""http://Lists.SqueakFoundation.Org/pipermail/squeak-dev/1998-October/017019.html"">Alan Kay's definition of object-oriented programming</a>.</p>

<p>Clojure has been a recent addition to the Rubyist's toolbelt. Its popularity is I guess mostly driven by the fact that the Ruby community has finally warmed up to the idea that JVM ≠ Java and embraced <a href=""http://JRuby.Org/"">JRuby</a> and then they started to look around what <em>other</em> interesting stuff there was on the JVM. And again, Clojure is much more pragmatic than both other functional languages like Haskell and other Lisps like <a href=""http://Scheme-Reports.Org/"">Scheme</a> and much simpler and more modern than CommonLisp, so it is a natural fit for Rubyists.</p>

<p>Another cool thing about Clojure is that because both Clojure and Ruby run on the JVM, you can <em>combine</em> them.</p>

<p>The author of ""<a href=""http://PragProg.Com/titles/shcloj/programming-clojure/"">Programming Clojure</a>"" (Stuart Halloway) is a (former?) Rubyist, for example, as is <a href=""http://Technomancy.us/"">Phil Hagelberg</a>, the author of the <a href=""https://GitHub.Com/Technomancy/Leiningen/"">Leiningen</a> build tool for Clojure.</p>

<p>However, Rubyists are also looking at both <a href=""http://Scala-Lang.Org/"">Scala</a> (as one of the more pragmatic statically typed FP languages) and Haskell (as one of the more elegant ones). Then there is projects like <a href=""https://GitHub.Com/MCamou/Scuby/"">Scuby</a> and <a href=""https://GitHub.Com/MWotton/Hubris/"">Hubris</a> which are bridges that let you integrate Ruby with Scala and Haskell, respectively. Twitter's decision to move part of their low-level messaging infrastructure first from MySQL to Ruby, then from Ruby to Scala is also pretty widely known.</p>

<p><a href=""http://FSharp.Net/"">F#</a> doesn't seem to play any role at all, possibly due to an irrational fear towards all things Microsoft the Ruby community has. (Which, BTW, seems mostly unfounded, given that the F# team has <em>always</em> made versions available for Mono.)</p>
"
"<p>I think I have my brain halfway wrapped around the Dynamic Types concept in C# 4, but can't for the life of me figure out a scenario where I'd actually want to use it.</p>

<p>I'm sure there are many, but I'm just having trouble making the connection as to how I could engineer a solution that is better solved with dynamics as opposed to interfaces, dependency injection, etc.</p>

<p>So, what's a real-world application scenario where dynamic type usage is appropriate?</p>
","2988","","<p>There are lots of cases where you are <em>already</em> using dynamic typing and dynamic binding <em>today</em>. You just don't realize it, because it is all hidden behind strings or <code>System.Object</code>, since until C# 4, the necessary support wasn't there.</p>

<p>One example is COM interop: COM is actually a semi-dynamic object system. When you do COM interop, a lot of methods actually return a dynamic object, but because C# didn't support them, they were returned as <code>System.Object</code> and you had to cast them yourself, possibly catching exceptions on the way.</p>

<p>Another example is interacting with dynamically typed (or even untyped) data, such as JSON, CSV, HTML, schemaless XML, schemaless web services, schemaless databases (which are, after all, the new hotness). Today, you use strings for those. An XML API would look like</p>

<pre><code>var doc = new XmlDocument(""/path/to/file.xml"");
var baz = doc.GetElement(""foo"").GetElement(""qux"");
</code></pre>

<p>and so on. But how about:</p>

<pre><code>dynamic doc = new XmlDocument(""/path/to/file.xml"");
var baz = doc.foo.qux;
</code></pre>

<p>Doesn't that look nice?</p>

<p>A third example is reflection. Today, invocation of a method via reflection is done by passing a string to <code>InvokeMember</code> (or whatever the thing is called). Wouldn't it be nicer to, you know, just invoke the damn thing?</p>

<p>Then, there is <em>generation</em> of dynamic data (basically the opposite of the second example). Here's an example how to generate some dynamic XML:</p>

<pre><code>dynamic doc = new XmlBuilder();
doc.articles(id=42, type=""List"", () =&gt; {
  article(() =&gt; {
    number(42);
    title(""blahblubb"");});});
</code></pre>

<p>This is not nearly as beautiful as the equivalent Ruby, but it is the best I could come up with at such short notice :-)</p>

<p>And last but certainly not least, integration with a dynamically typed language. Whether that is JavaScript in a Silverlight application, a custom rules engine embedded in your business app or a DLR instance that you host in your CAD program/IDE/text editor.</p>
"
"<p>I have an html file that I need to take any  tag and put an align='left' into it.</p>

<p>So given the line :</p>

<pre><code>  &lt;td&gt;&lt;img alt="""" src=""oooh.html_files/px"" style=""width: 20px; height: 1px;""/&gt;&lt;/td&gt;
</code></pre>

<p>I need it to do :</p>

<pre><code>  &lt;td align='left'&gt;&lt;img alt="""" src=""oooh.html_files/px"" style=""width: 20px; height: 1px;""/&gt;&lt;/td&gt;
</code></pre>

<p>If it already specifies an alignment I need it to just leave this. So given the line :</p>

<pre><code>  &lt;tr&gt;&lt;td width=""50%""&gt;&amp;nbsp;&lt;/td&gt;&lt;td align=""center""&gt;
</code></pre>

<p>I need it to do :</p>

<pre><code>  &lt;tr&gt;&lt;td width=""50%"" align='left'&gt;&amp;nbsp;&lt;/td&gt;&lt;td align=""center""&gt;
</code></pre>

<p>Note it puts an align into the first td, but ignores the second one because that already specifies an alignment.</p>

<p>Is this possible to do it Ruby with regular expressions?</p>

<p>I know its not really worth using regular expressions with html.. but basically I'm just after a quick hack to get over a bug in another library. Hopefully this bug will be fixed soon and I wont need to worry about it! :)</p>
","2988","","<pre><code>#!/usr/bin/env ruby
require 'nokogiri'

doc = Nokogiri::XML('&lt;tr&gt;&lt;td width=""50%""&gt;&amp;nbsp;&lt;/td&gt;&lt;td align=""center""&gt;&lt;/tr&gt;')

(doc / '//td[not(@align)]').each {|td| td['align'] = 'left' }

puts doc
# &lt;?xml version=""1.0""?&gt;
# &lt;tr&gt;
#   &lt;td width=""50%"" align=""left""/&gt;
#   &lt;td align=""center""/&gt;
# &lt;/tr&gt;
</code></pre>

<p>Look, ma! No Regexp!</p>

<p>It's <em>literally</em> a one-liner if you don't bother with Regexp.</p>
"
"<p>Most things that look like operators are methods in Ruby; <code>1 + 2</code> is syntactic sugar for <code>1.+(2)</code>.</p>

<p>Even though <code>+</code> and <code>*</code> are methods that a program can redefine, Ruby has special magic to evaluate <code>1 + 2 * 3</code> as <code>1.+(2.*(3))</code> instead of <code>1.+(2).*(3)</code>.</p>

<p>I wonder where this special magic lives in Ruby--if it is hard-wired into the interpreter.</p>

<p>Ari.</p>
","2988","","<p>In all Ruby Implementations, Operator Precedence is handled by the parser. Since pretty much all existing Ruby Implementations use the same parser, or a parser generated from the same YACC grammar, <a href=""https://GitHub.Com/Shyouhei/Ruby/blob/trunk/parse.y#L741-767""><code>parse.y</code> in YARV is the file you want to look at</a>. (In JRuby, for example, that file is essentially the same: <a href=""https://GitHub.Com/JRuby/JRuby/blob/master/src/org/jruby/parser/Ruby19Parser.y#L244-270""><code>src/org/jruby/parser/Ruby19Parser.y</code></a>. Same for IronRuby: <a href=""https://GitHub.Com/IronRuby/IronRuby/blob/master/Merlin/Main/Languages/Ruby/Ruby/Compiler/Parser/Parser.y#L131-152""><code>Merlin/Main/Languages/Ruby/Ruby/Compiler/Parser/Parser.y</code></a>.)</p>

<p>The only four Ruby Implementations that do <em>not</em> either use the YARV parser directly or use a YACC clone generated parser from YARV's <code>parse.y</code>, are Cardinal, tinyrb, RubyGoLightly and XRuby.</p>

<p>Cardinal is a Ruby implementation for the Parrot virtual machine, and since Parrot includes the Parrot Grammar Engine, Cardinal naturally uses that. The interesting file is <a href=""https://GitHub.Com/Cardinal/Cardinal/blob/master/src/parser/grammar.pg#L446-542""><code>src/parser/grammar.pg</code></a>. PGE is a hybrid recursive-descent parser/operator precedence parser, which means that operator precedence shows up pretty nicely in the grammar file.</p>

<p>Tinyrb uses a PEG parser utilizing Ian Piumarta's leg library. As is typical for PEG parsers, there is no operator precedence table, rather the precedence is implicit in the hierarchical structure of the grammar. See <a href=""https://GitHub.Com/MACournoyer/TinyRb/blob/master/vm/grammar.leg#L94-106""><code>vm/grammar.leg</code></a> for details. RubyGoLightly is derived from tinyrb, except it uses Go instead of C as the implementation language, but it uses the same PEG grammar.</p>

<p>XRuby uses ANTLR for its parser. Here, the interesting file is <a href=""https://GitHub.Com/RhoMobile/Rhodes/blob/1-4-unstable/platform/shared/xruby/src/com/xruby/compiler/parser/ruby.g#L262-525""><code>src/com/xruby/compiler/parser/ruby.g</code></a>.</p>

<p>Rubinius uses the Melbourne parser, which is essentially YARV's parser packaged as a C extension. MagLev uses <code>ruby_parser</code> (see below).</p>

<p>Apart from the Ruby Implementations, there are also other Ruby parsers available.</p>

<p>Ryan Davis's ruby_parser is derived from the YARV YACC grammar. It uses racc as the parser generator. See <a href=""https://GitHub.Com/SeattleRb/Ruby_Parser/blob/master/lib/ruby_parser.y#L21-44""><code>lib/ruby_parser.y</code></a>.</p>

<p>Caleb Clausen's RedParse uses Caleb's own hand-written compiler-interpreter. The interesting file is <a href=""https://GitHub.Com/Coatl/RedParse/blob/master/lib/redparse/babyparser.rb#L26-91""><code>lib/redparse/babyparser.rb</code></a>.</p>

<p>That's all the parsers I know, that actually handle operator precedence. There is another parser built into RDoc, and there used to be one in YARD (it now uses RedParse), but those only handle just enough of Ruby's syntax to find modules, classes and methods, comments and extract method parameter lists. They don't deal with operator precedence.</p>
"
"<p>Does anyone know what organization is hosting the .net framework Common Language infrastructure (CLI) standards and where you can I go and read them?</p>
","2988","","<p>It was originally submitted to ECMA. ECMA has in turn submitted it to ISO.</p>

<p>The CLI specification is <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-335.htm"" rel=""nofollow"">ECMA-335</a>. It was later submitted to ISO as <a href=""http://Standards.ISO.Org/ittf/PubliclyAvailableStandards/c042927_ISO_IEC_23271_2006%28E%29.zip"" rel=""nofollow"">ISO/IEC 23271:2006</a> and <a href=""http://Standards.ISO.Org/ittf/PubliclyAvailableStandards/c042928_ISO_IEC_TR_23272_2006%28E%29.zip"" rel=""nofollow"">ISO/IEC TR 23272:2006</a>. The specification includes the CTS, VES, CIL and the libraries, also specification of the metadata and the debug interchange format.</p>

<p>The other pieces of the .NET puzzle are specified in <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-334.htm"" rel=""nofollow"">ECMA-334</a> aka. <a href=""http://Standards.ISO.Org/ittf/PubliclyAvailableStandards/c042926_ISO_IEC_23270_2006%28E%29.zip"" rel=""nofollow"">ISO/IEC 23270:2006</a> for C# and <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-372.htm"" rel=""nofollow"">ECMA-372</a> for C++/CLI (note: no ISO spec for this one).</p>
"
"<p>So how can I still be able to write beautiful code such as:</p>

<pre><code>'im a string meing!'.pop
</code></pre>

<p>Note: <code>str.chop</code> isn't sufficient answer</p>
","2988","","<p>It is not what an enumerable string atually enumerates. Is a string a sequence of ...</p>

<ul>
<li>lines, </li>
<li>characters, </li>
<li>codepoints or </li>
<li>bytes?</li>
</ul>

<p>The answer is: all of those, any of those, either of those or neither of those, depending on the context. Therefore, you have to tell Ruby which of those you actually want.</p>

<p>There are several methods in the <code>String</code> class which return enumerators for any of the above. If you want the pre-1.9 behavior, your code sample would be</p>

<pre><code>'im a string meing!'.bytes.to_a.pop
</code></pre>

<p>This looks kind of ugly, but there is a reason for it: a string is a sequence. You are treating it as a stack. A stack is not a sequence, in fact it pretty much is the <em>opposite</em> of a sequence.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1778638/idiomatic-object-creation-in-ruby"">Idiomatic object creation in ruby</a>  </p>
</blockquote>



<p>Sometimes it's useful to assign numerous of a constructed arguments to instance variables on construction. Other than the obvious method:</p>

<pre><code>def initialize(arg1, arg2, arg3)
  @arg1, @arg2, @arg3 = arg1, arg2, arg3
end
</code></pre>

<p>Is there a more concise idiom for achieving the same result? Something like that found in scala for instance:</p>

<pre><code>class FancyGreeter(greeting: String) {
  def greet() = println(greeting)
}
</code></pre>

<p>Where in this case the object FancyGreeter has a default constructor that provides assignment for it's passed arguments.</p>
","2988","","<p>In Ruby 1.8, block arguments and method arguments have different semantics: method arguments have <em>binding semantics</em>, block arguments have <em>assignment semantics</em>.</p>

<p>What that means is that when you call a method, the method arguments get <em>bound</em> to the values that you pass in. When you call a block, the values get <em>assigned</em> to the arguments.</p>

<p>So, you can create some pretty crazy looking blocks that way, that seemingly don't do anything:</p>

<pre><code>lambda {|@a|}.call(42)
</code></pre>

<p>The block body is empty, but because of the argument assignment semantics, the instance variable <code>@a</code> will be assigned the value <code>42</code>. It works even crazier:</p>

<pre><code>lambda {|foo.bar|}.call(42)
</code></pre>

<p>Yes, <code>attr_writer</code> methods work too. Or what about </p>

<pre><code>foo = {}
lambda {|foo[:bar]|}.call(42)
p foo # =&gt; {:bar =&gt; 42}
</code></pre>

<p>Yup, those too.</p>

<p>And since you can define methods using blocks, you can do this: </p>

<pre><code>class FancyGreeter
  define_method(:initialize) {|@greeting|}
  def greet; puts @greeting end
end
</code></pre>

<p>or even </p>

<pre><code>class FancyGreeter
  attr_accessor :greeting
  define_method(:initialize) {|self.greeting|}
  def greet; puts greeting end
end
</code></pre>

<p>However, I wouldn't recommend this for two reasons:</p>

<ul>
<li>Not many Rubyists know this, be kind to the people who have to maintain the code after you.</li>
<li>In Ruby 1.9 and onwards, block argument semantics are gone, blocks also use method argument semantics, therefore this does no longer work.</li>
</ul>
"
"<p>I am currently working with an app that allows for runtime addition and removal of items in a drop down list via a rub script.  The Ruby looks like this </p>

<pre><code>SAFE = ;
return control if control.CyclesCount == 0;
control.Items.each{|item| control.Items.Remove(item) if item.Value.index('|').nil?};
return control;
</code></pre>

<p>control is  custom user control and its Items is a ListItemCollction.  I am running via unit tests to get my Ruby code correct and running into some trouble.  The ListItemColletion I am passing in looks like this ..</p>

<pre><code>var lic = new ListItemCOllection {
  new ListItem {Text = ""Item2"", Value = ""8""}, 
  new ListItem {Text = ""Item1"", Value = ""1""},
  new ListItem {Text = ""Item3"", Value = ""3|1""},
  new ListItem {Text = ""Item4"", Value = ""4""},
  new ListItem {Text = ""Item5"", Value = ""5|2""},
  new ListItem {Text = ""Item6"", Value = ""6""}
}
</code></pre>

<p>Instead of leaving the 2 items with the pipe in them, this code always seems to leave 3 items in the items collection.  The 3 depend on the order that I put the items in (while in this order, Item1, Item3, Item5 get left)which leads me to believe that its the remove that is messed up.  I have also tried to take a copy of the collection, loop through it, removing from the original so that I was not removing from the collection I was iterating through.  I am a relatve noob to Ruby so go easy on me ... but I could use some advice.</p>

<p>Thanks</p>
","2988","","<p>Modifying a collection <em>while</em> you are iterating through it is <em>never</em> a good idea. If you do that, all hell breaks loose. (Preferably, it would raise some kind of exception, but that's life ...)</p>

<p>However, that's not actually the biggest problem in your code. The biggest problem is that you have commited the mortal sin of Ruby: not knowing <code>Enumerable</code>. (Don't worry: everybody commits that sin. All the time.)</p>

<p>If you want to reject all elements from a collection that satisfy a condition, there's a method for that, and it's called exactly what you would expect: <code>Enumerable#reject!</code>.</p>

<p>So, let's clean this up, shall we?</p>

<pre><code>SAFE = ;
</code></pre>

<p>What's that semicolon doing there? It seems you got your C# and Ruby mixed up :-)
(Oh, and also, that line doesn't do anything useful anyway, does it?)</p>

<pre><code>return control if control.CyclesCount == 0;
</code></pre>

<p>Again, useless semicolon.</p>

<pre><code>control.Items.each{|item| control.Items.Remove(item) if item.Value.index('|').nil?};
</code></pre>

<p>This is where it gets interesting:</p>

<pre><code>control.Items.reject! {|item| item.Value.include?('|') }
</code></pre>

<p>Much better, isn't it?</p>

<pre><code>return control;
</code></pre>

<p>I personally like to reserve the <code>return</code> keyword for ""pure"" methods (i.e. methods that don't have side-effects), so I wouldn't use one here since the code modifies <code>control.Items</code> but that is a style choice. Putting it all together, this is how I would write it:</p>

<pre><code>return control if control.cycles_count == 0
control.items.reject! {|item| item.value.include?('|') }
control
</code></pre>

<p>Note: I don't have a working install of IronRuby right now, so I am making a few assumptions that I can unfortunately not test:</p>

<ul>
<li>method name transliteration (<code>CyclesCount</code> -> <code>cycles_count</code>) works, </li>
<li><code>Value</code> is some kind of <code>String</code> or collection and </li>
<li><code>ListItemCollection</code> mixes in <code>Enumerable</code></li>
</ul>

<p>The latter <em>should</em> be the case if <code>ListItemCollection</code> implements <code>IEnumerable</code> (otherwise I would consider that a bug in IronRuby). If <code>ListItemCollection</code> does <em>not</em> implement <code>IEnumerable</code> (which I would probably consider a bug in <code>ListItemCollection</code>), that is still easily fixed:</p>

<pre><code>class ListItemCollection; include Enumerable end
</code></pre>

<p>[BTW: I would also introduce a <code>cycles?</code> method (or a <code>bool HasCycles</code> property on the .NET side), so that you can get rid of the <code>cycle_count == 0</code> test.]</p>
"
"<p>There is a post on <a href=""http://kenai.com/"" rel=""nofollow"">http://kenai.com/</a> from Oracle's Ted Farrell which has an interesting statement:</p>

<blockquote>
  <p>We are in the process of migrating java.net to the kenai technology.</p>
</blockquote>

<p>Does this mean java.net will be powered by Jruby on rails??</p>
","2988","","<p>Yes.</p>

<p>If there is <em>one</em> thing that Larry Ellison <em>loves</em>, it's efficiency. Having two portals that do the exact same thing (project hosting) is stupid. Having them both powered by different technologies is even stupider. So, you take the bigger portal (java.net) and the better technology (Kenai), and throw them together.</p>

<p>Note that this is nothing new for Oracle: <a href=""http://Mix.Oracle.Com/"" rel=""nofollow"">Oracle Mix</a>, Oracle's community site has been JRuby and Rails powered for a long time, long before the merger. It is, indeed, one of <em>the</em> early flagship projects, which brought JRuby on the radar for a lot of enterprises. (The others are <a href=""http://ThoughtWorks-Studios.Com/mingle-agile-project-management/"" rel=""nofollow"">ThoughtWorks Studio's Mingle</a> and obviously Kenai.)</p>
"
"<p>Someone on the Herding Code podcast No. 68, <a href=""http://herdingcode.com/?p=231"">http://herdingcode.com/?p=231</a>, stated that IOC containers had no place with Python or Javascript, or words to that effect.  I'm assuming this is conventional wisdom and that it applies to all dynamic languages.  Why?  What is it about dynamic languages that makes IOC containers unnecessary?</p>
","2988","","<p>Because they are already built into the language.</p>

<p>An IoC container provides two things:</p>

<ul>
<li>dynamic binding</li>
<li>a dynamic language (usually an incredibly crappy one, built on top of XML or in newer versions on top of Java annotations/.NET attributes)</li>
</ul>

<p>Dynamic binding is already part of the dynamic language and the dynamic language is already a dynamic language. Therefore, an IoC container simply doesn't make sense: the language is already an IoC container.</p>

<p>Another way to look at it: what is it that an IoC container allows you to do? It allows you to take independent components and wire them up together into an application, without any of the components knowing anything about each other. There is a name for wiring independent pieces together into an application: scripting! (That's pretty much the definition of scripting.) Many dynamic languages happen to also be pretty good at scripting, therefore they are perfect as IoC containers.</p>

<p>Please note that I am <em>not</em> talking about Dependency Injection or Inversion of Control. DI and IoC are <em>just</em> as important in dynamic languages as they are in static languages, for exactly the same reasons. What I am talking about are IoC containers and DI frameworks. Those <em>tools</em> are unnecessary, the <em>design principles</em> aren't.</p>
"
"<p>I'd like to host some open source code on a public repository, and I really like how pretty GitHub makes this kind of sharing.</p>

<p>Unfortunately, Git is not an option for these projects, for the most part because I'm developing for/on Windows, and Git support on Windows is not anywhere near where Subversion's support is.</p>

<p>I'd like to have something exactly like GitHub, but one where I could use Subversion instead. Does such a service exist?</p>
","2988","","<blockquote>
  <p>I'd like to have something exactly like GitHub, but one where I could use Subversion instead. Does such a service exist?</p>
</blockquote>

<p>No, it doesn't exist.</p>

<p>And it <em>cannot</em> exist. The features of GitHub are highly dependent on distributed version control. In fact, the majority of all the features that make ""sharing pretty"" have absolutely nothing to do with GitHub, they are fundamental features of distributed version control.</p>

<p>So, you can have something exactly like <a href=""https://GitHub.Com/"">GitHub</a> (or <a href=""https://Gitorious.Org/"">Gitorious</a>, <a href=""https://Codaset.Com/"">codaset</a>) for <a href=""http://Mercurial.Selenic.Com/"">Mercurial</a> (<a href=""https://BitBucket.Org/"">BitBucket</a>), <a href=""http://Darcs.Net/"">darcs</a> (<a href=""https://Patch-Tag.Com/"">Patch-Tag</a>), <a href=""http://Bazaar.Canonical.Com/"">Bazaar</a> (<a href=""https://Launchpad.Net/"">Launchpad</a>), Codeville, <a href=""http://GNU.Org/software/gnu-arch/"">Arch</a>, <a href=""http://WWW.NonGNU.Org/arx/"">ArX</a>, <a href=""http://Monotone.Ca/"">Monotone</a>, <a href=""http://Fossil-SCM.Org/"">Fossil</a>, but not for <a href=""http://Subversion.Apache.Org/"">Subversion</a> (or <a href=""http://WWW.NonGNU.Org/cvs/"">CVS</a>, <a href=""http://Perforce.Com/"">Perforce</a>, <a href=""http://MSDN.Microsoft.Com/library/ms181038%28VS.80%29.aspx"">Visual SourceSafe</a>, <a href=""http://MSDN.Microsoft.Com/teamsystem/"">Team Foundation Server</a>, <a href=""http://SourceGear.Com/vault/"">Vault</a>), because centralized version control systems simply are not capable of supporting the required features.</p>
"
"<p>I've written some bash scripts (&lt; 200 lines of code each) I wanna share with the world, but as I'm a FLOSS fan my first thought was to share them under the terms of the GPL.</p>

<p>But...is that nonsense? I mean, I understand why to share a whole application under the terms of the GPL, but does it make sense for such small scripts? Or would it be the best thing to share them as Public Domain, since they're nothing really special or fancy? Or is there any special kind of licensing 'treatment' for scripts out there?</p>

<p>I'd really appreciate some opinions on this matter, and thanks in advance.</p>

<p><strong>Edit:</strong> Thanks to everyone for the answers...I wish I could accept more than one, because they all answered my question altogether!</p>
","2988","","<p>I <em>love</em> the GPL, but I have a simple rule for my own projects: </p>

<blockquote>
  <p>The Code should be at least one order of magnitude longer than the license</p>
</blockquote>

<p>If your code is just as long as the GPL, there probably is not that much stuff in it that an evil corporation could steal, even if you license it under the MIT X11 License.</p>

<p>As for the question of Public Domain: I live in Germany, where the <em>only</em> legal way to put something in the Public Domain is to commit suicide and wait 70 years (and hope that copyright protection time doesn't get increased between now and 2080). Which is a commitment I am not wanting to make :-) So, I don't really think about that.</p>
"
"<p>I've been working on trying to better understand Ruby and here's something I'm having trouble with:</p>

<pre><code>$SAFE = 1
puts $SAFE # 1  
proc {
  $SAFE = 2
  puts $SAFE  # 2
}.call
puts $SAFE # 1   
</code></pre>

<p>The above code is partially taken from eRB's source rewritten to better highlight the example. Basically within the proc one can set the value of <code>$SAFE</code> to whatever value one wants and after the proc, the value of <code>SAFE</code> returns back to what it was before the proc.</p>

<p>If instead of using the word <code>$SAFE</code> I change it to a different word, such as <code>$DOOR</code>:</p>

<pre><code>$DOOR = 1
puts $DOOR 
proc {
  $DOOR = 2
  puts $DOOR  
}.call
puts $DOOR  
</code></pre>

<p>then the value of <code>$DOOR</code> after the proc is 2 and not 1. Why the difference between the two examples?</p>
","2988","","<p>It's rather simple, really: the reason why <code>$SAFE</code> doesn't behave like you would expect from a global variable is because it isn't a global variable. It's a magic unicorn thingamajiggy.</p>

<p>There are quite a few of those magic unicorn thingamajiggies in Ruby, and they are unfortunately not very well documented (not at all documented, in fact), as the developers of the alternative Ruby implementations found out the hard way. These thingamajiggies all behave differently and (seemingly) inconsistently, and pretty much the only two things they have in common is that they look like global variables but don't behave like them.</p>

<p>Some have local scope. Some have thread-local scope. Some magically change without anyone ever assigning to them. Some have magic meaning for the interpreter and change how the language behaves. Some have other weird semantics attached to them.</p>

<p><code>$SAFE</code> has almost all of the above: it is thread-local, meaning that if you change it in one thread, it doesn't affect other threads. It is local, meaning if you change it in a local scope (like a class, module, method or block), it doesn't affect the outer scope (as you have discovered). It has magic meaning for the interpreter, since setting it to a value different than <code>0</code> makes certain things not work. And it has additional weird semantics in that you can only ever <em>increase</em> its value, never <em>decrease</em> it.</p>
"
"<p>I was wondering if anyone knew the thinking behind there decision to do this:</p>

<p>Alot of pages on Apple.com have clean links such as:</p>

<p><a href=""http://www.apple.com/wifi/"" rel=""nofollow"">http://www.apple.com/wifi/</a></p>

<p>however some of there pages end with .html</p>

<p><a href=""http://www.apple.com/airportexpress/features/airtunes.html"" rel=""nofollow"">http://www.apple.com/airportexpress/features/airtunes.html</a></p>

<p>I find it unlikely that these pages are static html pages so....</p>

<p>Why would Apple (and other sites) do with, what are the usability advantages?</p>
","2988","","<p>It means they don't understand how the web works.</p>

<p>Putting specific technologies into the URI is one of the most heinous crimes against the web that one could possibly commit. It means that it is pretty much guaranteed that the URI is not, in fact, a URI.</p>
"
"<p>I'm the only developer working in a very small company. I currently use VisualSVN on Windows on my development machine as my VCS.  This is problematic because I can't get to my projects outside the IT firewall, and my colleague can't integrate his content into my projects.</p>

<p>We (my PM, who develops content for me) are very interested in a hosted DVCS.  My rough requirements would be:</p>

<ul>
<li>Projects can be accessed from anywhere with an internet connection</li>
<li>Projects can be protected</li>
<li>Cost is cheap-or-free</li>
</ul>

<p>What sort of services do you think would fit?</p>
","2988","","<p>Almost all DVCSs have some hosted services available that provide the features you are asking for:</p>

<ul>
<li><a href=""http://Git-SCM.Com/"" rel=""nofollow"">Git</a> has <a href=""https://GitHub.Com/"" rel=""nofollow"">GitHub</a>, <a href=""http://Unfuddle.Com/"" rel=""nofollow"">Unfuddle</a>, <a href=""https://Assembla.Com/"" rel=""nofollow"">Assembla</a>, <a href=""http://CodebaseHQ.Com/"" rel=""nofollow"">Codebase</a>, <a href=""https://ProjectLocker.Com/"" rel=""nofollow"">ProjectLocker</a></li>
<li><a href=""http://Mercurial.Selenic.Com/"" rel=""nofollow"">Mercurial</a> has <a href=""https://BitBucket.Org/"" rel=""nofollow"">BitBucket</a></li>
<li><a href=""http://Darcs.Net/"" rel=""nofollow"">darcs</a> has <a href=""https://Patch-Tag.Com/"" rel=""nofollow"">Patch-Tag</a></li>
</ul>
"
"<p>I am wondering why some behaviour using git occurs:</p>

<p>I forked a project on github to my own project on github.  I then cloned my project to my computer.  Some changes occured to the original project, so I told github to commit them using its fork queue.  I do git pull on my computer to get these changes.</p>

<p>Now some more changes came to the original project but this time I added a remote branch to the original project on my computer.  When I do a git fetch on it and then a git merge to my local branch I get a conflict.</p>

<p>I can't see why it would do this as I am almost up to date and just need the last few commits applied?  Can git not tell that I already have the first set of commits, because I got them indirectly via my own github project fork?</p>
","2988","","<p>The GitHub Fork Queue is fundamentally broken and under no circumstances should it ever be used. The Fork Queue uses <code>git cherry-pick</code> to cherry-pick individual commits, it <em>does not</em> merge the branches in question. Cherry-picking is pretty much <em>always</em> the wrong thing to do; and in fact large parts of the Git community (including Linus Torvalds) are strictly against it. (When Linus was still running the Git project, he vehemently opposed adding cherry-pick support to Git and to this day he still refuses to merge any branches that contain cherry-picked commits.)</p>

<p>You should <em>always</em> prefer merging over cherry-picking.</p>
"
"<p>Every once in a while I'm confronted with displaying a list of available languages, and each and every time I ask my self:</p>

<p>Is it better to display the language in:</p>

<ul>
<li>the currently selected language</li>
<li>English</li>
<li>in the language according to the button/list item</li>
</ul>

<p>Examples:</p>

<blockquote>
  <ul>
  <li>English</li>
  <li>German</li>
  <li>French</li>
  </ul>
</blockquote>

<p>or </p>

<blockquote>
  <ul>
  <li>English</li>
  <li>Deutsch</li>
  <li>Français</li>
  </ul>
</blockquote>

<p>Is there any convention on which one should be used, is more polite or better in any other way? Are there other options?</p>
","2988","","<p>The standard (in both senses of the word, i.e. what is actually used in the real world, and what the IETF/W3C/ISO says) is to use ISO 639-1 Alpha-2 language codes. Maybe augmented with either the full name of the language in English, the language itself, a romanic transliteration of the name in the language itself or any combination thereof.</p>

<p>So, to keep with your example:</p>

<ul>
<li><strong>[de]</strong> <em>German</em> - Deutsch</li>
<li><strong>[en]</strong> <em>English</em></li>
<li><strong>[fr]</strong> <em>French</em> - Français</li>
<li><strong>[ja]</strong> <em>Japanese</em> - 日本語 (Nihongo)</li>
</ul>
"
"<p>As far as I know there is Terracotta and Maglev. Are there any others?</p>
","2988","","<p>Since you mentioned <a href=""http://MagLev.GemStone.Com/"" rel=""nofollow"">MagLev</a>, there's obviously also <a href=""http://GemStone.Com/products/gemstone/"" rel=""nofollow"">GemStone/S</a> on top of which MagLev is built, and <a href=""http://GemStone.Com/products/gemfire/"" rel=""nofollow"">GemFire</a>, their JVM/.NET/C++ product.</p>
"
"<p>I need to translate some python and java routines into pseudo code for my master thesis but have trouble coming up with a syntax/style that is:</p>

<ul>
<li>consistent</li>
<li>easy to understand</li>
<li>not too verbose </li>
<li>not too close to natural language </li>
<li>not too close to some concrete programming language. </li>
</ul>

<p>How do you write pseudo code? Are there any standard recommendations?</p>
","2988","","<p>I suggest you take a look at the <a href=""http://ProjectFortress.Sun.Com/"" rel=""nofollow"">Fortress Programming Language</a>.</p>

<p>This is an <em>actual</em> programming language, and <em>not</em> pseudocode, but it was designed to be as close to executable pseudocode as possible. In particular, for designing the syntax, they read and analyzed <em>hundreds</em> of CS and math papers, courses, books and journals to find common usage patterns for pseudocode and other computational/mathematical notations.</p>

<p>You can leverage all that research by just looking at Fortress source code and abstracting out the things you don't need, since your target audience is human, whereas Fortress's is a compiler.</p>

<p>Here is an <em>actual</em> example of running Fortress code from the <a href=""http://WWW.NAS.NASA.Gov/Resources/Software/npb.html"" rel=""nofollow"">NAS (NASA Advanced Supercomputing) Conjugate Gradient Parallel Benchmark</a>. For a fun experience, compare the <em>specification</em> of the benchmark with the <em>implementation</em> in Fortress and notice how there is almost a 1:1 correspondence. Also compare the implementation in a couple of other languages, like C or Fortran, and notice how they have absolutely nothing to do with the specification (and are also often an order of magnitude longer than the spec).</p>

<p>I must stress: this is not pseudocode, this is actual working Fortress code!<img src=""http://ProjectFortress.Sun.Com/Projects/Community/raw-attachment/wiki/FortressQuestions/NAS-CG.png"" alt=""Fortress Code Example"" title=""Fortress Code Example""></p>
"
"<p>I never understood this.</p>
","2988","","<p>For more than you ever want to know about CSV: <a href=""http://RfC-Editor.Org/rfc/rfc4180.txt"" rel=""nofollow"">RfC4180 - Common Format and MIME Type for Comma-Separated Values (CSV) Files</a>.</p>
"
"<p>I found that IMAPv4 has a shortcoming: It forces users to download whole body (text/html + attachments). How to write and propose a RFC to address the issue? Please kindly share if you had experience of previously writing technical documents, proposals, especially RFCs. Thank you in advance.</p>
","2988","","<p>There's actually an RFC for that: <a href=""http://tools.ietf.org/html/rfc2223"">RFC 2223 - Instructions to RFC Authors</a>.</p>
"
"<p>I want a function that keeps local state in Ruby. Each time I call the function I want to return a result that depends both on a calling argument and on the function's stored state. Here's a simple example:</p>

<pre><code>def inc_mult(factor)
  @state ||= 0   # initialize the state the first time.
  @state += 1    # adjust the internal state.
  factor * @state
end
</code></pre>

<p>Note that the state is initialized the first time, but subsequent calls access stored state. This is good, except that <code>@state</code> leaks into the surrounding context, which I don't want.</p>

<p><strong>What is the most elegant way of rewriting this so that <code>@state</code> doesn't leak?</strong></p>

<p>(Note: My actual example is much more
   complicated, and initializing the
   state is expensive.)</p>
","2988","","<blockquote>
  <p>I want a <strong>function</strong> that keeps local state in Ruby.</p>
</blockquote>

<p>That word ""function"" should immediately raise a big fat red flashing warning sign that you are using the wrong programming language. If you want functions, you should use a functional programming language, not an object-oriented one. In a functional programming language, functions usually close over their lexical environment, which makes what you are trying to do absolutely trivial:</p>

<pre><code>var state;
function incMult(factor) {
    if (state === undefined) {
        state = 0;
    }
    state += 1;
    return factor * state;
}
print(incMult(2)); // =&gt; 2
print(incMult(2)); // =&gt; 4
print(incMult(2)); // =&gt; 6
</code></pre>

<p>This particular example is in ECMAScript, but it looks more or less the same in <em>any</em> functional programming language.</p>

<p>[Note: I'm aware that it's not a very good example, because ECMAScript is actually also an object-oriented language and because it has broken scope semantics that atually mean that <code>state</code> leaks in this case, too. In a language with proper scope semantics (and in a couple of years, ECMAScript will be one of them), this'll work as intended. I used ECMAScript mainly for its familiar syntax, not as an example of a good functional language.]</p>

<p>This is the way that state is encapsulated in functional languages since, well, since there are functional languages, all the way back to lambda calculus.</p>

<p>However, in the 1960s some clever people noticed that this was a very common pattern, and they decided that this pattern was <em>so</em> common that it deserved its own language feature. And thus, the <em>object</em> was born.</p>

<p>So, in an object-oriented language, instead of using functional closures to encapsulate state, you would use objects. As you may have noticed, methods in Ruby don't close over their lexical environment, unlike functions in functional programming languages. And this is precisely the reason: because encapsulation of state is achieved via other means.</p>

<p>So, in Ruby you would use an object like this:</p>

<pre><code>inc_mult = Object.new
def inc_mult.call(factor)
  @state ||= 0
  @state += 1
  factor * @state
end
p inc_mult.(2) # =&gt; 2
p inc_mult.(2) # =&gt; 4
p inc_mult.(2) # =&gt; 6
</code></pre>

<p>[Sidenote: This 1:1 correspondence is what functional programmers are talking about when they say ""objects are just a poor man's closures"". Of course, object-oriented programmers usually counter with ""closures are just a poor man's objects"". And the funny thing is, both of them are right and neither of them realize it.]</p>

<p>Now, for completeness' sake I want to point out that while methods don't close over their lexical environment, there is one construct in Ruby, which <em>does</em>: blocks. (Interestingly enough, blocks aren't objects.) And, since you can define methods using blocks, you can also define methods which are closures:</p>

<pre><code>foo = Object.new
state = nil
foo.define_singleton_method :inc_mult do |factor|
  state ||= 0
  state += 1
  factor * state
end
p foo.inc_mult(2) # =&gt; 2
p foo.inc_mult(2) # =&gt; 4
p foo.inc_mult(2) # =&gt; 6
</code></pre>
"
"<p>I have been reading quite a bit recently about TDD and such and I'm not quite sold on it just yet.. I make a lot of small hobby projects(just me) and I'm concerned if trying to do TDD is overkill for such a thing. Though I have seen small open source projects with like 3 developers that do TDD. (though I have seen a few one-person projects that also do TDD)</p>

<p>So is TDD always a good thing to do or at what threshold does it make sense to use? </p>
","2988","","<p>From my personal experience I can say the following:</p>

<ol>
<li>Every single time I started one of my personal little hobby projects, I vowed to develop it using TDD.</li>
<li>Every single time I didn't.</li>
<li>Every single time I regretted it.</li>
</ol>
"
"<p>Many years ago when I was at uni they said to put a capital i (I) in front of interfaces.  Is this still a convention because I see many interfaces that do not follow this.</p>
","2988","","<p>This sort of coding style is called <em>Hungarian Notation</em>, because it was invented by Charles Simonyi at Microsoft, who happens to be Hungarian. The purpose of Hungarian Notation is to encode semantic information that cannot be expressed inside the type system into identifier names.</p>

<p>However, Java's type system is perfectly capable of distinguishing between interfaces (just try to <code>extend</code> one with a class), abstract classes (just try to instantiate one) and classes (just try to <code>implement</code> one), and so are most IDEs. So, using Hungarian Notation in this way is completely useless.</p>

<p>It has never been a convention as far as I know, and it certainly isn't now. At least in the Java community. (There are some Java <em>projects</em> that use it, though. It's also sometimes used in C++, but there it makes sense, because there is no such thing as an interface in C++, so you have to have a way to mark them. It is also used on the CLI, where it makes absolutely no sense for the same reason as in Java.)</p>
"
"<p>on my new computer, I setup git and my putty.exe and ssh key etc. just fine.</p>

<p>So I do a:</p>

<pre><code>git pull origin
</code></pre>

<p>and then at the command prompt, I am asking for a password.</p>

<p>I have no idea what password it wants, and then it also asks for my server's password after a few failed attempts at the first password.</p>

<p>it asks for:</p>

<pre><code>blahblah@serveradmin.com password:
</code></pre>

<p>What is going on?</p>

<p>(my git rep is hosted on a shared unix isp)</p>

<p><strong>I already setup pageant to use my private key, and it gave me a popup to enter my passphrase.  This is how it works on my old computer, and then when I open git-bash and do a 'git pull origin' it works fine without asking me anything.</strong></p>

<p><strong>Update II</strong></p>

<p>So let me summarize what is happending here:</p>

<p>I have the exact same setup at my office computer (windows7) (desktop), and it works fine w/o asking me any questions.  All I do b4 using git is run a .bat file that loads up pageant.exe:</p>

<pre><code>C:\putty\pageant.exe ""E:\code\pg_pk.ppk""
</code></pre>

<p>Then doing a <strong>git pull origin</strong> works fine, doesn't ask me for any password.</p>

<p>I had this on my laptop also, and it worked just like my office computer UNTIL I installed windows 7 on it.  Now it asks me for a password even though pageant.exe is running (I can see it in my taskbar, and the key is loaded).</p>

<p>So today I grabbed the .bat file and the entire /putty folder and put it on my laptop, still doesn't work, it is asking me for a password when I type: <code>git pull origin</code></p>

<p>(I am running the same version of git on both computers)</p>

<p>Really confused, what could it be?</p>
","2988","","<p>It isn't clear from your question whether or not you set up Git to actually <em>use</em> PuTTY. What is the content of your <code>GIT_SSH</code> environment variable?</p>

<p>It should be set to the full path to <code>plink.exe</code>. Even better yet: if you also use TortoiseSVN or TortoiseHg, set <code>GIT_SSH</code> to <em>their</em> <code>TortoisePlink.exe</code>. <code>TortoisePlink</code> has been modified to not read from the standard input, but instead pop up a dialog window, if something goes wrong. Git redirects standard input, so that you <em>cannot</em> actually type anything into <code>plink</code>, if, for example, your server's IP address changes and <code>plink</code> asks you to type <code>yes</code> to confirm it, that won't work. (You'll have to invoke <code>plink</code> or <code>putty</code> manually, then say <code>yes</code> and they will save it in the registry.) <code>TortoisePlink</code> will instead pop up a <code>Yes</code>/<code>No</code> dialog box.</p>
"
"<p>Yes, I have read many materials related to operating system. And I am still reading. But it seems all of them are describing the process and thread in a ""abstract"" way, which makes a lot of high level elabration on their behavior and logic orgnization. <strong>I am wondering what are they <em>physically</em>?</strong> In my opinion, they are just some in-memory ""data structures"" which are maintained and used by the kernel codes to facilitate the execution of program. For example, operating system use <em>some process data structure (PCB)</em> to describe the aspects of the process assigned for a certain program, such as its priority, its address space and so on.  Is this all right?  Sorry if my question is too naive cause I am such a newbie. Any replies would be deeply appreciated... :D</p>
","2988","","<p>One of the reasons why it is pretty much impossible to describe threads and processes in a non-abstract way is that they <em>are</em> abstractions.</p>

<p>Their concrete implementations differ <em>tremendously</em>.</p>

<p>Compare for example an Erlang Process and a Windows Process: an Erlang Process is very lightweight, often less than 400 Bytes. You can start 10 million processes on a not very recent laptop without any problems. They start up <em>very</em> quickly, they die <em>very</em> quickly and you are expected to be able to use them for very short tasks. Every Erlang Process has its own Garbage Collector associated with it. Erlang Processes can never share memory, ever.</p>

<p>Windows Processes are very heavy, sometimes hundreds of MiBytes. You can start maybe a couple of thousand of them on a beefy server, if you are lucky. They start up and die pretty slowly. Windows Processes are the units of Applications such as IDEs or Text Editors or Word Processors, so they are usually expected to live quite a long time (at least several minutes). They have their own Address Space, but no Garbage Collector. Windows Processes can share memory, although by default they don't.</p>

<p>Threads are a similar matter: an NPTL Linux Thread on x86 can be as small as 4 KiByte and with some tricks you can start 800000+ on a 32 Bit x86 machine. The machine will certainly be useable with thousands, maybe tens of thousands of threads. A .NET CLR Thread has a minimum size of about 1 MiByte, which means that just 4000 of those will eat up your entire address space on a 32 Bit machine. So, while 4000 NPTL Linux Threads is generally not a problem, you can't even <em>start</em> 4000 .NET CLR Threads because you will run out of memory before that.</p>

<p>OS Processes and OS Threads are also implemented very differently between different Operating Systems. The main two approaches are: the kernel knows only about processes. Threads are implemented by a Userspace Library, without any knowledge of the kernel at all. In this case, there are again two approaches: 1:1 (every Thread maps to one Kernel Process) or m:n (m Threads map to n Processes, where usually m > n and often n == #CPUs). This was the early approach taken on many Operating Systems after Threads were invented. However, it is usually deemed inefficient and has been replaced on almost all systems by the second approach: Threads are implemented (at least partially) in the kernel, so that the kernel now knows about two distinct entities, Threads and Processes.</p>

<p>One Operating System that goes a third route, is Linux. In Linux, Threads are neither implemented in Userspace nor in the Kernel. Instead, the Kernel provides an abstraction of <em>both</em> a Thread and a Process (and indeed a couple of more things), called a Task. A Task is a Kernel Scheduled Entity, that carries with it a set of flags that determine which resources it shares with its siblings and which ones are private.</p>

<p>Depending on how you set those flags, you get either a Thread (share pretty much everything) or a Process (share all system resources like the system clock, the filesystem namespace, the networking namespace, the user ID namespace, the process ID namespace, but <em>do not share</em> the Address Space). But you can also get some other pretty interesting things, too. You can trivially get BSD-style jails (basically the same flags as a Process, but don't share the filesystem or the networking namespace). Or you can get what other OSs call a Virtualization Container or Zone (like a jail, but don't share the UID and PID namespaces and system clock). Since a couple of years ago via a technology called KVM (Kernel Virtual Machine) you can even get a full-blown Virtual Machine (share nothing, not even the processor's Page Tables). [The cool thing about this is that you get to reuse the highly-tuned mature Task Scheduler in the kernel for all of these things. One of the things the Xen Virtual Machine has often criticized for, was the poor performance of its scheduler. The KVM developers have a much superior scheduler than Xen, and the best thing is they didn't even have to write a single line of code for it!]</p>

<p>So, on Linux, the performance of Threads and Processes is much closer than on Windows and many other systems, because on Linux, they are actually the same thing. Which means that the usage patterns are very different: on Windows, you typically decide between using a Thread and a Process based on their weight: can I afford a Process or should I use a Thread, even though I actually don't want to share state? On Linux (and usually Unix in general), you decide based on their semantics: do I actually want to share state or not?</p>

<p>One reason <em>why</em> Processes tend to be lighter on Unix than on Windows, is different usage: on Unix, Processes are the basic unit of both concurrency and functionality. If you want to use concurrency, you use multiple Processes. If your application can be broken down into multiple independent pieces, you use multiple Processes. Every Process does exactly one thing and <em>only</em> that one thing. Even a simple one-line shell script often involves dozens or hundreds of Processes. Applications usually consist of many, often short-lived Processes.</p>

<p>On Windows, Threads are the basic units of concurrency and COM components or .NET objects are the basic units of functionality. Applications usually consist of a single long-running Process.</p>

<p>Again, they are used for very different purposes and have very different design goals. It's not that one or the other is better or worse, it's just that they are <em>so</em> different that the common characteristics can only be described very abstractly.</p>

<p>Pretty much the only few things you can say about Threads and Processes are that:</p>

<ul>
<li>Threads belong to Processes</li>
<li>Threads are lighter than Processes</li>
<li>Threads share most state with each other</li>
<li>Processes share significantly less state than Threads (in particular, they generally share no memory, unless specifically requested)</li>
</ul>
"
"<p>As I retrieve data from a database table an array is populated.  Some of the fields are defined as decimal &amp; money fields and within the array they are represented as BigDecimal.</p>

<p>I use these array values to populate a CSV file, but the problem is that all BigDecimal values are by default represented in Scientific format (which is the default behaviour of the BigDecimal to_s method).  I can show the values by using to_s('F'), but how can I override the default?</p>
","2988","","<p>This is built on @Farrel's answer, but without polluting the method namespace with a useless <code>old_xyz</code> method. Also, why not use default arguments directly?</p>

<pre><code>class BigDecimal
  old_to_s = instance_method :to_s

  define_method :to_s do |param='F'|
    old_to_s.bind(self).(param)
  end
end
</code></pre>

<p>In Ruby 1.8, this gets slightly uglier:</p>

<pre><code>class BigDecimal
  old_to_s = instance_method :to_s

  define_method :to_s do |param|
    old_to_s.bind(self).call(param || 'F')
  end
end
</code></pre>

<p>Or, if you don't like the warning you get with the above code:</p>

<pre><code>class BigDecimal
  old_to_s = instance_method :to_s

  define_method :to_s do |*param|
    old_to_s.bind(self).call(param.first || 'F')
  end
end
</code></pre>
"
"<p>Despite reading ""<a href=""http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols"">Understanding Ruby Symbols</a>"", I'm still confused by the representation of the data in memory when it comes to using symbols.  If a symbol, two of them contained in different objects, exist in the same memory location, then how is it that they contain <em>different</em> values?  I'd have expected the same memory location to contain the same value.  As a quote from the link:</p>

<blockquote>
  <p>Unlike strings, symbols of the same name are initialized and exist in memory only once during a session of ruby</p>
</blockquote>

<p>I just don't understand how it manages to differentiate the values contained in the same memory location.</p>

<hr>

<p><strong>EDIT</strong></p>

<p>So let's consider the example:</p>

<pre><code>patient1 = { :ruby =&gt; ""red"" }
patient2 = { :ruby =&gt; ""programming"" }

patient1.each_key {|key| puts key.object_id.to_s}
3918094
patient2.each_key {|key| puts key.object_id.to_s}
3918094
</code></pre>

<p><code>patient1</code> and <code>patient2</code> are both hashes, that's fine.  <code>:ruby</code> however is a symbol.  If we were to output the following:</p>

<pre><code>patient1.each_key {|key| puts key.to_s}
</code></pre>

<p>Then what will be output? <code>""red""</code>, or <code>""programming""</code>?</p>

<hr>

<p><strong>FURTHER EDIT</strong></p>

<p>I'm still really quite confused.  I'm thinking a symbol is a <em>pointer</em> to a value.  Let's forget hashes for a second.  The questions I have are; can you assign a value to a symbol? Is a symbol just a pointer to a variable with a value in it?  If symbols are global, does that mean a symbol always points to one thing?</p>
","2988","","<blockquote>
<pre><code>patient1 = { :ruby =&gt; ""red"" }
patient2 = { :ruby =&gt; ""programming"" }

patient1.each_key {|key| puts key.object_id.to_s}
3918094
patient2.each_key {|key| puts key.object_id.to_s}
3918094
</code></pre>
  
  <p><code>patient1</code> and <code>patient2</code> are both hashes, that's fine. <code>:ruby</code> however is a symbol. If we were to output the following:</p>

<pre><code>patient1.each_key {|key| puts key.to_s}
</code></pre>
  
  <p>Then what will be output? ""red"", or ""programming""?</p>
</blockquote>

<p>Neither, of course. The output will be <code>ruby</code>. Which, BTW, you could have found out in less time than it took you to type the question, by simply typing it into IRB instead.</p>

<p>Why <em>would</em> it be <code>red</code> or <code>programming</code>? Symbols <em>always</em> evaluate to themselves. The value of the symbol <code>:ruby</code> is the symbol <code>:ruby</code> itself and the string representation of the symbol <code>:ruby</code> is the string value <code>""ruby""</code>.</p>

<p>[BTW: <code>puts</code> always converts its arguments to strings, anyway. There's no need to call <code>to_s</code> on it.]</p>
"
"<p>I was wondering if open-source implementations, such as Mono, are theoretically going to become legally forced into only implementing old versions of C# which the community promise covers.</p>

<p>Thanks,</p>

<p>Mack</p>
","2988","","<p>The <em>only</em> thing that is covered by the Community Promise is the ECMA specification. This mainly includes: a subset of C# 2.0 and a subset of CLI 2.0. That's it.</p>

<p>AFAIK, the ECMA has changed their IP Licensing requirements, so that all future standards must be covered by royalty-free patent licenses, but I'm not sure about that.</p>

<p>Beyond that, your guess is as good as anybody else's.</p>
"
"<p>I seem to not be able to do this (which I used to be able to do in Python). Let me explain ..</p>

<p>Suppose I have the following method in Ruby:</p>

<pre><code>def someMethod(arg1=1,arg2=2,arg3=3)
...
...
...
end
</code></pre>

<p>Now to call this method I could do</p>

<pre><code>someMethod(2,3,4)
someMethod(2,3)
someMethod(2)
</code></pre>

<p>and the arguments are taken by their respective order.. but what if I want to give arg2 at some point in my programming and want the default values for arg1 and arg3?</p>

<p>I tried writing someMethod(arg2=4) but this doesn't seem to work in Ruby 1.9.  What it does is it still thinks that arg1 is 4. In python I could at least get away with this, but in ruby I am not sure. Does anyone have any elegant ideas?</p>
","2988","","<p>Ruby doesn't have keyword argument passing. (Not yet, anyway, it is one of the things that might make it into Ruby 2.0. However, there are no guarantees, and work on Ruby 2.0 hasn't even <em>started</em> yet, so there's no telling when or even if we will see keyword arguments in Ruby.)</p>

<p>What <em>really</em> happens, is this: you are passing the expression <code>arg2 = 4</code> as the only argument in the argument list. Ruby is a strict language with pass-by-value, which means that all arguments are fully evaluated before they are passed to the method. In this case, <code>arg2 = 4</code> is an assignment expression (in Ruby, <em>everything</em> is an expression (i.e. everything returns a value), there are no statements). You are assigning the immediate literal <code>Fixnum</code> value <code>4</code> to the local variable <code>arg2</code>. Assignment expressions <em>always</em> return the value of their right-hand side, in this case <code>4</code>.</p>

<p>So, you are passing the value <code>4</code> as the only argument into your method, which means that it gets bound to the first mandatory parameter if there is one (in this case, there isn't), otherwise to the first optional parameter (in this case <code>arg1</code>).</p>

<p>The usual way to deal with situations like this is to use a <code>Hash</code> instead, like this:</p>

<pre><code>some_method({:arg2 =&gt; 4})
</code></pre>

<p>Because this pattern is used so often, there is special syntactic support: if the <em>last</em> argument to a method is a <code>Hash</code>, you can leave off the curly braces:</p>

<pre><code>some_method(:arg2 =&gt; 4)
</code></pre>

<p>In Ruby 1.9, there is another syntactical convenience form: because <code>Hash</code>es are so often used with <code>Symbol</code> keys, there is an alternative <code>Hash</code> literal syntax for that:</p>

<pre><code>some_method({arg2: 4})
</code></pre>

<p>Combine them both, and you <em>almost</em> have keyword arguments:</p>

<pre><code>some_method(arg2: 4)
</code></pre>

<p>(In fact, both of these shortcuts were specifically added to provide an easy migration path towards possible future versions of Ruby with keyword arguments.)</p>

<p>MacRuby actually supports Smalltalk-style multipart message selectors for interoperability with Objective-C. Note, however, that Smalltalk-style multipart message selectors are <em>not</em> keyword arguments, they behave very differently. Also, of course, this extension is specific to MacRuby and not part of the Ruby Specification and not portable to MRI, YARV, JRuby, XRuby, IronRuby, MagLev, Rubinius, tinyrb, RubyGoLightly, BlueRuby, SmallRuby or any other Ruby Implementation.</p>
"
"<p>Would someone be able to break down the Ruby specifics of what each of these statements consist of in as far as methods, parameters, block interpretations etc. This is very common to see in Rails code and I'm trying to understand how the Ruby interpreter reads this code:</p>

<pre><code>respond_to do |format|
  format.xml { render :layout =&gt; false }
end
</code></pre>

<p>In as far as I understand, respond_to is a method that's taking one parameter to it, a block. So I'm guessing it's written something like:</p>

<pre><code>def respond_to(&amp;block)
    block.call
end
</code></pre>

<p>.. or something similar?</p>

<p>in the block itself, format is the object respond_to passes into the block and xml is what the request is set to, at which point it calls a block in itself if the request is asking for XML type data and goes ahead and invokes a render method, passing it a keyword based argument, :layout => false?</p>

<p>Would someone clean up my understanding of how they above works. This type of code is all over Rails and I'd like to understand it before using it more.</p>
","2988","","<p>This is a typical Implementation Pattern for Internal DSLs in Ruby: you yield an object to the block which then itself accepts new method calls and blocks and thus guides the interface. (Actually, it's pretty common in Java, too, where it is used to get meaningful code completion for Internal DSLs.)</p>

<p>Here's an example:</p>

<pre><code>def respond_to
  yield FormatProxy.new(@responders ||= {})
end

class FormatProxy
  def initialize(responders)
    @responders = responders
  end

  def method_missing(msg, *args, &amp;block)
    @responders[msg] = [args, block]
  end
end
</code></pre>

<p>Now you have a mapping of formats to executable pieces of code stored in <code>@responders</code> and you can call it later and in a different place, whenever, whereever and however often you want:</p>

<pre><code>respond_to do |f|
  f.myformat { puts 'My cool format' }
  f.myotherformat { puts 'The other' }
end

@responders[:myformat].last.call # =&gt; My cool format
@responders[:myotherformat].last.call # =&gt; The other
</code></pre>

<p>As I hinted at above, if instead of a dumb proxy object that simply uses <code>method_missing</code>, you were to use one which had the most important methods (<code>xml</code>, <code>html</code>, <code>json</code>, <code>rss</code>, <code>atom</code> and so on) predefined, a sufficiently intelligent IDE could even give you meaningful code completion.</p>

<p>Note: I have absolutely no idea whether this is how it is implemented in Rails, but however it is implemented, it is probably some variation of this.</p>
"
"<p>I am looking to generate ruby modules from existing C libraries.</p>

<p>In the past, I have used Swig, and found that it was a painful task.  I just want to check if there's something better for Ruby out there, and any gotchas.</p>

<p>Just need to evaluate choices, so even a simple url pointing me to the site will do!</p>
","2988","","<p>In the past, the go-to method for binding Ruby to C (or C to Ruby, it doesn't really matter) was writing an MRI C extension by hand. <a href=""http://SWIG.Org/"" rel=""nofollow"">SWIG</a> basically automates that, but in a really crappy way, so that writing it by hand is usually easier, faster, more performant.</p>

<p>However, there is a significant problem with MRI C extensions: they are <em>MRI</em> C extensions. This was fine, when MRI was the only Ruby Implementation, but now we have three production-ready Ruby Implementations with another two on the way in the next couple of weeks and yet another two or three to be released later this year.</p>

<p>Of course, there is another problem with MRI C extensions: you have to write them in C.</p>

<p>A better solution is the <a href=""http://Ruby-Doc.Org/stdlib/libdoc/dl/rdoc/"" rel=""nofollow"">DL library in the Ruby standard library</a>, which allows you to bind to a dynamic library (<code>.dll</code>, <code>.so</code>, <code>.dylib</code>) at runtime, in pure Ruby. Unfortunately, it's pretty badly documented and because of that, it is not very well supported (or completely unsupported) by several Ruby Implementations: how are you going to provide a compatible implementation if there is no documentation of what ""compatible implementation"" means?</p>

<p><a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a> introduced the <a href=""https://GitHub.Com/FFI/FFI/"" rel=""nofollow"">Rubinius Foreign Function Interface (FFI)</a>, which is <a href=""https://Wiki.GitHub.Com/FFI/FFI/Basic-Usage/"" rel=""nofollow"">much easier to use than DL</a>, much easier to <em>implement</em> for Ruby VM writers and <a href=""https://Wiki.GitHub.Com/FFI/FFI/"" rel=""nofollow"">fully documented</a>, <a href=""https://Wiki.GitHub.Com/FFI/FFI/Proposal-for-Standard-10-API/"" rel=""nofollow"">specified</a> and <a href=""https://GitHub.Com/FFI/FFI/tree/master/spec/"" rel=""nofollow"">tested</a>. <a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a> immediately copied the API, Wayne Meissner wrote <a href=""http://RubyGems.Org/gems/ffi/"" rel=""nofollow"">two C extensions for MRI and YARV</a>, <a href=""http://Code.MACournoyer.Com/tinyrb/"" rel=""nofollow"">tinyrb</a> supports it, <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a>, <a href=""http://MacRuby.Org/"" rel=""nofollow"">MacRuby</a> and <a href=""http://MagLev.GemStone.Com/"" rel=""nofollow"">MagLev</a> will pretty soon.</p>

<p>So, if you use FFI, you won't have to write a single line of C, <em>and</em> your library will automatically work on MRI, YARV, JRuby and Rubinius and in the future also on IronRuby, MacRuby and MagLev.</p>
"
"<p>I'm working on a system than has to be pretty scalable from the beginning. I've started looking at / playing around with asynchronous/evented approaches to writing serverside code. I've played around with both ruby's EventMachine and node.js.</p>

<p>EventMachine is cool, but doesn't have asynchronous file I/O, which I need. The interface is kind of strange, too. </p>

<p>Node.js is awesome, but it's... uhh.. it's javascript.</p>

<p>Can the greater Stack Overflow community help me out by listing other languages that have strong asynchronous support? To qualify, the language would need to support both closures and have libraries for asynchronous file io, http, etc. It would be nice to have something like node.js that was written in a stronger language than javascript. </p>

<p>Lisp? Python has twisted, right? </p>
","2988","","<p>I would recommend that you take another look at <a href=""http://NodeJS.Org/"" rel=""nofollow"">node.js</a>. One of the biggest problems with using libraries to do event-based programming in an object-oriented programming language (rather than using an event-based programming language in the first place), is that usually all the <em>other</em> existing libraries are <em>not</em> event-based and it is really awkward to mix event-based and synchronous I/O. In fact, it is pretty much impossible, or more precisely, it <em>is</em> possible but destroys all the benefits of using event-based I/O in the first place. (Note that pretty much any third-party library you use (and the libraries that <em>they</em> use, and so forth), including the standard and core libraries of the language itself, must event-based, to actually reap the benefits. Otherwise, you'll spend the most time of your project writing asynchronous wrappers around existing libraries.)</p>

<p>Now, if using event-based libraries is such a bad thing, then why do I recommend node.js? Simple: ECMAScript doesn't <em>have</em> any synchronous I/O libraries (because of the simple fact that it doesn't have any I/O libraries <em>at all</em>), so the mixing problem simply doesn't arise. (Actually, it has <em>some</em> I/O libraries, like <code>XmlHttpRequest</code> or Web Sockets, but guess what: those are <em>already</em> all event-based.)</p>

<p>node.js implements all I/O libraries itself, all event-based, without backwards-compatibility or legacy requirements.</p>

<p>Otherwise, <em>every</em> language or platform has some event-based or asynchronous I/O libraries: Ruby has <a href=""http://RubyEventMachine.Com/"" rel=""nofollow"">EventMachine</a> and <a href=""http://Rev.RubyForge.Org/"" rel=""nofollow"">Rev</a>, .NET has <a href=""http://MSDN.Microsoft.Com/devlabs/ee794896"" rel=""nofollow"">Rx</a>, the JVM has <a href=""http://Java.Sun.Com/j2se/1.5.0/docs/guide/nio/"" rel=""nofollow"">NIO</a>, Unix systems have kqueue/epoll, C has <a href=""http://Software.Schmorp.De/pkg/libev.html"" rel=""nofollow"">libev</a> and <a href=""http://Software.Schmorp.De/pkg/libeio.html"" rel=""nofollow"">libeio</a> (on top of which node.js and Rev are built), Perl has <a href=""http://Software.Schmorp.De/pkg/AnyEvent.html"" rel=""nofollow"">AnyEvent</a> (built on top of libev by the same author) and so on.</p>
"
"<p>I can easily ascend the class hierarchy in Ruby:</p>

<pre><code>String.ancestors     # [String, Enumerable, Comparable, Object, Kernel]
Enumerable.ancestors # [Enumerable]
Comparable.ancestors # [Comparable]
Object.ancestors     # [Object, Kernel]
Kernel.ancestors     # [Kernel]
</code></pre>

<p>Is there any way to descend the hierarchy as well? I'd like to do this</p>

<pre><code>Animal.descendants      # [Dog, Cat, Human, ...]
Dog.descendants         # [Labrador, GreatDane, Airedale, ...]
Enumerable.descendants  # [String, Array, ...]
</code></pre>

<p>but there doesn't seem to be a <code>descendants</code> method.</p>

<p>(This question comes up because I want to find all the models in a Rails application that descend from a base class and list them; I have a controller that can work with any such model and I'd like to be able to add new models without having to modify the controller.)</p>
","2988","","<p><a href=""http://Ruby-Lang.Org/"">Ruby</a> 1.9 (or 1.8.7) with nifty chained iterators:</p>

<pre><code>#!/usr/bin/env ruby1.9

class Class
  def descendants
    ObjectSpace.each_object(::Class).select {|klass| klass &lt; self }
  end
end
</code></pre>

<p>Ruby pre-1.8.7:</p>

<pre><code>#!/usr/bin/env ruby

class Class
  def descendants
    result = []
    ObjectSpace.each_object(::Class) {|klass| result &lt;&lt; klass if klass &lt; self }
    result
  end
end
</code></pre>

<p>Use it like so:</p>

<pre><code>#!/usr/bin/env ruby

p Animal.descendants
</code></pre>
"
"<p>I've been working as a developer for the past 4 years, with the 4 years previous to that studying software development in college. In my 4 years in the industry I've done some work in VB6 (which was a joke), but most of it has been in C#/ASP.NET. During this time, I've moved from an ""object-aware"" procedural paradigm to an object-oriented paradigm. </p>

<p>Lately I've been curious about other programming paradigms out there, so I thought I'd ask other developers their opinions on the similarities &amp; differences between these paradigms, specifically to OOP? In OOP, I find that there's a strong focus on the relationships and logical interactions between concepts. What are the mind frames you have to be in for the other paradigms?</p>

<p>Thanks</p>

<p>Dave</p>
","2988","","<p>By far the best explanations of programming paradigms are found in Peter van Roy's works. Especially in the book <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/book""><em>Concepts, Techniques, and Models of Computer Programming</em> by Peter Van Roy and Seif Haridi</a>. (<a href=""http://CodePoetics.Com/wiki/"">Here's the companion wiki.</a>) CTM uses the <a href=""http://WWW.Mozart-Oz.Org/"">multi-paradigm Distributed Oz programming language</a> to introduce all the major programming paradigms.</p>

<p>Peter van Roy also made <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/paradigms"">this amazing poster that shows the 34 major paradigms and their relations and positions on various axis</a>. The poster is basically an incredibly compressed version of CTM. A more thorough explanation of that poster is contained in the article <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/VanRoyChapter"">Programming Paradigms for Dummies: What Every Programmer Should Know</a> which appeared as a chapter in the book <em>New Computational Paradigms for Computer Music</em>, edited by G. Assayag and A. Gerzso.</p>

<p><em>Another</em> great book that demonstrates several major programming paradigms is <a href=""http://MITPress.MIT.Edu/sicp/full-text/book/book.html""><em>Structure and Interpretation of Computer Programs</em> by Harold Abelson and Gerald Jay Sussman</a>. This book was the basis of MIT's CS101 for several decades. <a href=""http://SWISS.CSAIL.MIT.Edu/classes/6.001/abelson-sussman-lectures/"">A course taught by Abelson and Sussman themselves was recorded at a corporate training for Hewlett-Packard in 1986</a>.</p>

<p>The main difference between CTM and SICP is that CTM demonstrates most major paradigms using a language that supports them (mostly Distributed Oz, but also some others). SICP OTOH demonstrates them by <em>implementing</em> them in a language that does <em>not</em> support them natively (a subset of Scheme). Seeing Object-Orientation implemented in a dozen or so lines of code is friggin' awesome.</p>

<p>You can find <a href=""http://OCW.MIT.Edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/CourseHome/"">video recordings and course materials from the Spring 2005 course on MIT's OpenCourseWare website</a>. <a href=""http://ADUni.Org/courses/sicp/"">Another recording of the course from MIT's short-lived ArsDigita University project</a>. SICP has also been taught at other universities, in fact <a href=""http://WebCast.Berkeley.Edu/course_details_new.php?seriesid=2008-D-26263"">it is being taught at Berkley right now</a>.</p>

<p>On a personal note, my own experience has been that <em>really</em> understanding a programming paradigm is only possible</p>

<ul>
<li>one paradigm at a time and</li>
<li>in languages which <em>force</em> you into the paradigm</li>
</ul>

<p>Ideally, you would use a language which takes the paradigm to the extreme. In multi-paradigm languages, it is much too easy to ""cheat"" and fall back on a paradigm that you are more comfortable with. And using a paradigm as a library is only really possible in languages like Scheme which are specifically designed for this kind of programming. Learning lazy functional programming in Java, for example, is not a good idea, although there are libraries for that.</p>

<p>Here's some of my favorites:</p>

<ul>
<li><strong>object-orientation in general</strong>: <a href=""http://SelfLanguage.Org/"">Self</a>
<ul>
<li><strong>prototype-based object-orientation</strong>: Self</li>
<li><strong>class-based object-orientation</strong>: <a href=""http://NewspeakLanguage.Org/"">Newspeak</a>
<ul>
<li><strong>static class-based object-orientation</strong>: <a href=""http://Eiffel.Com/"">Eiffel</a></li>
</ul></li>
<li><strong>multiple dispatch based OO</strong>: <a href=""http://WWW.OpenDylan.Org/"">Dylan</a></li>
<li><strong>functional + object-orientation</strong>: <a href=""http://Scala-Lang.Org/"">Scala</a></li>
</ul></li>
<li><strong>functional programming</strong>: <a href=""http://Haskell.Org/"">Haskell</a>
<ul>
<li><strong>pure functional programming</strong>: Haskell
<ul>
<li><strong>lazy pure functional programming</strong>: Haskell</li>
</ul></li>
<li><strong>static functional programming</strong>: Haskell</li>
<li><strong>dynamic functional programming</strong>: <a href=""http://Clojure.Org/"">Clojure</a></li>
</ul></li>
<li><strong>imperative programming</strong>: <a href=""http://Lua.Org/"">Lua</a></li>
<li><strong>concurrent programming</strong>: Clojure
<ul>
<li><strong>message-passing concurrent programming</strong>: <a href=""http://Erlang.Org/"">Erlang</a></li>
</ul></li>
<li><strong>metaprogramming</strong>: <a href=""http://Schemers.Org/"">Scheme</a></li>
<li><strong>language-oriented programming</strong>: <a href=""http://IntentSoft.Com/"">Intentional Domain Workbench</a></li>
</ul>
"
"<p>Is there some way to run 2 threads at the same time?</p>

<p>I want to have my app run its current function and then bring up another thread running another function, that can change variables in the first thread.</p>
","2988","","<p>If you want to run two threads at the same time, the entire execution stack has to be capable of doing that. Let's start at the top:</p>

<ol>
<li>Ruby itself is capable of running two threads at the same time, no problem there. However, Ruby is just a programming language, i.e. just a bunch of rules. In order to <em>run</em> your program, you need a Ruby <em>implementation</em>. Unfortunately, many popular Ruby implementations are <em>not</em> capable of running multiple threads at the same time, including MRI, YARV and Rubinius. In fact, the <em>only</em> production-ready Ruby implementation which <em>can</em> run threads simultaneously is JRuby. (IronRuby too, but that is technically not yet production-ready although the final 1.0 release is probably only days away.)</li>
<li>But JRuby (and IronRuby) don't actually implement threads themselves, they just use the underlying platform's threads. I.e. JRuby maps Ruby threads to JVM threads and IronRuby maps them to CLI threads. So, the underlying platform has to be able to run threads in parallel, too.</li>
<li>Again: both the JVM and the CLI are in principle capable of running threads in parallel, but the JVM and the CLI are just specifications, they are just pieces of paper. In order to run your code, you need an implementation of those specifications, and not all of them <em>do</em> support truly concurrent threads.</li>
<li>Even <em>if</em> your platform implementation supports truly concurrent threads, they might themselves delegate their threading implementation to the underlying OS, just like JRuby delegates to the JVM. .NET, Mono, HotSpot and JRockit for example (which are the most popular implementations of the CLI and the JVM respectively) use native OS threads for their platform threads. So, obviously, the OS has to be able to run threads in parallel. And again: not all of them are.</li>
<li>And, of course, all the parallelism in the OS doesn't help if you only have one CPU. If you want two threads to run at the same time, you need either two CPUs, two cores or two simultaneous hardware threads.</li>
</ol>
"
"<p>I need to generate formatted text packing slips for a Ruby on Rails project I'm working on. I'm considering using Ruport or just formatting it myself in a string and outputting it to text. The only challenge is justifying all of the output appropriately. It needs to look something like this, always aligned properly. Any recommendations?</p>

<pre><code>Company Name
(T) 1-800-123-1234
(E) info@company.com

BILL TO: CUSTOMER NAME                   SHIP TO: CUSTOMER NAME
123 Some Street                          321 Some Street
Address etc.                             Address etc.

Date: 2010-03-12 16:30
Payment Number: 1234-123456

LN  NAME             SKU           DESCRIPTION             QTY    PRICE      TOTAL
----------------------------------------------------------------------------------
001 Product name     GUDB 012 HGQ  product description     2      52.99     105.98
         - Color
</code></pre>
","2988","","<p>EDIT: I didn't see the comment about needing to generate text files until after I wrote this. I'm going to leave it up for a bit before deleting it, in case it turns out to be useful.</p>

<hr>

<p><a href=""http://RubyReports.Org/"" rel=""nofollow"">Ruport</a> may be overkill. <a href=""http://Prawn.MajesticSeaCreature.Com/"" rel=""nofollow"">Prawn</a> is a PDF writer library by the same author that is very lightweight and easy to use. (Much easier than the old <a href=""http://Ruby-PDF.RubyForge.Org/"" rel=""nofollow"">PDF::Writer</a> library that Ruport uses. In fact, Gregory Brown wrote Prawn with the specific goal to replace to PDF::Writer in Ruport.)</p>

<p>I even remember that someone create a lightweight templating engine for Prawn, but unfortunately I don't remember who that was or what it's called. But the Prawn mailinglist and IRC channel are extremely friendly and helpful, they probably know.</p>

<p>Since you are using Rails, you might also be interested in the <a href=""http://CrackLabs.Com/prawnto/"" rel=""nofollow"">Prawnto Rails plugin</a>, which registers Prawn as a view engine in Rails, and allows you to render your PDFs the exact same way you render your HTML. There's also a <a href=""http://RailsCasts.Com/episodes/153-pdfs-with-prawn/"" rel=""nofollow"">Railscast which covers Prawn and Prawnto</a> and a <a href=""http://ASCIICasts.Com/episodes/153-pdfs-with-prawn/"" rel=""nofollow"">corresponding ASCIIcast</a>.</p>
"
"<p>I know a little bit of regex, but not mutch. What is the best way to get just the number out of the following html. (I want to have 32 returned). the values of width,row span, and size are all different in this horrible html page. Any help?</p>

<pre><code>&lt;td width=14 rowspan=2 align=right&gt;&lt;font size=2 face=""helvetica""&gt;32&lt;/font&gt;&lt;/td&gt;
</code></pre>
","2988","","<p>Please, do yourself a favor:</p>

<pre><code>#!/usr/bin/env ruby
require 'nokogiri'

require 'test/unit'
class TestExtraction &lt; Test::Unit::TestCase
  def test_that_it_extracts_the_number_correctly
    doc = Nokogiri::HTML('&lt;td width=14 rowspan=2 align=right&gt;&lt;font size=2 face=""helvetica""&gt;32&lt;/font&gt;&lt;/td&gt;')
    assert_equal [32], (doc / '//td/font').map {|el| el.text.to_i }
  end
end
</code></pre>
"
"<p>Given the Java code below, what's the closest you could represent these two <code>static final</code> variables in a Ruby class? And, is it possible in Ruby to distinguish between <code>private static</code> and <code>public static</code> variables as there is in Java?</p>

<pre><code>public class DeviceController
{
  ...
  private static final Device myPrivateDevice = Device.getDevice(""mydevice"");
  public static final Device myPublicDevice = Device.getDevice(""mydevice"");
  ...
  public static void main(String args[])
  {
   ...
  }
}
</code></pre>
","2988","","<p>There really is no equivalent construct in Ruby.</p>

<p>However, it looks like you are making one of the classic porting mistakes: you have a <em>solution</em> in language A and try to translate that into language B, when what you really should do is figure out the <em>problem</em> and then figure out how to solve it in language B.</p>

<p>I can't really be sure what the problem is you are trying to solve from that small codesnippet, but here is <em>one</em> possible idea for how to implement it in Ruby:</p>

<pre><code>class DeviceController
  class &lt;&lt; self
    def my_public_device;  @my_public_device  ||= Device['mydevice'] end

    private

    def my_private_device; @my_private_device ||= Device['mydevice'] end
  end
end
</code></pre>

<p>Here's another:</p>

<pre><code>class DeviceController
  @my_public_device  ||= Device['mydevice']
  @my_private_device ||= Device['mydevice']

  class &lt;&lt; self
    attr_reader :my_public_device, :my_private_device
    private :my_private_device
  end
end
</code></pre>

<p>(The difference is that the first example is lazy, it only initializes the instance variable when the corresponding attribute reader is first called. The second one initializes them as soon as the class body is executed, even if they are never needed, just like the Java version does.)</p>

<p>Let's go over some of the concepts here.</p>

<p>In Ruby, as in every other ""proper"" (for various definitions of ""proper"") object-oriented language, state (instance variables, fields, properties, slots, attributes, whatever you want to call them) is <em>always</em> private. There is <em>no way</em> to access them from the outside. The only way to communicate with an object is by sending it messages.</p>

<p>[Note: Whenever I write something like ""no way"", ""always"", ""the only way"" etc., it actually no means ""no way, except for reflection"". In this particular case, there is <code>Object#instance_variable_set</code>, for example.]</p>

<p>In other words: in Ruby, variables are always private, the only way to access them is via a getter and/or setter method, or, as they are called in Ruby, an attribute reader and/or writer.</p>

<p>Now, I keep writing about <em>instance variables</em>, but in the Java example we have <em>static fields</em>, i.e. <em>class</em> variables. Well, in Ruby, unlike Java, classes are objects, too. They are instances of the <code>Class</code> class and so, just like any other object, they can have instance variables. So, in Ruby, the equivalent to a class variable is really just a standard instance variable which belongs to an object which just happens to be a class.</p>

<p>(There are also class hierarchy variables, denoted with a double at sign <code>@@sigil</code>. Those are really weird, and you should probably just ignore them. Class hierarchy variables are shared across the entire class hierarchy, i.e. the class they belong to, all its subclasses and their subclasses and their subclasses ... and also all instances of all of those classes. Actually, they are more like global variables than class variables. They should really be called <code>$$var</code> instead of <code>@@var</code>, since they are much more closely related to global variables than instance variables. They are not entirely useless but only very rarely useful.)</p>

<p>So, we have covered the ""field"" part (Java field == Ruby instance variable), we have covered the ""public"" and ""private"" parts (in Ruby, instance variables are always private, if you want to make them public, use a public getter/setter method) and we have covered the ""static"" part (Java static field == Ruby class instance variable). What about the ""final"" part?</p>

<p>In Java, ""final"" is just a funny way of spelling ""const"", which the designers avoided because the <code>const</code> keyword in languages like C and C++ is subtly broken and they didn't want to confuse people. Ruby <em>does</em> have constants (denoted by starting with a capital letter). Unfortunately, they are not really constant, because trying to modify them, while generating a warning, actually works. So, they are more of a convention than a compiler-enforced rule. However, the more important restriction of constants is that they are always public.</p>

<p>So, constants are almost perfect: they cannot be modified (well, they <em>shouldn't</em> be modified), i.e. they are <code>final</code>, they belong to a class (or module), i.e. they are <code>static</code>. But they are always <code>public</code>, so unfortunately they cannot be used to model <code>private static final</code> fields.</p>

<p>And this is exactly the point where thinking about problems instead of solutions comes in. What is it that you want? You want state that </p>

<ol>
<li>belongs to a class, </li>
<li>can only be read not written, </li>
<li>is only initialized once and </li>
<li>can be either private or public.</li>
</ol>

<p>You can achieve all of that, but in a completely different way than in Java:</p>

<ol>
<li>class instance variable</li>
<li>don't provide a setter method, only a getter</li>
<li>use Ruby's <code>||=</code> compound assignment to assign only once</li>
<li>getter method</li>
</ol>

<p>The only thing you have to worry about, is that you don't assign to <code>@my_public_device</code> anywhere, or better yet, don't access it at all. Always use the getter method.</p>

<p>Yes, this <em>is</em> a hole in the implementation. Ruby is often called a ""grown-up's language"" or a ""consenting adults language"", which means that instead of having the compiler enforce certain things, you just put them in the documentation and simply trust that your fellow developers have learned that touching other people's privates is rude ...</p>

<hr>

<p>A totally <em>different</em> approach to privacy is the one used in functional languages: use closures. Closures are blocks of code that close over their lexical environment, even after that lexical environment has gone out of scope. This method of implementing private state is very popular in Scheme, but has recently also been popularized by Douglas Crockford et al. for JavaScript. Here's an example in Ruby:</p>

<pre><code>class DeviceController
  class &lt;&lt; self
    my_public_device, my_private_device = Device['mydevice'], Device['mydevice']

    define_method :my_public_device  do my_public_device  end
    define_method :my_private_device do my_private_device end

    private :my_private_device
  end # &lt;- here the variables fall out of scope and can never be accessed again
end
</code></pre>

<p>Note the subtle but important difference to the versions at the top of my answer: the lack of the <code>@</code> sigil. Here, we are creating <em>local</em> variables, not <em>instance</em> variables. As soon as the class body ends, those local variables fall out of scope and can never be accessed ever again. <em>Only</em> the two blocks which define the two getter methods still have access to them, because they close over the class body. Now, they are <em>really</em> private <em>and</em> they are <code>final</code>, because the only thing in the entire program which still has access to them is a pure <em>getter</em> method.</p>

<p>This is probably not idiomatic Ruby, but for anyone with a Lisp or JavaScript background it should be clear enough. It is also very elegant.</p>
"
"<p>I've got rather distinct question - I'd like to run Smalltalk on a production server without using graphical interface. Is this possible with VW or Pharo (maybe even Squeak)?</p>

<p>I've got a VPS hosting without X and would like to have few websites running on Smalltalk, while developing them locally with full-blown Smalltalk env, including GUI.</p>
","2988","","<p>Don't forget that there are also Smalltalk environments that are specifically designed for headless operation on a server, e.g.:</p>

<ul>
<li><a href=""http://Smalltalk.GNU.Org/"">GNU Smalltalk</a> (Unix scripting style, Free Software)</li>
<li><a href=""http://GemStone.Com/products/gemstone/"">GemStone/S</a> (App Server style, Proprietary but gratis for small installations)</li>
</ul>

<p>One of the specific design goals of Pharo is to divorce the development environment from the core image, for easier deployment, however I don't know how far this effort has come nor whether it also includes removing the GUI entirely.</p>

<p>I'm not sure about VisualWorks, but I wouldn't be surprised if they had a headless mode.</p>

<p>A little bit further out in left field, some people consider <a href=""http://Ruby-Lang.Org/"">Ruby</a> to be ""Smalltalk for the Unix server"". Although, of course Ruby is a much different and much less beautiful language than Smalltalk.</p>

<p>Have you tried asking on the <a href=""http://Seaside.ST/"">Seaside</a> <a href=""http://Seaside.ST/community/mailinglist/"">mailing lists</a>? They must deal with this stuff all the time. Avi Bryant's company Smallthought Systems, for example, runs both <a href=""http://DabbleDB.Com/"">DabbleDB</a> and <a href=""http://trendly.com/"">trendly</a> off Squeak.</p>
"
"<p>I want to calculate room noise level with the computer's microphone. I record noise as an audio file, but how can I calculate the noise dB level?</p>

<p>I don't know how to start!</p>
","2988","","<p>You can't. dB is a <em>relative</em> unit, IOW it is a unit for comparing <em>two</em> measurements against each other. You can only say that measurement A is x dB louder than measurement B, but in your case you only have <em>one</em> measurement. Therefore, it simply isn't possible to calculate the dB level.</p>
"
"<p>I have a bunch of data in (what i think is) a tcl array. Basically it's in the form of <code>{a {b c} d {e f} g}</code>. It's only nested one deep, but isn't always nested, that is to say, <code>a</code> may just be <code>a</code> or it may be <code>{aa bb}</code> or possibly <code>{}</code>, but never <code>{aa {bb cc}}</code>. I want to extract this array so I can use it in ruby.</p>

<p>My first thought was, ""No problem, I'll write a little grammar to parse this."" I installed the treetop gem, and wrote up a parser, which seemed to work just fine. I started having problems when I tried to extract an array from the parsed tree. I would like to better understand the cause of the problems and what I am doing wrong.</p>

<p>Here is my parser code so far: (tcl_array.treetop)</p>

<pre><code>grammar TCLArray
  rule array
    ""{"" [\s]* ""}"" {
      def content
        []
      end
    }
    /
    ""{"" [\s]* array_element_list [\s]* ""}"" {
      def content
        array_element_list.content
      end
    }
  end

  rule array_element_list
    array_element {
      def content
        [array_element.content]
      end
    }
    /
    array_element [\s]+ array_element_list {
      def content
        [array_element.content] + array_element_list.content
      end
    }
  end

  rule array_element
    [^{}\s]+ {
      def content
        return text_value
      end
    }
    /
    array {
      def content
        array.content
      end
    }
  end
end
</code></pre>

<p>Invoking <code>p.parse(""{a}"").content</code> yields <code>tcl_array.rb:99:in 'content': undefined local variable or method 'array_element'</code></p>

<p>The first term in array_element_list (array_element) says that array_element is an undefined local variable, but accessor methods are supposed to be automatically defined according to the treetop documentation.</p>

<p>Earlier, I tried a solution that was based off of a grammar with fewer but slightly more complicated rules:</p>

<pre><code>grammar TCLArray
  rule array
    ""{"" ([\s]* array_element ([\s]+ array_element)* )? [\s]* ""}""
  end

  rule array_element
    [^{}\s]+ / array
  end
end
</code></pre>

<p>But with this grammar I had issues where the parser seemed to be creating several different expressions for the array rule even though it did not use any alternative expressions (/). The result was that I couldn't figure out how to access the various bits of the array rule to return them as a ruby array.</p>
","2988","","<p>Maybe a parser generator is overkill in this case. Here's a simple hand-rolled recursive-descent parser based on <a href=""http://RubyQuiz.Com/quiz155.html"" rel=""nofollow"">this JSON parser by James Edward Gray II</a>:</p>

<pre><code>#!/usr/bin/env ruby
# based on James Edward Gray II's solution to the Parsing JSON
#   Ruby Quiz #155: &lt;http://RubyQuiz.Com/quiz155.html&gt;

require 'strscan'

class TclArrayParser &lt; StringScanner
  def parse
    parse_value
  ensure
    eos? or error ""Unexpected data: '#{rest}'""
  end

  private

  def parse_value
    trim_space
    parse_string or parse_array
  ensure
    trim_space
  end

  def parse_array
    return nil unless scan(/\{\s*/)
    array = []
    while contents = parse_value
      array &lt;&lt; contents
    end
    scan(/\}/) or error('Unclosed array')
    array
  end

  def parse_string
    scan(/[^{}[:space:]]+/)
  end

  def trim_space
    skip(/\s*/)
  end

  def error(message)
    pos = if eos? then 'end of input' else ""position #{self.pos}"" end
    raise ParseError, ""#{message} at #{pos}""
  end

  class ParseError &lt; StandardError; end
end
</code></pre>

<p>Here's a testsuite:</p>

<pre><code>require 'test/unit'
class TestTclArrayParser &lt; Test::Unit::TestCase
  def test_that_an_empty_string_parses_to_nil
    assert_nil TclArrayParser.new('').parse
  end
  def test_that_a_whitespace_string_parses_to_nil
    assert_nil TclArrayParser.new(""  \t  \n  "").parse
  end
  def test_that_an_empty_array_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new('{}').parse
  end
  def test_that_an_empty_array_with_whitespace_at_the_front_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new(' {}').parse
  end
  def test_that_an_empty_array_with_whitespace_at_the_end_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new('{} ').parse
  end
  def test_that_an_empty_array_with_whitespace_inside_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new('{ }').parse
  end
  def test_that_an_empty_array_surrounded_by_whitespace_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new(' {} ').parse
  end
  def test_that_an_empty_array_with_whitespace_at_the_front_and_inside_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new(' { }').parse
  end
  def test_that_an_empty_array_with_whitespace_at_the_end_and_inside_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new('{ } ').parse
  end
  def test_that_an_empty_array_surrounded_by_whitespace_with_whitespace_inside_parses_to_an_empty_array
    assert_equal [], TclArrayParser.new(' { } ').parse
  end
  def test_that_a_sole_element_parses
    assert_equal 'a', TclArrayParser.new('a').parse
  end
  def test_that_an_array_with_one_element_parses
    assert_equal ['a'], TclArrayParser.new('{a}').parse
  end
  def test_that_a_nested_array_parses
    assert_equal [[]], TclArrayParser.new('{{}}').parse
  end
  def test_that_a_nested_array_with_one_element_parses
    assert_equal [['a']], TclArrayParser.new('{{a}}').parse
  end
  def test_that_whitespace_is_ignored
    assert_equal [], TclArrayParser.new('     {     }     ').parse
  end
  def test_that_complex_arrays_parse_correctly
    assert_equal ['a', %w[b c], 'd', %w[e f], 'g'], TclArrayParser.new('{a {b c} d {e f} g}').parse
    assert_equal [%w[aa bb], %w[b c], 'd', %w[e f], 'g'], TclArrayParser.new('{{aa bb} {b c} d {e f} g}').parse
    assert_equal [[], %w[b c], 'd', %w[e f], 'g'], TclArrayParser.new('{{} {b c} d {e f} g}').parse
    assert_equal [[], ['b', 'c'], 'd', ['e', 'f'], 'g'], TclArrayParser.new(""\n{\n{\n}\n{\nb\nc\n}\nd\n{\ne\nf\n}\ng\n}\n"").parse
  end
end
</code></pre>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/622324/getting-argument-names-in-ruby-reflection"">Getting Argument Names In Ruby Reflection</a>  </p>
</blockquote>



<p>Is it possible to get the parameter names of a method ?</p>

<p>Example with:</p>

<pre><code>def method_called(arg1, arg2)
  puts my_method.inspect
end
</code></pre>

<p>I would like to know what method (my_method) should I call to get the following output:</p>

<pre><code>[""arg1"", ""arg2""]
</code></pre>
","2988","","<p>In Ruby 1.9.2, you can trivially get the parameter list of any <code>Proc</code> (and thus of course also of any <code>Method</code> or <code>UnboundMethod</code>) with <code>Proc#parameters</code>:</p>

<pre><code>def foo(a, b=nil, *c, d, &amp;e); end
p method(:foo).parameters
  # =&gt; [[:req, :a], [:opt, :b], [:rest, :c], [:req, :d], [:block, :e]]
</code></pre>

<p>The format is an array of pairs of symbols: type (required, optional, rest, block) and name.</p>

<p>For the format you want, try</p>

<pre><code>method(:foo).parameters.map(&amp;:last).map(&amp;:to_s)
  # =&gt; ['a', 'b', 'c', 'd', 'e']
</code></pre>
"
"<p>A colleague and I are having a bit of an argument over multiple inheritance.  I'm saying it's not supported and he's saying it is.  So, I thought that I'd ask the brainy bunch on the net.</p>
","2988","","<p>Actually, it depends on your definition of inheritance:</p>

<ul>
<li>you can inherit <em>implementation</em> (members, i.e. data and behavior) from a <em>single</em> class, but </li>
<li>you can inherit <em>interfaces</em> from <em>multiple</em>, well, interfaces.</li>
</ul>

<p>This is not what is usually meant by the term ""inheritance"", but it is also not entirely unreasonable to define it this way.</p>
"
"<p>In Java <a href=""http://en.wikipedia.org/wiki/Inversion_of_Control"">IoC</a> / <a href=""http://en.wikipedia.org/wiki/Dependency_Injection"">DI</a> is a very common practice which is extensively used in web applications, nearly all available frameworks and Java EE. On the other hand, there are also lots of big Python web applications, but beside of Zope (which I've heard should be really horrible to code) IoC doesn't seem to be very common in the Python world. (Please name some examples if you think that I'm wrong).</p>

<p>There are of course several clones of popular Java IoC frameworks available for Python, <a href=""http://springpython.webfactional.com/"">springpython</a> for example. But none of them seems to get used practically. At least, I've never stumpled upon a <a href=""http://www.djangoproject.com/"">Django</a> or <a href=""http://www.sqlalchemy.org/"">sqlalchemy</a>+<code>&lt;insert your favorite wsgi toolkit here&gt;</code> based web application which uses something like that.</p>

<p>In my opinion IoC has reasonable advantages and would make it easy to replace the django-default-user-model for example, but extensive usage of interface classes and IoC in Python looks a bit odd and not »pythonic«. But maybe someone has a better explanation, why IoC isn't widely used in Python.</p>
","2988","","<p>I don't actually think that DI/IoC are <em>that</em> uncommon in Python. What <em>is</em> uncommon, however, are DI/IoC <em>frameworks/containers</em>.</p>

<p>Think about it: what does a DI container do? It allows you to </p>

<ol>
<li>wire together independent components into a complete application ...</li>
<li>... at runtime.</li>
</ol>

<p>We have names for ""wiring together"" and ""at runtime"":</p>

<ol>
<li>scripting</li>
<li>dynamic</li>
</ol>

<p>So, a DI container is nothing but an interpreter for a dynamic scripting language. Actually, let me rephrase that: a typical Java/.NET DI container is nothing but a crappy interpreter for a really bad dynamic scripting language with butt-ugly, often XML-based, syntax.</p>

<p>When you program in Python, why would you want to use an ugly, bad scripting language when you have a beautiful, brilliant scripting language at your disposal? Actually, that's a more general question: when you program in pretty much any language, why would you want to use an ugly, bad scripting language when you have Jython and IronPython at your disposal?</p>

<p>So, to recap: the <em>practice</em> of DI/IoC is just as important in Python as it is in Java, for exactly the same reasons. The <em>implementation</em> of DI/IoC however, is built into the language and often so lightweight that it completely vanishes. (Here's an analogy: in assembly, a subroutine call is a pretty major deal - you have to save your local variables and registers to memory, save your return address somewhere, change the instruction pointer to the subroutine you are calling, arrange for it to somehow jump back into your subroutine when it is finished, put the arguments somewhere where the callee can find them, and so on. IOW: in assembly, ""subroutine call"" is a Design Pattern, and before there were languages like Fortran which had subroutine calls built in, people were building their own ""subroutine frameworks"". Would you say that subroutine calls are ""uncommon"" in Python, just because you don't use subroutine frameworks?)</p>

<p>BTW: for an example of what it looks like to take DI to its logical conclusion, take a look at <a href=""http://GBracha.BlogSpot.Com/"">Gilad Bracha</a>'s <a href=""http://NewspeakLanguage.Org/"">Newspeak Programming Language</a> and his writings on the subject:</p>

<ul>
<li><a href=""http://GBracha.BlogSpot.Com/2007/06/constructors-considered-harmful.html"">Constructors Considered Harmful</a></li>
<li><a href=""http://GBracha.BlogSpot.Com/2007/12/some-months-ago-i-wrote-couple-of-posts.html"">Lethal Injection</a></li>
<li><a href=""http://GBracha.BlogSpot.Com/2009/06/ban-on-imports.html"">A Ban on Imports</a> (<a href=""http://GBracha.BlogSpot.Com/2009/07/ban-on-imports-continued.html"">continued</a>)</li>
</ul>
"
"<p>I'm now learning Ruby because I saw it's a very powerfull language, but now I want to know what mobile ports of Ruby we have and for what devices.</p>

<p><em>PS: I have a HTC S711, HP iPAQ Hx2, Nokia E61, Nokia N95, Palm T|X, Palm Z22, HP Jornada 720..., it's better if I can use it on these platforms, but I'm open to buy other devices, as I'm a mobile addict.</em></p>
","2988","","<p>There's a couple of possibilities:</p>

<ul>
<li><a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a> can run pretty much anywhere where there is a JVM, which means pretty much anywhere except iPhone. (Apparently, there's even JVM implementations for Windows Mobile.) Note that you need a <a href=""https://GitHub.Com/JRuby/JRuby-CDC/"" rel=""nofollow"">special stripped-down version</a> for JME-CDC (Java Platform Micro Edition - Connected Device Configuration), which hasn't been updated in a while. However, if you ask nicely, someone will probably at least help you build your own (it basically involves deleting stuff from the main version, recompile, test, delete more, recompile, test, ...).</li>
<li>JRuby can also run on Android. In fact, there's three versions available: JRuby is part of the <a href=""http://Android-Scripting.GoogleCode.Com/"" rel=""nofollow"">Android Scripting Environment (ASE)</a>, and then there's JRuby lead developer Charles Oliver ""Headius"" Nutter's <a href=""http://Ruboto.Com/"" rel=""nofollow"">Ruboto</a>. The very latest addition is <a href=""http://JRuby-for-Android.GoogleCode.Com/"" rel=""nofollow"">JRuby for Android</a> by Pascal Chatterjee.</li>
<li>MRI was once ported both to <a href=""http://Ruby-Symbian.RubyForge.Org/"" rel=""nofollow"">Symbian S60 (Nokia)</a> and <a href=""http://uema2.s8.xrea.com/ruby-mswince/"" rel=""nofollow"">Windows CE</a>, although I have no idea how hard that is to get working, how current these ports are, whether they are integrated into the official sourcetree or are maintained seperately (if at all) nor if it also applies to YARV. There <em>is</em> a <a href=""https://GitHub.Com/Ruby/Ruby/tree/trunk/symbian/"" rel=""nofollow"">Symbian subdirectory in the YARV sourcecode</a> which was last updated just 5 days ago, and a <a href=""https://GitHub.Com/Ruby/Ruby/tree/ruby_1_8/wince/"" rel=""nofollow"">Windows CE subdirectory in the MRI sourcecode</a> which was updated 6 months ago, though.</li>
<li>Apparently, <a href=""https://Wiki.GitHub.Com/Takuma104/iPhone-RubyCocoa/"" rel=""nofollow"">MRI also runs on the iPhone</a>.</li>
<li><a href=""http://Android-Ruby.GoogleCode.Com/"" rel=""nofollow"">YARV was recently ported to Android</a>.</li>
<li>It looks pretty likely that <a href=""http://MacRuby.Org/"" rel=""nofollow"">MacRuby</a> will, in the future, run on the iPhone. The MacRuby developers all either work for Apple or have signed NDAs and are therefore not allowed to say anything, but when one of the lead developers was asked what the new Ahead-of-Time compiler in MacRuby 0.5 would be useful for, he oracled something like ""running Ruby on resource-constrained ARM-powered pocket-sized mobile internet devices with security restrictions regarding interpreted code"" or something similarly cryptic.</li>
<li>The same applies to <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a>: since IronRuby runs on Silverlight and Silverlight is Microsoft's new phone platform (or everything-platform, really), I wouldn't be surprised to see IronRuby on at least the new Windows Phone 7. [EDIT: Actually, it already does, IronRuby on Windows Mobile 7 was demonstrated at MIX10.]</li>
<li>In the meantime, the <a href=""http://RhoMobile.Com/products/rhodes/"" rel=""nofollow"">Rhodes mobile framework</a> by <a href=""http://RhoMobile.Com/"" rel=""nofollow"">Rhomobile</a> allows you to develop cross-platform (iPhone, Windows Mobile, RIM (Blackberry), Symbian (Nokia) and Android) native mobile applications using HTML as the UI. The way it basically works, is that you write your UI in HTML which gets displayed by the native browser control that is built into the phone, and the Rhodes framework then supplies the necessary CSS and JavaScript to make it look and feel ""native"". However, it's <em>not</em> a web application: the webserver that serves the HTML <em>also</em> runs on the phone, as does the Ruby interpreter in which you run your models and controllers. (See <a href=""http://StackOverflow.Com/questions/2081657/is-there-a-common-language-for-cell-phone-software-development/2081856#2081856"">this answer I gave to another question for more details</a>.) Even if you don't want to use their framework, you can still steal <a href=""https://GitHub.Com/Rhomobile/Rhodes/tree/1-5-unstable/platform/"" rel=""nofollow"">their different Ruby interpreters for the different platforms</a>. E.g., they actually use <a href=""https://GitHub.Com/Rhomobile/Rhodes/tree/1-5-unstable/platform/shared/xruby/"" rel=""nofollow"">XRuby</a>, not JRuby for their <a href=""https://GitHub.Com/Rhomobile/Rhodes/blob/1-5-unstable/platform/bb/"" rel=""nofollow"">Blackberry port</a> and <a href=""https://GitHub.Com/Rhomobile/Rhodes/tree/1-5-unstable/platform/shared/ruby/"" rel=""nofollow"">YARV</a> via the Android Native Development Kit for their <a href=""https://GitHub.Com/Rhomobile/Rhodes/blob/1-5-unstable/platform/android/"" rel=""nofollow"">Android port</a>.</li>
</ul>
"
"<p>I'm working on a module that, among other things, will add some generic 'finder' type functionality to the class you mix it into.  The problem: for reasons of convenience and aesthetics, I want to include some functionality <em>outside</em> the class, in the same scope as the class itself.</p>

<p>For example:</p>

<pre><code>class User
  include MyMagicMixin
end

# Should automagically enable:

User.name('Bob')   # Returns first user named Bob
Users.name('Bob')  # Returns ALL users named Bob 
User(5)            # Returns the user with an ID of 5
Users              # Returns all users
</code></pre>

<p>I can do the functionality <em>within</em> these methods, no problem.  And case 1 (<code>User.name('Bob')</code>) is easy.  Cases 2–4, however, require being able to create new classes and methods outside <code>User</code>.  The <code>Module.included</code> method gives me access to the class, but not to its containing scope.  There is no simple ""parent"" type method that I can see on Class nor Module.  (For namespace, I mean, not superclass nor nested modules.)</p>

<p>The best way I can think to do this is with some string parsing on the class's <code>#name</code> to break out its namespace, and then turn the string back into a constant.  But that seems clumsy, and given that this is Ruby, I feel like there should be a more elegant way.</p>

<p>Does anyone have ideas?  Or am I just being too clever for my own good?</p>
","2988","","<p>This is a problem that comes up sometimes on the mailinglists. It's also a problem that comes up in Rails. The solution is, as you already suspected, basically Regexp munging.</p>

<p>However, there is a more fundamental problem: in Ruby, classes do not have a name! A class is just an object like any other. You can assign it to an instance variable, to a local variable, to a global variable, to a constant or even not assign it to anything <em>at all</em>. The <code>Module#name</code> method is basically just a convenience method that works like this: it looks through the list of defined constants until it finds one that points to the receiver. If it finds one, it returns the first one it can find, otherwise it returns <code>nil</code>.</p>

<p>So, there's two failure modes here:</p>

<pre><code>a = Class.new
a.name # =&gt; nil
B = a
B.name # =&gt; ""B""
A = B
A.name # =&gt; ""B""
</code></pre>

<ul>
<li>a class might not have a name at all</li>
<li>a class might have more than one name, but <code>Module#name</code> will only return the first one it finds</li>
</ul>

<p>Now, if someone tries to call <code>As</code> to get a list of <code>A</code>s, they will be pretty surprised to find that that method doesn't exist, but that they can call <code>Bs</code> instead to get the same result.</p>

<p>This <em>does</em> actually happen in reality. In MacRuby, for example <code>String.name</code> returns <code>NSMutableString</code>, <code>Hash.name</code> returns <code>NSMutableDictionary</code> and <code>Object.name</code> returns <code>NSObject</code>. The reason for this is that MacRuby integrates the Ruby runtime and the Objective-C runtime into one, and since the semantics of an Objective-C mutable string are identical to a Ruby string, the entire implementation of Ruby's string class is essentially  a single line: <code>String = NSMutableString</code>. And since MacRuby sits on top of Objective-C, that means that Objective-C starts first, which means that <code>NSMutableString</code> gets inserted into the symbol table first, which means it gets <em>found</em> first by <code>Module#name</code>.</p>
"
"<p>I need to extract the actual phone number form the html listed below, but I'm not really sure how to do it using Nokogiri CSS since there are no html tags around it. When an at_css(.phonetitle) it only parse Phone and not the number.</p>

<pre><code>&lt;div class=""detail""&gt;
    &lt;span class=""address""&gt;Corner of Toorak Road and Chapel Street, South Yarra&lt;/span&gt;&lt;br&gt;
    &lt;span class=""phonetitle""&gt;Phone&lt;/span&gt; 95435 34341
    &lt;br&gt;&lt;br&gt;
&lt;/div&gt;
</code></pre>
","2988","","<p>Nothing a little XPath can't handle:</p>

<pre><code>#!/usr/bin/env ruby
require 'nokogiri'

doc = Nokogiri::HTML(&lt;&lt;-HERE)
  &lt;div class=""detail""&gt;
    &lt;span class=""address""&gt;
      Corner of Toorak Road and Chapel Street, South Yarra
    &lt;/span&gt;&lt;br&gt;
    &lt;span class=""phonetitle""&gt;Phone&lt;/span&gt; 95435 34341
    &lt;br&gt;&lt;br&gt;
  &lt;/div&gt;
HERE

puts doc.search('*[@class=""detail""]/text()').text.strip
# =&gt; 95435 34341
</code></pre>
"
"<p>I'm trying to build a simple interpreted language for learning purposes. I've read countless theory and tutorials on ANTLR and JavaCC, but I can't figure out how to actually make it do something useful.</p>

<p>I learn best by ""taking something apart and putting it back together again"", so, are there any working examples of simple languages implemented with the help of tools such as ANTLR, or similar?</p>

<p>Something like the following might be nice:</p>

<pre><code>x = 1

if x == 1  
     print ""true""
</code></pre>
","2988","","<p><a href=""http://JavaDude.Com/articles/antlr3xtut/"" rel=""nofollow"">Scott ""JavaDude"" Stanchfield's video tutorial series on ANTLR3</a> is pretty good.</p>

<p>And of course, there is StackOverflow, which has tons of ANTLR content. For example:</p>

<blockquote>
  <p><a href=""http://StackOverflow.Com/questions/1931307/antlr-is-there-a-simple-example/1932664#1932664"">ANTLR: Is there a simple example?</a></p>
</blockquote>
"
"<p>I am trying to parse an xml file with hpricot. The xml element that I am trying to get has a dash though and hence the issue that I am facing</p>

<p>xml</p>

<pre><code>&lt;xliff xmlns=""urn:oasis:names:tc:xliff:document:1.1"" version=""1.1""&gt;
  &lt;trans-unit&gt;
    &lt;source&gt;""%0"" can not be found. Please try again.&lt;/source&gt;
    &lt;target&gt;""%0"" can not be found. Please try again.&lt;/target&gt;
  &lt;/trans-unit&gt;
&lt;/xliff&gt;
</code></pre>

<p>rb</p>

<pre><code>  def read_in_xliff(xlf_file_name)
    stream = open(xlf_file_name) {|f| Hpricot(f)}
    (stream/:xliff/:'trans-unit').each do |transunit|
..........
</code></pre>

<p>This does not work because of the dash. If I rename the tag to transunit and  edit the symbol reference accordingly everything seems to be fine. I thought using the symbol between quotes should work but hpricot does not seem to like this. Can anyone think of a workaround?</p>

<p>Thanks in advance</p>
","2988","","<p>It <em>should</em> work, and it <em>does</em> work for me. A more detailed answer would require a more detailed error message than ""Hpricot does not seem to like this"".</p>
"
"<p>I would like to add some debugs for my simple ruby functions and I wrote a function as below,</p>

<pre><code>def debug(&amp;block)
  varname = block.call.to_s
  puts ""#{varname} = #{eval(varname,block)}""
end

debug {:x} #prints x = 5
debug {:y} #prints y = 5
</code></pre>

<p>I understand that eval is evil. So I have two questions. </p>

<ol>
<li>Is there any way to write that debug method without using eval? If NO is there a preferred way to do this?</li>
<li>Is there any way to pass a list of arguments to this method? I would ideally prefer debug {:x, :y. :anynumOfvariables}. I could not quite figure out how to factor that into the debug method (i.e, to take a list of arguments)</li>
</ol>
","2988","","<p>Just use arrays. You can use the <code>Array</code> method to ensure that you will always have an array, even if someone passes in only a single value:</p>

<pre><code>def debug(&amp;block)
  Array(block[]).each do |var| puts ""#{var} = #{eval var.to_s, block}"" end
end

x, y = 3, 5

debug {:x} # =&gt; ""x = 3""
debug {[:x, :y]} # =&gt; ""x = 3"" ""y = 5""
</code></pre>

<p>BTW: passing a block as the binding no longer works in Ruby 1.9. (Despite the fact that the documentation says it <em>does</em> work.) You have to explicitly call <code>Proc#binding</code> to get a <code>Binding</code> object for that <code>Proc</code>:</p>

<pre><code>def debug(&amp;block)
  Array(block.()).flatten.each do |var|
    puts ""#{var} = #{eval var.to_s, block.binding}""
  end
end
</code></pre>

<p>Fortunately, this <em>already</em> works in Ruby 1.8, so you can futureproof your code by including it.</p>

<p>An alternative would be to forgo the block altogether. I mean, you <em>already</em> force the user of the <code>debug</code> to use the unfamiliar idiom of passing arguments in the block instead of in parentheses. Why not force them to just pass the binding instead?</p>

<pre><code>def debug(*vars, bnd)
  vars.each do |var|
    puts ""#{var} = #{eval var.to_s, bnd}""
  end
end

x, y = 3, 5

debug :x, binding # =&gt; ""x = 3""
debug :x, :y, binding # =&gt; ""x = 3"" ""y = 5""
</code></pre>

<p>This has the added flexibility that they can actually pass a <em>different</em> binding than the one at the callsite, e.g. if they want to actually debug a piece of code in a different piece of the application.</p>

<hr>

<p>BTW: here's some fun with Ruby 1.9.2's parameter introspection (<code>Proc#parameters</code>):</p>

<pre><code>def debug(&amp;block)
  block.parameters.map(&amp;:last).each do |var|
    puts ""#{var} = #{eval var.to_s, block.binding}""
  end
end

x, y = 3, 5

debug {|x|} # =&gt; ""x = 3""
debug {|x, y|} # =&gt; ""x = 3"" ""y = 5""
</code></pre>
"
"<p>Should I use ISO 639-1 (2-letter abbreviation) or ISO 639-2 (3 letter abbrv) to store a user's language code? Both are official standards, but which is the de facto standard in the development community? I think ISO 639-1 would be easier to remember, and is probably more popular for that reason, but thats just a guess.</p>

<p>The site I'm building will have a separate site for the US, Brazil, Russia, China, &amp; the UK.</p>

<p><a href=""http://en.wikipedia.org/wiki/ISO_639"">http://en.wikipedia.org/wiki/ISO_639</a></p>
","2988","","<p>ISO 639-1 Alpha-2 are used pretty much universally.</p>

<p>They are used for example in HTTP content negotiation. If you ever wondered how an international website can automatically show you their homepage in your native language, that's how it works. (Although it's sometimes kinda annoying. I, for example, often get shown the default Apache homepage in German, because the webmaster turned on content negotiation, but only put content for English in.)</p>

<p>Most web browsers use them directly in their settings dialog box.</p>

<p>Most operating systems use them in <em>their</em> settings dialog boxes or configuration files.</p>

<p>Wikipedia uses them in their server names for the different language versions.</p>

<p>In other words: if your users aren't native English speakers, they will probably <em>already</em> have encountered them when configuring their software, because otherwise they wouldn't be able to use their computers.</p>

<p>The other members of the ISO 639 family are mostly of interest to linguists. Unless you expect Jesus Christ himself (ISO 639-2 Alpha-3 code <code>arc</code>) to visit your website, or maybe Klingons (<code>tlh</code>), ISO 639-1 has more languages than you ever can hope to support.</p>
"
"<p>Given the language below, how do i find a regular expression for the language</p>

<p>L = {a ^n b ^m | n => 1, m =>1, nm =>3}</p>
","2988","","<p>Write down a set of example words of the language. Get a feel for them. Look for patterns. Look for common prefixes / suffixes / substrings.</p>

<pre><code>abbb
abbbb
abbbbb
aabb
aabbb
aabbbb
aaab
aaabb
aaabbb
aaaab
aaaabb
aaaabbb
</code></pre>

<p>For example: notice that all words start with <code>a</code> and end with <code>b</code>. So, your regular expression looks something like <code>a...b</code>. What does the <code>...</code> part look like?</p>

<pre><code>bb
bbb
bbbb
ab
abb
abbb
aa
aab
aabb
aaa
aaab
aaabb
</code></pre>

<p>This kinda looks like either an <code>a</code> followed by either at least one <code>a</code> or a <code>b</code> possibly followed by zero or more <code>b</code>s. Or simply a series of more than two <code>b</code>s.</p>

<pre><code>a(a+|b)b*|b{2,}
</code></pre>

<p>You could also say it is either a series of at least two <code>a</code>s or a series of at least two <code>b</code>s or a series of <code>a</code>s followed by <code>b</code>s. I'm not going to write down that expression.</p>

<p>This <em>is</em> homework, after all, so I'll leave it to you to desugar this and put it together with the first result. (BTW: all the shortcuts I used <em>are</em> just syntactic sugar and they <em>do not</em> make regular expressions more powerful. I.e. there is a simple syntactic transformation that turns them into standard regular expression.)</p>

<p>[I just hope I'm right and don't make an ass of myself :-)]</p>
"
"<p>We have the git bare repository in unix that has files with same name that differs only in cases.</p>

<p>Example:</p>

<pre><code>GRANT.sql
grant.sql
</code></pre>

<p>When we clone the bare repository from unix in to a windows box, git status detects the file as modified. The working tree is loaded only with grant.sql, but git status compares grant.sql and GRANT.sql and shows the file as modified in the working tree.</p>

<p>I tried using the core.ignorecase false but the result is the same.</p>

<p>Is there any way to fix this issue?</p>
","2988","","<p>Windows is case-insensitive (more precisely, case-preserving). There is simply no possible way for two files to exist whose names only differ in case: two filenames which differ only in case are the same filename. Period.</p>

<p>So, Git is walking the repository, checking out one file after the other, until it hits the first one of the two problem files. Git checks it out, then goes further about its business until it hits the second file. Again, Git checks it out. Since from Windows' point of view the filename is the same as the first one, the first file simply gets overwritten with the second one. Which now makes Git think that the first file was changed to have the same content as the second one.</p>

<p>Note that this has nothing to do with Git: exactly the same would happen if you had a tarball, a zipfile or a Subversion repository.</p>

<p>If you want to do development on multiple different platforms, you have to respect the restrictions of those platforms and you have to confine yourself to the lowest common denominator of all the platforms you support. Windows supports ADS, Linux doesn't. OSX supports resource forks, Windows doesn't. BSD supports case-sensitivity, Windows doesn't. So, you can't use any of those. That's just the way it is.</p>

<p><code>core.ignorecase</code> isn't going to help you here, because that handles exactly the <em>opposite</em> problem.</p>
"
"<p>From a table element, I would like to select all rows that have the class <code>even</code> or the class <code>odd</code>.  </p>

<p>I tried the jQuery syntax:</p>

<pre><code>report.css(""table.data tr[class~=odd even]"").each{|line| parse_line_item(line)}
</code></pre>

<p>but it threw an error, any help is appreciated, thanks.</p>
","2988","","<p>The CSS selector you have there is not even a syntactically valid selector:</p>

<pre><code>[class~=odd even]
</code></pre>

<p>Values that contain whitespace must always be quoted, so the correct way to write this selector would be:</p>

<pre><code>[class~=""odd even""]
</code></pre>

<p>However, this selector actually cannot ever match anything: the <code>[attr~=val]</code> attribute value selector matches ...</p>

<blockquote>
  <p><a href=""http://Dev.W3.Org/csswg/selectors3/#attribute-representation"" rel=""nofollow"">an element with the <code>att</code> attribute whose value is a whitespace-separated list of words, one of which is exactly <code>""val""</code>. If <code>""val""</code> contains whitespace, it will never represent anything (since the words are <em>separated</em> by spaces)</a></p>
</blockquote>

<p>Since the words are separated by whitespace, this means they cannot ever contain whitespace themselves. But the word <em>you</em> are looking for (<code>""odd even""</code>), <em>does</em> contain whitespace, therefore it cannot ever match anything.</p>

<p>Presumably, what you are looking for is an <code>OR</code> combinator, but it doesn't exist. So, what you are looking for cannot be expressed with CSS selectors.</p>

<p>Well, actually, that's not true: it <em>can</em> be expressed with CSS selectors. You can simply use selector groups, which give you set union of the matches, which is equivalent to using an <code>OR</code> combinator:</p>

<pre><code>table.data tr.odd, table.data tr.even
</code></pre>

<p>Remember: CSS is set-based, therefore order doesn't matter. In your case, order <em>does</em> matter, which means that CSS is really the wrong tool for the job:</p>

<pre><code>report.xpath('//table[@class=""data""]//tr[@class=""odd"" or @class=""even""')
</code></pre>

<p>Although I must admit that I am not sure why you don't just use something like this:</p>

<pre><code>report.css('table.data tr')
</code></pre>

<p>After all, isn't selecting all odd and all even rows the same as selecting <em>all</em> rows? I mean, what else have you got in there, irrational rows?</p>
"
"<p>Inspired by <a href=""http://stackoverflow.com/questions/2552363/how-can-i-marshal-a-hash-with-arrays"">http://stackoverflow.com/questions/2552363/how-can-i-marshal-a-hash-with-arrays</a> I wonder what's the reason that <code>Array#&lt;&lt;</code> won't work properly in the following code:</p>

<pre><code>h = Hash.new{Array.new}
#=&gt; {}
h[0]
#=&gt; []
h[0] &lt;&lt; 'a'
#=&gt; [""a""]
h[0]
#=&gt; [] # why?!
h[0] += ['a']
#=&gt; [""a""]
h[0]
#=&gt; [""a""] # as expected
</code></pre>

<p>Does it have to do with the fact that <code>&lt;&lt;</code> changes the array in-place, while <code>Array#+</code> creates a new instance?</p>
","2988","","<p>If you create a <code>Hash</code> using the block form of <code>Hash.new</code>, the block gets executed every time you try to access an element which doesn't actually exist. So, let's just look at what happens:</p>

<pre><code>h = Hash.new { [] }
h[0] &lt;&lt; 'a'
</code></pre>

<p>The first thing that gets evaluated here, is the expression</p>

<pre><code>h[0]
</code></pre>

<p>What happens when it gets evaluated? Well, the block gets run:</p>

<pre><code>[]
</code></pre>

<p>That's not very exciting: the block simply creates an empty array and returns it. It doesn't do anything else. In particular, it doesn't change <code>h</code> in any way: <code>h</code> is still empty.</p>

<p>Next, the message <code>&lt;&lt;</code> with one argument <code>'a'</code> gets sent to the result of <code>h[0]</code> which is the result of the block, which is simply an empty array:</p>

<pre><code>[] &lt;&lt; 'a'
</code></pre>

<p>What does this do? It adds the element <code>'a'</code> to an empty array, but since the array doesn't actually get assigned to any variable, it is immediately garbage collected and goes away.</p>

<p>Now, if you evaluate <code>h[0]</code> again:</p>

<pre><code>h[0] # =&gt; []
</code></pre>

<p><code>h</code> is <em>still</em> empty, since nothing ever got assigned to it, therefore the key <code>0</code> is still non-existent, which means the block gets run <em>again</em>, which means it <em>again</em> returns an empty array (but note that it is a completely new, <em>different</em> empty array now).</p>

<pre><code>h[0] += ['a']
</code></pre>

<p>What happens here? First, the operator assign gets desugared to </p>

<pre><code>h[0] = h[0] + ['a']
</code></pre>

<p>Now, the <code>h[0]</code> on the <em>right</em> side gets evaluated. And what does it return? We already went over this: <code>h[0]</code> doesn't exist, therefore the block gets run, the block returns an empty array. Again, this is a completely new, <em>third</em> empty array now. This empty array gets sent the message <code>+</code> with the argument <code>['a']</code>, which causes it to return yet <em>another</em> new array which is the array <code>['a']</code>. This array then gets assigned to <code>h[0]</code>.</p>

<p>Lastly, at this point:</p>

<pre><code>h[0] # =&gt; ['a']
</code></pre>

<p>Now you have <em>finally</em> actually put something into <code>h[0]</code> so, obviously, you get out what you put in.</p>

<p>So, to answer the question you probably had, why don't you get out what you put in? You <em>didn't</em> put anything in in the first place!</p>

<p>If you actually want to <em>assign</em> to the hash inside the block, you have to, well assign to the hash inside the block:</p>

<pre><code>h = Hash.new {|this_hash, nonexistent_key| this_hash[nonexistent_key] = [] }
h[0] &lt;&lt; 'a'
h[0] # =&gt; ['a']
</code></pre>

<p>It's actually fairly easy to see what is going on in your code example, if you look at the identities of the objects involved. Then you can see that everytime you call <code>h[0]</code>, you get a <em>different</em> array.</p>
"
"<p>I always come across articles which claim that Java is interpreted. I know that Oracle's HotSpot JRE provides just-in-time compilation, however is this the case for a majority of desktop users? For example, if I download Java via: <a href=""http://www.java.com/en/download"" rel=""nofollow"">http://www.java.com/en/download</a>, will this include a JIT Compiler?</p>
","2988","","<p>There is nothing in the JVM specification that mandates any particular execution strategy. Some JVMs <em>only</em> interpret, they don't even <em>have</em> a compiler. Some JVMs <em>only</em> JIT compile, they don't even <em>have</em> an interpreter. Some JVMs have <em>both</em> an intepreter and a compiler (or even multiple compilers) and statically choose between the two on startup. Some have both and <em>dynamically</em> switch back and forth during runtime. Some aren't even virtual machines in the usual sense of the word <em>at all</em>, they just statically compile JVM bytecode into native machinecode ahead-of-time.</p>

<p>The particular JVM that you are asking about, Oracle's HotSpot JVM, has one interpreter and two compilers, called the C1 and C2 compiler, also colloquially known as the <em>client</em> and <em>server</em> compilers, after their corresponding commandline options. HotSpot dynamically switches back and forth between the interpreter and one of the compilers at runtime (but it will not switch between the two compilers, you have to specify one of them on the commandline and then only that one will be used for the entire runtime of the JVM).</p>

<p>The C1 compiler is an optimizing compiler which is pretty fast and doesn't use a lot of memory. The C2 compiler is much more aggressively optimizing, but is also slower and uses more memory.</p>

<p>You select between the two by specifying the <code>-client</code> and <code>-server</code> commandline options (<code>-client</code> is the default if you don't specify one), which also sets a couple of other JVM parameters like the default JIT threshold (in <code>-client</code> mode, methods will be compiled after they have been interpreted 1500 times, in <code>-server</code> mode after 10000 times, can be set with the <code>-XX:CompileThreshold</code> commandline argument).</p>

<p>Whether or not ""the majority of desktop users"" actually will run in compiled or interpreted mode depends largely on what code they are running. My guess is that the vast majority of desktop users run the HotSpot JVM from Oracle's JRE/JDK or one of its forks (e.g. SoyLatte on OSX, IcedTea or OpenJDK on Unix/BSD/Linux) and they don't fiddle with the commandline options, so they will probably get the C1 compiler with the default 1500 JIT threshold. (But applications such as IntelliJ, Eclipse or NetBeans have their own launcher scripts that usually supply different commandline arguments.)</p>

<p>In my case, for example, I often run small scripts which never actually reach the JIT threshold, so they are never compiled. (Nor should they be.)</p>
"
"<p>In the Sun JVM, classes that are loaded by the class loader are put in permgen space and never gc'd. (Unless the class loader goes out of scope)  It's my understanding that JRockit puts that same data on the heap instead.  Is that data then subject to garbage collection?</p>

<p>Thanks.</p>
","2988","","<p>The problem has nothing to do with <em>where</em> the classes get allocated. The problem is that classloaders always keep references to their classes, which means that classes cannot be garbage collected unless and until their classloader gets garbage collected.</p>

<p>This problem is just more obvious on HotSpot, because PermGen memory is scarce and expensive.</p>
"
"<p>What should be the content of the .gitignore file for a java project in netbeans?</p>
","2988","","<p>There should be no NetBeans-specific files in your <code>.gitignore</code>. The <code>.gitignore</code> file is project-specific but shared between developers, IOW there should only be things in there that are <em>common</em> for all developers working with the code (including ones that use OSX, Linux instead of Windows and Eclipse, IntelliJ or Notepad as editors) and that are <em>specific</em> to the project.</p>

<p>If there are some files that you would like to ignore based on your specific environment (like e.g. Windows <code>Thumbs.db</code> and <code>desktop</code> files or NeBeans <code>nbproject</code> directories) you should do that in your global ignore list, not in the project-specific <code>.gitignore</code>&nbsp;&ndash; if only because then you don't need to add them to every single of your projects individually.</p>

<p>If the files you want to ignore are both specific to your environment and specific to the project, put them into that repository's <code>.git/info/exclude</code>.</p>
"
"<p>Inspired by <a href=""http://stackoverflow.com/questions/2599161/class-method-as-hash-value/2599661#2599661"">this discussion</a>, after some googling I wasn't able to find an answer to a pretty simple question regarding methods in Ruby: are methods objects or not?</p>

<p>There are different opinions <a href=""http://stackoverflow.com/questions/416047/examples-of-things-that-are-not-objects-in-ruby/416154#416154"">here</a> and <a href=""http://www.mentby.com/david-a-black/are-methods-objects.html"">there</a>, and I would really like to hear, let's say, an in-depth explanation.</p>

<p>I'm aware of <code>Object#method</code> method, which takes a method name and returns a <code>Method</code> instance, but, on the other hand, there's a similar thing you can do with blocks to make them into <code>Proc</code> instances, and blocks aren't objects, so what makes methods any different?</p>
","2988","","<p>You can't really tell.</p>

<p>The only way to get access to a method is to send the <code>#method</code> message to some object, which will then return a <code>Method</code> object. But is that <code>Method</code> object the method itself? Or is it a wrapper around the method? Or is it a converted version of the original method?</p>

<p>You can't know: if you want to look at a method, you have to call <code>#method</code>, at which point you definitely <em>will</em> get an object. What it was <em>before</em> you called <code>#method</code> you can't look at, therefore you can't tell.</p>

<p>A couple of datapoints: in Ruby, everything returns a value. What does <code>def</code> return? It <em>always</em> returns <code>nil</code>, not a <code>Method</code> object. And <code>define_method</code>? It returns a <code>Proc</code>, but not a <code>Method</code> (nor an <code>UnboundMethod</code>). [Note: in Rubinius, <code>def</code> returns the compiled bytecode of the method, but still not a <code>Method</code> object.]</p>

<p>If you look at the 4th and 5th paragraphs of Section 6.1 of the Ruby Language Specification (lines 29-34 and 1-5 on pages 5 and 6), you can clearly see that there is a distinction drawn between methods and objects. And if you look at the specification of the builtin classes, you will find that neither <code>Method</code> nor <code>UnboundMethod</code> are in there, nor is <code>Object#method</code>. IOW: you can build a perfectly standards-compliant Ruby interpreter in which methods <em>aren't</em> objects.</p>

<p>Now, blocks OTOH definitely <em>aren't</em> objects. There are many ways to <em>construct</em> <code>Proc</code> objects from blocks, which then have the same behavior as the original block (<code>lambda</code>, <code>proc</code>, <code>Proc.new</code>, the <code>&amp;</code> sigil), but blocks themselves aren't objects.</p>

<p>Think about it this way: you can pass a string to <code>File.new</code> to construct a file object, but that doesn't make a string a file. You can pass a block to <code>Proc.new</code> to construct a proc object, but that doesn't make a block a proc.</p>
"
"<p>I'll be taking a trip soon with my iPad, without my laptop.  I'd like to continue to tinker with Ruby while I'm on the road.  I have an iPhone developer program membership, and I'm <em>not</em> interested in submitting this stuff to the app store.</p>

<p>I found the <a href=""http://github.com/funkaster/shinycocos"" rel=""nofollow"">shinycocos</a> project, which appears to embed a Ruby interpreter in an app.  But I can't get it to run, and it seems pretty customized for running cocos2d stuff.</p>

<p>My first goal is to run an interactive command line like <a href=""http://tryruby.org"" rel=""nofollow"">Try Ruby!</a>.  After that, I'd like to enter small programs in a UITextView and run them.  I'd appreciate any clues, tips, or existing projects you might know of.</p>
","2988","","<p>The <a href=""http://RhoMobile.Com/products/rhodes/"">Rhodes Framework</a> contains a working Ruby implementation for the iPhone. You could try just writing your own simple IRB clone with Rhodes and see how that goes. You won't be able to get it through the App Store, of course, but you don't care about that, anyway.</p>

<p>As a next step, you could steal <a href=""https://GitHub.Com/Rhomobile/Rhodes/tree/master/platform/iphone/"">their build recipes</a> and compile your own.</p>

<p>In the future, it will probably be possible to use <a href=""http://MacRuby.Org/"">MacRuby</a>, but for the time being, everybody who works on MacRuby either works for Apple or has signed an NDA, so they aren't saying anything. However, the MacRuby lead developer once said that MacRuby's ahead-of-time compiler <em>could</em> in the future be used to ""run Ruby on resource-constrained small-size mobile internet devices"" without ever mentioning the i-word.</p>

<p>[Note that this will probably <em>not</em> allow you to run an interpreter on the device, rather you would statically compile your code natively and then upload it to the device. And the compiler does not support <code>eval</code>, which is crucial for running something like IRB or even a full IDE on the device.]</p>

<p>At the moment, your best bet for a mobile Ruby IDE is probably Android.</p>
"
"<p>I read at <a href=""http://www.joelonsoftware.com/items/2010/03/17.html"" rel=""nofollow"">Joel on Software</a>:</p>

<blockquote>
  <p>With distributed version control, the
  distributed part is actually not the
  most interesting part.</p>
  
  <p>The interesting part is that these
  systems think in terms of changes, not
  in terms of versions.</p>
</blockquote>

<p>and at <a href=""http://hginit.com/00.html"" rel=""nofollow"">HgInit</a>:</p>

<blockquote>
  <p>When we have to merge, Subversion
  tries to look at both revisions—my
  modified code, and your modified
  code—and it tries to guess how to
  smash them together in one big unholy
  mess. It usually fails, producing
  pages and pages of “merge conflicts”
  that aren’t really conflicts, simply
  places where Subversion failed to
  figure out what we did.</p>
  
  <p>By contrast, while we were working
  separately in Mercurial, Mercurial was
  busy keeping a series of changesets.
  And so, when we want to merge our code
  together, Mercurial actually has a
  whole lot more information: it knows
  what each of us changed and can
  reapply those changes, rather than
  just looking at the final product and
  trying to guess how to put it
  together.</p>
</blockquote>

<p>By looking at the SVN's repository folder, I have the impression that Subversion is maintaining each revisions as <em>changeset</em>. And from what I know, Hg is using both <em>changeset</em> and <em>snapshot</em> while Git is purely using <em>snapshot</em> to store the data.</p>

<p>If my assumption is correct, then there must be other ways that make merging in DVCS easy. What are those?</p>

<p><strong>* Update:</strong>  </p>

<ul>
<li>I am more interested in the technical perspective, but answers from non-technical perspective are acceptable</li>
<li>Corrections:
<ol>
<li>Git's <em>conceptual</em> model is purely based on snapshots. The snapshots can be stored as diffs of other snapshots, it's just that the diffs are purely for storage optimization. – <a href=""http://stackoverflow.com/users/12166/rafal-dowgird"">Rafał Dowgird</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#comment2626335_2613525"">comment</a>  </li>
</ol></li>
<li>From non-technical perspective:
<ol>
<li>It's simply cultural: a DVCS wouldn't work at all if merging were hard, so DVCS developers invest a lot of time and effort into making merging easy. CVCS users OTOH are used to crappy merging, so there's no incentive for the developers to make it work. (Why make something good when your users pay you equally well for something crap?)<br>
...<br>
To recap: the whole point of a DVCS is to have many decentralized repositories and constantly merge changes back and forth. Without good merging, a DVCS simply is useless. A CVCS however, can still survive with crappy merging, especially if the vendor can condition its users to avoid branching. – <a href=""http://stackoverflow.com/users/2988/"">Jörg W Mittag</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#2613595"">answer</a></li>
</ol></li>
<li>From technical perspective:
<ol>
<li>recording a real DAG of the history does help! I think the main difference is that CVCS didn't always record a merge as a changeset with several parents, losing some information. – <a href=""http://stackoverflow.com/users/148532/tonfa"">tonfa</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#comment2624709_2613595"">comment</a></li>
<li>because of <strong><em>merge tracking</em></strong>, and the more fundamental fact that <strong><em>each revisions knows its parents</em></strong>. ... When each revision (each commit), including merge commits, know its parents (for merge commits that means having/remembering more than one parent, i.e. merge tracking), you can reconstruct diagram (DAG = Direct Acyclic Graph) of revision history. If you know graph of revisions, you can find common ancestor of the commits you want to merge. And when your DVCS knows itself how to <strong><em>find common ancestor</em></strong>, you don't need to provide it as an argument, as for example in CVS.<br>
.<br>
Note that there might be more than one common ancestor of two (or more) commits. Git makes use of so called ""recursive"" merge strategy, which merges merge bases (common ancestor), till you are left with one virtual / effective common ancestor (in some simplification), and can the do simple 3-way merge. – <a href=""http://stackoverflow.com/users/46058/jakub-narebski"">Jakub Narębski</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#2614937"">answer</a></li>
</ol></li>
</ul>

<p>Check as well <a href=""http://stackoverflow.com/questions/2471606/how-and-or-why-is-merging-in-git-better-than-in-svn"">How and/or why is merging in Git better than in SVN?</a></p>
","2988","","<p>There's nothing in particular in DVCSs that makes merging easier. It's simply cultural: a DVCS <em>wouldn't work at all</em> if merging were hard, so DVCS developers invest a lot of time and effort into making merging easy. CVCS users OTOH are used to crappy merging, so there's no incentive for the developers to make it work. (Why make something good when your users pay you equally well for something crap?)</p>

<p>Linus Torvalds said in one of his Git talks that when he was using CVS at Transmeta, they set aside <em>an entire week</em> during a development cycle for merging. And everybody just accepted this as the normal state of affairs. Nowadays, during a merge window, Linus does hundreds of merges within just a few hours.</p>

<p>CVCSs could have just as good merging capabilities as DVCSs, if CVCS users simply went to their vendors and said that this crap is unacceptable. But they are caught in the Blub paradox: they simply <em>don't know</em> that it is unacceptable, because they have never <em>seen</em> a working merge system. They don't know that there is something better out there.</p>

<p>And when they <em>do</em> try out a DVCS, they magically attribute all the goodness to the ""D"" part.</p>

<p>Theoretically, due to the centralized nature, a CVCS should have <em>better</em> merge capabilities, because they have a global view of the <em>entire</em> history, unlike DVCS were every repository only has a tiny fragment.</p>

<p>To recap: the <em>whole point</em> of a DVCS is to have many decentralized repositories and constantly merge changes back and forth. Without good merging, a DVCS simply is useless. A CVCS however, can still survive with crappy merging, especially if the vendor can condition its users to avoid branching.</p>

<p>So, just like with everything else in software engineering, it's a matter of effort.</p>
"
"<p>I recently asked a question on switching from C++ to C for writing an interpreter for speed and I got a comment from someone asking why on earth I would switch to C for that.</p>

<p>So I found out that I actually don't know why - except that C++ object oriented system has a much higher abstraction and therefore is slower.</p>

<ul>
<li>Why are the interpreters of all popular scripting languages written in C and not in C++?</li>
</ul>

<p>If you want to tell me about some other language where the interpreter for it isn't in C, please replace all occurences of <code>popular scripting languages</code> in this question with <code>Ruby, Python, Perl and PHP</code>.</p>
","2988","","<blockquote>
  <p>Why are the interpreters of all popular scripting languages written in C and not in C++?</p>
</blockquote>

<p>What makes you think that they are written in C? In my experience, the majority of implementations for the majority of scripting languages are written in languages <em>other</em> than C.</p>

<p>Here's a couple of examples:</p>

<h2>Ruby</h2>

<ul>
<li>BlueRuby: written in ABAP</li>
<li>HotRuby: JavaScript</li>
<li>Red Sun: ActionScript</li>
<li>SmallRuby: Smalltalk/X</li>
<li>MagLev: Ruby, GemStone Smalltalk</li>
<li>Smalltalk.rb: Smalltalk</li>
<li>Alumina: Smalltalk</li>
<li>Cardinal: PIR, NQP, PGE</li>
<li>RubyGoLightly: Go</li>
<li>YARI: Io</li>
<li>JRuby: Java</li>
<li>XRuby: Java</li>
<li>Microsoft IronRuby: C#</li>
<li>the original IronRuby by Wilco Bauwer: C#</li>
<li>Ruby.NET: C#</li>
<li>NETRuby: C#</li>
<li>MacRuby: Objective-C</li>
<li>Rubinius: Ruby, C++</li>
<li>MetaRuby: Ruby</li>
<li>RubyVM: Ruby</li>
</ul>

<h2>Python</h2>

<ul>
<li>IronPython: C#</li>
<li>Jython: Java</li>
<li>Pynie: PIR, NQP, PGE</li>
<li>PyPy: Python, RPython</li>
</ul>

<h2>PHP</h2>

<ul>
<li>P8: Java</li>
<li>Quercus: Java</li>
<li>Phalanger: C#</li>
</ul>

<h2>Perl6</h2>

<ul>
<li>Rakudo: Perl6, PIR, NQP, PGE</li>
<li>Pugs: Haskell</li>
<li>Sprixel: JavaScript</li>
<li>v6.pm: Perl5</li>
<li>Elf: CommonLisp</li>
</ul>

<h2>JavaScript</h2>

<ul>
<li>Narcissus: JavaScript</li>
<li>Ejacs: ELisp</li>
<li>Jint: C#</li>
<li>IronJS: F#</li>
<li>Rhino: Java</li>
<li>Mascara (ECMAScript Harmony Reference Implementation): Python</li>
<li>ECMAScript 4 Reference Implementation: Standard ML</li>
</ul>

<p>The HotSpot JVM is written in C++, the Animorphic Smalltalk VM (from which HotSpot and V8 are derived) is written in C++, the Self VM (on which the Animorphic Smalltalk VM is based) is written in C++.</p>

<p>Interestingly enough, in many of the above cases, the implementations that are <em>not</em> written in C, are actually <em>faster</em> than the ones written in C.</p>

<p>As an example of two implementations that <em>are</em> written in C, take Lua and CPython. In both cases, they are actually written in a small subset of a very old version of C. The reason for this is that they want to be highly portable. CPython, for example, runs on platform for which a C++ compiler doesn't even <em>exist</em>. Also, Perl was written in 1989, CPython in 1990, Lua in 1993, SpiderMonkey in 1995. C++ wasn't standardized until 1998.</p>
"
"<p>i've been programming for a while, but have never had a formal computer science education. i would like to know if there is a resource that goes over the key programming concepts like construct, polymorphism etc, that would be applicable to different languages. also it would be highly helpful if the resource would give examples.</p>
","2988","","<p><a href=""http://WWW.Info.UCL.Ac.Be/~pvr/book"" rel=""nofollow"">Concepts, Techniques, and Models of Computer Programming (by Peter Van Roy and Seif Haridi)</a>: the title says it all. (From the same author and based on the book comes <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/paradigms"" rel=""nofollow"">this cool poster with ~30 of the most important programming paradigms</a>.) [Note: this book is colloquially known as CTM, you might stumble across that acronym from time to time.]</p>

<p><a href=""http://MITPress.MIT.Edu/sicp/full-text/book/book.html"" rel=""nofollow"">Structure and Intepretation of Computer Programs (by Harold Abelson and Gerald Jay Sussman)</a>. SICP, as it is colloquially known, is probably <em>the</em> book about programming. Period. Don't forget <a href=""http://SWISS.CSAIL.MIT.Edu/classes/6.001/abelson-sussman-lectures/"" rel=""nofollow"">the 1986 video lectures by the authors themselves</a> or <a href=""http://ADUni.Org/courses/sicp/"" rel=""nofollow"">one</a> of the <a href=""http://OCW.MIT.Edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/CourseHome/"" rel=""nofollow"">other</a> <a href=""http://WebCast.Berkeley.Edu/course_details_new.php?seriesid=2010-B-26275"" rel=""nofollow"">courses</a> based on the book.</p>

<p>The main difference between SICP and CTM is the approach: CTM teaches programming concepts by giving examples in a very powerful programming language (Distributed Oz) that already implements them, while SICP teaches programming concepts by implementing them in a language (Scheme, or rather a small subset of it) which doesn't already have them. IOW: CTM would teach OO be showing programs written in an OO language, SICP by implementing an OO system in Scheme.</p>

<p><a href=""http://MITPress.MIT.Edu/catalog/item/default.asp?ttype=2&amp;tid=11656"" rel=""nofollow"">Design Concepts in Programming Languages (by Franklyn A. Turbak and David K. Gifford with Mark A. Sheldon)</a> is more about Programming Language Theory than Programming. It's still pretty interesting, even though it doesn't directly address your question about Programming Concepts. But after all: how would you program without a programming language?</p>

<p><a href=""http://Amazon.Com/dp/0321193628/"" rel=""nofollow"">Concepts of Programming Languages (by Robert W. Sebesta)</a> explains, well, Concepts of Programming Languages, starting with Konrad Zuse's Plankalkül, continuing with the first <em>real</em> programming languages like Fortran, Lisp, Cobol, Algol, BASIC and on to C, C++, Java and Ada. [Again, more of a Programming Language book than Programming.]</p>
"
"<p>Is it generally considered bad practice to provide <code>Iterator</code> implementations that are ""infinite""; i.e. where calls to <code>hasNext()</code> always(*) return true?</p>

<p>Typically I'd say ""yes"" because the calling code could behave erratically, but in the below implementation <code>hasNext()</code> will return true unless the caller removes all elements from the List that the iterator was initialised with; i.e. <strong>there is a termination condition</strong>.  Do you think this is a legitimate use of <code>Iterator</code>?  It doesn't seem to violate the contract although I suppose one could argue it's unintuitive.</p>

<pre><code>public class CyclicIterator&lt;T&gt; implements Iterator&lt;T&gt; {
  private final List&lt;T&gt; l;
  private Iterator&lt;T&gt; it;

  public CyclicIterator&lt;T&gt;(List&lt;T&gt; l) {
    this.l = l;
    this.it = l.iterator();
  }

  public boolean hasNext() {
    return !l.isEmpty();
  }

  public T next() {
    T ret;

    if (!hasNext()) {
      throw new NoSuchElementException();
    } else if (it.hasNext()) {
      ret = it.next();
    } else {
      it = l.iterator();
      ret = it.next();
    }

    return ret;
  }

  public void remove() {
    it.remove();
  }
}
</code></pre>

<p><strong>(Pedantic) EDIT</strong></p>

<p>Some people have commented how an <code>Iterator</code> could be used to generate values from an unbounded sequence such as the Fibonacci sequence.  However, the Java <code>Iterator</code> documentation states that an Iterator is:</p>

<blockquote>
  <p>An iterator over a collection.</p>
</blockquote>

<p>Now you could argue that the Fibonacci sequence is an infinite collection but in Java I would equate collection with the <code>java.util.Collection</code> interface, which offers methods such as <code>size()</code> implying that a collection must be bounded.  Therefore, is it legitimate to use <code>Iterator</code> as a generator of values from an unbounded sequence?</p>
","2988","","<p>The <em>whole point</em> of an <code>Iterator</code> is that it is lazy, i.e. that it gives you only as much objects as you ask for. If a user asks for all objects of an infinite <code>Iterator</code>, it's their problem, not yours.</p>
"
"<p>I'm looking to write a Tag class (a tag is a string with no spaces). My first thought is to inherit from String:</p>

<pre><code>class Tag &lt; String
  def initialize(str)
    raise ArgumentError if str =~ /\s/
    super
  end
end
</code></pre>

<p>Does this look correct? Are there any other methods I should redefine?</p>
","2988","","<p>You shouldn't inherit from <code>String</code>, both for reasons of good object-oriented design and pure pragmatism.</p>

<p>If you inherit from <code>String</code>, you are violating the Liskov Substitution Principle, which states that instances of subclasses should be substitutable for instances of their superclass. This is not the case here: I can insert a space in the middle of a <code>String</code>, but I can not insert a space in the middle of a <code>Tag</code>, therefore a <code>Tag</code> is not a substitue for a <code>String</code>, and thus shouldn't be a subclass.</p>

<p>And as a purely practical matter: you are inheriting roughly 100 public instance methods from <code>String</code>. Do you <em>really</em> want to audit (and potentially override) <em>every single one</em> of them to ensure they don't violate <code>Tag</code>'s contract?</p>

<p>I would rather do something like this:</p>

<pre><code>require 'facets/multiton'

class Tag
  include Multiton

  attr_reader :name
  attr_accessor :description

  private

  def initialize name, description=nil
    raise ArgumentError, 'Tag name cannot contain whitespace' if str =~ /\s/

    self.name = name.to_s.dup.freeze
    self.description = description unless description.nil?
  end

  attr_writer :name

  def self.multiton_id name, description=nil
    return name.to_s.downcase
  end
end
</code></pre>
"
"<p>I have a ruby method (deactivate!) that is on an activeRecord class.  However, I can't seem to find where that method is declared.</p>

<p>There have been numerous developers on this project, so it could be anywhere.  There is a deactivate! on an unrelated class, but it doesn't seem to get called.</p>

<p>Any ideas how to find all the superclasses for an instace, or where to find the code for deactivate!?</p>
","2988","","<p>As a first stab, try the <em>Jump to Declaration</em> feature of your IDE. Depending on how good your IDE's static type inference is, it should take you right there.</p>

<p>If that doesn't work, set a breakpoint on that call, fire up the debugger and <em>step into</em> the method.</p>
"
"<p>I'm looking for a much more idiomatic way to do the following little ruby script.</p>

<pre><code>File.open(""channels.xml"").each do |line|
  if line.match('(mms:\/\/{1}[a-zA-Z\.\d\/\w-]+)')
    puts line.match('(mms:\/\/{1}[a-zA-Z\.\d\/\w-]+)')
  end
end
</code></pre>

<p>Thanks in advance for any suggestions.</p>
","2988","","<p>Personally, I would probably just use the POSIX <code>grep</code> command. But there is <code>Enumerable#grep</code> in Ruby, too:</p>

<pre><code>puts File.readlines('channels.xml').grep(%r|mms://{1}[\w\./-]+|)
</code></pre>

<p>Alternatively, you could use some of Ruby's file and line processing magic that it inherited from Perl. If you pass the <code>-p</code> flag to the Ruby interpreter, it will assume that the script you pass in is wrapped with <code>while gets; ...; end</code> and at the end of each loop it will print the current line. You can then use the <code>$_</code> special variable to access the current line and use the <code>next</code> keyword to skip iteration of the loop if you don't want the line printed:</p>

<pre><code>ruby -pe 'next unless $_ =~ %r|mms://{1}[\w\./-]+|' channels.xml
</code></pre>

<p>Basically, </p>

<pre><code>ruby -pe 'next unless $_ =~ /re/' file
</code></pre>

<p>is equivalent to </p>

<pre><code>grep -E re file
</code></pre>
"
"<p>In ruby, is it possible to specify to call another ruby script using the same ruby interpreter as the original script is being run by?</p>

<p>For example, if a.rb runs b.rb a couple of times, is it possible to replace</p>

<pre><code>system(""ruby"", ""b.rb"", ""foo"", ""bar"")
</code></pre>

<p>with something like</p>

<pre><code>run_ruby(""b.rb"", ""foo"", ""bar"")
</code></pre>

<p>so that if you used <code>ruby1.9.1 a.rb</code> on the original, <code>ruby1.9.1</code> would be used on b.rb, but if you just used <code>ruby a.rb</code> on the original, <code>ruby</code> would be used on b.rb?</p>

<p>I'd prefer not to use shebangs, as I'd like it to be able to run on different computers, some of which don't have <code>/usr/bin/env</code>.</p>

<p><strong>Edit:</strong> I didn't mean <code>load</code> or <code>require</code> and the like, but spawning new processes (so I can use multiple CPUs).</p>
","2988","","<p><a href=""http://Avdi.Org/devblog/"">Avdi Grimm</a> wrote a series of articles on the <a href=""http://devver.wordpress.com/"">Devver blog</a> about different ways to start Ruby subprocesses last summer:</p>

<ul>
<li><a href=""http://devver.wordpress.com/blog/2009/06/a-dozen-or-so-ways-to-start-sub-processes-in-ruby-part-1/"">A Dozen (or so) Ways to Start Subprocesses in Ruby: Part 1</a></li>
<li><a href=""http://devver.wordpress.com/blog/2009/07/a-dozen-or-so-ways-to-start-sub-processes-in-ruby-part-2/"">A Dozen (or so) Ways to Start Subprocesses in Ruby: Part 2</a></li>
<li><a href=""http://devver.wordpress.com/blog/2009/10/ruby-subprocesses-part_3/"">A Dozen (or so) Ways to Start Subprocesses in Ruby: Part 3</a></li>
<li><a href=""http://devver.wordpress.com/blog/2009/10/beware-of-pipe-duplication-in-subprocesses/"">Beware of pipe duplication in subprocesses</a></li>
</ul>

<p>[Note: it appears that part 4 hasn't been published yet.]</p>
"
"<p>It is possible  for me to build my own Interpreter that could then be transformed into a compiler? If yes, how do I go about building it?</p>
","2988","","<p>This is called the Second Futamura Projection. It was first described by <a href=""http://fi.ftmr.info/"">Prof. Yoshihiko Futamura</a> in his 1971 paper <a href=""http://www.futamura.info.waseda.ac.jp/~futamura/PE-Museum/PE-Original-J.PDF""><em>Partial Evaluation of Computation Process&nbsp;&ndash; An approach to a Compiler-Compiler</em> (Japanese)</a>, an <a href=""http://www.brics.dk/~hosc/local/HOSC-12-4-pp381-391.pdf"">English version</a> of which was republished 28 years later.</p>

<p>It uses <a href=""http://Partial-Eval.Org/"">Partial Evaluation</a>, by partially evaluating the partial evaluator itself with respect to the interpreter, thus yielding a compiler.</p>

<p>So, you need two ingredients: an interpreter for your target language, written in some host language (which may or may not be the same as the target language) and a partial evaluator capable of evaluating both the interpreter and itself, in other words it needs to partially evaluate the host language and it needs to itself be written in the host language it can evaluate.</p>
"
"<p>I'm trying to figure out how to retrieve the value stored in the Person class.  The problem is just that after I define an instance of the Person class, I don't know how to retrieve it within the IronRuby code because the instance name is in the .NET part.</p>

<pre><code> /*class Person
        attr_accessor :name

                def initialize(strname)
                    self.name=strname
                end
    end*/

    //We start the DLR, in this case starting the Ruby version


 ScriptEngine engine = IronRuby.Ruby.CreateEngine();
        ScriptScope scope = engine.ExecuteFile(""c:\\Users\\ron\\RubymineProjects\\untitled\\person.rb"");

    //We get the class type
    object person = engine.Runtime.Globals.GetVariable(""Person"");

    //We create an instance
    object marcy = engine.Operations.CreateInstance(person, ""marcy"");
</code></pre>
","2988","","<p>[EDIT: Just installed VS and IronRuby and tested everything.]</p>

<p>The easiest way I can think of would be to type <code>marcy</code> as <code>dynamic</code> instead of <code>object</code>, and just call the accessor (which if I remember correctly is actually represented as a property on the .NET side):</p>

<pre><code>dynamic marcy = engine.Operations.CreateInstance(person, ""marcy"");
var name = marcy.name;
</code></pre>

<p>If you are not using .NET 4, you will have to go through the ""ugly"" string-based API:</p>

<pre><code>var name = engine.Operations.InvokeMember(marcy, ""name"");
</code></pre>

<p>BTW: If you <em>do</em> use .NET 4, you can also simplify some of your other code. For example, <code>Globals</code> implements <code>IDynamicObject</code> and provides an implemention of <code>TryGetProperty</code> that emulates Ruby's <code>method_missing</code>, so all in all you could do something like this:</p>

<pre><code>var engine = IronRuby.Ruby.CreateEngine();
engine.ExecuteFile(""person.rb"");
dynamic globals = engine.Runtime.Globals;
dynamic person = globals.Person;
dynamic marcy = person.@new(""marcy""); // why does new have to be a reserved word?
var name = marcy.name;
</code></pre>

<p>Notice how you can just ""dot into"" <code>Globals</code> to get the <code>Person</code> global constant, instead of having to pass it in as a string and you can just call the <code>new</code> method on the <code>Person</code> class (although you unfortunately have to escape it because <code>new</code> is a reserved word, although it would be trivial for the parser to know the difference) to create an instance.</p>
"
"<p>I'm trying to call a Page Method using a jQuery 'attached' event function, in which I like to use the closure to keep the event target local, as below, but page method calls declare several 'error' functions, and I would like to use one function for all of them.  If, in the below code, I was handling an error and not success, how could I use my single, anonymous handler for all 3 error functions?</p>

<pre><code>        $("":button"").click(function () {
            var button = this;
            PageMethods.DoIt(
                function (a, b, c) {
                    alert(button);
                });
        });
</code></pre>

<p>This example passes an anonymous function for the success callback.  There is only one of these.  If I was passing an error callback, how could I use 'function (e, c, t)' for all 3 error callbacks?</p>

<p>ADDED:  What I would like to do here is trigger an AJAX call whenever the user clicks a toggle button (checkbox), but to improve responsiveness, I want to toggle the button state immediately, and only 'untoggle' it if the AJAX call fails.</p>

<p>Now, in my client-side <code>click()</code> event handler, I would like to use anonymous functions inside the scope of <code>click()' so that the functions have access to the</code>this<code>event argument, but I don't want to 'declare' three functions for the</code>onTimeout<code>,</code>onError<code>, and 'onAbort</code> arguments of the PageMethods.MyFunction function.  if I declare a named function outside of the click handler, it no longer has access to the 'this' parameter of the <code>click()</code> event handler.</p>
","2988","","<p>You can't. The <em>whole point</em> of an <em>anonymous</em> function is that it has <em>no name</em> and thus <em>cannot be referenced</em>. (In fact, ""anonymous"" is basically the Greek word for ""unnamed"".)</p>

<p>If you want to reference it, you need to give it a name.</p>
"
"<p>What is an integer overflow error? 
Why do i care about such an error? 
What are some methods of avoiding or preventing it? </p>
","2988","","<p>I'd like to be a bit contrarian to all the other answers so far, which somehow accept crappy broken math as a given. The question is tagged language-agnostic and in a vast number of languages, integers simply never overflow, so here's my kind-of sarcastic answer:</p>

<blockquote>
  <p>What is an integer overflow error?</p>
</blockquote>

<p>An obsolete artifact from the dark ages of computing.</p>

<blockquote>
  <p>why do i care about it?</p>
</blockquote>

<p>You don't.</p>

<blockquote>
  <p>how can it be avoided?</p>
</blockquote>

<p>Use a modern programming language in which integers don't overflow. (Lisp, Scheme, Smalltalk, Self, Ruby, Newspeak, Ioke, Haskell, take your pick ...)</p>
"
"<p>I've got a bit of fettish for language design and I'm currently playing around with my own hobby language. (<a href=""http://rogeralsing.com/2010/04/14/playing-with-plastic/"" rel=""nofollow"">http://rogeralsing.com/2010/04/14/playing-with-plastic/</a>)</p>

<p>One thing that really makes my mind bleed is ""generators"" and the ""yield"" keyword.
I know C# uses AST transformation to transform enumerator methods into statemachines.</p>

<p>But how does it work in other languages?
Is there any way to get generator support in a language w/o AST transformation?
e.g. Does languages like Python or Ruby resort to AST transformations to solve this to?</p>

<p>(The question is how generators are implemented under the hood in different languages, not how to write a generator in one of them)</p>
","2988","","<p>Generators are basically semi-coroutines with some annoying limitations. So, obviously, you can implement them using semi-coroutines (and full coroutines, of course).</p>

<p>If you don't have coroutines, you can use any of the other universal control flow constructs. There are a lot of control flow constructs that are ""universal"" in the sense that <em>every</em> control flow construct (including all the other universal control flow constructs), including coroutines and thus generators can be (more or less) trivially transformed into only that universal construct.</p>

<p>The most well-known of those is probably <code>GOTO</code>. With just <code>GOTO</code>, you can build <em>any</em> other control flow construct: <code>IF-THEN-ELSE</code>, <code>WHILE</code>, <code>FOR</code>, <code>REPEAT-UNTIL</code>, <code>FOREACH</code>, exceptions, threads, subroutine calls, method calls, function calls and so on, and of course also coroutines and generators.</p>

<p>Almost all CPUs support <code>GOTO</code> (although in a CPU, they usually call it <code>jmp</code>). In fact, in many CPUs, <code>GOTO</code> is the <em>only</em> control flow construct, although today native support for at least subroutine calls (<code>call</code>) and maybe some primitive form of exception handling and/or concurrency primitive (compare-and-swap) are usually also built in.</p>

<p>Another well-known control flow primitive are continuations. Continuations are basically a more structured, better manageable and less evil variant of <code>GOTO</code>, especially popular in functional languages. But there also some low-level languages that base their control flow on continuations, for example the Parrot Virtual Machine uses continuations for control flow and I believe there are even some continuation-based CPUs in some research lab somewhere.</p>

<p>C has a sort-of ""crappy"" form of continuations (<code>setjmp</code> and <code>longjmp</code>), that are much less powerful and less easy to use than ""real"" continuations, but they are plenty powerful enough to implement generators (and in fact, can be used to implement full continuations).</p>

<p>On a Unix platform, <code>setcontext</code> can be used as a more powerful and higher level alternative to <code>setjmp</code>/<code>longjmp</code>.</p>

<p>Another control flow construct that is well-known, but doesn't probably spring to mind as a low-level substrate build <em>other</em> control flow constructs on top of, are exceptions. There is a paper that shows that exceptions can be more powerful than continuations, thus making exceptions essentially equivalent to <code>GOTO</code> and thus universally powerful. And, in fact, exceptions <em>are</em> sometimes used as universal control flow constructs: the Microsoft Volta project, which compiled .NET bytecode to JavaScript, used JavaScript exceptions to implement .NET threads and generators.</p>

<p>Not universal, but probably powerful enough to implement generators is just plain tail call optimization. (I might be wrong, though. I unfortunately don't have a proof.) I <em>think</em> you can transform a generator into a set of mutually tail-recursive functions. I know that state machines can be implemented using tail calls, so I'm pretty sure generators can, too, since, after all, C# implements generators as state machines. (I think this works especially well together with lazy evaluation.)</p>

<p>Last but not least, in a language with a reified call stack (like most Smalltalks for example), you can build pretty much any kind of control flow constructs you want. (In fact, a reified call stack is basically the procedural low-level equivalent to the functional high-level continuation.)</p>

<p>So, what <em>do</em> other implementations of generators look like?</p>

<p>Lua doesn't have generators per se, but it has full asymmetric coroutines. The main C implementation uses <code>setjmp</code>/<code>longjmp</code> to implement them.</p>

<p>Ruby also doesn't have generators per se, but it has <code>Enumerator</code>s, that can be used as generators. <code>Enumerator</code>s are not part of the language, they are a library feature. MRI implements <code>Enumerator</code>s using continuations, which in turn are implemented using <code>setjmp</code>/<code>longjmp</code>. YARV implements <code>Enumerator</code>s using <code>Fiber</code>s (which is how Ruby spells ""coroutines""), and <em>those</em> are implemented using <code>setjmp</code>/<code>longjmp</code>. I believe JRuby currently implements <code>Enumerator</code>s using threads, but they want to switch to something better as soon as the JVM gains some better control flow constructs.</p>

<p>Python has generators that are actually more or less full-blown coroutines. CPython implements them using <code>setjmp</code>/<code>longjmp</code>.</p>
"
"<p>does anyone have a good definition for what a binary protocol is? and what is a text protocol actually? how do these compare to each other in terms of bits sent on the wire? </p>

<p>here's what wikipedia says about binary protocols:</p>

<p>A binary protocol is a protocol which is intended or expected to be read by a machine rather than a human being (http://en.wikipedia.org/wiki/Binary_protocol)</p>

<p>oh come on! </p>

<p>to be more clear, if I have jpg file how would that be sent through a binary protocol and how through a text one? in terms of bits/bytes sent on the wire of course. </p>

<p>at the end of the day if you look at a string it is itself an array of bytes so the distinction between the 2 protocols should rest on what actual data is being sent on the wire. in other words, on how the initial data (jpg file) is encoded before being sent.</p>

<p>any coments are apprecited, I am trying to get to the essence of things here.</p>

<p>salutations!</p>
","2988","","<p>Here's a kind-of cop-out definition:</p>

<blockquote>
  <p>You'll know it when you see it.</p>
</blockquote>

<p>This is one of those cases where it is very hard to find a concise definition that covers all corner cases. But it is also one of those cases where the corner cases are completely irrelevant, because they simply do not occur in real life.</p>

<p>Pretty much all protocols that you will encounter in real life will either look like this:</p>

<pre><code>&gt; fg,m4wr76389b zhjsfg gsidf7t5e89wriuotu nbsdfgizs89567sfghlkf
&gt;  b9er t8ß03q+459tw4t3490ß´5´3w459t srt üßodfasdfäasefsadfaüdfzjhzuk78987342
&lt; mvclkdsfu93q45324äö53q4lötüpq34tasä#etr0 awe+s byf eart
</code></pre>

<p>[Imagine a ton of other non-printable crap there. One of the challenges in conveying the difference between text and binary is that you have to do the conveying in text :-)]</p>

<p>Or like this:</p>

<pre><code>&lt; HELLO server.example.com
&gt; HELLO client.example.com
&lt; GO
&gt; GETFILE /foo.jpg
&lt; Length: 3726
&lt; Type: image/jpeg
&lt; READY?
&gt; GO
&lt; ... server sends 3726 bytes of binary data ...
&gt; ACK
&gt; BYE
</code></pre>

<p>[I just made this up on the spot.]</p>

<p>There's simply not that much ambiguity there.</p>

<p>Another definition that I have sometimes heard is </p>

<blockquote>
  <p>a text protocol is one that you can debug using <code>telnet</code></p>
</blockquote>

<p>Maybe I am showing my nerdiness here, but I <em>have</em> actually written and read e-mails via SMTP and POP3, read usenet articles via NNTP and viewed web pages via HTTP using <code>telnet</code>, for no other reason than to see whether it would actually work.</p>

<p>Actually, while writing this, I kinda caught the fever again:</p>

<pre><code>bash-4.0$ telnet smtp.googlemail.com 25
Trying 74.125.77.16...
Connected to googlemail-smtp.l.google.com.
Escape character is '^]'.
&lt; 220 googlemail-smtp.l.google.com ESMTP Thu, 15 Apr 2010 19:19:39 +0200
&gt; HELO
&lt; 501 Syntactically invalid HELO argument(s)
&gt; HELO client.example.com
&lt; 250 googlemail-smtp.l.google.com Hello client.example.com [666.666.666.666]
&gt; RCPT TO:Me &lt;Me@Example.Com&gt;
&lt; 503 sender not yet given
&gt; SENDER:Me &lt;Me@Example.Com&gt;
&lt; 500 unrecognized command
&gt; RCPT FROM:Me &lt;Me@Example.Com&gt;
&lt; 500 unrecognized command
&gt; FROM:Me &lt;Me@Example.Com&gt;
&lt; 500-unrecognized command
&gt; HELP
&lt; 214-Commands supported:
&lt; 214 AUTH HELO EHLO MAIL RCPT DATA NOOP QUIT RSET HELP ETRN
&gt; MAIL FROM:Me &lt;Me@Example.Com&gt;
&lt; 250 OK
&gt; RCPT TO:You &lt;You@SomewhereElse.Example.Com&gt;
&lt; 250 Accepted
&gt; DATA
&lt; 354 Enter message, ending with ""."" on a line by itself
&gt; From: Me &lt;Me@Example.Com&gt;
&gt; To: You &lt;You@SomewhereElse.Example.Com&gt;
&gt; Subject: Testmail
&gt;
&gt; This is a test.
&gt; .
&lt; 250 OK id=1O2Sjq-0000c4-Qv
&gt; QUIT
&lt; 221 googlemail-smtp.l.google.com closing connection
Connection closed by foreign host.
</code></pre>

<p>Damn, it's been quite a while since I've done this. Quite a few errors in there :-)</p>
"
"<p>I need to parse C#, Ruby and Python source code to generate some reports. I need to get a list of method names inside a class, and I need some other info such as usage of global variable or something. Just parsing using RE could be a solution, but I expect a better (systematic) solution using parsers, if it is easily possible. </p>

<p>What parsers for those languages are provided?</p>

<p>For C#, I found <a href=""http://csparser.codeplex.com/Wikipage"" rel=""nofollow"">http://csparser.codeplex.com/Wikipage</a> , but for the others, I found a bunch of parsers using those languages, but not the language parsers of them.</p>
","2988","","<p>For Python, the situation is trivial: there is a <a href=""http://Docs.Python.Org/library/parser.html"">Python parser</a> in the standard library as well as <a href=""http://Docs.Python.Org/library/ast.html"">a more high-level module for manipulating ASTs</a>.</p>

<p>Also, Python has a somewhat simple grammar (at least if you use the trick to keep an indentation stack in your lexer and inject fake <code>BEGIN</code> and <code>END</code> tokens in your token stream, so that you can treat Python as a simple keyword delimited Algol-like language in your parser), so it is often used as an example grammar for parser generators, which means that you can find literally dozens of Python parsers for pretty much every single parser generator, programming language and platform out there. (E.g., here is <a href=""http://Projects.Haskell.Org/language-python/"">a Haskell module implementing a Python lexer and parser</a>.)</p>

<p>For Ruby, there are quite a number of parsers available.</p>

<p>Ruby is <em>incredibly</em> hard to parse, so if you need full fidelity, you pretty much have to use the original YACC grammar file from the YARV Ruby implementation. (<a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/parse.y""><code>parse.y</code> in the top-level source directory.</a>) JRuby's parser is derived from that file, and it is the only one of the implementation parsers that has been explicitly designed to also be used by <em>other</em> clients and not just the interpreter itself. (For example, the Eclipse RDT plugin, the Eclipse DLTK/Ruby plugin, the NetBeans Ruby plugin and the jEdit Ruby syntax highlighting all use JRuby's parser.) To facilitate that, JRuby's parser has actually been repackaged as a <a href=""http://JRuby-Parser.Kenai.Com/"">separate project</a>.</p>

<p>Of course, there are YACC clones for pretty much every language on the planet. However, be aware that YARV does not use a <code>lex</code> generated scanner. It uses a hand-written scanner in C, and also the YACC grammar contains quite a bit of semantic actions in C. Those parts will have to be re-implemented (like they were in JRuby).</p>

<p>The XRuby compiler is the only full Ruby implementation that does not use YARV's <code>parse.y</code>, it uses <a href=""https://GitHub.Com/RhoMobile/Rhodes/blob/master/platform/shared/xruby/src/com/xruby/compiler/parser/ruby.g"">an ANTLRv3 grammar</a> and an <a href=""https://GitHub.Com/RhoMobile/Rhodes/blob/master/platform/shared/xruby/src/com/xruby/compiler/parser/ruby.tree.g"">ANTLRv3 tree grammar</a> that have been developed from scratch. ANTLR can generate parsers for a whole bunch of languages, including for example Java and C#. Its Ruby backend, however, is in dire need of some work.</p>

<p><a href=""http://RedParse.RubyForge.Org/"">RedParse</a> is a Ruby parser written in Ruby, which claims to be able to parse all Ruby syntax correctly. It is used, for example, in the <a href=""http://YARDoc.Org/"">YARD</a> Ruby documentation tool to, among other things, extract method names.</p>

<p><a href=""http://ParseTree.RubyForge.Org/"">ruby_parser</a> is another Ruby parser in Ruby. It is generated from <code>parse.y</code> via the <code>racc</code> parser generator that is part of Ruby's standard library.</p>

<p>YARV actually contains a parser library called <code>ripper</code>, which allows you to parse Ruby code. Unfortunately, it is completely undocumented, so you basically have to figure it out by reading <a href=""http://ArtWeb-Design.De/2009/7/5/using-ruby-1-9-ripper/"">blog posts</a>. Except of course, being undocumented, almost nobody <em>else</em> has figured it out yet, either and written a blog post.</p>

<p>However, for your purposes, you don't actually need a full-blown Ruby parser. You only need enough to extract method names and some other stuff.</p>

<p><a href=""http://RDoc.RubyForge.Org/"">RDoc</a>, the Ruby documentation generator, contains a Ruby parser which can parse just enough Ruby to, well, extract method names and some other stuff.</p>

<p><a href=""https://GitHub.Com/Cardinal/"">Cardinal</a> is a Ruby implementation for the <a href=""http://ParrotCode.Org/"">Parrot Virtual Machine</a>. It does not yet run all of Ruby, but <a href=""https://GitHub.Com/Cardinal/Cardinal/blob/master/src/parser/grammar.pg"">its parser</a> should be powerful enough to support all you need. (The parser is written in the Parrot Grammar Engine, so you will obviously have to run it in Parrot, by for example writing your reporting tool in Perl6.)</p>

<p><a href=""http://Code.MACournoyer.Com/tinyrb/"">tinyrb</a> is another Ruby implementation that does not run full Ruby but contains a <a href=""https://GitHub.Com/MACournoyer/TinyRb/blob/master/vm/grammar.leg"">better written parser</a> than YARV. In this case, the parser uses <a href=""http://Piumarta.Com/software/peg/"">Ian Piumarta's <code>leg</code> Parsing Expression Grammar parser generator</a>.</p>
"
"<p>I'm just looking at <code>NSString.h</code> and wonder why some method declaration args use 
<code>(NSString *)string;</code> while others use <code>(NSString *)aString</code>.  </p>

<p>What are the conventions practiced here?</p>
","2988","","<p>The object-oriented half of Objective-C comes from Smalltalk, and so does this convention.</p>

<p>Smalltalk was originally designed to be used by children, without them having to learn programming. Later on that goal was relaxed a bit and it was more targeted at domain experts for doing end user programming. In both cases, the language designers felt that the language should be a compelling user interface, and thus they paid very close attention to even the smallest details, like the naming of parameters in method signatures.</p>

<p>Method signatures themselves are fairly unusual in Smalltalk (and Objective-C), in that the arguments and parameters are <em>not</em> written <em>after</em> the name (as in pretty much every other language ever invented), but rather the name of the method gets broken up into pieces and the arguments and parameters go <em>between</em> them. This makes for some strange looking method names, but when you read the <em>entire</em> signature with the arguments or parameters, then it reads almost like a sentence in the domain jargon of whatever domain that particular method operates in.</p>

<p>So, in some run of the mill OO language, a method for storing a value at a particular index in an array might look like this:</p>

<pre><code>store(i, obj)
</code></pre>

<p>or even worse, like this:</p>

<pre><code>public void store(int i, T obj)
</code></pre>

<p>or this:</p>

<pre><code>store(self, i, obj)
</code></pre>

<p>er even this (from <em>my</em> favorite language):</p>

<pre><code>[]=(i, obj)
</code></pre>

<p>(How do you even pronounce that?)</p>

<p>and might be called like this:</p>

<pre><code>ary.store(3, ""Hello"")
</code></pre>

<p>or this:</p>

<pre><code>ary[3] = ""Hello""
</code></pre>

<p>or <em>maybe</em> with little bit less punctuation (in Io and Ioke, for example):</p>

<pre><code>ary store(3, ""Hello"")
</code></pre>

<p>In Smalltalk, the signature looks like this:</p>

<pre><code>at: anInteger put: anObject
</code></pre>

<p>and it is called like this:</p>

<pre><code>anArray at: 3 put: ""Hello"".
</code></pre>

<p>If you read the signature out loud, it becomes clear that there simply <em>has</em> to be an indefinite article there, otherwise it just wouldn't read right.</p>

<p>Note some of the differences: in the mainstream versions, parameters are only distinguished by their positions. So, in order to figure out what they mean, you give them descriptive names. But when you actually <em>call</em> the method, those descriptive names are gone, because the parameters get replaced with the arguments. (And yes, I am well aware that <code>i</code> isn't exactly a descriptive name. If you want to, you can repeat the experiment with something like <code>copy(source, destination)</code> and <code>copyFrom: aDirectory to: anotherDirectory</code>).</p>

<p>In the Smalltalk example, however, the semantics of the parameter are encoded in the method name, thus freeing up the parameter name for other usages. In this case, type annotations (since Smalltalk is implicitly typed) or, well, basically some form of Hungarian Notation. Also, when you call the method, the encoded meaning is still there in the method name. (In the example above, when you read <code>copy(a, b)</code>, you don't know whether this is copying from <code>a</code> to <code>b</code> or the other way round, but with <code>copyFrom: a to: b.</code> there is no ambiguity. You could fix that by renaming the method: <code>copyFromTo(a, b)</code>, but that doesn't read very well, either.)</p>

<p>Now, in Objective-C, all of this gets a little lost, because of the type annotations. Compare these two signatures, which basically describe the same method:</p>

<pre><code>at: anInteger put: anObject
- (void)insertObject:(id)anObject atIndex:(NSUInteger)index
</code></pre>

<p>Somehow, the ""read it out loud as an English sentence"" part got lost, but the ""an"" prefix for <code>anObject</code> is still there.</p>

<p>Anyway, to make a long story short: the reason for those prefixes has to do with Objective-C's heritage.</p>
"
"<p>Is it possible to use llvm to run x86 programs? I.e. I want to use llvm as an x86 simulator to run x86 programs and then instrument the x86 program.</p>

<p>Thanks!</p>
","2988","","<p>I think you are looking for <a href=""http://LibCPU.Org/"" rel=""nofollow"">LibCPU</a>.</p>

<p>It has <a href=""http://LibCPU.Org/wiki/index.php/X86"" rel=""nofollow"">an x86 frontend</a> (well, actually only 8086 at the moment, and that is not even complete, but they're working on it), and since it is built on top of LLVM, it obviously also has an x86 backend, thus making it possible to run x86-on-x86 but passing it through LLVM's optimization, instrumentation and analysis stages.</p>
"
"<p>My ruby file is like this.</p>

<pre><code>`mkdir #{HOST} -p`
</code></pre>

<p>It works fine by:  <code>ruby mycode.rb</code></p>

<p>But in a cron job</p>

<p>0 * * * * ruby ~/backup.rb >> backup.log</p>

<p>It will a <code>-p</code> folder. Why? </p>
","2988","","<p>The #1 problem that anybody runs into with cron jobs is that usually, for security reasons, cron jobs run with a minimal <code>$PATH</code>. So, it <em>could</em> be that your cron job runs with a different path than when you run the script from the shell, which would mean that it is <em>possible</em> that within the cron job a different <code>mkdir</code> comman gets called, which interprets its arguments differently.</p>

<p><em>Usually</em>, the first filename argument stops option processing and everything that comes after that will be treated as a filename. So, since <code>#{HOST}</code> is a filename, everything after that will <em>also</em> be treated as a filename, which means that the call will be interpreted as ""make two directories, one named <code>#{HOST}</code> and the other named <code>-p</code>"" If you look for example at the specification of <code>mkdir</code>, it is simply illegal to pass an option <em>after</em> the filenames.</p>

<p>Another possibility is that for some reason <code>#{HOST}</code> will be empty when running under cron. Then the whole call expands to <code>mkdir -p</code>, which again, depending on your implementation of <code>mkdir</code> <em>might</em> be interpreted as ""create one directory named <code>-p</code>"".</p>

<p>It is not quite clear to me why you are passing the options and operands in the wrong order, instead of <code>mkdir -p #{HOST}</code>. It's also not clear to me why you use the shell <em>at all</em>, instead of just <code>FileUtils.mkdir_p(HOST)</code>.</p>
"
"<p>I've heard that given a programmer with enough time and skill in any particular language and enough lines of code, then any program could be created with any given language. I know its certainly not going to be cost-efficient, for instance, to rewrite Adobe Photoshop in BASIC, but could a good enough and patient enough programmer potentially create any program in any language?</p>
","2988","","<p>This depends on exactly how you define ""any program"" and ""any language"".</p>

<p>Let's start with the first one: ""any program"". There are many programs (in fact, there are <em>infinitely many</em> programs) that cannot be written <em>at all</em>, regardless of the programming language. One of the most famous ones is the so-called Halting Problem: write a program <code>H</code>, which when given any program <code>P</code> and any input <code>x</code> determines whether <code>P(x)</code> will eventually halt. Alan Turing proved many decades ago that it is <em>impossible</em> for such a program to exist. Ergo, you cannot write this program in <em>any</em> programming language.</p>

<p>Now, let's talk about ""any language"". There are actually different classes of languages. Some are more powerful than others. For example regular expressions (which <em>are</em> a kind of programming language) can <em>not</em> compute any arbitrary function. They are limited in their computational power. However, most general purpose programming languages are what is generally called ""Turing-complete"".</p>

<p>Brief bit of history: in order to prove the undecidability of the Halting Problem, Alan Turing invented a hypothetical machine called the Turing Machine. A TM is basically a hypothetical computer with infinite memory, that computes a particular function. It turns out that you can build a Universal Turing Machine which can emulate <em>any</em> other Turing Machine.</p>

<p>At about the same time, Alonzo Church invented the Lambda Calculus. The LC is <em>also</em> an abstract mathematical model of computation, but <em>completely</em> different. People started wondering: which of those two models is more powerful? Is there anything that a UTM can compute that LC cannot and vice versa? Can the LC solve the Halting Problem?</p>

<p>As it turns out, you can write an emulator for a UTM in LC and you can build a TM which interprets LC. This means that a TM can compute everything LC can compute (by simply running it in the interpreter) and LC can compute everything a UTM can compute (by simply running it in the emulator). So, we have</p>

<pre><code>LC ≤ UTM ∧ UTM ≤ LC ⇒ LC = UTM
</code></pre>

<p>In English: LC and UTM are exactly equally powerful. In fact, it turns out that <em>every</em> model of computation and <em>every</em> machine and <em>every</em> programming language we have ever found is <em>at most</em> as powerful as LC and UTM and indeed <em>every other</em> model. This leads to the so-called <em>Church-Turing-Thesis</em> which states all sufficiently powerful models of computation are equally powerful and there can be no model of computation that is more powerful than UTM or LC. (There can be models of computation that are <em>less</em> powerful, like for example regular expressions or total functions or a language with only bounded loops.)</p>

<p>We call such models of computation <em>Turing-complete</em>. And, BTW, <a href=""http://StackOverflow.Com/questions/1053931/"">you don't need much to be Turing-complete</a>.</p>

<p>So, with that out of the way, we can now define what we mean by ""any program"" and ""any language"":</p>

<blockquote>
  <p>If a program can be written <em>in one Turing-complete language</em>, then it can be written in <em>any Turing-complete language</em>.</p>
</blockquote>
"
"<p>as a way to spice up my C++ programming homework, I've decided to instead of typing the C++ from the book onto my computer, instead reforming it in Ruby. Yes it's a bit silly, but I'm bored. </p>

<p>Anyway, I'm having trouble converting this kind of function to Ruby</p>

<pre><code>void swap(int &amp;a,int &amp;b){
  int c=b;
  b=a;
  a=c
}
</code></pre>

<p>What would be the equivalent ruby code <em>inside a function</em> ?</p>
","2988","","<p>Ruby is strictly pass-by-value. Always. But sometimes those values are poointers.</p>

<p>Here's a couple of links:</p>

<ul>
<li><a href=""http://JavaDude.Com/articles/passbyvalue.htm"">Java is Pass-by-Value, Dammit! (Scott ""JavaDude"" Stanchfield)</a></li>
<li><a href=""http://Yoda.ArachSys.Com/java/passing.html"">Parameter passing in Java (Jon Skeet)</a></li>
<li><a href=""http://StackOverflow.Com/questions/589919/"">Does Java pass by reference?</a></li>
<li><a href=""http://StackOverflow.Com/questions/498747/java-pass-by-value-reference-variables/498895#498895"">Java, pass-by-value, reference variables</a></li>
</ul>

<p>Note that while all of these say ""Java"", they should really say ""Smalltalk and its descendants"", which includes Java, Ruby and a ton of other languages.</p>

<p>I think most of the confusion stems from two problems:</p>

<ol>
<li>Ruby passes references by value. But the word ""reference"" in that sentence is not the same as the word ""reference"" in ""pass-by-reference"". Maybe it is clearer when we disambiguate: let's replace ""pass-by-reference"" with ""pass-by-variable"" and ""reference"" with ""pointer"" (note that these are ""good"" well-behaved poointers, not the ""bad"" ones from C):
<ul>
<li>Fortran is pass-by-variable</li>
<li>Ruby is pass-by-value and the values it passes are mostly poointers</li>
</ul></li>
<li>The references (poointers) that Ruby passes point to mutable objects. Therefore, while you <em>cannot</em> change the reference, you <em>can</em> mutate the objects that the reference points to. The problem here is that Ruby (like most imperative object-oriented languages) confuses the concepts of identity, state and value. You can learn more about that problem and how to fix it here (Note that while they say ""Clojure"", the concepts that are presented are universal and could be applied equally well to OO):
<ul>
<li><a href=""http://InfoQ.Com/presentations/Value-Identity-State-Rich-Hickey/"">Persistent Data Structures and Managed References - Clojure's Approach to Identity and State - Rich Hickey - QCon London 2009</a></li>
<li><a href=""http://InfoQ.Com/presentations/Are-We-There-Yet-Rich-Hickey/"">Are We There Yet? - A deconstruction of object-oriented time - Rich Hickey - JVM Language Summit</a></li>
</ul></li>
</ol>

<p>BTW: I deliberately misspelt ""poointers"" with an OO for object-orientation to make it clear that I am not talking about raw memory addresses, I am talking about opaque references to objects (and for obvious reasons I do not want to use the word ""reference""; if you know a better word that is neither ""pointer"" nor ""reference"", I'd love to hear it).</p>
"
"<p>Git is notorious by its encouraged length limit for commit message titles: first line should not be more than 50 characters long (to fit an e-mail header).</p>

<p>That reminds me of... well, is there a hook that automatically posts commit messages to twitter as soon as they're pushed to the server?  </p>
","2988","","<p>Here you go:</p>

<pre><code>#!/bin/sh
username=&lt;your Twitter account&gt;
password=&lt;your Twitter password&gt;

service_uri=http://api.twitter.com/1/statuses/update.json

subject=`git log --pretty=format:%s -n1`

curl -u ""${username}:${password}"" -d status=""${subject}"" $service_uri
</code></pre>

<p>Save as <code>.git/hooks/post-commit</code> in your repository and make it executable.</p>

<p>[Note: completely untested, I just made this up on the spot.]</p>
"
"<p>I have a situation where I would like to have objects of a certain type be able to be used as two different types.  If one of the ""base"" types was an interface this wouldn't be an issue, but in my case it is preferable that they both be concrete types.</p>

<p>I am considering adding copies of the methods and properties of one of the base types to the derived type, and adding an implicit conversion from the derived type to that base type.  Then users will be able treat the derived type as the base type by using the duplicated methods directly, by assigning it to a variable of the base type, or by passing it to a method that takes the base type.</p>

<p>It seems like this solution will fit my needs well, but am I missing anything?  Is there a situation where this won't work, or where it is likely to add confusion instead of simplicity when using the API?</p>

<p><strong>EDIT:</strong> More details about my specific scenario:</p>

<p>This is for a potential future redesign of the way indicators are written in <a href=""http://www.rightedgesystems.com/"" rel=""nofollow"">RightEdge</a>, which is an automated trading system development environment.  Price data is represented as a series of bars, which have values for the open, low, high, and close prices for a given period (1 minute, 1 day, etc).  Indicators perform calculations on series of data.  An example of a simple indicator is the moving average indicator, which gives the moving average of the most recent <em>n</em> values of its input, where <em>n</em> is user-specified.  The moving average might be applied to the bar close, or it could be applied to the output of another indicator to smooth it out.</p>

<p>Each time a new bar comes in, the indicators compute the new value for their output for that bar.</p>

<p>Most indicators have only one output series, but sometimes it is convenient to have more than one output (see <a href=""http://en.wikipedia.org/wiki/MACD"" rel=""nofollow"">MACD</a>), and I want to support this.</p>

<p>So, indicators need to derive from a ""Component"" class which has the methods that are called when new data comes in.  However, for indicators which have only one output series (and this is most of them), it would be good for them to act as a series themselves.  That way, users can use <code>SMA.Current</code> for the current value of an SMA, instead of having to use <code>SMA.Output.Current</code>.  Likewise, <code>Indicator2.Input = Indicator1;</code> is preferable to <code>Indicator2.Input = Indicator1.Output;</code>.  This may not seem like much of a difference, but a lot of our target customers are not professional .NET developers so I want to make this as easy as possible.</p>

<p>My idea is to have an implicit conversion from the indicator to its output series for indicators that have only one output series.</p>
","2988","","<p>This might be a stupid idea, but: if your design requires multiple inheritance, then why don't you simply use a language with MI? There are several .NET languages which support multiple inheritance. Off the top of my head: Eiffel, Python, Ioke. There's probable more.</p>
"
"<p>When I code, I always write little pieces of unit, and compile it often. This helps me to make sure that everything run correctly, but it's very time consumed. <strong><em>is there any programming language that can support us to do coding and running at the same time side by side ?</em></strong> i mean as soon as a key press leads to valid code, the effect of the edit is incorporated into the executing program.</p>
","2988","","<p>What you are looking for, is sometimes called a lively system, incremental system or self-sustaining system (S³).</p>

<p>It's not really a property of the programming language, it's a poperty of the development environment. The only thing it <em>does</em> have to do with the programming language is that some programming language <em>communities</em> are violently opposed to the very idea of liveliness and thus those communities tend to not produce lively tools, while other communities cannot imagine life without a lively system, so they tend to produce them.</p>

<p>For example, almost all Smalltalk environments and many Lisp environments are lively, while I know of not a single lively C or C++ environment. There used to be a lively Java environment, called IBM Visual Age for Java (which was actually written in Smalltalk by IBM's Smalltalk division and based on IBM Visual for Smalltalk, so there's not really a surprise there), but when it was rewritten in Java as Visual Age for Java Micro Edition (which you probably know better under its current name, Eclipse), it lost its liveliness.</p>

<p>You ask about ""coding and running at the same time side by side"". Well, in a lively system, they aren't even ""side by side"", they are actually one and the same: there is no distinction between coding and running, there is no distinction between IDE and application, there is no distinction between compile time and run time.</p>

<p>The way you often develop software in Smalltalk, is that you simply write down what you want and run it:</p>

<pre><code>aCalculator ← Calculator new.
aCalculator compute: '1 + 1'.
</code></pre>

<p>(BTW: ""Run it"" simply means writing that little snippet of code into <em>any</em> text area anywhere on the screen, highlight it and click ""Run"".)</p>

<p>[Note: left arrow is assignment (think <code>=</code>), upwards arrow is <code>return</code>. Original Smalltalk systems had them on the keyboard, modern systems typically use <code>:=</code> and <code>^</code> instead. Also, whitespace is message sending (""dot"" in Java) and period terminates a sentence (<code>;</code>) in most languages. Arguments to methods are passed inline in the message itself after colons and not in parentheses.]</p>

<p>Of course, this doesn't work, because the <code>Calculator</code> class doesn't exist yet. So, the debugger pops up (did I mention there's no distinction between running and debugging?) and one of the options it offers you is to create that class. You don't restart the program, it just keeps on running. Now you get a <em>new</em> error, because the <code>compute:</code> method doesn't exist. Again, the debugger offers to create the method for you and you can directly enter the code right there: (Did I mention there's no distinction between the debugger and the editor?)</p>

<pre><code>compute: aString
    ↑ 2.
</code></pre>

<p>The system has already filled the method name out for you and chosen a (somewhat) reasonable name for the method parameter. You only have to type the second line.</p>

<p>(BTW: if this workflow sounds familiar to you, it should. Kent Beck based the object model and execution model of his two testing frameworks (SUnit and JUnit), as well as the practices of Test-Driven Development and the Red-Green-Refactor cycle on exactly this workflow.)</p>

<p>Notice that at no time in the process did we stop or restart the running program. We were always editing the source code of the live system from within the system while the system was running. In fact, you actually <em>cannot</em> stop a Smalltalk program or Smalltalk system! Even if you shut down the Smalltalk system, what it actually does is serialize the entire state of the system (every class, every object, every variable, every thread, every window, even the position of the mouse pointer) to disk and when you start it up again, you are <em>exactly</em> where you left off. The system never stopped, it was just frozen. (If you are familiar with VMWare, Parallels, VirtualBox or something like that, it's like taking a snapshot of the VM. Or think of hibernating or suspending your computer.)</p>

<p>In fact, if you download a version of Squeak today, there's probably objects in there that have been literally running for 30 years. (This is another difference between Smalltalk and other systems. Smalltalkers believe that, just like fine wines, objects get better with age. This is in stark contrast to, for example, PHP or Ruby on Rails, where objects get thrown away pretty much after every web request.)</p>

<p>One of the most famous examples of this lively editing is from the pivotal ""Apple Demo"", when Steve Jobs, Jef Raskin and other members of the Lisa team visited Xerox PARC in 1979 to get a demo of the Smalltalk system:</p>

<blockquote>
  <p>One of the best parts of the demo was when Steve Jobs said he didn't like the <code>blt</code>-style scrolling we were using and asked if we cold do it in a smooth continuous style. In less than a minute Dan [Ingalls] found the methods involved, made the (relatively major) changes and scrolling was now continuous! This shocked the visitors, espeicially the programmers among them, as they had never seen a really powerful incremental system before.&mdash;<a href=""http://Smalltalk.Org/smalltalk/TheEarlyHistoryOfSmalltalk_V.html#29"" rel=""nofollow"">The Early History Of Smalltalk by Alan Kay, HOPL-II, &copy;1993 ACM</a></p>
</blockquote>

<p>Oh, and yes, you did read that right: Dan Ingalls rewrote the video driver in a live system, from within a live system, without ever rebooting the system or even pausing the application. In less than 60 seconds. (Did I mention there's no distinction between programming language and operating system?)</p>

<p>One of the best explanations of the liveliness properties can be found in the video <a href=""http://Smalltalk.Org.Br/movies/Self_big.mov"" rel=""nofollow""><em>Self; The Movie</em></a> (Self is a derivative of Smalltalk). Also, take a look at the <a href=""http://Lively-Kernel.Org/"" rel=""nofollow""><em>Lively Kernel</em></a> by Dan Ingalls (one of the original designers of Smalltalk), which is basically a port of the Smalltalk ideas to JavaScript, running inside a web page.</p>

<p>As I wrote above, this is really a feature of the environment, not the language. Thus, even though I used Smalltalk here as an example, you could implement a lively system for any language. I already mentioned Lisp as a language for which many lively environments exist and I gave an example for JavaScript. APL and Forth systems tend to be lively as well. <a href=""http://FactorCode.Org/"" rel=""nofollow"">Factor</a> is a nice example of a lively system. The most extreme example might be the VxWorks real-time operating system which contains a semi-lively system for C(!), which has been used to diagnose and fix a priority inversion problem leading to spurious system resets on the Sojourner rover <em>on another friggin' planet!</em></p>
"
"<p>I don't believe seeing <a href=""http://www.communityforfsharp.net/april-2010-live-meeting-detail"" rel=""nofollow"">this</a>. It says:</p>

<blockquote>
  <p>For April, Chris Smith will be presenting on writing a Java to x86 Compiler in F#.</p>
</blockquote>

<p>The presentation may go on for an hour or two which definitely is not enough to write a <em>compiler</em>. I've heard that F# is powerful, but <em>this</em> powerful?</p>

<p>Well, all I wanted to ask is this: Can you write a compiler in F# that quickly?</p>
","2988","","<p>Let's first start with a few corrections:</p>

<ul>
<li>It's not a Java compiler, it's a compiler for a small <em>subset</em> of Java.</li>
<li>It doesn't say anywhere that the compiler will be <em>written</em> in the time, only that it will be <em>explained</em>.</li>
<li>In fact, it doesn't even say that, it says, it will be <em>presented</em>. Heck, I can present GCC in 3 minutes. It's not gonna be a very <em>useful</em> presentation, but it's gonna be a presentation.</li>
</ul>

<p>That said, explaining a well-structured, simple compiler for a simple language implemented in a language which is well-suited for writing compilers within an hour is definitely feasible.</p>

<p>F# is a member of the ML family of languages (specifically, a close cousin of OCaml), and those are indeed well-suited for writing compilers. In fact, the <em>reason</em> why Robin Milner chose the name ML (meta language) for his language, was because it is <em>specifically designed</em> for writing compilers. A compiler is basically a big function (thus making it very natural to implement in a functional language) that detects patterns (thus making it very natural to implement in a language with pattern matching) and executes a little bit of code for each pattern it detects (thus making it very natural to implement in a language with first-class functions). And whaddayaknow? F# is a functional language with very sophisticated pattern matching facilities. Another nice feature is an expressive type system with algebraic data types and discriminated unions which makes it very easy to represent Abstract Syntax Trees.</p>

<p>At the Lang.NET Symposium Jason Olson gave <a href=""http://LangNETSymposium.Com/2009/talks/24-JasonOlson-FSharp.html"">a talk on F#</a>, during which he showed some pieces of an interpreter that he is currently working on that demonstrate these features very well.</p>

<p>Fredrik Holmström is currently working on <a href=""http://IronJS.Com/"">IronJS</a>, an ECMAScript 3 implementation for the Dynamic Language Runtime. Take a look at the <a href=""https://GitHub.Com/FHolm/IronJS/"">code</a>, specifically the <a href=""https://GitHub.Com/FHolm/IronJS/blob/master/Src/IronJS/Ast.Types.fs"">AST types</a> and some of the <a href=""https://GitHub.Com/FHolm/IronJS/blob/master/Src/IronJS/Ast.Analyzer.fs"">analysis</a> and <a href=""https://GitHub.Com/FHolm/IronJS/blob/master/Src/IronJS/Ast.fs"">parsing</a> code.</p>

<p><a href=""http://Jonathan.Tang.Name/files/scheme_in_48/tutorial/overview.html"">Jonathan Tang's Write Yourself a Scheme in 48 Hours</a> is another good example of writing an interpreter, this time in Haskell which shares many features with F#.</p>

<p><a href=""http://WWW.IRO.UMontreal.Ca/~boucherd/mslug/meetings/20041020/minutes-en"">The 90 Minute Scheme to C compiler by Marc Feeley</a> is a presentation about a Scheme compiler written in Scheme.</p>

<p>In <a href=""http://SkillsMatter.Com/podcast/ajax-ria/implementing-scheme-in-ruby/"">Implementing Scheme in Ruby</a>, James Coglan teaches the audience Scheme, live-codes and explains a Scheme interpreter in Ruby and writes a couple of sample Scheme programs, all in 15 minutes.</p>
"
"<p>I am currently working through the Gregory Brown <a href=""http://rubybestpractices.com/"" rel=""nofollow"">Ruby Best Practices</a> book. Early on, he is talking about refactoring some functionality from helper methods on a related class, to some methods on module, then had the module <code>extend self</code>. </p>

<p>Hadn't seen that before, after a quick google, found out that <code>extend self</code> on a module lets methods defined on the module see each other, which makes sense.</p>

<p>Now, my question is when would you do something like this</p>

<pre><code>module StyleParser
  extend self

  def process(text)
    ...
  end

  def style_tag?(text)
    ...
  end
end
</code></pre>

<p>and then refer to it in tests with </p>

<pre><code>@parser = Prawn::Document::Text::StyleParser
</code></pre>

<p>as opposed to something like this?</p>

<pre><code>class StyleParser

  def self.process(text)
    ...
  end

  def self.style_tag?(text)
    ...
  end
end 
</code></pre>

<p>is it so that you can use it as a mixin? or are there other reasons I'm not seeing?</p>
","2988","","<p>In this particular case I would probably user neither a class nor a module.</p>

<p>A class is a factory for objects (note the plural). If you don't want to create multiple instances of the class, there is no need for it to exist.</p>

<p>A module is a container for methods, shared among multiple objects. If you don't mix in the module into multiple objects, there is no need for it to exist.</p>

<p>In this case, it looks like you just want an object. So use one:</p>

<pre><code>def (StyleParser = Object.new).process(text)
  ...
end

def StyleParser.style_tag?(text)
  ...
end
</code></pre>

<p>Or alternatively:</p>

<pre><code>class &lt;&lt; (StyleParser = Object.new)
  def process(text)
    ...
  end

  def style_tag?(text)
    ...
  end
end
</code></pre>

<p>But as @Azeem already wrote: for a proper decision, you need more context. I am not familiar enough with the internals of Prawn to know why Gregory made that particular decision.</p>
"
"<p>I've got an app that I'm trying to get working again after wiping my system and installing Snow Leopard. I installed Ruby 1.9 from Macports (now a later version) and the dev server starts up just fine, but then dies on the first request, only telling me ""Illegal instruction"". I have no idea what's causing this or even how to go about debugging it. Does anyone have any ideas?</p>
","2988","","<p>""Illegal instruction"" is usually an error message from the CPU meaning some piece of binary code you tried to run contained an instruction that is not implemented on that particular CPU.</p>

<p>This can have multiple reasons:</p>

<ul>
<li>The binary was compiled with optimization settings for the wrong CPU. The CPU vendors add new instructions all the time, if the compiler optimizes for a CPU that is newer than the one you have, it might have emitted an instruction that your CPU doesn't understand.</li>
<li>The compiler is broken.</li>
<li>The binary is corrupted.</li>
<li>The code you are compiling contains assembly code or intrinsics containing instructions that your CPU doesn't have.</li>
</ul>
"
"<p>I have some problem with creating a function to my Rails app.</p>

<p>I want it to work like this:</p>

<pre><code>str = ""string here""
if str.within_range?(3..30)
puts ""It's withing the range!""
end
</code></pre>

<p>To do that I added this into my application helper:</p>

<pre><code>def within_range?(range)
  if self.is_a?(String)
    (range).include?(self.size)
  elsif self.is_a?(Integer)
    (range).include?(self)
  end
end
</code></pre>

<p>I get this error:</p>

<pre><code>undefined method `within_range?' for &amp;quot;&amp;quot;:String
</code></pre>

<p>Does anybody know what the problem is?</p>
","2988","","<blockquote>
  <p>Hello, i have some problem with creating a function to my Rails app.</p>
</blockquote>

<p>Uh oh, right there we run into our first misunderstanding: Ruby is not a <em>functional</em> programming language. It is an <em>object-oriented</em> programming language. There is no such thing as a function in Ruby. Ruby only has <em>methods</em> that live on <em>classes</em>.</p>

<blockquote>
<pre><code>str = 'string here'
puts ""It's within the range!"" if str.within_range?(3..30)
</code></pre>
</blockquote>

<p>Here we can see that you obviously intend to have your method available on string objects. In order for your method to be available on string objects, it needs to be defined on the <code>String</code> class (or any of its ancestors).</p>

<blockquote>
  <p>To do that i added this into my application helper:</p>

<pre><code>def within_range?(range)
  if is_a?(String)
    range.include?(size)
  elsif is_a?(Integer)
    range.include?(self) 
  end
end
</code></pre>
</blockquote>

<p>Here, you are adding the <code>within_range?</code> method to the anymous top-level object and not to the <code>String</code> class. Adding a method to the anymous top-level object, also makes it ""magically"" available as a private method on the <code>Object</code> class which is the superclass of (almost) all classes. Therefore, <code>within_range?</code> is now available on all objects, but it is private, so you can only call it with an implicit receiver.</p>

<p>Which is why I don't understand why you are getting this error:</p>

<blockquote>
  <p>But i get this error:</p>

<pre><code>undefined method `within_range?' for """":String
</code></pre>
</blockquote>

<p>There's two things wrong here: first, the object that Ruby reports the error on should be <code>""string here"":String</code>, not <code>"""":String</code>. This means that you were actually calling the <code>within_range?</code> method on an <em>empty</em> string and <em>not</em> on the string <code>'string here'</code> as your code sample shows. Which means that <em>somewhere else</em> in your code base, <em>before</em> the code sample that you posted here, <code>within_range?</code> <em>already</em> gets called on an empty string.</p>

<p>The second problem is that you are getting the totally <em>wrong</em> error message. Ruby tells you that Ruby couldn't find a <code>within_range?</code> method for strings, i.e. that there is no <code>within_range?</code> method on the <code>String</code> class or any of its superclasses including <code>Object</code>. But there <em>should</em> be! You <em>did</em> (although accidentally) define a private method on <code>Object</code>. The error message that you <em>should</em> be getting is this:</p>

<pre><code>NoMethodError: private method `within_range?' called for ""string here"":String
</code></pre>

<p>This means that the code that defines the method never actually got executed. I am not familiar enough with Ruby on Rails to diagnose why that may be the case, though.</p>

<p>But now on to the contents of the code itself. Like I hinted at above, you need to add this code to the <code>String</code> class. And actually, <em>inside</em> your method, you are dealing with both strings and integers, so you need to add the code to a common superclass of <code>String</code> and <code>Integer</code> and there is only one and that is <code>Object</code>:</p>

<pre><code>class Object
  def within_range?(range)
    if    is_a?(String)  then range.include?(size)
    elsif is_a?(Integer) then range.include?(self) end
  end
end
</code></pre>

<p>[I took the liberty of removing a couple of extra parentheses, <code>self</code>s and newlines.]</p>

<p>There are a couple of problems with this. First: <code>is_a?</code> in Ruby is a Code Smell. It almost always means that you are either doing something wrong or at least something ""un-Rubyish"", like trying to re-implement static typing. (Don't get me wrong: I like static typing, but if I need it, I use a more appropriate language than Ruby.)</p>

<p>In general, if you find yourself using <code>is_a?</code> or its cousins <code>kind_of?</code> and <code>Module#===</code>, you should take a step back and reconsider your design.</p>

<p>Another problem with your code is that you have a condition that examines <code>self</code>. This is even easier to see when we refactor the code to use a <code>case</code> expression instead of an <code>if</code> expression:</p>

<pre><code>class Object
  def within_range?(range)
    case self
    when String  then range.include?(size)
    when Integer then range.include?(self) end
  end
end
</code></pre>

<p>Here, it is easy to see that the object is looking at itself. It should <em>never</em> need to do that! It should always already know everything there is to know about itself. That's as if you had to look in the mirror to know what you are wearing: you shouldn't need to do that, after all you put the clothes on yourself! (And if you need to do that, it is probably the result of some bad decision the night before, just like in programming ...)</p>

<p>A third smell here is the fact that you are doing different things, depending on the type of an object. That's exactly what polymorphism is for: if you say <code>foo.bar</code>, Ruby will call a different version of <code>bar</code>, depending on what the type of <code>foo</code> is. There's no need for you to re-implement this yourself, it's already there.</p>

<p>So, let's step back: what is the method actually doing? Well, if it's called on a string, then it does one thing and if it's called on an integer, it does another thing. So, we are lazy and let Ruby do the work of figuring out which of the two to run:</p>

<pre><code>class String
  def within_range?(range)
    range.include?(size)
  end
end

class Integer
  def within_range?(range)
    range.include?(self)
  end
end
</code></pre>

<p>This is already much simpler and much clearer. And there is another advantage: now, if you call <code>within_range?</code> on an object that it doesn't know about, it will actually <em>tell</em> you that it doesn't know what to do by raising a <code>NoMethodError</code>:</p>

<pre><code>[].within_range?(3..30)
# =&gt; NoMethodError: undefined method `within_range?' for []:Array
</code></pre>

<p>The old version was missing an <code>else</code> clause, so it would have just returned <code>nil</code> which evaluates to <code>false</code> in a boolean context, which means that the error would probably have gone undetected.</p>

<p>There is even more we can do: there is actually nothing here that restricts the method from only working with whole numbers, it could just as easily work with floating point numbers, rationals or even complex numbers. So, instead of defining the second method on <code>Integer</code>, we could instead define it on <code>Numeric</code>.</p>

<p>But if you think about it: there actually isn't even anything that requires it to be a number <em>at all</em>, it could in fact be <em>any object</em>, so we could even define it on <code>Object</code>.</p>

<p>This brings me to the last two problems I have with this method, which are related to each other: I think the name for the <code>String</code> version is misleading, and I don't like that the method does completely different things despite its name being the same.</p>

<p>For an integer (or <em>any</em> object, if we define the method on <code>Object</code>), the method checks whether or not the integer (or object) <em>itself</em> is within the range. But for a string, the method <em>does not</em> check whether or not the string <em>itself</em> is within the range, rather it checks whether the <em>length</em> of the string is within the range. This is completely non-obvious and surprising to me:</p>

<pre><code>  2.within_range?(1..3)     # =&gt; true
'B'.within_range?('A'..'C') # =&gt; false
</code></pre>

<p>I, and I suspect pretty much everybody else who reads that piece of code, would expect <em>both</em> of those to be <code>true</code>. The fact that <code>B</code> is not between <code>A</code> and <code>C</code> is completely confusing.</p>

<p>That's what I meant above: the method does two different things despite having the same name. Also, in the case of the string, the method name implies that it checks whether the string is within a certain range, but it actually checks whether the string <em>length</em> is within an certain range, and there is absolutely no indication in the method name that this is the case.</p>

<p>A much better name would be <code>length_within_range?</code>, and you would call it like so:</p>

<pre><code>'B'.length_within_range?(1..2) # =&gt; true
'B'.within_range?('A'..'C')    # =&gt; true
</code></pre>

<p>[Assuming that <code>within_range?</code> is defined on <code>Object</code>.]</p>

<p>This makes it very clear to everyone reading the code that we are comparing the <em>length</em> of the string and not the string itself.</p>

<p>However, now there really isn't much difference between</p>

<pre><code>str.length_within_range?(3..30)
str.length.within_range?(3..30)
</code></pre>

<p>Which means we can get rid of the string version altogether, leaving us only with the <code>Object</code> version.</p>

<p>The <code>Object</code> version, in turn, doesn't really do anything except flipping argument and receiver around, so we might just as well write</p>

<pre><code>(3..30).include?(str.length)
</code></pre>

<p>and get rid of the whole thing altogether.</p>
"
"<p>Python has the idea of metaclasses that, if I understand correctly, allow you to modify an object of a class at the moment of construction. You are not modifying the class, but instead the object that is to be created then initialized.</p>

<p>Python (at least as of 3.0 I believe) also has the idea of class decorators. Again if I understand correctly, class decorators allow the modifying of the class definition at the moment it is being declared. </p>

<p>Now I believe there is an equivalent feature or features to the class decorator in Ruby, but I'm currently unaware of something equivalent to metaclasses. I'm sure you can easily pump any Ruby object through some functions and do what you will to it, but is there a feature in the language that sets that up like metaclasses do?</p>

<p>So again, Does Ruby have something similar to Python's metaclasses?</p>

<p><strong>Edit</strong> I was off on the metaclasses for Python. A metaclass and a class decorator do very similar things it appears. They both modify the class when it is defined but in different manners. Hopefully a Python guru will come in and explain better on these features in Python.</p>

<p>But a class or the parent of a class can implement a <code>__new__(cls[,..])</code> function that does customize the construction of the object before it is initialized with <code>__init__(self[,..])</code>.</p>

<p><strong>Edit</strong> This question is mostly for discussion and learning about how the two languages compare in these features. I'm familiar with Python but not Ruby and was curious. Hopefully anyone else who has the same question about the two languages will find this post helpful and enlightening. </p>
","2988","","<p>Ruby doesn't have metaclasses. There are some constructs in Ruby which some people sometimes wrongly call metaclasses but they aren't (which is a source of <em>endless</em> confusion).</p>

<p>However, there's a lot of ways to achieve the same results in Ruby that you would do with metaclasses. But without telling us what exactly you want to do, there's no telling what those mechanisms might be.</p>

<p>In short:</p>

<ul>
<li>Ruby doesn't have metaclasses</li>
<li>Ruby doesn't have any one construct that corresponds to Python's metaclasses</li>
<li>Everything that Python can do with metaclasses can also be done in Ruby</li>
<li>But there is no <em>single</em> construct, you will use different constructs depending on what exactly you want to do</li>
<li>Any one of those constructs probably has other features as well that do not correspond to metaclasses (although they probably correspond to something <em>else</em> in Python)</li>
<li>While you can do anything in Ruby that you can do with metaclasses in Python, it might not necessarily be straightforward</li>
<li>Although often there will be a more Rubyish solution that <em>is</em> elegant</li>
<li>Last but not least: while you can do anything in Ruby that you can do with metaclasses in Python, doing it might not necessarily be The Ruby Way</li>
</ul>

<p>So, what <em>are</em> metaclasses exactly? Well, they are classes of classes. So, let's take a step back: what are <em>classes</em> exactly?</p>

<p>Classes &hellip;</p>

<ul>
<li>are factories for objects</li>
<li>define the behavior of objects</li>
<li>define on a metaphysical level what it means to be an instance of the class</li>
</ul>

<p>For example, the <code>Array</code> class produces array objects, defines the behavior of arrays and defines what ""array-ness"" means.</p>

<p>Back to metaclasses.</p>

<p>Metaclasses &hellip;</p>

<ul>
<li>are factories for classes</li>
<li>define the behavior of classes</li>
<li>define on a metaphysical level what it means to be a class</li>
</ul>

<p>In Ruby, those three responsibilities are split across three different places:</p>

<ul>
<li>the <code>Class</code> class creates classes and defines a little bit of the behavior</li>
<li>the individual class's eigenclass defines a little bit of the behavior of the class</li>
<li>the concept of ""classness"" is hardwired into the interpreter, which also implements the bulk of the behavior (for example, you cannot inherit from <code>Class</code> to create a new kind of class that looks up methods differently, or something like that&nbsp;&ndash; the method lookup algorithm is hardwired into the interpreter)</li>
</ul>

<p>So, those three things together play the role of metaclasses, but neither one of those is a metaclass (each one only implements a small part of what a metaclass does), nor is the <em>sum</em> of those the metaclass (because they do much more than that).</p>

<p>Unfortunately, some people call eigenclasses of classes metaclasses. (Until recently, I was one of those misguided souls, until I finally saw the light.) Other people call <em>all</em> eigenclasses metaclasses. (Unfortunately, one of those people is the author of one the most popular tutorials on Ruby metaprogramming and the Ruby object model.) Some popular libraries add a <code>metaclass</code> method to <code>Object</code> that returns the object's eigenclass (e.g. ActiveSupport, Facets, metaid). Some people call <em>all</em> virtual classes (i.e. eigenclasses and include classes) metaclasses. Some people call <code>Class</code> the metaclass. Even within the Ruby source code itself, the word ""metaclass"" is used to refer to things that are not metaclasses.</p>
"
"<p>Python has the idea of metaclasses that, if I understand correctly, allow you to modify an object of a class at the moment of construction. You are not modifying the class, but instead the object that is to be created then initialized.</p>

<p>Python (at least as of 3.0 I believe) also has the idea of class decorators. Again if I understand correctly, class decorators allow the modifying of the class definition at the moment it is being declared. </p>

<p>Now I believe there is an equivalent feature or features to the class decorator in Ruby, but I'm currently unaware of something equivalent to metaclasses. I'm sure you can easily pump any Ruby object through some functions and do what you will to it, but is there a feature in the language that sets that up like metaclasses do?</p>

<p>So again, Does Ruby have something similar to Python's metaclasses?</p>

<p><strong>Edit</strong> I was off on the metaclasses for Python. A metaclass and a class decorator do very similar things it appears. They both modify the class when it is defined but in different manners. Hopefully a Python guru will come in and explain better on these features in Python.</p>

<p>But a class or the parent of a class can implement a <code>__new__(cls[,..])</code> function that does customize the construction of the object before it is initialized with <code>__init__(self[,..])</code>.</p>

<p><strong>Edit</strong> This question is mostly for discussion and learning about how the two languages compare in these features. I'm familiar with Python but not Ruby and was curious. Hopefully anyone else who has the same question about the two languages will find this post helpful and enlightening. </p>
","2988","","<p>Your updated question looks quite different now. If I understand you correctly, you want to hook into object allocation and initialization, which has absolutely nothing whatsoever to do with metaclasses. (But you <em>still</em> don't write what it is that you actually want to do, so I might still be off.)</p>

<p>In some object-oriented languages, objects are created by constructors. However, Ruby doesn't have constructors. Constructors are just factory methods (with stupid restrictions); there is no reason to have them in a well-designed language, if you can just use a (more powerful) factory method instead.</p>

<p>Object construction in Ruby works like this: object construction is split into two phases, <em>allocation</em> and <em>initialization</em>. Allocation is done by a public class method called <code>allocate</code>, which is defined as an instance method of class <code>Class</code> and is generally <em>never</em> overriden. (In fact, I don't think you actually <em>can</em> override it.) It just allocates the memory space for the object and sets up a few pointers, however, the object is not really usable at this point.</p>

<p>That's where the initializer comes in: it is an instance method called <code>initialize</code>, which sets up the object's internal state and brings it into a consistent, fully defined state which can be used by other objects.</p>

<p>So, in order to fully create a new object, what you need to do is this:</p>

<pre><code>x = X.allocate
x.initialize
</code></pre>

<p>[Note: Objective-C programmers may recognize this.]</p>

<p>However, because it is too easy to forget to call <code>initialize</code> and as a general rule an object should be fully valid after construction, there is a convenience factory method called <code>Class#new</code>, which does all that work for you and looks something like this:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate
    obj.initialize(*args, &amp;block)

    return obj
  end
end
</code></pre>

<p>[Note: actually, <code>initialize</code> is private, so reflection has to be used to circumvent the access restrictions like this: <code>obj.send(:initialize, *args, &amp;block)</code>]</p>

<p>That, by the way, is the reason why to construct an object you <em>call</em> a public class method <code>Foo.new</code> but you <em>implement</em> a private instance method <code>Foo#initialize</code>, which seems to trip up a lot of newcomers.</p>

<p>However, <em>none</em> of this is in any way baked into the language. The fact that the primary factory method for any class is usually called <code>new</code> is just a convention (and sometimes I wish it were different, because it looks similar to constructors in Java, but is <em>completely</em> different). In other languages, the constructor must have a specific name. In Java, it must have the same name as the class, which means that a) there can be only one constructor and b) anonymous classes can't have constructors because they don't have names. In Python, the factory method must be called <code>__new__</code>, which again means there can be only one. (In both Java and Python, you can of course have different factory methods, but calling them looks different from calling the default, while in Ruby (and Smalltalk from whence this pattern originated) it looks just the same.)</p>

<p>In Ruby, there can be as many factory methods as you like, with any name you like, and a factory method can have many different names. (For collection classes, for example, the factory method is often aliased to <code>[]</code>, which allows you to write <code>List[1, 2, 3]</code> instead of <code>List.new(1, 2, 3)</code> which ends looking more like an array, thus emphasizing the collection-ish nature of lists.)</p>

<p>In short:</p>

<ul>
<li>the standardized factory method is <code>Foo.new</code>, but it can be anything</li>
<li><code>Foo.new</code> calls <code>allocate</code> to allocate memory for an empty object <code>foo</code></li>
<li><code>Foo.new</code> then calls <code>foo.initialize</code>, i.e. the <code>Foo#initialize</code> instance method</li>
<li>all three of those are just methods like any other, which you can undefine, redefine, override, wrap, alias and whatnot</li>
<li>well, except <code>allocate</code> which needs to allocate memory inside the Ruby runtime which you can't really do from Ruby</li>
</ul>

<p>In Python, <code>__new__</code> roughly corresponds to both <code>new</code> and <code>allocate</code> in Ruby, and <code>__init__</code> <em>exactly</em> corresponds to <code>initialize</code> in Ruby. The main difference is that in Ruby, <code>new</code> calls <code>initialize</code> whereas in Python, the <em>runtime</em> automatically calls <code>__init__</code> after <code>__new__</code>.</p>

<p>For example, here is a class which only allows a maximum of 2 instances created:</p>

<pre><code>class Foo
  def self.new(*args, &amp;block)
    @instances ||= 0
    raise 'Too many instances!' if @instances &gt;= 2

    obj = allocate
    obj.send(:initialize, *args, &amp;block)

    @instances += 1

    return obj
  end

  attr_reader :name

  def initialize(name)
    @name = name
  end
end

one = Foo.new('#1')
two = Foo.new('#2')
puts two.name         # =&gt; #2
three = Foo.new('#3') # =&gt; RuntimeError: Too many instances!
</code></pre>
"
"<p>I'm trying to create permalink like behavior for some article titles and i don't want to add a new db field for permalink. So i decided to write a helper that will convert my article title from:</p>

<p>""<em>O ""focoasă"" a pornit cruciada, împotriva bărbaţilor zgârciţi</em>"" to 
 ""<em>o-focoasa-a-pornit-cruciada-impotriva-barbatilor-zgarciti</em>"". </p>

<p>While i figured out how to replace spaces with hyphens and remove other special characters (other than -) using: </p>

<pre><code>title.gsub(/\s/, ""-"").gsub(/[^\w-]/, '').downcase
</code></pre>

<p>I am wondering if there is any other way to replace a character with a specific other character from only one .gsub method call, so I won't have to chain title.gsub(""ă"", ""a"") methods for all the UTF-8 special characters of my localization.</p>

<p>I was thinking of building a hash with all the special characters and their counterparts but I haven't figured out yet how to use variables with regexps.</p>

<p>What I was looking for is something like:</p>

<pre><code>title.gsub(/\s/, ""-"").gsub(*replace character goes here*).gsub(/[^\w-]/, '').downcase
</code></pre>

<p>Thanks!</p>
","2988","","<p>If you want to only transliterate from one character to another, you can use the <code>String#tr</code> method which does exactly the same thing as the Unix <code>tr</code> command: replace every character in the first list with the character in the same position in the second list:</p>

<pre><code>'Ünicöde'.tr('ÄäÖöÜüß', 'AaOoUus') # =&gt; ""Unicode""
</code></pre>

<p>However, I agree with @Daniel Vandersluis: it would probably be a good idea to use some more specialized library. Stuff like this can get really tedious, really fast. Also, a lot of those characters actually have standardized transliterations (ä &rarr; ae, ö &rarr; oe, ..., ß &rarr; ss), and users may be expecting to have the transliterations be correct (I certainly don't like being called Jorg&nbsp;&ndash; if you really must, you may call me Joerg but I very much prefer Jörg) and if you have a library that provides you with those transliterations, why not use them? Note that there are a lot of transliterations which are not single characters and thus can't be used with <code>String#tr</code> anyway.</p>
"
"<p>As far as I know, <code>should_receive</code> is applied only to mock objects. What I want is to check, if a certain Class (not object) received a certain message, like:</p>

<pre><code>User.should_receive(:all).once
</code></pre>

<p>How do I do that?</p>

<p>UPD. Commonly, writing test for models and controllers we <em>can</em> write User.should_receive(:smth).once. But in my case I'm testing an arbitrary class from the lib folder, and somehow I always receive the following message:</p>

<pre><code>&lt;User( [fields] ) (class)&gt; expected :all with (no args) once, but received it 0 times&gt;
</code></pre>

<p>Any ideas on why is that so? A test somehow sees the User class, but can't check if it receives a message. Of course I've ten times checked that the User <em>is</em> actually getting a message.</p>
","2988","","<p>Easy:</p>

<pre><code>User.should_receive(:all).once
</code></pre>

<blockquote>
  <p>What I want is to check, if a certain Class (not object) received a certain message</p>
</blockquote>

<p>A class <em>is</em> an object!</p>
"
"<p>This simple test, of course, works as expected:</p>

<pre>
scala> var b = 2
b: Int = 2

scala> b += 1   

scala> b
res3: Int = 3
</pre>

<p>Now I bring this into scope:</p>

<pre>
class A(var x: Int) { def +=(y:Int) { this.x += y } }
implicit def int2A(i:Int) : A = new A(i)             
</pre>

<p>I'm defining a new class and a += operation on it, and a convenient implicit conversion for those times when I want to add an Int to A's Int value. </p>

<p>I never expected this would affect the way my regular Int operations behave, when the ""A"" class is not at all part of the expression.</p>

<p>But it does:</p>

<pre>
scala> var b:Int = 0
b: Int = 0

scala> b += 1

scala> b  
res29: Int = 0

scala> b += 2

scala> b
res31: Int = 0
</pre>

<p>What seems to be happening here is that the b:Int is implicitly converted to an ""A"", which is not bound to any variable, and then += is invoked on it, discarding the results.</p>

<p>Scala seems to give high precedence the implicit conversion over the natural += behavior (compiler magic, not an actual method) that is already defined to Ints. Common-sense as well as a C++ background tells me implicits should only be invoked as a last resort, when the compilation would otherwise fail. That leads to several questions...</p>

<ul>
<li>Why? Is this a bug? Is it by design?</li>
<li>Is there a work-around (other than not using ""+="" for my DSL's ""+="" operation)?</li>
</ul>

<p>Thanks</p>
","2988","","<blockquote>
  <p>Scala seems to give high precedence the implicit conversion over the natural <code>+=</code> that is already defined to <code>Int</code>s.</p>
</blockquote>

<p>Which version of Scala are you talking about? I don't know of any version that has a <code>+=</code> method on <code>Int</code>. Certainly, none of the still supported versions do, that must be some <em>really</em> ancient version you have there.</p>

<p>And since there is no <code>+=</code> on <code>Int</code>, but you are <em>calling</em> a <code>+=</code> method on <code>Int</code>, Scala tries to satisfy that type constraint via an implicit conversion.</p>
"
"<p>I want to associate custom metadata with a git commit.  Specifically to record a review ID from a code review but it could be anything.  Tags seem a natural way to do that but I expect to have a review for every commit and I don't want to clutter gitk with tons of tags.  Is there some other mechanism to add custom metadata?  Can I make certain tags invisible?  If I could tell gitk not to display tags matching some pattern or RE, that would likely work but I don't see a way to do that.</p>
","2988","","<p>That's precisely what <a href=""http://Kernel.Org/pub/software/scm/git/docs/git-notes.html"">git notes</a> are for.</p>
"
"<p>I have a reStructuredText document. rST uses <code>=====</code>, etc. as a heading format.</p>

<p>However I need to include some lines that have this text in it, e.g.:</p>

<pre><code>some of my text
=====
stuff
=====
some more of my text
</code></pre>

<p>And I don't want the <code>====</code> to be interpreted as a heading, i.e. I don't want <code>stuff</code> to be a heading. I would rather that those equal signs are just displayed as is.</p>

<p>Is this possible in rST?</p>
","2988","","<p>The escape character in reStructuredText is <code>\</code>:</p>

<pre><code>some of my text
\=====
stuff
=====
some more of my text
</code></pre>

<p>Will be rendered as:</p>

<pre><code>some of my text ===== stuff ===== some more of my text
</code></pre>
"
"<p>What application virtual machines are out there that are written in higher level languages? C/C++ looks like the languages of choice (for obvious reasons). </p>

<p>What I have found on google is at least two written in Java (both meta-circular) :
JikesRVM and Maxine.</p>

<p>Anything else that you have found?</p>
","2988","","<ul>
<li>Many Scheme implementations are written in Scheme and although many of those are compilers or interpreters, some of those are VMs, </li>
<li>some CommonLisp implementations are written in CommonLisp and although many of those are compilers or interpreters, some of those are VMs, </li>
<li>the <a href=""http://PyPy.Org/"" rel=""nofollow"">PyPy</a> VM is written in RPython, which is a subset of Python with ""syntax and semantics of Python, speed of C, restrictions of Java and compiler error messages as penetrable as MUMPS"", </li>
<li>the <a href=""http://SqueakVM.Org/"" rel=""nofollow"">Squeak Smalltalk VM</a> is written in Slang (a subset of Squeak Smalltalk) and </li>
<li>the <a href=""http://KleinVM.SourceForge.Net/"" rel=""nofollow"">Klein Metacircular VM</a> is written entirely in Self.</li>
</ul>

<p>Of those, the most interesting are Klein and Maxine (whose design is actually based on Klein). Metacircular Lisp and Scheme implementations usually assume the existence of some basic primitive special forms, which then have to be implemented in assembler, C or a limited subset of the language in a low-level style. Squeak and PyPy use a limited subset of the language. Jikes uses ""magic"" methods and low-level style.</p>

<p>The idea of Klein and Maxine is that <em>everything</em> is written in high-level, object-oriented, expressive, idiomatic style. In the current version of Klein, there are only two tiny places where the style is hampered by some restriction: in the implementation of message sending, you cannot send any messages and in the implementation of object cloning you cannot clone any objects. However, the current compiler <em>can</em> actually inline or even completely optimize away object cloning and message sending, so those two places could be rewritten in normal OO Self style&nbsp;&ndash; it's just that nobody has done it yet.</p>

<p>All of that was just metacircular VMs. There's also other VMs written in high-level languages:</p>

<ul>
<li><a href=""http://HotRuby.Yukoba.Jp/"" rel=""nofollow"">HotRuby</a> is a Ruby VM (actually, a YARV VM) written in JavaScript, </li>
<li><a href=""https://GitHub.Com/JonathanBranam/RedSun/"" rel=""nofollow"">Red Sun</a> is a Ruby VM (actually, a YARV VM) written in ActionScript, </li>
<li><a href=""http://Yokolet.BlogSpot.Com/2010/02/rava-pure-ruby-javavm.html"" rel=""nofollow"">Rava</a> is a JVM-like VM written in Ruby by Koichi ""ko1"" Sasada, the author of YARV and </li>
<li><a href=""http://Ruva.RubyForge.Org/"" rel=""nofollow"">Ruva</a> is a JVM-like VM written in Ruby</li>
</ul>
"
"<p>Here's what I'm doing atm:</p>

<pre><code>test = {
  'd' =&gt; 20,
  'b' =&gt; 40,
  'c' =&gt; 30,
  'a' =&gt; 50,
  'e' =&gt; 10
}

f = []
test.to_a.sort.each do |e|
  f &lt;&lt; e[1]
end
puts f.join(' ')
</code></pre>

<p>Outputs:</p>

<pre><code>50 40 30 20 10
</code></pre>

<p>Is there a more efficient/concise/better way to do this? And before someone says so, no, I can't use an array. :p</p>

<p><strong>EDIT</strong> Sorry, posted the wrong code.</p>
","2988","","<pre><code>test.sort_by(&amp;:first).map(&amp;:last).join(' ')
</code></pre>

<p>Unfortunately, Ruby doesn't have a class for representing <code>Hash</code> entries (key-value pairs), but just uses a two-element array instead. If Ruby <em>did</em> have a dedicated class for key-value pairs, this would be much less opaque:</p>

<pre><code>test.sort_by(&amp;:key).map(&amp;:value).join(' ')
</code></pre>

<p>And, of course, the fact that <code>Enumerable#sort_by</code> returns an <code>Array</code>, is also quite unfortunate. If it returned a <code>SortedMap</code> or something like that, it would be even nicer:</p>

<pre><code>test.sort_by(&amp;:key).values.join(' ')
</code></pre>
"
"<p>It is often said that, you should not rebase commits that you have already pushed. What could be meaning of that? </p>
","2988","","<p>Rebasing rewrites history. If nobody knows about that history, then that is perfectly fine. If, however, that history is publicly known, then rewriting history in Git works just the way it does in the real world: you need a conspiracy.</p>

<p>Conspiracies are <em>really</em> hard keep together, so you better avoid rebasing public branches in the first place.</p>

<p>Note that there <em>are</em> examples of successful conspiracies: the <code>pu</code> branch of Junio C. Hamano's git repository (the official repository of the Git SCM) is rebased frequently. The way that this works is that pretty much everybody who uses <code>pu</code> is also subscribed to the Git developer mailinglist, and the fact that the <code>pu</code> branch is rebased is widely publicized on the mailinglist and the Git website.</p>
"
"<p>How can I call parents constructor ?</p>

<pre><code>module C
    attr_accessor :c, :cc
    def initialization c, cc
        @c, @cc = c, cc
    end 
end

class B
    attr_accessor :b, :bb
    def initialization b, bb
        @b, @bb = b, bb
    end 
end


class A &lt; B
    include C
    attr_accessor :a, :aa
    def initialization (a, b, c, aa, bb, cc)
        #call B::initialization - ?
        #call C::initialization - ?
        @a, @aa = a, aa
    end
end
</code></pre>

<p>Thanks.</p>
","2988","","<p>Ruby doesn't have constructors, therefore it's obviously not possible to call them, parent or otherwise. Ruby <em>does</em> have methods, however, and in order to call the parent's method with the same name as the currently executing method, you can use the <code>super</code> keyword. [Note: <code>super</code> without arguments is a shortcut for passing the same arguments that were passed into the currently executing method. If you actually want to pass <em>no</em> arguments, you have to do so explicitly: <code>super()</code>.]</p>
"
"<p>I'm looking for the C grammar in GCC source code, more specifically for the grammar in the yacc/bison form. </p>
","2988","","<p>GCC doesn't use a generated parser; its parser is a hand-written recursive-descent parser.</p>
"
"<p>Much like lisp is often considered a list based programming language what languages are considered map based?</p>

<p>I remember reading about one a few years back, but can not longer find a reference to it. It looked something like:</p>

<pre><code>[if:test then:&lt;code&gt; else:&lt;more code&gt;]
</code></pre>

<p>edit:
 and more  where quoted code blocks which would be conditional evaluated. In this fashion if/cond and others would not be special form as they are in lisp/scheme.</p>

<p>The syntax above is supposed to be map/dictionary like just like lisp's syntax is list like.</p>

<p>if would be a key with the value of test.</p>

<p>then would be a key with the value of .</p>

<p>...</p>
","2988","","<p>That looks very much like <a href=""http://Thimbleby.Net/misc/"">MISC</a>, a lazy Lisp with maps instead of lists as the fundamental datatype. (It's also lazy, has deep integration of metadata (similar to Clojure) and a couple of other things, but it is still very much a Lisp: functional, homoiconic, macros, implemented as a metacircular interpreter, all the good stuff.)</p>

<p>Here's some code samples from the <a href=""http://Thimbleby.Net/blog/?p=24"">blog</a>:</p>

<pre><code>[if [&gt; 5 10] then:[+ 5 10] else:[- 5 10]]

[let '[square:[lambda '[x:1] '[* x x]]]
    '[square 12]
]

[take 20 [numbers from:0]]
</code></pre>

<p>Unfortunately, it seems that besides two <a href=""http://Thimbleby.Net/blog/?p=24"">blog</a> <a href=""http://Thimbleby.Net/blog/?p=25"">articles</a> from long ago, there's not much going on anymore.</p>
"
"<p>I'm confused about an OOP feature, multiple inheritance. Does OOP allow Multiple Inheritance? Is Multiple Inheritance a feature of OOP? If Multiple Inheritance is a feature then why don't languages like C#, VB.NET, java etc. support multiple inheritance?  But those languages are considered as strongly supported OOP language. Can anyone address this question?</p>
","2988","","<p>Inheritance doesn't have anything to do with object orientation. There's plenty of OO languages that do not support inheritance <em>at all</em> and there's plety of non-OO languages that <em>do</em> support inheritance. Those two things are <em>completely</em> orthogonal.</p>
"
"<p>I'm looking for a project generator which can build project files for various IDEs like Visual Studio, XCode, SharpDevelop, CodeBlocks, etc and which supports both C/C++ and C# projects.</p>

<p>I've looked at CMake, but it seems like it lacks C# support.</p>

<p>Anyone have any suggestions?</p>
","2988","","<p><a href=""http://IndustriousOne.Com/premake/"" rel=""nofollow"">Premake</a> can generate project files for Visual Studio, MonoDevelop, SharpDevelop, XCode, Code::Blocks, CodeLite and plain GNU Make, and it supports building C#, C++ and C projects for  tons of platforms from Unix, Linux, OSX, Windows to crosscompiling for PlayStation 3 and XBox 360.</p>
"
"<p>Are there any example for a recursive function that call an other one which calls the first one too ?</p>

<p>example </p>

<pre><code>function1()
{    
    //do something 
    f2();
    //do something
}

function2()
{
    //do something 
    f1();
    //do something
}
</code></pre>
","2988","","<p>In a language with proper tail calls, Mutual Tail Recursion is a very natural way of implementing automata.</p>
"
"<p>How can I get the first character in a string using Ruby?</p>

<p>Ultimately what I'm doing is taking someone's last name and just creating an initial out of it.</p>

<p>So if the string was ""Smith"" I just want ""S"".</p>
","2988","","<p>If you use a recent version of Ruby (1.9.0 or later), the following should work:</p>

<pre><code>'Smith'[0] # =&gt; 'S'
</code></pre>

<p>If you use either 1.9.0+ or 1.8.7, the following should work:</p>

<pre><code>'Smith'.chars.first # =&gt; 'S'
</code></pre>

<p>If you use a version older than 1.8.7, this should work:</p>

<pre><code>'Smith'.split(//).first # =&gt; 'S'
</code></pre>

<p>Note that <code>'Smith'[0,1]</code> does <em>not</em> work on 1.8, it will <em>not</em> give you the first character, it will only give you the first <em>byte</em>.</p>
"
"<p>My friend was asked the following question: what's the difference between object language and object-oriented language?</p>

<p>It's a little unintelligible question. What does term «object language» correspond to? Does that mean «pure» object-oriented language, like the <a href=""http://en.wikipedia.org/wiki/Object-oriented_programming"">Wikipedia article</a> says:</p>

<blockquote>
  <p>Languages called ""pure"" OO languages, because everything in them is treated consistently as an object, from primitives such as characters and punctuation, all the way up to whole classes, prototypes, blocks, modules, etc. They were designed specifically to facilitate, even enforce, OO methods. Examples: Smalltalk, Eiffel, Ruby, JADE, VB.NET.</p>
</blockquote>
","2988","","<ul>
<li>The term <em>object</em> does not have an official, widely used or otherwise well-known definition.</li>
<li>The term <em>object language</em> does not have an official, widely used or otherwise well-known definition.</li>
<li>The term <em>object-oriented</em> does have an official definition, but that is usually completely ignored, not widely used nor otherwise well-known.</li>
<li>The term <em>object-oriented language</em> does not have a single official, widely used or otherwise well-known definition, it is usually understood to mean
<ul>
<li>a language in which object-oriented programming is possible or </li>
<li>a language in which <em>only</em> object-oriented programming is possible or </li>
<li>a language in which object-oriented programming is easy or </li>
<li>a language in which object-oriented programming is easy and non-object-oriented programming is hard or </li>
<li>a language in which everything is an object or </li>
<li>any combination of the above or </li>
<li>something completely different (and note that in any of the above you can substitute arbitrary definitions for ""object"" and ""object-oriented"")</li>
</ul></li>
</ul>

<p>In short: the interview question roughly translates to ""what's the difference between this thing I'm not going to tell you what it is and that other thing I'm also not going to tell you what it is?""</p>
"
"<p>Does anyone have a recommendation for an open-source or paid (either packaged or SaaS) solution for integrating collaborative development features into your own website?  Here's more details:</p>

<p>We currently host an online plugin gallery for our product. Users can upload and download plugins. But users can't easily collaborate on a plugin's development, can't easily report and track bugs on a plugin, can't easily track a plugin's versions or roadmap, etc.</p>

<p>Of course, contributors can host their plugin development on github, sourceforge, google code, codeplex, etc.  But keeping users on our website has some advantages. For example:</p>

<ul>
<li>We can use single-sign-on to avoid yet another username/password required</li>
<li>we can integrate end-user issue tracking into our existing online issue-tracking systems </li>
<li>we can get integrated analytics so we can better meet the needs of top contributors as well as downloaders</li>
<li>We can easily reward reputation points to committers just like we do for people who answer lots of questions</li>
</ul>

<p>Anyone know a good solution for white-label sites for open-source project developer collaboration?</p>
","2988","","<p>Since you mentioned GitHub and SourceForge:</p>

<ul>
<li><a href=""http://FI.GitHub.Com/"" rel=""nofollow"">GitHub:FI</a> is a white-label version of GitHub</li>
<li>SourceForge used to be available as a white-label version at some point, I have no idea whether that is still true though (Hmm, it seems it is called <a href=""http://WWW.Open.Collab.Net/products/ctf/"" rel=""nofollow"">CollabNet TeamForge</a> now)</li>
<li>before that, SourceForge actually was Open Source up until version 3, and there exist multiple forks of the original software:
<ul>
<li><a href=""http://Gna.Org/projects/savane/"" rel=""nofollow"">Savane</a>, a fork started by the GNU project, the software powering <a href=""http://Savannah.GNU.Org/"" rel=""nofollow"">GNU Savannah</a> and <a href=""http://Gna.Org/"" rel=""nofollow"">Gna!</a></li>
<li><a href=""http://GForge.Org/"" rel=""nofollow"">GForge</a>, a fork started by one of the SourceForge developers, the software powering <a href=""http://Alioth.Debian.Org/"" rel=""nofollow"">Alioth</a> (until recently) and <a href=""http://RubyForge.Org/"" rel=""nofollow"">RubyForge</a>
<ul>
<li><a href=""http://FusionForge.Org/"" rel=""nofollow"">FusionForge</a>, a fork of GForge by three of the developers after the parent company took GForge proprietary, the software powering <a href=""http://Alioth.Debian.Org/"" rel=""nofollow"">Alioth</a></li>
</ul></li>
</ul></li>
</ul>

<p><a href=""http://Gitorious.Org/"" rel=""nofollow"">Gitorious</a> is an open source competitor to GitHub. <a href=""https://Launchpad.Net/"" rel=""nofollow"">Launchpad</a> is going to be released as open source sometime this year, and is also available or sale and/or rent right now, I believe. FogBugz launched <a href=""http://FogCreek.Com/kiln/"" rel=""nofollow"">Kiln</a>, a Mercurial hosting and code review service.</p>
"
"<p>Hey,Everyone!
   the question is that the title say! who can tell me how do this in ruby!</p>
","2988","","<p>With Ruby 1.9, that's particularly easy, because all strings carry their encoding with them:</p>

<pre><code># coding: UTF-8

u = 'µ'
</code></pre>

<p>As you can see, the string is encoded as UTF-8:</p>

<pre><code>p u.encoding   # =&gt; #&lt;Encoding:UTF-8&gt;
p u.bytes.to_a # =&gt; [194, 181]
</code></pre>

<p>Transcoding the string is quite easy:</p>

<pre><code>i = u.encode('ISO-8859-1')
</code></pre>

<p><code>i</code> is now in ISO-8859-1 encoding:</p>

<pre><code>p i.encoding   # =&gt; #&lt;Encoding:ISO8859-1&gt;
p i.bytes.to_a # =&gt; [181]
</code></pre>

<p>If you want to write to a file, the network, an IO stream or the console, it gets even easier. In Ruby 1.9, those objects are tagged with an encoding just like strings are, and transcoding happens automatically. Just say <code>print</code> or <code>puts</code> and Ruby will do the transcoding for you:</p>

<pre><code>File.open('test.txt', 'w', encoding: 'ISO-8859-1') do |f|
  f.puts u
end
</code></pre>
"
"<p>Does OS kernel use Virtual memory or Can some part of the OS kernel reside in Hard Disk? </p>
","2988","","<p>Which OS Kernel?</p>

<p>Some OS Kernels use Virtual Memory, some don't. Many modern Operating Systems don't even <em>have</em> Virtual Memory anymore. (VM is only required for C, C++ or similar pointer-unsafe languages, but the majority of languages and platforms in use today are pointer-safe (e.g. JavaScript, Python, Ruby, PHP, Perl, Java, CLI minus <code>unsafe</code>), so there's really no need for VM anymore.)</p>
"
"<p>Hey Friends, I'm trying to implement a java ""hash"" function in ruby. </p>

<p>Here's the java side:</p>

<pre><code>import java.nio.charset.Charset;
import java.security.MessageDigest;

/**
 * @return most significant 8 bytes of the MD5 hash of the string, as a long
 */
protected long hash(String value) {
  byte[] md5hash;
  md5hash = md5Digest.digest(value.getBytes(Charset.forName(""UTF8"")));
  long hash = 0L;
  for (int i = 0; i &lt; 8; i++) {
    hash = hash &lt;&lt; 8 | md5hash[i] &amp; 0x00000000000000FFL;
  }
  return hash;
}
</code></pre>

<p>So far, my best guess in ruby is:</p>

<pre><code># WRONG - doesn't work properly.
#!/usr/bin/env ruby -wKU

require 'digest/md5'
require 'pp'

md5hash = Digest::MD5.hexdigest(""0"").unpack(""U*"")
pp md5hash
hash = 0
0.upto(7) do |i|
  hash = hash &lt;&lt; 8 | md5hash[i] &amp; 0x00000000000000FF
end
pp hash
</code></pre>

<p>Problem is, this ruby code doesn't match the java output. </p>

<p>For reference, the above java code given these strings returns the corresponding long:</p>

<pre><code>""00038c53790ecedfeb2f83102e9115a522475d73"" =&gt; -2059313900129568948
""0"" =&gt; -3473083983811222033
""001211e8befc8ac22dd265ecaa77f8c227d0007f"" =&gt; 3234260774580957018
</code></pre>

<p>Thoughts:</p>

<ul>
<li>I'm having problems getting the UTF8 bytes from the ruby string</li>
<li>In ruby I'm using <code>hexdigest</code>, I suspect I should be using just <code>digest</code> instead</li>
<li>The java code is taking the md5 of the UTF8 bytes whereas my ruby code is taking the bytes of the md5 (as hex) </li>
</ul>

<p>Any suggestions on how to get the exact same output in ruby?</p>
","2988","","<pre><code>require 'digest/md5'

class String
  def my_hash
    hi1, hi2, mid, lo = *Digest::MD5.digest(self).unpack('cCnN')
    hi1 &lt;&lt; 56 | hi2 &lt;&lt; 48 | mid &lt;&lt; 32 | lo
  end
end

require 'test/unit'
class TestMyHash &lt; Test::Unit::TestCase
  def test_that_my_hash_hashes_the_string_0_to_negative_3473083983811222033
    assert_equal -3473083983811222033, '0'.my_hash
  end
end
</code></pre>
"
"<p>Being a developer born and raised on OO, I was curious to hear how it's possible to avoid global state in a procedural program.</p>
","2988","","<p>A global variable is nothing but an implicit procedure argument. Make it <em>explicit</em> and the global variable goes away.</p>

<p>Note: the fact that you no longer use a global <em>variable</em> does not mean that you no longer use global <em>state</em>! What we did above was just a purely syntactical transformation, the semantics of the program haven't changed at all. It's just as non-composable, non-modular, non-threadsafe, non-parallelizable as it was before.</p>
"
"<p>are compilers in different languages????</p>
","2988","","<p>Here's a couple of examples:</p>

<ul>
<li>the Rubinius Ruby compiler is written in Ruby, </li>
<li>the YARV Ruby compiler is written in C, </li>
<li>the XRuby Ruby compiler is written in Java, </li>
<li>the Ruby.NET Ruby compiler is written in C#, </li>
<li>the MacRuby Ruby compiler is written in Objective-C, </li>
<li>the IronJS ECMAScript compiler is written in F#, </li>
<li>the MS Visual F# compiler is written in F#, </li>
<li>the MS Visual C# compiler is written in C++, currently being rewritten in C#, </li>
<li>the MS Visual Basic.NET compiler is written in C++, currently being rewritten in Visual Basic.NET, </li>
<li>the GCC C compiler is written in C, </li>
<li>the Clang C compiler is written in C++, </li>
<li>most Pascal compilers are written in Pascal, </li>
<li>most Oberon compilers are written in Oberon, </li>
<li>both the 6g/8g and the gccgo Go compilers are written in C.</li>
</ul>

<p>In general, compilers can be written in <em>any</em> language that is actually powerful enough to write a compiler in. This obviously includes any Turing-complete language. But it might even be possible to write a compiler in a non-Turing-complete language. (For example, I don't see any obvious reason why a compiler couldn't be a total function, but total functions are obviously not Turing-complete.)</p>

<p>In practice, however, compilers are mostly written in three specific classes of languages with different pros and cons:</p>

<ol>
<li>the same language that the compiler implements (pros: larger community, because everybody who knows the language can work on the compiler, otherwise they would need to know both languages; cons: the bootstrap problem)</li>
<li>the primary low-level systems programming language of the platform the compiler is supposed to run on, e.g. C on Unix, Java on the JVM, C# on the CLI (pros: very fast; cons: oftentimes those languages are simply not very good for writing compilers, also I don't actually believe that the performance benefits are real)</li>
<li>a language that is very good for writing compilers like ML, Haskell, Lisp, Scheme (pros: those compilers tend to be very easy to understand and hack on; cons: you still need to know both languages)
<ol>
<li>special case of the above: a domain-specific language for writing compilers, like OMeta or for the parsing frontend ANTLR, YACC (pros: same as above but even more so; cons: same as above)</li>
</ol></li>
</ol>

<p>All of these are essentially tradeoffs: writing the compiler in the same language makes it easier to understand, because you don't have to learn another language. It can also make it harder to understand because the language isn't actually very good at writing compilers. (Imagine, for example, writing a SQL compiler in SQL.) It might even be <em>impossible</em> to write a compiler, for example (for a pretty loose definition of ""language"" and ""compiler"") it is impossible to write a CSS compiler in CSS or an HTML compiler in HTML.</p>

<p>On the opposite side: writing the compiler in a specialized compiler-writing language probably makes it easier to understand, but at the same time it requires you to learn a new language.</p>

<p>Note that the three classes are not disjoint: a compiler can fall into more than one class. For example, a compiler for a specialized compiler-writing language, written in itself falls both into category 1 (written in itself) and 3 (written in a language good at writing compilers).</p>

<p>In some cases, you are actually able to hit the sweet spot. For example, F# is a native language with native speed on the CLI, and it is very good at writing compilers. So, writing the F# compiler in F# gives you #1 (writing in itself), #2 (writing in a native, fast language) and #3 (writing in a language that is good for writing compilers). The same applies to Scala.</p>
"
"<p>What is the difference between unit tests and functional tests? Can a unit test also test a function?</p>
","2988","","<ul>
<li><p>A unit test tests an <em>independent unit of behavior</em>. What is a unit of behavior? It's the smallest piece of the system that can be independently unit tested. (This definition is actually circular, IOW it's really not a definition <em>at all</em>, but it seems to work quite well in practice, because you can sort-of understand it intuitively.)</p></li>
<li><p>A functional test tests an independent piece of functionality.</p></li>
</ul>

<hr>

<ul>
<li><p>A unit of behavior is very small: while I absolutely dislike this stupid ""one unit test per method"" mantra, from a <em>size</em> perspective it is about right. A unit of behavior is something between a part of a method and maybe a couple of methods. At most an object, but not more than one.</p></li>
<li><p>A piece of functionality usually comprises many methods and cuts across several objects and often through multiple architectural layers.</p></li>
</ul>

<hr>

<ul>
<li><p>A unit test would be something like: when I call the <code>validate_country_code()</code> function and pass it the country code <code>'ZZ'</code> it should return <code>false</code>.</p></li>
<li><p>A functional test would be: when I fill out the shipping form with a country code of <code>ZZ</code>, I should be redirected to a help page which allows me to pick my country code out of a menu.</p></li>
</ul>

<hr>

<ul>
<li><p>Unit tests are written by developers, for developers, from the developer's perspective.</p></li>
<li><p>Functional tests may be user facing, in which case they are written by developers together with users (or maybe with the right tools and right users even by the users themselves), for users, from the user's perspective. Or they may be developer facing (e.g. when they describe some internal piece of functionality that the user doesn't care about), in which case they are written by developers, for developers, but still from the user's perspective.</p></li>
</ul>

<hr>

<ul>
<li><p>In the former case, the functional tests may also serve as acceptance tests and as an executable encoding of functional requirements or a functional specification, in the latter case, they may also serve as integration tests.</p></li>
<li><p>Unit tests change frequently, functional tests should never change within a major release.</p></li>
</ul>

<hr>
"
"<p>The question pretty much says it all, I've been looking around for an answer even through the VM spec but I it doesn't explicitly state it.</p>
","2988","","<p>No.</p>

<p>There are some other JVMs with tracing JITs, though: <a href=""http://HotPath.GoogleCode.Com/"" rel=""nofollow"">HotPath</a> and <a href=""http://Labs.Oracle.Com/projects/maxine/"" rel=""nofollow"">Maxine</a>, for example.</p>
"
"<p>Quite-probably a silly question, as I don't know much about Java/Jython/JRuby/bytecode, but..</p>

<p>I stumbled across <a href=""http://github.com/devyn/unholy"" rel=""nofollow"">_why's unholy</a> again today.. It allows you to output Python bytecode from Ruby code.. Basically allowing them to produce the same bytecode..</p>

<p>Jython outputs Java bytecode, as does JRuby.. Since these both compile to the same bytecode, does this mean you could potentially use any Python library from Ruby, and Ruby libraries from Python?</p>
","2988","","<p>No, that won't work. At least not the way you think it would.</p>

<p>Interoperability between Jython and JRuby works the same way as between CPython and YARV: they both run on the same platform, so they can communicate with each other using that platform.</p>

<p>In the case of CPython and YARV, that platform is C/POSIX, so they can communicate with each other using C structs, <code>int</code>s, <code>char*</code>s and C function calls. In the case of Jython and JRuby, that platform is the JVM, so they can communicate with each other using JVM objects, JVM classes, JVM interfaces, JVM types and JVM methods.</p>

<p>In both cases, those platform primitives look <em>nothing</em> like Python or Ruby objects.</p>

<p>To JRuby, Jython is just yet another Java program. To Jython, JRuby is just another Java program.</p>

<p>For example: in Ruby, you can add, remove and redefine methods dynamically at any moment. On the JVM, the smallest unit of code that can be dynamically added and removed is a class. So, a Ruby method is actually not represented as a Java method. It is represented as a Java <em>class</em>. And logically, a Ruby object with a couple of methods is represented as a Java object with no methods, just a <code>Dictionary&lt;String, RubyMethod&gt;</code> field. IOW: it's totally unusable from Java, and, since from JRuby's point of view Jython is just Java, it's also unusable from Jython.</p>

<p>Now, there <em>are</em> ways to make this a little bit better. You could use actual Java types to communicate between the two&nbsp;&ndash; both implementations have great interoperability with Java. So, instead of passing a Ruby hash to Python or a Python dictionary to Ruby, you would use a Java <code>Map</code> from both Ruby and Python. But note that this requires that <em>both</em> your Ruby and Python code are specifically written to work on the JVM. IOW: you cannot just use any Python or Ruby library you find on the web, which is what you are asking about.</p>

<p>Another possibility is the one mentioned by @duncan in his answer: embed Jython or JRuby as a scripting engine into your Ruby or Python application. But again, this doesn't really answer your question about using arbitrary Python libraries from Ruby or vice versa.</p>

<p>So, what is the problem here?</p>

<p>The problem is that in order for the two runtimes to communicate, they need to speak the same ""language"". And in this particular case, the only language that the two runtimes have in common, is Java, or rather a severely crippled subset of Java.</p>

<p>So, we need to find a common language. One way to define such a language would be for both runtimes to understand each other's Meta-Object Protocol (MOP).</p>

<p>A MOP is basically an object model for the language's object model. Um, that's confusing because we use the word ""object model"" to mean two different things. Let me rephrase that:</p>

<p>A MOP is basically a domain model for the language's object system. Just like a domain model for a banking system contains objects that represent real-world customers, accounts, balances, ledgers and so on, and methods that represent real-world actions like money transfers, withdrawals and so on, a MOP contains objects that represent language classes, methods, variables, objects and methods that represent language actions like looking up a variable, calling a method, inheriting from a class, constructing an instance of a class.</p>

<p>Normally, every runtime keeps its MOP private, and every runtime has its own MOP.</p>

<p>If JRuby and Jython exposed their MOPs to each other and understood each other's MOPs (or, even better yet: they exposed their MOPs to the JVM and both used <em>the same</em> MOP), then you could pass one of those crazy JRuby method bags to Jython, and it would know how to find the methods that belong to that object and how to call them, because it can just ask JRuby's MOP how to do it.</p>

<p>There is actually a project to create just such a MOP for the JVM: the <a href=""http://DynaLang.SourceForge.Net/"">dynalang MOP</a> is a project for a shared, standardized MOP for dynamic languages running on the JVM. It was created by Attila Szegedi, the maintainer of the Mozilla Rhino ECMAScript engine. At the moment, none of the big language implementations uses it, but there is collaboration going on between at least Rhino, JRuby, Jython and Groovy to make sure that dynalang is generic enough that it can support all of the different language's object models.</p>

<p>If you want a sneak peek at what a world with such a shared MOP would look like, you can take a look at Microsoft's Dynamic Language Runtime (DLR). The DLR contains just such a MOP and all runtimes which support the DLR (which, in addition to the usual suspects such as <a href=""http://IronRuby.Net/"">IronRuby</a>, <a href=""http://IronPython.Net/"">IronPython</a>, <a href=""http://IronJS.Com/"">IronJS</a> and <a href=""http://IronScheme.CodePlex.Com/"">IronScheme</a> now also includes C# 4 and Visual Basic.NET 10) can almost seamlessly interoperate with each other.</p>

<p>Another similar platform is the <a href=""http://ParrotCode.Org/"">Parrot Virtual Machine</a>, which was specifically designed to allow multiple dynamic languages to interoperate on the same runtime platform. There are implementations of Python (<a href=""http://Pynie.GoogleCode.Com/"">Pynie</a>) and Ruby (<a href=""https://GitHub.Com/Cardinal/"">Cardinal</a>) available, but especially Cardinal is still very far from being even a remotely complete Ruby implementation.</p>
"
"<p>I'm searching for a definitive document on Ruby syntax. I know about the definitive documents for the core API and standard library, but what about the syntax itself? For instance, such a document should cover: reserved words, string literals syntax, naming rules for variables/classes/modules, all the conditional statements and their permutations, and so forth.</p>

<p>I know there are many books and tutorials, yes, but every one of them is essentially a tutorial, each one having a range of different depth and focus. They will all, by necessity of brevity and narrative flow, omit certain details of the language that the author deems insignificant.</p>

<p>For instance, did you know that you can use a case statement without an initial case value, and it will then execute the first true when clause? Any given Ruby book or tutorial may or may not cover that particular lesser-known functionality of the case syntax. It's not discussed in the section in ""Programming Ruby"" about case statements. But that is just one small example.</p>

<p>So far the best documentation I've found is the rubyspec project, which appears to be an attempt to write a complete test suite for the language. That's not bad, but it's a bit hard to use from a practical standpoint as a developer working on my own projects.</p>

<p>Am I just missing something or is there really no <em>definitive</em> readable document defining the whole of Ruby syntax?</p>
","2988","","<p>The <em>only</em> document that can be reasonably described as ""definitive"" is the source code of <a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/parse.y"">parse.y</a> in the YARV source tree.</p>

<p>The <a href=""http://Ruby-Std.NetLab.Jp/"">ISO Draft Specification</a> contains a 39 page appendix with a summary of the grammar. Note, however, that ISO Ruby is a minimal subset of the intersection of Ruby 1.8 and 1.9. IOW: it doesn't describe anything that is only in 1.8 or only in 1.9 (so, the syntax additions in 1.9 like stabby proc and symbol hashes aren't described), nor does it describe <em>everything</em> in that intersection. ISO Ruby is a bit like ISO HTML in that regard.</p>

<p>The <a href=""http://RubySpec.Org/"">RubySpec</a> project contains executable specifications for the Ruby language. It doesn't contain an explicit specification of the grammar, though. The only specification of the grammar is <em>implicit</em> in the examples themselves. Also, because RubySpec is an example-based spec, it can only show you specific examples of valid Ruby code, but it cannot tell you <em>all</em> possible valid Ruby programs like a grammar spec could. And, because RubySpec is itself executable Ruby code, it can only show you valid examples, not invalid ones.</p>

<p>The last thing that could be considered definitive is the book <a href=""http://OReilly.Com/catalog/9780596516178/""><em>The Ruby Programming Language</em></a> by David Flanagan and Yukihiro ""matz"" Matsumoto.</p>

<p>Note, however, that ""the whole of Ruby syntax"" is a rather daunting task, because Ruby's syntax is <em>insanely</em> complicated with a ginormous amount of weird corner cases.</p>
"
"<p>I am working with <code>ruby 1.8.6 (2007-03-13 patchlevel 0) [x86_64-linux]</code> and I get </p>

<pre><code>undefined method `bytes' for #&lt;String:0x2a95ec2268&gt; (NoMethodError)
</code></pre>

<p>even though my code works on ruby 1.8.7. patchlevel 249
I saw somewhere that you need to add <code>require ""jcode""</code> for a similar method not defined error with <code>each_byte</code>. I tried adding that but it still does not work. Any suggestions are very appreciated.</p>
","2988","","<p>Ruby 1.8.6 doesn't have <code>String#bytes</code>. That's a 1.9 addition that was backported to 1.8.7.</p>

<p>You can roughly implement it yourself like this:</p>

<pre><code>class String
  require 'enumerator'

  def bytes(&amp;block)
    return to_enum(:each_byte) unless block_given?
    each_byte &amp;block
  end
end unless ''.respond_to?(:bytes)
</code></pre>

<p>[Note: I haven't checked whether this actually fulfills the contract of <code>String#bytes</code> 100%, but it is close enough for my use.]</p>
"
"<p>Let's say I have a C program, and I run it from bash:</p>

<p>$ ./a.out 123 *</p>

<p>The program would output all the command line arguments,
but it will show these instead:</p>

<p>Argument 1: 123
Argument 2: a.out</p>

<p>What can I do in my program to fix this?</p>
","2988","","<p>This doesn't have anything to do with your program.</p>

<p>The <code>*</code> is a wildcard in Bash, it means ""all files in the current directory"". If you want to pass an asterisk as an argument to your program, you do it the same way you do it with every other program: you escape it with a backslash or quote it.</p>
"
"<p>(Ive looked at the other questions - none seemed to quite fit my problem.)</p>

<p>I have some file-names under Windows 7 that need to be translated in to MySQL database (UTF-8) with Ruby on Rails.</p>

<p>An example file-name includes ""íéó"" in some kind of Windows 7 file-system encoding.</p>

<p>Ive tried many combinations of gsub and ActiveSupport::Multibyte::Chars.</p>

<p>Thanks for the help</p>
","2988","","<p>I've been using Windows for many years now, since Windows 3.1 and Windows NT 4.0, but I still don't fully understand how Windows handles filename encodings. And I have been using MRI and YARV on Windows for several years and I still don't understand how <em>they</em> handle filename encodings on Windows.</p>

<p>What I <em>do</em> know is that there are some problems with Unicode filenames on Windows that will be fixed in 1.9.2. However, I don't know whether that actually is the problem that you are hitting or if there is just a plain bug in your code.</p>
"
"<p>I've never been able to figure this out.  If your language doesn't type-check, what benefits do interfaces provide you?</p>
","2988","","<p>Types serve three distinct functions:</p>

<ul>
<li>design</li>
<li>documentation</li>
<li>actual type checking</li>
</ul>

<p>The first two don't require any form of type checking <em>at all</em>. So, even if PHP did <em>no</em> checking of interfaces, they would <em>still</em> be useful just for those two reasons.</p>

<p>I, for example, always think about my interfaces when I'm doing Ruby, despite the fact that Ruby doesn't have interfaces. And I often wish I could have some way of <em>recording</em> those design decisions in the source code.</p>

<p>On the other hand, I have seen plenty of Java code that used interfaces, but clearly the author never thought about them. In fact, in one case, one could see from the indentation, whitespace and some leftover comments in the interface that the author had actually just copied and pasted the class definition and deleted all method bodies.</p>

<p>Now to the third point: PHP actually <em>does</em> type check interfaces. Just because it type checks them at runtime doesn't mean it doesn't type check them <em>at all</em>.</p>

<p>And, in fact, it doesn't even check them at runtime, it checks them at <em>load time</em>, which happens <em>before</em> runtime. And isn't ""type checking doesn't happen at runtime but before that"" pretty much the very definition of static type checking?</p>
"
"<pre><code>    def singleton_class
       class &lt;&lt; self
         self
       end
    end

    class Human
      proc = lambda { puts 'proc says my class is ' + self.name.to_s }

      singleton_class.instance_eval do
        define_method(:lab)  do 
          proc.call
        end
      end
    end

    class Developer &lt; Human
    end

    Human.lab # class is Human
    Developer.lab # class is Human ; oops
</code></pre>

<p>Following solution works.</p>

<pre><code>def singleton_class
  class &lt;&lt; self
    self
  end
end

class Human
  proc =  lambda { puts 'proc says my class is ' + self.name.to_s }
  singleton_class.instance_eval do
    define_method(:lab) do
      self.instance_eval &amp;proc
    end
  end
end

class Developer &lt; Human
end

Human.lab # class is Human
Developer.lab # class is Human ; oops
</code></pre>

<p>Why Developer.lab is reporting that it is Human ? And what can be done so that proc reports Developer when Developer.lab is invoked.</p>
","2988","","<p>I have to think a little bit about exactly <em>why</em> this works, but for the moment it <em>does</em> work:</p>

<pre><code>class Human
  proc = -&gt; { name }

  define_singleton_method(:lab, &amp;proc)
end

class Developer &lt; Human; end

require 'test/unit'
class TestClosures &lt; Test::Unit::TestCase
  def test_that_the_human_class_is_named_human
    assert_equal 'Human', Human.lab
  end
  def test_that_the_developer_class_is_named_developer
    assert_equal 'Developer', Developer.lab
  end
end
</code></pre>
"
"<p>And I don't mean <strong>skynet</strong>.  I'm thinking of say a compiler application that is used to compile itself, a VCS that tracks its own source code etc.</p>
","2988","","<p>In the context of whole Programming Systems: <a href=""http://SWA.HPI.Uni-Potsdam.De/s3/"" rel=""nofollow""><em>Self-Sustaining System (S3)</em></a> or <em>Self-Supporting System</em>.</p>

<p>But for the context you describe (VCS, compiler), the term <em>self-hosting</em> is generally used.</p>
"
"<p>Are classes necessary for creating methods (defs) in Python?</p>
","2988","","<p>It depends on your definition of ""method"".</p>

<p>In some sense, no, classes aren't necessary for creating methods in Python, because there <em>are no methods</em> anyway in Python. There are only <em>procedures</em> (which, for some strange reason, are called <em>functions</em> in Python). You can create a procedure anywhere you like. A <em>method</em> is just syntactic sugar for a procedure assigned to an attribute.</p>

<p>In another sense, yes, classes <em>are</em> necessary for creating methods. It follows pretty much from the definition of what a method is in Python: a procedure stuck into a class's <code>__dict__</code>. (Note, however, that this means that you do not have to be inside a class <em>definition</em> to create method, you can create a procedure anywhere and any way you like and stick it into the class afterwards.)</p>

<p>[Note: I have simplified a bit when it comes to exactly what a method is, how they are synthesized, how they are represented and how you can create your own.]</p>
"
"<p>I hear a lot of Emacs users have their init file (.emacs or init.el) under git version control and sync the git repository over Dropbox, when they run Emacs on multiple systems.
Why would you use git in this situation exactly? </p>

<p>Usually checking which system you're on and which things to load and set depending on that can happen in one and the same init file for all systems. Why exactly would you want to save a version history of your init file, is it really that important that it justifies a git repository for it?</p>

<p>So, isn't it simply enough to put your init file in a Dropbox directory and load that one directly from Emacs directly instead of pulling the newest version from your synced git repo in Dropbox? </p>
","2988","","<p>Git gives you version control, Dropbox gives you gratis private hosting.</p>

<p>Until recently, this was the only gratis method of hosting a private Git repo that I know of. Gitorious, repo.or.cz and Co. don't have private repos and GitHub, ShareSource and friends charge money for private repos. Assembla is the only hoster I know of that offers gratis private repo hosting, but that offering only started three weeks ago.</p>

<p>Personal configuration files might contain sensitive data, so it makes sense to host them privately, but it maybe doesn't make sense to pay GitHub 7$/mo just for one single <code>.emacs</code> file.</p>
"
"<p>I was just reading a bit about the HQ9+ programming language ( <a href=""http://esolangs.org/wiki/HQ9"">http://esolangs.org/wiki/HQ9</a> ,  <a href=""http://en.wikipedia.org/wiki/HQ9%2B"">http://en.wikipedia.org/wiki/HQ9%2B</a> and <a href=""http://www.cliff.biffle.org/esoterica/hq9plus.html"">http://www.cliff.biffle.org/esoterica/hq9plus.html</a> ), and it tells me something about a so called 'accumulator' which can be incremented, but not be accessed. Also, using the <code>+</code> doesn't manipulate the result:</p>

<h3>code</h3>

<pre><code>H+H
</code></pre>

<h3>result</h3>

<pre><code>Hello World
Hello World
</code></pre>

<p>Can anyone explain me how this works, what this does and if it even makes any sense? Thanks</p>
","2988","","<p>It's a joke.</p>

<p>There's also an object-oriented extension of HQ9+, called HQ9++. It has a new command <code>++</code> which instantiates an object, and, for reasons of backwards-compatibility, also increments the accumulator register twice. And again, since there is no way to store, retrieve, access, manipulate, print or otherwise affect an object, it's completely useless.</p>
"
"<p>I just tried viewing my website <a href=""http://www.logmytime.de/"" rel=""nofollow"">http://www.logmytime.de/</a> in Opera (version 10.50) it gives me an ""xml parsing failed error"" and refuses to display the web page. </p>

<p>I can choose to ""Reparse the document as HTML"" and then the page works fine, but that's hardly a solution to my problem.</p>

<p>The weird thing is that the error still occurs after setting a HTML (instead of XTHML) doctype:</p>

<pre><code>&lt;!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
          ""http://www.w3.org/TR/html4/loose.dtd""&gt;
</code></pre>

<p>I checked the source output from the browser to make sure I did not make any mistake with the Doctype I even viewed the same web page in Firebug and it shows a Content-Type of text/html; . </p>

<p>So, why does Opera still try to parse my web page as XML?</p>

<p>Thanks,</p>

<p>Adrian</p>

<p><strong>Edit:</strong> Just to clarify: I am not asking what the error on my web page is. I understand why this is not valid XHTML. However, I am also using the <a href=""http://ejohn.org/blog/javascript-micro-templating/"" rel=""nofollow"">javascript micro templating engine</a>, and it's templates are never valid XML, which is why I need the browser to parse my entire web site as HTML, not XHTML. In order to demonstrate this, I just inserted an example template into the web page.</p>

<pre><code>&lt;script type=""text/html"" id=""StopWatchTemplate"" &gt; 

&lt;h1&gt;&lt;a href=""#"" onclick=""TimeEntriesList.EditTimeEntry('&lt;#=timeEntryID#&gt;')""&gt;&lt;#=currentlyRunning?""Aktueller"":""Letzter""#&gt; Stoppuhr-Zeiteintrag&lt;/a&gt;&lt;/h1&gt;
&lt;%-- Stoppuhr - Ende--%&gt;

&lt;/script&gt;
</code></pre>

<p>When opening the page in Opera, you can see that the template now produces XML parsing errors even though the doctype for the page is still HTML.</p>

<p><strong>Edit 2:</strong>: Just to make this even clearer: I am not asking why my web page is not valid XHTML. I am asking why Opera tries to parse it as XHTML despite the HTML doctype.</p>

<p><strong>Edit3:</strong>: Please do not post any more answers, I have found the cause of this and <a href=""http://stackoverflow.com/questions/2766820/why-does-opera-parse-my-web-page-as-xml/2769462#2769462"">documented</a> it below.  </p>
","2988","","<p>Your document is not a valid HTML document. So, the browser <em>should</em> reject it. Unfortunately, due to a historic accident, most browsers do not reject invalid documents, but rather try to fix them (usually with pretty crappy results), so that the authro never even notices that his document is broken.</p>

<p>Thankfully, with XHTML, the browser vendors decided to fix that, and actually reject invalid documents. In your case, you are delivering your document as XHTML with the <code>application/xhtml+xml</code> MIME type:<pre># curl --head <a href=""http://www.logmytime.de/"">http://www.logmytime.de/</a>
HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 12529
Content-Type: application/xhtml+xml; charset=utf-8
              ^^^^^^^^^^^^^^^^^^^^^
Server: Microsoft-IIS/7.5
X-AspNetMvc-Version: 2.0
X-AspNet-Version: 2.0.50727
Set-Cookie: Referrer=None; path=/
X-Powered-By: ASP.NET
Date: Tue, 04 May 2010 16:08:40 GMT</pre>So, the browser rejects your document (as it should). When you switch over to HTML, then it tries to fix your broken HTML.</p>

<p>Now, you have changed your <code>DOCTYPE</code> to HTML 4.01, but you are <em>still</em> delivering it as XHTML. All you have achieved now is that there are <em>two</em> reasons for the browser to reject your document: it's still invalid because you haven't fixed the actual bug <em>and</em> the <code>DOCTYPE</code> and the MIME type don't match up.</p>

<p>Instead of mucking around with <code>DOCTYPE</code>s and MIME types in order to get the browser to parse your broken document, the <em>correct</em> way to solve this problem would be to simply fix the invalid markup and remove the extraneous <code>class</code> attribute on line 172. [BTW: who wrote that document? The indentation and formatting is <em>awful</em>.]</p>
"
"<p>I understand that it is a replacement for ActiveRecord and that it uses objects instead of queries. </p>

<p>But...</p>

<p>why is this better? </p>

<p>will objects/queries be ""easier"" to create?</p>

<p>will it lead to more efficient SQL queries?</p>

<p>will it be compatible with all major DBs? - I assume it will.</p>

<p>will it be easier/harder to use with stored procedures?</p>
","2988","","<blockquote>
  <p>What exactly is Arel in Rails 3.0?</p>
</blockquote>

<p>It's an object model for an algebra of relational query operators.</p>

<blockquote>
  <p>I understand that it is a replacement for ActiveRecord</p>
</blockquote>

<p>No, it isn't. It's a replacement for hand-crafting SQL queries in strings. It is a common query layer that <em>underlies</em> ActiveRecord, but it can also be used as an underpinning for DataMapper, for example.</p>

<p>If it is a replacement for anything, it's a replacement for Ambition. Or, you can think of it as a Ruby version of the LINQ standard query operators or Python's SQLAlchemy. (In fact, the author explicitly cites both LINQ and SQLAlchemy as inspirations.)</p>

<p>Or, you can see it as a replacement for <code>named_scope</code>s. In fact, ARel is pretty much the realization of the idea that ""every query is a <code>named_scope</code>"". And, whaddayaknow: both were written by the same guy.</p>

<blockquote>
  <p>and that it uses objects instead of queries.</p>
</blockquote>

<p>No, it uses objects <em>as</em> queries.</p>

<blockquote>
  <p>why is this better?</p>
</blockquote>

<p>Ruby is an object-oriented language, not a string-oriented language. For that reason <em>alone</em>, it makes sense to represent queries as objects instead of strings. Building a proper object model for queries instead of using strings for everything gives you pretty much the same benefits that building a proper object model for an accounting system instead of using strings for everything gives you.</p>

<p>Another big advantage is that ARel implements an actual <em>algebra</em> of query operators. In other words, ARel knows about the mathematical rules for constructing and composing queries. If you concatenate two strings, each of which contains a valid SQL query, the result is probably not going to be a valid SQL query. Or, even worse, it <em>is</em> a valid SQL query, but one that doesn't make sense, or that does something totally different from what you think it does. This can <em>never</em> happen with ARel. (This is what the article I link to below means with ""closed under composition"".)</p>

<blockquote>
  <p>will objects/queries be ""easier"" to create?</p>
</blockquote>

<p>Yes. For example, as I mentioned above, it is much easier to construct more complex queries from simpler parts.</p>

<blockquote>
  <p>will it lead to more efficient SQL queries?</p>
</blockquote>

<p>Yes. The fact that ARel has a proper object model for the queries means that it can perform optimizations on those queries long before it ever generates an actual SQL query.</p>

<blockquote>
  <p>will it be compatible with all major DBs? - I assume it will.</p>
</blockquote>

<p>Yes. In fact, I always talked about SQL above, but actually a relational query algebra can generate queries for pretty much everything. Again, see LINQ or Ambition as examples: both can query SQL, LDAP, ActiveResource, CouchDB, Amazon, Google, &hellip; all with the same syntax.</p>

<p>Perhaps the best discussion as to what ARel is and why Nick Kallen wrote is the aptly named article <a href=""http://MagicScalingSprinkles.WordPress.Com/2010/01/28/why-i-wrote-arel/""><em>Why Arel?</em> by Nick Kallen</a> himself. Note: the article contains some mild mathematical and computer science jargon, but that is exactly the point: ARel has some strong foundations in mathematics and computer science, those foundations are what give it its powerful properties.</p>
"
"<p>I've been using Ruby as my main scripting language for years but switched to .NET several years ago.  I'd like to continue using Ruby (primarily for testing) BUT the toolset for IronRuby is really nonexistent.  Why?</p>

<p>In Python, meanwhile, there are project templates and full intellisense support.  Why isn't there something like that for IronRuby?  The only thing I've been able to find on it is ""there are no plans for VS integration at this time.""  Why???</p>
","2988","","<p>IronRuby has been out for 4 <em>weeks</em>, IronPython for 4 <em>years</em>. Developing an IDE takes months, if not years. When exactly where they supposed to squeeze that in?</p>

<p>Also, I believe the IronRuby team is smaller than the IronPython team.</p>

<p>There actually <em>is</em> a Ruby plugin for Visual Studio produced by SapphireSteel. It's called Ruby in Steel. Unfortunately, they currently only support MRI, YARV and JRuby. They <em>did</em> have IronRuby support at one point, but they removed it, because a) none of their customers actually used it, b) IronRuby was still changing faster than they could adapt and c) some of the IronRuby developers announced that Microsoft is considering developing IronRuby support for Visual Studio in the future and SapphireSteel didn't see much business sense in trying to compete with Microsoft.</p>

<p>Also, Visual Studio is not the only IDE on the planet. MonoDevelop has an open bug for IronRuby support, for example. And I'm pretty confident that it wouldn't be too hard to add IronRuby support to NetBeans: it already supports JRuby, MRI and YARV.</p>
"
"<p>What do you do with GitHub repositories you no longer maintain?</p>

<p>For whatever reason a project is started with a GitHub repository and then sometime later it's abandoned  Perhaps it was an experiment that didn't work out.  Perhaps you replaced it with a commercial product.  Or perhaps you found a similar project to what you were doing and joined their efforts instead.</p>

<p>In the time your repository was alive, it attracted watchers and a few forks.</p>

<p>What do you do with it at that point?  Is there a way to nicely indicate that repository is no longer maintained and to either check out the forks or a different project?</p>
","2988","","<p>Actually, I think pretty much the nicest thing you can do is to simply delete the repository. That way, the obsolete code doesn't show up in searches, for example.</p>

<p>The whole point of distributed version control is that no single repository is more important than another. If there is enough interest in the project, then one of the people who forked the repository will emerge as the new community leader. And if nobody forked it, then it probably wasn't worth preserving anyway.</p>
"
"<p>I'm unable to find the .NET FCL built-in concept of precedence to leverage while constructing <a href=""http://msdn.microsoft.com/en-us/library/bb397951.aspx"" rel=""nofollow"">Expression Trees</a>. Ref <a href=""http://msdn.microsoft.com/en-us/library/system.linq.expressions.aspx"" rel=""nofollow"">System.Linq.Expressions Namespace</a>. Is this something that must be handled manually in code, or is it somehow implicit and I'm not recognizing it, maybe through helper methods or classes?</p>

<p>I want to apply it to math operations to ensure 3 + 5 * 10 results in 53 instead of 80.</p>
","2988","","<p>The <em>whole point</em> of representing code as a tree is that the precedence is encoded in the tree structure itself, so that you do not need to care about it.</p>
"
"<p>I have a rspec mocked object, a value is assign to is property. I am struggleing to have that expectation met in my rspec test. Just wondering what the sytax is? The code:</p>

<pre><code>def create
@new_campaign = AdCampaign.new(params[:new_campaign])
@new_campaign.creationDate = ""#{Time.now.year}/#{Time.now.mon}/#{Time.now.day}""
if @new_campaign.save
  flash[:status] = ""Success""
else
  flash[:status] = ""Failed""
end end
</code></pre>

<p>The test</p>

<pre><code>it ""should able to create new campaign when form is submitted"" do
  campaign_model = mock_model(AdCampaign)
  AdCampaign.should_receive(:new).with(params[:new_campaign]).and_return(campaign_model)
  campaign_model.should_receive(:creationDate).with(""#{Time.now.year}/#{Time.now.mon}/#{Time.now.day}"")campaign_model.should_receive(:save).and_return(true)
  post :create

  flash[:status].should == 'Success' 
  response.should render_template('create') end
</code></pre>

<p>The problem is I am getting this error:</p>

<pre><code>Spec::Mocks::MockExpectationError in 'CampaignController new campaigns should able to create new campaign when form is submitted' Mock ""AdCampaign_1002"" received unexpected message :creationDate= with (""2010/5/7"")
</code></pre>

<p>So how do i set a expectation for object property assignment?</p>

<p>Thanks</p>
","2988","","<p>There is no such thing as ""property assignment"" in Ruby. In Ruby, <em>everything</em> is a method call. So, you mock the setter method just like you would any other method:</p>

<pre><code>campaign_model.should_receive(:creationDate=).with(...)
</code></pre>

<p>BTW: the diagnostic messages that the tests print out are not just for shpw. In this case, the message <em>already</em> tells you everything you need to know:</p>

<p><code>Spec::Mocks::MockExpectationError in 'CampaignController new campaigns should able to create new campaign when form is submitted' Mock ""AdCampaign_1002"" received unexpected message :creationDate= with (""2010/5/7"")</code></p>

<p>As you can see, the message you posted <em>already</em> tells you what the name of the method is you need mock right there:</p>

<pre><code> unexpected message :creationDate= with (""2010/5/7"")
                    ^^^^^^^^^^^^^^
</code></pre>
"
"<p>given this code:</p>

<pre><code>class Foo
  def bar
    return Bar.new
  end
end

class Bar
  ...
end
</code></pre>

<p>I get this error:</p>

<pre><code>NameError: uninitialized constant Bar
</code></pre>

<p>This obviously works if I put Bar before Foo but that is not a real solution though.</p>

<p>Any ideas on how to solve this without considering the order?</p>

<p>Many thanks.</p>

<p><strong>UPDATE:</strong></p>

<p>Of course the error occurs only when calling <code>Foo.new.bar</code> and not when defining.</p>
","2988","","<p>There must be something wrong with your installation of Ruby. It shouldn't give that error message. I checked with the ISO Ruby specification and the RubySpec and I also copy &amp; pasted the code you posted into JRuby 1.6.0.dev, JRuby 1.5.0RC3, IronRuby 1.0, YARV 1.9.1-p378, MRI 1.8.7-p249, Rubinius 0.11.0-dev, YARV-1.9.1-p129, MRI 1.8.7-p174, MRI 1.8.6-p369, MRI 1.7.1, MRI 1.6.0, MRI 1.5.0, MRI 1.4.0, MRI 1.3, MRI 1.2 and even MRI 1.0 (going all the way back to 1997) and I didn't get that error:</p>

<pre><code>class Foo
  def bar
    return Bar.new
  end
end

class Bar
end

puts Foo.new.bar # =&gt; #&lt;Bar:0x823f638&gt;
</code></pre>
"
"<p>how can I eliminate duplicate elements from an array of ruby objects using an attribute of the object to match identical objects.</p>

<p>with an array of basic types I can use a set..</p>

<p>eg.</p>

<pre><code>array_list = [1, 3, 4 5, 6, 6]
array_list.to_set 
=&gt; [1, 2, 3, 4, 5, 6]
</code></pre>

<p>can I adapt this technique to work with object attributes?</p>

<p>thanks</p>
","2988","","<p>I think you are putting the cart before the horse. You are asking yourself: ""How can I get <code>uniq</code> to remove objects which aren't equal?"" But what you <em>should</em> be asking yourself, is: ""Why aren't those two objects equal, despite the fact that I consider them to be?""</p>

<p>In other words: it seems you are trying to work around the fact that your objects have broken equality semantics, when what you <em>really</em> should do is simply <em>fixing</em> those broken equality semantics.</p>

<p>Here's an example for a <code>Product</code>, where two products are considered equal if they have the same type number:</p>

<pre><code>class Product
  def initialize(type_number)
    self.type_number = type_number
  end

  def ==(other)
    type_number == other.type_number
  end

  def eql?(other)
    other.is_a?(self.class) &amp;&amp; type_number.eql?(other.type_number)
  end

  def hash
    type_number.hash
  end

  protected

  attr_reader :type_number

  private

  attr_writer :type_number
end

require 'test/unit'
class TestHashEquality &lt; Test::Unit::TestCase
  def test_that_products_with_equal_type_numbers_are_considered_equal
    assert_equal 2, [Product.new(1), Product.new(2), Product.new(1)].uniq.size
  end
end
</code></pre>
"
"<p>I'm hoping to integrate Mercurial into my Rails site. I want to run basic commands like status, summary, log, and maybe even clone. I'd like to interface directly with the Mercurial libraries and avoid doing any command line parsing via regex.</p>

<p>Mercurial is written in Python; I am using Ruby. So, I need Mercurial Ruby bindings. It seems, however, that there are none. So, plan B would be to go with something like <a href=""http://www.goto.info.waseda.ac.jp/~fukusima/ruby/python/doc/index.html"" rel=""nofollow"">Ruby/Python</a> (an extension library to embed the Python interpreter in Ruby) or <a href=""http://rubypython.rubyforge.org/"" rel=""nofollow"">rubypython</a> (a C bridge between Ruby and Python with a Ruby interface).</p>

<p>Do you all see any reason why one of these libraries won't provide me what I am wanting?</p>

<p>Does anyone have any alternative ideas?</p>
","2988","","<blockquote>
  <p>So, I need Mercurial Ruby bindings. It seems, however, that there are none.</p>
</blockquote>

<p>You are right. But there is something even <em>better</em> than a Ruby <em>binding</em> to the Python Mercurial implementation: <a href=""http://Amp.Carboni.ca/"" rel=""nofollow"">a <em>Ruby</em> (plus little bits of C) Mercurial implementation</a>!</p>
"
"<p>Let's say I have a class named <strong>Klass</strong>, and a class called <strong>Klass2</strong>. Depending on the user's input, I'd like to decide whether I'll call <code>""hello_world""</code> on Klass, or Klass2:</p>

<pre><code>class Klass
  def self.hello_world
    ""Hello World from Klass1!""
  end
end

class Klass2
  def self.hello_world
    ""Hello World from Klass2!""
  end
end

input = gets.strip
class_to_use = input
puts class_to_use.send :hello_world
</code></pre>

<p>The user inputs ""Klass2"" and the script should say:</p>

<blockquote>
  <p>Hello World from Klass2!</p>
</blockquote>

<p>Obviously this code doesn't work, since I'm calling <code>#hello_world</code> on String, but I'd like to call <code>#hello_world</code> on <code>Klass2</code>.</p>

<p>How do I <em>""convert""</em> the string into a referrence to <code>Klass2</code> (or whatever the user might input), or how could I else would I achieve this behavior?</p>
","2988","","<pre><code>puts Object.const_get(class_to_use).hello_world
</code></pre>
"
"<p>Where can I find an explanation and implementation of the diff algorithm?</p>

<p>First of all I have to recognize that I'm not sure if this is the correct name of the algorithm. For example, how does Stack Overflow mark the differences between two edits of the same question?</p>

<p>PS: I know the C and PHP programming languages.</p>
","2988","","<p>There is really no such thing as ""the diff algorithm"". There are many different diff algorithms, and in fact the particular diff algorithms used are in some cases considered a business advantage of the particular diff tool.</p>

<p>In general, many diff algorithms are based on the Longest Common Subsequence (LCS) problem.</p>

<p>The original Unix <code>diff</code> program from the 1970s was written by Doug McIllroy and uses what is known as the Hunt-McIllroy algorithm. Almost 40 years later, extensions and derivatives of that algorithm are still very common.</p>

<p>A couple of years ago, Bram Cohen (creator of the most successful filesharing program and the least successful version control system) created the <a href=""http://BramCohen.LiveJournal.Com/73318.html"">Patience Diff algorithm</a> that is designed to give more human-readable results than LCS. It was originally implemented in the Bazaar VCS and also added to Git as an option.</p>

<p>However, unless you are interested in research on diff algorithms, your best bet would probably be to just use some existing diff library like <a href=""http://XMailServer.Org/xdiff.html"">Davide Libenzi's LibXDiff</a>, which is for example what Git uses. I wouldn't be too surprised if there was already a PHP extension wrapping it. An nice alternative is <a href=""http://Google-Diff-Match-Patch.GoogleCode.Com/"">Google's Diff-Match-Patch library</a>, which is used in Bespin or WhiteRoom, for example and which is available for many languages. It uses the Meyers Diff Algorithm plus some pre- and post-processing for additional speedups.</p>

<p>A completely different approach, if you are more interested in merging than diffing, is called Operational Transformations. The idea of OT is that instead of figuring out the differences between two documents, you try to ""reverse engineer"" the <em>operations</em> that led to those differences. This allows for much better merging, because you can then ""replay"" those operations. These are most useful for real-time collaborative editors such as EtherPad, Google Wave or SubEthaEdit.</p>
"
"<p>I am using visual studios 2010 and created a javascript file(jscript.js) and I saw on one page saying you can make constant variables in javascript like:</p>

<pre><code>const x = 20;
</code></pre>

<p>bu to on another page I read it says you can't. So I am confused now what is it now?</p>

<p>Also in Visual studios when I write ""const"" it underlines it in the javascript file and goes syntax error.</p>
","2988","","<p><a href=""http://Wiki.ECMAScript.Org/doku.php?id=harmony%3aconst""><code>const</code> is a proposed feature of ECMAScript Harmony</a> (together with a properly block-scoped <code>let</code> it is supposed to replace <code>var</code> and implicit globals). ECMAScript Harmony is a grab-bag of ideas for the next versions of ECMAScript.</p>

<p><code>const</code> was also a part of ECMAScript 4.</p>

<p>ECMAScript 4 was never released and never will be, and ECMAScript Harmony will only be released in a couple of years. Therefore, you cannot reliably use it.</p>

<p>There are some implementations or derivatives of ECMAScript that implement <code>const</code> (ActionScript, for example). There are also some implementations that accept <code>const</code> as a synonym for <code>var</code> (IOW, you can use <code>const</code>, but it won't give you any protection.)</p>

<p>However, unless you absolutely can guarantee that your code will only run on very specific versions of very specific implementations of very specific derivatives of ECMAScript, it's probably better to avoid it. (Which is a real shame, because <code>const</code> and especially <code>let</code> are a <em>huge</em> improvement over <code>var</code> and implicit globals.)</p>
"
"<p>Recently, when I tried to explain why Rails is a DSL to an intern at my organisation, I was not able to articulate my reasonings to the effect I would like to. Maybe I do not understand the space well enough to teach the nuances. Redirecting him to Martin Fowler' <a href=""http://www.martinfowler.com/bliki/DomainSpecificLanguage.html"" rel=""nofollow"">article</a> or the google ranked one InfoQ or other material has not helped much either.</p>

<p>Can some explain why Rails is a DSL with an example / parallel situation which is not voodoo stuff for someone who is fairly new to the world of code? Understanding the ideology might also help in elaborating the intricacies of the rails ecosystem?</p>
","2988","","<p>I don't quite understand the question. Ruby is not a Domain Specific Language, it is a General Purpose Language. It doesn't make sense to call it a DSL, because it isn't one. Therefore the whole premise of the question doesn't make sense.</p>
"
"<p>I'm kind of new to Ruby and some of the closure logic has me a confused. Consider this code:</p>

<pre><code>array = []
for i in (1..5)
  array &lt;&lt; lambda {i}
end
array.map{|f| f.call} # =&gt; [5, 5, 5, 5, 5]
</code></pre>

<p>This makes sense to me because i is bound outside the loop, so the same variable is captured by each trip through the loop. It also makes sense to me that using an each block can fix this:</p>

<pre><code>array = []
(1..5).each{|i|  array &lt;&lt; lambda {i}}
array.map{|f| f.call} # =&gt; [1, 2, 3, 4, 5]
</code></pre>

<p>...because i is now being declared separately for each time through. But now I get lost: why can't I also fix it by introducing an intermediate variable?</p>

<pre><code>array = []
for i in 1..5
  j = i
  array &lt;&lt; lambda {j}
end
array.map{|f| f.call} # =&gt; [5, 5, 5, 5, 5]
</code></pre>

<p>Because j is new each time through the loop, I'd think a different variable would be captured on each pass. For example, this is definitely how C# works, and how -- I think-- Lisp behaves with a let. But in Ruby not so much. What's really happening?</p>

<p>Edit: See comments in the answers; the problem seems to be that j is still in scope outside the loop. How does scope in loops really work?</p>

<p>Edit: I guess I still don't understand; if loops don't create new scopes, why this:</p>

<pre><code>for i in 1..5
  puts j if i &gt; 1 #undefined local variable or method `j' for main:Object (NameError)
  j = i
end
</code></pre>
","2988","","<p>Okay, this is getting ridiculous. Every time I try to answer a question about how <code>for</code> loops work in Ruby, I get it wrong.</p>

<p>The reason for this is, of course, that I don't use <code>for</code> loops in Ruby, neither does anybody else, so it really doesn't matter to me :-)</p>

<p>Anyway, to settle the matter once and for all, I went straight to <a href=""http://Ruby-Std.NetLab.Jp/"" rel=""nofollow"">the ultimate source</a>, the December 1, 2009 preliminary Draft of the IPA Ruby Language Specification (destined to become the ISO Ruby Language Specification):</p>

<blockquote>
  <h1>§11.4.1.2.3 The <code>for</code> expression</h1>
  
  <h2>Syntax</h2>
  
  <ul>
  <li><em>for-expression</em> <strong>&rarr;</strong> <kbd>for</kbd> <em>for-variable</em> <kbd>in</kbd> <em>expression</em>  <em>do-clause</em> <kbd>end</kbd></li>
  <li><em>for-variable</em> <strong>&rarr;</strong> <em>left-hand-side</em> <strong>|</strong> <em>multiple-left-hand-side</em></li>
  </ul>
  
  <p>The <em>expression</em> of a <em>for-expression</em> shall not be a <em>jump-expression</em>.</p>
  
  <h2>Semantics</h2>
  
  <p>A <em>for-expression</em> is evaluated as follows:</p>
  
  <ol>
  <li>Evaluate the <em>expression</em>. Let <code>O</code> be the resulting value.</li>
  <li><p>Let <code>E</code> be the <em>primary-method-invocation</em> of the form <em>primary-expression</em> <strong>[no line-terminator here]</strong><kbd>.each do |</kbd> <em>block-formal-argument-list</em> <kbd>|</kbd> <em>block-body</em> <kbd>end</kbd>, where the value of the <em>primary-expression</em> is <code>O</code>,the <em>block-formal-argument-list</em> is the <em>for-variable</em>, the <em>block-body</em> is the <em>compound-statement</em> of the <em>do-clause</em>.</p>
  
  <p>Evaluate <code>E</code>, but skip Step c of §11.2.2.</p></li>
  <li><p>The value of the <em>for-expression</em> is the resulting value of the invocation.</p></li>
  </ol>
</blockquote>

<p>Okay, so basically this means that</p>

<pre><code>for for_variable in expression
  do_clause
end
</code></pre>

<p>gets translated to</p>

<pre><code>O = expression
O.each do |for_variable|
  do_clause
end
</code></pre>

<p>Or, in your case:</p>

<pre><code>for i in 1..5
  puts j if i &gt; 1 #undefined local variable or method `j' (NameError)
  j = i
end
</code></pre>

<p>gets translated to</p>

<pre><code>(1..5).each do |i|
  puts j if i &gt; 1 #no excpetion here, works just fine ??!!??
  j = i
end
</code></pre>

<p>Aha! But we forgot something! There's this ominous ""skip Step c of §11.2.2."" thing! So, what does it say?</p>

<blockquote>
  <ul>
  <li>Push an empty set of local variable bindings onto ⟦local-variable-bindings⟧.</li>
  </ul>
</blockquote>

<p>Note that Step b</p>

<blockquote>
  <ul>
  <li>Set the execution context to <code>E</code><sub><code>b</code></sub>.</li>
  </ul>
</blockquote>

<p>is <em>not</em> skipped.</p>

<p>So, as far as I can see, a <code>for</code> loop gets its own execution context, which starts out as a copy of the current execution context, but it <em>does not</em> get its own set of local variable bindings. IOW: it gets its own dynamic execution context, but not its own lexical scope.</p>

<p>I must admit, I'm still not sure I fully understand it, but it doesn't get any more precise than this.</p>
"
"<p>Just wondering if anyone has any realworld examples or know when you might use the NOT, AND, OR, XOR, &lt;&lt;, >> operators in Ruby.</p>

<p>I've been programming for 4 years and never come across the need to use any of these, wondering how common actual usage is &amp; if its something I should fully understand. </p>

<p>Thanks,
-J</p>
","2988","","<p>In <a href=""http://StackOverflow.Com/questions/2738249/take-most-significant-8-bytes-of-the-md5-hash-of-a-string-as-a-long-in-ruby/2739379#2739379"">an answer to another question</a>, I was forced to do some bit-twiddling to work around a missing feature in the <code>String#unpack</code> / <code>Array#pack</code> pair of APIs. It uses left-shift (<code>&lt;&lt;</code>) and bitwise-or (<code>|</code>).</p>
"
"<blockquote>
  <blockquote>
    <p>print (-1 == -1) and (myobj.nil?)</p>
  </blockquote>
</blockquote>

<p>true</p>

<blockquote>
  <blockquote>
    <p>print (-1 == -1) &amp;&amp; (myobj.nil?) </p>
  </blockquote>
</blockquote>

<p>false</p>

<p>Note, myobj.nil? returns false
so, should not this always be false.</p>
","2988","","<p><code>&amp;&amp;</code> and <code>and</code> have different precedence. In particular, <code>and</code> has very low precedence, lower than almost anything else.</p>

<p>The return value of <code>print</code> is <code>nil</code>, at least in Ruby 1.8. Therefore, the first expression reduces like this:</p>

<pre><code>(print (-1 == -1)) and myobj.nil?
(print    true)    and myobj.nil? # =&gt; with the side-effect of printing ""true""
      nil          and myobj.nil?
      nil
</code></pre>

<p>While the second expression reduces like this:</p>

<pre><code>print ((-1 == -1) &amp;&amp; myobj.nil?)
print (   true    &amp;&amp; myobj.nil?)
print                myobj.nil?
print                 false       # =&gt; with the side-effect of printing ""false""
            nil
</code></pre>
"
"<p>In my list, addition, the operation + appears as #. How can I make this appear exactly as +? When I eval it, it should also work exactly the same as +.</p>

<p>I guess this would also apply in all kinds of functions in Clojure...
Thanks guys.</p>
","2988","","<p>An operation is just a piece of code, assigned to a variable. If you want to rebind an operation, you just rebind that variable:</p>

<pre><code>(def - +)
(- 1 2 3)
# =&gt; 6
</code></pre>

<p>The only problem here, is that the <code>#</code> character is special in Clojure. I'm not sure whether you can use <code>#</code> as a variable name <em>at all</em>, at the very least you will need to quote it when binding it and probably also when calling it:</p>

<pre><code>(def # +)
# =&gt; java.lang.Exception: No dispatch macro for: 
</code></pre>

<p>Unfortunately, I'm not familiar enough with Clojure to know how to quote it.</p>
"
"<p>I have the following program.</p>

<pre><code>module C
  def self.included(base)
    base.extend(ClassMethods)

  end

  module ClassMethods
    def test_for
      class_eval &lt;&lt;-DEFINECLASSMETHODS
        def self.my_method(param_a)
          puts ""SELF is: #{self.inspect}""
          puts param_a
          puts ""#{param_a}""
        end
      DEFINECLASSMETHODS
    end
  end
end

class A
  include C
end

class B &lt; A
  test_for
end
</code></pre>

<p>when I run <code>B.new.my_method(""aaa"")</code>, I got this error</p>

<pre><code>NameError: undefined local variable or method `param_a' for B:Class
</code></pre>

<p>I am quite confused.</p>

<p>I define param_a as a local variable in class method my_method,</p>

<pre><code>puts param_a
</code></pre>

<p>runs good, and will output the ""aaa"".</p>

<p>however,</p>

<pre><code>puts ""#{param_a}""
</code></pre>

<p>output that error.</p>

<p>why?</p>

<p>Can anyone explain this?</p>
","2988","","<p>Those are some majorly complex hoops you are jumping through, to achieve basically this:</p>

<pre><code>module C
  def test_for
    define_singleton_method :my_method do |param_a|
      puts ""SELF is: #{inspect}""
      p param_a
    end
  end
end

class A
  extend C
end

class B &lt; A
  test_for
end

B.my_method 'foo'
# =&gt; SELF is: B
# =&gt; ""foo""
</code></pre>

<p>EDIT: I just realized that the solution above is <em>still</em> much more complicated than it needs to be. In fact, we do not need any metaprogramming <em>at all</em>:</p>

<pre><code>module C
  module D
    def my_method(param_a)
      puts ""SELF is: #{inspect}""
      p param_a
    end
  end
  def test_for
    extend D
  end
end

class A
  extend C
end

class B &lt; A
  test_for
end

B.my_method 'foo'
# =&gt; SELF is: B
# =&gt; ""foo""
</code></pre>
"
"<p>Can I deploy a Ruby on Rails webapp to an IIS webserver?</p>

<p>Is there any solid support for this somehow?</p>
","2988","","<p>Microsoft's Ruby Implementation for the .NET Framework, <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a> contains the <a href=""https://GitHub.Com/IronRuby/IronRuby/tree/master/Merlin/Main/Hosts/IronRuby.Rack/#readme"" rel=""nofollow""><code>IronRuby.Rack</code> adapter</a>, which lets you run <em>any</em> Rack-based web application, including Ruby on Rails apps, but also Sinatra, Merb, Camping and others on IIS.</p>

<p>Unfortunately, there's no pre-compiled binary yet, but here's <a href=""http://IAmNotMyself.Com/2010/04/22/RunningRailsInIIS7WithIronRubyRack.aspx"" rel=""nofollow"">a nice screencast that walks you through compiling the Rack adapter</a> and deploying a simple app on IIS.</p>
"
"<p>I found that a lot of Java programs in Windows use .bat batch file as program launcher. It looks weird if compared with other programs which use .exe executable file.</p>

<p>Why can't those Java programs use .exe file? Is that a limitation of Java program?</p>

<p>Thanks.</p>
","2988","","<p>Actually, quite a lot of Java applications <em>do</em> use native launchers instead of batch scripts: <a href=""http://Eclipse.Org/"" rel=""nofollow"">Eclipse</a>, <a href=""http://NetBeans.Org/"" rel=""nofollow"">NetBeans</a>, <a href=""http://JetBrains.Com/idea/"" rel=""nofollow"">IntelliJ IDEA</a>, <a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a> and <a href=""http://Vuze.Com/"" rel=""nofollow"">Vuze</a> are only few of the examples.</p>

<p>The main reason why people <em>don't</em> do this more often, is that embedding a JVM in C is actually somewhat tricky and if you can get away with launching it from a batch script, then why bother?</p>
"
"<p>I need to get the ""274.20p"" out of:</p>

<pre><code>&lt;td nowrap=""nowrap"" class=""dataRegularUlOn"" style=""text-align: right;""&gt;274.20p&lt;/td&gt;
</code></pre>

<p>I would like to do regular expressions on:</p>

<pre><code>&lt;td    class=""dataRegularUlOn""    &gt;
</code></pre>

<p>so something like:</p>

<pre><code>/&lt;td(.*?)class=""dataRegularUlOn""(.*?)&gt;/
</code></pre>

<p>I'm using ruby, on linux. </p>

<p>thks</p>
","2988","","<p>Why do you want to write your own HTML parser, when there's plenty of perfectly capable HTML parsers already out there?</p>

<pre><code>require 'nokogiri'

doc = Nokogiri::HTML('
    &lt;td nowrap=""nowrap"" class=""dataRegularUlOn"" style=""text-align: right;""&gt;
        274.20p
    &lt;/td&gt;')

p doc.search('.dataRegularUlOn').map(&amp;:text)
# =&gt; [""272.20p""]
</code></pre>
"
"<p>I'm trying to create a Messages object that inherits Array. The messages will gather a group of Message objects. I'm trying to create an xml output with ROXML that looks like this:</p>

<pre><code>&lt;messages&gt;
    &lt;message&gt;
        &lt;type&gt;&lt;/type&gt;
        &lt;code&gt;&lt;/code&gt;
        &lt;body&gt;&lt;/body&gt;
    &lt;/message&gt;
    ...
&lt;/messages&gt;
</code></pre>

<p>However, I can't figure out how to get the message objects in the Messages object to display in the xml. Here is the code I've been working with:</p>

<pre><code>require 'roxml'

class Message
  include ROXML

  xml_accessor :type
  xml_accessor :code
  xml_accessor :body
end

class Messages &lt; Array
  include ROXML

  # I think this is the problem - but how do I tell ROXML that
  # the messages are in this instance of array?
  xml_accessor :messages, :as =&gt; [Message]

  def add(message)
    self &lt;&lt; message
  end

end


message = Message.new
message.type = ""error""
message.code = ""1234""
message.body = ""This is a test message.""

messages = Messages.new
messages.add message

puts messages.length
puts messages.to_xml
</code></pre>

<p>This outputs:</p>

<pre><code>1
&lt;messages/&gt;
</code></pre>

<p>So, the message object I added to messages isn't getting displayed. Anyone have any ideas? Or am I going about this the wrong way?</p>

<p>Thanks for any help.</p>
","2988","","<p>I don't think what you want is possible. You are somehow trying to get access to the internal state of the <code>Array</code> class, which is not only impossible because on most implementations those internals are hidden away in the C/C++/Java/.NET/Objective-C/ABAP runtime but also quite simply a bad idea and bad object-oriented design.</p>

<p>The thing is, <code>Messages</code> is really not an <code>Array</code>, therefore it shouldn't inherit from <code>Array</code>. Tell me: are you really 100% sure that your <code>Messages</code> class is able to faithfully fulfill the contracts of <em>all</em> 81 methods on <code>Array</code>? And what do <code>assoc</code>, <code>rassoc</code>, <code>rindex</code> and <code>transpose</code> even <em>mean</em>, when applied to <code>Messages</code>?</p>

<p>You'd be much better off using delegation instead of inheritance here. This gives you a nice named entity that you can pass to <code>xml_accessor</code>:</p>

<pre><code>require 'forwardable'
require 'roxml'

class Messages
  extend Forwardable
  include ROXML

  class &lt;&lt; self; alias_method :[], :new end

  xml_reader :messages, :as =&gt; [Message]

  def initialize(*messages) @messages = messages end

  def_delegators :messages, :length, :&lt;&lt;
end
</code></pre>

<p>Note: I also changed a couple of other things here. For example, I personally believe that an object should be valid and usable after it is constructed. In your version of the code, a <code>Message</code> is basically invalid after it is constructed and only becomes valid after you call the <code>type=</code>, <code>code=</code> and <code>body=</code> setters:</p>

<pre><code>class Message
  include ROXML

  class &lt;&lt; self; alias_method :[], :new end

  xml_reader :type, :body
  xml_reader :code, :as =&gt; Integer

  def initialize(type=nil, code=nil, body=nil)
    @type, @code, @body = case opts = type
    when Hash
      opts[:type], opts[:code], opts[:body]
    else
      type, code, body
    end
  end
end
</code></pre>

<p>Here's a slightly expanded usage example:</p>

<pre><code>msgs = Messages[Message['error', 1234, 'This is a test message.'], Message[]]

msgs &lt;&lt; Message[
  type: 'warning', 
  code: 4815162342, 
  body: 'This is another test message.'
]

puts msgs.to_xml
# =&gt; &lt;messages&gt;
# =&gt;   &lt;message&gt;
# =&gt;     &lt;type&gt;error&lt;/type&gt;
# =&gt;     &lt;body&gt;This is a test message.&lt;/body&gt;
# =&gt;     &lt;code&gt;1234&lt;/code&gt;
# =&gt;   &lt;/message&gt;
# =&gt;   &lt;message/&gt;
# =&gt;   &lt;message&gt;
# =&gt;     &lt;type&gt;warning&lt;/type&gt;
# =&gt;     &lt;body&gt;This is another test message.&lt;/body&gt;
# =&gt;     &lt;code&gt;4815162342&lt;/code&gt;
# =&gt;   &lt;/message&gt;
# =&gt; &lt;/messages&gt;
</code></pre>
"
"<p>Well, first I should probably ask if this is browser dependent.</p>

<p>I've read that if an invalid token is found, but the section of code is valid until that invalid token, a semicolon is inserted before the token if it is preceded by a line break.<br>
However, the common example cited for bugs caused by semicolon insertion is:</p>

<pre><code>return
  _a+b;
</code></pre>

<p>which doesn't seem to follow this rule, since _a would be a valid token. On the other hand, breaking up call chains works as expected:</p>

<pre><code>$('#myButton')
  .click(function(){alert(""Hello!"")});
</code></pre>

<p>Does anyone have a more in-depth description of the rules?</p>
","2988","","<p>Straight from the <a href=""http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm"" rel=""nofollow"">ECMA-262, Fifth Edition ECMAScript Specification</a>:</p>

<blockquote>
  <h1>7.9.1 Rules of Automatic Semicolon Insertion</h1>
  
  <p>There are three basic rules of semicolon insertion:</p>
  
  <ol>
  <li>When, as the program is parsed from left to right, a token (called the <em>offending token</em>) is encountered that is not allowed by any production of the grammar,  then a semicolon is automatically inserted before the offending token if one or more of the following conditions is true:
  <ul>
  <li>The offending token is separated from the previous token by at least one <code>LineTerminator</code>.</li>
  <li>The offending token is <kbd>}</kbd>.</li>
  </ul></li>
  <li>When, as the program is parsed from left to right,  the end of the input stream of tokens is encountered and the parser is unable to parse the input token stream as a single complete ECMAScript <code>Program</code>, then a semicolon is automatically inserted at the end of the input stream.</li>
  <li>When, as the program is parsed from left to right, a token is encountered that is allowed by some production of the grammar, but the production is a <em>restricted production</em> and the token would be the first token for a terminal or nonterminal immediately following the annotation ""<sub>[no <code>LineTerminator</code> here]</sub>"" within the restricted production (and therefore such a token is called a restricted token), and the restricted token is separated from the previous token by at least one <strong>LineTerminator</strong>, then a semicolon is automatically inserted before the restricted token.</li>
  </ol>
  
  <p>However, there is an additional overriding condition on  the preceding rules: a semicolon is never inserted automatically if the semicolon would then be parsed as an empty statement or if that semicolon would become one of the two semicolons in the header of a <kbd>for</kbd> statement (see 12.6.3).</p>
</blockquote>
"
"<p>I've noticed at least the following oddities around rubygems on Debian (5.0 lenny in my case):</p>

<ul>
<li>Packages go into a different installation location: /var/lib/gems vs /usr/lib/ruby/gems</li>
<li>The debian package is rubygems 1.3.6, and updating rubygems to the latest version (1.3.7) doesn't work:</li>
</ul>

<pre>
  $ sudo gem update --system
  ERROR:  While executing gem ... (RuntimeError)
    gem update --system is disabled on Debian. RubyGems can be updated using the official Debian repositories by aptitude or apt-get.
</pre>

<ul>
<li>Not all gems appear to work like they do on other systems. For instance, when installing Phusion Passenger, it did not detect the ""rack"" gem even though it was definitely installed.</li>
<li>Manually installing rubygems using the source tarball and reinstalling all my gems (to /usr/lib/ruby/gems) made my problems go away.</li>
</ul>

<p>What's the deal? Why is debian's package different?</p>
","2988","","<p>Note that what I wrote below has significantly changed recently. The Debian Ruby Team has more or less completely revamped their entire approach, including but not limited to their packaging of RubyGems. I'm not sure about Debian 6, but in the version <em>after</em> that, installing Ruby and the RubyGems package from Debian should be safe, maybe even recommended. And obviously, that is going to trickle down into Ubuntu as well.</p>

<hr>

<p>[EDIT: The following is outdated as of Debian 7 at the latest.]</p>

<p>Mixing to two different package managers is generally a <em>very bad</em> idea. The Debian-Ruby team tries their best to patch RubyGems in such a way that it becomes a slightly less bad idea.</p>

<p>Also, Debian has a set of rules that are intended to keep the system consistent. RubyGems <em>also</em> has its own set of rules. Those two sets of rules are unfortunately not compatible. So, the Debian-Ruby developers patch RubyGems to respect <em>Debian's</em> rules instead of RubyGems's. Moving gems from <code>/usr/lib/ruby</code> to <code>/var/lib</code> is one of those things.</p>

<p>Another problem is that Debian stable is, well, stable. This means that the Debian team <em>guarantees</em> that the behavior of the <em>entire</em> system, all 20000 packages, will <em>never</em> change during a release. But the RubyGems developers don't make their bugfixes available separately, the only way to get a bugfix is to upgrade to a new version, with (potentially) different behavior. Therefore, the Debian-Ruby developers cannot just take the RubyGems sources unmodified, they have to reverse engineer the bugfixes from 1.3.7 and apply them to <em>their</em> version of 1.3.6, to ensure backwards compatibility.</p>

<p>In general, you should avoid mixing package managers. Either use RubyGems for everything (in which case it is best to install RubyGems from source instead of using the Debian package) or use APT for everything, in which case you might be interested in <a href=""http://DebGem.Com/"">DebGem</a>, a service by the Phusion guys (makers of Ruby Enterprise Edition and Phusion Passenger) which provides Debian and Ubuntu packages for pretty much all Gems.</p>
"
"<p>Lets say I have the following array:</p>

<pre><code>my_array = [1, 5, 8, 11, -6]
</code></pre>

<p>I need to iterate over this array and add the values prior to the current value together.  An example will probably be easier to understand. I need to return an array that should look something like this:</p>

<pre><code>final_array = [1, 6, 14, 25, 19]
</code></pre>

<p>I have tried doing something like this:</p>

<pre><code>my_array.collect {|value| value + previous_values }
</code></pre>

<p>But obviously that doesn't work because I can't figure out how to get the previous values in the array.  </p>

<p>I am a programming noob so this might be easier than I am making it.  I am pretty sure I need to use either collect or inject, but I can't seem to figure out how to do this.  </p>

<p>Any help would be appreciated. </p>
","2988","","<p>My very first instinct was: ""That's obviously a scan (aka prefix-sum), so that should be easy"":</p>

<pre><code>[1, 5, 8, 11, -6].scan(:+)
</code></pre>

<p>Obviously, I've been reading way too much Haskell and Scala lately, because <em>there is no <code>Enumerable#scan</code></em> in Ruby &hellip; yet:</p>

<pre><code>module Enumerable
  def scan(initial=first, &amp;block)
    [initial].tap {|res| 
      reduce {|acc, el| 
        block.(acc, el).tap {|el|
          res &lt;&lt; el
        }
      }
    }
  end
end
</code></pre>

<p>If you want <code>Enumerable#scan</code> to behave like <code>Enumerable#reduce</code>, i.e. take an optional initial argument and an optional symbol, we need to enhance our version slightly with some argument massaging code stolen from Rubinius's <code>Enumerable#reduce</code>:</p>

<pre><code>module Enumerable
  def scan(initial=nil, sym=nil, &amp;block)
    args = if initial then [initial] else [] end
    unless block_given?
      args, sym, initial = [], initial, first unless sym
      block = -&gt;(acc, el) { acc.send(sym, el) }
    end
    [initial || first].tap {|res| 
      reduce(*args) {|acc, el| 
        block.(acc, el).tap {|e|
          res &lt;&lt; e
        }
      }
    }
  end
end
</code></pre>

<p>With this enhanced version, the example above now works:</p>

<pre><code>p [1, 5, 8, 11, -6].scan(:+)
# =&gt; [1, 6, 14, 25, 19]
</code></pre>

<p>If you have this kind of problem again, in another language, remember the terms <em>scan</em> and <em>prefix-sum</em>, such functions are usually pretty common. I don't quite understand why Ruby doesn't have them already.</p>
"
"<p>Are SAFE levels supported in JRuby? If not, is there other ways of safely running user supplied code in server?</p>
","2988","","<p>AFAIK, they aren't supported.</p>

<p>The main problem is that they are <em>very badly</em> documented, so how are the JRuby developers supposed to provide a compatible implementation if nobody knows what a compatible implementation <em>is</em>?</p>

<p>Another reason not to waste time implementing <code>$SAFE</code> levels in JRuby, is that the JVM's security mechanisms provide better protection anyway. Which is also the answer to your second question: from the point of view of the JVM, your Ruby script is just another Java program and it can be sandboxed and controlled just like any other Java program.</p>

<p><em>How</em> to do that, however, is a question for a Java expert. I'm just a lowly Ruby hacker &hellip;</p>
"
"<p>Is there a version control client that would support more VCSs? I'm mainly interested in Subversion, git and Mercurial, but others like TFS would be nice too. Like a bare Eclipse with just the right plugins installed?</p>

<p><strong>Update</strong>: I'm looking for a GUI client although a command line one would be technically interesting too.</p>
","2988","","<p><a href=""http://Amp.Carboni.ca/"" rel=""nofollow"">Amp</a>'s goals are to support all major repository formats, all major network protocols, all major workflows and all major commandline interfaces. However, at the moment it only supports Mercurial. Support for Git, Bazaar, Subversion, CVS and darcs is planned.</p>

<p>As for TFS: is there even an open specification for it? If not, then implementing another client would basically amount to massive amounts of reverse engineering. Judging by <em>other</em> attempts at reverse engineering Microsoft protocols, formats and products, we can assume that this is going to take at least 10 years.</p>
"
"<p>How the heck does Ruby do this? Does Jörg or anyone else know what's happening behind the scenes? </p>

<p>Unfortunately I don't know C very well so <a href=""https://GitHub.Com/Ruby/Ruby/tree/trunk/bignum.c#L1816-1848"" rel=""nofollow""><code>bignum.c</code></a> is of little help to me. I was just kind of curious it someone could explain (in plain English) the theory behind whatever miracle algorithm its using.</p>

<pre><code>irb(main):001:0&gt; 999**999
</code></pre>

<blockquote>
  <pp>
</blockquote>
","2988","","<p>Simple: it does it the same way <em>you</em> do, ever since first grade. Except it doesn't compute in base 10, it computes in base 4 billion (and change).</p>

<p>Think about it: with <em>our</em> number system, we can only represent numbers from <code>0</code> to <code>9</code>. So, how can we compute <code>6+7</code> without overflowing? Easy: we <em>do</em> actually overflow! We cannot represent the result of <code>6+7</code> as a number between <code>0</code> and <code>9</code>, but we <em>can</em> overflow to the next place and represent it as <em>two</em> numbers between <code>0</code> and <code>9</code>: 3&times;10<sup>0</sup> + 1&times;10<sup>1</sup>. If you want to add two numbers, you add them digit-wise from the right and overflow (""carry"") to the left. If you want to multiply two numbers, you have to multiply every digit of one number individually with the other number, then add up the intermediate results.</p>

<p>BigNum arithmetic (this is what this kind of arithmetic where the numbers are bigger than the native machine numbers is usually called) works basically the same way. Except that the base is not 10, and its not 2, either&nbsp;&ndash; it's the size of a native machine integer. So, on a 32 bit machine, it would be base 2<sup>32</sup> or 4&thinsp;294&thinsp;967&thinsp;296.</p>

<p>Specifically, in Ruby <code>Integer</code> is actually an abstract class that is never instianted. Instead, it has two subclasses, <code>Fixnum</code> and <code>Bignum</code>, and numbers automagically migrate between them, depending on their size. In MRI and YARV, Fixnum can hold a 31 or 63 bit signed integer (one bit is used for tagging) depending on the native word size of the machine. In JRuby, a Fixnum can hold a full 64 bit signed integer, even on an 32 bit machine.</p>

<p>The simplest operation is adding two numbers. And if you look at the implementation of <code>+</code> or rather <code>bigadd_core</code> in YARV's <a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/bignum.c#L1816-1848"">bignum.c</a>, it's not <em>too</em> bad to follow. I can't read C either, but you can cleary see how it loops over the individual digits.</p>
"
"<p>I was looking at the <a href=""http://www.w3.org/TR/REC-html40/interact/scripts.html"">W3C specs for the script tag</a>, and I noticed you can specify VBScript and TCL as a language type. This is extremely new to me; I've only ever seen Javascript used with the script tag.</p>

<p>Why aren't other languages more commonly used, and is there a complete list of languages you can use within this tag?</p>
","2988","","<p>You can put anything you want in there. That's the <em>whole point</em> of MIME types.</p>

<p>The question is of course whether or not your user's browser can actually interpret it. But that's not really specific to the <code>&lt;script&gt;</code> element. My browser, for example, only understands CSS for stylesheets, others also understand XSLT. My browser only understands HTML, XHTML, HTML5, MathML and SVG for documents, others also understand PDF or don't understand MathML. My browser understands alpha-transparent PNGs, others don't. Before the GIF patent ran out, there were some browsers that didn't understand GIFs, while others paid the licensing fees (or used the patent illegally or were developed in jurisdictions where software patents are illegal) and did understand GIFs. Some browsers understand H.264 videos, others Theora.</p>

<p>In general, the only language that is guaranteed to be understood by all browsers, is ECMAScript 3rd Edition. Most browsers also understand some subset of JavaScript.</p>

<p>Many versions of Internet Explorer understand VBScript.</p>

<p>The CoffeeScript compiler can be compiled to ECMAScript and embedded into a website, so that you can use CoffeeScript in your page via the <code>text/coffeescript</code> MIME type.</p>

<p>There's a project called HotRuby, which is a YARV bytecode interpreter written in ECMAScript. It allows you to use <code>text/ruby</code>.</p>

<p>Microsoft has a project called Gestalt, which uses IronRuby and IronPython running on top of the DLR inside Silverlight to provide support for <code>text/python</code> and <code>text/ruby</code> (and presumably <em>any</em> language that can run on top of the DLR, e.g. Scheme, Smalltalk, PHP, Tcl.)</p>

<p>Mozilla had a project a while back called IronMonkey, I believe, which embedded multiple popular execution engines, such as MRI Ruby, CPython, Perl and others into Firefox, allowing the use of all those languages for browser scripting.</p>

<p>I remember reading somewhere that someone built a plugin for tcc (tiny C compiler) support, which would allow you to use <code>text/c</code>.</p>

<p>Just a couple of days ago, Miguel de Icaza (the creater of Mono) suggested that the ISO CLI should be added to the browser as a scripting platform, allowing you to use CIL bytecode for scripting via an <code>application/cil</code> MIME type.</p>
"
"<p>I am preparing for my interview tomorrow -- I need the answer to this question:</p>

<p>How can you print 1 to 10 &amp; 10 to 1 by using recursion with single variable</p>
","2988","","<p>Here's one in Ruby:</p>

<pre><code>puts (r = -&gt;n=1 { if n&lt;=10 then [n] + r.(n+1) + [n] else [] end }).()
</code></pre>

<p>Note: before you conclude that Ruby is an unreadable mess even worse than Perl, let me assure you: this is <em>not</em> idiomatic Ruby. Idiomatic Ruby would be more like</p>

<pre><code>def recursive_count_up_and_down(n=1)
  return [] unless n&lt;=10
  [n] +
  recursive_count_up_and_down(n + 1) +
  [n]
end

puts recursive_count_up_and_down
</code></pre>

<p>Of course, Ruby is an imperative language, so doing it <em>really</em> idiomatically would not use recursion:</p>

<pre><code>1.upto(10) do |i| puts i end
10.downto(1) do |i| puts i end
</code></pre>

<p>Here's another neat one that unfortunately doesn't use recursion, either:</p>

<pre><code>puts Array.new(20) {|i| if i &lt; 10 then i+1 else 20-i end }
</code></pre>

<p>BTW: all the solutions so far, including mine, are actually cheating, because technically they use <em>two</em> variables, because</p>

<pre><code>function foo {}
</code></pre>

<p>is equivalent to</p>

<pre><code>var foo = λ{}
</code></pre>

<p>So, in my example above, there are <em>two</em> variables: <code>recursive_count_up_and_down</code> and <code>n</code>. We could eliminate both of those by writing in a tacit point-free style (for example in the SK-calculus), but I'll leave that as an exercise to the reader. (Meaning I can't figure it out :-) )</p>
"
"<p>first time at stack overflow.</p>

<p>I'm looking into using some of the metaprogramming features provided by Ruby or Python, but first I need to know the extent to which they will allow me to extend the language.  The main thing I need to be able to do is to rewrite the concept of <em>Class</em>.  This doesn't mean that I want to rewrite a <em>specific</em> class during run time, but rather I want to make my own conceptualization of what a <em>Class</em> is.  To be a smidge more specific here, I want to make something that is <em>like</em> what people normally call a Class, but I want to follow an ""<a href=""http://en.wikipedia.org/wiki/Open_world_assumption"" rel=""nofollow"">open world</a>"" assumption.  In the ""closed world"" of normal Classes, if I declare Poodle to be a subclass of Dog to be a subclass of Animal, then I know that Poodle is not going to also be a type of FurCoat.  However, in an open world Class, then the Poodle object I've defined may or may not be and object of type FurCoat and we won't know for sure until I explain that I can wear the poodle.  (Poor poodle.)  This all has to do with a study I'm doing concerning OWL ontologies.</p>

<p>Just so you know, I've tried to find information online, but due to the overloading of terms here I haven't found anything helpful.</p>

<p>Super thanks,
John</p>

<p>UPDATE: I just thought of a good use case for my open-world concept of Class. Perhaps this will provide a better understanding of what I really wish to do.  I want to be able to ""describe"" a Class rather than define it.  For instance, I want to be able to say that a Dog is anything that a) has four legs b) barks. Then I want to be able to create an object of unspecified Class, and describe that this object has four legs.  At this point the object is still of unspecified type.  Then I want to say that the object barks.  At this point, the object will be known to be (possibly among other things) a Dog.</p>
","2988","","<p>No, you cannot do that in <a href=""http://Ruby-Lang.Org/"" rel=""nofollow"">Ruby</a>. In Ruby, the object model is baked into the <a href=""http://Ruby-Std.NetLab.Jp/"" rel=""nofollow"">language specification</a> and is not accessible (and certainly not <em>modifiable</em>) from within the program. Even in <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a>, which is a Ruby implementation written mostly in Ruby, and with amazing metaprogramming capabilities that extend far beyond what the Ruby specification offers, some of <a href=""https://GitHub.Com/EvanPhx/Rubinius/blob/master/vm/dispatch.cpp"" rel=""nofollow"">the fundamental primitives are hardwired in C++</a>.</p>

<p>I am not that intimately familiar with <a href=""http://Python.Org/"" rel=""nofollow"">Python</a>, but I'm pretty sure it's the same way, even in <a href=""http://PyPy.Org/"" rel=""nofollow"">PyPy</a>.</p>

<p>You <em>might</em> be able to do that in <a href=""http://Smalltalk.Org/"" rel=""nofollow"">Smalltalk</a>, by modifying (or subclassing) <a href=""http://Magaloma.SeasideHosting.ST/Kernel#Behavior"" rel=""nofollow"">the <code>Behavior</code> class</a>, which is the superclass of <code>Class</code> and defines the behavior of both classes and metaclasses.</p>

<p>You can <em>certainly</em> do that in <a href=""http://Wikipedia.Org/wiki/Common_Lisp_Object_System"" rel=""nofollow"">CLOS</a>, or more precisely using <a href=""http://Wikipedia.Org/wiki/The_Art_of_the_Metaobject_Protocol"" rel=""nofollow"">CLOS's MOP</a> (<a href=""http://Wikipedia.Org/wiki/Metaobject_protocol"" rel=""nofollow"">Meta-Object Protocol</a>). After all, that's what a MOP is for: defining the object model.</p>

<p>The closest OO concept to what you are describing seems to be that of <a href=""https://C2.Com/cgi/wiki?PredicateClasses"" rel=""nofollow"">Predicate Classes</a>. A predicate class is a class whose instances are not defined statically, but by a set of predicates: all objects that satisfy the set of predicates are instances of the class, as soon as and for as long as the predicate holds. In a language with mutable state, this obviously means that objects can ""move"" in and out of predicate classes as their state changes. It also means that at any given time an object can be an instance of many or no predicate classes.</p>

<p>The only mainstream language (for a rather broad definition of ""mainstream"") I know of that has predicate classes is <a href=""http://FactorCode.Org/"" rel=""nofollow"">Factor</a>.</p>

<p>However, please note that even here, the predicates are defined and an object either fulfils them or it doesn't. There is no concept of discovering whether or not an object fulfils a predicate at runtime.</p>

<p>You might also be interested in <a href=""http://Clojure.Org/"" rel=""nofollow"">Clojure</a>'s idea of <a href=""http://Clojure.Org/multimethods/"" rel=""nofollow"">ad-hoc taxonomy</a>.</p>

<p>Last, but certainly not least, you might take a look at <a href=""http://MikelEvins.Com/"" rel=""nofollow"">Mikel Evins</a>'s object system called <a href=""http://MikelEvins.Com/categories/categories.html"" rel=""nofollow""><em>Categories</em></a>. The best description of Categories, is to simply follow the blog entries in chronological order:</p>

<ol>
<li><a href=""http://MacTech.Com/articles/frameworks/8_2/Protocol_Evins.html"" rel=""nofollow"">Protocols</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/3678.html"" rel=""nofollow"">Categories</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/5060.html"" rel=""nofollow"">A peek at Categories</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/5851.html"" rel=""nofollow"">No Kings in Rome</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/6134.html"" rel=""nofollow"">Up pops a reasonable facsimile thereof</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/6584.html"" rel=""nofollow"">Different Categories of Categories</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/7151.html"" rel=""nofollow"">Categories Bugs</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/7294.html"" rel=""nofollow"">Flat Cat in a C3 Vat</a></li>
<li><a href=""http://MikelEvins.LiveJournal.Com/7587.html"" rel=""nofollow"">Categories 0.2</a></li>
<li><a href=""http://Bywicket.Com/users/mikel/weblog/126a4/Bard.html"" rel=""nofollow"">Bard</a></li>
<li><a href=""http://Bywicket.Com/users/mikel/weblog/cd23b/Bard_intricacies.html"" rel=""nofollow"">Bard intricacies</a></li>
</ol>

<p>In the future, most of the development on Categories is going to be done in Mikel's new language <a href=""http://Bywicket.Com/groups/bard/"" rel=""nofollow"">Bard</a> and you can follow their progress by following <a href=""http://Bywicket.Com/users/mikel/?tag=categories"" rel=""nofollow"">the Categories tag</a> and <a href=""http://Bywicket.Com/users/mikel/?tag=bard"" rel=""nofollow"">the Bard tag</a> on <a href=""http://Bywicket.Com/users/mikel/"" rel=""nofollow"">Mikel's new blog</a>.</p>

<p>However, in general, I would say that the fact that Knowledge Management and Object-Orientation both use the word <em>class</em> is mainly a historic accident. I don't think that modeling one with the other is a good fit.</p>
"
"<p>There are so many questions on  <a href=""http://stackoverflow.com/questions/tagged/regex-negation""><strong>regex-negation</strong></a> here on SO.</p>

<p>I am not sure I understand why people feel the need to negate a regex.
<strong>Why not use something like <code>grep -v</code> that shows only the results that do not match the regex?</strong></p>

<hr>

<pre><code>$ ls
april  august  december  february  january  july  june  march  may  november  october  september
$ ls | grep ber
december
november
october
september
$ ls | grep -v ber
april
august
february
january
july
june
march
may
</code></pre>
","2988","","<p>One instance where I remember needing it, was in an Apache configuration. In Apache, there is a way to redirect to a different URI if the current request matches some PCRE regexp, but there is (or at least was, back when I needed it) no way to redirect if the current request <em>does not</em> match a regexp.</p>

<p>Thankfully, I was able to Google (actually, I'm not sure that Google existed already &hellip;) for a regexp-negation regexp. But it sure took me some time, and if StackOverflow had existed back then, it would have been <em>much</em> easier.</p>
"
"<p>This is a reopened question.</p>

<p>I look for a language and supporting platform for it, where the language could have pass-by-reference or pass-by-name semantics by default. I know the history a little, that there were Algol, Fortran and there still is C++ which could make it possible; but, basically, what I look for is something more modern and where the mentioned value pass methodology is <em>preferred</em> and <em>by default</em> (implicitly assumed).</p>

<p>I ask this question, because, to my mind, some of the advantages of pass-by-ref/name seem kind of obvious. For example when it is used in a standalone agent, where copyiong of values is not necessary (to some extent) and performance wouldn't be downgraded much in that case. So, I could employ it in e.g. rich client app or some game-style or standalone service-kind application.</p>

<p>The main advantage to me is the clear separation between identity of a symbol, and its current value. I mean when there is no reduntant copying, you know that you're working with the exact symbol/path you have queried/received. And intristing boxing of values will not interfere with the actual logic of program.</p>

<p>I know that there is C# <code>ref</code> keyword, but it's something not so intristic, though acceptable. Equally, I realize that pass-by-reference semantics could be simulated in virtually any language (Java as an instant example) and so on.. not sure about pass by name :)</p>

<p>What would you recommend - create a something like DSL for such needs wherever it be appropriate; or use some languages that I already know? Maybe, there is something that I'm missing?</p>

<p>Thank you!</p>

<p><strong>UPDATE</strong>: Currently, I think that Haskell would be appropriate. But I didn't investigate much, so I think I'll update this text later.</p>
","2988","","<p>Haskell has call-by-need as its default (and indeed only) evaluation strategy.</p>

<p>Now, you asked for two things: call-by-name and modern. Well, Haskell is a pure language and in a pure language call-by-name and call-by-need are semantically the same thing, or more precisely they always have the same result, the only difference being that call-by-need is usually faster and at worst only a constant factor slower than call-by-name. And Haskell surely is a modern language: it is merely 23 years old and in many of its features it is actually 10 years ahead of many languages that were created just recently.</p>

<p>The other thing you asked about is call-by-reference. Again, in a pure language, call-by-value and call-by-reference are the same thing, except that the latter is faster. (Which is why, even though most functional languages are usually described as being call-by-value, they actually implement call-by-reference.)</p>

<p>Now, call-by-name (and by extension call-by-need) are <em>not</em> the same thing as call-by-value (and by extension call-by-reference), because call-by-name may return a result in cases where call-by-value doesn't terminate.</p>

<p>However, in all cases where call-by-value or call-by-reference terminates, in a pure language, call-by-value, call-by-reference, call-by-name and call-by-need are the same thing. And in cases where they are <em>not</em> the same thing, call-by-name and call-by-need are in some sense ""better"", because they give you an answer in cases where call-by-value and call-by-reference would basically have run into an infinite loop.</p>

<p>Ergo, Haskell is your answer. Although probably not the one you were looking for :-)</p>
"
"<p>I am looking for a way to convert a base-10 number into a base-N number where N can be large. Specifically i am looking at converting to base-85 and back again. Does anyone know a simple algorithm to perform the conversion? Ideally it would provide something like:</p>

<pre><code>to_radix(83992, 85) -&gt; [11, 53, 12]
</code></pre>

<p>Any ideas are appreciated!</p>

<p>Roja</p>
","2988","","<p>That was kind of an interesting question, so I went a little overboard:</p>

<pre><code>class Integer
  def to_base(base=10)
    return [0] if zero?
    raise ArgumentError, 'base must be greater than zero' unless base &gt; 0
    num = abs
    return [1] * num if base == 1
    [].tap do |digits|
      while num &gt; 0
        digits.unshift num % base
        num /= base
      end
    end
  end
end
</code></pre>

<p>This works for arbitrary bases. It only works for integers, although there is no reason why it couldn't be extended to work with any arbitrary number. Also, it ignores the sign of the number. Again, there is no reason why it <em>must</em> do that, but mainly I didn't want to have to come up with a convention for returning the sign in the return value.</p>

<pre><code>class Integer
  old_to_s = instance_method(:to_s)
  define_method :to_s do |base=10, mapping=nil, sep=''|
    return old_to_s.bind(self).(base) unless mapping || base &gt; 36
    mapping ||= '0123456789abcdefghijklmnopqrstuvwxyz'
    return to_base(base).map {|digit| mapping[digit].to_s }.join(sep)
  end
end

[Fixnum, Bignum].each do |klass|
  old_to_s = klass.instance_method(:to_s)
  klass.send :define_method, :to_s do |base=10, mapping=nil, sep=''|
    return old_to_s.bind(self).(base) unless mapping || base &gt; 36
    return super(base, mapping, sep) if mapping
    return super(base)
  end
end
</code></pre>

<p>I also extended the <code>to_s</code> method so that it works with bases greater than 36. If you want to use a base greater than 36, you have to pass in a mapping object which maps the ""digits"" to strings. (Well, actually, all that is required is that you provide an object that responds to <code>[]</code> and returns something which responds to <code>to_s</code>. So, a string is perfect, but e.g. an array of integers also works.)</p>

<p>It also accepts an optional separator, which is used to separate the digits.</p>

<p>For example, this allows you to format an IPv4 address by treating it as a base-256 number and using the identity for the mapping and <code>'.'</code> as the separator:</p>

<pre><code>2_078_934_278.to_s(256, Array.new(256) {|i| i }, '.') # =&gt; '123.234.5.6'
</code></pre>

<p>Here's an (incomplete) testsuite:</p>

<pre><code>require 'test/unit'
class TestBaseConversion &lt; Test::Unit::TestCase
  def test_that_83992_in_base_85_is_11_53_12
    assert_equal [11, 53, 12], 83992.to_base(85)
  end
  def test_that_83992_in_base_37_is_1_24_13_2
    assert_equal [1, 24, 13, 2], 83992.to_base(37)
  end
  def test_that_84026_in_base_37_is_1_24_13_36
    assert_equal [1, 24, 13, 36], 84026.to_base(37)
  end
  def test_that_0_in_any_base_is_0
    100.times do |base|
      assert_equal [0], 0.to_base(base)
      assert_equal [0], 0.to_base(1 &lt;&lt; base)
      assert_equal [0], 0.to_base(base &lt;&lt; base)
    end
  end
  def test_that_84026_in_base_37_prints_1od_
    assert_equal '1od_', 84026.to_s(37, '0123456789abcdefghijklmnopqrstuvwxyz_')
  end
  def test_that_ip_address_formatting_works
    addr = 2_078_934_278
    assert_equal '123.234.5.6', addr.to_s(256, (0..255).to_a, '.')
    assert_equal '123.234.5.6', addr.to_s(256, Array.new(256) {|i| i}, '.')
  end
  def test_that_old_to_s_still_works
    assert_equal '84026', 84026.to_s
    assert_equal '1su2', 84026.to_s(36)
  end
end
</code></pre>
"
"<p>In all programming languages supporting optional parameters that I have seen there is a imitation that the optional parameters must appear at the end of the declaration. No required parameters may be included after an optional item.
What is the reason for that ? I guess it can be compiler/interpreter requirement.</p>
","2988","","<p>This is just an arbitrary rule that the designers of those specific languages made. There is absolutely no technical reason why that restriction should be there.</p>

<p>It works just fine in Ruby:</p>

<pre><code>def foo(m1, m2, o1='o1', o2='o2', *rest, m3, m4)
  return m1, m2, o1, o2, rest, m3, m4
end

foo(1, 2, 3, 4)
# =&gt; [1, 2, 'o1', 'o2', [], 3, 4]

foo(1, 2, 3, 4, 5)
# =&gt; [1, 2, 3, 'o2', [], 4, 5]

foo(1, 2, 3, 4, 5, 6)
# =&gt; [1, 2, 3, 4, [], 5, 6]

foo(1, 2, 3, 4, 5, 6, 7)
# =&gt; [1, 2, 3, 4, [5], 6, 7]

foo(1, 2, 3, 4, 5, 6, 7, 8)
# =&gt; [1, 2, 3, 4, [5, 6], 7, 8]
</code></pre>

<p>All mandatory arguments must be supplied:</p>

<pre><code>foo(1, 2, 3)
# =&gt; ArgumentError: wrong number of arguments (3 for 4)
</code></pre>

<p>Without the rest parameter, supplying more than number_of_mandatory + number_of_optional arguments is an error:</p>

<pre><code>def bar(m1, m2, o1='o1', o2='o2',  m3, m4)
  return m1, m2, o1, o2, m3, m4
end

bar(1, 2, 3, 4, 5, 6, 7)
# =&gt; ArgumentError: wrong number of arguments (7 for 6)
</code></pre>

<p>Mandatory parameters at the beginning of the parameter list are bound from left-to-right from the beginning of the argument list. Mandatory parameters at the end of the parameter list are bound from right-to-left from the end of the argument list. Optional parameters are bound left-to-right from the beginning of the remaining argument list. All arguments left over are bound to rest arguments.</p>
"
"<pre><code>require 'sketchup'

entities = Sketchup.active_model.entities
summa = Hash.new

for face in entities
  next unless face.kind_of? Sketchup::Face
  if (face.material)
    summa[face.material.display_name] += face.area
  end
end
</code></pre>

<p>I'm trying to get the structure in the array as such:</p>

<pre><code>summa { ""Bricks"" =&gt; 500, ""Planks"" =&gt; 4000 }
</code></pre>

<p>By the way, I'm making a ruby script for Google Sketchup</p>

<p>But if I run this code I only get </p>

<pre><code>Error: #&lt;NoMethodError: undefined method `+' for nil:NilClass&gt;
C:\Program Files (x86)\Google\Google SketchUp 7\Plugins\test.rb:17
C:\Program Files (x86)\Google\Google SketchUp 7\Plugins\test.rb:14:in `each'
C:\Program Files (x86)\Google\Google SketchUp 7\Plugins\test.rb:14
C:\Program Files (x86)\Google\Google SketchUp 7\Plugins\test.rb:8:in `call'
</code></pre>

<p>As I'm used to using PHP and just doing <code>$array['myownassoc'] += bignumber;</code>
But I guess this isn't the right approach when using Ruby?</p>

<p>So any help in how I need to go would be nice.</p>
","2988","","<p>The problem is this:</p>

<pre><code>summa[face.material.display_name] += face.area
</code></pre>

<p>This is (roughly) equivalent to</p>

<pre><code>summa[face.material.display_name] = summa[face.material.display_name] + face.area
</code></pre>

<p>However, you start out with <code>summa</code> as an empty hash:</p>

<pre><code>summa = Hash.new
</code></pre>

<p>Which means that whenever you encounter a specific material for the first time (and obviously, this is going to be already the case in the very first iteration of the loop), <code>summa[face.material.display_name]</code> simply doesn't exist. So, you are trying to add a number to something that doesn't exist, which obviously cannot work.</p>

<p>The quick fix would be to just initialize the hash with a default value, so that it returns something useful instead of <code>nil</code> for a non-existing key:</p>

<pre><code>summa = Hash.new(0)
</code></pre>

<p>There are, however, a lot of other improvements that could be made to the code. Here's how I would do it:</p>

<pre><code>require 'sketchup'

Sketchup.active_model.entities.grep(Sketchup::Face).select(&amp;:material).
reduce(Hash.new(0)) {|h, face|
  h.tap {|h| h[face.material.display_name] += face.area }
}
</code></pre>

<p>I find that <em>much</em> easier to read, instead of ""loop over this, but skip one iteration if that thing happens, and also don't do this if that happens"".</p>

<p>This is actually a common pattern, that pretty much every Rubyist has already written a dozen times, so I actually had a code snippet lying around that I only needed to slightly adapt. However, I am going to show you how I <em>could</em> have refactored your original code step-by-step if I hadn't already had the solution.</p>

<p>First, let's start with coding style. I know it's boring, but it <em>is</em> important. <em>What</em> the actual coding style is, is not important, the important thing is that the code is <em>consistent</em>, which means that one piece of code should look the same as any other piece of code. In this particular instance, you are asking the Ruby community to provide you with unpaid support, so it is polite to at least format the code in a style that members of that community are used to. This means standard Ruby coding style: 2 spaces for indentation, snake_case for method and variable names, CamelCase for constants which refer to modules or classes, ALL_CAPS for constants, and so on. Don't use parentheses unless they clear up the precedence.</p>

<p>In your code, for example, you use sometimes 3 spaces, sometimes 4 spaces, sometimes 5 spaces and sometimes 6 spaces for indentation, and all of that in just 9 non-empty lines of code! Your coding style is not only inconsistent with the rest of the community, it isn't even consistent with its own next line!</p>

<p>Let's fix that first:</p>

<pre><code>require 'sketchup'
entities = Sketchup.active_model.entities
summa = {}

for face in entities
  next unless face.kind_of? Sketchup::Face
  if face.material
    summa[face.material.display_name] += face.area
  end
end
</code></pre>

<p>Ah, much better.</p>

<p>As I already mentioned, the first thing we need to do, is fix the obvious problem: replace <code>summa = {}</code> (which BTW would be the idiomatic way to write it) with <code>summa = Hash.new(0)</code>. Now, the code at least <em>works</em>.</p>

<p>As a next step, I would switch the assignment of the two local variables: first you assign <code>entities</code>, then you assign <code>summa</code>, then you do something with <code>entities</code> and you have to look three lines up to figure out what <code>entities</code> was. If you switch the two, the usage and the assignment of <code>entities</code> are right next to each other.</p>

<p>As a result, we see that <code>entities</code> is assigned, then immediately used and then never used again. I don't think this improves readability much, so we can get rid of it altogether:</p>

<pre><code>for face in Sketchup.active_model.entities
</code></pre>

<p>Next comes the <code>for</code> loop. Those are <em>highly</em> un-idiomatic in Ruby; Rubyists strongly prefer internal iterators. So, let's switch to one:</p>

<pre><code>Sketchup.active_model.entities.each {|face|
  next unless face.kind_of? Sketchup::Face
  if face.material
    summa[face.material.display_name] += face.area
  end
}
</code></pre>

<p>One advantage this has, is that now <code>face</code> is local to the body of the loop, whereas before, it was leaking out into the surrounding scope. (In Ruby, only module bodies, class bodies, method bodies, block bodies and script bodies have their own scope; <code>for</code> and <code>while</code> loop bodies as well as <code>if</code>/<code>unless</code>/<code>case</code> expressions don't.)</p>

<p>Let's get on to the body of the loop.</p>

<p>The first line is a guard clause. That's good, I like guard clauses :-)</p>

<p>The second line is, well, if <code>face.material</code> is true-ish, it does something otherwise it does nothing, which means the loop is over. So, it's <em>another</em> guard clause! However, it is written in a <em>totally</em> different style than the first guard clause, directly one line above it! Again, consistency is important:</p>

<pre><code>Sketchup.active_model.entities.each {|face|
  next unless face.kind_of? Sketchup::Face
  next unless face.material
  summa[face.material.display_name] += face.area
}
</code></pre>

<p>Now we have two guard clauses right next to each other. Let's simplify the logic:</p>

<pre><code>Sketchup.active_model.entities.each {|face|
  next unless face.kind_of? Sketchup::Face &amp;&amp; face.material
  summa[face.material.display_name] += face.area
}
</code></pre>

<p>But now there is only one single guard clause guarding only one single expression. So, we can just make the whole expression itself conditional:</p>

<pre><code>Sketchup.active_model.entities.each {|face|
  summa[face.material.display_name] += face.area if
    face.kind_of? Sketchup::Face &amp;&amp; face.material
}
</code></pre>

<p>However, that's still kind of ugly: we are looping over some collection, and then inside the loop we skip over all the items we don't want to loop over. So, if we don't want to loop over them, we do we loop over them in the first place? We don't we just select the ""interesting"" items first and then loop over just them?</p>

<pre><code>Sketchup.active_model.entities.select {|e|
  e.kind_of? Sketchup::Face &amp;&amp; e.material
}.each {|face|
  summa[face.material.display_name] += face.area
}
</code></pre>

<p>We can do some simplification on this. If we realize that <code>o.kind_of? C</code> is the same as <code>C === o</code>, then we can use the <code>grep</code> filter which uses <code>===</code> to pattern match, instead of <code>select</code>:</p>

<pre><code>Sketchup.active_model.entities.grep(Sketchup::Face).select {|e| e.material
}.each { … }
</code></pre>

<p>Our <code>select</code> filter can further be simplified by using <code>Symbol#to_proc</code>:</p>

<pre><code>Sketchup.active_model.entities.grep(Sketchup::Face).select(&amp;:material).each { … }
</code></pre>

<p>Now let's get back to the loop. Anybody who has some experience in a higher-order language such as Ruby, JavaScript, Python, C++ STL, C#, Visual Basic.NET, Smalltalk, Lisp, Scheme, Clojure, Haskell, Erlang, F#, Scala, &hellip; basically any modern language at all, will immediately recognize this pattern as a catamorphism, <code>reduce</code>, <code>fold</code>, <code>inject:into:</code>, <code>inject</code> or whatever your language of choice happens to call it.</p>

<p>What a <code>reduce</code> does, is basically it ""reduces"" several things into just one thing. The most obvious example is the sum of a list of numbers: it reduces several numbers into just one number:</p>

<pre><code>[4, 8, 15, 16, 23, 42].reduce(0) {|accumulator, number| accumulator += number }
</code></pre>

<p>[Note: in idiomatic Ruby, this would be written just as <code>[4, 8, 15, 16, 23, 42].reduce(:+)</code>.]</p>

<p>One way to spot a <code>reduce</code> lurking behind a loop is to look for the following pattern:</p>

<pre><code>accumulator = something # create an accumulator before the loop

collection.each {|element|
  # do something with the accumulator
}

# now, accumulator contains the result of what we were looking for
</code></pre>

<p>In this case, the <code>accumulator</code> is the <code>summa</code> hash.</p>

<pre><code>Sketchup.active_model.entities.grep(Sketchup::Face).select(&amp;:material).
reduce(Hash.new(0)) {|h, face|
  h[face.material.display_name] += face.area
  h
}
</code></pre>

<p>Last but not least, I don't like this explicit returning of <code>h</code> at the end of block. We could obviously write it on the same line:</p>

<pre><code>h[face.material.display_name] += face.area; h
</code></pre>

<p>But I prefer the use of <code>Object#tap</code> (aka the K-combinator) instead:</p>

<pre><code>Sketchup.active_model.entities.grep(Sketchup::Face).select(&amp;:material).
reduce(Hash.new(0)) {|h, face|
  h.tap {|h| h[face.material.display_name] += face.area }
}
</code></pre>

<p>And, that's it!</p>
"
"<p>I have decided to start programming some apps for the iPhone that eventually will get submitted to App Store. So I have to use a language the Apple supports.</p>

<p>However, from what I understand, there are some variety of languages I can choose from.</p>

<p><code>Ansi C</code></p>

<p><code>Objective C</code></p>

<p><code>C</code></p>

<p><code>C++</code></p>

<p>I started learning <code>C++</code> in school back in 2001, so maybe I should use that. However, I would like to use the language that is most supported API and community wize. Which one is that?</p>
","2988","","<p>The only languages that are officially allowed by Apple are</p>

<ul>
<li>JavaScript</li>
<li>Objective-C</li>
<li>C++</li>
<li>C</li>
</ul>

<p>All other languages are not allowed.</p>

<p>Whether or not this restriction is legal is a totally different question. (My gut feeling says that, at least in countries with somewhat sane anti-trust laws, it's illegal.)</p>
"
"<p>The latest changesets to Ruby 1.9.2 no longer make the current directory <code>.</code> part of your <code>LOAD_PATH</code>. I have a non-trivial number of Rakefiles that assume that <code>.</code> is part of the <code>LOAD_PATH</code>, so this broke them (they reported ""no such file to load"" for all require statements that based off the project path). Was there a particular justification for doing this?</p>

<p>As for a fix, adding <code>$: &lt;&lt; "".""</code> everywhere works, but seems incredibly hacky and I don't want to do that. What's the preferred way to make my Rakefiles 1.9.2+ compatible?</p>
","2988","","<p>There's two reasons:</p>

<ul>
<li>robustness and</li>
<li>security</li>
</ul>

<p>Both are based on the same underlying principle: in general, you simply cannot know what the current directory is, when your code is run. Which means that, when you require a file and depend on it being in the current directory, you have no way of controlling whether that file will even be there, or whether it is the file that you actually expect to be there.</p>
"
"<p>I am using gsub in Ruby to make a word within text bold.  I am using a word boundary so as to not make letters within other words bold, but am finding that this ignores words that have a quote after them.  For example:</p>

<pre><code>text.gsub(/#{word}\b/i, ""&lt;b&gt;#{word}&lt;/b&gt;"")

text = ""I said, 'look out below'""
word = below
</code></pre>

<p>In this case the word below is not made bold.  Is there any way to ignore certain characters along with a word boundary?</p>
","2988","","<p>All that escaping in the <code>Regexp.new</code> is looking quite ugly. You could greatly simplify that by using a Regexp literal:</p>

<pre><code>word = 'below'
text = ""I said, 'look out below'""

reg = /\b#{word}\b/i
text.gsub!(reg, '&lt;b&gt;\0&lt;/b&gt;')
</code></pre>

<p>Also, you could use the modifier form of <code>gsub!</code> directly, unless that string is aliased in some other place in your code that you are not showing us. Lastly, if you use the single quoted string literal inside your <code>gsub</code> call, you don't need to escape the backslash.</p>
"
"<p>I would like to compile irb from source without any optimizations so I can get more information while stepping through (interpreter) code using gdb.  I have successfully compiled ruby 1.9.1 without problems, but I cannot find any documentation regarding irb.  I believe that irb is included in the ruby 1.9 source, but have not been able to verify this.  Can anyone point me in the right direction?</p>
","2988","","<p>Can you clarify what you mean exactly by ""compiling IRb without optimizations""?</p>

<p>You don't say which implementation of Ruby you are using. I am going to assume you are using YARV.</p>

<p>With, YARV, there is no separate compile step, it compiles IRb automatically for you, everytime you run it. (Even though YARV is a compiler, you can think of it as an interpreter, since you never have to worry about the compilation step.) Also, YARV doesn't do any optimizations when compiling AFAIK, and if it does, there is no way to influence the compilation, thus also no way to turn optimizations off.</p>

<p>IRb is quite easy to find in the YARV sourcecode. The executable lives in the <code>bin</code> directory:</p>

<ul>
<li><a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/bin/irb"" rel=""nofollow""><code>bin/irb</code></a></li>
</ul>

<p>But it's not doing any interesting work. The real meat is in the standard library:</p>

<ul>
<li><a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/lib/irb.rb"" rel=""nofollow""><code>lib/irb.rb</code></a> and </li>
<li>the whole <a href=""https://GitHub.Com/Ruby/Ruby/tree/trunk/lib/irb/"" rel=""nofollow""><code>lib/irb/</code></a> directory</li>
</ul>
"
"<p>Sometimes I have seen following code.</p>

<pre><code>gem 'factory_girl','= 1.2.3'
require 'factory_girl'
</code></pre>

<p>I tried to look at <a href=""http://docs.rubygems.org/read/book/2"" rel=""nofollow"">gem doc</a> but could not find answer to the question of what does the first line do in code above?</p>
","2988","","<p>As @theIV already explained, this activates the <code>factory_girl</code> gem, using <em>exactly</em> (because of the <code>=</code> sign) version <code>1.2.3</code>.</p>

<p>Note, however, that this is <em>very bad</em> practice and should <em>never</em> be done. If you activate gems manually inside your code, it means that people who do not use RubyGems can no longer use your code.</p>

<p>RubyGems is a package manager. Your code should <em>never</em> care about what package manager was used to install it. Some people prefer RubyGems, some dpkg/APT, some RPM/YUM, some RPM/APT, some RPM/URPMI, some RPM/YaST2, Portage, FreeBSD ports, pkgsrc, MacPorts, slashpackage, CoAPP, Conary, Slackware. There's tons of them. Some people like not to use any package manager <em>at all</em>. Or, they use RubyGems just for downloading, but then unpack the gem into their <code>vendor</code> directory.</p>

<p>All of this cannot possibly work, if you use the <code>gem</code> method in your code.</p>
"
"<p>I am able to debug my ruby program. At times, I would want to go inside the library methods and see what is happening. How to achieve it in Ruby.</p>

<p>For example,</p>

<pre><code>[ 3, 1, 7, 0 ].sort
</code></pre>

<p>i would want to go inside the sort method and see how that works lively. In Java+Eclipse this is possible, all I have to do is to attach the source of Foundation classes in Eclipse. Is it possible in Ruby with Netbeans as IDE?</p>

<p>Thanks</p>
","2988","","<p>For those methods which are implemented in Ruby, the debugger will just step into them.</p>

<p>For those methods which are <em>not</em> implemented in Ruby, i.e. they are implemented in C in MRI, YARV and tinyrb, in Java in JRuby and XRuby, in C# in IronRuby and Ruby.NET, in Smalltalk in MagLev and SmallRuby, in ABAP in BlueRuby, in Go in RubyGoLightly, in C++ in Rubinius or in Objective-C in MacRuby, the NetBeans Ruby plugin contains a stub method that only lists the method signature and the RDoc comments, but not the actual implementation.</p>

<p>The NetBeans Ruby debugger is, after all, a <em>Ruby</em> debugger, it doesn't <em>know</em> how to step into C, C++, Objective-C, C#, Smalltalk, ABAP or Java.</p>

<p>It would probably be possible to somehow link together the Ruby debugger with, say, the C++ debugger (provided that you have installed the NetBeans C++ plugin), but nobody has done that work yet.</p>

<p>In your specific case, in almost all Ruby implementations, <code>Array#sort</code> is not implemented in Ruby. The only exception is probably Rubinius, but I don't know whether Rubinius is supported by the NetBeans Ruby plugin (I use Windows and Rubinius isn't supported on Windows).</p>
"
"<p>I've just read The Good Parts, and I'm slightly confused about something. Crockford's example of pseudoclassical inheritance goes like this:</p>

<pre><code>var Mammal = function (name) {
    this.name = name;
};

Mammal.prototype.get_name = function () {
    return this.name;
};
</code></pre>

<p>Part of the problem with this is that the constructor has ""its guts hanging out"" - the methods are outside of the constructor function. I don't see what's wrong with assigning <code>get_name</code> to <code>this</code> inside the constructor though. Is it because we'd end up with multiple copies of the <code>get_name</code> method?</p>
","2988","","<p>Yes, that's basically it.</p>

<p>By assigning them to the <em>prototype</em>, they will be <em>inherited</em> by all instances of <code>Mammal</code>: there will only be <em>one single</em> copy of those functions in the entire system, no matter how many <code>Mammal</code>s there are.</p>
"
"<p>Is it possible to convert javascript code to machine code or pure native binary?</p>
","2988","","<p>Sure. Almost all modern JavaScript engines have a native code compiler. Google's V8 doesn't even have an interpreter, it <em>only</em> has a native code compiler.</p>
"
"<p>I love using HAML for HTML documents. It has clean syntax that's much more attractive than ERB. It works perfectly for HTML documents.</p>

<p>What about for non-HTML? Such as, for example, an email or text document with certain automatically-substituted components? I've been falling back to ERB, but don't like the heavy syntax compared to HAML. Is there any way to use HAML for ordinary documents without having divs and html elements appear when <code>%</code> and <code>.</code> start a line?</p>

<p>Or is there some alternative to both HAML and ERB that I should investigate?</p>
","2988","","<p>I don't think that makes sense.</p>

<p>The unique thing about HAML is that it uses a tree representation (using indentation) to represent the DOM tree. E-mails don't have a tree representation, therefore it doesn't make sense to use HAML or a HAML-like language for them.</p>
"
"<pre><code>RubyParser.new.parse ""1+1"" 
s(:call, s(:lit, 1), :+, s(:array, s(:lit, 1))) 
</code></pre>

<p>Above code is from <a href=""http://www.infoq.com/news/2007/12/ruby_ruby_parser"" rel=""nofollow"">this link</a> </p>

<p>Why there is array after + in the Sexp. I am just trying to learn ruby parser and the whole AST thing. I have been programming for a while but have no formal education in computer science. So do point to good article which explains AST etc. Please no dragon book. I tried couple of times but couldn't understand much of that book</p>
","2988","","<p>In Ruby (or at least in MRI), all message sends have exactly one argument: an array. If you send a message with no arguments, the array will simply be empty, if you send a message with one argument (as is the case in this example), the array will have one element.</p>
"
"<p>I'm writing a git-install.sh script:
<a href=""http://gist.github.com/419201"" rel=""nofollow"">http://gist.github.com/419201</a></p>

<p>To get Git's latest stable release version number, I do:</p>

<pre><code>LSR_NUM=$(curl -silent http://git-scm.com/ | sed -n '/id=""ver""/ s/.*v\([0-9].*\)&lt;.*/\1/p')
</code></pre>

<p>2 Questions:</p>

<ol>
<li><p>Refactor my code: Is there a better way programmatically to do this?</p></li>
<li><p>This works now, but it's brittle: if
the web page at <a href=""http://git-scm.com/"" rel=""nofollow"">http://git-scm.com/</a>
changes, the line above may stop
working.</p>

<p>PHP has a reliable URL for getting
the latest release version:
<a href=""http://stackoverflow.com/questions/288206/is-there-a-site-which-simply-outputs-the-latest-stable-version-numbers-of-php-and"">http://stackoverflow.com/questions/288206/is-there-a-site-which-simply-outputs-the-latest-stable-version-numbers-of-php-and</a></p>

<p>Is there something like this for
Git? This comes close: <a href=""http://www.kernel.org/pub/software/scm/git/"" rel=""nofollow"">http://www.kernel.org/pub/software/scm/git/</a></p></li>
</ol>
","2988","","<p>I generally just use the <code>maint</code> branch. It only gets commits that have been rigorously tested in other branches like <code>pu</code> or <code>next</code>. It is generally very stable and at any given time is actually likely to contain <em>less</em> bugs than the latest official release.</p>
"
"<p>I have a simple array:</p>

<pre><code>arr = [""apples"", ""bananas"", ""coconuts"", ""watermelons""]
</code></pre>

<p>I also have a function <code>f</code> that will perform an operation on a single string input and return a value. This operation is very expensive, so I would like to memoize the results in the hash.</p>

<p>I know I can make the desired hash with something like this:</p>

<pre><code>h = {}
arr.each { |a| h[a] = f(a) }
</code></pre>

<p>What I'd like to do is not have to initialize h, so that I can just write something like this:</p>

<pre><code>h = arr.(???) { |a| a =&gt; f(a) }
</code></pre>

<p>Can that be done?</p>
","2988","","<p>This is what I would probably write:</p>

<pre><code>h = Hash[arr.zip(arr.map(&amp;method(:f)))]
</code></pre>

<p>Simple, clear, obvious, declarative. What more could you want?</p>
"
"<p>In which language garbage collection algorithm is implemented  for java.i think c, please confirm?</p>
","2988","","<p>It depends on the JVM. Often, the garbage collector is implemented in the same language as the JVM, but that is not always the case.</p>

<p>In Maxine, both the JVM and the garbage collector are implemented in Java.</p>

<p>In Jikes, both the JVM and the garbage collector are implemented in Java.</p>

<p>In Rava, the JVM is implemented in Ruby and the garbage collector isn't implemented <em>at all</em>: Ruby already is a memory-managed language, there is no need to implement a separate garbage collector.</p>

<p>In IKVM, the JVM is implemented in C# and CIL and the garbage collector isn't implemented <em>at all</em>: the CLI VES already is a memory-managed environment, there is no need to implement a separate garbage collector.</p>

<p>In VisualAge for Java, the Java bytecode gets translated to Smalltalk bytecode and then executed by the Smalltalk environment. Smalltalk already is a memory-managed language, there is no need to implement a separate garbage collector.</p>

<p>In VMKit, both the VM and the garbage collector are written in C++.</p>

<p>In HotSpot, both the JVM and all 4 (or however many there currently are) garbage collectors are written in C++.</p>
"
"<p>Is there a way for programmatically accessing a method comments? or an attribute comments?</p>

<p>I would like to use it as a description for the method in a documentation which I don't want to be static or generated with rdoc or equivalent.</p>

<p>Here is an example of a Ruby class:</p>

<pre><code>Class MyClass
  ##
  # This method tries over and over until it is tired
  def go_go_go(thing_to_try, tries = 10) # :args: thing_to_try
    puts thing_to_try
    go_go_go thing_to_try, tries - 1
  end
end
</code></pre>

<p>Basically, I'd like to be able to do the following:</p>

<pre><code>get_comment MyClass.gogogo # =&gt; This method tries over and over until it is tired
</code></pre>
","2988","","<p>No, you cannot do this.</p>

<p><em>The whole point</em> of comments is that they are <em>not</em> part of the program! If you want a string that is part of your program, just use a string instead.</p>

<p>In most Ruby implementations, comments already get thrown away in the lexer, which means they don't even reach the <em>parser</em>, let alone the <em>interpreter</em> or compiler. At the time the code gets run, the comments are long gone &hellip; In fact, in implementations like Rubinius or YARV which use a compiler, there is simply no way to store the comments in the compiled executable, so even if they weren't thrown away by the lexer or the parser, there would <em>still</em> be no way to communicate them to the runtime.</p>

<p>So, pretty much your only chance is to parse the Ruby sourcefile to extract the comments. However, like I mentioned above, you cannot just take <em>any</em> parser, because most of the exisiting parsers throw comments away. (Which, again, is the <em>whole point</em> of comments, so there's nothing wrong with the parser throwing them away.) There are, however, Ruby parsers which preserve comments, most notably the ones used in tools such as RDoc or YARD.</p>

<p>YARD is especially interesting, because it also contains a query engine, which lets you search for and filter out documentation based on some powerful predicates like class name, method name, YARD tags, API version, type signature and so on.</p>

<p>However, if you <em>do</em> end up using RDoc or YARD for parsing, then why not use them in the first place?</p>

<p>Or, like I suggested above, if you want strings, just use strings:</p>

<pre><code>class Module
  private

  old_method_added = instance_method :method_added
  define_method :method_added do |meth|
    (@__doc__ ||= {})[meth] = @__last_doc__ if @__last_doc__
    @__last_doc__ = nil
    old_method_added.bind(self).(meth)
  end

  def doc(meth=nil, str)
    return @__doc__[meth] = str if meth
    @__last_doc__ = str
  end

  def defdoc(meth, doc, &amp;block)
    define_method(:meth, &amp;block)
    @__doc__[meth] = doc
  end
end
</code></pre>

<p>This gives us a method <code>Module#doc</code> which we can use to document either an already existing method by calling it with the name of the method and a docstring, or you can use it to document the very next method you define. It does this by storing the docstring in a temporary instance variable and then defining a <code>method_added</code> hook that looks at that instance variable and stores its content in the documentation hash.</p>

<p>There is also the <code>Module#defdoc</code> method which defines and documents the method in one go.</p>

<pre><code>module Kernel
  private

  def get_doc(klass, meth)
    klass.instance_variable_get(:@__doc__)[meth]
  end
end
</code></pre>

<p>This is your <code>Kernel#get_doc</code> method which gets the documentation back out (or <code>nil</code> if the method is undocumented).</p>

<pre><code>class MyClass
  doc 'This method tries over and over until it is tired'
  def go_go_go(thing_to_try, tries = 10)
    puts thing_to_try
    go_go_go thing_to_try, tries - 1
  end

  def some_other_meth; end # Oops, I forgot to document it!

  # No problem:
  doc :some_other_meth, 'Does some other things'

  defdoc(:yet_another_method, 'This method also does something') do |a, b, c|
    p a, b, c
  end
end
</code></pre>

<p>Here you see the three different ways of documenting a method.</p>

<p>Oh, and it works:</p>

<pre><code>require 'test/unit'
class TestDocstrings &lt; Test::Unit::TestCase
  def test_that_myclass_gogogo_has_a_docstring
    doc = 'This method tries over and over until it is tired'
    assert_equal doc, get_doc(MyClass, :go_go_go)
  end
  def test_that_myclass_some_other_meth_has_a_docstring
    doc = 'Does some other things'
    assert_equal doc, get_doc(MyClass, :some_other_meth)
  end
  def test_that_myclass_yet_another_method_has_a_docstring
    doc = 'This method also does something'
    assert_equal doc, get_doc(MyClass, :yet_another_method)
  end
  def test_that_undocumented_methods_return_nil
    assert_nil get_doc(MyClass, :does_not_exist)
  end
end
</code></pre>

<p>Note: this is pretty hacky. For example, there is no locking, so if two threads define methods for the same class at the same time, the documentation might get screwed up. (I.e.: the docstring might be attributed to the wrong method or get lost.)</p>

<p>I believe that <code>rake</code> does essentially the same thing with its <code>desc</code> method, and that codebase is <em>much</em> better tested than this, so if you intend to use it in production, I'd steal Jim's code instead of mine.</p>
"
"<p>I'm designing a custom VM and am curious about how many registers I should use. Initially, I had 255, but I'm a little concerned about backing 255 pointers (a whole KB) on to the stack or heap every time I call a function, when most of them won't even be used. How many registers should I use?</p>
","2988","","<p>Whatever number of registers you choose, you are probably going to have way too many for most subroutines and way too few for a few subroutines. (This is just a guess. However, considering how many things in programming follow a Power Law Distribution&nbsp;&ndash; incoming references to objects, modules, classes, outgoing references from objects, modules, classes, cyclomatic complexity of subroutines, NPath complexity of subroutines, SLOC length of subroutines, lifetime of objects, size of objects&nbsp;&ndash; it is only reasonable to assume that the same is true for the number of registers for a subroutine, especially if you consider that there is probably a correlation between complexity/length and number of registers.)</p>

<p>The Parrot VM has found quite a simple way out of this conundrum: they have an <em>infinite</em> number of registers. Obviously, those registers aren't stored in an infinite array, rather they lazily materialize just enough registers for any single subroutine. That way, they never run out of registers, and they never waste any space.</p>
"
"<p>I just started out using IronRuby (but the behaviour seems consistent when I tested it in plain Ruby) for a DSL in my .NET application - and as part of this I'm defining methods to be called from the DSL via define_method.</p>

<p>However, I've run into an issue regarding optional parens when calling methods starting with an uppercase letter.</p>

<p>Given the following program:</p>

<pre><code>class DemoClass
    define_method :test do puts ""output from test"" end
    define_method :Test do puts ""output from Test"" end

    def run
        puts ""Calling 'test'""
        test()
        puts ""Calling 'test'""
        test
        puts ""Calling 'Test()'""
        Test()
        puts ""Calling 'Test'""
        Test
    end
end

demo = DemoClass.new
demo.run
</code></pre>

<p>Running this code in a console (using plain ruby) yields the following output:</p>

<pre><code>ruby .\test.rb
Calling 'test'
output from test
Calling 'test'
output from test
Calling 'Test()'
output from Test
Calling 'Test'
./test.rb:13:in `run': uninitialized constant DemoClass::Test (NameError)
    from ./test.rb:19:in `&lt;main&gt;'
</code></pre>

<p>I realize that the Ruby convention is that constants start with an uppercase letter and that the general naming convention for methods in Ruby is lowercase. But the parens are really killing my DSL syntax at the moment.</p>

<p>Is there any way around this issue? </p>
","2988","","<p>This is just part of Ruby's ambiguity resolution.</p>

<p>In Ruby, methods and variables live in different namespaces, therefore there can be methods and variables (or constants) with the same name. This means that, when <em>using</em> them, there needs to be some way to distinguish them. In general, that's not a problem: messages have receivers, variables don't. Messages have arguments, variables don't. Variables are assigned to, messages aren't.</p>

<p>The only problem is when you have no receiver, no argument and no assignment. Then, Ruby cannot tell the difference between a receiverless message send without arguments and a variable. So, it has to make up some arbitrary rules, and those rules are basically:</p>

<ul>
<li>for an ambiguous token starting with a lowercase letter, prefer to interpret it as a message send, <em>unless</em> you positively know it is a variable (i.e. the <em>parser</em> (not(!) the interpreter) has seen an assignment before)</li>
<li>for an ambiguous token starting with an uppercase letter, prefer to interpret it as a constant</li>
</ul>

<p>Note that for a message send with arguments (even if the argument list is empty), there is no ambiguity, which is why your third example works.</p>

<ul>
<li><code>test()</code>: obviously a message send, no ambiguity here</li>
<li><code>test</code>: might be a message send or a variable; resolution rules say it is a message send</li>
<li><code>Test()</code>: obviously a message send, no ambiguity here</li>
<li><code>self.Test</code>: <em>also</em> obviously a message send, no ambiguity here</li>
<li><code>Test</code>: might be a message send or a constant; resolution rules say it is a constant</li>
</ul>

<p>Note that those rules are a little bit subtle, for example here:</p>

<pre><code>if false
  foo = 'This will never get executed'
end

foo # still this will get interpreted as a variable
</code></pre>

<p>The rules say that whether an ambiguous token gets interpreted as a variable or a message send is determined by the <em>parser</em> and not the interpreter. So, because the parser has seen <code>foo = whatever</code>, it tags <code>foo</code> as a variable, even though the code will never get executed and <code>foo</code> will evaluate to <code>nil</code> as all uninitialized variables in Ruby do.</p>

<p>TL;DR summary: you're SOL.</p>

<p>What you <em>could</em> do is override <code>const_missing</code> to translate into a message send. Something like this:</p>

<pre><code>class DemoClass
  def test; puts ""output from test"" end
  def Test; puts ""output from Test"" end

  def run
    puts ""Calling 'test'""
    test()
    puts ""Calling 'test'""
    test
    puts ""Calling 'Test()'""
    Test()
    puts ""Calling 'Test'""
    Test
  end

  def self.const_missing(const)
    send const.downcase
  end
end

demo = DemoClass.new
demo.run
</code></pre>

<p>Except this obviously won't work, since <code>const_missing</code> is defined on <code>DemoClass</code> and thus, when <code>const_missing</code> is run, <code>self</code> is <code>DemoClass</code> which means that it tries to call <code>DemoClass.test</code> when it should be calling <code>DemoClass#test</code> via <code>demo.test</code>.</p>

<p>I don't know how to easily solve this.</p>
"
"<p>Is there a way from JRuby to introspect on a Java object and find out its Java-land methods? Like what <a href=""http://github.com/oggy/looksee"" rel=""nofollow"">http://github.com/oggy/looksee</a> provides, but for Java. Or like</p>

<pre><code>(someobject).methods - 1.methods
</code></pre>

<p>This would be nice for just taking a look at what a Java object provides versus the APIDoc for it.</p>
","2988","","<p>Looksee patches the interpreter, which is the reason why it only works on MRI and YARV and not on JRuby, XRuby, IronRuby, Ruby.NET, Rubinius, tinyrb, RubyGoLightly, MacRuby, HotRuby, BlueRuby, Cardinal, MagLev, SmallRuby, Red Sun and all the other implementations.</p>

<p>So, if you are willing to patch HotSpot, I'm sure you can whip up a Java-equivalent :-)</p>

<p>As for your basic introspection, it just works&trade;:</p>

<pre><code>require 'java'
java.lang.String.public_instance_methods.sort.reject {|m| m =~ /[_?!=~&lt;&gt;]/ }
# =&gt; [:bytes, :charAt, :class, :clone, :codePointAt, :codePointBefore, 
# =&gt; :codePointCount, :com, :compareTo, :compareToIgnoreCase, :concat, 
# =&gt; :contains, :contentEquals, :display, :dup, :empty, :endsWith, :equals, 
# =&gt; :equalsIgnoreCase, :extend, :finalize, :freeze, :getBytes, :getChars, 
# =&gt; :getClass, :hash, :hashCode, :id, :indexOf, :initialize, :inspect, :intern, 
# =&gt; :isEmpty, :java, :javax, :lastIndexOf, :length, :matches, :method, 
# =&gt; :methods, :notify, :notifyAll, :offsetByCodePoints, :org, :regionMatches, 
# =&gt; :replace, :replaceAll, :replaceFirst, :send, :split, :startsWith, 
# =&gt; :subSequence, :substring, :synchronized, :taint, :tap, :toCharArray, 
# =&gt; :toLowerCase, :toString, :toUpperCase, :trim, :trust, :type, :untaint, 
# =&gt; :untrust, :wait]
</code></pre>

<p>Of course, one of the main points of JRuby is to integrate the Java and Ruby object models as closely as possible, so we are actually getting <em>both</em> Java and Ruby methods here, but by rejecting all methods with characters that are unusual or plain illegal in Java, we get a reasonably clean list and the remaining Ruby methods are not <em>that</em> hard to spot.</p>
"
"<p>I am starting out on Ruby and have heard that there is a 'Ruby way' of coding. What are some projects, apart from Ruby on Rails, that are suitable for study and is agreed upon as well designed?</p>
","2988","","<p><a href=""http://Prawn.MajesticSeaCreature.Com/"" rel=""nofollow"">Prawn</a> was explicitly created to be not only a damn good PDF generation library, but also designed from the ground up as an example of well-designed, well-factored, idiomatic Ruby code. Prawn also spawned the <a href=""http://RubyBestPractices.Com/"" rel=""nofollow"">Ruby Best Practices book</a> and the <a href=""http://Blog.RubyBestPractices.Com/"" rel=""nofollow"">RBP Blog</a>.</p>
"
"<p>i wonder if the multi threading in python/ruby is equivalent to the one in java?</p>

<p>by that i mean, is it as efficient?</p>

<p>cause if you want to create a chat application that use comet technology i know that you have to use multi threading.</p>

<p>does this mean that i can use python or ruby for that or is it better with java?</p>

<p>thanks</p>
","2988","","<p>This is not a question about Ruby, Python or Java, but more about a specific <em>implementation</em> of Ruby, Python or Java. There are Java implementations with <em>extremely</em> efficient threading implementations and there are Java implementations with extremely <em>bad</em> threading implementations. And the same is true for Ruby and Python, and really basically <em>any</em> language at all.</p>

<p>Even languages like Erlang, where an inefficient threading implementation doesn't even make <em>sense</em>, sometimes have bad threading implementations.</p>

<p>For example, if you use JRuby or Jython, then your Ruby and Python threads <em>are</em> Java threads. So, they are not only as efficient as Java threads, they are <em>exactly the same</em> as Java threads.</p>
"
"<p>How can I print a large variable nicely in an irb prompt? I have a variable that contains many variables which are long and the printout becomes a mess to wade through. What if I just want the variable names without their values? Or, can I print each one on a separate line, tabbed-in depending on depth?</p>
","2988","","<p>If you want something that is even more awesome than ""pretty"" print, you can use <a href=""https://GitHub.Com/MichaelDv/Awesome_Print/"" rel=""nofollow"">""awesome"" print</a>. And for a truly spaced out experience, sprinkle some <a href=""http://Tagaholic.Me/hirb/"" rel=""nofollow"">hirbal medicine</a> on your IRb!</p>

<p>Hirb, for example, renders ActiveRecord objects (or pretty much <em>any</em> database access library) as actual ASCII tables:</p>

<pre><code>+-----+-------------------------+-------------+-------------------+-----------+-----------+----------+
| id  | created_at              | description | name              | namespace | predicate | value    |
+-----+-------------------------+-------------+-------------------+-----------+-----------+----------+
| 907 | 2009-03-06 21:10:41 UTC |             | gem:tags=yaml     | gem       | tags      | yaml     |
| 906 | 2009-03-06 08:47:04 UTC |             | gem:tags=nomonkey | gem       | tags      | nomonkey |
| 905 | 2009-03-04 00:30:10 UTC |             | article:tags=ruby | article   | tags      | ruby     |
+-----+-------------------------+-------------+-------------------+-----------+-----------+----------+
</code></pre>
"
"<p>I'd like to try git (hosted on github) for a new project, but I have a doubt on how it works.
I am working with another guy, do we need to have two forks of the project and then merge them every time one of us makes a change to the code or is it possible to work in pair on a single origin?</p>
","2988","","<p>It's possible to have as many additional committers (called <em>collaborators</em> in GitHub terms) on a single project as you want. However, the maximum number is dependent on the pricing plan. Note that public repositories can have an unlimited number of collaborators.</p>

<p>As for Git itself: anybody who has write access to a repository can push to it.</p>
"
"<p>Besides just using <code>yield</code> for iterators in Ruby, I also use it to pass control briefly back to the caller before resuming control in the called method.  What I want to do in C# is similar.  In a test class, I want to get a connection instance, create another variable instance that uses that connection, then pass the variable to the calling method so it can be fiddled with.  I then want control to return to the called method so that the connection can be disposed.  I guess I'm wanting a block/closure like in Ruby.  Here's the general idea:</p>

<pre><code>private static MyThing getThing()
{
    using (var connection = new Connection())
    {
        yield return new MyThing(connection);
    }
}

[TestMethod]
public void MyTest1()
{
    // call getThing(), use yielded MyThing, control returns to getThing()
    // for disposal
}

[TestMethod]
public void MyTest2()
{
    // call getThing(), use yielded MyThing, control returns to getThing()
    // for disposal
}

...
</code></pre>

<p>This doesn't work in C#; ReSharper tells me that the body of <code>getThing</code> cannot be an iterator block because <code>MyThing</code> is not an iterator interface type.  That's definitely true, but I don't want to iterate through some list.  I'm guessing I shouldn't use <code>yield</code> if I'm not working with iterators.  Any idea how I can achieve this block/closure thing in C# so I don't have to wrap my code in <code>MyTest1</code>, <code>MyTest2</code>, ... with the code in <code>getThing()</code>'s body?</p>
","2988","","<p>You say you want to use C#'s <code>yield</code> keyword the same way you would use Ruby's <code>yield</code> keyword. You seem to be a little confused about what the two actually do: the two have absolutely <em>nothing</em> to do with each other, what you are asking for, is simply not possible.</p>

<p>The C# <code>yield</code> keyword is <em>not</em> the C# equivalent of the Ruby <code>yield</code> keyword. In fact, there <em>is no</em> equivalent to the Ruby <code>yield</code> keyword in C#. And the Ruby equivalent to C#'s <code>yield</code> keyword is <em>not</em> the <code>yield</code> <em>keyword</em>, it's the <code>Enumerator::Yielder#yield</code> <em>method</em> (also aliased as <code>Enumerator::Yielder#&lt;&lt;</code>).</p>

<p>IOW, it's for returning the next element of an iterator. Here's an abridged example from the official MSDN documentation:</p>

<pre><code>public static IEnumerable Power(int number, int exponent) {
    var counter = 0;
    var result = 1;
    while (counter++ &lt; exponent) {
        result = result * number;
        yield return result; }}
</code></pre>

<p>Use it like so:</p>

<pre><code>foreach (int i in Power(2, 8)) { Console.Write(""{0} "", i); }
</code></pre>

<p>The Ruby equivalent would be something like:</p>

<pre><code>def power(number, exponent)
  Enumerator.new do |yielder|
    result = 1
    1.upto(exponent-1) { yielder.yield result *= number } end end

puts power(2, 8).to_a
</code></pre>

<p>In C#, <code>yield</code> is used to yield a <em>value</em> to the <em>caller</em> and in Ruby, <code>yield</code> is used to yield <em>control</em> to a <em>block argument</em></p>

<p>In fact, in Ruby, <code>yield</code> is just a shortcut for <code>Proc#call</code>.</p>

<p>Imagine, if <code>yield</code> didn't exist. How would you write an <code>if</code> method in Ruby? It would look like this:</p>

<pre><code>class TrueClass
  def if(code)
    code.call
  end
end

class FalseClass
  def if(_); end
end

true.if(lambda { puts ""It's true!"" })
</code></pre>

<p>This is kind of cumbersome. In Ruby 1.9, we get proc literals and a shortcut syntax for <code>Proc#call</code>, which make it a little bit nicer:</p>

<pre><code>class TrueClass
  def if(code)
    code.()
  end
end

true.if(-&gt;{ puts ""It's true!' })
</code></pre>

<p>However, Yukihiro Matsumoto noticed, that the <em>vast</em> majority of higher-order procedures only take <em>one</em> procedure argument. (Especially since Ruby has several control-flow constructs built into the language, which would otherwise require multiple procedure arguments, like <code>if-then-else</code> which would require two and <code>case-when</code> which would require n arguments.) So, he created a specialized way to pass <em>exactly one</em> procedural argument: the block. (In fact, we already saw an example of this at the very beginning, because <code>Kernel#lambda</code> is actually just a normal method which takes a block and returns a <code>Proc</code>.)</p>

<pre><code>class TrueClass
  def if(&amp;code)
    code.()
  end
end

true.if { puts ""It's true!"" }
</code></pre>

<p>Now, since we can only ever pass exactly one block into a method, we really don't need to explicitly name the variable, since there can never be an ambiguity anyway:</p>

<pre><code>def if
  ???.() # But what do we put here? We don't have a name to call #call on!
end
</code></pre>

<p>However, since we now no longer have a name that we can send messages to, we need some other way. And again, we get one of those 80/20 solutions that are so typical for Ruby: there are <em>tons</em> of things that one might want to do with a block: transform it, store it in an attribute, pass it to another method, inspect it, print it &hellip; However, by <em>far</em> the most common thing to do is to call it. So, matz added another specialized shortcut syntax for exactly this common case: <code>yield</code> means ""<code>call</code> the block that was passed to the method"". Therefore, we don't need a name:</p>

<pre><code>def if; yield end
</code></pre>

<p>So, what <em>is</em> the C# equivalent to Ruby's <code>yield</code> keyword? Well, let's go back to the first Ruby example, where we explicitly passed the procedure as an argument:</p>

<pre><code>def foo(bar)
  bar.('StackOverflow')
end

foo -&gt;name { puts ""Higher-order Hello World from #{name}!"" }
</code></pre>

<p>The C# equivalent is <em>exactly</em> the same:</p>

<pre><code>void Foo(Action&lt;string&gt; bar)
{
    bar(""StackOverflow"");
}

Foo(name =&gt; { Console.WriteLine(""Higher-order Hello World from {0]!"", name); })
</code></pre>
"
"<p>i wonder if there is a php equivalent to jython so you can use java classes with php?</p>

<p>thanks</p>
","2988","","<p>I'm not quite sure what you are asking, since you are talking about two completely different things: a PHP equivalent to Jython, and accessing Java classes from PHP. So, I'm going to answer both.</p>

<p>Jython is a Python implementation for the JVM. So, the PHP equivalent would be a PHP implementation for the JVM. There are actually two that I know of: IBM's P8, which is part of <a href=""http://ProjectZero.Org/"" rel=""nofollow"">Project Zero</a> and <a href=""http://Quercus.Caucho.Com/"" rel=""nofollow"">Quercus</a>.</p>

<p>However, you don't need to run your PHP <em>on</em> Java if you want to run it <em>with</em> Java. A PHP-to-Java <em>bridge</em> would be enough, you don't need a PHP-on-Java <em>implementation</em>. I know that at some point in the past at least one such bridge must have existed, because someone once told me that they used one, but that is about all I know.</p>
"
"<p>I have two succeeding function with the same condition and I wonder what is the best way to write this? I know the one way to do this is using if (condition) ... end, but I'm wondering if I can do it in one-line similar to bash, '[$n == $value] echo ""$n"" &amp;&amp; break'.</p>

<pre><code>n = 0
loop do
  puts n if n == value # puts and break is having the same condition, but
  break if n == value # can we do it in one line?
  n += 1
end
</code></pre>
","2988","","<p>One of the golden rules of Ruby is that if you are writing a loop, you are probably doing it wrong. In this particular case, all that your loop is doing is to find an element in a collection. In Ruby, there already <em>is</em> a method for finding an element in a collection: <code>Enumerable#find</code>. There is no need to write your own.</p>

<p>So, the code gets simplified to:</p>

<pre><code>puts (0...1.0/0).find {|n| n == value }
</code></pre>

<p>Now that we have a nice declarative formulation of the problem, it is easy to see that (assuming sane equality semantics and sane semantics of <code>value.to_s</code>), this is exactly the same as:</p>

<pre><code>puts value
</code></pre>

<p>So, the whole loop was completely unnecessary to begin with.</p>
"
"<p>Answers like ASP.NET MVC or Entity Framework really aren't acceptable as they address just one aspect of the problem domain.</p>

<p>I'm looking for a framework ... a REAL framework that gives me the same features out of the box that Rails does.  As such it should include at minimum:</p>

<ol>
<li>MVC for presentation</li>
<li>ORM</li>
<li>Ability to provide simple configuration for whatever environment (dev, QA, Production, etc...)</li>
<li>Migration like functionality</li>
<li>Ability to generate code in all layers (similar to scaffolding like behavior, etc...)</li>
<li>Project template so as to create similar functionality as the ""rails my_app"" command.</li>
</ol>

<p>Thanks.</p>
","2988","","<p>Can you be a little bit more specific? Ruby on Rails runs on .NET, why do you want a Ruby-on-Rails-<em>like</em> framework but not Ruby on Rails?</p>

<p>EDIT: I don't quite understand the downvote. I believe that Ruby on Rails meets every single one of the OP's criteria perfectly:</p>

<blockquote>
  <p>Is there a Ruby on Rails framework like equivalent</p>
</blockquote>

<p>Check: Ruby on Rails is <em>definitely</em> Ruby-on-Rails-like. In fact, of all the answers given so far, I would claim that Ruby on Rails is the <em>most</em> Ruby-on-Rails-like framework, much more so than the currently highest voted answer.</p>

<blockquote>
  <p>for .NET development?</p>
</blockquote>

<p>Check: Ruby is a .NET language, Ruby on Rails runs on .NET, there is a Rack adatper for Internet Information Server, there is an ActiveRecord Adapter for SQL Server, Ruby on Rails is for all intents and purposes a 100% native .NET citizen.</p>

<blockquote>
  <p>Answers like ASP.NET MVC or Entity Framework really aren't acceptable as they address just one aspect of the problem domain.</p>
</blockquote>

<p>Unfortunately, the question doesn't specify what ""the problem domain"" <em>is</em>, but it seems that the OP thinks that Ruby on Rails <em>does</em> address all aspects of the problem domain, so: Check.</p>

<blockquote>
  <p>I'm looking for a framework ... a REAL framework</p>
</blockquote>

<p>Again, the question doesn't specify what a ""real framework"" <em>is</em>, but it seems that the OP thinks that Ruby on Rails <em>is</em> a real framework, so: Check.</p>

<blockquote>
  <p>that gives me the same features out of the box that Rails does.</p>
</blockquote>

<p>Check: Ruby on Rails <em>does</em> give you the same features out of the box that Ruby on Rails does.</p>

<blockquote>
  <p>As such it should include at minimum:</p>
  
  <p>MVC for presentation</p>
</blockquote>

<p>Check: Ruby on Rails does provide MVC for presentation. It has ActiveRecord for the model layer, ActionView for the view layer and ActionController for the controller layer, although every single one of those can be swapped out for a different implementation if you don't like them.</p>

<blockquote>
  <p>ORM</p>
</blockquote>

<p>Check: Ruby on Rails does come with an ORM called ActiceRecord, but if you don't like it, then you can swap it out for DataMapper, Sequel or really any ORM you want. Also, Ruby on Rails doesn't <em>require</em> a relational database <em>at all</em>, it works just as well with hierarchical databases, document databases, key-value databases and graph databases.</p>

<blockquote>
  <p>Ability to provide simple configuration for whatever environment (dev, QA, Production, etc...)</p>
</blockquote>

<p>Check: Ruby on Rails comes with a couple of environments built in (development, test and production), but you can add your own and you can provide configuration for any one of them.</p>

<blockquote>
  <p>Migration like functionality</p>
</blockquote>

<p>Check: ActiveRecord comes with a database migration framework.</p>

<blockquote>
  <p>Ability to generate code in all layers (similar to scaffolding like behavior, etc...)</p>
</blockquote>

<p>Check: Ruby on Rails comes with the Rails Generator framework, which allows customizable generation of pretty much anything, and it comes with a whole bunch of predefined generators for models, controllers, views, migrations, tests, &hellip;</p>

<blockquote>
  <p>Project template so as to create similar functionality as the ""rails my_app"" command.</p>
</blockquote>

<p>Check: Ruby on Rails comes with Rails Templates which allow you to create customizable project templates which can generate an entire skeleton project with a single command. It also comes with a predefined template which generates a project with ActiveRecord as the model, ActionController as the controller, ActionView as the view, ERb as the templating library, Prototype as the AJAX library and <code>test/unit</code> as the test framework.</p>

<p>Ruby on Rails meets every single one of the criteria in the question, and IMHO it meets them better than any other framework that has been suggested so far, including the currently highest voted answer.</p>
"
"<p>i am getting response from server in utf-8 but not able to read that.
how to convert utf-8 to ASCII in c++?</p>
","2988","","<p>If the string contains characters which do not exist in ASCII, then there is nothing you <strong>can</strong> do, because, well, those characters do not exist in ASCII.</p>

<p>If the string contains <em>only</em> characters which <em>do</em> exist in ASCII, then there is nothing you <strong>need</strong> to do, because the string is <em>already</em> in the ASCII encoding: UTF-8 was specifically designed to be backwards-compatible with ASCII in such a way that any character which is in ASCII has the exact same encoding in UTF-8 as it has in ASCII, and that any character which is <em>not</em> in ASCII can <em>never</em> have an encoding which is valid ASCII, i.e. will <em>always</em> have an encoding which is illegal in ASCII (specifically, any non-ASCII character will be encoded as a sequence of 2&ndash;4 octets all of which have their most significant bit set, i.e. have an integer value > 127).</p>

<p>Instead of simply trying to <em>convert</em> the string, you could try to <em>transliterate</em> the string. Most languages on this planet have some form of ASCII transliteration scheme that at least keeps the text somewhat comprehensible. For example, my first name is ""Jörg"" and its ASCII transliteration would be ""Joerg"". The name of the creator of the Ruby Programming Language is ""まつもとゆきひろ"" and its ASCII transliteration would be ""Matsumoto Yukihiro"". However, please note that you <em>will</em> lose information. For example, the German sz-ligature gets transliterated to ""ss"", so the word ""Maße"" (measurements) gets transliterated to ""Masse"". However, ""Masse"" (mass, in the physicist's sense, not the Christian's) is <em>also</em> a word. As another example, Turkish has 4 ""i""s (small and capital, with and without dot) and ASCII only has 2 (small with dot and capital without dot), therefore you will either lose information about the dot or whether or not it was a capital letter.</p>

<p>So, the <em>only</em> way which will not lose information (in other words: corrupt data), is to somehow <em>encode</em> the non-ASCII characters into sequences of ASCII characters. There are many popular encoding schemes: SGML entity references, MIME, Unicode escape sequences, &#932;<sub>&Epsilon;</sub>&Chi; or La&#932;<sub>&Epsilon;</sub>&Chi;. So, you would encode the data as it enters your system and decode it when it leaves the system.</p>

<p>Of course, the <em>easiest</em> way would be to simply fix your system.</p>
"
"<pre><code>int a = 3;
while (a &lt;= n)
  a = a*a;
</code></pre>

<p>My version is that its complexity is:<br /><img src=""http://www.mmoprophet.com/stuff/big-o.jpg"" /><br />
Is there such a thing?</p>
","2988","","<p>The number of loop iterations is &Omicron;(log log n). The loop body itself does an assignment (which we can consider to be constant) and a multiplication. The best known multiplication algorithm so far has a step complexity of &Omicron;(n&thinsp;log&thinsp;n&times;2<sup>&Omicron;(log<sup>*</sup>&thinsp;n)</sup>), so, all together, the complexity is something like:</p>

<blockquote>
  <p>&Omicron;(log log n&thinsp;&times;&thinsp;n&thinsp;log&thinsp;n&times;2<sup>&Omicron;(log<sup>*</sup>&thinsp;n)</sup>)</p>
</blockquote>

<p>In more readable form:</p>

<p><img src=""http://TeXHub.Com/b/TyhcbG9nXGxvZyBuXCxcdGltZXNcLG4gXGxvZyBuXCxcdGltZXNcLDJee08oXGxvZ14qIG4pfSk="" alt=""&Omicron;(log log n&thinsp;&times;&thinsp;n&thinsp;log&thinsp;n&times;2^&Omicron;(log*&thinsp;n))""></p>
"
"<p>When <code>a</code> is undefined, then <code>a || 1</code> will throw an error, but <code>a = a || 1</code> will not.  Isn't that a little bit inconsistent?</p>

<pre><code>irb(main):001:0&gt; a
NameError: undefined local variable or method 'a' for main:Object
        from (irb):1
        from c:/ruby/bin/irb:12:in '&lt;main&gt;'

irb(main):002:0&gt; a || 1
NameError: undefined local variable or method 'a' for main:Object
        from (irb):2
        from c:/ruby/bin/irb:12:in '&lt;main&gt;'

irb(main):003:0&gt; a = a || 1
=&gt; 1
</code></pre>
","2988","","<pre><code>a
</code></pre>

<p>Here, you are evaluating <code>a</code>, which isn't defined. Therefore, you get an exception.</p>

<pre><code>a || 1
</code></pre>

<p>Here, you <em>still</em> have to evaluate <code>a</code> to determine the value of the boolean expression. Just like above, <code>a</code> isn't defined. Therefore, you get an exception.</p>

<pre><code>a = a || 1
</code></pre>

<p>Here, <code>a</code> <em>is</em> defined. It is defined to be an uninitialized local variable. In Ruby, uninitialized variables evaluate to <code>nil</code>, so the right hand side of the assignment expression evaluates to <code>nil || 1</code> which evaluates to <code>1</code>, so the return value of the assignment expression is <code>1</code> and the side effect is that <code>a</code> is initialized to <code>1</code>.</p>

<p>EDIT: It seems that there is some confusion on when variables get defined and when they get initialized in Ruby. The get defined at <em>parse time</em> but initialized at <em>runtime</em>. You can see it here:</p>

<pre><code> foo # =&gt; NameError: undefined local variable or method `foo' for main:Object
</code></pre>

<p><code>foo</code> is undefined.</p>

<pre><code>if false
  foo = 'This will never get executed'
end
</code></pre>

<p>At this point, <code>foo</code> is defined, even though the line will never get executed. The fact that the line never gets executed is completely irrelevant, because the interpreter has nothing to do with this anyway: local variables are defined by the parser, and the parser obviously sees this line.</p>

<pre><code>foo # =&gt; nil
</code></pre>

<p>There is no error, because <code>foo</code> is defined, and it evaluates to <code>nil</code> because it is uninitialized.</p>
"
"<p>I use netbeans as development IDE and runs the application from cmd but have problems to display ISO 8859-1 characters like åäö correct in both cmd window and when I run the application from netbeans</p>

<p><strong>Question:</strong> What is best practice to set it up</p>

<p>Right now I do </p>

<pre><code>@output.puts indent + ""V"" + 132.chr + ""lkommen till Ruby Camping!""
</code></pre>

<p>to get <strong>ä</strong></p>

<p><strong>My environment</strong> </p>

<p><strong>>chcp 65001</strong></p>

<pre><code>Active code page: 65001
</code></pre>

<p><strong>>ruby main.rb</strong> </p>

<pre><code>Source encoding: &lt;Encoding:US-ASCII&gt;
Default external: #&lt;Encoding:UTF-8&gt;
Default internal: nil
Locale charmap: ""CP65001""
</code></pre>

<p>where I have in the code </p>

<pre><code>def self.printEncoding
    puts ""Source encoding: #{__ENCODING__.inspect}"" if defined? __ENCODING__
    if defined? Environment::Encoding
      puts ""Default external: #{Encoding.default_external.inspect}""
      puts ""Default internal: #{Encoding.default_internal.inspect}""
      puts ""Locale charmap: #{ Encoding.locale_charmap.inspect}""
    end
    puts ""LANG environment variable: #{ENV['LANG'].inspect}"" unless ENV['LANG'].nil?
  end
</code></pre>

<p><strong>>ruby -v</strong>
ruby 1.9.1p378 (2010-01-10 revision 26273) [i386-mingw32]</p>
","2988","","<p>If you want to use non-ASCII characters in your source file, you need to declare the encoding of the source file. The very first line of the source file (or the second, if you have a shebang line) needs to be a comment line which (roughly) matches the regexp</p>

<pre><code>#.*?coding[:=]?\s+(.*)(?:\s+.*)?
</code></pre>

<p>In other words: a comment line which starts with some stuff, then contains the string <code>coding</code> followed by an optional symbol followed by a valid encoding name followed by some other stuff.</p>

<p>So, if you put</p>

<pre><code># coding: ISO-8859-1
</code></pre>

<p>at the top of your file, you should be okay. Note that the regexp is explicitly designed to be compatible with editors such as Vim:</p>

<pre><code># vim: fileencoding=UTF-8 ft=ruby syn=ruby ts=2 sw=2 ai eol et si
</code></pre>

<p>Or Emacs:</p>

<pre><code># *-* mode: ruby; coding: utf-8; tab-width: 2; indent-tabs-mode: nil *-*
</code></pre>

<p>One thing that always trips me up, is that Ruby <em>does not</em> always automatically transcode strings. You have to transcode them yourself:</p>

<pre><code>puts 'ä'
# =&gt; ├ñ

puts 'ä'.encode($&gt;.external_encoding || Encoding.default_external)
# =&gt; ä
</code></pre>
"
"<p>I happened to be working on a Singleton class in ruby and just remembered the way it works in <a href=""http://github.com/thoughtbot/factory_girl"" rel=""nofollow"">factory_girl</a>.  They worked it out so you can use both <strong>the long way</strong> <code>Factory.create(...)</code> and <strong>the short way</strong> <code>Factory(...)</code>  I thought about it and was curious to see how they made the class <code>Factory</code> also behave like a method.</p>

<p>They simply used <code>Factory</code> twice like so:</p>

<pre><code>def Factory (args)
  ...
end

class Factory
  ...
end
</code></pre>

<p>My Question is:  <strong>How does ruby accomplish this? and Is there danger in using this seemingly quirky pattern?</strong></p>
","2988","","<p>Methods and variables live in different namespaces. So, you can have both a method and a variable (or in this case a constant) with the same name. However, when using them, Ruby needs to be able to distinguish between them. In general, that's not a problem: messages have receivers, variables don't. Messages have arguments, variables don't. Variables are assigned to, messages aren't.</p>

<p>The only problem is when you have no receiver, no argument and no assignment. Then, Ruby cannot tell the difference between a receiverless message send without arguments and a variable. So, it has to make up some arbitrary rules, and those rules are basically:</p>

<ul>
<li>for an ambiguous token starting with a lowercase letter, prefer to interpret it as a message send, <em>unless</em> you positively know it is a variable (i.e. the <em>parser</em> (not(!) the interpreter) has seen an assignment before)</li>
<li>for an ambiguous token starting with an uppercase letter, prefer to interpret it as a constant</li>
</ul>

<p>Note that for a message send with arguments (even if the argument list is empty), there is no ambiguity.</p>

<ul>
<li><code>test()</code>: obviously a message send, no ambiguity here</li>
<li><code>test</code>: might be a message send or a variable; resolution rules say it is a message send (unless there has been an assignment to <code>test</code> before)</li>
<li><code>Test()</code>: obviously a message send, no ambiguity here</li>
<li><code>self.Test</code>: <em>also</em> obviously a message send, no ambiguity here</li>
<li><code>Test</code>: might be a message send or a constant; resolution rules say it is a constant</li>
</ul>
"
"<p>I have a question regarding the ||= statement in ruby and this is of particular interest to me as I'm using it to write to memcache.  What I'm wondering is, does ||= check the receiver first to see if it's set before calling that setter, or is it literally an alias to <code>x = x || y</code></p>

<p>This wouldn't really matter in the case of a normal variable but using something like:</p>

<pre><code>CACHE[:some_key] ||= ""Some String""
</code></pre>

<p>could possibly do a memcache write which is more expensive than a simple variable set.  I couldn't find anything about ||= in the ruby api oddly enough so I haven't been able to answer this myself.</p>

<p>Of course I know that:</p>

<pre><code>CACHE[:some_key] = ""Some String"" if CACHE[:some_key].nil?
</code></pre>

<p>would achieve this, I'm just looking for the most terse syntax.</p>
","2988","","<p>According to §11.3.1.2.2 of the <a href=""http://Ruby-Std.NetLab.Jp/"">Draft ISO Specification</a>, </p>

<pre><code>CACHE[:some_key] ||= ""Some String""
</code></pre>

<p>expands to</p>

<pre><code>o = CACHE
*l = :some_key
v = o.[](*l)
w = ""Some String""
x = v || w
l &lt;&lt; x
o.[]=(*l)
x
</code></pre>

<p>Or, in the more general case</p>

<pre><code>primary_expression[indexing_argument_list] ω= expression
</code></pre>

<p>(I am using <code>ω</code> here to denote <em>any</em> operator, so it could be <code>||=</code>, <code>+=</code>, <code>*=</code>, <code>&gt;&gt;=</code>,  <code>%=</code>,&hellip;)</p>

<p>Expands to:</p>

<pre><code>o = primary_expression
*l = indexing_argument_list
v = o.[](*l)
w = expression
x = v ω w
l &lt;&lt; x
o.[]=(*l)
x
</code></pre>

<p>So, according to the specification, <code>[]=</code> will <em>always</em> get called. But that is actually not the case in current implementations (I tested MRI, YARV, Rubinius, JRuby and IronRuby):</p>

<pre><code>def (h = {}).[]=(k, v) p ""Setting #{k} to #{v}""; super end
h[:key] ||= :value # =&gt; :value
# ""Setting key to value""
h[:key] ||= :value # =&gt; :value
</code></pre>

<p>So, obviously either the specification is wrong or all five currently released implementations are wrong. And since the purpose of the specification is to describe the behavior of the existing implementations, it's obviously that the specification must be wrong.</p>

<p>In general, as a first approximation</p>

<pre><code>a ||= b
</code></pre>

<p>expands to</p>

<pre><code>a || a = b
</code></pre>

<p>However, there's all kinds of subleties involved, for example, whether or not <code>a</code> is undefined, whether <code>a</code> is a simple variable or a more complex expression like <code>foo[bar]</code> or <code>foo.bar</code> and so on.</p>

<p>See also some of the other instances of this same question, that have already been asked and answered here on StackOverflow (for example, <a href=""http://StackOverflow.Com/questions/995593/"">this one</a>). Also, the question has been discussed so many times on the ruby-talk mailinglist, that there are now <a href=""http://Ruby-Forum.Com/topic/151660/"">discussion threads</a> whose sole purpose it is to summarize the other discussion threads. (Although please note that that list is far from complete.)</p>
"
"<p>I've been given to understand that Python is an interpreted language... however, when I look at my Python source code I see .pyc files, which Windows identifies as ""Compiled Python Files"". Where do these come in?</p>
","2988","","<p>There is no such thing as an interpreted language. Whether an interpreter or a compiler is used is purely a trait of the <em>implementation</em> and has absolutely nothing whatsoever to do with the language.</p>

<p><em>Every</em> language can be implemented by either an interpreter or a compiler. The vast majority of languages have at least one implementation of each type. (For example, there are interpreters for C and C++ and there are compilers for JavaScript, PHP, Perl, Python and Ruby.) Besides, the majority of modern language implementations actually combine both an interpreter and a compiler (or even multiple compilers).</p>

<p>A language is just a set of abstract mathematical rules. An interpreter is one of several concrete implementation strategies for a language. Those two live on completely different abstraction levels. If English were a typed language, the term ""interpreted language"" would be a type error. The statement ""Python is an interpreted language"" is not just false (because being false would imply that the statement even makes sense, even if it is wrong), it just plain doesn't make <em>sense</em>, because a language can <em>never</em> be interpreted.</p>

<p>In particular, if you look at the currently existing Python implementations, these are the implementation strategies they are using:</p>

<ul>
<li>IronPython: compiles to DLR trees which the DLR then compiles to CIL bytecode. What happens to the CIL bytecode depends upon which CLI VES you are running on, but Microsoft .NET, GNU Portable.NET and Novell Mono will eventually compile it to native machine code.</li>
<li>Jython: interprets Python sourcecode until it identifies the hot code paths, which it then compiles to JVML bytecode. What happens to the JVML bytecode depends upon which JVM you are running on. Maxine will directly compile it to un-optimized native code until it identifies the hot code paths, which it then recompiles to optimized native code. HotSpot will first interpret the JVML bytecode and then eventually compile the hot code paths to optimized machine code.</li>
<li>PyPy: compiles to PyPy bytecode, which then gets interpreted by the PyPy VM until it identifies the hot code paths which it then compiles into native code, JVML bytecode or CIL bytecode depending on which platform you are running on.</li>
<li>CPython: compiles to CPython bytecode which it then interprets.</li>
<li>Stackless Python: compiles to CPython bytecode which it then interprets.</li>
<li>Unladen Swallow: compiles to CPython bytecode which it then interprets until it identifies the hot code paths which it then compiles to LLVM IR which the LLVM compiler then compiles to native machine code.</li>
</ul>

<p>You might notice that every single one of the implementations in that list (plus some others I didn't mention, like tinypy, Shedskin or Psyco) has a compiler. In fact, as far as I know, there is currently no Python implementation which is purely interpreted, there is no such implementation planned and there never has been such an implementation.</p>

<p>Not only does the term ""interpreted language"" not make sense, even if you interpret it as meaning ""language with interpreted implementation"", it is clearly not true. Whoever told you that, obviously doesn't know what he is talking about.</p>

<p>In particular, the <code>.pyc</code> files you are seeing are cached bytecode files produced by CPython, Stackless Python or Unladen Swallow.</p>
"
"<p>As a embedded systems programmer I always need to make lots of base conversions (dec to hex, hex to bin and so on...), and I must admit: Windows 7 calculator is a good calc, but too limited in my point of view. I work a lot with communications protocols and it`s common to need some base conversion in this field of knowledge.</p>

<p>I`m looking for a calculator software (not a hardware one), to help with base conversions, but it must also support scientific calc. Can anyone help on this?</p>

<p>Since this subject is intended to help programmers, I did not ask this in SuperUser.com.</p>

<p>Thanks.</p>
","2988","","<p>I've heard very good things about <a href=""http://Acqualia.Com/soulver/"" rel=""nofollow"">Soulver</a>. I don't have any firsthand experience, though, since it doesn't run on any of the operating systems I use, it only runs on OSX and iPhoneOS. What I particularly like about it is that it doesn't make hit some stupid buttons with your mouse. Hey Microsoft, ever heard of this cool new invention called ""the keyboard""?</p>

<p>Another nice one is <a href=""http://FutureBoy.Us/frink/"" rel=""nofollow"">Frink</a>, which is not so much a calculator but a programming language for scientific calculations and conversions.</p>
"
"<p>I have a method that returns an array of arrays.
For convenience I use collect on a collection to gather them together.</p>

<pre><code>arr = collection.collect {|item| item.get_array_of_arrays}
</code></pre>

<p>Now I would like to have a single array that contains all the arrays.
Of course I can loop over the array and use the + operator to do that.</p>

<pre><code>newarr = []    
arr.each {|item| newarr += item}
</code></pre>

<p>But this is kind of ugly, is there a better way?</p>
","2988","","<p>There is a method for flattening an array in Ruby: <code>Array#flatten</code>:</p>

<pre><code>newarr = arr.flatten(1)
</code></pre>

<p>From your description it actually looks like you don't care about <code>arr</code> anymore, so there is no need to keep the old value of <code>arr</code> around, we can just modify it:</p>

<pre><code>arr.flatten!(1)
</code></pre>

<p>(There is a rule in Ruby that says that if you have two methods that do basically the same thing, but one does it in a somewhat surprising way, you name that method the same as the other method but with an exlamation point at the end. In this case, both methods flatten an array, but the version with the exclamation point does it by destroying the original array.)</p>

<p>However, while in this particular case there actually is a method which does exactly what you want, there is a more general principle at work in your code: you have a sequence of things and you iterate over it and try to ""reduce"" it down into a single thing. In this case, it is hard to see, because you start out with an array and you end up with an array. But by changing just a couple of small details in your code, it all of the sudden becomes blindingly obvious:</p>

<pre><code>sum = 0
arr.each {|item| sum += item } # assume arr is an array of numbers
</code></pre>

<p>This is exactly the same pattern.</p>

<p>What you are trying to do is known as a <em>catamorphism</em> in category theory, a <em>fold</em> in mathematics, a <em>reduce</em> in functional programming, <code>inject:into:</code> in Smalltalk and is implemented by <code>Enumerable#inject</code> and its alias <code>Enumerable#reduce</code> (or in this case actually <code>Array#inject</code> and <code>Array#reduce</code>) in Ruby.</p>

<p>It is very easy to spot: whenever you initialize an accumulator variable outside of a loop and then assign to it or modify the object it references during every iteration of the loop, then you have a case for <code>reduce</code>.</p>

<p>In this particular case, your accumulator is <code>newarr</code> and the operation is adding an array to it.</p>

<p>So, your loop could be more idiomatically rewritten like this:</p>

<pre><code>newarr = arr.reduce(:+)
</code></pre>

<p>An experienced Rubyist would of course see this right away. However, even a newbie would eventually get there, by following some simple refactoring steps, probably similar to this:</p>

<p>First, you realize that it actually <em>is</em> a fold:</p>

<pre><code>newarr = arr.reduce([]) {|acc, el| acc += el }
</code></pre>

<p>Next, you realize that assigning to <code>acc</code> is completely unnecessary, because <code>reduce</code> overwrites the contents of <code>acc</code> <em>anyway</em> with the result value of each iteration:</p>

<pre><code>newarr = arr.reduce([]) {|acc, el| acc + el }
</code></pre>

<p>Thirdly, there is no need to inject an empty array as the starting value for the first iteration, since all the elements of <code>arr</code> are already arrays anyway:</p>

<pre><code>newarr = arr.reduce {|acc, el| acc + el }
</code></pre>

<p>This can, of course, be further simplified by using <code>Symbol#to_proc</code>:</p>

<pre><code>newarr = arr.reduce(&amp;:+)
</code></pre>

<p>And actually, we don't need <code>Symbol#to_proc</code> here, because <code>reduce</code> and <code>inject</code> already accept a symbol parameter for the operation:</p>

<pre><code>newarr = arr.reduce(:+)
</code></pre>

<p>This really <em>is</em> a general pattern. If you remember the <code>sum</code> example above, it would look like this:</p>

<pre><code>sum = arr.reduce(:+)
</code></pre>

<p>There is no change in the code, except for the variable name.</p>
"
"<p>I have a text file from which I want to create a Hash for faster access. My text file is of format (space delimited)</p>

<pre><code>author title date popularity
</code></pre>

<p>I want to create a hash in which author is the key and the remaining is the value as an array.</p>

<pre><code>created_hash[""briggs""] = [""Manup"", ""Jun,2007"", 10]
</code></pre>

<p>Thanks in advance.</p>
","2988","","<pre><code>require 'date'

created_hash = File.foreach('test.txt', mode: 'rt', encoding: 'UTF-8').
reduce({}) {|hsh, l|
  name, title, date, pop = l.split
  hsh.tap {|hsh| hsh[name] = [title, Date.parse(date), pop.to_i] }
}
</code></pre>

<p>I threw some type conversion code in there, just for fun. If you don't want that, the loop body becomes even simpler:</p>

<pre><code>  k, *v = l.split
  hsh.tap {|hsh| hsh[k] = v }
</code></pre>

<p>You can also use <code>readlines</code> instead of <code>foreach</code>. Note that <code>IO#readlines</code> reads the entire file into an array <em>first</em>. So, you need enough memory to hold both the entire array and the entire hash. (Of course, the array will be eligible for garbage collection as soon as the loop finishes.)</p>
"
"<p>So... I'm new to scheme r6rs, and am learning macros. Can somebody explain to me what is meant by 'hygiene'?</p>

<p>Thanks in advance.</p>
","2988","","<p>If you imagine that a macro is simply expanded into the place where it is used, then you can also imagine that if you use a variable <code>a</code> in your macro, there might already <em>be</em> a variable <code>a</code> defined at the place where that macro is used.</p>

<p>This is <em>not</em> the <code>a</code> that you want!</p>

<p>A macro system in which something like this cannot happen, is called <em>hygienic</em>.</p>

<p>There are several ways to deal with this problem. One way is simply to use very long, very cryptic, very unpredictable variable names in your macros.</p>

<p>A slightly more refined version of this is the <code>gensym</code> approach used by some other macro systems: instead of <em>you</em>, the programmer coming up with a very long, very cryptic, very unpredictable variable name, you can call the <code>gensym</code> function which generates a very long, very cryptic, very unpredictable and unique variable name <em>for you</em>.</p>

<p>And like I said, in a hygienic macro system, such collisions cannot happen in the first place. <em>How</em> to make a macro system hygienic is an interesting question in itself, and the Scheme community has spent several decades on this question, and they keep coming up with better and better ways to do it.</p>
"
"<p>We caught some code in Ruby that seems odd, and I was wondering if someone could explain it:</p>

<pre><code>$ irb
irb(main):001:0&gt; APPLE = 'aaa'
=&gt; ""aaa""
irb(main):002:0&gt; banana = APPLE
=&gt; ""aaa""
irb(main):003:0&gt; banana &lt;&lt; 'bbb'
=&gt; ""aaabbb""
irb(main):004:0&gt; banana
=&gt; ""aaabbb""
irb(main):005:0&gt; APPLE
=&gt; ""aaabbb""
</code></pre>

<p>Catch that? The constant was appended to at the same time the local variable was.</p>

<p>Known behavior? Expected?</p>
","2988","","<blockquote>
  <p>Catch that? The constant was appended to at the same time the local variable was.</p>
</blockquote>

<p>No, it wasn't appended to, and neither was the local variable.</p>

<p>The <em>single</em> object that <em>both</em> the constant and the local variable are referring to was appended to, but neither the constant nor the local variable was changed. You cannot modify or change a variable or constant in Ruby (at least not in the way that your question implies), the only thing you <em>can</em> change is objects.</p>

<p>The only two things you <em>can</em> do with variables or constants is dereferencing them and assigning to them.</p>

<p>The constant is a red herring here, it is completely irrelevant to the example given. The only thing that is relevant is that there is only <em>one</em> single object in the entire example. That single object is accessible under two different names. If the object changes, then the object changes. Period. It does not mysteriously split itself in two. Which name you use to look at the changed object doesn't matter. There is only one object anyway.</p>

<p>This works exactly the same as in any other programming language: if you have multiple references to a mutable object in, say, Python, Java, C#, C++, C, Lisp, Smalltalk, JavaScript, PHP, Perl or whatever, then any change to that object will be visible no matter what reference is used, even if some of those references are <code>final</code> or <code>const</code> or whatever that particular language calls it.</p>

<p>This is simply how shared mutable state works and is just one of the many reasons why shared mutable state is bad.</p>

<p>In Ruby, you can generally call the <code>freeze</code> method on any object to make it immutable. However, again, you are modifying the <em>object</em> here, so anybody else who has a reference to that object will all the sudden find that the object has become immutable. Therefore, just to be safe, you need to copy the object first, by calling <code>dup</code>. But of course, that's not enough either, if you think of an array, for example: if you <code>dup</code> the array, you get a different <em>array</em>, but the objects <em>inside</em> the array are the still the same ones in the original array. And if you <code>freeze</code> the array, then you can no longer modify the <em>array</em>, but the objects <em>in</em> the array may very well still be mutable:</p>

<pre><code>ORIG = ['Hello']
CLONE = ORIG.dup.freeze
CLONE[0] &lt;&lt; ', World!'
CLONE # =&gt; ['Hello, World!']
</code></pre>

<p>That's shared mutable state for you. The only way to escape this madness is either to give up shared state (e.g. Actor Programming: if nobody else can see it, then it doesn't matter how often or when it changes) or mutable state (i.e. Functional Programming: if it never changes, then it doesn't matter how many others see it).</p>

<p>The fact that one of the two variables in the original example is actually a constant is completely irrelevant to the problem. There two main differences between a variable and a constant in Ruby: they have different lookup rules, and constants generate a warning if they are assigned to more than once. But in this example, the lookup rules are irrelevant and the constant is assigned to only once, so there really is no difference between a variable and a constant in this case.</p>
"
"<p>I have an <strong>array of</strong> two dimensional Arrays. I want to create a new two dimensional array which finds the sum of these values in the 2D arrays. </p>

<p>Sum at x,y of new array = Sum at x,y of arr1 + Sum at x,y of arr2 + ....</p>

<pre><code>|1,2,4| |1,1,1| |1,1,1| 
|2,4,6| |1,1,1| |1,1,1| 
|2,4,6| |1,1,1| |1,1,1| 
|2,4,6| |1,1,1| |1,1,1| 
</code></pre>

<p>Now adding the above two dimensional arrays will result in,</p>

<pre><code>|3,4,6|
|4,6,8|
|4,6,8|
|4,6,8|
</code></pre>

<p>How to achieve this in Ruby (not in any other languages). I have written a method, but it looks very long and ugly.</p>
","2988","","<pre><code>require 'matrix'

Matrix[
  [1, 2, 4],
  [2, 4, 6],
  [2, 4, 6],
  [2, 4, 6]
] +

Matrix[
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1]
] +

Matrix[
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1],
  [1, 1, 1]
]

# =&gt; Matrix[[3, 4, 6], [4, 6, 8], [4, 6, 8], [4, 6, 8]]
</code></pre>

<p>Or, if you want the same format as in @Jeriko's answer, i.e. returning an <code>Array</code> instead of a <code>Matrix</code>:</p>

<pre><code>def sum_arrays(*a)
  return *a.map {|m| Matrix[*m] }.reduce(:+)
end

# data you supplied:
x = [[1, 2, 4], [2, 4, 6], [2, 4, 6], [2, 4, 6]]
y = [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]
z = [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]

p sum_arrays(x, y, z)
# =&gt; [[3, 4, 6], [4, 6, 8], [4, 6, 8], [4, 6, 8]]
</code></pre>
"
"<p>I was wondering if anyone could point out a cleaner better way to write my code which is pasted here. The code scrapes some data from yelp and processes it into a json format. The reason I'm not using <code>hash.to_json</code> is because it throws some sort of stack error which I can only assume is due to the hash being too large (It's not particularly large). </p>

<ul>
<li>Response object = a hash</li>
<li>text = the output which saves to file</li>
</ul>

<p>Anyways guidance appreciated. </p>

<pre><code>def mineLocation

  client = Yelp::Client.new
  request = Yelp::Review::Request::GeoPoint.new(:latitude=&gt;13.3125,:longitude =&gt; -6.2468,:yws_id =&gt; 'nicetry')
  response = client.search(request) 
  response['businesses'].length.times do |businessEntry|
    text =""""
     response['businesses'][businessEntry].each { |key, value|
        if value.class == Array 
          value.length.times { |arrayEntry|
            text+= ""\""#{key}\"":[""
             value[arrayEntry].each { |arrayKey,arrayValue|
              text+= ""{\""#{arrayKey}\"":\""#{arrayValue}\""},""
             }
             text+=""]""   
          }
        else 
              text+=""\""#{arrayKey}\"":\""#{arrayValue}\"","" 
        end
       }
  end
 end
</code></pre>
","2988","","<p>It looks like all your code is ultimately doing is this:</p>

<pre><code>require 'json'

def mine_location
  client = Yelp::Client.new
  request = Yelp::Review::Request::GeoPoint.new(latitude: 13.3125,
    longitude: -6.2468, yws_id: 'nicetry')
  response = client.search(request)

  return response['businesses'].to_json
end
</code></pre>

<p>Which works just fine for me.</p>

<p>If, for whatever reason you really <em>must</em> write your own implementation of a JSON emitter, here's a couple of tips for you.</p>

<p>The number 1 thing you completely ignore in your code is that Ruby is an object-oriented language, more specifically a class-based object-oriented language. This means that problems are solved by constructing a network of objects that communicate with each other via message passing and respond to those messages by executing methods defined in classes to which those objects belong.</p>

<p>This gives us a lot of power: dynamic dispatch, polymorphism, encapsulation and a ton of others. Leveraging those, your JSON emitter would look something like this:</p>

<pre><code>class Object
  def to_json; to_s                                                         end
end

class NilClass
  def to_json; 'null'                                                       end
end

class String
  def to_json; %Q'""#{to_s}""'                                                end
end

class Array
  def to_json; ""[#{map(&amp;:to_json).join(', ')}]""                             end
end

class Hash
  def to_json; ""{#{map {|k, v| ""#{k.to_json}: #{v.to_json}"" }.join(', ')}}"" end
end
</code></pre>

<p><code>mine_location</code> looks just like above, except obviously without the <code>require 'json'</code> part.</p>

<p>If you want your JSON nicely formatted, you could try something like this:</p>

<pre><code>class Object
  def to_json(*) to_s    end
end

class String
  def to_json(*) inspect end
end

class Array
  def to_json(indent=0)
    ""[\n#{'  ' * indent+=1}#{
      map {|el| el.to_json(indent) }.join("", \n#{'  ' * indent}"")
    }\n#{'  ' * indent-=1}]""
  end
end

class Hash
  def to_json(indent=0)
    ""{\n#{'  ' * indent+=1}#{
      map {|k, v|
        ""#{k.to_json(indent)}: #{v.to_json(indent)}""
      }.join("", \n#{'  ' * indent}"")
    }\n#{'  ' * indent-=1}}""
  end
end
</code></pre>

<p>There's actually nothing Ruby-specific in this code. This is pretty much <em>exactly</em> what the solution would look like in any other class-based object-oriented language like Java, for example. It's just object-oriented design 101.</p>

<p>The only thing which is language-specific is how to ""modify"" classes and add methods to them. In Ruby or Python, you literally just modify the class. In C# and Visual Basic.NET, you would probably use extension methods, in Scala you would use implicit conversions and in Java maybe the Decorator Design Pattern.</p>

<p>Another <em>huge</em> problem with your code is that you are trying to solve a problem which is <em>obviously</em> recursive without actually ever recursing. This just <em>can't</em> work. The code you wrote is basically Fortran-57 code: procedural with no objects and no recursion. Even just moving <em>one</em> step up from Fortran to, say, Pascal, gives you a nice recursive procedural solution:</p>

<pre><code>def jsonify(o)
  case o
  when Hash
    ""{#{o.map {|k, v| ""#{jsonify(k)}: #{jsonify(v)}"" }.join(', ')}}""
  when Array
    ""[#{o.map(&amp;method(:jsonify)).join(', ')}]""
  when String
    o.inspect
  when nil
    'null'
  else
    o.to_s
  end
end
</code></pre>

<p>Of course, you can play the same game with indentations here:</p>

<pre><code>def jsonify(o, indent=0)
  case o
  when Hash
    ""{\n#{'  ' * indent+=1}#{
      o.map {|k, v|
        ""#{jsonify(k, indent)}: #{jsonify(v, indent)}""
      }.join("", \n#{'  ' * indent}"") }\n#{'  ' * indent-=1}}""
  when Array
    ""[\n#{'  ' * indent+=1}#{
      o.map {|el| jsonify(el, indent) }.join("", \n#{'  ' * indent}"") }\n#{'  ' * indent-=1}]""
  when String
    o.inspect
  when nil
    'null'
  else
    o.to_s
  end
end
</code></pre>

<p>Here's the indented output of <code>puts mine_location</code>, produced using either the second (indented) version of <code>to_json</code> or the second version of <code>jsonify</code>, it doesn't really matter, they both have the same output:</p>

<pre><code>[
  {
    ""name"": ""Nickies"",
    ""mobile_url"": ""http://mobile.yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ"",
    ""city"": ""San Francisco"",
    ""address1"": ""466 Haight St"",
    ""zip"": ""94117"",
    ""latitude"": 37.772201,
    ""avg_rating"": 4.0,
    ""address2"": """",
    ""country_code"": ""US"",
    ""country"": ""USA"",
    ""address3"": """",
    ""photo_url_small"": ""http://static.px.yelp.com/bpthumb/mPNTiQm5HVqLLcUi8XrDiA/ss"",
    ""url"": ""http://yelp.com/biz/nickies-san-francisco"",
    ""photo_url"": ""http://static.px.yelp.com/bpthumb/mPNTiQm5HVqLLcUi8XrDiA/ms"",
    ""rating_img_url_small"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_small_4.png"",
    ""is_closed"": false,
    ""id"": ""yyqwqfgn1ZmbQYNbl7s5sQ"",
    ""nearby_url"": ""http://yelp.com/search?find_loc=466+Haight+St%2C+San+Francisco%2C+CA"",
    ""state_code"": ""CA"",
    ""reviews"": [
      {
        ""rating"": 3,
        ""user_photo_url_small"": ""http://static.px.yelp.com/upthumb/ZQDXkIwQmgfAcazw8OgK2g/ss"",
        ""url"": ""http://yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ#hrid:t-sisM24K9GvvYhr-9w1EQ"",
        ""user_url"": ""http://yelp.com/user_details?userid=XMeRHjiLhA9cv3BsSOazCA"",
        ""user_photo_url"": ""http://static.px.yelp.com/upthumb/ZQDXkIwQmgfAcazw8OgK2g/ms"",
        ""rating_img_url_small"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_small_3.png"",
        ""id"": ""t-sisM24K9GvvYhr-9w1EQ"",
        ""text_excerpt"": ""So I know gentrification is supposed to be a bad word and all (especially here in SF), but the Lower Haight might benefit a bit from it. At least, I like..."",
        ""user_name"": ""Trey F."",
        ""mobile_uri"": ""http://mobile.yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ?srid=t-sisM24K9GvvYhr-9w1EQ"",
        ""rating_img_url"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_3.png""
      },
      {
        ""rating"": 4,
        ""user_photo_url_small"": ""http://static.px.yelp.com/upthumb/Ghwoq23_alkaXawgqj7dBA/ss"",
        ""url"": ""http://yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ#hrid:8xTNOC9L5ZXwGCMNYY-pdQ"",
        ""user_url"": ""http://yelp.com/user_details?userid=4F2QG3adYIUNXplqqp9ylA"",
        ""user_photo_url"": ""http://static.px.yelp.com/upthumb/Ghwoq23_alkaXawgqj7dBA/ms"",
        ""rating_img_url_small"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_small_4.png"",
        ""id"": ""8xTNOC9L5ZXwGCMNYY-pdQ"",
        ""text_excerpt"": ""This place was definitely a great place to chill. The atmosphere is very non-threatening and very neighborly. I thought it was cool that they had a girl dj..."",
        ""user_name"": ""Jessy M."",
        ""mobile_uri"": ""http://mobile.yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ?srid=8xTNOC9L5ZXwGCMNYY-pdQ"",
        ""rating_img_url"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_4.png""
      },
      {
        ""rating"": 5,
        ""user_photo_url_small"": ""http://static.px.yelp.com/upthumb/q0POOE3vv2LzNg1qN8MMyw/ss"",
        ""url"": ""http://yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ#hrid:pp33WfN_FoKlQKJ-38j_Ag"",
        ""user_url"": ""http://yelp.com/user_details?userid=FmcKafW272uSWXbUF2rslA"",
        ""user_photo_url"": ""http://static.px.yelp.com/upthumb/q0POOE3vv2LzNg1qN8MMyw/ms"",
        ""rating_img_url_small"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_small_5.png"",
        ""id"": ""pp33WfN_FoKlQKJ-38j_Ag"",
        ""text_excerpt"": ""Love this place!  I've been here twice now and each time has been a great experience.  The bartender is so nice.  When we had questions about the drinks he..."",
        ""user_name"": ""Scott M."",
        ""mobile_uri"": ""http://mobile.yelp.com/biz/yyqwqfgn1ZmbQYNbl7s5sQ?srid=pp33WfN_FoKlQKJ-38j_Ag"",
        ""rating_img_url"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_5.png""
      }
    ],
    ""phone"": ""4152550300"",
    ""neighborhoods"": [
      {
        ""name"": ""Hayes Valley"",
        ""url"": ""http://yelp.com/search?find_loc=Hayes+Valley%2C+San+Francisco%2C+CA""
      }
    ],
    ""rating_img_url"": ""http://static.px.yelp.com/static/20070816/i/ico/stars/stars_4.png"",
    ""longitude"": -122.429926,
    ""categories"": [
      {
        ""name"": ""Dance Clubs"",
        ""category_filter"": ""danceclubs"",
        ""search_url"": ""http://yelp.com/search?find_loc=466+Haight+St%2C+San+Francisco%2C+CA&amp;cflt=danceclubs""
      },
      {
        ""name"": ""Lounges"",
        ""category_filter"": ""lounges"",
        ""search_url"": ""http://yelp.com/search?find_loc=466+Haight+St%2C+San+Francisco%2C+CA&amp;cflt=lounges""
      },
      {
        ""name"": ""American (Traditional)"",
        ""category_filter"": ""tradamerican"",
        ""search_url"": ""http://yelp.com/search?find_loc=466+Haight+St%2C+San+Francisco%2C+CA&amp;cflt=tradamerican""
      }
    ],
    ""state"": ""CA"",
    ""review_count"": 32,
    ""distance"": 1.87804019451141
  }
]
</code></pre>
"
"<p>For example this what I am trying to do,</p>

<pre><code>def method_a(condition, params={}, &amp;block)
   if condition
      method_b(params, &amp;block)
   else
      yield
   end
end
</code></pre>

<p>and I am trying to call the method like this,</p>

<pre><code>method_a(#{@date &gt; Date.today}, {:param1 =&gt; 'value1', :param2 =&gt; 'value2'}) do

end
</code></pre>

<p>The result is the condition is always evaluated to true. How do I make it work?</p>
","2988","","<p>Actually, if you didn't have that comment there in the middle of the line, it would pretty much just work:</p>

<pre><code>method_a(@date &gt; Date.today, {:param1 =&gt; 'value1', :param2 =&gt; 'value2'}) do; end
</code></pre>

<p>By the way: if the very last argument to a method is a hash, you can leave off the curly braces, which makes it read almost like Python-style keyword arguments:</p>

<pre><code>method_a(@date &gt; Date.today, :param1 =&gt; 'value1', :param2 =&gt; 'value2') do; end
</code></pre>

<p>If you use Ruby 1.9, and you have a hash where the keys are symbols, you can use the new alternative hash syntax:</p>

<pre><code>method_a(@date &gt; Date.today, {param1: 'value1', param2: 'value2'}) do; end
</code></pre>

<p>Combining the two <em>really</em> looks like keyword arguments:</p>

<pre><code>method_a(@date &gt; Date.today, param1: 'value1', param2: 'value2') do; end
</code></pre>

<p>In your <code>method_a</code>, you could greatly improve the readability by using a guard clause instead of the big honking <code>if</code> expression:</p>

<pre><code>def method_a(condition, params={}, &amp;block)
  return method_b(params, &amp;block) if condition
  yield
end
</code></pre>

<p>Or the other way around, whichever you think reads better:</p>

<pre><code>def method_a(condition, params={}, &amp;block)
  return yield unless condition
  method_b(params, &amp;block)
end
</code></pre>

<p>However, this is a giant code smell. A method should <em>always</em> do one thing, and one thing only. <em>Every</em> method which takes a boolean argument violates this rule, because it pretty much by definition does <em>two</em> things: one thing if the condition is true and a different thing if the condition is false.</p>

<p>In your original code, this is blatantly obvious, because you have the giant <code>if</code> expression surrounding the entire method and the code in the two branches is <em>completely</em> different. It is even more obvious than that, because the <code>else</code> branch not only has completely different code than the <code>then</code> branch, it also completely ignores the arguments that are passed into the method! So, not only does the method behave differently depending on the condition, it even has a different <em>signature</em>!</p>

<p>What you really want to do, is split the method into two methods. The user of <code>method_a</code> needs to know <em>anyway</em> what the different behavior between the two cases is, and he has to supply the conditional himself. Instead, he could just call the right method in the first place. So, I would split <code>method_a</code> into two:</p>

<pre><code>def method_one(params={}, &amp;block)
  method_b(params, &amp;block)
end

def method_two
  yield
end
</code></pre>

<p>And the client can decide which one to call:</p>

<pre><code>if @date &gt; Date.today then
  method_two(param1: 'value1', param2: 'value2')
else
  method_one do
    # something
  end
end
</code></pre>

<p>But, if you look closely at <code>method_one</code>, you will see that all it does is just forwarding its arguments unmodified to <code>method_b</code>. So, we can just get rid of <code>method_one</code> altogether, and have the client call <code>method_b</code> directly.</p>

<p>The same goes for <code>method_two</code>: all it does is call the block. The client could have just as well run the code in the first place.</p>

<p>So, now our library code looks like this:</p>

<pre><code># there is no spoon
</code></pre>

<p>That's right! There is no library code left! (Except for <code>method_b</code> which is not part of your question.)</p>

<p>And the client code looks like this:</p>

<pre><code>if @date &gt; Date.today then
  method_b(param1: 'value1', param2: 'value2')
else
  # something
end
</code></pre>

<p>A very good example of a method that violates this rule, is <code>Module#instance_methods</code> in the Ruby core library. It tells you all the instance methods defined in a particular module and class and it takes a boolean argument which decides whether or not this list will include the methods inherited from superclasses. <em>Noone</em> can <em>ever</em> remember whether to pass <code>false</code> or <code>true</code>. <em>Noone</em>. Jim Weirich uses this example in his talks about good design and he usually asks the audience which is the inherited case and which is the immediate case. Usually, a high percentage get it wrong. Sometimes, the percentage is <em>worse than just flipping a coin</em>!</p>

<p>If you look at <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000919"" rel=""nofollow"">the documentation</a>, it is utterly confusing. I can <em>never</em> remember which way around the conditional goes, I <em>always</em> have to look it up in the documentation. Which isn't really that helpful, because the <em>official documentation</em>, which is part of the <em>actual</em> sourcecode of YARV and MRI, <em>has it the wrong way round, too</em>!</p>
"
"<p>Consider the following extension (the pattern popularized by several Rails plugins over the years):</p>

<pre><code>module Extension
  def self.included(recipient)
    recipient.extend ClassMethods
    recipient.send :include, InstanceMethods
  end

  module ClassMethods
    def macro_method
      puts ""Called macro_method within #{self.name}""
    end
  end

  module InstanceMethods
    def instance_method
      puts ""Called instance_method within #{self.object_id}""
    end
  end
end
</code></pre>

<p>If you wished to expose this to every class, you can do the following:</p>

<pre><code>Object.send :include, Extension
</code></pre>

<p>Now you can define any class and use the macro method:</p>

<pre><code>class FooClass
  macro_method
end
#=&gt; Called macro_method within FooClass
</code></pre>

<p>And instances can use the instance methods:</p>

<pre><code>FooClass.new.instance_method
#=&gt; Called instance_method within 2148182320
</code></pre>

<p>But even though <code>Module.is_a?(Object)</code>, you cannot use the macro method in a module.</p>

<pre><code>module FooModule
  macro_method
end
#=&gt; undefined local variable or method `macro_method' for FooModule:Module (NameError)
</code></pre>

<p>This is true even if you explicitly include the original <code>Extension</code> into <code>Module</code> with <code>Module.send(:include, Extension)</code>.</p>

<p>For individual modules you can include extensions by hand and get the same effect:</p>

<pre><code>module FooModule
  include Extension
  macro_method
end
#=&gt; Called macro_method within FooModule
</code></pre>

<p>But how do you add macro-like methods to all Ruby modules?</p>
","2988","","<blockquote>
  <p>Consider the following extension (the pattern popularized by several Rails plugins over the years)</p>
</blockquote>

<p>This is <em>not</em> a pattern, and it was not ""popularized"". It is an <em>anti-pattern</em> that was <em>cargo-culted</em> by 1337 PHP h4X0rZ who don't know Ruby. Thankfully, many (all?) instances of this anti-pattern have been eliminated from Rails 3, thanks to the hard word of Yehuda Katz, Carl Lerche and the others. Yehuda even uses pretty much the exact same code you posted as an anti-example both in his recent talks about cleaning up the Rails codebase, and he wrote <a href=""http://YehudaKatz.Com/2009/11/12/better-ruby-idioms/"">an entire blog post</a> just about this one anti-pattern.</p>

<blockquote>
  <p>If you wished to expose this to every class, you can do the following:</p>

<pre><code>Object.send :include, Extension
</code></pre>
</blockquote>

<p>If you want to add it to <code>Object</code> <em>anyway</em>, then why not just do that:</p>

<pre><code>class Object
  def instance_method
    puts ""Called instance_method within #{inspect}""
  end
end
</code></pre>

<blockquote>
  <p>But how do you add macro-like methods to all Ruby modules?</p>
</blockquote>

<p>Simple: by adding them to <code>Module</code>:</p>

<pre><code>class Module
  def macro_method
    puts ""Called macro_method within #{inspect}""
  end
end
</code></pre>

<p>It all just works:</p>

<pre><code>class FooClass
  macro_method
end
#=&gt; Called macro_method within FooClass

FooClass.new.instance_method
#=&gt; Called instance_method within #&lt;FooClass:0x192abe0&gt;

module FooModule
  macro_method
end
#=&gt; Called macro_method within FooModule
</code></pre>

<p>It's just 10 lines of code vs. your 16, and exactly 0 of those 10 lines are metaprogramming or hooks or anything even remotely complicated.</p>

<p>The only difference between your code and mine is that in your code, the mixins show up in the inheritance hierarchy, so it is a tad easier to debug, because you actually <em>see</em> that something was added to <code>Object</code>. But that is easily fixed:</p>

<pre><code>module ObjectExtensions
  def instance_method
    puts ""Called instance_method within #{inspect}""
  end
end

class Object
  include ObjectExtensions
end

module ModuleExtensions
  def macro_method
    puts ""Called macro_method within #{inspect}""
  end
end

class Module
  include ModuleExtensions
end
</code></pre>

<p>Now I'm tied with your code at 16 lines but I would argue that mine is simpler than yours, especially considering that yours doesn't work and neither you nor I nor almost 190000 StackOverflow users can figure out why.</p>
"
"<p>So I know you can say Kernel.const_get(""ClassName"") and you'll get back the class to which the string corresponds in name. But what about for variables? Is there a way to do:</p>

<pre><code>test = ""heyas""
some_method_here(""test"") #=&gt; ""heyas""
</code></pre>

<p>Thanks so much</p>

<p>The fact is that I need it in more complex code, real example:</p>

<pre><code>class User
  class Validations
    class &lt;&lt; self
      def username_len
        return u.len &gt; 3 and u.len &lt; 22
      end
      # ...
    end
  end
  def validate(u,e,p)
    [:u, :e, :p].each do |v|
      Validations.send(:define_singleton_method, v, lambda { eval(v.to_s) }) # see this line
    end
    #other code to run validations
  end
end
</code></pre>

<p>So you see, there's no better way, is there?</p>
","2988","","<p>No, there is only <code>class_variable_get</code>, <code>instance_variable_get</code> and <code>const_get</code>. There is no <code>local_variable_get</code>. But it wouldn't make sense anyway: local variables are local to the current method body, module body, class body or script body, that's why they are <em>called</em> ""local"" variables, after all! You simply <em>cannot</em> access them from another method.</p>

<blockquote>
  <p>Is there a way to do:</p>

<pre><code>test = ""heyas""
some_method_here(""test"") #=&gt; ""heyas""
</code></pre>
</blockquote>

<p>No, there is no way to do this. And there <em>cannot possibly be</em> a way to do it. <code>test</code> is a <em>local</em> variable, which means it <em>only</em> exists in the current script body. It <em>does not</em> exist inside the body of <code>some_method_here</code>. That's the <em>whole point</em> of local variables: you cannot ever, under any circumstances, access them from somewhere else.</p>

<p>Regarding your comment on another answer:</p>

<blockquote>
<pre><code>def my_func(str)
  var_a = 'hey'
  var_b = 'ah'
  return some_method_here(str)
end
#=&gt; should return the corresponding variable's value, e.g. my_func('var_a')
#=&gt; 'hey'
</code></pre>
</blockquote>

<p>Again, this <em>cannot possibly</em> work, since the <em>whole point</em> of local variables is that they <em>cannot</em> be accessed from anywhere else.</p>

<p>But there is a pretty simple variation which does exactly what you want:</p>

<pre><code>def my_func(str)
  {
    'var_a' =&gt; 'hey',
    'var_b' =&gt; 'ah'
  }[str]
end
#=&gt; should return the corresponding variable's value, e.g. my_func('var_a')
#=&gt; 'hey'
</code></pre>

<p>This can of course be further simplified to:</p>

<pre><code>my_func = {'var_a' =&gt; 'hey', 'var_b' =&gt; 'ah'}
#=&gt; should return the corresponding variable's value, e.g. my_func['var_a']
#=&gt; 'hey'
</code></pre>

<p>Given that you can only pass in a limited number of different options, it's probably better to use symbols instead:</p>

<pre><code>my_func = {var_a: 'hey', var_b: 'ah'}
#=&gt; should return the corresponding variable's value, e.g. my_func[:var_a]
#=&gt; 'hey'
</code></pre>

<p>What you are asking is basically: pass in a key, get a value out. That's <em>exactly</em> what a <code>Hash</code> is.</p>

<p>EDIT: After the revised question, this is the best that I could come up with:</p>

<pre><code>def validate(u, e, p)
  local_variables.zip(local_variables.map {|var|
    eval(var.to_s)
  }).each {|var, val|
    Validations.send(:define_singleton_method, var) { val }
  }
end
</code></pre>

<p>However, I think there is something seriously wrong with the design. You overwrite <em>singleton methods</em> of <code>User::Validations</code> based on different <em>instances</em> of <code>User</code>. By the very definition of <em>singleton</em> method, there can only ever be one copy of those in the system. But you have many different instances of <code>User</code>, and every time you call <code>User#validate</code> it will <em>overwrite</em> the <em>only</em> copies of <code>User::Validations.u</code>, <code>User::Validations.e</code> and <code>User::Validations.p</code> at which point they will start to behave completely differently for the <em>entire</em> system.</p>

<p>In other words, you are changing the behavior of the <em>entire system</em> based on a <em>single instance</em>. And there can be <em>many instances</em> and every time, the behavior of the system changes.</p>

<p>That just <em>can't</em> be right.</p>

<pre><code>u1 = User.new
u1.validate('u1', :e1, 1)

p User::Validations.u, User::Validations.e, User::Validations.p
# =&gt; 'u1'
# =&gt; :e1
# =&gt; 1

u2 = User.new
u2.validate('U2', :E2, 2.0)
# =&gt;  warning: method redefined; discarding old u
# =&gt;  warning: method redefined; discarding old e
# =&gt;  warning: method redefined; discarding old p
#              ^^^^^^^^^^^^^^^^
#                    Oops!

p User::Validations.u, User::Validations.e, User::Validations.p
# =&gt; 'U2'
# =&gt; :E2
# =&gt; 2.0
#    ^^^
# Completely different results for the exact same arguments
</code></pre>
"
"<p>Let there be <code>class Example</code> defined as: </p>

<pre><code>class Example
  def initialize(test='hey')
    self.class.send(:define_method, :say_hello, lambda { test })
  end
end
</code></pre>

<p>On calling <code>Example.new; Example.new</code> I get a <code>warning: method redefined; discarding old say_hello</code>. This, I conclude, must be because it defines a method in the actual class (which makes sense, from the syntax). And that, of course, would prove disastrous should there be multiple instances of <code>Example</code> with different values in their methods.</p>

<p>Is there a way to create methods just for the instance of a class from inside that instance?</p>

<p>Thanks so much.</p>
","2988","","<p>First off, a small style tip:</p>

<pre><code>self.class.send(:define_method, :say_hello, lambda { test })
</code></pre>

<p>You can make this look a little bit nicer by using the new proc literal in Ruby 1.9:</p>

<pre><code>self.class.send(:define_method, :say_hello, -&gt; { test })
</code></pre>

<p>But you don't need that. Ruby has something called <em>blocks</em>, which are basically a piece of code that you can pass as an argument to a method. In fact, you already used blocks, since <code>lambda</code> is just a method which takes a block as an argument and returns a <code>Proc</code>. However, <code>define_method</code> <em>already</em> takes a block anyway, there is no need to pass a block to <code>lambda</code> which converts it to a <code>Proc</code> which it passes to <code>define_method</code> which then converts it back into a block:</p>

<pre><code>self.class.send(:define_method, :say_hello) { test }
</code></pre>

<p>As you already noticed, you are defining the method on the wrong class. You are defining it on the <code>Example</code> class, since inside an instance method like <code>initialize</code>, <code>self</code> is the current object (i.e. <code>ex1</code> or <code>ex2</code> in @mikej's example), which means that <code>self.class</code> is <code>ex1</code>'s class, which is <code>Example</code>. So, you are overwriting the same method over and over again.</p>

<p>This leads to the following unwanted behavior:</p>

<pre><code>ex1 = Example.new('ex1')
ex2 = Example.new('ex2') # warning: method redefined; discarding old say_hello
ex1.say_hello            # =&gt; ex2 # Huh?!?
</code></pre>

<p>Instead, if you want a singleton method, you need to define it on the singleton class:</p>

<pre><code>(class &lt;&lt; self; self end).send(:define_method, :say_hello) { test }
</code></pre>

<p>This works as intended:</p>

<pre><code>ex1 = Example.new('ex1')
ex2 = Example.new('ex2')
ex1.say_hello            # =&gt; ex1
ex2.say_hello            # =&gt; ex2
</code></pre>

<p>In Ruby 1.9, there's a method that does that:</p>

<pre><code>define_singleton_method(:say_hello) { test }
</code></pre>

<p>Now, this works the way you want it to, but there's a higher-level problem here: this is not Ruby code. It is Ruby <em>syntax</em>, but it's not Ruby code, it's Scheme.</p>

<p>Now, Scheme is a <em>brilliant</em> language and writing Scheme code in Ruby syntax is certainly not a bad thing to do. It beats the hell out of writing Java or PHP code in Ruby syntax, or, as was the case in a StackOverflow question yesterday, Fortran-57 code in Ruby syntax. But it's not as good as writing <em>Ruby</em> code in Ruby syntax.</p>

<p>Scheme is a functional language. Functional languages use functions (more precisely, function closures) for encapsulation and state. But Ruby is not a functional language, it is an object-oriented language and OO languages use <em>objects</em> for encapsulation and state.</p>

<p>So, function closures become objects and captured variables become instance variables.</p>

<p>We can also come at this from a completely different angle: what you are doing is that you are defining a <em>singleton</em> method, which is a method whose purpose it is to define behavior which is specific to <em>one</em> object. But you are defining that singleton method for <em>every</em> instance of the class, and you are defining the <em>same</em> singleton method for every instance of the class. We already have a mechanism for defining behavior for every instance of a class: instance methods.</p>

<p>Both of these arguments come from completely opposite directions, but they arrive at the same destination:</p>

<pre><code>class Example
  def initialize(test='hey')
    @test = test
  end

  def say_hello
    @test
  end
end
</code></pre>
"
"<p>Is this a ruby bug?</p>

<pre><code>target_url_to_edit = target_url

if target_url_to_edit.include?(""http://"")
  target_url_to_edit[""http://""] = """"
end

logger.debug ""target url is now #{target_url}""
</code></pre>

<p>This returns target_url without http://</p>
","2988","","<p>No, this is not a bug in Ruby, this is just how shared mutable state works, not just in Ruby but in <em>any</em> programming language.</p>

<p>Think about it this way: my mom calls me ""son"", my friends call me ""Jörg"". If I cut my hair, then it doesn't matter which name you use to refer to me: I am the same person, regardless of whether you call me ""son"" or ""Jörg"" or ""Mr. Mittag"" or ""hey, douchebag"", therefore my hair will always be short. It doesn't magically grow back if you call me by a different name.</p>

<p>The same thing happens in your code: you refer to the string by two different names, but it doesn't matter which name you use; if the string changes, then it changes.</p>

<p>The solution is, of course, to not share mutable state and to not mutate shared state, like in @hurikhan77's answer.</p>
"
"<p><strong>UPDATE 2</strong>: For posterity, this is how I've settled on doing it (thanks to Jorg's input):</p>

<pre><code>100.step(2, -2) do |x|
    # my code
end
</code></pre>

<p>(Obviously there are plenty of ways to do this; but it sounds like this is the most ""Ruby"" way to do it; and that's exactly what I was after.)</p>

<hr>

<p><strong>UPDATE</strong>: OK, so what I was looking for was <code>step</code>:</p>

<pre><code>(2..100).step(2) do |x|
    # my code
end
</code></pre>

<p>But it turns out that I wasn't 100% forthcoming in my original question. I actually want to iterate over this range backwards. To my surprise, a negative step isn't legal.</p>

<pre><code>(100..2).step(-2) do |x|
    # ArgumentError: step can't be negative
end
</code></pre>

<p>So: <strong>how do I do this backwards?</strong></p>

<hr>

<p>Hey guys, I'm <strong>completely new</strong> to Ruby, so be gentle.</p>

<p>Say I want to iterate over the range of even numbers from 2 to 100; how would I do that?</p>

<p>Obviously I <em>could</em> do:</p>

<pre><code>(2..100).each do |x|
    if x % 2 == 0
        # my code
    end
end
</code></pre>

<p>But, <em>obviously</em> (again), that would be pretty stupid.</p>

<p>I know I could do something like:</p>

<pre><code>i = 2
while i &lt;= 100
    # my code
    i += 2
end
</code></pre>

<p>I believe I could also write my own custom class that provides its own <code>each</code> method (?). I am almost sure that would be overkill, though.</p>

<p>I'm interested in two things:</p>

<ol>
<li>Is it <strong>possible</strong> to do this with some variation of the standard Range syntax (i.e., <code>(x..y).each</code>)?</li>
<li>Either way, what would be the most idiomatic ""Ruby way"" of accomplishing this (using a Range or otherwise)? Like I said, I'm new to the language; so any guidance you can offer on how to do things in a more typical Ruby style would be much appreciated.</li>
</ol>
","2988","","<p>You can't declare a <code>Range</code> with a ""step"". Ranges don't have steps, they simply have a beginning and an end.</p>

<p>You can certainly <em>iterate</em> over a <code>Range</code> in steps, for example like this:</p>

<pre><code>(2..100).step(2).reverse_each(&amp;method(:p))
</code></pre>

<p>But if all you want is to iterate, then what do you need the <code>Range</code> for in the first place? Why not just iterate?</p>

<pre><code>100.step(2, -2, &amp;method(:p))
</code></pre>

<p>This has the added benefit that unlike <code>reverse_each</code> it does not need to generate an intermediate array.</p>
"
"<p>I created an Android project, added it to my git repo, comitted and pushed my clone to the master. Later I tried checking out the project and Eclipse complained about missing src folders. I checked my repo and the master repo and the src folders are missing (Im sure they were there when I created the project). So can someone explain what happened here? Im new to git so maybe I missed something?</p>
","2988","","<p>Git doesn't ignore empty directories. It ignores <em>all</em> directories. In Git, directories exist only implicitly, through their contents. Emtpy directories <em>have</em> no contents, therefore they don't exist.</p>

<p>Or to put it another way: Git is a content tracker. Empty directories are not content.</p>
"
"<p>In Ruby, why does defining a class evaluate to <code>nil</code>? Same goes for defining a method: why does it evaluate to <code>nil</code>? Wouldn't it be useful if defining a class would evaluate as the class?</p>
","2988","","<blockquote>
  <p>In Ruby, why does defining a class evaluate to <code>nil</code>?</p>
</blockquote>

<p>It doesn't.</p>

<p>First off, in Ruby you don't define a class, you execute a class body. Secondly, executing a class body does <em>not</em> evaluate to <code>nil</code> as you claim, it evaluates to the value of the last expression inside the class body. This is perfectly consistent with executing a module body and executing a method body.</p>

<p>See, for example:</p>

<pre><code>class Foo
  'Hello'
end
# =&gt; 'Hello'
</code></pre>

<blockquote>
  <p>Same goes for defining a method: why does it evaluate to <code>nil</code>?</p>
</blockquote>

<p>Actually, it doesn't either. Defining a method evaluates to an implementation-defined value. The reason why it evaluates to an implementation-defined value is that so far the Ruby community hasn't reached a consensus on what it should return.</p>

<p>Some argue that it should evaluate to the <code>CompiledMethod</code> object corresponding to that method. That's what Rubinius does. However, there is a problem with this: not all Ruby implementations compile their methods. And not all of them that <em>do</em> compile them, compile them at definition time. JRuby, for example, only compiles them when they are executed, more precisely <em>after</em> they have been executed 20 times. Sometimes it doesn't compile them <em>at all</em>, for example in environments where compilation is forbidden such as Google App Engine. Also, not all Ruby implementations do have a Ruby representation for their compiled methods. And even if they did, their compiled methods are vastly different: Rubinius's compiled methods are Rubinius bytecode, YARV's compiled methods are YARV bytecode, JRuby's compiled methods are JVM bytecode, IronRuby's compiled methods are DLR trees. And of course the most widely used implementation, MRI, doesn't even <em>have</em> a compiler.</p>

<p>Others say, it should evaluate to the <code>UnboundMethod</code> object corresponding to that method. Here, the problem is that there is no single <code>UnboundMethod</code> object corresponding to a method. There's infinitely many of them. Ruby methods <em>aren't</em> objects. They can be <em>converted</em> to objects, but they aren't objects themselves. And when they are converted to objects, they generate a new object every time. So, the <code>UnboundMethod</code> object that would be returned is really not directly related to the method that was defined. Also, what would you want to do with an unbound method? The only case where <em>I</em> use an unbound method is to wrap an already existing method that I cannot modify; but if I have access to the definition anyway, then I don't need to wrap it.</p>

<p>A third group says that defining a method should evaluate to its name. This seems to be a somewhat arbitrary choice. In fact, I have not seen any compelling reason for why this should be the case. Literally the only argument is that this would allow you to make Ruby look more like Java:</p>

<pre><code># here's how you make a single method private today
def foo(bar) end
private :foo

# instead you could do this:
private def foo(bar) end
</code></pre>

<p>So, basically, the reason why method definitions return an implementation-defined value (which on most implementations is just <code>nil</code>) is that nobody has come up with a better suggestion.</p>

<p>Interestingly, <code>Module#define_method</code> <em>does</em> return something useful. If you use a method to define a method, it returns the old method. If you use a proc to define a method it returns a variation of that proc. If you use a block to define a method, it returns a proc corresponding to that block. In other words, it returns an executable object that corresponds to the method body:</p>

<pre><code>class Foo
  $bar  = -&gt;{}
  $baz  = define_method :baz, $bar

  $qux  = instance_method :baz
  $quux = define_method :quux, $qux

  define_method :corge do;end
end
# =&gt; #&lt;Proc:0x1cda900@(irb):8 (lambda)&gt;

$bar.eql?   $baz  # =&gt; true
$bar.equal? $baz  # =&gt; false
$qux.equal? $quux # =&gt; true
</code></pre>

<blockquote>
  <p>Wouldn't it be useful if defining a class would evaluate as the class?</p>
</blockquote>

<p>Why? The way it is now, class bodies can return anything you want, <em>including</em> the class. With your suggestion, it could return <em>only</em> the class, so it would be strictly less powerful.</p>

<p>Also, the only case were I ever needed a class body to return the class itself, was for getting a reference to the singleton class of an object, like this:</p>

<pre><code>foo = Object.new
foo_singleton_class = class &lt;&lt; foo; self end
</code></pre>

<p>Or the more well-known pattern:</p>

<pre><code>class Object; def singleton_class; class &lt;&lt; self; self end end end
</code></pre>

<p>But now that <code>Object#singleton_class</code> is part of the core library, that is no longer necessary.</p>
"
"<p>is there any way to make my currently jruby script into a standalone single executable like jar or exe ?</p>
","2988","","<p><a href=""http://Rawr.RubyForge.Org/"" rel=""nofollow"">Rawr</a> can do that, and also generate OSX <code>.app</code> packages.</p>
"
"<p>In my code, I have a section that extracts and lists the different categories of posts but my problem is how to get exactly the posts that fall within that category and list them only. This is an example of my code: </p>

<pre><code>category = Array.new
docs.elements.each(""*/entry/category"")  { |element|
category &lt;&lt; element.attributes['term']}
title = Array.new
docs.elements.each(""*/entry/title"")  do |element|
title &lt;&lt; element.text
end

category.each_with_index {|category, index|
puts ""  For Catergory :    #{category}
The title is : #{title[index]} ""
 puts '---------------------------------------------------'
</code></pre>

<p>The output of the above code is as follows and I would want to match like categories with their titles.</p>

<p>For Catergory :    A good Begining</p>

<p>The title is : Today</p>

<hr>

<p>For Catergory :    Circular</p>

<p>The title is : Life</p>

<hr>

<p>For Catergory :    Circular</p>

<p>The title is : Let Me try</p>

<hr>

<p>For Catergory :    A good Begining</p>

<p>The title is : Check</p>

<hr>

<p>For Catergory :    time shall time</p>

<p>The title is : Testing</p>

<hr>

<p>For Catergory :    time shall time</p>

<p>The title is : I have made it</p>

<hr>

<p>For Catergory :    Circular</p>

<p>The title is : I have made it</p>

<hr>

<p>For Catergory :    Circular</p>

<p>The title is : Me</p>

<hr>

<p>For Catergory :    A good Begining</p>

<p>The title is : A Remarkable move</p>

<hr>

<p>For Catergory :    time shall time</p>

<p>The title is : </p>

<hr>

<p>For Catergory :    A good Begining</p>

<p>The title is : A welcome note</p>

<hr>
","2988","","<p>It's pretty much impossible to figure out what your code does, because it doesn't actually work. Apparently, it parses some data, but you don't tell us how it parses that data, what that data is and you don't provide any example data. Also, it seems that it depends on some libraries, but you don't tell us what those libraries are. The local variable <code>docs</code> which seems to be pretty much the most important thing in your code, is not defined. And instead of showing us what the output is that you want, you only show us what the output is that you <em>don't</em> want.</p>

<p>Anyway, as far as I have been able to figure out, this seems to be what you want:</p>

<pre><code>require 'open-uri'
require 'nokogiri'

doc = Nokogiri.XML(open('http://googleblog.blogspot.com/atom.xml'))

puts doc.css('entry').reduce(Hash.new {|hsh, key| hsh[key] = [] }) {|cats, entry|
  cats.tap {|cats|
    entry.css('category').each {|cat|
      cats[cat['term']] &lt;&lt; entry.css('title').text
    }
  }
}.reduce('') {|s, (cat, titles)|
  s.tap {|s|
    s &lt;&lt; ""  For Category :    #{cat}\n""
    s &lt;&lt; titles.reduce('') {|s, title|
      s.tap {|s|
        s &lt;&lt; ""The title is : #{title}\n""
      }
    }
    s &lt;&lt; ""---------------------------------------------------\n""
  }
}
</code></pre>

<p>It would also have been nice to know that you are actually processing an Atom feed. If I had known that beforehand, I wouldn't have had to write all that parsing logic myself, I could have just used an Atom parsing library.</p>
"
"<p>Two uses of version control seem to dictate different checkin styles.</p>

<ul>
<li><p><strong>distribution centric</strong>: changesets will generally reflect a complete feature.  In general these checkins will be larger.  This style is more user/maintainer friendly.</p></li>
<li><p><strong>rollback centric</strong>: changesets will be individual small steps so the history can function like an incredibly powerful undo.  In general these checkins will be smaller.  This style is more developer friendly.</p></li>
</ul>

<p>I like to use my version control as really powerful undo while while I banging away at some stubborn code/bug.  In this way I'm not afraid to make drastic changes just to try out a possible solution.  However, this seems to give me a fragmented file history with lots of ""well that didn't work"" checkins.</p>

<p>If instead I try to have my changeset reflect complete features I loose the use of my version control software for experimentation.  However, it is much easier for user/maintainers to figure out how the code is evolving.  Which has great advantages for code reviews, managing multiple branches, etc.</p>

<p>So what's a developer to do? Checkin small steps or complete features?</p>
","2988","","<p>The beauty of DVCS systems is that you can have <em>both</em>, because in a DVCS unlike a CVCS, <em>publishing</em> is orthogonal to <em>committing</em>. In a CVCS, every commit is automatically published, but it in a DVCS, commits are only published when they are <em>pushed</em>.</p>

<p>So, <em>commit</em> small steps, but only <em>publish</em> working features.</p>

<p>If you are worried about polluting your history, then you can rewrite it. You might have heard that rewriting history is evil, but that is not true: only rewriting <em>published</em> history is evil, but again, since publishing and committing are different, you can rewrite your unpublished history before publishing it.</p>

<p>This is how Linux development works, for example. Linus Torvalds is very concerned with keeping the history clean. In one of the very early e-mails about Git, he said that the published history should look not like you <em>actually</em> developed it, but how you <em>would have</em> developed it, if you were omniscient, could see into the future and never made any mistakes.</p>

<p>Now, Linux is a little bit special: it has commits going in at a rate of 1 commit every 11 minutes for 24 hours a day, 7 days a week, 365 days a year, including nights, weekends, holidays and natural disasters. And that rate is still increasing. Just imagine how much more commits there would be if every single typo and brainfart would result in a commit, too.</p>

<p>But the developers themselves in their private repositories commit however often they want.</p>
"
"<p>Which of these two forms of Array Initialization is better in Ruby?</p>

<p><strong>Method 1:</strong></p>

<pre><code>DAYS_IN_A_WEEK = (0..6).to_a
HOURS_IN_A_DAY = (0..23).to_a

@data = Array.new(DAYS_IN_A_WEEK.size).map!{ Array.new(HOURS_IN_A_DAY.size) }

DAYS_IN_A_WEEK.each do |day|
  HOURS_IN_A_DAY.each do |hour|
    @data[day][hour] = 'something'
  end
end
</code></pre>

<p><strong>Method 2:</strong></p>

<pre><code>DAYS_IN_A_WEEK = (0..6).to_a
HOURS_IN_A_DAY = (0..23).to_a

@data = {}

DAYS_IN_A_WEEK.each do |day|
  HOURS_IN_A_DAY.each do |hour|
    @data[day] ||= {}
    @data[day][hour] = 'something'
  end
end
</code></pre>

<p>The difference between the first method and the second method is that the second one does not allocate memory initially. I feel the second one is a bit inferior when it comes to performance due to the numerous amount of Array copies that has to happen.</p>

<p>However, it is not straight forward in Ruby to find what is happening. So, if someone can explain me which is better, it would be really great!</p>

<p>Thanks</p>
","2988","","<p>What's wrong with just</p>

<pre><code>@data = Array.new(7) { Array.new(24) { 'something' }}
</code></pre>

<p>Or, if you are content having the <em>same</em> object everywhere:</p>

<pre><code>@data = Array.new(7) { Array.new(24, 'something') }
</code></pre>

<p>It's much faster, not that it would matter. It is also <em>much more</em> readable, which is the most important thing. After all, the purpose of code is communicating intent to the other stakeholders, <em>not</em> communicating with the computer.<pre>             user   system     total       real
method1  8.969000 0.000000  8.969000 ( 9.059570)
method2 16.547000 0.000000 16.547000 (16.799805)
method3  6.468000 0.000000  6.468000 ( 6.616211)
method4  0.969000 0.015000  0.984000 ( 1.021484)</pre>That last line also shows another interesting thing: the runtime is dominated by the time needed to create the 7*24*100000 = 16.8 million <code>'something'</code> strings.</p>

<p>And of course there is another important obversation: your <code>method1</code> and <code>method2</code> that you are comparing against each other do two completely different things! It doesn't even make sense to compare them against each other. <code>method1</code> creates an <code>Array</code>, <code>method2</code> creates a <code>Hash</code>.</p>

<p>Your <code>method1</code> is equivalent to my first example above:</p>

<pre><code>@data = Array.new(7) { Array.new(24) { 'something' }}
</code></pre>

<p>While <code>method2</code> is (<em>very</em> roughly) equivalent to:</p>

<pre><code>@data = Hash.new {|h, k| h[k] = Hash.new {|h, k| h[k] = 'something' }}
</code></pre>

<p>Well, except that <em>your</em> <code>method2</code> initializes the entire <code>Hash</code> eagerly, while my method only executes the initialization code lazily in case an uninitialized key is read.</p>

<p>In other words, after running the above initialization code, the <code>Hash</code> is still empty:</p>

<pre><code>@data # =&gt; {}
</code></pre>

<p>But whenever you try to access a key, it will magically appear:</p>

<pre><code>@data[5][17] # =&gt; 'something'
</code></pre>

<p>And it will stay there:</p>

<pre><code>@data # =&gt; {5 =&gt; {17 =&gt; 'something'}}
</code></pre>

<p>Since this code doesn't actually initialize the <code>Hash</code>, it is obviously way faster:<pre>             user   system     total       real
method5  0.266000 0.000000  0.266000 ( 0.296875)</pre></p>
"
"<p>This was a homework assignment for my students (I am a teaching assistant) in c and I am trying to learn Ruby, so I thought I would code it up.  The goal is to read integers from a redirected file and print some simple information.  The first line in the file is the number of elements, and then each integer resides on its own line.</p>

<p>This code works (although perhaps inefficiently), but how can I make the code more Ruby-like?</p>

<pre><code>#!/usr/bin/ruby -w

# first line is number of inputs (Don't need it)
num_inputs = STDIN.gets.to_i

# read inputs as ints
h = Hash.new
STDIN.each do |n|
  n = n.to_i
  h[n] = 1 unless h[n] and h[n] += 1      
end

# find smallest mode
h.sort.each do |k,v|
  break puts ""Mode is: #{k}"", ""\n"" if v == h.values.max
end

# mode unique?
v = h.values.sort
print ""Mode is unique: ""
puts v.pop == v.pop, ""\n""

# print number of singleton odds, 
#       odd elems repeated odd number times in desc order
#       even singletons in desc order
odd_once = 0
odd = Array.new
even = Array.new
h.each_pair do |k, v|
  odd_once += 1 if v == 1 and k.odd?
  odd &lt;&lt; k if v.odd?
  even &lt;&lt; k if v == 1 and k.even?
end
puts ""Number of elements with an odd value that appear only once: #{odd_once}"", ""\n""
puts ""Elements repeated an odd number of times:""
puts odd.sort.reverse, ""\n""
puts ""Elements with an even value that appear exactly once:""
puts even.sort.reverse, ""\n""

# print fib numbers in the hash
class Fixnum
  def is_fib?
    l, h = 0, 1
    while h &lt;= self
      return true if h == self
      l, h = h, l+h
    end
  end
end
puts ""Fibonacci numbers:""
h.keys.sort.each do |n|
  puts n if n.is_fib?
end
</code></pre>
","2988","","<p>I don't know if this is a ""more Ruby way"". At least at is a more ""higher-order"" way, FWIW.</p>

<pre><code># first line is number of inputs (Don't need it), thus drop the first line
# read inputs as ints
h = ARGF.drop(1).reduce(Hash.new(0)) {|h, n| h.tap {|h| h[n.to_i] += 1 }}
</code></pre>

<p>Not much to say here. Instead of simply looping over <code>ARGF</code> and setting the hash keys, we use <code>reduce</code> to let it do the work for us. And we use a hash with a default value of <code>0</code> instead of manually checking the keys for existence.</p>

<p>We use <code>Enumerable#drop</code> to simply drop the first line.</p>

<p><code>ARGF</code> is a really cool feature stolen (like most of the scripting features) from Perl: if you simply call the script as <code>script.rb</code> without arguments, then <code>ARGF</code> is the standard input. If, however, you call your script like <code>script.rb a.txt b.txt</code>, then Ruby will interpret all the arguments as filenames, open all the files for reading and <code>ARGF</code> will be the concatenation of their contents. This allows you to very quickly write scripts that can take their input either via standard input or a file.</p>

<pre><code># find smallest mode
modes = h.group_by(&amp;:last).sort.last.last.map(&amp;:first).sort
puts ""Mode is: #{modes.first}""
</code></pre>

<p>Ruby doesn't have an explicit key-value-pair type, instead most looping operations on hashes use two-element arrays. This allows us to refer to the key and the value with <code>Array#first</code> and <code>Array#last</code>.</p>

<p>In this particular case, we are using <code>Enumerable#group_by</code> to group the hash into different buckets, and the grouping criterion we use is the <code>last</code> method, i.e. the value which in our hash is the frequency. In other words, we group by frequency.</p>

<p>If we now sort the resulting hash, the very last element is the one with the highest frequency (i.e. the mode). We take the last element (the value of the key-value-pair) of that, and then the last element of that, which is an array of key-value-pairs (<code>number =&gt; frequency</code>) of which we extract the keys (the numbers) and sort them.</p>

<p>[Note: simply print out the results at every intermediate stage and it's much easier to understand. Just replace the <code>modes = ...</code> line above with something like this:</p>

<pre><code>p modes = h.tap(&amp;method(:p)).
  group_by(&amp;:last).tap(&amp;method(:p)).
  sort.tap(&amp;method(:p)).
  last.tap(&amp;method(:p)).
  last.tap(&amp;method(:p)).
  map(&amp;:first).tap(&amp;method(:p)).
  sort
</code></pre>

<p>]</p>

<p><code>modes</code> is now a sorted array with all the numbers which have that particular frequency. If we take the first element, we have the smallest mode.</p>

<pre><code># mode unique?
puts ""Mode is #{unless modes.size == 1 then '*not* ' end}unique.""
</code></pre>

<p>And if the size of the array is not <code>1</code>, then the mode was not unique.</p>

<pre><code># print number of singleton odds, 
#       odd elems repeated odd number times in desc order
#       even singletons in desc order
odds, evens = h.select {|_,f|f==1}.map(&amp;:first).sort.reverse.partition(&amp;:odd?)
</code></pre>

<p>It looks like there is a lot going on here, but it's actually straightforward. You start reading after the equals sign and simply read left to right.</p>

<ol>
<li>we select all items in the hash whose value (i.e. frequency) is <code>1</code>. IOW, we select all the singletons.</li>
<li>we map all the resulting key-value-pairs just to their first element, i.e. the number&nbsp;&ndash; IOW we throw away the frequency.</li>
<li>we sort the list</li>
<li>and then reverse it (for larger lists we should sort in reverse to begin with, since this is quite a waste of CPU cycles and memory)</li>
<li>lastly, we partition the array into two arrays, one containing all the odd numbers and the other all the even numbers</li>
<li><p>now we finally look to the left side of the equals sign: <code>Enumerable#partition</code> returns a two-element array containing the two arrays with the partitioned elements and we use Ruby's destructuring assignment to assign the two arrays to two variables</p>

<p>puts ""Number of elements with an odd value that appear only once: #{odds.size}""</p></li>
</ol>

<p>Now that we have a list of odd singletons, their number is simply the size of the list.</p>

<pre><code>puts ""Elements repeated an odd number of times: #{
  h.select {|_, f| f.odd?}.map(&amp;:first).sort.reverse.join(', ')
}""
</code></pre>

<p>This is very similar to the above: select all numbers with an odd frequency, map out the keys (i.e. numbers), sort, reverse and then convert them to a string by joining them together with a comma and space in between.</p>

<pre><code>puts ""Elements with an even value that appear exactly once: #{evens.join(', ')}""
</code></pre>

<p>Again, now that we have a list of even singletons, printing them is just a matter of joining the list elements with commas.</p>

<pre><code># print fib numbers in the hash
</code></pre>

<p>I didn't feel like refactoring this algorithm to be more efficient and specifically to memoize. I just made some small adjustments.</p>

<pre><code>class Integer
</code></pre>

<p>There was nothing in the algorithm that depended on the number being a certain size, so I pulled the method up into the <code>Integer</code> class.</p>

<pre><code>  def fib?
</code></pre>

<p>And I dropped the <code>is_</code> prefix. The fact that this is a boolean method is already explicit in the question mark.</p>

<pre><code>    l, h = 0, 1
    while h &lt;= self
      return true if h == self
      l, h = h, l+h
    end
  end
end
puts ""Fibonacci numbers: #{h.keys.sort.select(&amp;:fib?).join(', ')}""
</code></pre>

<p>This probably doesn't need much explanation: take the keys, sort them, select all Fibonacci numbers and join them together with commas.</p>

<p>Here is an idea for how to refactor this algorithm. There is <a href=""http://Neeraj.Name/2008/05/10/how-hash-works-with-block-in-ruby.html"" rel=""nofollow"">a very interesting implementation of Fibonacci</a> using a <code>Hash</code> with default values for memoizing:</p>

<pre><code>fibs = {0 =&gt; 0, 1 =&gt; 1}.tap do |fibs|
  fibs.default_proc = -&gt;(fibs, n) { fibs[n] = fibs[n-1] + fibs[n-2] }
end
</code></pre>

<p>It would look a little like this:</p>

<pre><code>class Integer
  @@fibs = {0 =&gt; 0, 1 =&gt; 1}.tap do |fibs|
    fibs.default_proc = -&gt;(fibs, n) { fibs[n] = fibs[n-1] + fibs[n-2] }
  end

  def fib?
    i = 0
    until @@fibs[i += 1] &gt; self
      break true if @@fibs[i] == self
    end
  end
end
puts ""Fibonacci numbers: #{h.keys.sort.select(&amp;:fib?).join(', ')}""
</code></pre>

<p>If anyone can think of an elegant way to get rid of the <code>i = 0</code>, <code>i += 1</code> and the whole <code>until</code> loop, I'd appreciate it.</p>
"
"<p>I want to use the value <code>v</code> inside of an instance method on the metaclass of a particular object:</p>

<pre><code>v = ParserMap[kind][:validation]   # We want to use this value later.
s = ParserMap[kind][:specs]
const_set(name, lambda {
  p = Parser.new(&amp;s)

  # This line starts a new scope...
  class &lt;&lt; p
    define_method :validate do |opts|
      v.call(self, opts)  # =&gt; NameError! The `class` keyword above
                          #    has started a new scope and we lost
                          #    old `v`.
    end
  end
  p
})
</code></pre>

<p>Unfortunately, the <code>class</code> keyword starts a new scope, so I lose the old scope and I get a NameError. How do I fix this?</p>
","2988","","<p>Just for kicks, here's how it would look like in Ruby 1.9.2:</p>

<pre><code>v = ParserMap[kind][:validation]
s = ParserMap[kind][:specs]
const_set(name, -&gt;{
  Parser.new(&amp;s).tap {|p|
    p.define_singleton_method :validate do |opts| v.(self, opts) end
  }
})
</code></pre>

<ul>
<li>replace the explicit return of <code>p</code> at the end with the K combinator (<code>Object#tap</code>) introduced in Ruby 1.8.7 and 1.9.0</li>
<li>replace the <code>lambda</code> method call with a proc literal introduced in Ruby 1.9.0</li>
<li>replace <code>obj.call(args)</code> with <code>obj.(args)</code> introduced in Ruby 1.9.0</li>
<li>most importantly: use <code>Object#define_singleton_method</code> introduced (or more precisely: going to be introduced) in Ruby 1.9.2</li>
</ul>
"
"<p>Is there a way to flatten a hash into a string, with optional delimiters between keys and values, and key/value pairs?</p>

<p>For example, <code>print {:a =&gt; :b, :c =&gt; :d}.flatten('=','&amp;')</code> should print <code>a=b&amp;c=d</code></p>

<p>I wrote some code to do this, but I was wondering if there was a neater way:</p>

<pre><code>class Hash
  def flatten(keyvaldelimiter, entrydelimiter)
    string = """"
    self.each do
      |key, value|
      key = ""#{entrydelimiter}#{key}"" if string != """" #nasty hack
      string += ""#{key}#{keyvaldelimiter}#{value}""  
    end
    return string
  end
end

print {:a =&gt; :b, :c =&gt; :d}.flatten('=','&amp;') #=&gt; 'c=d&amp;a=b'
</code></pre>

<p>Thanks</p>
","2988","","<p>Slight variation of @elektronaut's version:</p>

<p>You can actually put just an <code>|e|</code> there instead of <code>|k, v|</code> in which case <code>e</code> is an array of two elements and you can call <code>e.join('=')</code>. Altogether you have something like</p>

<pre><code>class Hash
  def join(keyvaldelim=$,, entrydelim=$,) # $, is the global default delimiter
    map {|e| e.join(keyvaldelim) }.join(entrydelim)
  end
end

{a: 100, b: 200}.join('=', '&amp;') # I love showing off the new Ruby 1.9 Hash syntax
# =&gt; 'a=100&amp;b=200'
</code></pre>
"
"<p>Since Java 7 is comming I was wondering how much time it would take to have the IBM JVM running Java 7 on IBM i systems? (AS400)</p>

<p>I was searching IBM's site to find some roadmap but didn't find anything yet. 
Do you have past experience on the older java release?</p>
","2988","","<p>IBM cannot even <em>start</em> development until the Java Community Process has published the Java 7 specification. And so far, Oracle hasn't even <em>started</em> the specification process. In fact, there isn't even a roadmap for when the specification process <em>might</em> start.</p>

<p>Also, some of Oracle's competitors fear that Oracle might not start the specification process until <em>after</em> they have released a final version of JDK7, thus giving Oracle a 1&ndash;3 year head start. (Actually, it was <em>Oracle</em> who accused Sun of that tactic. In general, Oracle sided with IBM and Apache against Sun in the quest for more democracy, transparency and fairness in the JCP. It remains to be seen how committed they are now that <em>they</em> are the ones benefiting from the broken process.)</p>
"
"<p>what the syntax is in <a href=""http://guides.rubyonrails.org/action_mailer_basics.html"" rel=""nofollow"">Action Mailer Basics</a> rails guide ?</p>

<pre><code>class UserMailer &lt; ActionMailer::Base
   def welcome_email(user)
      recipients    user.email
      from          ""My Awesome Site Notifications &lt;notifications@example.com&gt;""
      subject       ""Welcome to My Awesome Site""
      sent_on       Time.now
      body          {:user =&gt; user, :url =&gt; ""http://example.com/login""}
   end
end
</code></pre>

<p>How should i understand the construction, like</p>

<pre><code>from ""Some text for this field""
</code></pre>

<p>Is it an assignment the value to a variable, called ""from"" ?</p>
","2988","","<p>It's not an assignment. In Ruby, assignments are done using the assignment operator <code>=</code> like this:</p>

<pre><code>var = val
</code></pre>

<p>You are probably thinking of some Lisp dialects where assignment looks like this:</p>

<pre><code>(def var val)
</code></pre>

<p>It's just a simple receiverless message send.</p>

<p>In Ruby, the general syntax for a message send is</p>

<pre><code>receiver.selector(argument1, argument2)
</code></pre>

<p>However, if the <code>receiver</code> is <code>self</code>, you can leave off the <code>receiver</code>, so</p>

<pre><code>selector(argument1, argument2)
</code></pre>

<p>is the same as</p>

<pre><code>self.selector(argument1, argument2)
</code></pre>

<p>[Note: this is not quite true. In Ruby, private methods can only be invoked via a receiverless message send, so if in this example <code>self</code> responds to the <code>selector</code> message by invoking a private method, only the first variant will work, the second will raise a <code>NoMethodError</code> exception.]</p>

<p>Also, in cases where there are no ambiguities, you can leave off the parentheses around the arguments like this:</p>

<pre><code>receiver.selector argument1, argument2
</code></pre>

<p>If you put the two things together, you can now see that</p>

<pre><code>selector argument1, argument2
</code></pre>

<p>is equivalent to</p>

<pre><code>self.selector(argument1, argument2)
</code></pre>

<p>and thus</p>

<pre><code>from ""Some text for this field""
</code></pre>

<p>is equivalent to</p>

<pre><code>self.from(""Some text for this field"")
</code></pre>

<p>There is a third shortcut in Ruby's message sending syntax: if the very last argument to a message send is a <code>Hash</code> literal, then you can leave out the curly braces. So, the last line in the above example could also be written as</p>

<pre><code>  body          :user =&gt; user, :url =&gt; ""http://example.com/login""
</code></pre>

<p>Also, in Ruby 1.9, a <code>Hash</code> literal where all keys are <code>Symbol</code>s can be written using an alternative <code>Hash</code> literal syntax:</p>

<pre><code> { key1: val1, key2: val2 }
</code></pre>

<p>is the same as the old syntax</p>

<pre><code>{ :key1 =&gt; val1, :key2 =&gt; val2 }
</code></pre>

<p>which means that, at least in Ruby 1.9, that last line could also be written as </p>

<pre><code>  body          user: user, url: ""http://example.com/login""
</code></pre>
"
"<p>I am trying to take the following number:</p>

<pre><code>423523420987
</code></pre>

<p>And convert it to this:</p>

<pre><code>4235 2342 0987
</code></pre>

<p>It doesn't necessarily have to be an integer either. In fact, I would prefer it to be a string.</p>
","2988","","<pre><code>class String
  def in_groups_of(n, sep=' ')
    chars.each_slice(n).map(&amp;:join).join(sep)
  end
end

423523420987.to_s.in_groups_of(4)      # =&gt; '4235 2342 0987'
423523420987.to_s.in_groups_of(5, '-') # =&gt; '42352-34209-87'
</code></pre>
"
"<ul>
<li><p>I am recently thinking about writing <strong>self-modifying programs</strong>, I think it may be powerful and fun...
So I am currently looking for a language that allow modifying program own code easily..</p></li>
<li><p>I read about <strong>C#</strong> (as a way around) and the ability to compile -and execute- code in runtime, but that is too hurting..</p></li>
<li>I am also thinking about <strong>assembly</strong>... it is easier there to change running code but it is not very powerful (very raw)...</li>
</ul>

<p><em>Can you suggest me a powerful language -or a feature- that support modifying code in runtime..?</em></p>

<p><strong>Hints</strong><br/>
That what I mean by modifying code in runtime:</p>

<pre><code>  Start:
  a=10,b=20,c=0;
  label1: c=a+b;
  ....
  label1= c=a*b;
  goto label1;
</code></pre>

<p>and may be building a list of instructions:</p>

<pre><code>  code1.add(c=a+b);
  code1.add(c=c*(c-1));
  code1. execute();
</code></pre>

<p><strong>Thanks!</strong></p>
","2988","","<p>I sometimes, although <em>very</em> rarely do self-modifying code in Ruby.</p>

<p>Sometimes you have a method where you don't really know whether the data you are using (e.g. some lazy cache) is properly initialized or not. So, you have to check at the beginning of your method whether the data is properly initialized and then maybe initialize it. But you really only have to do that initialization once, but you check for it every single time.</p>

<p>So, sometimes I write a method which does the initialization and then replaces itself with a version that doesn't include the initialization code.</p>

<pre><code>class Cache
  def [](key)
    @backing_store ||= self.expensive_initialization

    def [](key)
      @backing_store[key]
    end

    @backing_store[key]
  end
end
</code></pre>

<p>But honestly, I don't think that's worth it. In fact, I'm embarrassed to admit that I have never actually benchmarked to see whether that <em>one</em> conditional actually makes any difference. (On a modern Ruby implementation with an aggressively optimizing profile-feedback-driven JIT compiler probably not.)</p>

<p>Note that, depending on how you <em>define</em> ""self-modifying code"", this may or may not be what you want. You <em>are</em> replacing some part of the <em>currently</em> executing program, so &hellip;</p>

<p>EDIT: Now that I think about it, that optimization doesn't make much sense. The expensive initialization is only executed once anyway. The only thing that modification avoids, is the conditional. It would be better to take an example where the check <em>itself</em> is expensive, but I can't think of one.</p>

<p>However, I thought of a cool example of self-modifying code: the <a href=""http://Labs.Oracle.Com/projects/maxine/"" rel=""nofollow"">Maxine JVM</a>. Maxine is a Research VM (it's technically not actually <em>allowed</em> to be called a ""JVM"" because its developers don't run the compatibility testsuites) written completely in Java. Now, there are plenty of JVMs written in itself, but Maxine is the only one I know of that also <em>runs</em> in itself. This is extremely powerful. For example, the JIT compiler can JIT compile itself to adapt it to the type of code that it is JIT compiling.</p>

<p>A very similar thing happens in the <a href=""http://KleinVM.SourceForge.Net/"" rel=""nofollow"">Klein VM</a> which is a VM for the Self Programming Language.</p>

<p>In both cases, the VM can optimize and recompile <em>itself</em> at runtime.</p>
"
"<p>I'm new to programming, so what is the difference between a Framework, a Toolkit and a Library?</p>
","2988","","<p>The most important difference, and in fact the <em>defining</em> difference between a library and a framework is <a href=""http://MartinFowler.Com/bliki/InversionOfControl.html"">Inversion of Control</a>.</p>

<p>What does this mean? Well, it means that when you call a library, <em>you</em> are in control. But with a framework, the control is inverted: the <em>framework</em> calls you. (This is called the Hollywood Principle: Don't call Us, We'll call You.) This is pretty much the definition of a framework. If it doesn't have Inversion of Control, it's not a framework. (I'm looking at you, .NET!)</p>

<p>Basically, all the control flow is already in the framework, and there's just a bunch of predefined white spots that you can fill out with your code.</p>

<p>A library on the other hand is a collection of functionality that <em>you</em> can call.</p>

<p>I don't know if the term toolkit is really well defined. Just the word ""kit"" seems to suggest some kind of modularity, i.e. a set of independent libraries that you can pick and choose from. What, then, makes a toolkit different from just a bunch of independent libraries? Integration: if you just have a bunch of independent libraries, there is no guarantee that they will work well together, whereas the libraries in a toolkit have been designed to work well together &ndash; you just don't have to use <em>all</em> of them.</p>

<p>But that's really just my interpretation of the term. Unlike library and framework, which <em>are</em> well-defined, I don't think that there <em>is</em> a widely accepted definition of <em>toolkit</em>.</p>
"
"<p>After executing this code:</p>

<pre><code>    var runtime = IronRuby.Ruby.CreateRuntime();
    var engine = IronRuby.Ruby.CreateEngine();
    var scrope = engine.CreateScope();
    engine.ExecuteFile(""libtest.rb"");
</code></pre>

<p>How can I get all the methods of a ruby class in c# code?</p>
","2988","","<p>I haven't figured everything out yet, but here's a start:</p>

<pre><code>using System;
using IronRuby;
using Microsoft.Scripting.Hosting;

class IronRubyReflection
{
    static void Main(string[] args)
    {
        var engine = Ruby.CreateEngine();
        var scope = engine.ExecuteFile(""libtest.rb"");
        dynamic globals = engine.Runtime.Globals;

        var klass = globals.Klass;
        var klass_s = klass.GetOrCreateSingletonClass();
        var modul = globals.Modul;
        var modul_s = modul.GetOrCreateSingletonClass();

        Console.WriteLine(
            scope.GetVariable&lt;IronRuby.Builtins.RubyMethod&gt;(
                ""method_in_the_global_object"").Name);

        Action&lt;string, IronRuby.Builtins.RubyModule,
            IronRuby.Runtime.Calls.RubyMemberInfo&gt; classprinter =
                (n, k, i) =&gt; { Console.WriteLine(n, k, i); };

        klass.ForEachMember(false,
            IronRuby.Runtime.RubyMethodAttributes.Default, classprinter);
        klass_s.ForEachMember(false,
            IronRuby.Runtime.RubyMethodAttributes.Default, classprinter);
        modul.ForEachMember(false,
            IronRuby.Runtime.RubyMethodAttributes.Default, classprinter);
        modul_s.ForEachMember(false,
            IronRuby.Runtime.RubyMethodAttributes.Default, classprinter);

        Console.ReadLine();
    }
}
</code></pre>

<p>Forgive my style, I don't actually know C#.</p>

<p>This is my <code>libtest.rb</code>:</p>

<pre><code>def method_in_the_global_object; end

class Klass
  def instance_method_in_class; end
  def self.class_method; end
end

class Modul
  def instance_method_in_module; end
  def self.module_method; end
end

local = Object.new
def local.singleton_meth; end

@instance = Object.new
def @instance.singleton_meth; end

$global = Object.new
def $global.singleton_meth; end
</code></pre>

<p>And this is the output:<pre>method_in_the_global_object
instance_method_in_class
class_method
Equals
ReferenceEquals
allocate
clr_constructor
clr_ctor
clr_new
new
superclass
instance_method_in_module
module_method
Equals
ReferenceEquals
allocate
clr_constructor
clr_ctor
clr_new
new
superclass</pre></p>
"
"<p>Given any object in Ruby (on Rails), how can I write a method so that it will display that object's instance variable names and its values, like this:</p>

<pre><code>@x: 1
@y: 2
@link_to_point: #&lt;Point:0x10031b298 @y=20, @x=38&gt;
</code></pre>

<p>(<strong>Update:</strong> <code>inspect</code> will do except for large object it is difficult to break down the variables from the 200 lines of output, like in Rails, when you <code>request.inspect</code> or <code>self.inspect</code> in the ActionView object)</p>

<p>I also want to be able to print <code>&lt;br&gt;</code> to the end of each instance variable's value so as to print them out nicely on a webpage.</p>

<p>the difficulty now seems to be that not every instance variable has an accessor, so it can't be called with  obj.send(var_name)  </p>

<p>(the var_name has the ""@"" removed, so ""@x"" becomes ""x"")</p>

<p><strong>Update:</strong> I suppose using recursion, it can print out a more advanced version:</p>

<pre><code>#&lt;Point:0x10031b462&gt;
    @x: 1
    @y: 2
    @link_to_point: #&lt;Point:0x10031b298&gt;
        @x=38
        @y=20
</code></pre>
","2988","","<p>This is a quick adaptation of a simple <a href=""http://stackoverflow.com/questions/3015972/my-ruby-code-how-can-i-improve-java-to-ruby-guy/3016617#3016617"">JSON emitter I wrote for another question</a>:</p>

<pre><code>class Object
  def inspect!(indent=0)
    return inspect if instance_variables.empty?
    ""#&lt;#{self.class}:0x#{object_id.to_s(16)}\n#{'  ' * indent+=1}#{
      instance_variables.map {|var|
        ""#{var}: #{instance_variable_get(var).inspect!(indent)}""
      }.join(""\n#{'  ' * indent}"")
    }\n#{'  ' * indent-=1}&gt;""
  end
end

class Array
  def inspect!(indent=0)
    return '[]' if empty?
    ""[\n#{'  ' * indent+=1}#{
      map {|el| el.inspect!(indent) }.join("",\n#{'  ' * indent}"")
    }\n#{'  ' * indent-=1}]""
  end
end

class Hash
  def inspect!(indent=0)
    return '{}' if empty?
    ""{\n#{'  ' * indent+=1}#{
      map {|k, v|
        ""#{k.inspect!(indent)} =&gt; #{v.inspect!(indent)}""
      }.join("",\n#{'  ' * indent}"")
    }\n#{'  ' * indent-=1}}""
  end
end
</code></pre>

<p>That's all the magic, really. Now we only need some simple defaults for some types where a full-on inspect doesn't really make sense (<code>nil</code>, <code>false</code>, <code>true</code>, numbers, etc.):</p>

<pre><code>module InspectBang
  def inspect!(indent=0)
    inspect
  end
end

[Numeric, Symbol, NilClass, TrueClass, FalseClass, String].each do |klass|
  klass.send :include, InspectBang
end
</code></pre>
"
"<p>Here is what I have - a git repo of my code:</p>

<pre><code>projects
       |-proj1 (no git repo here yet)
             |-subproj1 &lt;- current git repo here
</code></pre>

<p>Here is what I want - a git repo which is now tracking a new project that uses my code:</p>

<pre><code>projects
       |-proj1 &lt;-git repo moved to here, but still tracking files in subproj1
             |-subproj1 (no git repo here)
</code></pre>

<p>I'd like to keep the history intact and therefore the new repository will be referring to files that are one level deeper than the original. What is the most pain free way to do this? </p>
","2988","","<p>Rewriting history can be done with the <code>git filter-branch</code> command. In fact, moving a directory tree into a subdirectory is one of the cut&amp;paste-ready examples given in the <a href=""http://Kernel.Org/pub/software/scm/git/docs/git-filter-branch.html""><code>git filter-branch</code></a> manpage:</p>

<pre><code>git filter-branch --index-filter '
  git ls-files -s |
  sed ""s-\t\""*-&amp;subproj1/-"" |
  GIT_INDEX_FILE=$GIT_INDEX_FILE.new git update-index --index-info &amp;&amp;
  mv $GIT_INDEX_FILE.new $GIT_INDEX_FILE
' HEAD
</code></pre>
"
"<p>I have an understanding of windows COM and the ideas behind it.  I am trying to understand if *nix systems even have an equivalent or why they don't?</p>
","2988","","<p>The closest would probably be <a href=""http://DBus.FreeDesktop.Org/"">D-Bus</a>. D-Bus is a lightweight IPC protocol and Object Request Broker (ORB) very similar to COM and heavily inspired by both COM and D-Bus's predecessors <a href=""http://Developer.KDE.Org/documentation/other/dcop.html"">DCOP</a> (KDE) and <a href=""http://Library.GNOME.Org/devel/platform-overview/stable/bonobo-corba"">CORBA</a> (GNOME) as well as <a href=""http://IETF.Org/rfc/rfc3549"">Netlink</a> (Linux Kernel).</p>

<p>Before D-Bus, both major Unix desktop environments had their own component models and desktop busses. GNOME had Bonobo which was based on CORBA and KDE had KParts which was based on DCOP. And the Linux Kernel has Netlink which is a communication protocol between kernel and userspace which is used for example by the <code>iproute2</code> tool whenever you configure a networking interface.</p>

<p>The kernel developers constantly got requests to release Netlink as a separate part for communication between userspace programs, however they feared that this would lead to feature bloat and maintenance problems. In the end, under the umbrella of the Free Desktop organization whose goal it is to create cros-desktop standards, both the KDE and GNOME developers got together to develop an IPC messaging system based on the best parts of DCOP and Netlink, and the result was D-Bus.</p>

<p>In current versions of both GNOME and KDE, D-Bus has completely replaced CORBA and DCOP, thus making it possible to run GNOME applications in KDE and vice-versa with much higher fidelity. D-Bus has also been picked up by many other desktop environments and applications, not only on Linux but other Unix systems, as well as OSX and even Windows.</p>

<p>An alternative that should at least be mentioned is Mozilla's <a href=""https://Developer.Mozilla.Org/en/XPCOM/"">XPCOM</a>, which is a cross-platform object model heavily inspired by CORBA and COM. (In fact, XPCOM is an acronym for Cross-Platform Component Object Model.) It uses an IDL very similar to CORBA called XPIDL. However, as far as I know, nobody actually uses XPCOM, it is recognized both by critics as well as developers of Firefox and other Mozilla applications as one major source of bloat, and the Mozila developers are in fact actively working on reducing the usage of XPCOM especially <em>inside</em> components like Gecko.</p>

<p>However, as @Daniel Pryden points out, there's a lot of stuff <em>already</em> in Unix that should be preferred over D-Bus in cases where tight integration with a desktop is not needed. I am talking about stuff like pipes, named pipes and sockets.</p>
"
"<p>how many braches can i create using if statement?? is it limited??</p>
","2988","","<p>An <code>IF</code> statement <em>always</em> has exactly two branches: one where the condition is <code>FALSE</code> and one where the condition is <code>TRUE</code>. A branching construct that has more than two branches is usually called <code>CASE</code> or <code>SWITCH</code>. In Pascal, it's <code>CASE</code>.</p>
"
"<p>There's a common LDAP attribute called userCertificate;binary.  It actually has a semi-colon in the attribute name.  In ruby, I turn an LDAP entry into a OpenStruct object called 'struct'.</p>

<pre>
>> struct.class
=> OpenStruct
</pre>

<p>But of course ruby thinks it's an end-of-line character.</p>

<pre>
?> struct.userCertificate;binary
NameError: undefined local variable or method `binary' for main:Object
        from (irb):52
        from :0
</pre>

<p>IRB knows that the local variable is there, because it gives me <code>struct.userCertificate;binary</code> from the tab auto-completion.  I can also see the class variable when calling struct.methods on it.</p>

<pre>
>> struct.methods
=> ... ""send"", ""methods"", ""userCertificate;binary="", ""hash"", ...
</pre>

<p>It's definitely there, I can see the contents if I print the whole variable to_s().  But how can I access the local variable when it has a semicolon in it?  I have workarounds for this but I thought it was an interesting problem to post.</p>
","2988","","<p>I'm a little bit confused. You are asking about how to access a local variable, but your code examples are about methods?</p>

<p>If it's a local variable, then I don't know any way to access it. However, if it is anything <em>but</em> a local variable, then you can use the appropriate reflection method to get access to it: <code>Module#const_get</code> for constants, <code>Object#instance_variable_get</code> for instance variables, <code>Object#send</code> for methods and so on.</p>
"
"<p>I'm trying to get some speed up in my program and I've been told that Ruby Fibers are faster than threads and can take advantage of multiple cores. I've looked around, but I just can't find how to actually run different fibers concurrently. With threads you can do this:</p>

<pre><code>threads = []

threads &lt;&lt; Thread.new {Do something}
threads &lt;&lt; Thread.new {Do something}

threads.each {|thread| thread.join}
</code></pre>

<p>I can't see how to do something like this with fibers. All I can find is <code>yield</code> and <code>resume</code> which seems like just a bunch of starting and stopping between the fibers. Is there a way to do true concurrency with fibers?</p>
","2988","","<p>No, you cannot do concurrency with <code>Fiber</code>s. <code>Fiber</code>s simply aren't a concurrency construct, they are a control-flow construct, like <code>Exception</code>s. That's the <em>whole point</em> of <code>Fiber</code>s: they <em>never</em> run in parallel, they are cooperative and they are deterministic. <code>Fiber</code>s are coroutines. (In fact, I never understood why they aren't simply called <code>Coroutine</code>s.)</p>

<p>The only concurrency construct in Ruby is <code>Thread</code>.</p>
"
"<p>Say I have a pool of enumerables that I want to group by an attribute:</p>

<pre><code>cars = Car.all.group_by(&amp;:color)
</code></pre>

<p>Then I want to iterate over those <code>cars</code> like so:</p>

<pre><code>cars.inject([]) do |stack, (color, cars)|
  stack &lt;&lt; cars.each do |car|
   ...
  end
end
</code></pre>

<p>What is the term for the block variable extension (between the parentheses)?</p>
","2988","","<p>I call it <em>destructuring bind</em> or <em>destructuring assignment</em>, that's what it's usually called in other programming languages. In Ruby, it's often called <em>multiple assignment</em> or <em>parallel assignment</em>. If you want to know what it's ""officially"" called, you could look it up in the <a href=""http://Ruby-Std.Netlab.Jp/"" rel=""nofollow"">Draft ISO Specification</a>.</p>
"
"<p>Can you name languages with static type checking (like Java) and where code is data (like in LISP)?  I mean both things in one language.</p>
","2988","","<p>Qi is a statically-typed Lisp dialect. Also, many other Lisp dialects have (optional) static typing.</p>

<p>Java itself has very limited capabilities of this kind.</p>

<p>The interesting question is not so much whether you can have metaprogramming and static typing, it's whether you can have <em>dynamic</em> metaprogramming be statically <em>type-safe</em>.</p>

<p>There is Template Haskell which <em>does</em> metaprogramming and <em>is</em> type-safe, but it is <em>static</em> metaprogramming.</p>

<p>At the moment I can not think of any language that I know for a fact allows dynamic metaprogramming <em>and</em> where dynamic metaprogramming is statically type-safe. Qi might be bale to do it, but I'm not sure.</p>
"
"<p>At about the 19:00 mark in <a href=""http://www.youtube.com/watch?v=b0iKYRKtAsA#t=19m0s"">his RailsConf presentation</a>, David Heinemeier Hansson talks about the downsides of <code>instance_eval</code>:</p>

<blockquote>
  <p>For a long time I ranted and raved
  against <code>instance_eval</code>, which is the
  concept of not using a yielded
  parameter (like <code>do |people|</code>) and
  just straight <code>do something</code> and then
  evaluate what's in that block within
  the scope of where you came from (I
  don't even know if that's a coherent
  explanation)</p>
  
  <p>For a long time I didn't like that
  because it felt more complex in some
  sense. If you wanted to put your own
  code in there were you going to
  trigger something that was already
  there? Were you going to override
  something? When you're yielding a
  specific variable you can chain
  everything off that and you can know
  [you're] not messing with anybody
  else's stuff</p>
</blockquote>

<p>This sounded interesting, but a) I don't know how how <code>instance_eval</code> works in the first place and b) I don't understand why it can be bad / increase complexity.</p>

<p>Can someone explain?</p>
","2988","","<p>The thing that <code>instance_eval</code> does is that it runs the block in the context of a different instance. In other words, it changes the meaning of <code>self</code> which means it changes the meaning of instance methods and instance variables.</p>

<p>This creates a cognitive disconnect: the context in which the block runs is not the context in which it appears on the screen.</p>

<p>Let me demonstrate that with a slight variation of @Matt Briggs's example. Let's say we're not building a form, we're building an e-mail:</p>

<pre><code>mail do |f|
  f.subject @subject
  f.name    name
end
</code></pre>

<p>In this case, <code>@subject</code> is an instance variable of <em>your</em> object and <code>name</code> is a method of <em>your</em> class. You can use nice object-oriented decomposition and store your subject in a variable.</p>

<pre><code>mail do 
  subject @subject
  name    name # Huh?!?
end
</code></pre>

<p>In <em>this</em> case, <code>@subject</code> is an instance variable of the <em>mail builder</em> object! It might not even <em>exist</em>! (Or even worse, it <em>might</em> exist and contain some completely stupid value.) There is <em>no way</em> for you to get access to <em>your</em> object's instance variables. And how do you even <em>call</em> the <code>name</code> method of your object? Everytime you try to call it, you get the <em>mail builder's</em> method.</p>

<p>Basically, <code>instance_eval</code> makes it hard to use your own code inside the DSL code. So, it should really only be used in cases where there is very little chance that this might be needed.</p>
"
"<p>Danny initially asked this question in response to a recent Scott Hanselman post:</p>

<blockquote>
  <p>Who can tell me what's this :
  Func&lt;Customer, bool=""""> A optional
  parameter with default value? A empty
  string for a bool? I replace it with
  Func, and get the
  different result in my machine!
  Everything works well, I get ""where""
  statement without using Expression!</p>
</blockquote>

<p>I know I've seen this Func madness, too, but I can't seem to get a Func&lt;> or an Expression&lt;Func&lt;>> of this type to compile in C# 4.0.</p>

<p>Out of curiosity, what does the equals sign in the Func mean, if anything, and has that functionality been deprecated in C# 4.0?</p>

<p>[This question comes from Scott Hanselman&rsquo;s blog: &ldquo;<a href=""http://www.hanselman.com/blog/TheWeeklySourceCode52YouKeepUsingThatLINQIDunnaThinkItMeansWhatYouThinkItMeans.aspx?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+ScottHanselman+%28Scott+Hanselman+-+ComputerZen.com%29"" rel=""nofollow"">The Weekly Source Code 52 - You keep using that LINQ, I dunna think it means what you think it means.</a>&rdquo;]</p>
","2988","","<p>According to the Visual C# 4.0 Language Specification, the ISO C# Language Specification (which is a subset of Visual C# 2.0), the Visual Studio 2010 Syntax Highlighter and the Visual C# 4.0 Compiler, this is not legal C# code. It isn't even <em>syntactically</em> legal, i.e. it doesn't even <em>parse</em>, let alone <em>semantically</em> legal.</p>

<p>Therefore, it simply doesn't mean anything.</p>
"
"<p>I'm getting some string data from the web, and I suspect that it's not always what it says it is. I don't know where the problem is, and I just don't care anymore. From day one on this project I've been fighting Ruby string encoding. I really want some way to say: ""Here's a string. What the hell is it?"", and then use that data to get it to UTF-8 so that it doesn't explode gsub() 2,000 lines down in the depths of my app. I've checked out rchardet, but even though it supposedly works for 1.9 now, it just blows up given any input with multiple bytes... which is not helpful.</p>
","2988","","<p>It is impossible to tell from a string what encoding it is in. You always need some additional metadata that tells you what the string's encoding is.</p>

<p>If you get the string from the web, that metadata is in the HTTP headers. If the HTTP headers are wrong, there is absolutely nothing that you or Ruby or anyone else can do. You need to file a bug with the webmaster of the site where you got the string from and wait till he fixes it. If you have a Service Level Agreement with the website, file a bug, wait a week, then sue them.</p>
"
"<p>I have been reading documentation describing class inheritance, abstract base classes and even python interfaces. But nothing seams to be exactly what I want. Namely, a simple way of building virtual classes. When the virtual class gets called, I would like it to instantiate some more specific class based on what the parameters it is given and hand that back the calling function. For now I have a summary way of rerouting calls to the virtual class down to the underlying class.</p>

<p>The idea is the following:</p>

<pre><code>class Shape:
    def __init__(self, description):
        if   description == ""It's flat"":  self.underlying_class = Line(description)
        elif description == ""It's spiky"": self.underlying_class = Triangle(description)
        elif description == ""It's big"":   self.underlying_class = Rectangle(description)
    def number_of_edges(self, parameters):
        return self.underlying_class(parameters)

class Line:
    def __init__(self, description):
        self.desc = description
    def number_of_edges(self, parameters):
        return 1

class Triangle:
    def __init__(self, description):
        self.desc = description
    def number_of_edges(self, parameters):
        return 3

class Rectangle:
    def __init__(self, description):
        self.desc = description
    def number_of_edges(self, parameters):
        return 4

shape_dont_know_what_it_is = Shape(""It's big"")
shape_dont_know_what_it_is.number_of_edges(parameters)
</code></pre>

<p>My rerouting is far from optimal, as only calls to the number_of_edges() function get passed on. Adding something like this to Shape doesn't seam to do the trick either:</p>

<pre><code>def __getattr__(self, *args):
    return underlying_class.__getattr__(*args)
</code></pre>

<p>What I am doing wrong ? Is the whole idea badly implemented ? Any help greatly appreciated.</p>
","2988","","<p>Python doesn't have virtual classes out of the box. You will have to implement them yourself (it should be possible, Python's reflection capabilities should be powerful enough to let you do this).</p>

<p>However, if you need virtual classes, then why don't you just use a programming language which does have virtual classes like Beta, gBeta or Newspeak? (BTW: are there any others?)</p>

<p>In this particular case, though, I don't really see how virtual classes would simplify your solution, at least not in the example you have given. Maybe you could elaborate why you think you need virtual classes?</p>

<p>Don't get me wrong: I like virtual classes, but the fact that only three languages have ever implemented them, only one of those three is still alive and exactly 0 of those three are actually used by anybody is somewhat telling &hellip;</p>
"
"<p>is there already any IDE / tools that if you highlight a function name, it will open the file where that function is defined on the next window so we could understaand what that function does?</p>

<p>you know just wondering.</p>
","2988","","<p>Are there any IDEs that <em>don't</em> do this? Every IDE I have ever used had this feature: several Smalltalk IDEs, Hopscotch, several Lisp IDEs, NetBeans, Eclipse, Visual Studio, VisualAge for Java Micro Edition, VisualAge for Java, VisualAge for Smalltalk. Even many text editors can do it: TextMate, Vim, Emacs, Notepad++.</p>
"
"<p>I have plenty of RAM on my development machine.</p>

<p>Can I move my Rails' application sources to the <code>tmpfs</code> partition in order to gain performance boost because of in-memory storage which is order of magnitude faster than HDD?</p>

<p>I understand that tmpfs is temporary storage by its nature BUT can I use it for this task if I'll write some script to move sources from HDD partition to tmpfs and backup it back to HDD before reboot?</p>

<p>Is it sane?</p>
","2988","","<p>You <em>can</em> use it this way, but it doesn't make much sense:</p>

<p>If you have enough RAM, then the files will be in the filesystem cache (i.e. in RAM) anyway. So, you don't win anything by using tmpfs, but you also don't lose anything.</p>

<p>If you <em>don't</em> have enough RAM, the tmpfs will be flushed out to swap. Now, your Rails sources eat up precious swap space despite the fact there is <em>already</em> a copy on disk in the filesystem. So, you lose swap space and you don't win anything on performance (whether the files are read back in from swap or the filesystem is equally expensive).</p>

<p>If you don't want to take that first time hit until all the files are in the cache, you could put something like this in your development environment startup scripts:</p>

<pre><code>find /usr/lib/ruby/gems/1.9.1/{rails,action,active}* -exec cat '{}' + &gt; /dev/null
</code></pre>

<p>Which will read all the Rails files and echo them into <code>/dev/null</code> and as a side effect pull them into the cache. (Do this while getting your coding coffee.)</p>
"
"<p>I've played around with IronRuby lately, but I would like to install the reference implementation also. Needless to say, I'm a noob when it comes to Ruby, so I have a very stupid question.</p>

<p>On the <a href=""http://rubyforge.org/frs/?group_id=167&amp;release_id=43805"" rel=""nofollow"">RubyForge download page</a>, there are three different <strong>final</strong> versions of the Ruby installer (for Windows):</p>

<ul>
<li>rubyinstaller-1.8.6-p398.exe</li>
<li>rubyinstaller-1.8.7-p249.exe</li>
<li>rubyinstaller-1.9.1-p378.exe</li>
</ul>

<p>I don't understand how there can be three different final releases. I can understand that there is one 1.8 release, and one 1.9 release, but why can I choose between 1.8.6 and 1.8.7?</p>

<p>What I really would like to know is what version is the ""best one"" ? If the answer is ""1.9.1"", why would one choose 1.8.6 or 1.8.7 ?</p>

<p>I'm confused...</p>
","2988","","<blockquote>
  <p>I don't understand how there can be three different final releases.</p>
</blockquote>

<p>There aren't three different final releases, there is only one: ""final"" in this case means the version of the <em>installer</em>, not the <em>interpreter</em>. There is only one installer for all three versions of both interpreters.</p>

<blockquote>
  <p>I can understand that there is one 1.8 release, and one 1.9 release, but why can I choose between 1.8.6 and 1.8.7?</p>
</blockquote>

<p>In Ruby, a change in minor number indicates significant backwards-incompatibility and/or major new language features. The 1.8&rarr;1.9 transition has both incompatibilities and new features. While Ruby 1.9 is the current version, there is still a lot of code out there, that hasn't been updated to Ruby 1.9 yet. Also, a lot of operating systems don't yet ship Ruby 1.9 as default, and some don't ship Ruby 1.9 at all.</p>

<p>That's why there is both 1.9 and 1.8.</p>

<p>Why two versions of 1.8? Well, 1.8.7 is this strange netherversion. 1.8.7 got a massive backport of features from 1.9 in order to ease the transition. However, for a long time, 1.8.7 didn't get a lot of acceptance and 1.8.6 is still the recommended version by the Rails team. (This will change with Rails 3 which requires 1.8.7 or the not yet released 1.9.2.)</p>

<p>Ruby 1.8.6 is still the default (and in fact only) version on a lot of the more slowly moving Linux distributions which offer 3-year or 5-years support contracts. Ruby 1.8.6 was also the latest version of the OneClick Installer which was the predecessor of the RubyInstaller. If the RubyInstaller is to be a replacement for the OneClick Installer, it has to offer the same version. And last but not least, there is simply a <em>ton</em> of code out there that was tested and validated on 1.8.6.</p>

<p>Also, Ruby 1.8.6 was the version implemented by JRuby 1.0, 1.1, 1.2, 1.3 and 1.4. Only the recently released JRuby 1.5 upgraded to 1.8.7. JRuby 1.6 will implement both 1.8.7 and 1.9.2. Also, IronRuby 1.0 implements Ruby 1.8.6.</p>

<p>In other words: the RubyInstaller for MRI 1.8.6 is still there for the same reason that Microsoft still supports Windows XP, after having tried to kill it off twice: there's people using it who would get really upset if they didn't.</p>

<blockquote>
  <p>What I really would like to know is what version is the ""best one"" ? If the answer is ""1.9.1"", why would one choose 1.8.6 or 1.8.7 ?</p>
</blockquote>

<p>Personally, I think the ""best one"" is Ruby 1.9.<strong>2</strong>, which hasn't been released yet.</p>

<p>Here's my personal breakdown:</p>

<ul>
<li>if you are just starting with Ruby and play around with it, 1.9.2 is the best version: Ruby 1.9 is the latest version of the language and 1.9.2 is considered to be the feature-complete version of the 1.9 branch; it fixes some oversights and annoyances in 1.9.1 and adds some nice features. Also, most Ruby implementations do not implement 1.9.1, IronRuby will go straight from 1.8.6 to 1.9.2, JRuby will implement both 1.8.7 and 1.9.2 and Rubinius will also go to 1.9.2.</li>
<li>if you actually want to deploy and/or distribute Ruby applications, 1.9.1 and 1.8.7 are the best versions, simply because 1.9.2 hasn't been officially released yet: use 1.9.1 if you can get away with it (i.e. if the third-party libraries you depend on support it), otherwise 1.8.7.</li>
<li>if you have a large legacy codebase, use 1.8.6. (Actually, if you have large legacy codebase, update it to 1.9.2 &hellip;)</li>
</ul>

<p>Note that you have to be very careful to distinguish between the version of the <em>language</em>, the <em>implementation</em>, the version of the implementation and the version of the <em>installer</em>.</p>

<p>For example, the first in your list is version 1.8.6 of the <em>language</em>, the MRI interpreter, version 1.8.6-p398 of MRI and version ""Final"" of the installer. The third in you list is version 1.9.1 of the language, the <em>YARV</em> compiler/VM (i.e. a <em>different</em> implementation from the other two), version 1.9.1-p378 of YARV and also version ""Final"" of the installer.</p>

<p>Version 1.0 of IronRuby implements version 1.8.6 of Ruby, Version 1.5 of JRuby implements both version 1.8.7 and (a subset of) 1.9.2 of Ruby, selectable by a commandline switch.</p>
"
"<p>Let's say I have an arbitrarily deep nested Hash <code>h</code>:</p>

<pre><code>h = {
  :foo =&gt; { :bar =&gt; 1 },
  :baz =&gt; 10,
  :quux =&gt; { :swozz =&gt; {:muux =&gt; 1000}, :grimel =&gt; 200 }
  # ...
}
</code></pre>

<p>And let's say I have a class <code>C</code> defined as:</p>

<pre><code>class C
  attr_accessor :dict
end
</code></pre>

<p>How do I replace all nested values in <code>h</code> so that they are now <code>C</code> instances with the <code>dict</code> attribute set to that value? For instance, in the above example, I'd expect to have something like:</p>

<pre><code>h = {
  :foo =&gt; &lt;C @dict={:bar =&gt; 1}&gt;,
  :baz =&gt; 10,
  :quux =&gt; &lt;C @dict={:swozz =&gt; &lt;C @dict={:muux =&gt; 1000}&gt;, :grimel =&gt; 200}&gt;
  # ...
}
</code></pre>

<p>where <code>&lt;C @dict = ...&gt;</code> represents a <code>C</code> instance with <code>@dict = ...</code>. (Note that as soon as you reach a value which isn't nested, you stop wrapping it in <code>C</code> instances.)</p>
","2988","","<pre><code>class C
  attr_accessor :dict

  def initialize(dict)
    self.dict = dict
  end
end

class Object
  def convert_to_dict
    C.new(self)
  end
end

class Hash
  def convert_to_dict
    Hash[map {|k, v| [k, v.convert_to_dict] }]
  end
end

p h.convert_to_dict
# =&gt; {
# =&gt;   :foo =&gt; {
# =&gt;     :bar =&gt; #&lt;C:0x13adc18 @dict=1&gt;
# =&gt;   },
# =&gt;   :baz =&gt; #&lt;C:0x13adba0 @dict=10&gt;,
# =&gt;   :quux =&gt; {
# =&gt;     :swozz =&gt; {
# =&gt;       :muux =&gt; #&lt;C:0x13adac8 @dict=1000&gt;
# =&gt;     },
# =&gt;     :grimel =&gt; #&lt;C:0x13ada50 @dict=200&gt;
# =&gt;   }
# =&gt; }
</code></pre>
"
"<p>What is the oldest version of rubygems that still allows you to download gems from rubygems.org?</p>
","2988","","<p>When the transition from <a href=""http://Gems.RubyForge.Org/"" rel=""nofollow"">http://Gems.RubyForge.Org/</a> to <a href=""http://RubyGems.Org/"" rel=""nofollow"">http://RubyGems.Org/</a> was made, all backwards-compatibility features that were removed had already been replaced before RubyGems 1.0. So, you should be fine <em>at least</em> as far back as 1.0, possibly even further.</p>

<p>I'm not 100% sure, though. But I think that all that was removed was the YAML index format and bulk updating, both of which have been obsolete for years.</p>
"
"<p>Hey ,Guys ,I have a question. I want to transform the array.<code>[[1, [-1, 1]], [1, [20, 8]], [1, [30, 4]], [1, [40, 2]], [1, [41, 6]], [1, [70, 243]]]</code>  into this style <code>[1,[[-1,1],[20,8],[30,4]...]</code> or a hash [1=>...]
How can i do this trick? thank you !</p>
","2988","","<p>If you want it as a <code>Hash</code>, it's simply</p>

<pre><code>h = Hash[ary.group_by(&amp;:first).map {|k, v| [k, v.map(&amp;:last)] }]
</code></pre>

<p>And if you want it as an <code>Array</code>, you just convert the <code>Hash</code> to an <code>Array</code>:</p>

<pre><code>a = *h
</code></pre>
"
"<p>HI</p>

<p>whats the difference between these two ruby if statements when we put a <code>then</code> at the end of the <code>if</code> statement?</p>

<pre><code>if(val == ""hi"") then
  something.meth(""hello"")
else
  something.meth(""right"")
end
</code></pre>

<p>and </p>

<pre><code>if(val == ""hi"")
  something.meth(""hello"")
else
  something.meth(""right"")
end
</code></pre>

<p>thank you</p>
","2988","","<p>Here's a quick tip that is not directly related to your question: in Ruby, there is no such thing as an <code>if</code> statement. In fact, in Ruby, there are no statements <em>at all</em>. <em>Everything</em> is an expression. An <code>if</code> expression returns the value of the last expression that was evaluated in the branch that was taken.</p>

<p>So, there is no need to write</p>

<pre><code>if condition
  foo(something)
else
  foo(something_else)
end
</code></pre>

<p>This would better be written as</p>

<pre><code>foo(
  if condition
    something
  else
    something_else
  end
)
</code></pre>

<p>Or as a one-liner</p>

<pre><code>foo(if condition then something else something_else end)
</code></pre>

<p>In your example:</p>

<pre><code>something.meth(if val == 'hi' then 'hello' else 'right' end)
</code></pre>

<p>Note: Ruby also has a ternary operator (<code>condition ? then_branch : else_branch</code>) but that is completely unnecessary and should be avoided. The only reason why the ternary operator is needed in languages like C is because in C <code>if</code> is a statement and thus cannot return a value. You need the ternary operator, because it is an expression and is the only way to return a value from a conditional. But in Ruby, <code>if</code> is already an expression, so there is really no need for a ternary operator.</p>
"
"<p>I never used ruby before, I just wanted to play around with HAML and SASS. I downloaded and installed <a href=""http://rubyforge.org/frs/download.php/71078/rubyinstaller-1.9.1-p378.exe"" rel=""nofollow"">Ruby's Windows installer</a> (v1.9.1). Then, I clicked <code>ruby.exe</code> (the icon with a black window and a multicolored gem in the picture). Finally, I typed <code>gem install haml</code> and pressed <code>Enter</code>. But nothing happened. Am I doing something wrong?</p>

<p><strong>Reference picture:</strong></p>

<p><img src=""http://img707.imageshack.us/img707/9863/haml.png"" alt=""alt text""></p>
","2988","","<p><code>ruby.exe</code> is the Ruby interpreter. If you want to type code into it, you obviously need to type <em>Ruby</em> code into it, not DOS command code.</p>

<p>The <code>gem</code> command is a DOS batch file (<code>gem.bat</code>). DOS batch files need to be run from the DOS command interpreter.</p>
"
"<p>In python after imports, one can see the file, that has been loaded/where the module comes from.</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.__file__
'/Users/tm/lib/python2.6/os.pyc'
</code></pre>

<p>What would be the equivalent in ruby?</p>

<pre><code>&gt;&gt; require 'xmlrpc/client'
=&gt; true
&gt;&gt; ...
</code></pre>
","2988","","<p>There's nothing exactly equivalent.</p>

<p>All files that have been <code>required</code> are listed in <code>$LOADED_FEATURES</code> in the order they were <code>require</code>d. So, if you want to know where a file came from directly after it was <code>require</code>d, you simply need to look at the end:</p>

<pre><code>$LOADED_FEATURES.last if require 'yaml'
# =&gt; 'C:/Program Files/Ruby/lib/ruby/1.9.1/yaml.rb'
</code></pre>

<p>However, unless you record every call to <code>require</code> it's going to be hard to figure out which entry corresponds to which call. Also, if a file is already in <code>$LOADED_FEATURES</code>, it will not get loaded again:</p>

<pre><code>require 'yaml'
# =&gt; true
# true means: the file was loaded

$LOADED_FEATURES.last
# =&gt; 'C:/Program Files/Ruby/lib/ruby/1.9.1/yaml.rb'

require 'json'
$LOADED_FEATURES.last
# =&gt; 'C:/Program Files/Ruby/lib/ruby/1.9.1/json.rb'

require 'yaml'
# =&gt; false
# false means: the file wasn't loaded again, because it has already been loaded

$LOADED_FEATURES.last
# =&gt; 'C:/Program Files/Ruby/lib/ruby/1.9.1/json.rb'
# Last loaded feature is still JSON, because YAML wasn't actually loaded twice
</code></pre>

<p>Also, many libraries aren't contained in a single file. So, the <code>require</code>d files might themselves contain calls to <code>require</code>. In my case, for example, <code>require 'yaml'</code> not only loads <code>yaml.rb</code> but a whole bunch of files (15 to be exact):</p>

<ol>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/i386-mingw32/stringio.so</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/i386-mingw32/syck.so</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/error.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/basenode.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/syck.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/tag.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/stream.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/constants.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/date/format.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/date.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/rubytypes.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck/types.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/yaml/syck.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/syck.rb</code></li>
<li><code>C:/Program Files/Ruby/lib/ruby/1.9.1/yaml.rb</code></li>
</ol>
"
"<p>I was reading how Clojure is 'cool' because of its syntax + it runs on the JVM so it is multithreaded etc. etc.</p>

<p>Are languages like ruby and python single threaded in nature then? (when running as a web app).</p>

<p>What are the underlying differences between python/ruby and say java running on tomcat?</p>

<p>Doesn't the web server have a pool of threads to work with in all cases?</p>
","2988","","<p>Both Python and Ruby have full support for multi-threading. There are some implementations (e.g. CPython, MRI, YARV) which cannot actually run threads in parallel, but that's a limitation of those specific implementations, not the language. This is similar to Java, where there are also some implementations which cannot run threads in parallel, but that doesn't mean that Java is single-threaded.</p>

<p>Note that in both cases there are lots of implementations which <em>can</em> run threads in parallel: PyPy, IronPython, Jython, IronRuby and JRuby are only few of the examples.</p>

<p>The main difference between Clojure on the one side and Python, Ruby, Java, C#, C++, C, PHP and pretty much every other mainstream and not-so-mainstream language on the other side is that Clojure has a <em>sane</em> concurrency model. All the other languages use threads, which we have known to be a bad concurrency model for at least 40 years. Clojure OTOH has a sane update model which allows it to not only present one but actually multiple sane concurrency models to the programmer: atomic updates, software transactional memory, asynchronous agents, concurrency-aware thread-local global variables, futures, promises, dataflow concurrency and in the future possibly even more.</p>
"
"<p>How do I go from this:</p>

<pre><code>""01"",""35004"",""AL"",""ACMAR"",86.51557,33.584132,6055,0.001499 
</code></pre>

<p>to this:</p>

<pre><code>ACMAR, AL
</code></pre>
","2988","","<p>I'm not quite sure why you'd want to parse a CSV file with a <code>Regexp</code> instead of a CSV parser. It makes your life <em>so</em> much easier:</p>

<pre><code>require 'csv'

CSV.open('/path/to/output.csv', 'wt') do |csv|
  CSV.foreach('/path/to/output.csv') do |_, _, state, city|
    csv &lt;&lt; [state, city]
  end
end
</code></pre>
"
"<p>I want to eliminate ""="" sign for a particular reason. It might looks like this:</p>

<pre><code>cat_that_has_name(""Kelly"").as(:kelly)
kelly.do_something
</code></pre>

<p>The ""as"" method here is used to generate a method ""kelly"" that reference my cat. Could anyone help me with this? </p>

<p>Any suggestions will be appreciated.</p>

<p><strong>Update:</strong></p>

<p>Jorg was right, I've add a simple test to demonstrate my intention:</p>

<pre><code>require ""test/unit""

class AsTest &lt; Test::Unit::TestCase
  def setup
    @cats = [""Kelly"", ""Tommy""]
  end

  def teardown
  end

  def test_as
    kelly1 =  get_cat(""Kelly"")
    get_cat(""Kelly"").as(:kelly2)
    assert_equal(kelly1.object_id, kelly2.object_id)
  end

  private
  def get_cat(name)
    @cats.each do |cat|
      if cat.to_s==name
        return cat
      end
    end
    return nil
  end
end
</code></pre>
","2988","","<p>It's kind of hard to figure out what you actually want. If you want some sensible answers, you will have to provide a complete code example of what you want to achieve (for example, the code you posted is missing definitions for the <code>cat_that_has_name</code> and <code>so_something</code> methods). You will also need to post a complete specification of what exactly you expect the <code>as</code> method to do, with usage examples and ideally also with a testsuite. After all, how do we know if our answer is correct if you haven't defined what ""correct"" means?</p>

<p>The best I could decipher from your cryptic question is something like this:</p>

<pre><code>class Object
  def as(name)
    s = self
    Object.send(:define_method, name) { s }
    Object.send(:private, name)
  end
end
</code></pre>

<p>But there is no way of knowing whether this works, because if I try to run your code example, I get a <code>NoMethodError</code> for <code>cat_that_has_name</code> and another <code>NoMethodError</code> for <code>so_something</code>.</p>

<p>Note also that your question is self-inconsistent: in your subject line you ask about a method to replace <code>=</code> (i.e. creating variables) but in your question you talk about creating <em>methods</em>, which would mean that you are looking for a replacement for <code>def</code> and not for <code>=</code>. Again, it would be much easier to answer correctly if there were a testsuite.</p>
"
"<p>I was wondering if someone could help me to get this method converted to ruby, is this possible at all?</p>

<pre><code>public static string getSHA512(string str){
    UnicodeEncoding UE = new UnicodeEncoding();
    byte[] HashValue = null;
    byte[] MessageBytes = UE.GetBytes(str);
    System.Security.Cryptography.SHA512Managed SHhash = new System.Security.Cryptography.SHA512Managed();
    string strHex = """";
    HashValue = SHhash.ComputeHash(MessageBytes);
    foreach (byte b in HashValue){
        strHex += string.Format(""{0:x2}"", b);
    }
    return strHex;
}
</code></pre>

<p>Thanks in advance</p>

<hr>

<p>UPDATE:</p>

<p>I just would like to make it clear that unfortunately it's method is not just for SHA512 generation but a custom one. I believe that the Digest::SHA512.hexdigest would be just the SHHast instance, but if you carefully look for the method you can see that it differs a bit from a simple hash generation.
Follows the result of both functions.</p>

<pre><code># in C#
getSHA512(""hello"") =&gt; ""5165d592a6afe59f80d07436e35bd513b3055429916400a16c1adfa499c5a8ce03a370acdd4dc787d04350473bea71ea8345748578fc63ac91f8f95b6c140b93""

# in Ruby
Digest::SHA512.hexdigest(""hello"") || Digest::SHA2 =&gt; ""9b71d224bd62f3785d96d46ad3ea3d73319bfbc2890caadae2dff72519673ca72323c3d99ba5c11d7c7acc6e14b8c5da0c4663475c2e5c3adef46f73bcdec043"" 
</code></pre>
","2988","","<pre><code>require 'digest/sha2'

class String
  def sha512
    Digest::SHA2.new(512).hexdigest(encode('UTF-16LE'))
  end
end

'hello'.sha512 # =&gt; '5165d592a6afe59f80d07436e35bd…5748578fc63ac91f8f95b6c140b93'
</code></pre>

<p>As with all my code snippets on StackOverflow, I always assume the latest version of Ruby. Here's one that also works with Ruby 1.8:</p>

<pre><code>require 'iconv'
require 'digest/sha2'

class String
  def sha512(src_enc='UTF-8')
    Digest::SHA2.new(512).hexdigest(Iconv.conv(src_enc, 'UTF-16LE', self))
  end
end

'hello'.sha512 # =&gt; '5165d592a6afe59f80d07436e35bd…5748578fc63ac91f8f95b6c140b93'
</code></pre>

<p>Note that in this case, you have to <em>know</em> and tell Ruby about the encoding the string is in explicitly. In Ruby 1.9, Ruby always knows what encoding a string is in, and will convert it accordingly, when required. I chose UTF-8 as default encoding because it is backwards-compatible with ASCII, is the standard encoding on the internet and also otherwise widely used. However, for example both .NET and Java use UTF-16LE, not UTF-8. If your string is not UTF-8 or ASCII-encoded, you will have to pass in the encoding name into the <code>sha512</code> method.</p>

<hr>

<p>Off-Topic: 9 lines of code reduced to 1. I love Ruby!</p>

<p>Well, actually that is a little bit unfair. You could have written it something like this:</p>

<pre><code>var messageBytes = new UnicodeEncoding().GetBytes(str);
var hashValue = new System.Security.Cryptography.SHA512Managed().
    ComputeHash(messageBytes);
return hashValue.Aggregate&lt;byte, string&gt;("""",
    (s, b) =&gt; s += string.Format(""{0:x2}"", b)
);
</code></pre>

<p>Which is really only 3 lines (broken into 5 for StackOverflow's layout) and most importantly gets rid of that ugly 1950s-style explicit <code>for</code> loop for a nice 1960s-style fold (aka. <code>reduce</code> aka. <code>inject</code> aka. <code>Aggregate</code> aka. <code>inject:into:</code> &hellip; it's all the same).</p>

<p>There's probably an even more elegant way to write this, but a) I don't actually know C# and .NET and b) this question is about Ruby. Focus, Jörg, focus! :-)</p>

<p>Aaand &hellip; found it:</p>

<pre><code>return string.Join("""", from b in hashValue select string.Format(""{0:x2}"", b));
</code></pre>

<p>I <em>knew</em> there had to be an equivalent to Ruby's <code>Enumerable#join</code> somewhere, I just was looking in the wrong place.</p>
"
"<p>I think there is a shorter way of writing this <code>foreach</code> loop that creates a deep copy of a <code>SortedDictionary&lt;string, object&gt;</code>.  Note that <code>object</code> is just a place holder, I'm really using some other reference type there.  Thanks!</p>

<p>Here is the code:</p>

<pre><code>foreach (KeyValuePair&lt;string, object&gt; entry in sortedDictionary)
{
    this.mSortedDictionary.Add(entry.Key, new object());
}
</code></pre>
","2988","","<p>One of the rules of thumb of programming: in every other loop, there is a catamorphism (also called <code>fold</code>, <code>reduce</code>, <code>inject:into:</code> or <code>inject</code>) waiting to get out. This is also the case here. Thankfully, one of the LINQ operators provides a catamorphism for us, which Microsoft calls <code>Aggregate</code>:</p>

<pre><code>sortedDictionary.Aggregate(mSortedDictionary, (d, e) =&gt; {
    d.Add(e.Key, Transform(e.Value)); return d; });
</code></pre>

<p>Note: this could be further simplified by using the K combinator and a destructuring bind. Unfortunately, I couldn't find the K combinator in the BCL, although I'm pretty sure it <em>has</em> to be there somewhere. (If anybody knows, please tell me.)</p>

<p>For the purpose of this example, I'm going to provide my own K combinator and I'm going to call it <code>Tap</code> for no other reason than that's what it's called in Ruby:</p>

<pre><code>public static T Tap&lt;T&gt;(this T o, Action&lt;T&gt; f) { f(o); return o; }
</code></pre>

<p>That's literally all there is to it. (Well, at least if you ignore thread-safety and exceptions &hellip;)</p>

<p>Using the K combinator, we arrive at this:</p>

<pre><code>sortedDictionary.Aggregate(mSortedDictionary, (d, e) =&gt; d.Tap(dd =&gt;
    dd.Add(e.Key, Transform(e.Value))));
</code></pre>

<p>Which is much easier on the eye.</p>

<p>Unfortunately, we cannot add destructuring bind ourselves, but if C# <em>did</em> support destructuring bind, it would look more like this:</p>

<pre><code>sortedDictionary.Aggregate(mSortedDictionary, (d, {k, v}) =&gt; d.Tap(dd =&gt;
    dd.Add(k, Transform(v))));
</code></pre>

<p>[Note: in this example, I use object initializer syntax for destructuring bind.]</p>

<p>For example, in Ruby, which <em>does</em> have both destructuring bind and the K combinator, it would look like this:</p>

<pre><code>sorted_dictionary.reduce(m_sorted_dictionary) {|d, (k, v)|
  d.tap {|d| d[k] = transform(v) }
}
</code></pre>
"
"<p>A URL supposedly locates (and not simply identifies) a resource; a corollary is that the same URL must refer to the same resource.  However, this rule would appear to be violated in the case of URLs like <code>http://api.local/orders/333</code>, in which <code>api.local</code> does not resolve to a host for everyone, and may not even resolve to the same host in the case that it does resolve.  (For example, you might point <code>api.local</code> at one host in the development environment, and another in the live environment.)</p>

<ol>
<li>Strictly speaking, are URLs with a hostname like <code>api.local</code> (or <code>127.0.0.1</code>) RESTful?</li>
<li>Are there any problems this approach might cause?</li>
<li>Are there any good alternatives?  (Which is better: <code>http://flickr/</code> or <code>http://flickr.local/</code> or <code>http://flickr.api</code>?)</li>
</ol>
","2988","","<p>URLs aren't RESTful. Applications are RESTful (or not), but URLs aren't. In fact, in a RESTful application URLs are completely irrelevant, so the mere fact that you are worrying about whether or not your URLs are RESTful shows that your application isn't. But that doesn't have anything to do with URLs.</p>
"
"<p>I remember when .NET 4 was in beta there was a video of a developer that made a command-line app that he could type C# code into and it would compile the code on the fly. The idea was that the compiler was now available in the .NET language. </p>

<p>Anyone recall where this is? I need to create an application with a small macro language and I would love to use C# as that macro language, but I don't know where to find this library..</p>
","2988","","<p>The Compiler-as-a-Service feature has been <a href=""http://Go-Mono.Com/docs/index.aspx?link=N%3aMono.CSharp"" rel=""nofollow"">available in Mono</a> for quite some time and there are signs that it might appear in .NET 5 or 6, but it's not available in .NET 4.</p>

<p>If you absolutely, positively, need to run on .NET (note that Mono runs on Windows just fine, so you don't actually lose anything by running Mono), one interesting option might be to investigate how hard it would be to port <code>Mono.CSharp</code> to .NET. I mean, ultimately, at some point, it generates CIL bytecode which works exactly the same across all CLI implementations whether that be Mono, .NET, DotGNU, Rotor, Bartok or whatever.</p>

<p>Otherwise, your options are pretty much the same they have always been: generate files and call the commandline compier, use DLR trees, use lightweight code generation, use <code>Reflection.Emit</code>, use CodeDOM, use <code>CSharpCodeProvider</code>, create your own scripting language, host some other scripting language or host the DLR.</p>

<p>I'd probably go for the latter: hosting the DLR is absolutely easy and it gives you access to not only one but several good scripting languages (at the moment Ruby, Python, ECMAScript and Scheme) and in fact the user can use <em>any</em> DLR language they have installed on their machine.</p>
"
"<p>Can Ruby 1.9.1 finally get a list of filenames if the filenames have unicode characters on Windows?</p>

<p>I think back in the Ruby 1.8.6 and 1.8.7 days, that wasn't possible on Windows.</p>
","2988","","<p>Ruby 1.9.2/YARV 1.9.2 has massively improved non-ASCII filename support on Windows. You can read all about it in bug <a href=""http://RedMine.Ruby-Lang.Org/issues/show/1685/"" rel=""nofollow""><em>#1685: Some windows unicode path issues remain</em></a>.</p>

<p>However, it is still possible that it will work for you on 1.9.1 if you don't hit any of the bugs.</p>
"
"<p>I'm using ruby and googles reverse geocode yql table to ideally automate some search query I have. The problem I hit is turning the query into a legal url format. The issue is that the encoding I'm using is returning illegal urls. The query I'm running is as follows</p>

<pre><code>query=""select * from google.geocoding where q='40.714224,-73.961452'"" 
pQuery= CGI::escape(query)
</code></pre>

<p>The eventual output for the processed query looks like this</p>

<pre><code>http://query.yahooapis.com/v1/public/yql?q=select+%2A+from+google.geocoding+where+q%3D%2740.3714224%2C--73.961452%27+format=json&amp;diagnostics=true&amp;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&amp;callback=
</code></pre>

<p>Alas the url is illegal. When checking what the query shoud look like in the YQL console I get the following</p>

<pre><code>http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20google.geocoding%20where%20q%3D%2240.714224%2C-73.961452%22&amp;format=json&amp;diagnostics=true&amp;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&amp;callback=
</code></pre>

<p>As you can hopefully see :), the encoding is all wrong. I was wondering does anyone know how I can go about generating correct urls.</p>
","2988","","<p>If you want to escape a URI, you should use <code>URI::escape</code>:</p>

<pre><code>require 'uri'

URI.escape(""select * from google.geocoding where q='40.714224,-73.961452'"")
# =&gt; ""select%20*%20from%20google.geocoding%20where%20q='40.714224,-73.961452'""
</code></pre>
"
"<pre><code>a &gt; b
ifTrue:[ 'greater' ]
ifFalse:[ 'less or equal' ]
</code></pre>

<p>My understanding is that Boolean a > b receives the message  ifTrue:[ 'greater' ], and then ifFalse:[ 'less or equal' ] complying to the generalization:</p>

<pre><code>objectInstance selector; selector2
</code></pre>

<p>But there a semicolon is needed to specify that the receiver of selector2 is not  (objectInstance selector) but objectInstance. Is not the same with the above conditional execution?</p>
","2988","","<p>The selector of the method is <code>Boolean&gt;&gt;ifTrue:ifFalse:</code>, which means it is <em>one</em> method with <em>two</em> parameters, not <em>two</em> methods with <em>one</em> parameter.</p>

<p>Ergo, to invoke the method, you send it the message <code>ifTrue:ifFalse:</code> with two block arguments.</p>

<p>Note that for convenience reasons, there are also methods <code>Boolean&gt;&gt;ifFalse:ifTrue:</code>, <code>Boolean&gt;&gt;ifTrue:</code> and <code>Boolean&gt;&gt;ifFalse:</code>.</p>
"
"<p>I'm looking for a Ruby or Python implementation of the Git client that can be used to update and commit changes in a local repository.</p>

<p>I prefer if the library does not use shell commands at all but keeps everything in ""pure code"".</p>

<p>Are there any?</p>

<p>Thank you in advance.</p>
","2988","","<p>For Python, there is the <a href=""http://Samba.Org/~jelmer/dulwich/"" rel=""nofollow"">Dulwich</a> library which @RyanWilcox already mentioned.</p>

<p>For Ruby, there unfortunately is no Git library. There is <a href=""https://GitHub.Com/Mojombo/Grit/"" rel=""nofollow"">Grit</a>, which implements a subset of Git in Ruby and wraps the command line tools for some additional features, but only supports the subset of Git that GitHub needs. And you could use either <a href=""http://Eclipse.Org/jgit/"" rel=""nofollow"">JGit</a> or <a href=""http://WWW.Eqqon.Com/index/GitSharp"" rel=""nofollow"">Git#</a> via JRuby or IronRuby.</p>
"
"<p>I've done a manual cherry pick of a commit from one project into my git project, and I'd like to give credit to the true author by faking the author info somehow for this one commit, so that the true author is the author, and I am the committer.</p>

<p>Any idea how to do this?</p>
","2988","","<p>There are several ways. If the environment variables <code>GIT_AUTHOR_NAME</code> and <code>GIT_AUTHOR_EMAIL</code> are set, Git will use those. Also, you can pass the <code>--author</code> argument to <code>git commit</code> as per <a href=""http://Kernel.Org/pub/software/scm/git/docs/git-commit.html"">the documentation</a>:</p>

<blockquote>
  <dl><dt><code>--author=<strong>&lt;author&gt;</strong></code></dt><dd>Override the commit author. Specify an explicit author using the standard <code>A U Thor &lt;author@example.com&gt;</code> format. Otherwise <code><strong>&lt;author&gt;</strong></code> is assumed to be a pattern and is used to search for an existing commit by that author (i.e. <code>rev-list --all -i --author=<strong>&lt;author&gt;</strong></code>); the commit author is then copied from the first such commit found.</dd></dl>
</blockquote>

<p>However, you don't actually need to do <em>anything</em> because <code>git cherry-pick</code> already does that automatically.</p>
"
"<p>What do you look for during code walkthroughs, inspections that regular static code analysis tools like FxCop, VS Code Analysis plugins cannot.</p>
","2988","","<p>Here's a pretty simple example of something that pretty much none of the mainstream type systems or static analysis tools will catch but that is immediately obvious to any developer doing a code review:</p>

<pre><code>proc subtract_two_numbers_from_each_other(a: num, b: num): num =
    return a + b
</code></pre>

<p>[Note: Pseudocode. Language doesn't really matter. Substitute any mainstream programming language you like.]</p>
"
"<p>Are there any languages that support easily extending the compiler to support new literals example such as for json/xml/yaml/different string encodings/extra number types.
I understand that you can always fork the compiler, write a dsl but that's not quite what I'm asking about. I understand that some languages such as smalltalk and lisp are incredibly flexible but I'm not looking for something that can be done fairly simple by one team, but something which is an attempt to bring this to the whole language and allow it as common practice. You can also share any research on similar ideas.</p>

<p>Alternatively are there any languages that support literals via special methods in the object with string arguments alla (in this case the """""" denote the start and end of the string to be handed to Xml.newFromTripleString(String a).</p>

<p>Xml exapmleXml="""""" 
        
            #{name}
            #{title}
        
"""""" 
I understand that many languages support this type of thing by doing something like
XMl exapmleXml= Xml.newFromTripleString("" "" + ""\n""
        "" + ""\n"" +
        ""   #{name}  + ""\n"" +
        ""   #{title}  + ""\n"" +
        """")
but do any language try to make this easier with something like implicit conversion? Any research on these sort of techniques?</p>

<p>Any links and explanation to other ideas on how to introduce more flexible literal or literal-like support in languages would also be nice.</p>
","2988","","<h2><a href=""http://Ioke.Org/"" rel=""nofollow"">Ioke</a></h2>

<p>Ioke allows overriding of literals, but not the definition of new ones. The way this works is that literals simply get translated into message sends and then you can override the corresponding methods just like any other.</p>

<p>For example, this the ""literal syntax"" for a <code>Dict</code> with two entries, one mapping a <code>Symbol</code> to a <code>Text</code>, the other mapping a <code>Symbol</code> to a <code>Number</code>:</p>

<pre><code>{ :name =&gt; ""Jörg"", :age =&gt; 31 }
</code></pre>

<p>This actually gets translated into a message send, for a message named <code>{}</code> (BTW: lists work the same way, their corresponding message is <code>[]</code>). It is exactly equivalent (and can be written like this if you want) to:</p>

<pre><code>{}(:name =&gt; ""Jörg"", :age =&gt; 31)
</code></pre>

<p>Now, <code>=&gt;</code> is actually just an operator which is defined for almost all objects and which simply returns a <code>Pair</code> with the key (the first element) being the receiver and the value being the argument. Now, operators are <em>also</em> just message sends, so this is equivalent to:</p>

<pre><code>{}(:name =&gt;(""Jörg""), :age =&gt;(31))
</code></pre>

<p>The <code>:</code> sigil which denotes a literal symbol gets translated into a message send, too:</p>

<pre><code>{}(:(""name"") =&gt;(""Jörg""), :(""age"") =&gt;(31))
</code></pre>

<p>The text literal gets translated into sending the <code>internal:createText</code> message:</p>

<pre><code>{}(:(""name"") =&gt;(internal:createText(""Jörg"")), :(""age"") =&gt;(31))
</code></pre>

<p>[Note: obviously, the way it is written here will lead to an infinite recursion. The truth is that the argument to <code>internal:createText</code> is obviously not an Ioke <code>Text</code> but rather a platform string. I.e. for <code>ikj</code>, the JVM implementation of Ioke, it is actually a <code>java.lang.String</code> and for <code>ikc</code>, the CIL implementation, it is a <code>System.String</code>. I've expressed this here using triple quotes.]</p>

<pre><code>{}(:(""name"") =&gt;(internal:createText(""""""Jörg"""""")), :(""age"") =&gt;(31))
</code></pre>

<p>This just leaves us with the number, which, you guessed it, is also a message send:</p>

<pre><code>{}(:(""name"") =&gt;(internal:createText(""""""Jörg"""""")),
   :(""age"") =&gt;(internal:createNumber(""""""31"""""")))
</code></pre>

<p>Since everything is a message send, this allows you to customize the behavior of literals at will, just by implementing the corresponding methods. Here's a short transcript from <code>iik</code>, the interactive Ioke REPL:</p>

<pre><code>iik&gt; ""Hello""
+&gt; ""Hello""

iik&gt; internal:createText = method(raw, super(raw) upper)

iik&gt; ""Hello""
+&gt; ""HELLO""
</code></pre>

<h2><a href=""http://ConvergePL.Org/"" rel=""nofollow"">Converge</a></h2>

<p>Converge allows for powerful compile time metaprogramming, including a feature called <em>DSL Blocks</em>. A DSL block is a block of code which does not use the Converge syntax. A DSL block looks like this:</p>

<pre><code>$&lt;&lt;xml&gt;&gt;:
    &lt;xml&gt;
      &lt;literal&gt;here&lt;/literal&gt;
    &lt;/xml&gt;
</code></pre>

<p>The way this works is that the string in between the <code>$&lt;&lt;</code> and <code>&gt;&gt;</code> is the name of a function which gets called <em>at compile time</em> and gets passed the entire DSL block as a string (as well as some source code metadata such as line number, file name etc.) and returns a fragment of the Converge Abstract Syntax Tree. So, in this particular case, there would be a function like this:</p>

<pre><code>func xml(dsl_block, src_infos):
    // implement an XML parser here ...
    return ast
</code></pre>

<h2><a href=""http://FactorCode.Org/"" rel=""nofollow"">Factor</a></h2>

<p>Factor allows the definition of <em>Parsing Words</em> which are words that affect the way other words in the same scope are parsed. Factor actually has an <a href=""http://Useless-Factor.BlogSpot.Com/2009/01/factor-supports-xml-literal-syntax.html"" rel=""nofollow"">XML library implementation</a> that uses parsing words to get syntax that looks very much like Scala's XML literals but is just normal Factor code:</p>

<pre><code>: feed&gt;xml ( feed -- xml )
    [ title&gt;&gt; ]
    [ url&gt;&gt; present ]
    [ entries&gt;&gt; [ entry&gt;xml ] map ] tri
    &lt;XML
        &lt;feed xmlns=""http://www.w3.org/2005/Atom""&gt;
            &lt;title&gt;&lt;-&gt;&lt;/title&gt;
            &lt;link href=&lt;-&gt; /&gt;
            &lt;-&gt;
        &lt;/feed&gt; 
    XML&gt; ;
</code></pre>

<p>[Quick intro to Factor: <code>:</code> defines a new word, i.e. the first line defines a word named <code>feed&gt;xml</code> which takes one argument and produces one result. The first three lines of the word extract the title, the URI and the entries out of the feed object and place them on the stack. The <code>&lt;XML</code> is the parsing word which turns on XML mode and <code>XML&gt;</code> turns it off again. Inside the XML code, <code>&lt;-&gt;</code> takes a value from the stack and inserts it into the XML.]</p>

<h2>Common Lisp</h2>

<p><a href=""http://Dorophone.BlogSpot.Com/2008/03/common-lisp-reader-macros-simple.html"" rel=""nofollow"">Common Lisp Reader Macros</a> allow you to hook into the reading stage, i.e. the stage that takes a string and produces nested lists and then hands them off to the compiler/evaluator. They require you to choose a unique one- or two-character prefix and they are global. The first one is not so much of a problem, since we can simply choose the <code>&lt;</code> character as our prefix to make it look natural.</p>

<h2><a href=""http://Perl6.Org/"" rel=""nofollow"">Perl 6</a></h2>

<p>Perl 6 should allow you to change the syntax while the program runs. Perl 6 has a dynamic mutable grammar which means that code gets parsed while it is executed and can change the grammar so that other code further down in the file gets parsed using the new grammar.</p>

<h2>OMeta/COLA</h2>

<p><a href=""http://TinLizzie.Org/ometa/"" rel=""nofollow"">Alessandro Warth's OMeta language</a> running on top of <a href=""http://Piumarta.Com/software/cola/"" rel=""nofollow"">Ian Piumarta's COLA system</a> allows for what they call ""mood-specific languages"". I.e. languages whose specification and implementation is so lightweight that you can use them for just one line in the middle of your program and then switch to a different syntax again.</p>

<p>It is used in the <a href=""http://VPRI.Org/html/work/ifnct.htm"" rel=""nofollow"">Inventing Fundamental New Computing Technologies</a> at Alan Kay's <a href=""http://VPRI.Org/"" rel=""nofollow"">Viewpoint Research Institute</a>. One example usage is the implementation of an entire TCP/IP networking stack in just 200 lines of code by designing a language whose syntax is identical to the ASCII art diagrams used in IETF RfCs and another language for writing networking protocol state machines. Then, the implementation of the networking stack simply consists of copy&amp;pasting the ASCII diagrams from the RfCs and transiterating the English state machine descriptions from the RfCs into the state machine language.</p>

<p>(Oh, in case you are wondering: the 200 lines is not just for the ASCII diagrams and the state machines. It also includes the parsers and compilers for the two languages.)</p>

<h2><a href=""http://Pi-Programming.Org/"" rel=""nofollow"">π</a></h2>

<p>The π programming language is probably interesting as well.</p>
"
"<p>It seems impossible to create an object using its default constructor when there is a static .New() method defined on the class:</p>

<p><strong>.NET class:</strong></p>

<pre><code>public class Tester
{
    public static void New()
    {
        Console.WriteLine(""In Tester.New()"");
    }

    public Tester()
    {
        Console.WriteLine(""In constructor"");
    }
}
</code></pre>

<p><strong>IronRuby code:</strong></p>

<pre><code>Tester.new
Tester.New
</code></pre>

<p>Both of these lines call <strong>Tester.New()</strong>, not the constuctor. It seems impossible to call the constructor of the <strong>Tester</strong> class.</p>

<p>Is there a workaround, or is this a bug?</p>
","2988","","<p>The first one is just an unavoidable ambiguity. If you want to make CLI classes look like Ruby classes, you have no choice but to map the constructor to a <code>new</code> method. So, if you have both a <em>real</em> <code>new</code> method and a synthesized one which maps to a constructor, whatever you do, either the synthetic method shadows the real one or the other way around. Either way, you lose.</p>

<p>That's why all CLI classes have a synthetic <code>clr_new</code> method:</p>

<pre><code>Tester.clr_new
# In constructor
</code></pre>
"
"<p>This question is about formatting ruby's strings.</p>

<p>In Python, built-in data structures have a built-in to-string method, and so when a variable is printed, the string is conveniently formatted to be reflective of the data structure used. For example:</p>

<pre><code>&gt;&gt;&gt;$ python
Python 2.6.4 (r264:75706, Dec  7 2009, 18:45:15)
[GCC 4.4.1] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
$&gt;&gt;&gt; a = [1,2,3,4]
$&gt;&gt;&gt; str(a)
'[1, 2, 3, 4]'
$&gt;&gt;&gt; print a
[1, 2, 3, 4]
$&gt;&gt;&gt; d = { ""a"":""a"", ""b"":""b"", 1:5 }
$&gt;&gt;&gt; str(d)
""{'a': 'a', 1: 5, 'b': 'b'}""
$&gt;&gt;&gt; print d
{'a': 'a', 1: 5, 'b': 'b'}
$&gt;&gt;&gt; x = [1, 23, 4]
$&gt;&gt;&gt; print x
[1, 23, 4]
</code></pre>

<p>notice that when i print a, the value is <code>[1, 2, 3, 4]</code></p>

<p>However, in ruby, when i try to do the same things, i get this result:</p>

<pre><code>&gt;&gt;&gt;$ irb
irb(main):001:0&gt; x = [1,23,4]
=&gt; [1, 23, 4]
irb(main):002:0&gt; x.to_s
=&gt; ""1234""
irb(main):003:0&gt; puts x
1
23
4 
=&gt; nil
irb(main):004:0&gt; print x
1234=&gt; nil
irb(main):005:0&gt; h = { ""a"" =&gt; ""a"", 1 =&gt; 5, 'b'=&gt;'b' } 
=&gt; {""a""=&gt;""a"", ""b""=&gt;""b"", 1=&gt;5}
irb(main):006:0&gt; print h 
aabb15=&gt; nil
irb(main):007:0&gt; h.to_s
=&gt; ""aabb15""
irb(main):008:0&gt; puts h
aabb15
=&gt; nil
irb(main):009:0&gt;
</code></pre>

<p>As you can see, there is no formatting with the to_s method. Furthermore, there's a uniqueness problem if i call to_s on [1,2,3,4] and [1,23,4] and [1234] because the to_s clumps all elements together so they all end up being ""1234"". I know that i can try to emulate the python built-in to-string methods for every native data structure by overriding the to_s method ( ""["" + a.join("","") + ""]"" #just for arrays), but i was wondering if there is a better alternative since hacking it would seem to break the convention-over-configuration concept.</p>

<p>So is there a ruby equivalent of python's built-in to-string method?</p>
","2988","","<p>In Ruby, there are four methods that are typically available for getting a string representation of an object.</p>

<ol>
<li><code>#to_str</code>: this is part of Ruby's standard type conversion protocols (similar to <code>to_int</code>, <code>to_ary</code>, <code>to_float</code>, &hellip;). It is used if and <em>only</em> if the object really actually <em>is</em> a string but for whatever reason is not an instance of the <code>String</code> class. It is extremely unusual. In fact, in the entire core library, there is only the no-op implementation in the <code>String</code> class itself.</li>
<li><code>#to_s</code>: this is also part of Ruby's standard type conversion protocols (similar to <code>to_i</code>, <code>to_a</code>, <code>to_f</code>, &hellip;). It is used if the object has some sort of sensible string representation. It does not actually need to <em>be</em> a string. Almost all objects should respond to this.</li>
<li><code>Kernel#String(obj)</code>: this is also part of Ruby's standard type conversion protocols (similar to <code>Kernel#Integer(obj)</code>, <code>Kernel#Array(obj)</code>, <code>Kernel#Float(obj)</code>, &hellip;). It is the same as <code>obj.to_s</code>.</li>
<li><code>#inspect</code>: it is supposed to return a human-readable description of the object for debugging purposes. In other words: it is for inspecting an object (duh).</li>
</ol>

<p>There are three methods for printing objects:</p>

<ol>
<li><code>Kernel#print(obj, ...)</code>: prints all <code>obj</code>s separated by <code>$,</code> and terminated by <code>$\</code>. If an <code>obj</code> is not a <code>String</code>, <code>print</code> will call <code>obj.to_s</code> first.</li>
<li><code>Kernel#puts(obj, ...)</code>: is basically equivalent to <code>$stdout.puts(obj, ...)</code>. It also prints the <code>obj</code>s, but it typically separates them with newlines. However, it also has some special case behavior, in particular it treats arrays specially by printing each item on a new line.</li>
<li><code>Kernel#p(obj, ...)</code>: similar to <code>puts</code> but calls <code>#inspect</code> on all <code>obj</code>s.</li>
</ol>

<p>In addition to those, there is also the <code>pp</code> (pretty print) library in the standard library which adds a <code>Kernel#pp(obj, ...)</code> method.</p>

<p>Then, there's the <code>awesome_print</code> library and <code>hirb</code>.</p>
"
"<p>maybe this is just a little misunderstanding but how can a programming language be <strong>implemented</strong>?</p>

<p>I'm not talking about how to implement my own programming language but about the word ""implemented""?
I mean, you can implement a compiler or an interpreter, but a programming language?</p>

<p>What does it mean if I read ""C++ is implemented in C"" or ""Python was implemented in C""?</p>

<p>I think a language is more sth. like a protocol of how someone thinks about things should be implemented. For example, if he wants do display a messagebox he can say the command for this is ShowMessageBox(string) and implement a compiler who will translate this into something that works on a computer (aside from the selected programming paradigms he imagines).</p>

<p>I think this question leads to the question ""what is a programming language in reality""? A compiler, an interpreter or just a documented language standard about how things should be implemented in a language?</p>

<p><strong>[EDIT]</strong></p>

<p>Answer: Languages are never implemented, only compilers/interpreters etc. It's this simple.</p>
","2988","","<p>You are right, those statements don't make any sense. It's pretty obvious that whoever made those statements doesn't understand the difference between a programming language and a compiler (or interpreter).</p>

<p>This is a surprisingly common problem. For example, sometimes people talk about interpreted languages or compiled languages. That's the same thing: languages aren't interpreted or compiled, they just <em>are</em>. Interpretation and compilation are traits of the <em>implementation</em> not the language.</p>

<p>Another goodie: Python has a GIL. No, it doesn't: <em>one</em> implementation of Python has a GIL, all the other implementations don't, and the Python <em>Language</em> itself <em>certainly</em> doesn't. Or: Ruby has green threads. Again, not true: Ruby has threads. Period. Whether any particular language implementation chooses to implement them as green threads, native threads, platform threads or whatever, is  a trait of that particular implementation, not of Ruby. And of course my favorite: Ruby 1.9 is faster than Ruby 1.8. This doesn't even make sense: Ruby 1.9 and Ruby 1.8 are programming languages, i.e. a bunch of abstract mathematical rules. You cannot <em>run</em> a programming language, therefore a programming language can never be ""faster"" or ""slower"" than another one.</p>

<p>The most blatant confusion about the difference between programming languages and implementations is the Computer Language Benchmark Game, which claims to benchmark languages against each other but in fact benchmarks implementations.</p>

<p>All of these are just different expressions of the fact that apparently some people seem to be fundamentally incapable of grasping the concept of abstraction. Or at least the concept of having an abstract language and a concrete implementation of that language.</p>

<p>If we go back to the statement that ""Python is implemented in C"", it should now be obvious that that statement is not just wrong. If the statement were wrong that would imply that the statement even makes sense, i.e. that there is some possible world out there, in which it could at least theoretically be right. But that's not the case. The statement is neither wrong nor right, it simply doesn't make sense. If English were a typed language, it would be a type error.</p>

<p>Python is a programming language. Programming languages aren't implemented in anything. They are just implemented. Compilers and interpreters are implemented in languages. But even if you interpret the statement this way, it isn't true: Jython is implemented in Java, IronPython is implemented in C#, PyPy is implemented in RPython and Python, Pynie is implemented in PGE, NQP and PIR. (Oh, and all of those implementations have compilers, so there goes your ""Python is an interpreted language"".) Similar with Ruby: Rubinius is implemented in Ruby and C++, JRuby and XRuby are implemented in Java, IronRuby and Ruby.NET are implemented in C#, HotRuby is implemented in ECMAScript, Red Sun is implemented in ActionScript, RubyGoLightly is implemented in Go, Cardinal is implemented in PGE, NQP and PIR, SmallRuby is implemented in Smalltalk/X, MagLev is implemented in GemStone Smalltalk and Ruby, YARI is implemented in Io. And for C++: Clang (which is the C, C++ and Objective-C front-end for LLVM) is implemented in C++ (all three front-ends are implemented in C++).</p>
"
"<p>I want to extend Date class in ruby.Actually what I want to do is that add a method to Date class. Following is an example</p>

<p>I want to add 'my_simple_method' method to Date class</p>

<pre><code>def my_simple_method 
 puts 'this is from my_simple_method'
end
</code></pre>

<p>after adding this users should be able to call this method as </p>

<pre><code>date_obj = Date.parse('2010-07-01')
puts date_obj.my_simple_method
</code></pre>

<p>should print  'this is from my_simple_method'</p>

<p>thanks in advance </p>

<p>cheers</p>

<p>sameera</p>
","2988","","<pre><code>class Date
  def my_simple_method
    puts 'this is from my_simple_method'
  end
end
</code></pre>
"
"<p>How to simulate Java-like annotations in ruby?</p>

<p>(We'll I have the answer, generalizing
<a href=""http://bens.me.uk/2009/java-style-annotations-in-ruby"">http://bens.me.uk/2009/java-style-annotations-in-ruby</a>)</p>
","2988","","<p>This is adapted from <a href=""http://StackOverflow.Com/questions/2948328/access-attributes-methods-comments-programmatically-in-ruby/2948977/#2948977"">a piece of code I wrote in an answer to another question</a> a couple of weeks ago, although it is of course hardly original. This <em>is</em> a well-known Ruby idiom, after all, which has been in use for many years, at least since <code>rakes</code>'s <code>desc</code> method.</p>

<pre><code>module Annotations
  def annotations(meth=nil)
    return @__annotations__[meth] if meth
    @__annotations__
  end

  private

  def method_added(m)
    (@__annotations__ ||= {})[m] = @__last_annotation__ if @__last_annotation__
    @__last_annotation__ = nil
    super
  end

  def method_missing(meth, *args)
    return super unless /\A_/ =~ meth
    @__last_annotation__ ||= {}
    @__last_annotation__[meth[1..-1].to_sym] = args.size == 1 ? args.first : args
  end
end

class Module
  private

  def annotate!
    extend Annotations
  end
end
</code></pre>

<p>Here's a small example:</p>

<pre><code>class A
  annotate!

  _hello   color: 'red',   ancho:   23
  _goodbye color: 'green', alto:  -123
  _foobar  color: 'blew'
  def m1; end

  def m2; end

  _foobar  color: 'cyan'
  def m3; end
end
</code></pre>

<p>And of course no Ruby code would be complete without a testsuite:</p>

<pre><code>require 'test/unit'
class TestAnnotations &lt; Test::Unit::TestCase
  def test_that_m1_is_annotated_with_hello_and_has_value_red
    assert_equal 'red', A.annotations(:m1)[:hello][:color]
  end
  def test_that_m3_is_annotated_with_foobar_and_has_value_cyan
    assert_equal 'cyan', A.annotations[:m3][:foobar][:color]
  end
  def test_that_m1_is_annotated_with_goodbye
    assert A.annotations[:m1][:goodbye]
  end
  def test_that_all_annotations_are_there
    annotations = {
      m1: {
        hello:   { color: 'red',   ancho:   23 },
        goodbye: { color: 'green', alto:  -123 },
        foobar:  { color: 'blew'               }
      },
      m3: {
        foobar:  { color: 'cyan'               }
      }
    }
    assert_equal annotations, A.annotations
  end
end
</code></pre>
"
"<p>Whenever I see Ruby code that says:</p>

<pre><code>arrayNames.collect { ... }
</code></pre>

<p>I forget what collect is and have to look up what it is, and find that it is the same as map().</p>

<p>Map, I can understand, mapping 1 byte to a pixel, and function is to map an x to a y, a 2 to a 4, a 5 to a 25, etc.  But where does the name ""collect"" come from?  Maybe that will help to remember what a ""collect"" method is.</p>
","2988","","<p>To add to the other answers, it is kind of an inside-joke in Smalltalk:</p>

<ul>
<li><code>inject:into:</code></li>
<li><code>collect:</code></li>
<li><code>select:</code></li>
<li><code>reject:</code></li>
<li><code>detect:</code></li>
</ul>

<p>Spot the pattern?</p>
"
"<p>In <a href=""http://stackoverflow.com/questions/3168280/ruby-insert-spaces-every-x-number-of-characters"">this</a> question, the asker requests a solution that would insert a space every x number of characters. The answers both involve using a regular expression. How might you achieve this without a regex?</p>

<p>Here's what I came up with, but it's a bit of a mouthful. Any more concise solutions?</p>

<pre><code>string = ""12345678123456781234567812345678""
new_string = string.each_char.map.with_index {|c,i| if (i+1) % 8 == 0; ""#{c} ""; else c; end}.join.strip
=&gt; ""12345678 12345678 12345678 12345678""
</code></pre>
","2988","","<pre><code>class String
  def in_groups_of(n)
    chars.each_slice(n).map(&amp;:join).join(' ')
  end
end

'12345678123456781234567812345678'.in_groups_of(8)
# =&gt; '12345678 12345678 12345678 12345678'
</code></pre>
"
"<p>I am working on a ruby on rails application. For a session controller, I want to use a case to check if a user's account is locked or banned. I am trying to use the object of a class as the case, and use when to check attributes.</p>

<p>For example,</p>

<pre><code>user = Profile.find(1)
case user
when user.ban
  redirect_to()
when user.lock
  redirect_to()
else
  redirect_to()
end
</code></pre>

<p>The only problem is that doesn't work.</p>

<p>What does work is this:</p>

<pre><code>case user.ban
when true
  redirect_to()
else
  redirect_to()
end
</code></pre>

<p>Any advice on how I can go about checking if a user object is banned or locked using a switch?</p>

<p>Thank you</p>
","2988","","<p>Just leave out the <code>user</code>:</p>

<pre><code>user = Profile.find(1)
case
when user.ban
  redirect_to
when user.lock
  redirect_to
else
  redirect_to
end
</code></pre>

<p>In Ruby, there are two forms of the <code>case</code> expression. In the form above, it simply executes the first branch which evaluates to a truish value (i.e. anything except <code>nil</code> or <code>false</code>).</p>

<p>The other form</p>

<pre><code>case foo
when bar
  baz
end
</code></pre>

<p>is equivalent to</p>

<pre><code>if bar === foo
  baz
end
</code></pre>
"
"<p>Is there any major difference between <code>load</code> and <code>require</code> in the Ruby on Rails applications? Or do they both have the same functionality?</p>
","2988","","<p>Another difference between <code>Kernel#require</code> and <code>Kernel#load</code> is that <code>Kernel#load</code> takes an optional second argument that allows you to wrap the loaded code into an anonymous empty module.</p>
"
"<p>I want to create a tool with Ruby which works with all 3 of the major OSes (Windows, Linux, Mac OS X). What choices do I have for toolkits where the bindings for Ruby is ""good""? By good I mean not just quick direct mapping of the C/C++ API onto Ruby, for instance using blocks where appropriate and other Ruby features.</p>
","2988","","<p>Until recently, pretty much the best options were Swing and SWT. And you know that there is something seriously wrong if Swing is your best option. But now, there's also WPF.</p>

<p>All three, Swing, SWT and WPF work great on Windows, OSX, Linux and probably a dozen others.</p>
"
"<p>I've been reading various programming styles like XP (writing the test first), and came across a Java book that just has design patterns, what seems to be like pseudocodes.</p>

<p>What are these design patterns used for ? what does design apttern in the context of programming refer to and what are it's applications ? Is it like blue prints for building a domain specific application ?</p>
","2988","","<p>A Design Pattern is a general reusable solution to a commonly occuring design problem. Actually, we can generalize that: A Pattern is a general reusable solution to a commonly occuring problem. There are not only Design Patterns, there are also Coding Patterns (although we don't call them that, we call them Idioms), Architecture Patterns, User Experience Patterns, Process Patterns etc.</p>

<p>However, there is a small problem with that definition: in programming, we call a general reusable solution to commonly occuring problem a <em>Program</em>. So, in other words, if you have a recurring problem, you write a program, and only if you <em>can't</em> write a program, <em>then</em> you need a Pattern.</p>

<p>So, an alternative definition would be: A Pattern is a Program that you cannot write because your Programming Language is too weak to express it.</p>

<p>So, in general, you should try to use a better Programming Language before you try a Pattern. However, Programming Language Design is all about trade-offs: it's simply impossible to design a Programming Language which can express all problems equally well. So, having some Design Patterns in your code is perfectly fine, but you shouldn't have many of them and you definitely shouldn't have any Patterns in your core business logic. That's a sign that you chose the wrong programming language and no pattern can fix that.</p>

<p>Here's an example: in assembly programming, having a parametric piece of behavior shared between different parts of the program is a commonly occuring design problem. And there is a design pattern that solves that problem: it's called a Subroutine. But in a different language, and in fact in pretty much all modern languages, subroutines (sometimes called procedures, functions, methods, routines, subs) are built right into the language. They aren't a Pattern, they're just there and nobody even thinks about them anymore. So, if you have just one or two subroutines in your code, that's fine. But if you have many of them, assembly is probably not the right choice.</p>

<p>Some other examples: In a prototype-based OO language, the Prototype Pattern is built in. In a language with multiple dispatch, the Visitor Pattern is built in. In Ruby, there are no constructors, you always use Factory Methods without thinking about it. In delegation-based OO languages, the Decorator Pattern is built in. In languages with higher-order procedures, the Iterator Pattern is built in. In languages without mutable state, the Iterator Pattern is actually an <em>Antipattern</em>.</p>
"
"<p>I read the following paragraph on Wikipedia article about the CLR:</p>

<blockquote>
  <p>Alternatively, the CIL code can be
  compiled to native code in a separate
  step prior to runtime by using the
  Native Image Generator (NGEN). This
  speeds up all later runs of the
  software as the CIL-to-native
  compilation is no longer necessary.</p>
</blockquote>

<p>Does this mean that I can take any .NET program and compile it to a binary that will then be able to run on machine that doesnt have the .NET framework installed?</p>
","2988","","<p>´NGen´ just compiles your code. It doesn't statically link the entire .NET framework into it.</p>

<p>Mono, however, <em>does</em> have a static compiler and linker that can do this. That's for example how Mono's iPhone support works.</p>
"
"<p>If I have the following,</p>

<pre><code>&lt;% @feed.sort_by{|t| - t.created_at.to_i}.each do |feed| %&gt; 

&lt;% end %&gt;
</code></pre>

<p>How can limit it to only show the 10 most recent results </p>
","2988","","<pre><code>&lt;% @feed.sort_by{|t| - t.created_at.to_i}.first(10).each do |feed| %&gt;
</code></pre>

<p>However, it's probably best to push this down into the model like this</p>

<pre><code>&lt;% @feed.recent(10).each do |feed| %&gt;
</code></pre>

<p>And, in fact, if <code>@feed</code> comes out of a database, I'd push it down even further: it doesn't make sense to load a ton of unsorted feed entries out of the DB, then sort them and then throw most of them away. Better let the DB do the sorting and filtering.</p>

<p>See @Peer Allan's answer for how to do it in <code>ActiveRecord</code>. In <code>ARel</code> (IOW: Rails 3) it would probably be even simpler, something like</p>

<pre><code>Feed.all.order('created_at DESC').take(10)
</code></pre>
"
"<p>I was working on serializing values when found out about this one. Ruby has a <a href=""http://ruby-doc.org/core/classes/TrueClass.html""><code>TrueClass</code></a> class, and a <a href=""http://ruby-doc.org/core/classes/FalseClass.html""><code>FalseClass</code></a> class, but it has no <code>Boolean</code> class. I'd like to know why is this.</p>

<p>I see some advantages in using a <code>Boolean</code>; for example, string parsing could be centralized on it.</p>

<p>Ruby developers are smarter than me, so there must be a lot of good reasons that I just don't see. But right now it looks to me like having <code>OneClass</code> and a <code>TwoClass</code> instead of <a href=""http://ruby-doc.org/core/classes/Fixnum.html""><code>Fixnum</code></a>.</p>
","2988","","<p>The purpose of a class is to group similar objects, or objects with similar behavior together. <code>1</code> and <code>2</code> are very similar, therefore it makes perfect sense for them to be in the same class. <code>true</code> and <code>false</code> however are <em>not</em> similar. In fact, their <em>whole point</em> is that they are exactly the <em>opposite</em> of each other and have opposite behavior. Therefore, they don't belong in the same class.</p>

<p>Can you give an example of what sort of common behavior you would implement in a <code>Boolean</code> class? I can't think of anything.</p>

<p>Let's just look at the behavior that <code>TrueClass</code> and <code>FalseClass</code> have: there's exactly <em>four</em> methods there. No more. And in every single case, the two methods do <em>exactly the opposite</em>. How and why would you put that in a single class?</p>

<p>Here's how you implement all those methods:</p>

<pre><code>class TrueClass
  def &amp;(other)
    other
  end

  def |(_)
    self
  end

  def ^(other)
    !other
  end

  def to_s
    'true'
  end
end
</code></pre>

<p>And now the other way around:</p>

<pre><code>class FalseClass
  def &amp;(_)
    self
  end

  def |(other)
    other
  end

  def ^(other)
    other
  end

  def to_s
    'false'
  end
end
</code></pre>

<p>Granted, in Ruby, there is a lot of ""magic"" that is going on behind the scenes and that is not actually handled by <code>TrueClass</code> and <code>FalseClass</code> but rather hardwired into the interpreter. Stuff like <code>if</code>, <code>&amp;&amp;</code>, <code>||</code> and <code>!</code>. However, in Smalltalk, from which Ruby borrowed a lot including the concept of <code>FalseClass</code> and <code>TrueClass</code>, all of these are implemented as methods as well, and you can do the same thing in Ruby:</p>

<pre><code>class TrueClass
  def if
    yield
  end

  def ifelse(then_branch=-&gt;{}, _=nil)
    then_branch.()
  end

  def unless
  end

  def unlesselse(_=nil, else_branch=-&gt;{})
    ifelse(else_branch, _)
  end

  def and
    yield
  end

  def or
    self
  end

  def not
    false
  end
end
</code></pre>

<p>And again the other way around:</p>

<pre><code>class FalseClass
  def if
  end

  def ifelse(_=nil, else_branch=-&gt;{})
    else_branch.()
  end

  def unless
    yield
  end

  def unlesselse(unless_branch=-&gt;{}, _=nil)
    ifelse(_, unless_branch)
  end

  def and
    self
  end

  def or
    yield
  end

  def not
    true
  end
end
</code></pre>

<p>A couple of years ago, I wrote the above just for fun and <a href=""http://JoergWMittag.GitHub.Com/b001e/"">even published it</a>. Apart from the fact that the syntax looks different because Ruby uses special operators while I use only methods, it behaves exactly like Ruby's builtin operators. In fact, I actually took <a href=""https://GitHub.Com/RubySpec/RubySpec/blob/master/language/if_spec.rb"">the RubySpec conformance testsuite</a> and <a href=""https://GitHub.Com/JoergWMittag/B001e/tree/master/spec/"">ported it over to my syntax</a> and it passes.</p>
"
"<p>Can I create Ruby classes within functions bodies ?
I seem to be getting error which tells me its not allowed but I think it should be as classes are too objects here.</p>

<pre>
class A
    def method
        class B
        end
    end
end</pre>

<p>This fails with error 'class definition inside method body.
If we cant, why cant we create classes inside methods ?</p>
","2988","","<pre><code>class A
  def method
    self.class.const_set :B, Class.new {
      def foo
        'bar'
      end
    }
  end
end

A.new.method
A::B.new.foo # =&gt; 'bar'
</code></pre>

<p>However, why do you want to assign a constant inside a method? That doesn't make sense: constants are <em>constant</em>, you can only assign to them once which means you can only run your method once. Then, why do you write a method at all, if it is only ever going to be run once, anyway?</p>
"
"<p>I seems to be a very simple and much needed method. I need to remove all non ASCII characters from a string. e.g Â© etc. See the following example.</p>

<pre><code>#coding: utf-8
s = "" Hello this a mixed string Â© that I made.""
puts s.encoding
puts s.encode
</code></pre>

<p>output:</p>

<pre><code>UTF-8
Hello this a mixed str
</code></pre>

<p>ing ┬⌐ that I made.</p>

<p>When I feed this to Watir, it produces following error:incompatible character encodings: UTF-8 and ASCII-8BIT</p>

<p>So my problem is that I want to get rid of all non ASCII characters before using it. I will not know which encoding the source string ""s"" uses.</p>

<p>I have been searching and experimenting for quite some time now.</p>

<p>If I try to use</p>

<pre><code>  puts s.encode('ASCII-8BIT')
</code></pre>

<p>It gives the error:</p>

<pre><code> : ""\xC2\xA9"" from UTF-8 to ASCII-8BIT (Encoding::UndefinedConversionError)
</code></pre>
","2988","","<p>You can just literally translate what you asked into a <code>Regexp</code>. You wrote:</p>

<blockquote>
  <p>I want to get rid of all non ASCII characters</p>
</blockquote>

<p>We can rephrase that a little bit:</p>

<blockquote>
  <p>I want to substitue all characters which don't thave the <code>ASCII</code> property with nothing</p>
</blockquote>

<p>And that's a statement that can be <em>directly</em> expressed in a <code>Regexp</code>:</p>

<pre><code>s.gsub!(/\P{ASCII}/, '')
</code></pre>

<p>As an alternative, you could also use <code>String#delete!</code>:</p>

<pre><code>s.delete!(""^\u{0000}-\u{007F}"")
</code></pre>
"
"<p>How do I create an exclusion for a array map in Ruby.
Here's what I want to achieve,</p>

<pre><code>a = [1,2,3,4]
b = [5,6,7,8]
a.map.each do |x|
  b.map.each do |y|
    if !(x == 1 &amp;&amp; y == 7)
      puts ""#{x} and #{y}""
    elsif !(x == 4 &amp;&amp; y == 8)
      puts ""#{x} and #{y}""
    end
  end
end

1 and 5
1 and 6
1 and 7 # still here
1 and 8
2 and 5
2 and 6
2 and 7
2 and 8
3 and 5
3 and 6
3 and 7
3 and 8
4 and 5
4 and 6
4 and 7
4 and 8 # still here
</code></pre>

<p>However, it doesn't work, how do I add an exception to these values being processed by map? Also if it's possible to use inject/reject/filter function with the same goal.</p>
","2988","","<p>I think it would be a good idea to seperate out the seperate steps:</p>

<ol>
<li>compute the Cartesian Product of the two arrays: <code>a.product(b)</code></li>
<li>filter out the unwanted pairs: <code>reject {|x, y| [[1, 7], [4, 8]].any? {|pair| [x, y] == pair }
}</code></li>
<li>convert to string: <code>map {|pair| pair.join(' and ') }</code></li>
<li>print it: <code>puts</code></li>
</ol>

<p>That's what we end up with:</p>

<pre><code>puts a.product(b).reject {|x, y|
  [[1, 7], [4, 8]].any? {|pair| [x, y] == pair }
}.map {|pair| pair.join(' and ') }
</code></pre>
"
"<p>Is there a list of <a href=""http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"">language codes</a> in YAML or JSON somewhere out there?</p>

<p>Another format is fine, I can convert it if necessary.</p>
","2988","","<p>I think the United Nations or the ISO actually publish that list in CSV format. That would be the ultimate source.</p>

<p>However, I'm not sure if they publish it for free.</p>

<p>EDIT: Actually, the link is in the Wikipedia article you linked to. The US Library of Congress has been designated the official registration authority by the ISO and they publish <a href=""http://LoC.Gov/standards/iso639-2/ISO-639-2_utf-8.txt"">the entire, official, up-to-date list as a trivial to parse text file</a> for free.</p>

<p>The format looks like this:<pre>ara||ar|Arabic|arabe
arc|||Official Aramaic (700-300 BCE); Imperial Aramaic (700-300 BCE)|araméen d'empire (700-300 BCE)
arg||an|Aragonese|aragonais
arm|hye|hy|Armenian|arménien
arn|||Mapudungun; Mapuche|mapudungun; mapuche; mapuce
arp|||Arapaho|arapaho
art|||Artificial languages|artificielles, langues
arw|||Arawak|arawak
asm||as|Assamese|assamais
ast|||Asturian; Bable; Leonese; Asturleonese|asturien; bable; léonais; asturoléonais
ath|||Athapascan languages|athapascanes, langues</pre></p>

<p>That's 5 fields separated by vertical bars:</p>

<ol>
<li>ISO 639-2 Alpha-3 bibliographic code</li>
<li>ISO 639-2 Alpha-3 terminology code</li>
<li>ISO 639-1 Alpha-2 code</li>
<li>English language name(s)</li>
<li>French language name(s)</li>
</ol>

<p>So, this <em>is</em> actually in CSV format, if you interpret that as <em>character separated values</em> instead of <em>comma separated values</em>, which most CSV parsers let you do.</p>
"
"<p>I am interested in writing a toy DVCS.  <br>What is the smallest DVCS around to study ? <br>(I don't need ssl, ssh, svn compatibility etc... it should just be able to do local repositories)</p>
","2988","","<p>The actual core of Git is rather small. Unfortunately, it's not written in a programming language that is amenable to easy understanding, and it is riddled with performance optimizations that are not relevant to the actual operation.</p>

<p>However, there are several alternative implementations of Git, in particular the <a href=""https://Launchpad.Net/Dulwich/"" rel=""nofollow"">Dulwich</a> library, which is written in Python.</p>

<p>There's also <a href=""http://Amp.Carboni.ca/"" rel=""nofollow"">Amp</a>, whose goal is to provide unified interfaces to all major distributed version control systems. At the moment, they only implement Mercurial, but Git, Bazaar and Darcs are planned as well. Now, Mercurial is written in Python and Amp in Ruby which are both similarly expressive, so you might think that the difference isn't that big. However, Amp is designed so that you e.g. use the Mercurial commands on a Git repository or Darcs commands with Bazaar semantics on a Mercurial repository, so there is a <em>very clear</em> separation between those layers. <em>And</em> Amp is designed so that even non-programmers can write their own personalized version control system using Amp's building blocks, so the code is <em>extremely</em> simple and straightforward.</p>
"
"<p><br>I wonder why other languages do not support this feature. What I can understand that C / C++ code is platform dependent so to make it work (compile and execute) across various platform, is achieved by using preprocessor directives. And there are many other uses of this apart from this. Like you can put all your debug printf's inside <code>#if DEBUG ... #endif</code>. So while making the release build these lines of code do not get compiled in the binary.<br> But in other languages, achieving this thing (later part) is difficult (or may be impossible, I'm not sure). All code will get compiled in the binary increasing its size. So my question is ""why do <code>Java, or other modern compiled languages</code> no support this kind of feature?"" which allows you to include or exclude some piece of code from the binary in a much handy way.</p>
","2988","","<p>Many modern languages actually have syntactic metaprogramming capabilities that go way beyond CPP. Pretty much all modern Lisps (Arc, Clojure, Common Lisp, Scheme, newLISP, Qi, PLOT, MISC, ...) for example have <em>extremely powerful</em> (Turing-complete, actually) macro systems, so why should they limit themselves to the crappy CPP style macros which aren't even real macros, just text snippets?</p>

<p>Other languages with powerful syntactic metaprogramming include Io, Ioke, Perl 6, OMeta, Converge.</p>
"
"<p>I come from a background of C, Fortran, Python, R, Matlab, and some Lisp - and I've read a few things on Haskell. What are some neat ideas/examples in J or other languages from the APL family that are unique and not implemented in more common languages? I'm always interested in finding out what I'm missing...</p>
","2988","","<p>I think one of the most interesting aspects of J is that it is one of the very few non-von-Neumann languages that is even <em>remotely</em> mainstream.</p>

<p>Uhm. J mainstream? Well, yeah, compared to <em>other</em> non-von-Neumann languages it is! There are only <em>very few</em> non-von-Neumann languages to begin with, most of those only live inside some PhD thesis and were never actually implemented and those that <em>were</em> implemented usually have a userbase of 1 if even that. Generally, they are considered successful if at least one of the users doesn't sit on the same floor as the guy who invented it.</p>

<p>Compared to <em>that</em>, J <em>is</em> mainstream. In particular, J is based on John Backus's FP from his seminal Turing Award Lecture ""<em>Can Programming be Liberated from the von Neumann Style?</em>"" and it is AFAIK the only working implementation of it. (I don't think Backus ever actually implemented FP, for example.)</p>
"
"<p>im new to ruby and rails.</p>

<p>in RoR3 a controller inherits from the <code>ActionController::Base</code></p>

<pre><code>request.env[""SERVER_ADDR""]
</code></pre>

<p>so request is a method in Base class (that is inside the ActionController module)?</p>

<p>what is <code>env</code> then and <code>[""SERVER_ADDR""]</code>?</p>

<p>would be great if someone could make a little code example...that would be very helpful to understand!</p>

<p>thanks!</p>
","2988","","<blockquote>
<pre><code>request.env[""SERVER_ADDR""]
</code></pre>
</blockquote>

<ol>
<li><p><code>request</code> is <em>either</em> </p>

<p>a. dereferencing the local variable <code>request</code> <em>or</em> </p>

<p>b. sending the message <code>:request</code> with no arguments to the implicit receiver <code>self</code>, </p></li>
<li><code>env</code> is sending the message <code>:env</code> with no arguments to the object obtained by dereferencing <code>request</code> or the object returned in response to sending the message <code>:request</code> to <code>self</code> in step 2, </li>
<li><code>[""SERVER_ADDR""]</code> is sending the message <code>:[]</code> with the argument <code>""SERVER_ADDR""</code> to the object returned in response to sending the message <code>:env</code> in step 2 and </li>
<li><code>""SERVER_ADDR""</code> is a string literal.</li>
</ol>

<p>You could more explicitly write it like this:</p>

<pre><code>self.request.env.[](""SERVER_ADDR"")
</code></pre>

<p>or even more explicit like this:</p>

<pre><code>self.request().env().[](""SERVER_ADDR"")
</code></pre>

<p>and even full out:</p>

<pre><code>self.send(:request).send(:env).send(:[], ""SERVER_ADDR"")
</code></pre>
"
"<p>I like judicious use of the ternary, conditional operator.  To my mind it's quite succinct.</p>

<p>However, in ruby, I find I'm often testing predicate methods, which already have their own question marks:</p>

<pre><code>some_method( x.predicate? ? foo : bar )
</code></pre>

<p>I'm jarred by those two question marks so close to each other.  Is there an equivalently compact and readable alternative?</p>
","2988","","<p>The reason why the conditional operator is needed in C, is because the conditional statement is, well, a statement, i.e. it doesn't (and cannot) return a value. So, if you want to return a value from conditional code, you're out of luck. That's why the conditional operator had to be added: it is an expression, i.e. it returns a value.</p>

<p>In Ruby, however, the conditional operator is completely superfluous because there are no statements is Ruby anyway. <em>Everything</em> is an expression. Specifically, there is no <code>if</code> statement in Ruby, there is only an <code>if</code> expression.</p>

<p>And since <code>if</code> is an expression anyway, you can just use it instead of the cryptic conditional operator:</p>

<pre><code>some_method( if x.predicate? then foo else bar end )
</code></pre>

<p>The only thing you have to remember is that the predicate needs to be terminated by either a newline, a semicolon or a <code>then</code>. So, the first three times you do this, you will turn</p>

<pre><code>if cond
  foo
else
  bar
end
</code></pre>

<p>into</p>

<pre><code>if cond foo else bar end
</code></pre>

<p>and wonder why it doesn't work. But after that, the <code>then</code> (or semicolon) will come naturally:</p>

<pre><code>if cond; foo else bar end
if cond then foo else bar end
</code></pre>
"
"<p>When developing &amp; debugging, I sometimes wish I could write a 1-liner that dumped the names, types &amp; values of a bunch of variables.  The problem is I don't know how to access the name of a variable, if I can at all.</p>

<p>Here is a first attempt:</p>

<pre><code>foo = 1
bar = ""42""
baz = Hash.new

[foo, bar, baz].each do |v|
    puts ""#{v.???} = (#{v.class}) #{v}""
    end
</code></pre>

<p>I'd like the output of this program to be something like:</p>

<pre><code>foo = (Fixnum) 1 
bar = (String) 42 
baz = (Hash) ...
</code></pre>

<p>I don't know what <code>???</code> should be above.  Can this be done?</p>
","2988","","<pre><code>foo = 1
bar = ""42""
baz = Hash.new

Varspec = Struct.new(:name, :type, :value, :inspect_str) do
  def to_s
    ""#{name} = (#{type}) #{inspect_str}""
  end
end

lvars = local_variables.map {|lvar|
  lvar = lvar.to_s
  val = eval(lvar)
  val = val.dup rescue val
  Varspec.new(lvar, val.class, val, val.inspect)
}

puts lvars
# baz = (Hash) {}
# bar = (String) ""42""
# foo = (Fixnum) 1
</code></pre>

<p>Or, you could just use a debugger. That's what they were invented for, after all.</p>
"
"<p>So ruby 1.9 is really nice in that it'll automatically require rubygems, and hence when you call <code>require 'somegem'</code> without first requiring rubygems it'll work, and that's generally awesome.</p>

<p>But I have a ton of shell scripts using ruby, and they generally don't rely on rubygems. Shell tools should run instantly, and loading rubygems for nothing is a major drag, mostly because it involves a bunch of disk operations with scattered small files.</p>

<p>I want to be able to tell ruby, when running these shell scripts, to skip loading gems. Ideally, something like <code>#!ruby --no-rubygems</code> in the shebang line.</p>

<p>Is there such a thing? Or maybe a compile option that'll tell ruby rubygems must be required manually?</p>
","2988","","<p>Yes, you can use the <code>--disable-gems</code> option.</p>

<p>Note that whether or not passing options in the shebang line works depends on your operating system. Some operating systems don't support passing options <em>at all</em>, some only support passing <em>one</em> option or argument.</p>

<p>So, if you have for example</p>

<pre><code>#!/usr/bin/env ruby
</code></pre>

<p>Then it's pretty unlikely that you will be able to attach the option to the end. If OTOH you change that to</p>

<pre><code>#!/usr/local/bin/ruby --disable-gems
</code></pre>

<p>Then you have hardwired the location of the Ruby binary into your script.</p>

<p>And of course there are operating systems that don't interpret shebang lines <em>at all</em>. (After all, they were never specified in any standard, and aren't even properly documented.)</p>

<p>An alternative would be to set the <code>RUBYOPT</code> environment variable in your shell environment and simply switch to a different environment with <code>RUBYOPT</code> unset (or set to <code>-w</code>, my personal favorite) for your Ruby development.</p>
"
"<p>Can't i do it like this:</p>

<pre><code>class Hardware

before_filter

  def before_filter
    puts ""ge""
  end

end
</code></pre>

<p>It says before_filter is undefined method or variable when I instantiate it</p>

<pre><code>hd = Hardware.new
</code></pre>

<p>because ive seen others put a method name in a class before. Just wondering how it works. Thanks</p>
","2988","","<p>There's two problems with your code:</p>

<ol>
<li>You are calling a <em>class</em> method, but your are defining an <em>instance</em> method.</li>
<li>You are calling the method <em>before</em> it has been defined.</li>
</ol>

<p>Both of these obviously cannot work.</p>

<p>This would work:</p>

<pre><code>class Hardware
  def self.before_filter
    puts ""ge""
  end

  before_filter
end
</code></pre>
"
"<p>In RSpec, what's the difference between using <code>should == ...</code> and <code>should eql(...)</code>? I noticed that the RSpec documentation always uses <code>eql</code>, but <code>==</code> is less typing and easier to read. What am I missing?</p>
","2988","","<p>It's rather simple, really: <code>should ==</code> sends the <code>==</code> message to the test subject, <code>should eql</code> sends the <code>eql?</code> message to the test subject. In other words: the two different tests send two completely different messages which invoke two completely different methods and thus do two completely different things. In particular, <code>eql?</code> is stricter than <code>==</code> but less strict than <code>equals?</code>.</p>
"
"<p>What the current stable recommended release of Ruby? 1.8.7 or 1.9.x?</p>

<p>I will be deploying a rails(v 2.3.8) app &amp; was wondering what version of ruby should I be using. My deployment environment is Ubuntu/Apache/passenger (mod_rails)</p>

<p>RubyOnRails.org website says - ""We recommend Ruby 1.8.7 for use with Rails""</p>

<p>I want to know - whats the recommended practice &amp; what other folks are using. Also what are kind the ruby + rails + gems compatibility issues, that one should watch out for.</p>

<p>I would love to use 1.9.x, since I have heard it provides significant performance improvements.</p>
","2988","","<blockquote>
  <p>What the current stable recommended release of Ruby? 1.8.7 or 1.9.x?</p>
</blockquote>

<p>It depends on what exactly you are talking about: deployment to production? Development? Testing?</p>

<p>Personally, for production, I would recommend the not-yet-but-real-soon-now-released Ruby 1.9.2 if you can get away with it, otherwise stick with Ruby 1.8.7 plus Marc-André Lafortune's <code>backports</code> library for the time being.</p>

<p>For development, use Ruby 1.9.2.</p>

<p>For testing, use Ruby 1.9.2 if you deploy to Ruby 1.9.2, otherwise if you deploy to Ruby 1.8.7, use <em>both</em> Ruby 1.9.2 and Ruby 1.8.7 (to ensure that you don't accidentally introduce any ""1.8isms"" that would prevent you from updating later. This includes dependencies on third-party libraries that don't yet work on Ruby 1.9.)</p>

<p>I don't think it makes much sense to use Ruby 1.9.1 right now. Ruby 1.9.2 is going to be released very soon and it has some small but important improvements and changes plus some really nifty enhancements over 1.9.1.</p>

<blockquote>
  <p>I will be deploying a rails(v 2.3.8) app &amp; was wondering what version of ruby should I be using. My deployment environment is Ubuntu/Apache/passenger (mod_rails)</p>
</blockquote>

<p>AFAIK, the recommended version for Rails 2 right now is Ruby 1.8.7, however for Rails 3 it is likely going to be Ruby 1.9.2.</p>

<blockquote>
  <p>[...] what are kind the ruby + rails + gems compatibility issues, that one should watch out for.</p>
</blockquote>

<p>Upgrading from Ruby 1.8 to Ruby 1.9 is pretty easy but it is somewhat time-consuming. (In my case, I had to change almost all of my files in some way or another, but all of the changes were completely trivial.) Unfortunately, this means that there are still third-party libraries out there that don't work on Ruby 1.9. And if you depend on one of those, then you are screwed. You can get an overview of what works and what doesn't on the <a href=""http://IsItRuby19.Com/"" rel=""nofollow""><em>Is It Ruby 1.9?</em></a> website.</p>

<p>Note, however, that there is usually a much bigger problem than what version of Ruby you are using and that is what <em>implementation</em> of Ruby you are using. Pretty much all implementations of Ruby have their own private extension API and extensions that are for example written for MRI, don't necessarily work on YARV, REE or Rubinius and they <em>certainly</em> don't work on JRuby or IronRuby. For some strange reason, Ruby programmers seem to hate Ruby and much prefer writing C instead, which unfortunately means that their code is intimately tied to one particular implementation of Ruby and doesn't work in others.</p>

<blockquote>
  <p>I would love to use 1.9.x, since I have heard it provides significant performance improvements.</p>
</blockquote>

<p>That is a very common misconception that unfortunately doesn't want to die. Ruby 1.9 is in no way, shape or form faster (or slower) than Ruby 1.8, for the simple reason that Ruby 1.9 is a programming language and a programming language is just a bunch of abstract mathematical rules. A programming language isn't fast or slow. It just <em>is</em>. You cannot execute a bunch of abstract mathematical rules.</p>

<p>The only thing that is relevant when it comes to performance is which <em>execution engine</em> you are using, the version of the language is completely irrelevant.</p>

<p>Right now, there are five Ruby execution engines that are generally considered to be of production-ready quality: IronRuby 1.1, JRuby 1.5.1, Rubinius 1.0.1, YARV 1.9.1-p429 (and also I personally consider YARV 1.9.2-RC2 to be production-ready) and MRI 1.8.7-p299.</p>

<p>IronRuby 1.1 is an implementation of Ruby 1.8.6 for the ISO CLI (or more specifically for the DLR, which is a Dynamic Language Runtime for the ISO CLI).</p>

<p>JRuby 1.5.1 is an implementation of <em>both</em> Ruby 1.9.2-trunk (as of revision 24787) and Ruby 1.8.7-p249 for the JVM.</p>

<p>Rubinius 1.0.1 is an implementation of Ruby 1.8.7 (I don't know which patchlevel) for Unix-ish systems.</p>

<p>YARV 1.9.1-p429 is an implementation of Ruby 1.9.1-p429 for Unix-ish systems as well as Windows (plus a couple of others).</p>

<p>MRI 1.8.7-p299 is an implementation of Ruby 1.8.7-p299 for Unix-ish systems as well as Windows (plus a couple of others).</p>

<p>Then, there is Ruby Enterprise Edition 1.8.7-2010.02. REE is a minor variant of MRI, produced by Phusion, the same company that also produces Passenger. In particular, REE 1.8.7-2010.02 is based on MRI 1.8.7-p249 (and thus implements Ruby 1.8.7-p249), but it adds some backports for compatibility problems that were fixed in Ruby 1.8.7-p299. The main difference between REE and MRI, however, is that while MRI is specifically tuned for short-running scripts which don't allocate much memory, REE is specifically tuned for long-running server processes which allocate significant amounts of memory.</p>

<p>In terms of performance, in my personal experience, JRuby is the fastest, and it doesn't actually matter whether you run it in 1.8 mode or 1.9 mode. Although you have to be careful: JRuby itself doesn't actually do any interesting work, it mostly depends on the JVM for performance. Therefore, you need to run JRuby on a modern high-performance JVM such as the server version of Oracle HotSpot 1.6.0u21 with the C2 compiler or Oracle JRockit R28.0.1 for it to really shine. The difference becomes really dramatic when running multithreaded code on a multicore machine (such as for example Azul Systems' 864-core Java appliance), because MRI, YARV, REE and Rubinius cannot actually run multiple threads in parallel and thus are only ever going to use at most one core, whereas JRuby and IronRuby will happily use all available cores.</p>

<p>In most benchmarks, YARV is equal to or slightly ahead of JRuby, but I have found that those benchmarks tend not to be very representative of the code I write, so for my code, JRuby is almost always significantly faster than YARV. Unless your company happens to be in the business of selling Fibonacci Numbers, the Ruby Benchmark Suite is probably not going to tell you much, especially since those benchmarks tend to only run for seconds, whereas Rails apps tend to run for months.</p>

<p>However, note that Phusion Passenger only supports MRI, REE and YARV.</p>
"
"<p>What I need is a directory which the user can handle as a single file in the Windows explorer. Does something like this exist? If not, what comes closest?</p>
","2988","","<p>The closest thing is probably Alternate Data Streams, although those are more akin to MacOS Named Forks than Bundles.</p>

<p>There are also some special cases, for example if you save a website with Internet Explorer you get an HTML file and a folder which are linked together.</p>
"
"<p><strong>Does anyone know of commercial server product for managing GIT repos analogous to <a href=""http://www.fogcreek.com/Kiln/"">FogCreek's Kiln</a>?</strong></p>

<p>If any, it would be nice to get some rundown of some most notable features it boasts.</p>

<p>PS - it does not have to be necessarily commercial software ... commercially supported would do just as fine, but it has to be installable server software, not hosted service.</p>
","2988","","<p><a href=""https://Gitorious.Org/gitorious/"">Gitorious</a>, the software that runs <a href=""https://Gitorious.Org/"">Gitorious.Org</a> is Open Source and can be installed on your own server, and I'm pretty sure if you are willing to pay a decent price, someone would be willing to support it. <a href=""http://Shortcut.No/"">Shortcut AS</a>, for example, the company which hosts Gitorious.Org and was founded by Gitorious's original author and current lead developer Johan Sørensen, offers commercial support and customized installations both public and private.</p>

<p>And <a href=""https://GitHub.Com/"">GitHub</a> has a commercially supported product called <a href=""http://FI.GitHub.Com/"">GitHub:FI</a> (Firewall Install).</p>
"
"<p>Does reflection break the idea of private methods? Because private methods can be accessed from outside of the class? (Maybe I don't understand the meaning of reflection or miss something else, please tell me)
<a href=""http://en.wikipedia.org/wiki/Reflection_%28computer_science%29"" rel=""nofollow"">http://en.wikipedia.org/wiki/Reflection_%28computer_science%29</a></p>

<p><strong>Edit:</strong>
If relection breaks the idea of private methods - do we use private methods only for program logic and not for program security?</p>

<p>Thanks</p>
","2988","","<p>No, reflection doesn't break the idea of private methods. At least not per se. There is nothing that says that reflection can't obey access restrictions.</p>

<p><em>Badly designed</em> reflection breaks the idea of private methods, but that doesn't have anything to do with reflection per se: <em>anything</em> which is badly designed can break the idea of private methods. In particular, a bad design of private methods can also obviously break the idea of private methods.</p>

<p>What do I mean by <em>badly designed</em>? Well, as I said above, there is nothing stopping you from having a language in which reflection obeys access restrictions. The problem with this is that e.g. debuggers, profilers, coverage tools, IntelliSense, IDEs, tools in general <em>need</em> to be able to violate access restrictions. Since there is no way to present different different versions of reflection to different clients, most languages opt for tools over safety. (E is the counterexample, which has absolutely no reflective capabilities whatsoever, as a conscious design choice.)</p>

<p>But, who says that you cannot present different versions of reflection to different clients? Well, the problem is simply that in the classical implementation of reflection, all objects are reponsible for reflecting on themselves, and since there is only one of every object, there can be only version of reflection.</p>

<p>So, where does the idea of <em>bad design</em> come in? Well, note the word ""responsible"" in the above paragraph. Every object is responsible for reflecting on itself. Also, every object is responsible for whatever it is that it was written for in the first place. In other words: every object has at least <em>two</em> responsibilities. This violates one of the basic principles of object-oriented design: the Single Responsibility Principle.</p>

<p>The solution is rather simple: break up the object. The original object is simply responsible for whatever it was originally written for. And there is another object (called a <em>Mirror</em> because it is an object that reflects other objects) which is responsible for reflection. And now that the responsibility for reflection is broken out into a separate object, what's stopping us from having not one, but two, three, <em>many</em> Mirror Objects? One that respects access restrictions, one that only allows an object to reflect upon itself but not any other objects, one that only allows introspection (i.e. is read-only), one that only allows to reflect on read-only callsite information (i.e. for a profiler), one that gives full access to the entire system including violating access restrictions (for a debugger), one that only gives read-only access to the method names and signatures and respects access restrictions (for IntelliSense) and so on &hellip;</p>

<p>As a nice bonus, this means that Mirrors are essentially Capabilities (in the capability-security sense of the word) for reflection. IOW: Mirrors are the Holy Grail on the decade-long quest to reconcile security and runtime dynamic metaprogramming.</p>

<p>The concept of Mirrors was originally invented in <a href=""http://SelfLanguage.Org/"" rel=""nofollow"">Self</a> from where it carried over into <a href=""http://Strongtalk.Org/"" rel=""nofollow"">Animorphic Smalltalk/Strongtalk</a> and then <a href=""http://NewspeakLanguage.Org/"" rel=""nofollow"">Newspeak</a>. Interestingly, the Java Debugging Interface is based on Mirrors, so the designers of Java (or rather the JVM) clearly knew about them, but Java's reflection is broken.</p>
"
"<p>I want to define a Nibble type.</p>

<p>I want that if the user sets the value higher than <code>0xf</code>, it should generate a compiler error.</p>

<p>Is this possible?</p>
","2988","","<p>It looks like the easiest way to achieve what you want is a subrange type. Languages which support subrange types are pretty much all languages in the Algol68 line of succession (Algol68, Pascal, Modula-2, Oberon, Component Pascal) and their cousings and derivatives (Turbo Pascal, Borland Pascal, FreePascal, Delphi, Kylix, Object Pascal) as well as Ada. I believe that you can implement subrange types in C++ using some heavy template-fu. You can probably implement them in languages with more expressive type systems, such as Scala, Haskell, ML, Agda, Epigram, Guru.</p>

<p>I have no idea why not more languages support subrange types. They are obviously useful, easy to use, easy to understand, easy to implement.</p>

<p>Another possibility might be Fortress. In Fortress, the various fixed-width integer types are not actually built into the language, they are user-defined. So, there is no reason why you should not be able to build <em>your own</em> user-defined fixed-width integer type.</p>
"
"<p>Notes:  I've thought about Radix sort, bucket sort, counting sort.</p>

<p>Is there anyway to achieve big O(n)?</p>
","2988","","<p>For anyone interested, I quickly threw together this piece of Ruby, before reading the answers:</p>

<pre><code>module Enumerable
  def counting_sort(k)
    reduce(Array.new(k+1, 0)) {|counting, n| counting.tap { counting[n] += 1 }}.
    map.with_index {|count, n| [n] * count }.flatten
  end
end

ary = Array.new(1_000_000){ rand(100) + 1 }
ary.counting_sort(100) # I'll spare you the output :-)
</code></pre>

<p>I didn't even know it had a name. It should convey the idea even to someone who has never seen Ruby before. (The only thing you need to know is that the K combinator is spelled <code>tap</code> in Ruby.)</p>

<p>And it really is pretty darn fast, although unfortunately I have not been able to beat the builtin hand-optimized O(n&thinsp;log&thinsp;n) sort, which is written in C in MRI and YARV and Java in JRuby.</p>
"
"<p>I have seen programmers ""battling"" it out with really complex mathematical problems in their codes, particularly in the fields of game programming, physics programming, graphics programming, etc. I am a web developer, and I wonder if there are math concepts out there that I can use for web programming. I started web programming a year and 2 months ago, and all I have dealt with were complex analysis of systems, database queries, user interface designs, simple data structures, complex data manipulation and interpretation (regexes, parsing, etc) but I have not (yet) found a need for complex math.</p>

<p>So to repeat the question, are there mathematical concepts out there that can leverage my web development skills? If there are, what scenarios are do they come as an advantage or indispensable?</p>
","2988","","<p>There is a very nice <a href=""http://Vimeo.Com/5318303/"" rel=""nofollow"">presentation</a> and <a href=""http://Amazon.Com/dp/143022844X/"" rel=""nofollow"">upcoming book</a> by <a href=""http://BioSimilarity.BlogSpot.Com/"" rel=""nofollow"">Gregory Meredith</a> on Monadic Design Patterns for the Web. (There's also going to be a Video Lecture Series about this topic by Gregory Meredith himself on <a href=""http://Channel9.MSDN.Com/"" rel=""nofollow"">Channel9</a> sometime in the next months.) It probably doesn't get more mathy than Monads or Category Theory (which is where Monads come from) in general.</p>

<p>Another nice example is the fact that Interactive Programming (and especially the Iterator Design Pattern) and Reactive Programming (and especially the Subject/Observer Design Pattern) are category-theoretical duals of each other. Also, it turns out that the Iterator Design Pattern can be implemented as an instance of the List Monad and the Subject/Observer Design Pattern can be implemented as an instance of the Continuation Monad. Since both are Monads, this basically means that you can deal with <em>both</em> using <em>the same tools</em>.</p>

<p>In other words, you can deal with <em>event streams</em> (which are generally thought hard to deal with) the same way you do with <em>collections</em> (which everybody already knows how to do). For example, in .NET, this means that you can ""query"" event streams using LINQ, since really LINQ is nothing but Monad Comprehensions dressed up as SQL queries so that enterprise programmers don't get scared by big words such as ""Monad"".</p>

<p>And, of course, Web Programming is <em>all about</em> Reactive Programming. The browser constantly fires events at you that you must react to. And all of the asynchronous I/O stuff (database, file, you name it) is all about firing off your I/O request and then waiting for a completion event.</p>
"
"<p>What is the language used to write operating systems (Windows) or a boot CD?</p>
","2988","","<p>Operating Systems can be written in pretty much <em>any</em> language, and there are plenty of Operating Systems written in an whole bunch of languages. Just a couple of examples:</p>

<ul>
<li>Singularity is written in Sing# which is a superset of Spec#, which in turn is a superset of C#</li>
<li>House is written in Haskell</li>
<li>all of the Lisp OS's are written in Lisp</li>
<li>there are several Smalltalk OSs written in Smalltalk</li>
<li>many embeddded OSs are written in Forth</li>
<li>SharpOS and Cosmos are written in C#</li>
<li>NewOS and JNode are written in Java</li>
<li>Ununumium used to be written largely in Python, but now they have shifted their focus, it is written largely in assembly</li>
<li>You can argue whether JS/UX is an OS or not, but it is written in JavaScript</li>
<li>Modula-2 was explicitly invented for the purpose of writing an OS</li>
<li>Oberon also was explicitly invented for OS development</li>
<li>the original MacOS was written in Pascal</li>
<li>the original OS/400 was written in Modula-2 and PL/MI</li>
<li>Eleanor McHugh has some preliminary ideas for writing an OS in Ruby</li>
<li>the Windows NT kernel is written largely in C, however the farther away you get from the kernel, there might be some C++ or even C# in there</li>
</ul>
"
"<p>I am trying to construct a regex to extract a domain given a url.</p>

<p>for:</p>

<pre><code>http://www.abc.google.com/
http://abc.google.com/
https://www.abc.google.com/
http://abc.google.com/
</code></pre>

<p>should give:</p>

<pre><code>abc.google.com
</code></pre>
","2988","","<p>Your question is a little bit vague. Can you give a precise specification of what it is <em>exactly</em> that you want to do? (Preferable with a testsuite.) Right now, all your question says is that you want a method that always returns <code>'abc.google.com'</code>. That's easy:</p>

<pre><code>def extract_domain
  return 'abc.google.com'
end
</code></pre>

<p>But that's probably not what you meant &hellip;</p>

<p>Also, you say that you need a <code>Regexp</code>. Why? What's wrong with, for example, using the <code>URI</code> class? After all, parsing and manipulating URIs is <em>exactly</em> what it was made for!</p>

<pre><code>require 'uri'

URI.parse('https://abc.google.com/').host # =&gt; 'abc.google.com'
</code></pre>

<p>And lastly, you say you are ""<em>trying to extract a domain</em>"", but you never specify what you <em>mean</em> by ""domain"". It looks you are sometimes meaning the FQDN and sometimes randomly dropping parts of the FQDN, but according to what rules? For example, for the FQDN <code>abc.google.com</code>, the domain name is <code>google.com</code> and the host name is <code>abc</code>, but you want it to return <code>abc.google.com</code> which is not just the domain name but the <em>full</em> FQDN. Why?</p>
"
"<p>How can I run PHP on JVM (akin to Jython and JRuby)? I am aware of the following:</p>

<p><a href=""http://quercus.caucho.com/"">Quercus</a>, which appears to be <s>dead</s> alive and well.<br>
Seems like I've been visiting the <a href=""http://quercus.caucho.com/"">wrong website</a>.</p>

<p><a href=""http://www.projectzero.org/php/"">webSphere sMash</a>, that appears to have <s>no documentation</s> <a href=""https://www.ibm.com/developerworks/community/forums/html/topic?id=77777777-0000-0000-0000-000014910522&amp;ps=25"">been shutdown</a></p>

<p>Is there a more mature project for this?</p>
","2988","","<p>AFAIK, Quercus and P8 are the only two PHP compilers for the JVM, and you already ruled both of them out.</p>

<p>Although I think you are a little bit too harsh: Quercus had its latest release just 23 <em>days</em> ago. Calling it ""dead"" seems a little premature. And why do you need documentation for P8? <em>The whole point</em> is that it's just PHP. All the documentation you need is right there on PHP.Net.</p>
"
"<p>There is a very noticeable difference in application initiation time between running my specs from the command line with ruby 1.9.x vs. 1.8.7.  My application initiates much faster with ruby 1.8.7 than with ruby 1.9.1 or 1.9.2.  The application initiation difference is approximately 18 seconds.  It takes about 5 seconds for my app to initialize with 1.8.7 and 23 seconds with 1.9.1 and 1.9.2.</p>

<p>Application initialization time is not a big deal for production, but it is a very big deal for BDD development.  Every time I change my code and run my specs, I have to wait an additional 18 seconds per iteration.</p>

<p>I assume this application initialization time is attributed to YARV compiling bytecode as my application initializes.</p>

<p>Am I right about my YARV slowing down my application initialization, and is there a way to disable YARV on the command line.  It would be very nice to be able to disable YARV only when I am running my specs.</p>
","2988","","<p>YARV is a pure Ruby compiler. If you disable it, there's nothing left.</p>

<p>More precisely: YARV is a multi-phase implementation, where each of the phases is single-mode. It consists of a Ruby-to-YARV compiler and a YARV interpreter. If you remove the compiler, the only thing you are left with is the YARV bytecode interpreter. Unless you want to start writing your app in YARV bytecode, that interpreter is not going to be of much use to you.</p>

<p>This is in contrast to mixed-mode implementations such as JRuby and IronRuby which implement multiple execution modes (in particular, both a compiler and an interpreter) within a <em>single</em> phase. If you turn off the compiler in JRuby or IronRuby, you are still left with a usable execution engine, because they both also contain an interpreter. In fact, JRuby actually started out as a pure interpreter and added the compiler later and IronRuby started out as pure <em>compiler</em> and they added an interpreter <em>exactly</em> because of the same problem that you are seeing: compiling unit tests is simply a waste of time.</p>

<p>The only interpreted implementation of Ruby 1.9 right now is JRuby. Of course, there you have the whole JVM overhead to deal with. The best thing you can do is try how fast you can get JRuby to start up (use the nightly 1.6.0.dev builds from <a href=""http://CI.JRuby.Org/snapshots/"">http://CI.JRuby.Org/snapshots/</a> since both 1.9 support and startup time are heavily worked on right this very moment) using either some very fast starting desktop-oriented JVM like IBM J9 or try JRuby's Nailgun support, which keeps a JVM running in the background.</p>

<p>You could also try to get rid of RubyGems, which generally eats up quite a lot of startup time, especially on YARV. (Use the <code>--disable-gem</code> commandline option to truly get rid of it.)</p>
"
"<p>As a ruby newbie, I was wondering, will gems ever conflict with eachother? For example, if 2 gems overrode the &lt;&lt; method on array, which would win, or is there something to stop this?</p>

<p>Thanks</p>
","2988","","<p>I assume you are talking about redefining methods, not overriding them, right? If two libraries overrode the same method in two different subclasses, there wouldn't be any problem.</p>

<p>If two or more libraries redefine the same method, then whichever one happens to be loaded last wins. In fact, this is actually no different than just <em>one</em> library redefining a method: the Ruby interpreter provides an implementation of <code>Array#&lt;&lt;</code> for you, and if you redefine it, your definition wins, simply because it came later.</p>

<p>The best way to stop this is simple: don't run around screwing with existing methods. And don't use libraries that do. The <code>-w</code> commandline flag to enable warnings is very helpful there, since at least in Ruby 1.9.2 it prints a warning if methods get redefined.</p>

<p>In Ruby 2.0, there will probably be some kind of mechanism to isolate method (re-)definitions into some kind of namespace. I wouldn't hold my breath, though: these so-called <a href=""http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/26362"" rel=""nofollow""><em>selector namespaces</em></a> have been talked about in the Ruby community for almost 10 years now, and in the Smalltalk community even longer than that, and AFAIK nobody has ever produced a working implementation or even a working design for Ruby. A newer idea is the idea of <a href=""http://scg.unibe.ch/research/classboxes"" rel=""nofollow""><em>Classboxes</em></a>.</p>
"
"<p>Do any proposed, or implemented languages fit in the same (enormous) niche as C, with the intention of being an alternative, while maintaining all the applicability to OS, high performance, embedded and other roles?</p>
","2988","","<p>There are quite a number of languages that were explicitly designed to fit all of that niche:</p>

<ul>
<li><a href=""http://BitC-Lang.Org/"">BitC</a></li>
<li><a href=""http://Cyclone.TheLanguage.Org/"">Cyclone</a></li>
<li>Forth</li>
<li>Mesa</li>
<li>CPL</li>
<li>BCPL (simplified version of CPL, implementation language of MULTICS)</li>
<li>B (Ken Thompsons first try at a systems programming language, based loosely on BCPL, precursor to C)</li>
<li>Ada</li>
<li><a href=""http://GoLang.Org/"">Go</a></li>
<li><a href=""http://DigitalMars.Com/d/"">D</a></li>
<li>C++</li>
<li>Modula-2 (specifically designed for the Lilith personal computer as a successor to Pascal for systems programming, also used by IBM as the implementation language for the original OS/400)</li>
<li>Oberon (specifically designed as a simpler successor to Modula-2)</li>
<li>Component Pascal (object-oriented successor to Oberon, despite the name it is not a direct successor to Pascal)</li>
<li>Modula-3 (despite the name not a successor to Modula-2 but an independent development)</li>
<li><a href=""http://Wikipedia.Org/wiki/Sing_Sharp"">Sing#</a> (the implementation language of Microsoft Research's Singularity Research OS)</li>
<li>Limbo (language for the Inferno operating system (successor to Plan 9 (successor to Unix)))</li>
<li><a href=""http://Ooc-Lang.Org/"">Ooc</a></li>
<li>Erlang (maybe not for operating systems, but embedded realtime systems, especially in the telco industry (phone switches etc.), also lately (somewhat surprising to Erlang's inventors, actually) web servers, databsase systems, etc.)</li>
</ul>

<p>Interestingly, there are also a number of languages that were <em>not</em> specifically designed to fill that niche, but that have been very successfully <em>used</em> in that niche:</p>

<ul>
<li>Smalltalk (several Smalltalk OSs, embedded systems, microcontrollers, realtime systems, most famous: the Tektronix TDS500 series of digital oscilloscopes)</li>
<li>Lisp (several Lisp OSs, embedded systems, microcontrollers, some NASA spacecraft)</li>
<li>Java (several Java OSs (JNode, NewOS), embedded systems, microcontrollers, smartcards)</li>
<li>C# (several OSs (Cosmos, SharpOS), Mono is used in High-Performance Computing)</li>
<li>Haskell (the House OS, the seL4 verified microkernel)</li>
<li>Pascal (MacOS)</li>
</ul>

<p>There's also a lot of languages that have not yet been used in that niche, but that certainly <em>could</em> be. (Mostly that is because those language communities themselves have been so indoctrinated by the ""you can only write operating systems in C"" bullshit that they actually believe their own language to be unusable.)</p>

<ul>
<li>Ruby</li>
<li>Python</li>
<li>ECMAScript (which <em>is</em> actually used for writing high-performance webservers lately)</li>
</ul>

<p>[Note that for each one of the three categories I listed there are literally thousands more languages that fit in there.]</p>

<p>In fact, one sometimes gets the feeling that languages which are <em>not</em> specifically designed for, say, operating system programming are actually <em>better</em> for that kind of thing. Compare, for example, the level of innovation, the stability, number of security holes, performance in something like a Smalltalk OS from the 1970s and Windows or OSX from 2010.</p>

<p>Personally, I believe that this is based on some deep-seated myths in the systems programming community. They believe that systems programming in a language with, say, strong typing, type safety, memory safety, pointer safety, automatic storage management is impossible and that the only way to get performance or realtime guarantees is to forego powerful abstraction facilities. However, it turns out that when you try to design a programming language for <em>humans</em> instead of machines, then humans can actually understand the programs they wrote, find security holes, fix bugs and locate and fix performance bottlenecks much better in a 1 line monad comprehension than in a 100 line for loop.</p>

<p>For example SqueakNOS, which is a variant of the Squeak Smalltalk system that runs without an OS (in other words: it <em>is</em> the OS) has pretty much all of the features that you would expect from a modern OS (graphical user interface, ...) plus some that you don't (embedded scripting language that can modify every single piece of the OS at runtime) and weighs in at just 300k SLOC and boots in less than 5 seconds while e.g. Windows weighs in at 50 <em>million</em> SLOC.</p>
"
"<p>Let's say, I want to separate certain combinations of elements from an array. For example</p>

<pre><code>data = %w{ start before rgb 255 255 255 between hex FFFFFF after end }
rgb, hex = [], []
data.each_with_index do |v,i|
  p [i,v]
  case v.downcase
    when 'rgb' then rgb  = data.slice! i,4
    when 'hex' then hex  = data.slice! i,2
  end
end
pp [rgb, hex, data]
# &gt;&gt; [0, ""start""]
# &gt;&gt; [1, ""before""]
# &gt;&gt; [2, ""rgb""]
# &gt;&gt; [3, ""hex""]
# &gt;&gt; [4, ""end""]
# &gt;&gt; [[""rgb"", ""255"", ""255"", ""255""],
# &gt;&gt;  [""hex"", ""FFFFFF""],
# &gt;&gt;  [""start"", ""before"", ""between"", ""after"", ""end""]]
</code></pre>

<p>The code have done the correct extraction, but it missed the elements just after the extracted sets. So if my data array is</p>

<pre><code>data = %w{ start before rgb 255 255 255 hex FFFFFF after end }
</code></pre>

<p>then</p>

<pre><code>pp [rgb, hex, data]
# &gt;&gt; [[""rgb"", ""255"", ""255"", ""255""],
# &gt;&gt;  [],
# &gt;&gt;  [""start"", ""before"", ""hex"", ""FFFFFF"", ""after"", ""end""]]
</code></pre>

<p>Why does it happen? How to get those missed elements inside <code>#each_with_index</code>? Or may be there is a better solution for this problem assuming that there are much more sets to extract?</p>
","2988","","<p>The problem is that you are <em>mutating</em> the collection <em>while</em> you are iterating over it. This cannot <em>possibly</em> work. (And in my opinion, it shouldn't. Ruby should raise an exception in this case, instead of silently allowing incorrect behavior. That's what pretty much all other imperative languages do.)</p>

<p>This here is the best I could come up with while still keeping your original style:</p>

<pre><code>require 'pp'

data = %w[start before rgb 255 255 255 hex FFFFFF after end]

rgb_count = hex_count = 0

rgb, hex, rest = data.reduce([[], [], []]) do |acc, el|
  acc.tap do |rgb, hex, rest|
    next (rgb_count = 3  ; rgb &lt;&lt; el) if /rgb/i =~ el
    next (rgb_count -= 1 ; rgb &lt;&lt; el) if rgb_count &gt; 0
    next (hex_count = 1  ; hex &lt;&lt; el) if /hex/i =~ el
    next (hex_count -= 1 ; hex &lt;&lt; el) if hex_count &gt; 0
    rest &lt;&lt; el
  end
end

data.replace(rest)

pp rgb, hex, data
# [""rgb"", ""255"", ""255"", ""255""]
# [""hex"", ""FFFFFF""]
# [""start"", ""before"", ""after"", ""end""]
</code></pre>

<p>However, what you have is a parsing problem and that should really be solved by a parser. A simple hand-rolled parser/state machine will probably be a little bit more code than the above, but it will be <em>so</em> much more readable.</p>

<p>Here's a simple recursive-descent parser that solves your problem:</p>

<pre><code>class ColorParser
  def initialize(input)
    @input = input.dup
    @rgb, @hex, @data = [], [], []
  end

  def parse
    parse_element until @input.empty?
    return @rgb, @hex, @data
  end

  private

  def parse_element
    parse_color or parse_stop_word
  end

  def parse_color
    parse_rgb or parse_hex
  end

  def parse_rgb
    return unless /rgb/i =~ peek
    @rgb &lt;&lt; consume
    parse_rgb_values
  end
</code></pre>

<p>I really like recursive-descent parsers because their structure almost perfectly matches the grammar: just keep parsing elements until the input is empty. What is an element? Well, it's a color specification or a stop word. What is a color specification? Well, it's either an RGB color specification or a hex color specification. What is an RGB color specification? Well, it's something that matches the Regexp <code>/rgb/i</code> followed by RGB values. What are RGB values? Well, it's just three numbers &hellip;</p>

<pre><code>  def parse_rgb_values
    3.times do @rgb &lt;&lt; consume.to_i end
  end

  def parse_hex
    return unless /hex/i =~ peek
    @hex &lt;&lt; consume
    parse_hex_value
  end

  def parse_hex_value
    @hex &lt;&lt; consume.to_i(16)
  end

  def parse_stop_word
    @data &lt;&lt; consume unless /rgb|hex/i =~ peek
  end

  def consume
    @input.slice!(0)
  end

  def peek
    @input.first
  end
end
</code></pre>

<p>Use it like so:</p>

<pre><code>data = %w[start before rgb 255 255 255 hex FFFFFF after end]
rgb, hex, rest = ColorParser.new(data).parse

require 'pp'

pp rgb, hex, rest
# [""rgb"", 255, 255, 255]
# [""hex"", 16777215]
# [""start"", ""before"", ""after"", ""end""]
</code></pre>

<p>For comparison, here's the grammar:</p>

<ul>
<li><em>S</em> &rarr; <em>element</em><code>*</code></li>
<li><em>element</em> &rarr; <em>color</em> <code>|</code> <em>word</em></li>
<li><em>color</em> &rarr; <em>rgb</em> <code>|</code> <em>hex</em></li>
<li><em>rgb</em> &rarr; <kbd>rgb</kbd> <em>rgbvalues</em></li>
<li><em>rgbvalues</em> &rarr; <strong>token</strong>  <strong>token</strong>  <strong>token</strong></li>
<li><em>hex</em> &rarr; <kbd>hex</kbd> <em>hexvalue</em></li>
<li><em>hexvalue</em> &rarr; <strong>token</strong></li>
<li><em>word</em> &rarr; <strong>token</strong></li>
</ul>
"
"<pre><code>[
    {
        ""name"": ""John Doe"",
        ""location"": {
            ""name"": ""New York, New York"",
            ""id"": 12746342329
        },
        ""hometown"": {
            ""name"": ""Brooklyn, New York"",
            ""id"": 43453644
        }
    },
    {
        ""name"": ""Jane Doe"",
        ""location"": {
            ""name"": ""Miami, Florida"",
            ""id"": 12746342329
        },
        ""hometown"": {
            ""name"": ""Queens, New York"",
            ""id"": 12746329
        }
    }
]
</code></pre>

<p>Given this piece of JSON, how would I be able to loop through and pull out all of the ""hometown"" and ""location"" keys and see which people had the value of New York? </p>

<p>My issue is I can Array.each through these items, but I don't know how to traverse both location &amp;&amp; hometown with my criteria (""New York"").  </p>
","2988","","<pre><code>people.select {|person|
  person.any? {|k, v|
    %w[location hometown].include?(k) &amp;&amp; /New York/ =~ v['name']
}}
</code></pre>

<p>This basically says the following: select all entries in the array for which the following condition is true. The condition is: is it true for any of the key-value pairs that the key is either <code>'hometown'</code> or <code>'location'</code> and the <code>name</code> property of the value belonging to that key matches the Regexp <code>/New York/</code>?</p>

<p>However, your object model seems to be in a serious need of refactoring. In fact, the main problem is that your object model isn't even an object model, it's a hash and array model.</p>

<p>Here's what I mean by a proper object model:</p>

<pre><code>class Person
  attr_reader :name, :location, :hometown

  def initialize(name, location=nil, hometown=nil)
    @name, @location, @hometown = name, location, hometown
  end

  def cities
    return @location, @hometown
  end
end

class City
  attr_reader :id, :name

  def initialize(id, name)
    @id, @name = id, name
  end

  def =~(other)
    name =~ other
  end
end

nyc = City.new(12746342329, 'New York, New York')
brooklyn = City.new(43453644, 'Brooklyn, New York')
miami = City.new(12746342329, 'Miami, Florida')
queens = City.new(12746329, 'Queens, New York')

john = Person.new('John Doe', nyc, brooklyn)
jane = Person.new('Jane Doe', miami, queens)

people = [john, jane]
</code></pre>

<p>If you have such a proper object model, your code becomes much cleaner, because instead of teasing apart the nuts of bults of a nested maze of hashes and arrays, you have nice little objects that you can simply ask some questions:</p>

<pre><code>people.select {|person| person.cities.any? {|city| city =~ /New York/ }}
</code></pre>

<p>You can almost read this like English: from the array select all people for which any of their cities matches the Regexp <code>/New York/</code>.</p>

<p>If we improve the object model further, it gets even better:</p>

<pre><code>class Person
  def lived_in?(pattern)
    cities.any? {|city| city =~ pattern }
  end
end

people.select {|person| person.lived_in?(/New York/) }
</code></pre>

<p>This basically says ""From the people, select the ones which at one time lived in New York"". That's much better than ""from the people select all for which the first element of the key value pair is either the string <code>'hometown'</code> or the string <code>'location'</code> and the second element of the key value pair matches the Regexp <code>/New York/</code>"".</p>
"
"<p>I am trying to create instances of objects of various types by iterating and checking for validity. I need an array of types so I can do something like this:</p>

<pre><code>def tryClasses(in)
    types = [Foo::A, Foo::B, Foo::C]

    types.each do |type|
        a = type.new(in)
        return a != null
     end
end
</code></pre>

<p>How do I create and array of class types?
Doing it this way I am getting a NoMethodError (undefined method 'A' for Foo) </p>
","2988","","<p>Apart from the obvious syntactic errors (e.g. <code>in</code> is a reseved word, and <code>null</code> is spelled <code>nil</code> in Ruby), the code you showed should work just fine as it is, and indeed it does when I copy&amp;paste it into my Ruby installation. This assumes, of course, that the classes <code>Foo::A</code>, <code>Foo::B</code> and <code>Foo::C</code> actually exist. If they don't, then the code obviously cannot possibly work.</p>

<p>It is, however, completely un-Rubyish and violates just about every coding convention in the book:</p>

<ol>
<li>indentation is 2 spaces</li>
<li>method names are <code>snake_case</code>, not <code>camelCase</code></li>
<li>explicitly checking for equality to <code>nil</code> is a no-no, simply calling <code>#nil?</code> is much preferred</li>
<li><code>try_classes</code> isn't exactly an intention-revealing method name</li>
<li>and WTF does <code>in</code> mean?</li>
<li>Rubyists much prefer higher-order methods over explicit looping</li>
</ol>

<p>Here's a more Rubyish version of the code you wrote:</p>

<pre><code>def can_create_object?(*args)
  [Foo::A, Foo::B, Foo::C].none? do |klass|
    klass.new(*args).nil?
  end
end
</code></pre>

<p>However, note that I am pretty convinced that the whole idea is fundamentally flawed.</p>
"
"<p>It's a best-practice question. There are obvious ways to do that, none of them just seem quite right.</p>

<p>Quite often I need to test that some multi-line string gets produced. This normally breaks indentation making everything look like a mess:</p>

<pre><code>class TestHelloWorld &lt; Test::Unit::TestCase
  def test_hello
    assert_equal &lt;&lt;EOS, hello_world
Hello, world!
  World greets you
EOS
  end
end
</code></pre>

<p>With <code>&lt;&lt;-</code> I can indent here doc marker, but it doesn't strip indentation inside heredoc, it still looks horrible.</p>

<pre><code>class TestHelloWorld &lt; Test::Unit::TestCase
  def test_hello
    assert_equal &lt;&lt;-EOS, hello_world
Hello, world!
  World greets you
    EOS
  end
end
</code></pre>

<p>This lets me indent but readability of test line suffers. This <code>gsub</code> really doesn't feel right here.</p>

<pre><code>class TestHelloWorld &lt; Test::Unit::TestCase
  def test_hello
    assert_equal &lt;&lt;-EOS.gsub(/^ {6}/, """"), hello_world
      Hello, world!
        World greets you
    EOS
  end
end
</code></pre>

<p>Is there any way to test such multi-line strings that's really readable?</p>
","2988","","<p>Personally, I think that Ruby's indented heredocs are useless and they should work more like Bash indented heredocs and also strip whitespace <em>inside</em> the string &hellip;</p>

<p>Anyway, there are a couple of libraries that try to deal with this situation. There is a wide array of libraries that try to fix this problem:</p>

<ul>
<li><a href=""https://GitHub.Com/Mynyml/Unindent/"" rel=""nofollow"">Martin Aumont's <em>Unindent</em> library</a> which is also part of <a href=""https://github.com/rubyworks/facets"" rel=""nofollow"">the <em>Facets</em> library</a></li>
<li><em>Facets</em> also provides <a href=""http://rubydoc.info/github/rubyworks/facets/String%3amargin"" rel=""nofollow""><code>String#margin</code></a></li>
<li><a href=""https://GitHub.Com/SunlightLabs/Ruby-Unindentable/"" rel=""nofollow"">Sunlight Labs' <em>Unindentable</em> library</a></li>
<li><a href=""https://GitHub.Com/SamuelDana/Indentation/"" rel=""nofollow"">Samuel Dana's <em>Indentation</em> library</a></li>
</ul>
"
"<p>I have recently started using Rake for my personal projects, mainly because I am not into make  anymore and prefer to avoid learning a custom language just for builds. </p>

<p>However, based on a quick google, there don't seem to be any many non-ruby projects using rake. And certainly none with any recall value. </p>

<p>Am I right? Are there any non ruby projects using Rake? And why is rake lagging behind? </p>

<p>EDIT: By lagging behind, why are there no major opensource project using Rake? What does Rake lack vs Cmake, for instance?</p>
","2988","","<p>Buildr is a framework of Rake tasks that is explicitly designed as a replacement for Ant and Maven to build Java applications. I know that at least the guys who wrote Buildr actually use it to build their Java projects, plus I heard of several other people and companies using either Buildr or raw Rake for Java. I also heard the same about C#.</p>

<p>I also know some Ruby companies that have branched out into other fields (Objective-C, JavaScript) and took Rake with them to build their mobile projects, for example.</p>

<p>And of course, depending on whether you define that as a non-Ruby project or not, IronRuby uses Rake for building. You could obviously argue that this is a Ruby project, but it's not Ruby <em>code</em>, it's 99% C# and a dash of XML.</p>

<p>There was also a talk a couple of years ago at one of the regional Ruby conferences about an embedded company that uses <code>test/unit</code> for testing and Rake for building their C and even assembly code.</p>

<p>On the same vein, I believe Atomic Objects uses Rake for their embedded work.</p>
"
"<p>In my existing software I have an implementation of genetic programing using home grown decission making tree that is able to apply basic logic operators (AND OR NOT) in some boolean data that are provided to it in a form of an array.  The platform I am using is .NET / C# with SQLServer back end.   Looking for ways to improve the performance of my genetic program I concluded that I need almost all the additional functionality that comes with a functional language and I believe Scheme or to a lesser extend LISP are the best solutions for it unless I want to implement features like COND, IF, comparisson operators etc myself extending the existing implementation.</p>

<p>My question to the forum is if there is any efficient way to call Scheme (or LISP) from a .NET application passing data back and front in some array form.  If this is not possible, do you thing that it will better just to bite the bullet and implement it from scratch or I should look for alternative ways, like for example communicating using a text file?  </p>
","2988","","<p>There is an R6RS compliant Scheme implementation for the DLR called <a href=""http://IronScheme.CodePlex.Com/"">IronScheme</a>. Since IronScheme uses the DLR, it can be embedded into any .NET application using the standardized DLR embedding APIs in exactly the same way that you would embed, say, IronRuby or IronPython:</p>

<pre><code>dynamic Scheme = new SchemeEnvironment();
var list = Scheme.list;
var map = Scheme.map;
// and so on
</code></pre>

<p>The full snippet can be found in <a href=""http://Xacc.WordPress.Com/2009/10/27/ironscheme-and-c-4s-new-dynamic-keyword/"">a blog post</a> by IronScheme's author, leppie. It also shows how to pass a C# lambda to a Scheme higher-order function and other cool stuff.</p>
"
"<p>With their August 2010 release (they have a very clean road-map on their site), what are the advantages <a href=""http://www.eqqon.com/index.php/GitSharp"" rel=""nofollow"">Git#</a> (or <a href=""http://www.eqqon.com/index.php/GitSharp"" rel=""nofollow"">GitSharp</a>) and applications based on it have over current alternatives on Windows? I mean advantages that <em>could not have been possible</em> without Git#.</p>

<p><strong>Edit:</strong> Question wasn't framed properly.</p>
","2988","","<p>I'm not sure that it makes sense to talk about advantages of one over the other, given that they are completely different things: MSysGit is a program to be used by humans, Git# is a library to be used by machines.</p>

<p>That's like asking what the advantages are of a slice of pizza over the International Space Station.</p>
"
"<p>Im reading Metaprogramming in Ruby.</p>

<p>Here are two code snippets from the book:</p>

<pre><code>my_var = ""Success""

MyClass = Class.new do 
  puts ""#{my_var} in the class definition!""
  define_method :my_method do
    puts ""#{my_var} in the method!""
  end
end

MyClass.new.my_method

⇒ Success in the class definition!
  Success in the method!
</code></pre>

<p>and:</p>

<pre><code>def define_methods
  shared = 0

  Kernel.send :define_method, :counter do
    shared
  end

  Kernel.send :define_method, :inc do |x|
    shared += x
  end
end

define_methods

counter # =&gt; 0 
inc(4) 
counter # =&gt; 4
</code></pre>

<p>I wonder why one doesnt have to use dynamic dispatch (use of Kernel.send) when defining the method in the first example while one has to use it in the second example.</p>

<p>I given it some thoughts but cant understand it.</p>

<p>Thanks!</p>
","2988","","<p><code>Module#define_method</code> is private. Private methods can only be called without a receiver. So, in the second example, you need to use reflection (i.e. <code>send</code>) to circumvent the access restrictions.</p>

<p>Note that the first example <em>still</em> uses dynamic dispatch. In fact, in Ruby, <em>everything</em> (except variable access and some builtin operators) uses dynamic dispatch.</p>
"
"<p>I have a Ruby array containing some string values.  I need to:</p>

<ol>
<li>Find all elements that match some predicate</li>
<li>Run the matching elements through a transformation</li>
<li>Return the results as an array</li>
</ol>

<p>Right now my solution looks like this:</p>

<pre><code>def example
  matchingLines = @lines.select{ |line| ... }
  results = matchingLines.map{ |line| ... }
  return results.uniq.sort
end
</code></pre>

<p>Is there an Array or Enumerable method that combines select and map into a single logical statement?</p>
","2988","","<pre><code>def example
  @lines.select {|line| ... }.map {|line| ... }.uniq.sort
end
</code></pre>

<p>In Ruby 1.9 and 1.8.7, you can also chain and wrap iterators by simply not passing a block to them:</p>

<pre><code>enum.select.map {|bla| ... }
</code></pre>

<p>But it's not really possible in this case, since the types of the block return values of <code>select</code> and <code>map</code> don't match up. It makes more sense for something like this:</p>

<pre><code>enum.inject.with_index {|(acc, el), idx| ... }
</code></pre>

<p>AFAICS, the best you can do is the first example.</p>

<p>Here's a small example:</p>

<pre><code>%w[a b 1 2 c d].map.select {|e| if /[0-9]/ =~ e then false else e.upcase end }
# =&gt; [""a"", ""b"", ""c"", ""d""]

%w[a b 1 2 c d].select.map {|e| if /[0-9]/ =~ e then false else e.upcase end }
# =&gt; [""A"", ""B"", false, false, ""C"", ""D""]
</code></pre>

<p>But what you <em>really</em> want is <code>[""A"", ""B"", ""C"", ""D""]</code>.</p>
"
"<pre><code>class Foo
  def initialize
    @bar = []
  end

  def changed_callback
    puts ""Bar has been changed!""
  end

  def bar
    @bar
  end

  def bar=(a)
    @bar = a
    self.changed_callback() # (hence why this doesn't just use attr_accessor)
  end

  def bar&lt;&lt;(a)
    @bar.push(a)
    self.changed_callback()
  end
end

f = Foo.new()
f.bar = [1,2,3]
  =&gt; ""Bar has been changed!""
f.bar &lt;&lt; 4
  =&gt; ""Bar has been changed!""
puts f.bar.inspect
  =&gt; [1,2,3,4]
</code></pre>

<p>Is anything like that possible?</p>

<p>Thanks!</p>
","2988","","<p>You need to somehow extend the object returned by <code>Foo#bar</code> with an appropriate <code>#&lt;&lt;</code> method. Something like this, maybe?</p>

<pre><code>class Foo
  module ArrayProxy
    def &lt;&lt;(other)
      @__foo__.changed_callback
      super
    end
  end

  def initialize
    @bar = []
  end

  def changed_callback
    puts 'Bar has been changed!'
  end

  def bar
    return @bar if @bar.is_a?(ArrayProxy)
    @bar.tap {|bar| bar.extend(ArrayProxy).instance_variable_set(:@__foo__, self) }
  end

  def bar=(a)
    @bar = a
    changed_callback # (hence why this doesn't just use attr_accessor)
  end

end

f = Foo.new
f.bar = [1,2,3]
#  ""Bar has been changed!""
f.bar &lt;&lt; 4
#  ""Bar has been changed!""
puts f.bar.inspect
#  =&gt; [1,2,3,4]
</code></pre>
"
"<p>Is there an built-in UI support in the Ruby unit test framework? Can I show the results of my unit test in the UI?</p>
","2988","","<p>No, AFAIK, there is no Ruby unit testing framework that has support for GUI built in.</p>

<p>That's not how it normally works, anyway. Usually, it's the GUIs that support testing frameworks, not the other way round. And in fact, most Ruby GUI IDEs (and some non-GUI IDEs, and GUI non-IDEs as well) support at least <code>test/unit</code> and RSpec. Examples include the NetBeans, Eclipse, IDEA and Visual Studio Ruby plugins, Emacs and TextMate.</p>
"
"<p>FsUnit source code contains an unusual definition:</p>

<pre>let be = id</pre>

<p>FSI output:</p>

<pre>val was : ('a -> 'a)</pre>

<p>The semantics of the ""id"" is the parenthesized form of the following statement:</p>

<pre>let be x = x</pre>

<p>FSI output:</p>

<pre>val be : 'a -> 'a</pre>

<p>You can see the slight difference: the latter example replaces expression <strong>be true</strong> with <strong>true</strong>, while the first syntax would represent it as <strong>(true)</strong>.</p>

<p>What puzzles me is that I can't find any reference to ""id"" in F# language reference, neither it is described in a ""Programming F#"" book. Moreover, ""id"" is not a reserved keyword, I can define assign ""id"" to something else, and then I no longer can use it in a way that is shown in the first example. So I wonder if there are any F# documents that describe this literal and its semantics.</p>
","2988","","<p>This doesn't look like a literal at all. It looks more like a function. Specifically, guessing by the signature and the name, it looks like the identity function.</p>
"
"<pre><code>class C1
  unless method_defined? :hello  # Certainly, it's not correct. I am asking to find something to do this work.
    def_method(:hello) do
      puts 'Hi Everyone'
    end
  end
end
</code></pre>

<p>So, how to judge whether a method has defined or not?</p>
","2988","","<p>The code you posted works just fine for checking whether the method is defined or not. <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000941""><code>Module#method_defined?</code></a> is exactly the right choice. (There's also the variants <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000942""><code>Module#public_method_defined?</code></a>, <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000944""><code>Module#protected_method_defined?</code></a> and <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000943""><code>Module#private_method_defined?</code></a>.) The problem is with your call to <code>def_method</code>, which doesn't exist. (It's called <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000948""><code>Module#define_method</code></a>).</p>

<p>This works like a charm:</p>

<pre><code>class C1      
  define_method(:hello) do
    puts 'Hi Everyone'
  end unless method_defined? :hello
end
</code></pre>

<p>However, since you already know the name in advance and don't use any closure, there is no need to use <code>Module#define_method</code>, you can just use the <code>def</code> keyword instead:</p>

<pre><code>class C1
  def hello
    puts 'Hi Everyone'
  end unless method_defined? :hello
end
</code></pre>

<p>Or have I misunderstood your question and you are worried about inheritance? In that case, <code>Module#method_defined?</code> is not the right choice, because it walks the entire inheritance chain. In that case, you will have to use <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000919""><code>Module#instance_methods</code></a> or one of its cousins <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000920""><code>Module#public_instance_methods</code></a>, <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000921""><code>Module#protected_instance_methods</code></a> or <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000922""><code>Module#private_instance_methods</code></a>, which take an optional argument telling them whether to include methods from superclasses / mixins or not. (Note that the documentation is wrong: if you pass no arguments, it <em>will</em> include all the inherited methods.)</p>

<pre><code>class C1
  unless instance_methods(false).include? :hello
    def hello
      puts 'Hi Everyone'
    end
  end
end
</code></pre>

<p>Here's a little test suite that shows that my suggestion works:</p>

<pre><code>require 'test/unit'
class TestDefineMethodConditionally &lt; Test::Unit::TestCase
  def setup
    @c1 = Class.new do
      def self.add_hello(who)
        define_method(:hello) do
          who
        end unless method_defined? :hello
      end
    end

    @o = @c1.new
  end

  def test_that_the_method_doesnt_exist_when_it_hasnt_been_defined_yet
    assert !@c1.method_defined?(:hello)
    assert !@c1.instance_methods.include?(:hello)
    assert !@o.methods.include?(:hello)
    assert !@o.respond_to?(:hello)
    assert_raise(NoMethodError) { @o.hello }
  end

  def test_that_the_method_does_exist_after_it_has_been_defined
    @c1.add_hello 'one'

    assert @c1.method_defined?(:hello)
    assert @c1.instance_methods.include?(:hello)
    assert @o.methods.include?(:hello)
    assert_respond_to @o, :hello
    assert_nothing_raised { @o.hello }
    assert_equal 'one', @o.hello
  end

  def test_that_the_method_cannot_be_redefined
    @c1.add_hello 'one'

    assert @c1.method_defined?(:hello)
    assert @c1.instance_methods.include?(:hello)
    assert @o.methods.include?(:hello)
    assert_respond_to @o, :hello
    assert_nothing_raised { @o.hello }
    assert_equal 'one', @o.hello

    @c1.add_hello 'two'

    assert @c1.method_defined?(:hello)
    assert @c1.instance_methods.include?(:hello)
    assert @o.methods.include?(:hello)
    assert_respond_to @o, :hello
    assert_nothing_raised { @o.hello }
    assert_equal 'one', @o.hello, 'it should *still* respond with ""one""!'
  end
end
</code></pre>
"
"<p>I'm looking for things like Dynamic typing, Static Typing, Weak Typing, and Strong Typing.</p>

<p>As well as OO features like polymorphism, inheritance, nested classes, inner classes, abstract classes, pure virtual functions.</p>

<p>Also, things like reflection, static binding, dynamic binding, etc. </p>

<p>However, I'm not really looking for things like control flow, built-in types, or syntactic sugar ie.  A[5] vs A.get(5). Though, it wouldn't hurt.</p>

<p>It would be awesome if something like this existed and also mapped these concepts to particular languages.</p>

<p>I know that many of these features are explained on Wikipedia already, but are not quickly accessible unless I already know what these features are (and I remember) or just happen to find an interrelated link.  In fact the only time I use Wikipedia for something like this is if I just happen to see someone reference an idea, which I need to look up.  </p>

<p>My main goal is to have a way for me to quickly discover or brush up my knowledge on these concepts and an authoritative list like this would be very helpful.</p>

<p>If something like this does not exist, why? </p>

<p>Is it because different programming languages decided to name some of these things differently but actually do the same thing? (ie. Pure virtual function (C++) vs. abstract methods (Java))  While others may name things the same, but do something slightly different? (The Protected keyword in Java vs. C++)  Another reason might be is languages simply don't have enough features in common to compile a list like this and it's better to learn a language and it's features one at a time?  In which case I'd probably compile my own ""feature list"" as I learned the language...</p>

<p>Thanks for reading! :)</p>
","2988","","<p>Very good explanations of programming paradigms and the programming concepts from which those paradigms are built are found in Peter van Roy's works. Especially in the book <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/book""><em>Concepts, Techniques, and Models of Computer Programming</em> by Peter Van Roy and Seif Haridi</a>. (<a href=""http://CodePoetics.Com/wiki/"">Here's the companion wiki.</a>) CTM (as it is colloquially known in the industry) uses the <a href=""http://WWW.Mozart-Oz.Org/"">multi-paradigm Distributed Oz programming language</a> to introduce all the major programming paradigms.</p>

<p>Peter van Roy also made <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/paradigms"">this amazing poster that shows the 34 major paradigms and their relations and positions on various axis</a>. The poster is basically an incredibly compressed version of CTM. A more thorough explanation of that poster is contained in the article <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/VanRoyChapter"">Programming Paradigms for Dummies: What Every Programmer Should Know</a> which appeared as a chapter in the book <em>New Computational Paradigms for Computer Music</em>, edited by G. Assayag and A. Gerzso. It explains for example very concisely and easily understandable, what a programming paradigm actually <em>is</em>, what a programming concept is, and how the two are related.</p>

<p><em>Another</em> great book that demonstrates several major programming paradigms is <a href=""http://MITPress.MIT.Edu/sicp/full-text/book/book.html""><em>Structure and Interpretation of Computer Programs</em> by Harold Abelson and Gerald Jay Sussman</a>. This book was the basis of MIT's Introduction to Programming (6.001) for undergrads for several decades. <a href=""http://SWISS.CSAIL.MIT.Edu/classes/6.001/abelson-sussman-lectures/"">A course taught by Abelson and Sussman themselves was recorded at a corporate training for Hewlett-Packard in 1986</a>.</p>

<p>You can find <a href=""http://OCW.MIT.Edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/CourseHome/"">video recordings and course materials from the Spring 2005 course on MIT's OpenCourseWare website</a>. <a href=""http://ADUni.Org/courses/sicp/"">Another recording of the course from MIT's short-lived ArsDigita University project</a>. SICP has also been taught at other universities, in fact <a href=""http://WebCast.Berkeley.Edu/course_details_new.php?seriesid=2010-B-26275"">the 2010 course at Berkeley has just finished</a>.</p>

<p>SICP, as it is colloquially known, is probably one of <em>the</em> best programming books ever written.</p>

<p>The main difference between SICP and CTM is the didactic approach: CTM demonstrates most major paradigms using an extremely powerful multi-paradigm language that <em>already</em> supports them (mostly Distributed Oz, but also some others). SICP OTOH demonstrates them by <em>implementing</em> them in a language that does <em>not</em> support them natively (a subset of Scheme). IOW: CTM would teach OO be showing programs written in an OO language, SICP by implementing an OO system in Scheme. Seeing Object-Orientation implemented in a dozen or so lines of code is friggin' awesome.</p>

<p><a href=""http://MITPress.MIT.Edu/catalog/item/default.asp?ttype=2&amp;tid=11656""><em>Design Concepts in Programming Languages</em> (by Franklyn A. Turbak and David K. Gifford with Mark A. Sheldon)</a> is another great related book.</p>

<p><a href=""http://Amazon.Com/dp/0136073476/""><em>Concepts of Programming Languages</em> (by Robert W. Sebesta)</a> explains, well, Concepts of Programming Languages, starting with Konrad Zuse's Plankalkül, continuing with the first <em>real</em> programming languages like Fortran, Lisp, Cobol, Algol, BASIC and on to C, C++, Java and Ada.</p>

<p><a href=""http://Theory.Stanford.Edu/~jcm/books.html""><em>Concepts in Programming Languages</em> (by John C. Mitchell)</a> is another book that is often cited but that I haven't yet read myself, unfortunately.</p>

<p>Ditto for  <a href=""http://EoPL3.Com/""><em>Essentials of Programming Languages</em></a> (by Daniel P. Friedman and Mitchell Wand) aka <em>EoPL</em>.</p>

<p><a href=""http://WWW.CS.Rochester.Edu/~scott/pragmatics/""><em>Programming Language Pragmatics</em> (by Michael L. Scott)</a> is more about implementing programming language concepts, however it also talks <em>about</em> them in a way that is reportedly very accessible. (Again, I haven't read this one.)</p>

<p>Since you asked a lot about typing specifically, I would be remiss in not mentioning <a href=""http://WWW.CIS.UPenn.Edu/~bcpierce/tapl/""><em>Types and Programming Languages</em></a> (by Benjamin C. Pierce), or <em>TaPL</em> as it is usually called. This is basically <em>the</em> book about Type Theory as it relates to Programming Languages. Note, however, that its view on types is not uncontroversial: for example, it pretty much flat out denies the existence of dynamic typing.</p>

<p>To balance out that very strict definition by Pierce, you should definitely read the brilliant <a href=""http://LucaCardelli.Name/Papers/TypefulProg.A4.pdf""><em>Typeful Programming</em></a> by Luca Cardelli. In the paper, he argues that programming using types as a modeling and structuring construct instead of just mere safety net, is a programming paradigm in its own right. (This is for example in stark contrast to Peter van Roy's poster and book, which deliberately ignore typing completely.)</p>

<p>A really great resource is the <a href=""http://Lambda-the-Ultimate.Org/"">Lambda the Ultimate</a> weblog (which is actually where <em>I</em> got introduced to pretty much all of the above reading materials.)</p>
"
"<p>What's the meaning of <code>~&gt;</code> version requirement in gem specs? </p>

<pre>
hanna-0.1.12 depends on [haml (~> 2.2.8)]
</pre>
","2988","","<p>The RubyGems manual calls this a
<a href=""http://guides.rubygems.org/patterns#pessimistic_version_constraint"">pessimistic version constraint</a>.</p>

<p>Assume you have specified an n-part version number, e.g. <code>1.3</code> (2-part) or
<code>3.5.6.2</code> (4-part) as the constraint. Then, in order to fulfill the constraint,
a version number must satisfy both of the following conditions</p>

<ol>
<li><p>The first n-1 parts of the version number must be identical to the first n-1
parts of the constraint
(e.g. <code>1.x</code> or <code>3.5.6.x</code> match, but <code>0.x</code> or <code>3.5.7.x</code> don't) <strong>and</strong></p></li>
<li><p>The last part of the version number must be greater than or equal to the last
part of the constraint
(e.g. <code>1.9999</code> and <code>3.5.6.2</code> match, but <code>1.2</code> or <code>3.5.6.1</code> don't).</p></li>
</ol>

<p>In other words</p>

<pre>
~> x_1.x_2.x_3. &hellip; .x_n-2.x_n-1.x_n
</pre>

<p>matches</p>

<pre>
x_1.x_2.x_3. &hellip; .x_n-2.x_n-1.y, y = x_n
</pre>

<p>The reason this is called a ""pessimistic"" constraint, and also the use case for
it, is that when you just say <code>&gt; x.y.z</code>, you are being optimistic: you assume
that from here on out, until all eternity, the API will never ever change. This
is of course a pretty bold assumption. However, most projects have rules about
when they are allowed to
<a href=""http://guides.rubygems.org/patterns#semantic_versioning"">break backwards compatibility</a>,
and how they have to change their version number when they <em>do</em> break backwards
compatibility. You can encode those version numbering rules using a pessimistic
constraint, and thus you can be sure that your code will always continue to work
(assuming that the author of the other project actually adheres to his own
rules, which unfortunately isn't always the case).</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3407016/nil-cant-be-coerced-into-fixnum-typeerror"">`-': nil can&rsquo;t be coerced into Fixnum (TypeError)  </a>  </p>
</blockquote>



<p>Does anyone know how come guest.arrived can be nil?! This is a small part of my checkout method I have in my program. The error points at line 91 in the code which is the last part of this block of code:</p>

<pre><code>departureDate = gets.chomp.to_i
guest.departure = departureDate
guestStayedDays = departureDate - guest.arrived # Days the guest have stayed 
</code></pre>

<p>I cant seem to figure this out. Is the problem with get.chomp.to_i that it is returning nil? Or is it returning 0? But then again that would not have given me this error. So is it guest that is nil or is it actually the combination guest.arrived that is the problem? Worth mentioning is that arrived is declared in my checkin method where the guest states its arrival date. Is it somehow lost? </p>

<p>Thanks for the answers I will post the checkin method aswell:</p>

<pre><code>def self.check_in
    puts ""Welcome to the checkin""
    puts ""Please state your first name: ""
    firstName = gets.chomp
    puts ""Please state your last name:""
    lastName = gets.chomp
    puts ""Write your address: ""
    address = gets.chomp
    puts ""and your phone number: ""
    phone = gets.chomp
    puts ""finally, your arrival date!""
    arrived = gets.chomp.to_i
    newPLot = $camping.generateParkingLot
    guest = Guest.new(firstName, lastName, address, phone, arrived)
    $camping.current_guests[newPLot-1] = guest
    $camping.all_guests.push(guest)   # lägg till gästen i historiken         

    puts ""The registration was a success!! You have received plot "" + newPLot.to_s + "".""    
  end 
</code></pre>

<p>Here the arrived variable is defined and when I in my checkout method do puts $camping.current_guests i see all the info. Thanks!                                                                                  </p>
","2988","","<p>You already asked this <em>exact same</em> question yesterday and the answer is still the <em>exact same</em> answer: the problem is that the <code>arrived</code> method of <code>guest</code> returns <code>nil</code> and unless you actually <em>show</em> the code of that method, there is nothing anyone can do about it.</p>
"
"<p>i've got a module that wants to use data provided by the class that included it - but at the class level, not the instance level.</p>

<p>the goal is to have class 'metadata' provided to a module that the class includes, so that the module can use the metadata during the included call.</p>

<p>this works:</p>

<pre><code>module Bar
  def value
    @value
  end

  def baz
    puts ""the value is: #{value}""
  end
end

module Foo
  def self.included(mod)
    mod.extend(Bar)
    mod.baz
  end
end

class MyClass
  @value = ""my class defined this""
  include Foo
end
</code></pre>

<p>the output of this code is</p>

<pre>the value is: my class defined this</pre>

<p>i'm not sure if the use of <code>@value</code> is good or not... it seems odd to me that i require this to be set before the <code>include Foo</code> happens, not from a technical perspective (i know why it's required to be done in this order) but from an idiomatic or usability perspective. </p>

<p>... is there a better way / more idiomatic way of accomplishing this?</p>
","2988","","<p>If you want to the class to pass an argument to the mixin, then why not use one of the Ruby constructs that actually <em>does</em> allow passing an argument?</p>

<pre><code>class Object
  private

  def Bar(metadata)
    Module.new do
      include Bar

      define_singleton_method(:included) do |base|
        puts ""the value is: #{metadata}""
      end
    end
  end
end

module Bar
  # put common behavior here
end

class MyClass
  include Bar 'MyClass metadata'
end

class OtherClass
  include Bar 'OtherClass metadata'
end
</code></pre>

<p>This is a pretty common idiom that is for example <a href=""http://Ruby-Doc.Org/stdlib/libdoc/delegate/rdoc/files/delegate_rb.html#M000218"" rel=""nofollow"">used by the <code>delegate</code> library in the stdlib</a>.</p>
"
"<p>I'm looking to find all combinations of single items from a variable number of arrays. How do I do this in Ruby?</p>

<p>Given two arrays, I can use Array.product like this:</p>

<pre><code>groups = []
groups[0] = [""hello"", ""goodbye""]
groups[1] = [""world"", ""everyone""]

combinations = groups[0].product(groups[1])

puts combinations.inspect 
# [[""hello"", ""world""], [""hello"", ""everyone""], [""goodbye"", ""world""], [""goodbye"", ""everyone""]]
</code></pre>

<p>How could this code work when groups contains a variable number of arrays?</p>
","2988","","<pre><code>groups = [
  %w[hello goodbye],
  %w[world everyone],
  %w[here there]
]

combinations = groups.first.product(*groups.drop(1))

p combinations
# [
#   [""hello"", ""world"", ""here""],
#   [""hello"", ""world"", ""there""],
#   [""hello"", ""everyone"", ""here""],
#   [""hello"", ""everyone"", ""there""],
#   [""goodbye"", ""world"", ""here""],
#   [""goodbye"", ""world"", ""there""],
#   [""goodbye"", ""everyone"", ""here""],
#   [""goodbye"", ""everyone"", ""there""]
# ]
</code></pre>
"
"<p>In Ruby, what is the difference between == and ===? The <a href=""http://www.ruby-doc.org/core/"">RDoc</a> says </p>

<blockquote>
  <p>Case Equality—For class Object,
  effectively the same as calling #==,
  but typically overridden by
  descendents to provide meaningful
  semantics in case statements.</p>
</blockquote>

<p>Is <code>#==</code> the same as <code>==</code>? And could you provide an example of when/how this is used in case statements?</p>
","2988","","<p>The two really have nothing to do with each other. In particular, <code>#==</code> is the equality operator and <code>#===</code> has absolutely nothing to with equality. Personally, I find it rather unfortunate that <code>#===</code> looks so similar to <code>#==</code>, uses the equals sign and is often called the <em>case equality operator</em>, <em>triple equals operator</em> or <em>threequals operator</em> when it really has nothing to do with equality.</p>

<p>I call <code>#===</code> the <em>case subsumption operator</em> (it's the best I could come up with, I'm open to suggestions, especially from native English speakers).</p>

<p>The best way to describe <code>a === b</code> is ""if I have a drawer labeled <code>a</code>, does it make sense to put <code>b</code> in it?""</p>

<p>So, for example, <code>Module#===</code> tests whether <code>b.is_a?(a)</code>. If you have <code>Integer === 2</code>, does it make sense to put <code>2</code> in a box labeled <code>Integer</code>? Yes, it does. What about <code>Integer === 'hello'</code>? Obviously not.</p>

<p>Another example is <code>Regexp#===</code>. It tests for a match. Does it make sense to put <code>'hello'</code> in a box labeled <code>/el+/</code>? Yes, it does.</p>

<p>For collections such as ranges, <code>Range#===</code> is defined as a membership test: it makes sense to put an element in a box labeled with a collection if that element is in the collection.</p>

<p>So, that's what <code>#===</code> does: it tests whether the argument can be subsumed under the receiver.</p>

<p>What does that have to with <code>case</code> expressions? Simple:</p>

<pre><code>case foo
when bar
  baz
end
</code></pre>

<p>is the same as</p>

<pre><code>if bar === foo
  baz
end
</code></pre>
"
"<pre><code>users_allowed_to_be_viewed.map {|u| ""#{u.id},""}
</code></pre>

<p>but that gives <code>1,2,3,</code></p>

<p>What would be a short way to just get something like <code>1,2,3</code></p>
","2988","","<pre><code>users_allowed_to_be_viewed.map(&amp;:id).join(',')
</code></pre>

<p><code>Array#join</code> is also aliased to <code>Array#*</code>, although that might make things a little obtuse:</p>

<pre><code>users_allowed_to_be_viewed.map(&amp;:id) * ','
</code></pre>
"
"<p>In Java, you can do <code>instanceof</code>. Is there a Ruby equivalent? </p>
","2988","","<p>In Ruby, variables aren't objects, therefore they aren't instances of <em>any</em> classes und thus it doesn't make sense to check whether they are instances of any specific class.</p>

<p>Note that the same applies to Java, too: <code>instanceof</code> <em>does not</em>, as you claim, check if a variable is an instance of a class. It checks whether the <em>object</em> that the variable <em>points to</em> is an instance of a class. That is something <em>completely</em> different.</p>

<p>EDIT:</p>

<p>I really don't get why the concept that variables aren't objects in Ruby is so controversial. In almost <em>any</em> programming language I know, variables aren't objects. The only exception I can think of right now is Common Lisp.</p>

<p>The Ruby Language Specification couldn't be more clear and obvious (emphasis added by me):</p>

<blockquote>
  <h1>6.2 Variables</h1>
  
  <h2>6.2.1 General description</h2>
  
  <p>A variable is denoted by a name, and <strong>refers to</strong> an object, which is called the value of the variable.
  <strong>A variable itself is not an object</strong>.</p>
</blockquote>
"
"<p>Hopefully this screenshot will explain my question:</p>

<pre><code>a = Thread.new { loop {} }
b = Thread.new { loop {} }
a.join
</code></pre>

<p><img src=""http://img7.imageshack.us/img7/9858/rubycores.png"" alt=""Ruby threads demo CPU usage""></p>

<p>So how come both of my cores aren't maxed out? No matter how many threads I use, it's the same each time; the total CPU usage never seems to exceed 52%.</p>

<pre><code>&gt;ruby -v
ruby 1.8.6 (2010-02-04 patchlevel 398) [i386-mingw32]
</code></pre>
","2988","","<p>It looks like you are using MRI, which is incapable of running threads in parallel. At the moment, the only production-ready Ruby implementations which can run threads in parallel are JRuby and IronRuby.</p>

<p>Remember, if you want threads to actually run in parallel, then every layer in the stack must be able to do that. Take JRuby, for example: JRuby can run Ruby threads in parallel. However, it implements threads by mapping them to JVM threads, so if the JVM is incapable of running threads in parallel (and there are some for which this is the case), then the fact that <em>JRuby</em> can run <em>Ruby</em> threads in parallel doesn't help you one bit. Many JVMs, in turn, map JVM threads to OS threads. And again: if the OS isn't capable of running threads in parallel, there's nothing the JVM can do. And last but not least: if there's only one processor, the whole exercise is pointless anyway.</p>
"
"<p>I have a question about coroutine implementation.
I saw <code>coroutine</code> first on Lua and stackless-python. I could understand the concept of it, and how to use <code>yield</code> keyword, but I cannot figure out how it is implemented. </p>

<p>Can I get some explanation about them?</p>
","2988","","<p>See also: <a href=""http://StackOverflow.Com/questions/2644592/"">Implementing “Generator” support in a custom language</a>. Generators are basically a limited form of (semi-)coroutines, most of what is discussed in that question applies here as well.</p>

<p>Also: <a href=""http://StackOverflow.Com/questions/1995734/"">How are exceptions implemented under the hood?</a> While exceptions are obviously very different from coroutines, they both have something in common: both are advanced universal control flow constructs. (In fact, you can implement coroutines using exceptions and exceptions using coroutines.)</p>
"
"<p>As with most new technologies after a while a standard emerges.</p>

<p>Is there anything cooking for NoSQL?</p>
","2988","","<p>The <em>whole point</em> of NoSQL is that <em>there are no standard solutions</em>. Every data storage problem is different, and you need to choose the data storage technology that is appropriate for <em>your</em> specific problem and <em>not</em> the one that is ""the standard"".</p>

<p>That's the whole premise of ""<em>Not Only SQL</em>"".</p>

<p>Take ACID (here's a pieve of advice you never thought you'd get on StackOverflow, or really anywhere after 1987 :-) ), for example. There is a wide array of problems which don't need ACID guarantees. For those problems, ACID is overkill. Overkill that translates into wasted I/O, wasted CPU cycles, wasted performance. Which means wasted heat and wasted energy, which in turn means wasted money on electrical and utility bills.</p>

<p>Some problems only need weaker forms of those guarantees. For example, for a wide array of web applications the so-called <em>eventual consistency</em> is plenty enough. Other problems need <em>higher</em> guarantees than what SQL-style ACID provides.</p>

<p>So, some NoSQL databases don't have ACID guarantees or only have them in a weaker form. Some can turn them on and off on a per-DB basis. Some can turn A, C, I and D on and off <em>individually</em> on a per-DB basis. Some can not only turn A, C, I and D <em>on and off</em> individually, they can finetune them on a sliding scale. Some can even do that on a per-<em>query</em> basis.</p>

<p>If you have hierarchical data, store it in a hierarchical database. If you have graph data, store it in a graph database. If you have key-value data, store it in a key-value database. If you have semi-structured document data, store it in a document database. If you have semantic RDF data, store it in a triple database. If you build a data warehouse, store it in a column database. And if you have relational data, then, by all means store it in a relational database. (But <em>only</em> if you <em>actually</em> have relational data!)</p>
"
"<p>I primarily work on small, personal projects.  One of my challenges has been source code repository maintenance.  I have used the basic version of Team Foundation Server provided by my MSDN license and while it works great, it's not ideal (I'm not doing backups like I should, etc).  I'd really rather pay to have it hosted.  I like TFS, but I'm open to other options as well (since hosted TFS seems really expensive).</p>

<p>Any suggestions on providers to look at?  So long as they integrate nicely with Visual Studio, I'm willing to consider anything.</p>
","2988","","<p>Subversion and Git integrate really well with Visual Studio. I think Mercurial does, too, but I only have personal experience with the other two.</p>

<p>All three of those have plenty of very affordable hosting providers available. In fact, if your code is open source, then all three of those have <em>gratis</em> hosting providers available. On Assembla, you even get gratis <em>private</em> Subversion and Git repositories up to 2 GiByte.</p>
"
"<p>I'm looking for examples of why it's not a good idea to extend base classes in ruby. I need to show some people why it's a weapon to be wielded carefully.</p>

<p>Any horror stories you can share?</p>
","2988","","<p>There was a pretty famous example of <a href=""http://Blog.BrightRedGlow.Com/2008/1/17/evil-can-be-dangerous/"" rel=""nofollow"">monkey-patching going horribly wrong</a> about 2.5 years ago in Rubinius.</p>

<p>The interesting thing about this case is that both the offending code and the victim were highly visible and highly unusual. Usually, the offender is some piece of code written by some PHP script kiddy who got drunk on his 1337 metaprogramming h4X0r skillz. And the failure mode is a simple <code>ArgumentError</code> exception, because the original method and the monkeypatch have different arity.</p>

<p>However, in this case, the offender was a library in the stdlib (<code>mathn</code>) and the failure mode was the Rubinius VM completely blowing up.</p>

<p>So, what happened? Well, <code>mathn</code> monkeypatches the <code>Fixnum</code> class and changes how <code>Fixnum</code> arithmetic works. In particular, it changes both the <em>results</em> and the <em>types</em> of several core methods. E.g.:</p>

<pre><code>r = 4/3  # =&gt; 1
r.class  # =&gt; Fixnum

require 'mathn'

r = 4/3  # =&gt; (4/3)
r.class  # =&gt; Rational
</code></pre>

<p>The problem is of course that in Rubinius, the entire Ruby compiler, the entire Ruby kernel, large parts of the Ruby core library, some parts of the Rubinius VM and other parts of the Rubinius infrastructure, are all written in Ruby. And of course, all of those use <code>Fixnum</code> arithmetic all over the place.</p>

<p>The <code>Hash</code> class is written in Ruby and it uses <code>Fixnum</code> arithmetic to compute the size of the hash buckets, compute the hash function and so on. <code>Array</code> is written in Ruby and needs to compute element sizes and array lengths. The FFI library is written in Ruby and needs to compute memory addresses(!) and structure sizes. Many parts of Rubinius assume that they can do some <code>Fixnum</code> arithmetic and then pass the result to some C function as a pointer or <code>int</code>.</p>

<p>And since Ruby doesn't support any kind of selector namespacing or class boxing or similar (although something like that is planned for Ruby 2.0), as soon as some random user code requires the <code>mathn</code> library, all of those pieces just spectacularly explode, because all of a sudden, the result of a <code>Fixnum</code> operation is no longer a <code>Fixnum</code> (which is basically identical to a machine <code>int</code> and can be passed around as such), but a <code>Rational</code> (which is a full-fledged Ruby object).</p>

<p>Basically, what would happen, is that some code would <code>require 'mathn'</code> (or you would type that into IRb), and immediately the VM would just die.</p>

<p>The solution, in this case, was the <em>safe math</em> plugin for the compiler: when the compiler detects that it is compiling the kernel or other core parts of Rubinius, it automatically rewrites calls to <code>Fixnum</code> methods into calls to private immutable copies of those methods. [Note: I think in current versions of Rubinius, the problem is solved in a different way.]</p>
"
"<p>This is strictly theoretical. </p>

<pre><code>module BleeTest
  def meth
    puts 'foo'
  end
end
</code></pre>

<p>This code runs without error, but is it ever possible the invoke the method ""meth""?</p>

<p>It seems to me that ""meth"" is an instance method of a module which cannot be instantiated.  But then why is this construct allowed by the interpreter?</p>
","2988","","<p>Yes, of course. You can mix <code>BleeTest</code> into an object:</p>

<pre><code>o = Object.new
o.extend BleeTest

o.meth
# foo
</code></pre>

<p>Or you can mix <code>BleeTest</code> into a class:</p>

<pre><code>class C
  include BleeTest
end

o = C.new

o.meth
# foo
</code></pre>

<p>In fact, the first form can also be expressed in terms of the second form:</p>

<pre><code>o = Object.new

class &lt;&lt; o
  include BleeTest
end

o.meth
# foo
</code></pre>

<p>That <em>is</em>, after all, the <em>whole point</em> of modules in Ruby: to serve as mixins in order to compose objects and classes.</p>
"
"<p>Take the following class:</p>

<pre><code>class Automator
  def fill_specific_form(fields)
    fields.each_pair do |key, value|
      puts ""Setting '#{key}' to '#{value}'""
    end
  end
end

a = Automator.new
a.fill_specific_form :first_name =&gt; ""Mads"", :last_name =&gt; ""Mobæk""

# =&gt; Setting 'first_name' to 'Mads'
# =&gt; Setting 'last_name' to 'Mobæk'
</code></pre>

<p>Is it possible to do the same without a hash? Since all parameters are required, I want a method with the following signature:</p>

<pre><code>fill_specific_form(first_name, last_name)
</code></pre>

<p>In my mind this would be possible by having the method body reflect and iterate over its parameters, thus achieving the same result.</p>

<p>How would you implement this? Does a pattern/idiom for this exist already? Two obvious benefits would be parameter information in IDEs and not having to check if all hash keys are supplied. </p>

<p>What I want to avoid is:</p>

<pre><code>puts ""Setting first_name to #{first_name}""
puts ""Setting last_name to #{last_name}""
# and so on
</code></pre>
","2988","","<p>To reflect on a method's (or <code>Proc</code>'s) parameters, you can use <code>Proc#parameters</code>, <code>Method#parameters</code> or <code>UnboundMethod#parameters</code>:</p>

<pre><code>-&gt;(m1, o1=nil, *s, m2, &amp;b){}.parameters
# =&gt; [[:req, :m1], [:opt, :o1], [:rest, :s], [:req, :m2], [:block, :b]]
</code></pre>

<p>However, in your case, I don't see why you need reflection, since you <em>already know</em> the names of the parameters anyway.</p>
"
"<p>I saw <a href=""http://www.position-absolute.com/articles/jquery-form-validator-because-form-validation-is-a-mess/"" rel=""nofollow"">here</a> square brackets that are used in class names:</p>

<pre><code>&lt;input class=""validate[required,custom[onlyLetter],length[0,100]]"" name=""firstname"" type=""text"" /&gt;
</code></pre>

<p>What do these square brackets mean?</p>
","2988","","<p>Nothing. Brackets are a legal character for class names with no special meaning whatsoever.</p>
"
"<p>When I type:</p>

<pre><code>gem env
</code></pre>

<p>on my Windows system, it produces this info:</p>

<pre><code>RubyGems Environment:
  - RUBYGEMS VERSION: 1.3.5
  - RUBY VERSION: 1.8.7 (2010-01-10 patchlevel 249) [i386-mingw32]
  - INSTALLATION DIRECTORY: C:/Ruby/lib/ruby/gems/1.8
  - RUBY EXECUTABLE: C:/Ruby/bin/ruby.exe
  - EXECUTABLE DIRECTORY: C:/Ruby/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-mingw32
  - GEM PATHS:
     - C:/Ruby/lib/ruby/gems/1.8
     - C:/Users/pb/.gem/ruby/1.8
  - GEM CONFIGURATION:
     - :update_sources =&gt; true
     - :verbose =&gt; true
     - :benchmark =&gt; false
     - :backtrace =&gt; false
     - :bulk_threshold =&gt; 1000
  - REMOTE SOURCES:
     - http://gems.rubyforge.org/
</code></pre>

<p>When I go to the GEM path:</p>

<pre><code>C:\Ruby\lib\ruby\gems\1.8\gems
</code></pre>

<p>I see many gem folders with all of the installed gems. But when I type</p>

<pre><code>gem list local
</code></pre>

<p>I get an empty listing:</p>

<pre><code>*** LOCAL GEMS ***
</code></pre>

<p>Why are the gems not findable?</p>
","2988","","<p><code>gem list local</code> tells RubyGems to list all gems whose name starts with the string <code>local</code>. (See <code>gem help list</code> for details.) Do you have any gems with that name installed? Otherwise, it's not really surprising that the list is empty.</p>
"
"<p>I've just started experimenting with CodeContracts in .NET 4 on an existing medium-sized project, and I'm surprised that the static checker is giving me compile-time warnings about the following piece of code:</p>

<pre><code>public class Foo
{
   private readonly List&lt;string&gt; strs = new List&lt;string&gt;();

   public void DoSomething()
   {
       // Compiler warning from the static checker:
       // ""requires unproven: source != null""
       strs.Add(""hello"");
   }
}
</code></pre>

<p>Why is the CodeContracts static checker complaining about the strs.Add(...) line? There's no possible way for strs to be null, right? Am I doing something wrong?</p>
","2988","","<p>I'm not knowledgeable enough with the intricacies of .NET's object initialization semantics to answer your direct question. However, here's two tips:</p>

<ol>
<li><a href=""http://Research.Microsoft.Com/projects/pex/"" rel=""nofollow"">Microsoft Research's Pex</a> can automatically generate unit tests that demonstrate exactly under what conditions a contract violation might occur. It uses the same theorem prover and static analyzer as CC does, so it's a fair bet, the two will agree.</li>
<li>Proving contracts is equivalent to solving the Halting Problem, so just because CC can't <em>prove</em> that it cannot ever be <code>null</code>, doesn't mean it isn't true. IOW: CC might just be wrong and you need to help it along with a <code>Contract.Assume</code> (or, if you're feeling confident, <code>Contract.Assert</code>).</li>
</ol>

<p>Interestingly, if you explicitly add the Object Invariant Assertion that <code>strs</code> can never be <code>null</code>, CC <em>is</em> able to prove <em>that</em> and, consequently, can also prove that <code>strs.Add()</code> will never be a null reference:</p>

<pre><code>[ContractInvariantMethod]
private void StrsIsNotNull()
{
    Contract.Invariant(strs != null);
}
</code></pre>

<p>So, I guess my hunch #2 is correct: CC is just simply wrong in this case. (Or more precisely: the encoding of the semantics of C# into the theorem prover is incomplete.)</p>
"
"<hr>

<pre><code>class C
end

var = ""I am a local var outside""

C.class_eval do
   def self.a_class_method
     puts var 
   end
   # I know, this is not correct, because the 'def' created a new scope;
   # I am asking a solution to make it;
   # I also know that use 'define_method' can create a instance method without creating a new scope.
   # but my point is how to define a **class method**
end
</code></pre>

<hr>
","2988","","<p>Class methods don't really exist in Ruby, they are just singleton methods of the class object. Singleton methods don't really exist, either, they are just ordinary instance methods of the object's singleton class.</p>

<p>Since you already know how to define instance methods (using <code>Module#define_method</code>), you already know everything you need to know. You just need to call <code>class_eval</code> on <code>C</code>'s singleton class instead of <code>C</code> itself:</p>

<pre><code>(class &lt;&lt; C; self end).class_eval do
  define_method(:a_class_method) do
    puts var 
  end
end
</code></pre>

<p>Current versions of Ruby have a <code>singleton_class</code> method to make that easier:</p>

<pre><code>C.singleton_class.class_eval do
  define_method(:a_class_method) do
    puts var 
  end
end
</code></pre>

<p>But actually, current versions of Ruby also have <code>Module#define_singleton_method</code>, so, in this particular case, that is unnecessary:</p>

<pre><code>C.define_singleton_method(:a_class_method) do
  puts var 
end
</code></pre>
"
"<p>I know the converse is not true, but if my application works using Mono is it guaranteed to work if I switch to the real deal? If not, where can I find a list of caveats?</p>
","2988","","<p>Both Mono and .NET are supersets of the ECMA/ISO CLI family of specifications. However, neither .NET nor Mono are subsets of the other. Both Mono and .NET add features on top of ECMA/ISO CLI, but while Mono implements many of .NET's additions, .NET does not implement any of Mono's additions.</p>

<p>Here's a few examples:</p>

<ul>
<li>Mono has larger arrays. This is actually <em>not</em> an added feature to the ECMA/ISO CLI specification but an optional one: the specification says that array indices must be either 32 bit or 64 bit. .NET chose 32 bit but Mono chose 64, since arrays with 10 billion entries and more are quite common in supercomputing applications, where Mono has quite a strong market share. So, if your app has an array with several billions of entries, it will run just fine on Mono but won't work on .NET.</li>
<li>Mono has continuations built into the VM. These are important for game programming.</li>
<li>Mono has native SIMD support for parallel operations on arrays, which are mapped to native CPU SIMD instructions (MMX, SSE, VMX).</li>
<li>Mono has compiler-as-a-service, which Microsoft has been only vaguely talking about for some unspecified future version of .NET.</li>
<li>Mono has a lot of additional libraries, especially bindings to graphics libraries other than Windows Forms (wx.NET, Gtk#, Cocoa#, ...)</li>
</ul>

<p>Note, however, that (except for the arrays), all of these are clearly distinguishible by their namespaces, since none of them live in the <code>System</code> or <code>Microsoft</code> namespaces.</p>

<hr>

<p>EDIT: Actually, most of the above-mentioned extensions are explicitly designed to also work on .NET. For example, <code>Mono.Simd</code> also runs on .NET, but without the runtime support that the Mono VM has, it's unusably slow. (Basically, all the SIMD operations are implemented in C#, but the Mono compiler detects those calls and replaces them with their corresponding assembly instructions. That way, they work on .NET, but without the special treatment, they are significantly slower.) Also, the C# REPL is currently being re-implemented on top of <code>Reflection.Emit</code> (at the moment, it calls the Mono compiler directly), so that it will work on .NET in the future. Gtk# works just fine on Windows and .NET.</p>

<p>Only the <code>Mono.Tasklet</code> library cannot be implemented on .NET, since it requires VM-level support for continuations.</p>
"
"<p>How would you list out the modules that have been included in a specific class in a class hierarchy in Ruby?  Something like this:</p>

<pre><code>module SomeModule
end

class ParentModel &lt; Object
  include SomeModule
end

class ChildModel &lt; ParentModel
end

p ChildModel.included_modules #=&gt; [SomeModule]
p ChildModel.included_modules(false) #=&gt; []
</code></pre>

<p>Listing the ancestors makes the module appear higher in the tree:</p>

<pre><code>p ChildModel.ancestors #=&gt; [ChildModel, ParentModel, SomeModule, Object, Kernel]
</code></pre>
","2988","","<p>As far as I understand your question, something like this is what you are looking for:</p>

<pre><code>class Class
  def mixin_ancestors(include_ancestors=true)
    ancestors.take_while {|a| include_ancestors || a != superclass }.
    select {|ancestor| ancestor.instance_of?(Module) }
  end
end
</code></pre>

<p>However, I don't fully understand your testcases: why is <code>SomeModule</code> listed as an included module of <code>ChildModel</code> even though it <em>isn't</em> actually included in <code>ChildModel</code> but in <code>ParentModel</code>? And conversely, why is <code>Kernel</code> <em>not</em> listed as an included module, even though it is just as much in the ancestors chain as <code>SomeModule</code>? And what does the boolean argument to the method mean?</p>

<p>(Note that boolean arguments are <em>always</em> bad design: a method should do exactly one thing. If it takes a boolean argument, it does by definition <em>two</em> things, one if the argument is true, another is the argument is false. Or, if it does only one thing, then this can only mean that it ignores its argument, in which case it shouldn't take it to begin with.)</p>
"
"<p>For my first question here I would like to ask you how you'd do the following in Ruby.</p>

<p>I have a hash with the following aspect</p>

<pre><code>variables[""foo""] = [1,2,3]
variables[""bar""] = [4,5,6,7]
variables[...] = ...
</code></pre>

<p>Update: this hash will have an arbitrary number of key => values pairs.</p>

<p>So it represents parameters and their possible values. I would like to ""generate"" now an Array containing hashes whose key=>value pairs represent each possible combination of the variables. In the case of the example above, I would have an array of 12 (=3x4) hashes like that</p>

<pre><code>[ hash1, hash2, ..., hash16]
</code></pre>

<p>where hash*i* would be</p>

<pre><code> hash1[""foo""] = 1
 hash1[""bar""] = 4
 hash2[""foo""] = 1
 hash2[""bar""] = 5
 hash3[""foo""] = 1
 hash3[""bar""] = 6
 hash4[""foo""] = 1
 hash4[""bar""] = 7
 hash5[""foo""] = 2
 hash5[""bar""] = 4
 hash6[""foo""] = 3
 hash6[""bar""] = 4
 ...
 hash16[""foo""] = 3
 hash16[""bar""] = 7
</code></pre>

<p>I have a few ideas but all of them are quite complicated nested loops ...</p>

<p>Thanks a lot !</p>
","2988","","<pre><code>vars = {foo: [1, 2, 3], bar: [4, 5, 6, 7]}

(v = vars.map {|k, v| ([k] * v.length).zip(v) }).first.product(*v.drop(1)).
map {|args| args.reduce({}) {|h, (k, v)| h.tap {|h| h[k] = v }}}
# =&gt; [{:foo=&gt;1, :bar=&gt;4},
# =&gt;  {:foo=&gt;1, :bar=&gt;5},
# =&gt;  {:foo=&gt;1, :bar=&gt;6},
# =&gt;  {:foo=&gt;1, :bar=&gt;7},
# =&gt;  {:foo=&gt;2, :bar=&gt;4},
# =&gt;  {:foo=&gt;2, :bar=&gt;5},
# =&gt;  {:foo=&gt;2, :bar=&gt;6},
# =&gt;  {:foo=&gt;2, :bar=&gt;7},
# =&gt;  {:foo=&gt;3, :bar=&gt;4},
# =&gt;  {:foo=&gt;3, :bar=&gt;5},
# =&gt;  {:foo=&gt;3, :bar=&gt;6},
# =&gt;  {:foo=&gt;3, :bar=&gt;7}]
</code></pre>

<p>This works with arbitrary many entries and arbitrary keys.</p>
"
"<pre><code>{""Journal""=&gt;[[4, -785.0], 
             [13, -21.9165000915527], 
             [14, -213.008995056152], 
             [15, -50.074499130249]]}
</code></pre>

<p>How can you to iterate this hash in Ruby, and how would you to separate out keys &amp; values?</p>
","2988","","<p>Ruby has a uniform iteration interface. All collections in Ruby have a method called <code>each</code>, which allows you to iterate over each element of the collection. Note, however, that explicit iteration is a code smell. You should mostly use higher-level iterators like <code>map</code>, <code>reduce</code>, <code>select</code>, <code>find</code>, <code>reject</code> and such.</p>

<p>In this particular case where the collection is a <code>Hash</code>, each element that is being yielded to your block, is a two-element array consisting of the key and the value:</p>

<pre><code>print hsh.reduce('') {|s, el|
  s &lt;&lt; ""The key is #{el.first} and the value is #{el.last}.\n""
}
</code></pre>

<p>Thanks to Ruby's destructuring bind, you can simply bind the two elements of the array to two variables in your block and you won't have the need to constantly take the array apart:</p>

<pre><code>print hsh.reduce('') {|s, (k, v)|
  s &lt;&lt; ""The key is #{k} and the value is #{v}.\n""
}
</code></pre>
"
"<p>I'm new to Ruby (experienced with Python, C++ and C). I need to create a class that is only to be used by other classes and methods in a module. In Python, I'd just call it __classname. I'd use an empty typedef in C++. How do I do this in Ruby (or am I barking up the wrong tree and not doing this the ""Ruby way""?)</p>
","2988","","<p>The most important thing to realize is that a class is nothing special. It's just an object. Per convention, classes are assigned to constants, but there is nothing that says they <em>have</em> to be.</p>

<p>And since classes are just objects like any other object, you make them private the same way that you make any other object private.</p>

<p>Here are the possibilities I can think of, in the order of increasing privateness:</p>

<ol>
<li>Just nest them inside a namespace (i.e. module). In Ruby, it is generally expected that all of a library's modules and classes live inside a namespace with the same name as the library (i.e. <code>my_awesome_library</code> &rarr; <code>MyAwesomeLibrary</code>), but in general, everything which is nested below that namespace, is considered private. In fact, besides <code>Test::Unit::TestCase</code>, I cannot think of a single example of a three-level deep namespace that is actually expected to be used by client code.</li>
<li>same as 1., but name it something obvious, like <code>MyAwesomeLibrary::Internal::FfiStruct</code></li>
<li>same as 1. or 2., and mark it with the <code>:nodoc:</code> RDoc tag.</li>
<li>similar to 3., but use a more modern documentation system like YARD, which actually lets you explicitly mark up private APIs.</li>
<li>Use a method instead of a constant. Methods can be made private. (For consistency's sake, you can have the method name start with an uppercase letter, to make it resemble a constant. There's nothing to prevent that, the <code>snake_case</code> convention is just that: a convention.)</li>
<li>Use an instance variable. They are always private. Note that both private methods and instance variables can be trivially accessed using reflection. <code>send</code> seems to be in more widespread use than <code>instance_variable_get</code>, though, which is why I consider instance variables to have a higher level of privacy than methods.</li>
<li>Really the only way to get actual privacy or encapsulation is using local variables and closures, though. Note however that this might preclude you from using Ruby's module, class or method definition syntax, because those create new scopes. In all cases where you need access to the class, you need to use <code>Module.new</code>, <code>Class.new</code> or <code>Module#define_method</code>.</li>
</ol>

<p>Ex.:</p>

<pre><code>module MyAwesomeLibrary
  struct = Class.new(FFI::Struct) do
    # ...
  end

  PublicInterface = Class.new do
    define_method(:initialize) do |bar|
      @foo = struct.new(bar)
    end
  end
end
</code></pre>

<p>And yes, this is the <em>only</em> way of achieving true 100% information hiding and encapsulation in Ruby.</p>

<p>However, the normal Ruby way would be to simply document the stuff as being private (maybe push it down a level of namespacing) and trust your fellow developers. In the Ruby community, this is sometimes summarized under the Python slogan ""We are all consenting adults"".</p>
"
"<p>I was reading a Ruby question about the <code>.each</code> iterator, and someone stated that using <code>.each</code> can be a code smell if higher order iterators are better suited for the task. What are higher order iterators in Ruby?</p>

<p><strong>edit:</strong> Jörg W Mittag, the author of the StackOverflow answer that I was referring to mentioned that he meant to write higher <em>level</em> iterators, but he also explained what they are very well below.</p>
","2988","","<p>Oops. I meant higher-<em>level</em> iterators, not higher-<em>order</em>. <em>Every</em> iterator is of course by definition higher-order.</p>

<p>Basically, iteration is a very low-level concept. The purpose of programming is to communicate intent to the other stakeholders on the team. ""Initializing an empty array, then iterating over another array and adding the current element of this array to the first array if it is divisible by two without a remainder"" is <em>not</em> communicating intent. ""Selecting all even numbers"" <em>is</em>.</p>

<p>In general, you almost never iterate over a collection just for iteration's sake. You either want to</p>

<ul>
<li>transform each element in some way (that's usually called <code>map</code>, in Ruby and Smalltalk it's <code>collect</code> and in .NET and SQL it's <code>Select</code>),</li>
<li>reduce the whole collection down to some single value, e.g. computing the sum or the average or the standard deviation of a list of football scores (in category theory, that's called a <em>catamorphism</em>, in functional programming it is <code>fold</code> or <code>reduce</code>, in Smalltalk it's <code>inject:into:</code>, in Ruby it's <code>inject</code> and in .NET <code>Aggregate</code>),</li>
<li>filter out all elements that satisfy a certain condition (<code>filter</code> in most functional languages, <code>select</code> in Smalltalk and Ruby, also <code>find_all</code> in Ruby, <code>Where</code> in .NET and SQL),</li>
<li>filter out all elements that <em>do not</em> satisfy a condition (<code>reject</code> in Smalltalk and Ruby)</li>
<li>find the first element that satisfies a condition (<code>find</code> in Ruby)</li>
<li>count the elements thats satisfy a condition (<code>count</code> in Ruby)</li>
<li>check if all elements (<code>all?</code>), at least one element (<code>any?</code>) or no elements (<code>none?</code>) satisfy a condition</li>
<li>group the elements into buckets based on some discriminator (<code>group_by</code> in Ruby, .NET and SQL)</li>
<li>partition the collection into two collections based on some predicate (<code>partition</code>)</li>
<li>sort the collection (<code>sort</code>, <code>sort_by</code>)</li>
<li>combine multiple collections into one (<code>zip</code>)</li>
<li>and so on and so forth &hellip;</li>
</ul>

<p>Almost <em>never</em> is your goal to just iterate over a collection.</p>

<p>In particular, <code>reduce</code> aka. <code>inject</code> aka. <code>fold</code> aka. <code>inject:into:</code> aka. <code>Aggregate</code> aka. <em>catamorphism</em> is your friend. There's a reason why it has such a fancy-sounding mathematical name: it is extremely powerful. In fact, most of what I mentioned above, can be implemented in terms of <code>reduce</code>.</p>

<p>Basically, what <code>reduce</code> does, is it ""reduces"" the entire collection down to a single value, using some function. You have some sort of accumulator value, and then you take the accumulator value and the first element and feed it into the function. The result of that function then becomes the new accumulator, which you pair up with the second element and feed to the function and so on.</p>

<p>The most obvious example of this is summing a list of numbers:</p>

<pre><code>[4, 8, 15, 16, 23, 42].reduce(0) {|acc, elem|
  acc + elem
}
</code></pre>

<p>So, the accumulator starts out as <code>0</code>, and we pass the first element <code>4</code> into the <code>+</code> function. The result is <code>4</code>, which becomes the new accumulator. Now we pass the next element <code>8</code> in and the result is <code>12</code>. And this continues till the last element and the result is that they were dead the whole time. No, wait, the result is <code>108</code>.</p>

<p>Ruby actually allows us to take a couple of shortcuts: If the element type is the same as the accumulator type, you can leave out the accumulator and Ruby will simply pass the first element as the first value for the accumulator:</p>

<pre><code>[4, 8, 15, 16, 23, 42].reduce {|acc, elem|
  acc + elem
}
</code></pre>

<p>Also, we can use <code>Symbol#to_proc</code> here:</p>

<pre><code>[4, 8, 15, 16, 23, 42].reduce(&amp;:+)
</code></pre>

<p>And actually, if you pass <code>reduce</code> a <code>Symbol</code> argument it will treat as the name of the function to use for the reduction operation:</p>

<pre><code>[4, 8, 15, 16, 23, 42].reduce(:+)
</code></pre>

<p>However, summing is not all that <code>reduce</code> can do. In fact, I find this example a little dangerous. Everybody I showed this to, immediately understood, ""Aah, so <em>that's</em> what a <code>reduce</code> is"", but unortunately some also thought that summing numbers is <em>all</em> <code>reduce</code> is, and that's definitely not the case. In fact, <code>reduce</code> is a <em>general method of iteration</em>, by which I mean that <code>reduce</code> can do <em>anything</em> that <code>each</code> can do. In particular, you can store arbitrary state in the accumulator.</p>

<p>For example, I wrote above that <code>reduce</code> reduces the collection down to a single value. But of course that ""single value"" can be arbitrarily complex. It could, for example, be itself a collection. Or a string:</p>

<pre><code>class Array
  def mystery_method(foo)
    drop(1).reduce(""#{first}"") {|s, el| s &lt;&lt; foo.to_str &lt;&lt; el.to_s }
  end
end
</code></pre>

<p>This is an example how far you can go with playing tricks with the accumulator. If you try it out, you'll of course recognize it as <code>Array#join</code>:</p>

<pre><code>class Array
  def join(sep=$,)
    drop(1).reduce(""#{first}"") {|s, el| s &lt;&lt; sep.to_str &lt;&lt; el.to_s }
  end
end
</code></pre>

<p>Note that nowhere in this ""loop"" do I have to keep track of whether I'm at the last or second-to-last element. Nor is there any conditional in the code. There is no potential for fencepost errors here. If you think about how to implement this with <code>each</code>, you <em>would</em> have to somehow keep track of the index and check whether you are at the last element and then have an <code>if</code> in there, to prevent emitting the separator at the end.</p>

<p>Since I wrote above that all iteration can be done with <code>reduce</code>, I might just as well prove it. Here's Ruby's <code>Enumerable</code> methods, implemented in terms of <code>reduce</code> instead of <code>each</code> as they normally are. (Note that I only just started and have only arrived at <em>g</em> yet.)</p>

<pre><code>module Enumerable
  def all?
    reduce(true) {|res, el| res &amp;&amp; yield(el) }
  end

  def any?
    reduce(false) {|res, el| res || yield(el) }
  end

  def collect
    reduce([]) {|res, el| res &lt;&lt; yield(el) }
  end
  alias_method :map, :collect

  def count
    reduce(0) {|res, el| res + 1 if yield el }
  end

  def detect
    reduce(nil) {|res, el| if yield el then el end unless res }
  end
  alias_method :find, :detect

  def drop(n=1)
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el unless n -= 1 &gt;= 0 }}
  end

  def drop_while
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el unless yield el }}
  end

  def each
    reduce(nil) {|_, el| yield el }
  end

  def each_with_index
    tap { reduce(-1) {|i, el| (i+1).tap {|i| yield el, i }}}
  end

  def find_all
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el if yield el }}
  end
  alias_method :select, :find_all

  def grep(pattern)
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; yield(el) if pattern === el }}
  end

  def group_by
    reduce(Hash.new {|hsh, key| hsh[key] = [] }) {|res, el| res.tap {|res|
        res[yield el] = el
    }}
  end

  def include?(obj)
    reduce(false) {|res, el| break true if res || el == obj }
  end

  def reject
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el unless yield el }}
  end
end
</code></pre>

<p>[Note: I made some simplifications for the purpose of this post. For example, according to the standard Ruby Enumerable protocol, <code>each</code> is supposed to return <code>self</code>, so you'd have to slap an extra line in there; other methods behave slightly differently, depending on what kind and how many arguments you pass in and so on. I left those out because they distract from the point I am trying to make.]</p>
"
"<p>Consuming a ruby json API, I want to save me some work and generate ruby objects off the bat.  Any way to do this?</p>

<p>so you could transform this: </p>

<pre><code>{""menu"": {
  ""id"": ""file"",
  ""value"": ""File"",
  ""popup"": {
    ""menuitem"": [
      {""value"": ""New"", ""onclick"": ""CreateNewDoc()""},
      {""value"": ""Open"", ""onclick"": ""OpenDoc()""},
      {""value"": ""Close"", ""onclick"": ""CloseDoc()""}
    ]
  }
}}
</code></pre>

<p>to this:</p>

<pre><code>class Menu
  attr_accessor :id
  attr_accessor :file
  attr_accessor :popup
end
</code></pre>
","2988","","<p>I think you are a little bit confused. In the question, you ask how to turn a JSON <em>document</em> into classes. In the comments, you say you want a JSON version of the RXSD XML tool, which however, turns XML <em>schemas</em> into Ruby classes.</p>

<p>Turning JSON documents into classes doesn't really make sense. If you compare the world of document markup to programming, documents correspond to objects and schemas correspond to classes (well, types, actually, but since we're talking about Ruby, let's not open that can of worms and stick with classes).</p>

<p>So, it makes sense to generate Ruby objects from JSON documents and it makes sense to generate Ruby classes from JSON schemas, but it doesn't make sense to generate Ruby classes from JSON documents. The bad news is of course that in order to be able to automatically generate Ruby classes from JSON schema is that in order for that to work, the JSON schema has to be in an automatically processable (IOW machine-readable) format.</p>

<p>Unfortunately, there is no such thing as a <em>JSON schema</em>, and thus JSON schemas tend to generally not be machine-readable, but rather are just a blurb of human-oriented English text on the API documentation page of the web service provider. If you're lucky. More often than not, there is no documentation <em>at all</em> about the JSON schema.</p>

<p>So, since there is no standardized way of describing JSON schemas, there cannot be a standardized tool for processing JSON schemas. Unlike XML, where there is a limited number of standardized schemas (DTD, XSD, RelaxNG).</p>

<p>Note that what I wrote above is not strictly true: there <em>are</em> specifications for JSON schemas (e.g. <a href=""http://JSON-Schema.Org/"" rel=""nofollow"">JSON-Schema</a>) and there are Ruby implementations of those (e.g. <a href=""https://GitHub.Com/Constellation/Ruby-JSONchema/"" rel=""nofollow"">Ruby/JSONSchema</a>, validation only, doesn't generate classes), but nobody is using them, so they might just as well not exist.</p>
"
"<p>I read about <a href=""http://rhomobile.com/"" rel=""nofollow"">http://rhomobile.com/</a> and I found this is great but I want to ask whether the application built with that would run in Browser or Natively on the device as this requires HTML and Ruby?</p>
","2988","","<p>Both, actually.</p>

<p>Your application <em>is</em> a web application, but it doesn't run on the internet, it runs on a small webserver that is part of your application inside the phone. It also doesn't run in the browser, but rather in a native browser widget inside your application.</p>

<p>Since the webserver runs on the phone itself, it has access to all the native capabilities of the phone, so you can make HTTP calls to the webserver to capture sound from the microphone, shoot video with the camera, get the GPS location, get multitouch info and so on.</p>
"
"<p>I'm currently trying to learn Ruby and I'm trying to understand more about what it offers in terms of encapsulation and contracts.</p>

<p>In C# a contract can be defined using an interface. A class which implements the interface must fulfil the terms within the contract by providing an implementation for each method and property (and maybe other things) defined. The individual class that implements an interface can do whatever it needs within the scope of the methods defined by the contract, so long as it accepts the same types of arguments and returns the same type of result.</p>

<p>Is there a way to enforce this kind of thing in Ruby?</p>

<p>Thanks</p>

<blockquote>
  <p>A simple example of what I mean in C#:</p>

<pre><code>interface IConsole
{
    int MaxControllers {get;}
    void PlayGame(IGame game);
}

class Xbox360 : IConsole
{
   public int MaxControllers
   {
      get { return 4; }
   }

   public void PlayGame(IGame game)
   {
       InsertDisc(game);
       NavigateToMenuItem();
       Click();
   }
}

class NES : IConsole
{
    public int MaxControllers
    {
        get { return 2; }
    }

   public void PlayGame(IGame game)
   {
       InsertCartridge(game);
       TurnOn();
   }
}
</code></pre>
</blockquote>
","2988","","<p>Ruby has <em>Interfaces</em> just like any other language.</p>

<p>Note that you have to be careful not to conflate the concept of the <em>Interface</em>, which is an abstract specification of the responsibilities, guarantees and protocols of a unit with the concept of the <code>interface</code> which is a keyword in the Java, C# and VB.NET programming languages. In Ruby, we use the former all the time, but the latter simply doesn't exist.</p>

<p>It is very important to distinguish the two. What's important is the <em>Interface</em>, not the <code>interface</code>. The <code>interface</code> tells you pretty much nothing useful. Nothing demonstrates this better than the <em>marker interfaces</em> in Java, which are interfaces that have no members at all: just take a look at <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/io/Serializable.html""><code>java.io.Serializable</code></a> and <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/lang/Cloneable.html""><code>java.lang.Cloneable</code></a>; those two <code>interface</code>s mean <em>very</em> different things, yet they have the <em>exact same</em> signature.</p>

<p>So, if two <code>interface</code>s that mean different things, have the same signature, what <em>exactly</em> is the <code>interface</code> even guaranteeing you?</p>

<p>Another good example:</p>

<pre><code>interface ICollection&lt;T&gt;: IEnumerable&lt;T&gt;, IEnumerable
{
    void Add(T item);
}
</code></pre>

<p>What is the <em>Interface</em> of <a href=""http://MSDN.Microsoft.Com/library/63ywd54z.aspx""><code>System.Collections.Generic.ICollection&lt;T&gt;.Add</code></a>?</p>

<ul>
<li>that the length of the collection does not decrease</li>
<li>that all the items that were in the collection before are still there</li>
<li>that <code>item</code> is in the collection</li>
</ul>

<p>And which of those actually shows up in the <code>interface</code>? None! There is nothing in the <code>interface</code> that says that the <code>Add</code> method must even <em>add</em> at all, it might just as well <em>remove</em> an element from the collection.</p>

<p>This is a perfectly valid implementation of that <code>interface</code>:</p>

<pre><code>class MyCollection&lt;T&gt;: ICollection&lt;T&gt;
{
    void Add(T item)
    {
        Remove(item);
    }
}
</code></pre>

<p>Another example: where in <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/util/Set.html""><code>java.util.Set&lt;E&gt;</code></a> does it actually say that it is, you know, a <em>set</em>? Nowhere! Or more precisely, in the documentation. In English.</p>

<p>In pretty much all cases of <code>interfaces</code>, both from Java and .NET, all the <em>relevant</em> information is actually in the docs, not in the types. So, if the types don't tell you anything interesting anyway, why keep them at all? Why not stick just to documentation? And that's exactly what Ruby does.</p>

<p>Note that there are <em>other</em> languages in which the <em>Interface</em> can actually be described in a meaningful way. However, those languages typically don't call the construct which describes the <em>Interface</em> ""<code>interface</code>"", they call it <code>type</code>. In a dependently-typed programming language, you can for example express the properties that a <code>sort</code> function returns a collection of the same length as the original, that every element which is in the original is also in the sorted collection and that no bigger element appears before a smaller element.</p>

<p>So, in short: Ruby does not have an equivalent to a Java <code>interface</code>. It <em>does</em> however have an equivalent to a Java <em>Interface</em>, and its exactly the same as in Java: documentation.</p>

<p>Also, just like in Java, <em>Acceptance Tests</em> can be used to specify *Interface*s as well.</p>

<p>In particular, in Ruby, the <em>Interface</em> of an object is determined by what it can <em>do</em>, not what <code>class</code> is is, or what <code>module</code> it mixes in. Any object that has a <code>&lt;&lt;</code> method can be appended to. This is very useful in unit tests, where you can simply pass in an <code>Array</code> or a <code>String</code> instead of a more complicated <code>Logger</code>, even though <code>Array</code> and <code>Logger</code> do not share an explicit <code>interface</code> apart from the fact that they both have a method called <code>&lt;&lt;</code>.</p>

<p>Another example is <a href=""http://RubyDoc.Info/docs/ruby-stdlib/1.9.2/StringIO/""><code>StringIO</code></a>, which implements the same <em>Interface</em> as <code>IO</code> and thus a large portion of the <em>Interface</em> of <code>File</code>, but without sharing any common ancestor besides <code>Object</code>.</p>
"
"<p>I have an array of integers</p>

<pre><code>a = [1,2,3,4]
</code></pre>

<p>When I do</p>

<pre><code>a.join
</code></pre>

<p>Ruby internally calls the <code>to_s</code> method 4 times, which is too slow for my needs.</p>

<p>What is the fastest method to output an big array of integers to console?</p>

<p>I mean:</p>

<pre><code>a = [1,2,3,4........,1,2,3,9], should be: 
</code></pre>

<blockquote>
  <p>1234........1239</p>
</blockquote>
","2988","","<p>If you want to print an integer to stdout, you need to convert it to a string first, since that's all stdout understands. If you want to print two integers to stdout, you need to convert both of them to a string first. If you want to print three integers to stdout, you need to convert all three of them to a string first. If you want to print one billion integers to stdout, you need to convert all one billion of them to a string first.</p>

<p>There's nothing you, we, or Ruby, or really any programming language can do about that.</p>

<p>You could try interleaving the conversion with the I/O by doing a lazy stream implementation. You could try to do the conversion and the I/O in parallel, by doing a lazy stream implementation and separating the conversion and the I/O into two separate threads. (Be sure to use a Ruby implementation which can actually <em>execute</em> parallel threads, not all of them can: MRI, YARV and Rubinius can't, for example.)</p>

<p>You can parallelize the conversion, by converting separate chunks in the array in separate threads in parallel. You can even buy a billion core machine and convert all billion integers at the same time in parallel.</p>

<p>But even then, the fact of the matter remains: every single integer needs to be converted. Whether you do that one after the other first, and then print them or do it one after the other interleaved with the I/O or do it one after the other in parallel with the I/O or even convert all of them at the same time on a billion core CPU: the number of needed conversions does not magically decrease. A large number of integers means a large number of conversions. Even if you do all billion conversions in a billion core CPU in parallel, it's <em>still</em> a billion conversions, i.e. a billion calls to <code>to_s</code>.</p>
"
"<p>I'm really used to auto-completion coming from Netbeans.</p>

<p>In Netbeans, when I type a 'string' and then hit a 'dot' it will print out a list of methods for the String class.</p>

<p>TextMate doesn't seem to have that function.</p>

<p>Is it something you could add?</p>

<p>Would save A LOT of time instead of using the ri/irb/online doc all the time.</p>
","2988","","<p>You have discovered the fundamental difference between a text editor and an IDE: a text editor edits <em>text</em> (duh!), i.e. an unstructured stream of characters. It doesn't know anything about objects, messages, methods, mixins, modules, classes, namespaces, types, strings, arrays, hashes, numbers, literals etc. This is great, because it means that you can edit <em>anything</em> with a text editor, but it also means that editing any <em>particular</em> thing is harder than it were with a specialized editor.</p>

<p>A Ruby IDE edits <em>Ruby programs</em>, i.e. a highly structured semantic graph of objects, methods, classes etc. This is great, because the IDE knows about the rules that make up legal Ruby programs and thus will e.g. make it impossible for you to write illegal Ruby programs and it can offer you automated transformations that <em>guarantee</em> that if you start out with a legal Ruby program, you end up with a legal Ruby program (e.g. automated refactorings). But it also means that you can <em>only</em> edit Ruby programs.</p>

<p>In short: it's simply impossible to do what you ask with a text editor. You need an IDE. (Note: you <em>can</em> of course build an IDE on top of a text editor. Emacs is a good example of this. But from what I have read, the TextMate plugin API is simply not powerful enough to do this. I could be wrong, though&nbsp;&ndash; since I don't have a Mac, I'm mostly dependent on hearsay.)</p>
"
"<ul>
<li>I asked a previous question on class methods, but I really want to understand how to do this for instance methods as well. Thanks! =)</li>
</ul>

<p>The code below sets class methods for a given array:</p>

<pre><code>class Testing

  V4_RELATIONSHIP_TYPES=[1=&gt;2,3=&gt;4]

  V4_RELATIONSHIP_TYPES.keys.each do |key|
    self.class.send(:define_method, ""get_#{key}_type"".downcase) do
      return GuidInfo.get_or_new(PARAMS, V4_RELATIONSHIP_TYPES[key])
    end
  end
end

#so i can call Testing.get_1_key()
</code></pre>

<p>The question is: how can I get the same set of methods for the instance? </p>
","2988","","<pre><code>class Testing
  V4_RELATIONSHIP_TYPES = { 1 =&gt; 2, 3 =&gt; 4 }

  V4_RELATIONSHIP_TYPES.each do |key, value|
    define_method(""get_#{key}_type"".downcase) do
      return GuidInfo.get_or_new(PARAMS, value)
    end
  end
end

# Now you can call Testing.new.get_1_key
</code></pre>
"
"<p>I'd like to periodically create a backup of my github repositories.  Is there a quick way to pull all of them without knowing what the entire list is?</p>

<p>Walter</p>
","2988","","<p>You can get the entire list via GitHub's API:</p>

<pre><code>curl http://github.com/api/v2/yaml/repos/show/walterjwhite
</code></pre>

<p>For example, this simple DOS/Unix shell one-liner:</p>

<pre><code>ruby -ryaml -ropen-uri -e ""puts YAML.load(open('http://github.com/api/v2/yaml/repos/show/walterjwhite'))['repositories'].map {|r| %Q[* **#{r[:name]}** (#{r[:description]}) is at &lt;#{r[:url]}/&gt;] }""
</code></pre>

<p>prints (assuming you have Ruby installed):</p>

<ul>
<li><strong>logback</strong> (The reliable, generic, fast and flexible logging framework for Java.) is at <a href=""http://github.com/walterjwhite/logback/"" rel=""nofollow"">http://github.com/walterjwhite/logback/</a></li>
<li><strong>Test-Automation</strong> (provides UI Test Automation framework) is at <a href=""http://github.com/walterjwhite/Test-Automation/"" rel=""nofollow"">http://github.com/walterjwhite/Test-Automation/</a></li>
<li><strong>model.base</strong> (Base Model Project) is at <a href=""http://github.com/walterjwhite/model.base/"" rel=""nofollow"">http://github.com/walterjwhite/model.base/</a></li>
<li><strong>project.configuration</strong> (Project Configuration (Jalopy, Checkstyle, etc.)) is at <a href=""http://github.com/walterjwhite/project.configuration/"" rel=""nofollow"">http://github.com/walterjwhite/project.configuration/</a></li>
<li><strong>model.http</strong> (Http Models / Enties) is at <a href=""http://github.com/walterjwhite/model.http/"" rel=""nofollow"">http://github.com/walterjwhite/model.http/</a></li>
<li><strong>model.address</strong> (Address models and entities) is at <a href=""http://github.com/walterjwhite/model.address/"" rel=""nofollow"">http://github.com/walterjwhite/model.address/</a></li>
<li><strong>model.geolocation.base</strong> (Geolocation models and entities) is at <a href=""http://github.com/walterjwhite/model.geolocation.base/"" rel=""nofollow"">http://github.com/walterjwhite/model.geolocation.base/</a></li>
<li><strong>model.user</strong> (User models and entities) is at <a href=""http://github.com/walterjwhite/model.user/"" rel=""nofollow"">http://github.com/walterjwhite/model.user/</a></li>
<li><strong>model.annotations.current</strong> (Used to inject the current date / user into an entity) is at <a href=""http://github.com/walterjwhite/model.annotations.current/"" rel=""nofollow"">http://github.com/walterjwhite/model.annotations.current/</a></li>
<li><strong>model.annotations.deidentify</strong> (Used to deidentify PHI fields) is at <a href=""http://github.com/walterjwhite/model.annotations.deidentify/"" rel=""nofollow"">http://github.com/walterjwhite/model.annotations.deidentify/</a></li>
<li><strong>model.annotations.verify</strong> (Used to verify fields (email address, address, phone number, etc.)) is at <a href=""http://github.com/walterjwhite/model.annotations.verify/"" rel=""nofollow"">http://github.com/walterjwhite/model.annotations.verify/</a></li>
<li><strong>model.time</strong> (Time entities) is at <a href=""http://github.com/walterjwhite/model.time/"" rel=""nofollow"">http://github.com/walterjwhite/model.time/</a></li>
<li><strong>model.http-security</strong> (Http Security entities) is at <a href=""http://github.com/walterjwhite/model.http-security/"" rel=""nofollow"">http://github.com/walterjwhite/model.http-security/</a></li>
<li><strong>model.restriction.base</strong> (Base Restriction Models) is at <a href=""http://github.com/walterjwhite/model.restriction.base/"" rel=""nofollow"">http://github.com/walterjwhite/model.restriction.base/</a></li>
<li><strong>model.restriction.time</strong> (Time Restrictions) is at <a href=""http://github.com/walterjwhite/model.restriction.time/"" rel=""nofollow"">http://github.com/walterjwhite/model.restriction.time/</a></li>
<li><strong>model.restriction.user</strong> (User/Group/Role Restrictions) is at <a href=""http://github.com/walterjwhite/model.restriction.user/"" rel=""nofollow"">http://github.com/walterjwhite/model.restriction.user/</a></li>
<li><strong>model.web.base</strong> (Base Web Model) is at <a href=""http://github.com/walterjwhite/model.web.base/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.base/</a></li>
<li><strong>model.web.resource</strong> (Web Resource Model Project) is at <a href=""http://github.com/walterjwhite/model.web.resource/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.resource/</a></li>
<li><strong>model.web.file</strong> (File model) is at <a href=""http://github.com/walterjwhite/model.web.file/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.file/</a></li>
<li><strong>model.web.content</strong> (Web Content Models) is at <a href=""http://github.com/walterjwhite/model.web.content/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.content/</a></li>
<li><strong>model.deployment</strong> (Deployment models / entities) is at <a href=""http://github.com/walterjwhite/model.deployment/"" rel=""nofollow"">http://github.com/walterjwhite/model.deployment/</a></li>
<li><strong>model.geolocation.tracking</strong> (Geolocation Tracking) is at <a href=""http://github.com/walterjwhite/model.geolocation.tracking/"" rel=""nofollow"">http://github.com/walterjwhite/model.geolocation.tracking/</a></li>
<li><strong>model.geolocation.device-location</strong> (Device Location models) is at <a href=""http://github.com/walterjwhite/model.geolocation.device-location/"" rel=""nofollow"">http://github.com/walterjwhite/model.geolocation.device-location/</a></li>
<li><strong>model.defect</strong> (Defect models / entities) is at <a href=""http://github.com/walterjwhite/model.defect/"" rel=""nofollow"">http://github.com/walterjwhite/model.defect/</a></li>
<li><strong>model.test.error</strong> (Test Errors) is at <a href=""http://github.com/walterjwhite/model.test.error/"" rel=""nofollow"">http://github.com/walterjwhite/model.test.error/</a></li>
<li><strong>model.web.automation.history</strong> (Test History) is at <a href=""http://github.com/walterjwhite/model.web.automation.history/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.automation.history/</a></li>
<li><strong>model.html</strong> (Test Html) is at <a href=""http://github.com/walterjwhite/model.html/"" rel=""nofollow"">http://github.com/walterjwhite/model.html/</a></li>
<li><strong>model.test.user</strong> (Test Http) is at <a href=""http://github.com/walterjwhite/model.test.user/"" rel=""nofollow"">http://github.com/walterjwhite/model.test.user/</a></li>
<li><strong>model.web.automation.test</strong> (Test Test entities) is at <a href=""http://github.com/walterjwhite/model.web.automation.test/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.automation.test/</a></li>
<li><strong>model.web.automation.validation</strong> (Test Validation entities) is at <a href=""http://github.com/walterjwhite/model.web.automation.validation/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.automation.validation/</a></li>
<li><strong>service.query.base</strong> (Provides framework for automatically injecting queries from an interface definition + annotation) is at <a href=""http://github.com/walterjwhite/service.query.base/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.base/</a></li>
<li><strong>service.query.defect</strong> (Provides query service for querying against defects / fixes) is at <a href=""http://github.com/walterjwhite/service.query.defect/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.defect/</a></li>
<li><strong>service.query.deployment</strong> (Deployment query service) is at <a href=""http://github.com/walterjwhite/service.query.deployment/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.deployment/</a></li>
<li><strong>model.restriction.geolocation</strong> (Geolocation restrictions) is at <a href=""http://github.com/walterjwhite/model.restriction.geolocation/"" rel=""nofollow"">http://github.com/walterjwhite/model.restriction.geolocation/</a></li>
<li><strong>service.query.address</strong> (Address query servicd) is at <a href=""http://github.com/walterjwhite/service.query.address/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.address/</a></li>
<li><strong>service.query.geolocation.device-location</strong> (Device Location Query Service) is at <a href=""http://github.com/walterjwhite/service.query.geolocation.device-location/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.geolocation.device-location/</a></li>
<li><strong>service.query.geolocation.base</strong> (Geolocation Query Service) is at <a href=""http://github.com/walterjwhite/service.query.geolocation.base/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.geolocation.base/</a></li>
<li><strong>service.query.http</strong> (Http Query Service) is at <a href=""http://github.com/walterjwhite/service.query.http/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.http/</a></li>
<li><strong>service.query.http-security</strong> (Http Security query service) is at <a href=""http://github.com/walterjwhite/service.query.http-security/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.http-security/</a></li>
<li><strong>service.query.user</strong> (User Query Service) is at <a href=""http://github.com/walterjwhite/service.query.user/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.user/</a></li>
<li><strong>service.query.web.file</strong> (Web File Query Service) is at <a href=""http://github.com/walterjwhite/service.query.web.file/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.web.file/</a></li>
<li><strong>service.query.web.content</strong> (Web Content Query Service) is at <a href=""http://github.com/walterjwhite/service.query.web.content/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.web.content/</a></li>
<li><strong>observer.startup.deployment</strong> (Startup Event Observer (deployment)) is at <a href=""http://github.com/walterjwhite/observer.startup.deployment/"" rel=""nofollow"">http://github.com/walterjwhite/observer.startup.deployment/</a></li>
<li><strong>observer.startup.defect</strong> (Startup Event Observer (defect)) is at <a href=""http://github.com/walterjwhite/observer.startup.defect/"" rel=""nofollow"">http://github.com/walterjwhite/observer.startup.defect/</a></li>
<li><strong>listener.servlet.request</strong> (Request Servlet Listener) is at <a href=""http://github.com/walterjwhite/listener.servlet.request/"" rel=""nofollow"">http://github.com/walterjwhite/listener.servlet.request/</a></li>
<li><strong>util.network</strong> (Network utilities) is at <a href=""http://github.com/walterjwhite/util.network/"" rel=""nofollow"">http://github.com/walterjwhite/util.network/</a></li>
<li><strong>listener.servlet.geolocation</strong> (Geolocation Servlet Listener) is at <a href=""http://github.com/walterjwhite/listener.servlet.geolocation/"" rel=""nofollow"">http://github.com/walterjwhite/listener.servlet.geolocation/</a></li>
<li><strong>listener.persistence.audit</strong> (Audit Persistence Listeners (Hibernate)) is at <a href=""http://github.com/walterjwhite/listener.persistence.audit/"" rel=""nofollow"">http://github.com/walterjwhite/listener.persistence.audit/</a></li>
<li><strong>listener.persistence.current</strong> (Current (User / Date) Persistence Listeners) is at <a href=""http://github.com/walterjwhite/listener.persistence.current/"" rel=""nofollow"">http://github.com/walterjwhite/listener.persistence.current/</a></li>
<li><strong>listener.persistence.restriction</strong> (Restriction Persistence Listener (secures entities on load)) is at <a href=""http://github.com/walterjwhite/listener.persistence.restriction/"" rel=""nofollow"">http://github.com/walterjwhite/listener.persistence.restriction/</a></li>
<li><strong>service.geolocation</strong> (Geolocation update service) is at <a href=""http://github.com/walterjwhite/service.geolocation/"" rel=""nofollow"">http://github.com/walterjwhite/service.geolocation/</a></li>
<li><strong>service.notification</strong> (Notification Service) is at <a href=""http://github.com/walterjwhite/service.notification/"" rel=""nofollow"">http://github.com/walterjwhite/service.notification/</a></li>
<li><strong>service.traffic-analysis</strong> (Traffic Analysis Service) is at <a href=""http://github.com/walterjwhite/service.traffic-analysis/"" rel=""nofollow"">http://github.com/walterjwhite/service.traffic-analysis/</a></li>
<li><strong>servlet.file</strong> (File Servlet) is at <a href=""http://github.com/walterjwhite/servlet.file/"" rel=""nofollow"">http://github.com/walterjwhite/servlet.file/</a></li>
<li><strong>util.web.file</strong> (File Utilities) is at <a href=""http://github.com/walterjwhite/util.web.file/"" rel=""nofollow"">http://github.com/walterjwhite/util.web.file/</a></li>
<li><strong>servlet.filter.base</strong> (Base Servlet Filters) is at <a href=""http://github.com/walterjwhite/servlet.filter.base/"" rel=""nofollow"">http://github.com/walterjwhite/servlet.filter.base/</a></li>
<li><strong>servlet.filter.web.content</strong> (Web Content servlet filter) is at <a href=""http://github.com/walterjwhite/servlet.filter.web.content/"" rel=""nofollow"">http://github.com/walterjwhite/servlet.filter.web.content/</a></li>
<li><strong>servlet.filter.security</strong> (Security servlet filters) is at <a href=""http://github.com/walterjwhite/servlet.filter.security/"" rel=""nofollow"">http://github.com/walterjwhite/servlet.filter.security/</a></li>
<li><strong>io.file</strong> (File functions (deprecated)) is at <a href=""http://github.com/walterjwhite/io.file/"" rel=""nofollow"">http://github.com/walterjwhite/io.file/</a></li>
<li><strong>deprecated.listener.postInitialization.libraryLogger</strong> (Library Logger (deprecated)) is at <a href=""http://github.com/walterjwhite/deprecated.listener.postInitialization.libraryLogger/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.listener.postInitialization.libraryLogger/</a></li>
<li><strong>deprecated.listener.startup.databaseImporter</strong> (Database Importer (allows multiple import.sql scripts to be run on server start)) is at <a href=""http://github.com/walterjwhite/deprecated.listener.startup.databaseImporter/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.listener.startup.databaseImporter/</a></li>
<li><strong>deprecated.listener.startup.scheduler</strong> (Scheduler (enables jobs to be schedule simply with annotations)) is at <a href=""http://github.com/walterjwhite/deprecated.listener.startup.scheduler/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.listener.startup.scheduler/</a></li>
<li><strong>docbook</strong> (Docbook format (provides docbook configuration for standard formatting)) is at <a href=""http://github.com/walterjwhite/docbook/"" rel=""nofollow"">http://github.com/walterjwhite/docbook/</a></li>
<li><strong>deprecated.model.client</strong> (Client models) is at <a href=""http://github.com/walterjwhite/deprecated.model.client/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.model.client/</a></li>
<li><strong>deprecated.model.virtualhost</strong> (Virtualhost models) is at <a href=""http://github.com/walterjwhite/deprecated.model.virtualhost/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.model.virtualhost/</a></li>
<li><strong>util.web.resource</strong> (Web Resource utils (deprecated, use security listeners instead for transparent security of entities)) is at <a href=""http://github.com/walterjwhite/util.web.resource/"" rel=""nofollow"">http://github.com/walterjwhite/util.web.resource/</a></li>
<li><strong>servlet.filter.notification</strong> (Notification servlet filter) is at <a href=""http://github.com/walterjwhite/servlet.filter.notification/"" rel=""nofollow"">http://github.com/walterjwhite/servlet.filter.notification/</a></li>
<li><strong>spring-core</strong> (base project for spring projects (deprecated)) is at <a href=""http://github.com/walterjwhite/spring-core/"" rel=""nofollow"">http://github.com/walterjwhite/spring-core/</a></li>
<li><strong>view.content</strong> (JSF components for content projects (provides the view layer)) is at <a href=""http://github.com/walterjwhite/view.content/"" rel=""nofollow"">http://github.com/walterjwhite/view.content/</a></li>
<li><strong>documentation.server-setup</strong> (Documentation for setting up a server (trying to make a repeatable process and ensure fewer defects and potential vulnerabilities)) is at
<a href=""http://github.com/walterjwhite/documentation.server-setup/"" rel=""nofollow"">http://github.com/walterjwhite/documentation.server-setup/</a></li>
<li><strong>server.http</strong> (Http Server using JBoss Netty) is at <a href=""http://github.com/walterjwhite/server.http/"" rel=""nofollow"">http://github.com/walterjwhite/server.http/</a></li>
<li><strong>listener.persistence.deidentify</strong> (Deidentification persistence listener) is at <a href=""http://github.com/walterjwhite/listener.persistence.deidentify/"" rel=""nofollow"">http://github.com/walterjwhite/listener.persistence.deidentify/</a></li>
<li><strong>util.http</strong> (Http Utilities) is at <a href=""http://github.com/walterjwhite/util.http/"" rel=""nofollow"">http://github.com/walterjwhite/util.http/</a></li>
<li><strong>deprecated.service.translate</strong> (Translation Service) is at <a href=""http://github.com/walterjwhite/deprecated.service.translate/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.service.translate/</a></li>
<li><strong>html5.example.danforys.mesmerizer</strong> (HTML5 grid example) is at <a href=""http://github.com/walterjwhite/html5.example.danforys.mesmerizer/"" rel=""nofollow"">http://github.com/walterjwhite/html5.example.danforys.mesmerizer/</a></li>
<li><strong>html5.framework</strong> (HTML5 framework (caching, client renderering, etc.)) is at <a href=""http://github.com/walterjwhite/html5.framework/"" rel=""nofollow"">http://github.com/walterjwhite/html5.framework/</a></li>
<li><strong>documentation.os.open-solaris</strong> (Open Solaris Documentation) is at <a href=""http://github.com/walterjwhite/documentation.os.open-solaris/"" rel=""nofollow"">http://github.com/walterjwhite/documentation.os.open-solaris/</a></li>
<li><strong>documentation.development</strong> (Development Documentation) is at <a href=""http://github.com/walterjwhite/documentation.development/"" rel=""nofollow"">http://github.com/walterjwhite/documentation.development/</a></li>
<li><strong>interceptor.exception</strong> (Generic exception interceptor for CDI) is at <a href=""http://github.com/walterjwhite/interceptor.exception/"" rel=""nofollow"">http://github.com/walterjwhite/interceptor.exception/</a></li>
<li><strong>observer.http-security</strong> (Http Security Observer (authentication events)) is at <a href=""http://github.com/walterjwhite/observer.http-security/"" rel=""nofollow"">http://github.com/walterjwhite/observer.http-security/</a></li>
<li><strong>model.preference.base</strong> (Base Preference model project) is at <a href=""http://github.com/walterjwhite/model.preference.base/"" rel=""nofollow"">http://github.com/walterjwhite/model.preference.base/</a></li>
<li><strong>model.preference.notification</strong> (Notification Preference Models) is at <a href=""http://github.com/walterjwhite/model.preference.notification/"" rel=""nofollow"">http://github.com/walterjwhite/model.preference.notification/</a></li>
<li><strong>deprecated.web.base</strong> (Deprecated project (abstract web components)) is at <a href=""http://github.com/walterjwhite/deprecated.web.base/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.web.base/</a></li>
<li><strong>model.annotations.ui</strong> (Annotations for automatically rendering Web Action Entities) is at <a href=""http://github.com/walterjwhite/model.annotations.ui/"" rel=""nofollow"">http://github.com/walterjwhite/model.annotations.ui/</a></li>
<li><strong>model.web.action.geolocation</strong> (Geolocation web action models) is at <a href=""http://github.com/walterjwhite/model.web.action.geolocation/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.geolocation/</a></li>
<li><strong>listener.servlet.web.traffic</strong> (Web Traffic Servlet Listener (captures web traffic)) is at <a href=""http://github.com/walterjwhite/listener.servlet.web.traffic/"" rel=""nofollow"">http://github.com/walterjwhite/listener.servlet.web.traffic/</a></li>
<li><strong>model.web.traffic</strong> (Web Traffic models (for capturing HTML5 traffic, can be used for HTML4 as well)) is at <a href=""http://github.com/walterjwhite/model.web.traffic/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.traffic/</a></li>
<li><strong>iterator.sql</strong> (SQL Iterator (for iterating through SQL scripts)) is at <a href=""http://github.com/walterjwhite/iterator.sql/"" rel=""nofollow"">http://github.com/walterjwhite/iterator.sql/</a></li>
<li><strong>model.notification</strong> (Notification Models/Entities) is at <a href=""http://github.com/walterjwhite/model.notification/"" rel=""nofollow"">http://github.com/walterjwhite/model.notification/</a></li>
<li><strong>model.fmea</strong> (FMEA models (for capturing potential failure mode and effects analysis)) is at <a href=""http://github.com/walterjwhite/model.fmea/"" rel=""nofollow"">http://github.com/walterjwhite/model.fmea/</a></li>
<li><strong>service.web.automation.operator</strong> (Operator for web automation project (simulates an application user)) is at <a href=""http://github.com/walterjwhite/service.web.automation.operator/"" rel=""nofollow"">http://github.com/walterjwhite/service.web.automation.operator/</a></li>
<li><strong>deprecated.iterator.web-automation</strong> (Web Automation iterators (page navigation)) is at <a href=""http://github.com/walterjwhite/deprecated.iterator.web-automation/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.iterator.web-automation/</a></li>
<li><strong>deprecated.OS.gentoo.install</strong> (Gentoo Install scripts (deprecated)) is at <a href=""http://github.com/walterjwhite/deprecated.OS.gentoo.install/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.OS.gentoo.install/</a></li>
<li><strong>web.action.base</strong> (Base Web Action module) is at <a href=""http://github.com/walterjwhite/web.action.base/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.base/</a></li>
<li><strong>web.action.contact.email</strong> (Provides the web action for contacting the web site via email) is at <a href=""http://github.com/walterjwhite/web.action.contact.email/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.contact.email/</a></li>
<li><strong>web.action.geolocation</strong> (Provides geolocation web action (type in an ip address, get back a geolocation)) is at <a href=""http://github.com/walterjwhite/web.action.geolocation/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.geolocation/</a></li>
<li><strong>web.action.search</strong> (Search web action (ability to search through all entities provided the user has permission)) is at <a href=""http://github.com/walterjwhite/web.action.search/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.search/</a></li>
<li><strong>web.action.user</strong> (User web actions (for managing users)) is at <a href=""http://github.com/walterjwhite/web.action.user/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.user/</a></li>
<li><strong>web.service.geolocation</strong> (Geolocation web service) is at <a href=""http://github.com/walterjwhite/web.service.geolocation/"" rel=""nofollow"">http://github.com/walterjwhite/web.service.geolocation/</a></li>
<li><strong>service.query.web.resource</strong> (Web Resource query service) is at <a href=""http://github.com/walterjwhite/service.query.web.resource/"" rel=""nofollow"">http://github.com/walterjwhite/service.query.web.resource/</a></li>
<li><strong>model.web.action.contact.email</strong> (Email backing the Contact action) is at <a href=""http://github.com/walterjwhite/model.web.action.contact.email/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.contact.email/</a></li>
<li><strong>interceptor.web</strong> (intercepts web action/service methods for auditing purposes) is at <a href=""http://github.com/walterjwhite/interceptor.web/"" rel=""nofollow"">http://github.com/walterjwhite/interceptor.web/</a></li>
<li><strong>prettyfaces.extension.sitemap</strong> (Prettyfaces sitemap extension (automatically generates a sitemap and publishes it to google, yahoo, msn, etc.)) is at <a href=""http://github.com/walterjwhite/prettyfaces.extension.sitemap/"" rel=""nofollow"">http://github.com/walterjwhite/prettyfaces.extension.sitemap/</a></li>
<li><strong>prettyfaces-tests</strong> (Some PrettyFaces test webapps) is at <a href=""http://github.com/walterjwhite/prettyfaces-tests/"" rel=""nofollow"">http://github.com/walterjwhite/prettyfaces-tests/</a></li>
<li><strong>scheduler.quartz</strong> (Quartz Job Scheduler manager (initializes a quartz job scheduler ...)) is at <a href=""http://github.com/walterjwhite/scheduler.quartz/"" rel=""nofollow"">http://github.com/walterjwhite/scheduler.quartz/</a></li>
<li><strong>observer.rFactor</strong> (rFactor event observers (for managing an rFactor server)) is at <a href=""http://github.com/walterjwhite/observer.rFactor/"" rel=""nofollow"">http://github.com/walterjwhite/observer.rFactor/</a></li>
<li><strong>observer.event-planner</strong> (Event Planner observers) is at <a href=""http://github.com/walterjwhite/observer.event-planner/"" rel=""nofollow"">http://github.com/walterjwhite/observer.event-planner/</a></li>
<li><strong>web.action.news</strong> (News web action components) is at <a href=""http://github.com/walterjwhite/web.action.news/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.news/</a></li>
<li><strong>web.action.rFactor</strong> (rFactor web actions (managing rFactor servers, configurations, races, etc.)) is at <a href=""http://github.com/walterjwhite/web.action.rFactor/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.rFactor/</a></li>
<li><strong>web.action.contact.chat</strong> (Chat web action components) is at <a href=""http://github.com/walterjwhite/web.action.contact.chat/"" rel=""nofollow"">http://github.com/walterjwhite/web.action.contact.chat/</a></li>
<li><strong>service.automation.web.search.job</strong> (Job Search Web Automation Service) is at <a href=""http://github.com/walterjwhite/service.automation.web.search.job/"" rel=""nofollow"">http://github.com/walterjwhite/service.automation.web.search.job/</a></li>
<li><strong>deprecated.service.analytics</strong> (analytics service (deprecated, use an actual reporting package instead)) is at <a href=""http://github.com/walterjwhite/deprecated.service.analytics/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.service.analytics/</a></li>
<li><strong>service.backup</strong> (Backup Service (backs up a database, log files, etc.)) is at <a href=""http://github.com/walterjwhite/service.backup/"" rel=""nofollow"">http://github.com/walterjwhite/service.backup/</a></li>
<li><strong>model.web.action.bookmark</strong> (bookmark web action models) is at <a href=""http://github.com/walterjwhite/model.web.action.bookmark/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.bookmark/</a></li>
<li><strong>model.web.action.search</strong> (search models) is at <a href=""http://github.com/walterjwhite/model.web.action.search/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.search/</a></li>
<li><strong>model.web.action.decision</strong> (Decisicion models (for capturing decisions and outcomes, useful for design decisions, and of course endless possibilities)) is at <a href=""http://github.com/walterjwhite/model.web.action.decision/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.decision/</a></li>
<li><strong>model.weather</strong> (weather models) is at <a href=""http://github.com/walterjwhite/model.weather/"" rel=""nofollow"">http://github.com/walterjwhite/model.weather/</a></li>
<li><strong>model.recipe</strong> (recipe models) is at <a href=""http://github.com/walterjwhite/model.recipe/"" rel=""nofollow"">http://github.com/walterjwhite/model.recipe/</a></li>
<li><strong>model.web.action.search.job</strong> (Job Search web action models) is at <a href=""http://github.com/walterjwhite/model.web.action.search.job/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.search.job/</a></li>
<li><strong>model.web.action.task</strong> (Task web action models) is at <a href=""http://github.com/walterjwhite/model.web.action.task/"" rel=""nofollow"">http://github.com/walterjwhite/model.web.action.task/</a></li>
<li><strong>model.travel</strong> (Travel Models) is at <a href=""http://github.com/walterjwhite/model.travel/"" rel=""nofollow"">http://github.com/walterjwhite/model.travel/</a></li>
<li><strong>model.events</strong> (Events model) is at <a href=""http://github.com/walterjwhite/model.events/"" rel=""nofollow"">http://github.com/walterjwhite/model.events/</a></li>
<li><strong>model.lodging</strong> (Lodging model) is at <a href=""http://github.com/walterjwhite/model.lodging/"" rel=""nofollow"">http://github.com/walterjwhite/model.lodging/</a></li>
<li><strong>model.business.billing</strong> (Billing Business Models (for capturing billing information)) is at <a href=""http://github.com/walterjwhite/model.business.billing/"" rel=""nofollow"">http://github.com/walterjwhite/model.business.billing/</a></li>
<li><strong>model.business.business</strong> (Business Models (for capturing billing information)) is at <a href=""http://github.com/walterjwhite/model.business.business/"" rel=""nofollow"">http://github.com/walterjwhite/model.business.business/</a></li>
<li><strong>model.business.service</strong> (Service Business Models (for capturing services provided)) is at <a href=""http://github.com/walterjwhite/model.business.service/"" rel=""nofollow"">http://github.com/walterjwhite/model.business.service/</a></li>
<li><strong>model.business.restaurant</strong> (Restaurant Business Models (for capturing billing information)) is at <a href=""http://github.com/walterjwhite/model.business.restaurant/"" rel=""nofollow"">http://github.com/walterjwhite/model.business.restaurant/</a></li>
<li><strong>model.news</strong> (News models) is at <a href=""http://github.com/walterjwhite/model.news/"" rel=""nofollow"">http://github.com/walterjwhite/model.news/</a></li>
<li><strong>model.project</strong> (Project models (for tracking projects, work, tasks, etc.)) is at <a href=""http://github.com/walterjwhite/model.project/"" rel=""nofollow"">http://github.com/walterjwhite/model.project/</a></li>
<li><strong>model.meal</strong> (Meal models) is at <a href=""http://github.com/walterjwhite/model.meal/"" rel=""nofollow"">http://github.com/walterjwhite/model.meal/</a></li>
<li><strong>model.gaming.rFactor</strong> (rFactor game models) is at <a href=""http://github.com/walterjwhite/model.gaming.rFactor/"" rel=""nofollow"">http://github.com/walterjwhite/model.gaming.rFactor/</a></li>
<li><strong>model.question-and-answer</strong> (Question and Answer models) is at <a href=""http://github.com/walterjwhite/model.question-and-answer/"" rel=""nofollow"">http://github.com/walterjwhite/model.question-and-answer/</a></li>
<li><strong>model.feedback</strong> (Feedback models) is at <a href=""http://github.com/walterjwhite/model.feedback/"" rel=""nofollow"">http://github.com/walterjwhite/model.feedback/</a></li>
<li><strong>linuxtag2010_javaEE6</strong> (Example code of Java EE 6 tutorial at Linuxtag 2010.) is at <a href=""http://github.com/walterjwhite/linuxtag2010_javaEE6/"" rel=""nofollow"">http://github.com/walterjwhite/linuxtag2010_javaEE6/</a></li>
<li><strong>deprecated.navigation.web.automation</strong> (Navigation Web automation module) is at <a href=""http://github.com/walterjwhite/deprecated.navigation.web.automation/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.navigation.web.automation/</a></li>
<li><strong>model.career</strong> (Career models / entities) is at <a href=""http://github.com/walterjwhite/model.career/"" rel=""nofollow"">http://github.com/walterjwhite/model.career/</a></li>
<li><strong>model.clothing</strong> (Clothing models / entities) is at <a href=""http://github.com/walterjwhite/model.clothing/"" rel=""nofollow"">http://github.com/walterjwhite/model.clothing/</a></li>
<li><strong>deprecated.model.crawler</strong> (deprecated, these projects will be split up (reference purposes only)) is at <a href=""http://github.com/walterjwhite/deprecated.model.crawler/"" rel=""nofollow"">http://github.com/walterjwhite/deprecated.model.crawler/</a></li>
<li><strong>resume</strong> (My Resume) is at <a href=""http://github.com/walterjwhite/resume/"" rel=""nofollow"">http://github.com/walterjwhite/resume/</a></li>
<li><strong>business-cards</strong> (Business Cards) is at <a href=""http://github.com/walterjwhite/business-cards/"" rel=""nofollow"">http://github.com/walterjwhite/business-cards/</a></li>
</ul>
"
"<p>I have some existing ruby classes in a app/classes folder:</p>

<pre><code>class A
   ...
end

class B
   ...
end
</code></pre>

<p>I'd like to group those classes in a module MyModule</p>

<p>I know I could do like:</p>

<pre><code>module MyModule
  class A
      ...
   end
   class B
      ...
   end
end
</code></pre>

<p>but is there a meta programming shortcut that could do the same so I could ""import"" all the existing classes ?</p>

<p>Thanks,
Luc</p>
","2988","","<p>@Squeegy's answer already tells you what to do, but I think it is equally important to understand <em>why</em> that works. And it's actually pretty simple: classes in Ruby are nothing special. They are just objects like any other object that get assigned to variables just like any other variable. More precisely: they are instances of the <code>Class</code> class and they usually get assigned to constants (i.e. variables whose name starts with an uppercase letter).</p>

<p>So, just like you can alias any <em>other</em> object to multiple variables:</p>

<pre><code>a = ''
b = a
a &lt;&lt; 'Hello'
c = b
b &lt;&lt; ', World!'
puts c # =&gt; Hello, World!
</code></pre>

<p>You can also alias classes to multiple variables:</p>

<pre><code>class Foo; end
bar = Foo
p bar.new # =&gt; #&lt;Foo:0x1d9f220&gt;
</code></pre>

<p>If you want to <em>move</em> the classes into the namespace instead of just aliasing them, you also need to set the original variables to some other object like <code>nil</code>, in addition to @Squeegy's answer:</p>

<pre><code>::A = nil
::B = nil
</code></pre>
"
"<p>I need an algorithm that introduces data like a stack, so when I scan the structure I can read them in the same sequence as they were introduced, for sequential access. Also these values are stored in buckets, like a hashtable, so I can fragment the whole structure for disk storage and have fast random access.</p>

<p>Is there an algorithm like this, or should I have two separate structures? What's the best strategy?</p>

<p>Best regards!</p>
","2988","","<p>This would be something like an Ordered Map, right? Those are usually implemented by combining a linked list with whatever you want to use to implement a map (e.g. a hash table).</p>

<p>In Ruby 1.9, the specification of the <code>Hash</code> class (which is confusingly how Ruby spells ""Map"") was changed such that it preserves insertion order. Most Ruby 1.9 implementations I know implemented this as some sort of combination of a list and a hash table. Rubinius's implementation is especially easy to read, since it is written 100% in Ruby: <a href=""https://GitHub.Com/EvanPhx/Rubinius/blob/master/kernel/common/hash.rb"" rel=""nofollow""><code>kernel/common/hash.rb</code></a></p>

<p>Java has an implementation of an ordered map, called <code>LinkedHashMap</code>. Here's the source from Oracle OpenJDK 7: <a href=""http://Hg.OpenJDK.Java.Net/jdk7/tl/jdk/file/default/src/share/classes/java/util/LinkedHashMap.java"" rel=""nofollow""><code>/share/classes/java/util/LinkedHashMap.java</code></a></p>

<p>Apache Commons Collections has an <code>OrderedMap</code> interface and two implementations: <a href=""http://SVN.Apache.Org/viewvc/commons/proper/collections/trunk/src/java/org/apache/commons/collections/map/LinkedMap.java?view=markup"" rel=""nofollow""><code>LinkedMap</code></a> and <a href=""http://SVN.Apache.Org/viewvc/commons/proper/collections/trunk/src/java/org/apache/commons/collections/map/ListOrderedMap.java?view=markup"" rel=""nofollow""><code>ListOrderedMap</code></a>.</p>

<p>If you are a little bit careful, you should be able to preserve the asymptotic complexity guarantees of an unordered map.</p>
"
"<p>What is the theoretical/practical limit to the recursion depth in languages implementing Tail Call optimisation? (Please assume that the recurring function is properly tail call-ed).</p>

<p>My guess is that the theoretical limit is NONE, as there is no recursive process, even though it is recursive procedure. Practical limit would be that allowed by the main memory available to be used. Please clarify or correct if I am wrong somewhere.</p>
","2988","","<p>In addition to what @Mehrdad Afshari wrote, I just want to point out that it is actually very important that tail recursion (or more generally a chain of tail calls) can be potentially infinite, because otherwise you couldn't write a web server, an operating system, an interpreter, a REPL, or really any kind of event processing loop in a functional language.</p>

<p>After all, an operating system is nothing but an infinite loop, and the way to write a loop in a functional language is using tail recursion. If tail recursion weren't infinite, the loop wouldn't be infinite. Therefore, you could not only not write an operating system, the language wouldn't even be Turing-complete.</p>

<p>Basically, this is how you write a web server in a functional language:</p>

<pre><code>def loop(queue) = {
  // handle first request in queue
  loop(queue)
}
</code></pre>

<p>Without infinite tail recursion, this would quickly run out of memory.</p>
"
"<p>In terms of scope? Actual implementation in memory? The syntax? For eg, if (let a 1) Is 'a' a variable or a symbol? </p>
","2988","","<p>A <em>symbol</em> is a name for a thing. A <em>variable</em> is a mutable pointer to a mutable storage location.</p>

<p>In the code snippet you showed, both <code>let</code> and <code>a</code> are symbols. Within the scope of the <code>let</code> block, the symbol <code>a</code> denotes a variable which is currently bound to the value <code>1</code>.</p>

<p>But the name of the thing is not the thing itself. The symbol <code>a</code> is not a variable. It is a <em>name</em> for a variable. But <em>only</em> in this specific context. In a different context, the name <code>a</code> can refer to a completely different thing.</p>

<p>Example: the symbol <code>jaguar</code> may, depending on context, denote</p>

<ul>
<li><a href=""http://Wikipedia.Org/wiki/Mac_OS_X_v10.2"" rel=""nofollow"">OSX 10.2</a></li>
<li><a href=""http://Wikipedia.Org/wiki/Atari_Jaguar"" rel=""nofollow"">a gaming console</a></li>
<li><a href=""http://Wikipedia.Org/wiki/Jaguar_Cars"" rel=""nofollow"">a car manufacturer</a></li>
<li><a href=""http://Wikipedia.Org/wiki/SEPECAT_Jaguar"" rel=""nofollow"">a ground attack military jet airplane</a></li>
<li><a href=""http://Wikipedia.Org/wiki/XF10F_Jaguar"" rel=""nofollow"">another military jet airplane</a></li>
<li><a href=""http://Wikipedia.Org/wiki/Jaguar_%28computer%29"" rel=""nofollow"">a supercomputer</a></li>
<li><a href=""http://Wikipedia.Org/wiki/Fender_Jaguar"" rel=""nofollow"">an electric guitar</a></li>
<li>and <a href=""http://Wikipedia.Org/wiki/Jaguar_%28disambiguation%29"" rel=""nofollow"">a whole lot of other things</a></li>
<li>oh, did I <a href=""http://Wikipedia.Org/wiki/Jaguar"" rel=""nofollow"">forget something?</a></li>
</ul>
"
"<p>I have recently cloned an hg repo to git so i can post it on github. Lots of the email addresses are wrong and I would like to use git rebase to change them before anyone forks this project. If i change them how do I go about pushing the new, completely rebased repo to github? can I just rebase and then <code> git push</code>? do i have to delete the project first?</p>
","2988","","<p>Almost. You need to use <code>git push -f</code> (or <code>--force</code>) in order to overwrite the old history.</p>

<hr>

<p>On a completely different note: why would you ""<em>like to use <code>git rebase</code></em>"" to change the committer e-mail addresses instead of <code>git filter-branch --env-filter</code>?</p>
"
"<pre><code>Microsoft Windows [Version 6.0.6002]
Copyright (c) 2006 Microsoft Corporation.  All rights reserved.

C:\Windows\system32&gt;gem install rake
Successfully installed rake-0.8.7
1 gem installed
Installing ri documentation for rake-0.8.7...
Installing RDoc documentation for rake-0.8.7...

C:\Windows\system32&gt;rake
C:/Program Files (x86)/Ruby192/lib/ruby/1.9.1/rubygems.rb:340:in `bin_path': can
't find executable rake for rake-0.8.7 (Gem::Exception)
        from C:/Program Files (x86)/Ruby192/bin/rake:19:in `&lt;main&gt;'

C:\Windows\system32&gt;
</code></pre>

<p>Why can't my system find the rake command? Where should I start debugging the problem?</p>

<p><strong>Update 1</strong></p>

<p>I'm using ruby 1.9.2 and installed it using the ruby installer for windows (http://rubyinstaller.org/)</p>
","2988","","<p>You cannot install Ruby (or RubyGems) in a path with whitespace.</p>
"
"<p>I'm trying to get a sense of the similarities between languages in syntax. How similar are Python, jQuery and C? I started programming in Actionscript 3 and then moved on to Javascript , then went on and learned Prototype, and then I started using jQuery and found that the syntax is very different. So is jQuery more like C and Python?</p>
","2988","","<p>For jQuery, the answer is pretty simple: jQuery isn't a language, therefore it doesn't have syntax.</p>

<p>For Python and C, the answer from a high-level point of view is also very simple: Python's syntax is directly inspired by C's syntax. (Or more precisely, both Python's and C's syntax are inspired by ALGOL's syntax.) There is really only one significant difference from a high-level point of view: C uses opening and closing curly braces to delimit blocks, Python uses indentation.</p>

<p>Otherwise, the two high-level syntaxes are almost the same: both have unary and binary operators, even with similar precedence (unline Smalltalk, for example, which doesn't have operators), both distinguish between statements and expressions (unlike Ruby, for example, which doesn't have statements), both use semicolons between statements (although technically, the semicolon is a statement <em>terminator</em> in C and a statement <em>separator</em> in Python), both use similar syntax for numeric literals and string literals as well as array/list indexing.</p>

<p>There are a couple of syntactic differences related to the different semantics: in Python, variables are untyped (only objects are typed), so there is no type annotation syntax for variable declarations (in fact, there is no syntax for variable declarations <em>at all</em>). There <em>is</em> syntax for type annotations of function parameters and function return values, but in Python the types come <em>after</em> the parameter name, and the type annotations are optional. With variables being untyped, the concept of <em>type casting</em> doesn't make sense, so there is no syntax for that. Neither is there any pointer-related syntax, since Python doesn't have those.</p>

<p>Python has a couple more literals than C: lists, sets, dictionaries, in particular. However, they follow in the C tradition: in C, an array is declared and indexed using square brackets, so Python uses square brackets for array literals.</p>
"
"<p>Is there a way to change the file that is being pushed to the server using a <a href=""http://progit.org/book/ch7-3.html#serverside_hooks"" rel=""nofollow"">server-side pre-receive hook</a>?</p>

<p>Say I want to add something to the end of a file like:</p>

<pre><code>//End of Org
</code></pre>

<p>each time someone pushes to my repo.</p>

<p>Is there a way you can change the file coming in using <a href=""http://git-scm.com/docs/githooks"" rel=""nofollow""><code>git hooks</code></a>?</p>
","2988","","<p>Just for completeness sake: it should be rather obvious from the name that what you are asking for, is simply impossible. The <code>pre-receive</code> hook cannot change any files, because it hasn't <em>received</em> any yet!</p>
"
"<p>I'd like to read the logic code of <code>=</code>, but can't find it.  </p>

<p><strong>UPDATE:</strong></p>

<p>I found the <code>test_multi</code> method text/ruby/test_assignment.rb. It's Ruby code, but seems will let me to the destination.</p>

<p>The reason I want to check the code is find how it handles multi-assignment. Like <code>a,b,c = [1,2,3]</code>.</p>

<p><strong>UPDATE:</strong></p>

<p>I found keywords ""MASGN"" and led me to </p>

<p><code>compile_massign(rb_iseq_t *iseq, LINK_ANCHOR *ret, NODE *node, int poped)</code> in compile.c</p>

<p><a href=""http://github.com/ruby/ruby/commit/e39eb9dab50eaa681467e51145b37cdc11667830#diff-2"" rel=""nofollow"">http://github.com/ruby/ruby/commit/e39eb9dab50eaa681467e51145b37cdc11667830#diff-2</a></p>
","2988","","<p>I don't know what you mean by ""the C source code of Ruby"". Ruby is a programming language. Programming languages don't have source code (only compilers and interpreters do), they have <em>specifications</em>.</p>

<p>The specification of multiple assignment is in section <em>11.3.1.3 Multiple Assignments</em> on pages 59&ndash;62 of the current (2009-12-01) <a href=""http://Ruby-Std.NetLab.Jp/"" rel=""nofollow"">ISO Ruby Draft Specification</a> and in <a href=""https://GitHub.Com/RubySpec/RubySpec/blob/master/language/variables_spec.rb"" rel=""nofollow""><code>language/variables_spec.rb</code></a> (search for ""<em>multiple</em>"", unfortunately the tests are a bit scattered around the file) in the executable <a href=""http://RubySpec.Org/"" rel=""nofollow"">RubySpec</a>.</p>

<p>A nice overview of a possible implementation can be found in the Rubinius compiler (sorry, no C source code here, either) in lines 482&ndash;607 of <a href=""https://GitHub.Com/EvanPhx/Rubinius/blob/master/lib/compiler/ast/variables.rb#L482-607"" rel=""nofollow""><code>lib/compiler/ast/variables.rb</code></a>.</p>
"
"<p>I wonder on which language is Chromium OS written.I guess they have used C/C++ but did they put something different(Go,).Did they used Assembly for low level code as I know that they had to change some things to make booting a lot faster?</p>
","2988","","<p>It's not really written in anything. It's yet another Linux distribution which packages a whole bunch of pre-exisiting programs, every single one developed independently and written in whichever language its individual author prefers.</p>

<p>It's really just YAUD (yet another Ubuntu derivative).</p>
"
"<p>I am from Java world and I wonder what is so great about dynamic typing in Python besides missing errors while compiling the code?</p>

<p>Do you like Python's typing? Do you have an example where it helped in a big project? Isn't it a bit error prone?</p>
","2988","","<p>Static type checking is undecidable in the general case. This means that there are programs which are statically type-safe but for which the type-checker cannot <em>prove</em> that they are statically type-safe, and thus the type-checker must reject those programs.</p>

<p>In other words: there are type-safe programs that the type-checker will not allow you to write. Or, even more succinctly: static typing prevents you from writing certain programs.</p>

<p>This applies to <em>all</em> static typing in general, not just to Java.</p>

<p>As to Java specifically: it has a rather crappy type system. Its type system is not expressive enough to express even <em>very</em> simple properties. For example: where in the type of <code>static void java.util.Arrays.sort(Object[] a)</code> does it actually say that the result has to be, you know, sorted? Or that the array elements have to be partially ordered?</p>

<p>Another problem with Java is that its type system has holes so big that you can drive a truck through:</p>

<pre><code>String[] a = new String[1];
Object[] b = a;
b[0] = 1; // ArrayStoreException
</code></pre>

<p>The problem in this particular case are covariant arrays. It's simply not possible for arrays to be both covariant and type-safe.</p>

<p>Java combines all the hassle of static typing with none of the advantages. So, you might just as well get rid of the hassle.</p>

<p>However, note that this is not universal. There are other languages which have much better type systems for which the trade-offs are much less clear.</p>

<p>For example, here is the most stupid language benchmark of all time (Fibonacci) in Python:</p>

<pre><code>def fib(n):
    if n &lt; 2: return n
    return fib(n-2) + fib(n-1)
</code></pre>

<p>and Java:</p>

<pre><code>int fib(int n) {
    if (n &lt; 2) return n;
    return fib(n-2) + fib(n-1);
}
</code></pre>

<p>Note that there is quite a bit more clutter there, which is solely related to static typing. To make the comparison more fair, let's imagine a language with Python's syntax and Java's semantics:</p>

<pre><code>def fib(n: int) -&gt; int:
    if n &lt; 2: return n
    return fib(n-2) + fib(n-1)
</code></pre>

<p>[Interesting side note: with the addition of optional static type annotations in Python 3.x, that <em>is</em> actually also valid Python code, although it is obviously still not statically type-safe, since the annotations are just that: annotations. They are never actually checked anywhere.]</p>

<p>There <em>is</em> some definite clutter there. However, in Haskell it looks like this:</p>

<pre><code>fib n
  |     n &lt; 2 = n
  | otherwise = fib (n-2) + fib (n-1)
</code></pre>

<p>Unlike the Python version, this <em>is</em> perfectly statically type-safe, but there is zero type-related clutter.</p>

<p>In this particular case, the question between the benefits of static and dynamic typing are much less clear.</p>

<p>By the way, a more idiomatic Haskell version would probably look like this:</p>

<pre><code>fib 0 = 0
fib 1 = 1
fib n = fib (n-2) + fib (n-1)
</code></pre>

<p>or this:</p>

<pre><code>fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
</code></pre>

<p>Really, the much more important difference between Java and Python is not so much that Java is statically typed and Python is dynamically typed, but rather that Java is just not a good programming language, while Python <em>is</em>. So, Java is just always going to lose, not because it is statically typed, but because it is crap. Comparing BASIC with Haskell, Haskell clearly wins, but again, not because it is statically typed but because BASIC is crap.</p>

<p>A much more interesting comparison would be Java vs. BASIC or Python vs. Haskell.</p>
"
"<p>I'm wondering, what's the origin of asking interviewees to manually parse a string as an int? (without relying on any casting/type-conversion that may be built into the language).  Is this a standard question, suggested from a book or list or something?  </p>

<p>Has anybody else here on SO gotten asked this particular question during an interview?  I guess I nailed it when explaining it and scribbling it on the white board, as I have received a tentative job offer :)  </p>

<p>Below is my fleshed out implementation in Javascript.  There are some naive facets (e.g. it doesn't take a radix argument) to the following but it demonstrates a (more or less) correct algorithm.</p>

<pre><code>function to_i(strValue) { //named so as to not be confused with parseInt
    if (typeof strValue !== 'string' || strValue.length === 0) {
        return Number.NaN;
    }

    var tmpStr = strValue;
    var intValue = 0;
    var mult = 1;

    for (var pos=tmpStr.length-1; pos&gt;=0; pos--) {
        var charCode = tmpStr.charCodeAt(pos);
        if (charCode &lt; 48 || charCode &gt; 57) {
            return Number.NaN;
        }

        intValue += mult * Math.abs(48-charCode);
        tmpStr = tmpStr.substr(0, tmpStr.length-1); 
        mult *= 10;
    }

    return intValue;
}
</code></pre>
","2988","","<p>I haven't been asked this question, either.</p>

<p>At first glance, it seems like one of those ""weed the obviously incompetent idiots out as early as possible to avaid wasting valuable interview time"" type of questions.</p>

<p>But if you look at it more closely, there's actually some quite interesting stuff in there. So, if <em>I</em> were the one <em>asking</em> that question, here's what I would be looking for:</p>

<ul>
<li>That question is obviously stupid, because there already <em>is</em> a function in the ECMAScript standard library that does exactly that. And I would want the interviewee to <em>tell</em> me that the question is stupid, because otherwise they are either a) mindless zombies that stupidly follow braindead orders instead of engaging their brain, or b) they don't actually <em>know</em> that that function exists.</li>
<li>It's also obviously a parsing problem, and it is interesting to see whether the interviewee approaches it as more of a string hacking problem or a formal parsing problem and how much overhead either approach generates. In this particular case, I believe that string hacking is the right approach, but it still leads into a great followup question: ""Now do the same thing with a recursive-descent parser"". Any programmer should be able to sketch out the recursive-descent parser for this problem within a couple of minutes.</li>
<li>Last but not least, this is obviously a fold over the characters of the string. Now, I would not necessarily expect a novice programmer to spot this fold on their own right away, but if I hint that there is a fold in there, they should be able to spot it themselves, and rewrite their solution in form of a fold.</li>
<li>And of course, you can judge all the general qualities that this type of question allows you to: does the interviewee stop and think about the problem or does he start hacking away. Does he start with requirements, documentation, specification, examples, tests, or code. Does he ask for clarification of the corner cases (like what happens with the empty string, what happens with a string that only contains a minus sign and nothing else, what about whitespace, are strings guaranteed to be well-formed integers, is negative zero a well-formed integer). Does he habitually use the strict subset of ES5. Does he write readable code. Does he write <code>jslint</code>-friendly code</li>
</ul>

<p>Here's an example of solving the problem with a fold (which in ECMAScript is called <code>reduce</code>):</p>

<pre><code>""use strict"";

function toInteger(s) {
    return s.split('').reverse().reduce(function (n, c, i) {
        if (c === '-') return -n;
        return n + (c.charCodeAt(0) - 48) * Math.pow(10, i);
    }, 0);
}
</code></pre>

<p>And this is a simple recursive-descent parser which builds up the value on the fly:</p>

<pre><code>""use strict"";

function toInteger(s) {
    var input,
        output = 0,
        sign = 1,

        lookahead = function () {
            return input.charAt(0);
        },

        consume = function () {
            var res = input.slice(0, 1);
            input = input.slice(1, input.length);
            return res;
        },

        isDigit = function (c) {
            return /[0-9]/.test(c);
        },

        signParser = function () {
            if (lookahead() === '-') {
                sign *= -1;
                consume();
            }
        },

        digitParser = function () {
            if (!isDigit(lookahead())) return false;
            output *= 10;
            output += (consume().charCodeAt(0) - 48);
            return true;
        },

        numberParser = function () {
            signParser();
            while (digitParser());
        };

    input = s;
    numberParser();
    if (!input.length === 0) return false;
    output *= sign;

    return output;
}
</code></pre>

<p>As is always the case with this kind of interview questions, nobody would seriously expect the interviewee to just write those functions down on the whiteboard. Especially the recursive-descent parser. But IMHO, anybody <em>should</em> be able to sketch out what the function would look like. In particular, one of the beauties of a recursive-descent parser is that it is a very direct transformation of a context-free grammar into a set of parsing functions, and an interviewee should be able to explain roughly how that transformation works, and what kind of parsing functions correspond to what kind of grammar constructs.</p>

<hr>

<p><em>phew</em>, that is a <em>lot</em> of stuff that you can get out of such a simple question!</p>
"
"<p>My orginal hash is like as <code>hash = {""sku_id""=&gt;[4], ""brand_active""=&gt;[""true""], ""salesman_active""=&gt;[""true""]}</code>
How to remove the array within hash. that means to convert the hash like
<code>{""sku_id""=&gt;4, ""brand_active""=&gt;""true"", ""salesman_active""=&gt;""true""}</code></p>
","2988","","<p>Use this function:</p>

<pre><code>Hash[hash.map {|k, v| [k, *v] }]
</code></pre>
"
"<p>C++:</p>

<pre><code>for(i=0,j=0;i&lt;0;i++,j++)
</code></pre>

<p>What's the equivalence to this in ruby? </p>

<p>Besides the normal <code>for</code>, <code>while</code> loop seen in C++. Can someone name off the other special loops ruby has? Such as <code>.times</code>? <code>.each</code>?</p>

<p>Thanks in advance.</p>
","2988","","<p>I am not terribly familiar with C++, but AFAICS, the equivalent Ruby code to the loop you posted is simply:</p>

<pre><code>i, j = 0, 0
</code></pre>

<p>Which shows once again the expressive power Ruby has. <em>Anybody</em> can figure out what this does, even if he has never seen Ruby before, while the equivalent C++ takes quite a while to figure out.</p>
"
"<p>I'm about to go crazy here so I'll just ask:</p>

<p>How the hell do you install the Ruby Gem Jekyll on Windows.</p>

<p>Jekyll depends on fast-stemmer-1.0.0 and that has to be built as a native extension</p>

<p>I found this handy guide on <a href=""http://github.com/oneclick/rubyinstaller/wiki/development-kit"">RubyDevKit</a> to install a 'sane' environment on Windows and it works, but fast-stemmer is still hell bent on using nmake to build the binaries and that returns the following error:</p>

<pre><code>C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC&gt;gem install jekyll
Temporarily enhancing PATH to include DevKit...
Building native extensions.  This could take a while...
ERROR:  Error installing jekyll:
        ERROR: Failed to build gem native extension.

C:/Ruby/bin/ruby.exe extconf.rb
creating Makefile

nmake

Microsoft (R) Program Maintenance Utility Version 10.00.30319.01
Copyright (C) Microsoft Corporation.  All rights reserved.

        cl -nologo -I. -IC:/Ruby/lib/ruby/1.8/i386-mswin32 -IC:/Ruby/lib/ruby/1.
8/i386-mswin32 -I. -MD -Zi -O2b2xg- -G6  -c -Tcporter.c
cl : Command line warning D9035 : option 'Og-' has been deprecated and will be r
emoved in a future release
cl : Command line warning D9002 : ignoring unknown option '-G6'
porter.c
porter.c(31) : fatal error C1083: Cannot open include file: 'stdlib.h': No such
file or directory
NMAKE : fatal error U1077: '""C:\Program Files (x86)\Microsoft Visual Studio 10.0
\VC\BIN\cl.EXE""' : return code '0x2'
Stop.


Gem files will remain installed in C:/Ruby/lib/ruby/gems/1.8/gems/fast-stemmer-1
.0.0 for inspection.
Results logged to C:/Ruby/lib/ruby/gems/1.8/gems/fast-stemmer-1.0.0/ext/gem_make
.out
</code></pre>

<p>I'm using the nmake that came with Visual Studio 2010 in C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin as suggested in some other Article. But it still doesn't work.</p>

<p>I've tried running the gem install from the MSYS shell that comes with the DevKit so I do have the Unix make at that point, but I don't know how to instruct Ruby to use make instead of nmake (and reading the mkmf.rb didn't enlighten me either). It's hell bent on using nmake and that fails pretty with the above error message</p>

<p>Any help on this would be greatly appreciated!</p>

<p><strong>Update</strong>
I finally realized that I had not installed Ruby through RubyInstaller.org. I reinstalled using the Installer and now building jekyll with the DevKit works fine. </p>

<p>Thanks to everyone for pointing that out!</p>
","2988","","<p>Where does that <code>mswin32</code> come from? Are you using the DevKit with the mswin32 port of MRI? The DevKit is only for the current MinGW port of MRI and YARV, it does not work with the mswin32 port (which, BTW, has been obsolete for quite some time now).</p>

<p>If you use the mswin32 port, you are more or less on your own. In particular, you <em>must</em> use Microsoft Visual C++ 6.0, because that's what the mswin32 port is compiled with, and later versions of Visual C++ are not guaranteed to be binary compatible. Visual C++ 10.0 (which is what you seem to be using) does not work. Try forcing the platform by explicitly calling <code>gem install --platform=mswin32 fast-stemmer</code> or even <code>gem install --platform=x86-mswin32-60 fast-stemmer</code>. That way, if the maintainer has provided a pre-compiled version, you don't need to compile it yourself.</p>

<p>If you do <em>not</em> use the mswin32 port but rather the MinGW port, try explicitly calling <code>gem install --platform=ruby fast-stemmer</code>. And if that doesn't help, try <code>gem install --platform=x86-mingw32 fast-stemmer</code></p>
"
"<p>I'm coding a program and I have the entire GPLv3 license from <a href=""http://www.gnu.org/licenses/gpl-3.0.txt"" rel=""nofollow"">http://www.gnu.org/licenses/gpl-3.0.txt</a> in a COPYING text file. However, at the end, there's a section on 'How to Apply These Terms to Your New Programs'. Do I keep this in COPYING? Is it part of the GPLv3 or a reminder on how to use it?</p>
","2988","","<p>It is not part of the license terms, but it is part of the license text (if that makes sense). The license itself is a coprighted work, and just like any other copyrighted work, you need to obey <em>its</em> license, which in this case basically just says ""don't modify anything.""</p>

<p>In particular, the GPL <em>itself</em> is <em>not</em> released under a free license, because that would allow anyone to modify it, which would negate the whole purpose of having a standardized license with a standardized name. In general, standards can never be under a free license, since the whole point of a free license is the ability to modify and the whole point of a standard is that it is the same for everybody. (Note that, of course, the standards <em>document</em>, i.e. the <em>text</em> that <em>describes</em> the standard, may very well be under a free license.)</p>
"
"<p>Is there any standard way to avoid truthiness in Ruby, or would I need to roll my own solution, such as</p>

<pre><code>class FalseClass
  def to_bool
    self
  end
end

class TrueClass
  def to_bool
    self
  end
end

true.to_bool # =&gt; true
false.to_bool # =&gt; false
nil.to_bool # =&gt; NoMethodError
42.to_bool # =&gt; NoMethodError
</code></pre>

<p><strong>Background:</strong> I know that <code>to_bool</code> would go against the permissive nature of Ruby, but I'm playing around with ternary logic, and want to avoid accidentally doing something like</p>

<pre><code>require ""ternary_logic""
x = UNKNOWN
do_something if x
</code></pre>

<p>I'm using ternary logic because I'm writing a parser of a flatmate-share web site (for personal, not commercial, use) and it's possible for some fields to be missing information, and therefore it'd be unknown whether the place meets my criteria or not. I'd try to limit the amount of code that uses the ternary logic, however.</p>
","2988","","<p>It is not possible to influence truthiness or falsiness in Ruby. <code>nil</code> and <code>false</code> are falsy, everything else is truthy.</p>

<p>It's a feature that comes up every couple of years or so, but is always rejected. (For reasons that I personally don't find convincing, but I'm not the one calling the shots.)</p>

<p>You will have to implement your own logic system, but you cannot prohibit someone from using Ruby's logical operators on an unknown value.</p>

<p><a href=""https://GitHub.Com/JoergWMittag/B001e/"">I re-implemented Ruby's logic system once</a>, for fun and to show it can be done. It should be fairly easy to extend this to ternary logic. (When I wrote this, I actually took the conformance tests from RubySpec and <a href=""https://GitHub.Com/JoergWMittag/b001e/tree/master/spec/"">ported them to my implementation</a>, and they all passed, so I'm fairly confident that it matches Ruby's semantics.)</p>
"
"<p>I wonder if can I say that a <strong>constructor</strong> is a special case of a <strong>method</strong>?</p>
","2988","","<p>In languages that have constructors, you can usually think of a constructor as a special case of a factory method. (Note: I don't mean the GoF Factory Method Software Design Pattern, I'm just talking about <em>any</em> class method that creates new instances.) Usually, this ""special casing"" generally takes the form of annoying restrictions (e.g. in Java, you can only call the parent constructor at the beginning of the constructor), which is why even in languages that <em>do</em> have constructors, you often end up using or writing factory methods anyway.</p>

<p>So, if constructors are basically factory methods with restrictions, there is really no need to have them both, and thus many languages simply get rid of constructors. Examples include Objective-C, Ruby, Smalltalk, Self, Newspeak, ECMAScript/JavaScript, Io, Ioke, Seph and many others.</p>

<p>In Ruby, the closest thing to a constructor is the method <a href=""http://RDoc.Info/docs/ruby-core/1.9.2/Class#allocate-instance_method"" rel=""nofollow""><code>Class#allocate</code></a>, which simply allocates an empty object and sets that object's class pointer. Nothing more. Since such an empty object is obviously unusable, it needs to initialized. Per convention, this initialization is performed by <code>#initialize</code>. As a convenience, because it is cumbersome to always have to remember to both allocate and initialize (as any Objective-C developer can probably attest), there is a helper method called <code>Class#new</code>, which looks something like this:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate
    obj.initialize(*args, &amp;block)

    return obj
  end
end
</code></pre>

<p>This allows you to replace this:</p>

<pre><code>foo = Foo.allocate
foo.initialize(bar)
</code></pre>

<p>With this:</p>

<pre><code>foo = Foo.new(bar)
</code></pre>

<p>It is important to note that there is nothing special about any of these methods. Well, with one exception: <code>Class#allocate</code> obviously has to be able to set the class pointer and to allocate memory, which is something that is not possible in Ruby. So, this method has to somehow come from outside the system, which e.g. in MRI means that it is written in C, not Ruby. But that only concerns the implementation. There are no special dispatch rules, no special override rules. It's just a method like any other that can e.g. call <code>super</code> whereever, whenever and how often it wants and can return what it wants.</p>
"
"<p>Instead of adding the PLinq extension statement AsParallel() manually could not the compiler figure this out for us auto-magically? Are there any examples where you specifically do not  want parallelization if the code supports it?</p>
","2988","","<p>The good news is that the compiler researchers say that we are <em>really</em> close to having automatically parallelizing compilers. The bad news is that they have been saying that for fifty years.</p>

<p>The problem with impure languages such as C# is usually that there is not enough parallelism. In an impure language, it is very hard for a human and pretty much impossible for a program to figure out if and how two pieces of code interact with each other or with the environment.</p>

<p>In a pure, referentially transparent, language, you have the opposite problem: <em>everything</em> is parallelizable, but it usually doesn't make sense, because scheduling a thread takes way longer than just simply executing the damn thing.</p>

<p>For example, in a pure, referentially transparent, functional language, if I have something like this:</p>

<pre><code>if a &lt;= b + c
  foo
else
  bar
end
</code></pre>

<p>I could fire up five threads and compute <code>a</code>, <code>b</code>, <code>c</code>, <code>foo</code> and <code>bar</code> in parallel, then I compute the <code>+</code> and then the <code>&lt;=</code> and lastly, I compute the <code>if</code>, which simply means throwing away the result of either <code>foo</code> or <code>bar</code>, which both have already been computed. (Note how this depends on being functional: in an impure language, you cannot simply compute both branches of an <code>if</code> and then throw one away. What if both print something? How would you ""unprint"" that?)</p>

<p>But if <code>a</code>, <code>b</code>, <code>c</code>, <code>foo</code> and <code>bar</code> are really cheap, then the overhead of those five threads will be far greater than the computations themselves.</p>
"
"<p>I'm doing some research on multicore processors; specifically I'm looking at writing code for multicore processors and also compiling code for multicore processors. </p>

<p>I'm curious about the major problems in this field that would currently prevent a widespread adoption of programming techniques and practices to fully leverage the power of multicore architectures.</p>

<p>I am aware of the following efforts (some of these don't seem directly related to multicore architectures, but seem to have more to do with parallel-programming models, multi-threading, and concurrency):</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Erlang_%28programming_language%29"" rel=""nofollow"">Erlang</a> (I know that Erlang includes constructs to facilitate concurrency, but I am not sure how exactly it is being leveraged for multicore architectures)</li>
<li><a href=""http://en.wikipedia.org/wiki/OpenMP"" rel=""nofollow"">OpenMP</a> (seems mostly related to multiprocessing and leveraging the power of clusters)</li>
<li><a href=""http://en.wikipedia.org/wiki/Unified_Parallel_C"" rel=""nofollow"">Unified Parallel C</a></li>
<li><a href=""http://en.wikipedia.org/wiki/Cilk"" rel=""nofollow"">Cilk</a></li>
<li><a href=""http://en.wikipedia.org/wiki/Intel_Threading_Building_Blocks"" rel=""nofollow"">Intel Threading Blocks</a> (this seems to be directly related to multicore systems; makes sense as it comes from Intel. In addition to defining certain programming-constructs, it also seems have features that tell the compiler to optimize the code for multicore architectures)</li>
</ul>

<p>In general, from what little experience I have with <em>multithreaded</em> programming, I know that programming with concurrency and parallelism in mind is definitely a difficult concept. I am also aware that <em>multithreaded programming</em> and <em>multicore programming</em> are two different things. in multithreaded programming you are ensuring that the CPU does not remain idle (on a single-CPU system. As James pointed out the OS can schedule different threads to run on different cores -- but I'm more interested in describing the parallel operations from the language itself, or via the compiler). As far as I know you cannot truly do parallel operations. In multicore systems, you should be able to perform truly-parallel operations.</p>

<p>So it seems to me that currently the problems facing multicore programming are:</p>

<ul>
<li>Multicore programming is a difficult concept that requires significant skill</li>
<li>There are no native constructs in today's programming languages that provide a good abstraction to program for a multicore environment</li>
<li>Other than Intel's TBB library I haven't found efforts in other programming-languages to leverage the power of multicore architectures for compilation (for example, I don't know if the Java or C# compiler optimizes the bytecode for multicore systems or even if the JIT compiler does that)</li>
</ul>

<p>I'm interested in knowing what other problems there might be, and if there are any solutions in the works to address these problems. Links to research papers (and things of that nature) would be helpful. Thanks! </p>

<p><strong>EDIT</strong></p>

<p>If I had to condense my question down to one sentence, it would be this: What are the problems that face multicore programming today and what research is going on in the field to solve these problems?</p>

<p><strong>UPDATE</strong></p>

<p>It also seems to me that there are three levels where multicore needs to be concerned:</p>

<ol>
<li><strong>Language level</strong>: Constructs/concepts/frameworks that abstract parallelization and concurrency and make it easy for programmers to express the same</li>
<li><strong>Compiler level</strong>: If the compiler is aware of what architecture it is compiling for, it can optimize the compiled code for that architecture.</li>
<li><strong>OS level</strong>: The OS optimizes the running process and perhaps schedules different threads/processes to run on different cores.</li>
</ol>

<p>I've searched on ACM and IEEE and have found a few papers. Most of them talk about how difficult it is to think concurrently and also how current languages don't have a proper way to express concurrency. Some have gone so far as to claim that the current model of concurrency that we have (threads) is not a good way to handle concurrency (even on multiple cores). I'm interested in hearing other views.</p>
","2988","","<blockquote>
  <p>I'm curious about the major problems in this field that would currently prevent a widespread adoption of programming techniques and practices to fully leverage the power of multicore architectures.</p>
</blockquote>

<p>Inertia. (BTW: that's pretty much the answer to <em>all</em> ""what does prevent the widespread adoption"" questions, whether that be models of parallel programming, garbage collection, type safety or fuel-efficient automobiles.)</p>

<p>We have known since the 1960s that the threads+locks model is fundamentally broken. By ~1980, we had about a dozen better models. And yet, the vast majority of languages that are in use today (including languages that were newly created from scratch long after 1980), offer only threads+locks.</p>
"
"<p>I tried to enable curl on cygwin but it says <code>bash: curl: command not found</code></p>

<p>How do I install curl on cygwin?</p>
","2988","","<p>In the Cygwin package manager, click on curl. Yes, it's <em>that</em> simple.</p>
"
"<p>In development, what ideas have you been able to take from real world engineering/construction techniques to apply to coding you projects? For example, the circuit-breaker design pattern, which has a good use, most probably came from the actual circuit breaker, and the fault tolerance/failsafe concept could easily be borrowed from planes etc.</p>

<p>Has anyone got any good ideas to help with the reliability/error-handling of their code from engineering?</p>

<p>Thanks</p>
","2988","","<p>Two weeks ago, Glenn Vanderburg gave a nice talk at the Lone Star Ruby Conference 2010, titled <a href=""http://confreaks.net/videos/282-lsrc2010-real-software-engineering/"" rel=""nofollow""><em>Real Software Engineering</em></a>.</p>

<p>In the talk, he argues that what we call ""Software Engineering"" today, is based on a fundamental misunderstanding of what Software is and what Engineering is. In particular, he argues that the way ""real"" engineers work, is much more similar to Agile than to what we understand today as ""Software Engineering"".</p>

<p>Here's a fun fact (well, <em>sad</em> fact, really) I learned from the talk: the Waterfall process, which was and probably still is the most widely used software development process was <em>specifically</em> created as an example of a process that <em>does not work</em>. The paper explains on the first few pages what Waterfall is, then spends several pages explaining how and why it is broken, and then several pages on how to it right. Unfortunately, no one ever read past the third page.</p>
"
"<p>I installed the new stable Ruby release and when I began to install gems I found out that the paths to them isn't added to the Ruby load path after successful installation of the gems.</p>

<p>What is the reason of this issue? How can I achieve it?</p>

<p>Thanks.</p>

<p>Here's my environment:</p>

<pre>
$ lsb_release -d
</pre>

<pre>
Description:    Debian GNU/Linux 5.0.6 (lenny)
</pre>

<pre>
$ cat ~/.gemrc
</pre>

<pre>
gem: --no-ri --no-rdoc
gemhome: /home/&#60;username&#62;/.gem
gempath:
  - /home/&#60;username&#62;/.gem
</pre>

<pre>
$ gem environment
</pre>

<pre>
RubyGems Environment:
  - RUBYGEMS VERSION: 1.3.7
  - RUBY VERSION: 1.9.2 (2010-08-18 patchlevel 0) [i686-linux]
  - INSTALLATION DIRECTORY: /home/&#60;username&#62;/.gem
  - RUBY EXECUTABLE: /usr/local/bin/ruby
  - EXECUTABLE DIRECTORY: /home/&#60;username&#62;/.gem/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-linux
  - GEM PATHS:
    - /home/&#60;username&#62;/.gem
  - GEM CONFIGURATION:
    - :update_sources => true
    - :verbose => true
    - :benchmark => false
    - :backtrace => false
    - :bulk_threshold => 1000
    - ""gem"" => ""--no-ri --no-rdoc""
    - ""gemhome"" => ""/home/&#60;username&#62;/.gem""
    - ""gempath"" => [""/home/&#60;username&#62;/.gem""]
  - REMOTE SOURCES:
    - http://rubygems.org/
</pre>

<pre>
$ gem list
</pre>

<pre>
*** LOCAL GEMS ***

rack (1.2.1)
sqlite3-ruby (1.3.1)
</pre>

<pre>
$ ruby -e ""puts $:""
</pre>

<pre>
# There's neither /home/&#60;username&#62;/.gem/gems/rack-1.2.1/lib
# nor home/&#60;username&#62;/.gem/gems/sqlite3-ruby-1.3.1/lib here.

/usr/local/lib/ruby/site_ruby/1.9.1
/usr/local/lib/ruby/site_ruby/1.9.1/i686-linux
/usr/local/lib/ruby/site_ruby
/usr/local/lib/ruby/vendor_ruby/1.9.1
/usr/local/lib/ruby/vendor_ruby/1.9.1/i686-linux
/usr/local/lib/ruby/vendor_ruby
/usr/local/lib/ruby/1.9.1
/usr/local/lib/ruby/1.9.1/i686-linux
</pre>

<p><strong>Updated</strong></p>

<hr>

<p>I can't require any of the installed gems because they arn't in $:.</p>

<pre>
$ ruby -e ""require 'rack'; puts $:""
</pre>

<pre>
:29:in `require': no such file to load -- rack (LoadError)
        from :29:in `require'
        from -e:1:in `'
</pre>

<p>But.</p>

<pre>
$ ruby -e ""$: &#60;&#60; '/home/&#60;username&#62;/.gem/gems/rack-1.2.1/lib'; require 'rack'; puts $:""
</pre>

<pre>
/usr/local/lib/ruby/site_ruby/1.9.1
/usr/local/lib/ruby/site_ruby/1.9.1/i686-linux
/usr/local/lib/ruby/site_ruby
/usr/local/lib/ruby/vendor_ruby/1.9.1
/usr/local/lib/ruby/vendor_ruby/1.9.1/i686-linux
/usr/local/lib/ruby/vendor_ruby
/usr/local/lib/ruby/1.9.1
/usr/local/lib/ruby/1.9.1/i686-linux
/home/&#60;username&#62;/.gem/gems/rack-1.2.1/lib # Here it is!
</pre>

<p>It works that way only : (</p>
","2988","","<p>You haven't loaded any gems yet:</p>

<pre><code>ruby -e '
  puts ""Before require: #{$:.grep /rack/}""
  require ""rack""
  puts ""After require: #{$:.grep /rack/}""
'
# Before require: []
# After require: [""C:/Ruby/YARV/1.9.2/lib/ruby/gems/1.9.1/gems/rack-1.2.1/bin"", 
#                 ""C:/Ruby/YARV/1.9.2/lib/ruby/gems/1.9.1/gems/rack-1.2.1/lib""]

ruby -e '
  puts ""Before gem: #{$:.grep /rack/}""
  gem ""rack""
  puts ""After gem: #{$:.grep /rack/}""
  require ""rack""
  puts ""After require: #{$:.grep /rack/}""
'
# Before gem: []

# After gem: [""C:/Ruby/YARV/1.9.2/lib/ruby/gems/1.9.1/gems/rack-1.2.1/bin"", 
#             ""C:/Ruby/YARV/1.9.2/lib/ruby/gems/1.9.1/gems/rack-1.2.1/lib""]
# After require: [""C:/Ruby/YARV/1.9.2/lib/ruby/gems/1.9.1/gems/rack-1.2.1/bin"", 
#                 ""C:/Ruby/YARV/1.9.2/lib/ruby/gems/1.9.1/gems/rack-1.2.1/lib""]
</code></pre>
"
"<p>Does anyone know the rules for valid Ruby variable names? Can it be matched using a RegEx?</p>

<p><strong>UPDATE:</strong> This is what I could come up with so far:</p>

<pre><code>^[_a-z][a-zA-Z0-9_]+$
</code></pre>

<p>Does this seem right?</p>
","2988","","<p>And here it is, straight from the horse's mouth. (The horse in this case is the <a href=""http://Ruby-Std.NetLab.Jp/"" rel=""nofollow"">Draft ISO Ruby Specification</a>):</p>

<ul>
<li><strong>local-variable-identifier</strong> &rarr; <code>(</code> <strong>lowercase-character</strong> <code>|</code> <kbd>_</kbd> <code>)</code> <strong>identifier-character</strong> <code>*</code></li>
<li><strong>identifier-character</strong> &rarr; <strong>lowercase-character</strong> <code>|</code> <strong>uppercase-character</strong> <code>|</code> <strong>decimal-digit</strong> <code>|</code> <kbd>_</kbd></li>
<li><strong>uppercase-character</strong> &rarr; <kbd>A</kbd> <code>|</code> <kbd>B</kbd> <code>|</code> <kbd>C</kbd> <code>|</code> <kbd>D</kbd> <code>|</code> <kbd>E</kbd> <code>|</code> <kbd>F</kbd> <code>|</code> <kbd>G</kbd> <code>|</code> <kbd>H</kbd> <code>|</code> <kbd>I</kbd> <code>|</code> <kbd>J</kbd> <code>|</code> <kbd>K</kbd> <code>|</code> <kbd>L</kbd> <code>|</code> <kbd>M</kbd> <code>|</code> <kbd>N</kbd> <code>|</code> <kbd>O</kbd> <code>|</code> <kbd>P</kbd> <code>|</code> <kbd>Q</kbd> <code>|</code> <kbd>R</kbd> <code>|</code> <kbd>S</kbd> <code>|</code> <kbd>T</kbd> <code>|</code> <kbd>U</kbd> <code>|</code> <kbd>V</kbd> <code>|</code> <kbd>W</kbd> <code>|</code> <kbd>X</kbd> <code>|</code> <kbd>Y</kbd> <code>|</code> <kbd>Z</kbd></li>
<li><strong>lowercase-character</strong> &rarr; <kbd>a</kbd> <code>|</code> <kbd>b</kbd> <code>|</code> <kbd>c</kbd> <code>|</code> <kbd>d</kbd> <code>|</code> <kbd>e</kbd> <code>|</code> <kbd>f</kbd> <code>|</code> <kbd>g</kbd> <code>|</code> <kbd>h</kbd> <code>|</code> <kbd>i</kbd> <code>|</code> <kbd>j</kbd> <code>|</code> <kbd>k</kbd> <code>|</code> <kbd>l</kbd> <code>|</code> <kbd>m</kbd> <code>|</code> <kbd>n</kbd> <code>|</code> <kbd>o</kbd> <code>|</code> <kbd>p</kbd> <code>|</code> <kbd>q</kbd> <code>|</code> <kbd>r</kbd> <code>|</code> <kbd>s</kbd> <code>|</code> <kbd>t</kbd> <code>|</code> <kbd>u</kbd> <code>|</code> <kbd>v</kbd> <code>|</code> <kbd>w</kbd> <code>|</code> <kbd>x</kbd> <code>|</code> <kbd>y</kbd> <code>|</code> <kbd>z</kbd></li>
<li><strong>decimal-digit</strong> &rarr; <kbd>0</kbd> <code>|</code> <kbd>1</kbd> <code>|</code> <kbd>2</kbd> <code>|</code> <kbd>3</kbd> <code>|</code> <kbd>4</kbd> <code>|</code> <kbd>5</kbd> <code>|</code> <kbd>6</kbd> <code>|</code> <kbd>7</kbd> <code>|</code> <kbd>8</kbd> <code>|</code> <kbd>9</kbd></li>
</ul>

<p>In Ruby 1.9, using named groups, you can translate this literally:</p>

<pre><code>local_variable_identifier = %r{ 
  (?&lt;uppercase_character&gt;     A | B | C | D | E | F | G | H | I | J | K | L | M
                            | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
  ){0} 
  (?&lt;lowercase_character&gt;     a | b | c | d | e | f | g | h | i | j | k | l | m
                            | n | o | p | q | r | s | t | u | v | w | x | y | z
  ){0} 
  (?&lt;decimal_digit&gt;         0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9){0} 
  (?&lt;identifier_character&gt;    \g&lt;lowercase_character&gt;
                            | \g&lt;uppercase_character&gt;
                            | \g&lt;decimal_digit&gt;
                            | _
  ){0} 

  ( \g&lt;lowercase_character&gt; | _ ) \g&lt;identifier_character&gt;*
}x
</code></pre>

<p>Of course, this is not how you would really write it.</p>
"
"<p>Do all Ruby interpreters follow the same Ruby syntax defined in www.ruby-lang.org?</p>

<ul>
<li>MRI</li>
<li>YARV</li>
<li>Rubinius</li>
<li>JRuby</li>
<li>IronRuby</li>
</ul>

<p>Cause it is the interpreter that defines the Ruby language. Does that mean one interpreter could add a feature/syntatic sugar that other interpreters haven't?</p>

<p>If that is the case, do all interpreters have their own API documentation?</p>

<p>Cause I'm using: <a href=""http://ruby-doc.org/ruby-1.9/index.html"" rel=""nofollow"">http://ruby-doc.org/ruby-1.9/index.html</a>.</p>

<p>Which interpreters are implementing that one?</p>

<p>Could someone shed a light on this topic.</p>

<p>Thanks!</p>
","2988","","<blockquote>
  <p>Do all Ruby interpreters follow the same Ruby syntax defined in www.ruby-lang.org?</p>
</blockquote>

<p>Yes, they all use the same syntax. In fact, they actually all use the same parser, or at least a parser that was automatically generated from the same source file.</p>

<blockquote>
  <p>Cause I'm using: <a href=""http://ruby-doc.org/ruby-1.9/index.html"" rel=""nofollow"">http://ruby-doc.org/ruby-1.9/index.html</a>.</p>
  
  <p>Which interpreters are implementing that one?</p>
</blockquote>

<p>At the moment, the only production-ready Ruby execution engine that implements Ruby 1.9 fully is YARV.</p>

<p>JRuby itself is production-ready, and it implements both Ruby 1.8.7 and Ruby 1.9.2, but the Ruby 1.9.2 implementation is not yet complete. IronRuby and Rubinius are also working on implementations of Ruby 1.9.2. MacRuby has a fairly complete Ruby 1.9 implementation, but it is still far from a 1.0 release. MRI doesn't implement Ruby 1.9 and probably never will.</p>

<p>But I don't understand why you are so concerned about the syntax. Syntax differences are trivial to spot: if there <em>were</em> a difference in the syntax, the engine would simply refuse to parse your file and you would know immediately that there is something wrong. Differences in <em>semantics</em> on the other hand are much more dangerous.</p>
"
"<p>Commonly used ofc, Klingon doesnt count :-)</p>

<p>thanks, guys, let me run willItFit() testcases</p>

<p>OK, now i figured out what saving bytes with UTF-8 is causing more problems than solving, thanks again</p>
","2988","","<p>You even need three bytes just for English. For example, the typographically correct apostrophe is encoded in UTF-8 as <code>0xE2 0x80 0x99</code>, opening quote marks are <code>0xE2 0x80 0x9C</code> and closing quote marks are <code>0xE2 0x80 0x9D</code>. The ellipsis is <code>0xE2 0x80 0xA6</code>. And that's not even talking about all the different dashes, spaces or the inch and feet signs.</p>

<p>“It’s kinda hard to write English without the apostrophe’s help &hellip;”</p>
"
"<p>I'm looking for a elegant way to assign the value stored inside an Hash into a pre-existed object.
Just to be clear, if I have an object, say obj with two attributes, say name and age, I want to assign this values coming from an hash without do something like:</p>

<pre><code>obj.name = hash[:name]
obj.age = hash[:age] 
</code></pre>

<p>Thanks for your attention.
Simone</p>
","2988","","<pre><code>obj.methods.grep(/[^!=]=$/).each {|attr| obj.send(attr, hash[attr]) }
</code></pre>
"
"<p>Can I create a Ruby Hash from a block?</p>

<p>Something like this (although this specifically isn't working):</p>

<pre><code>foo = Hash.new do |f|
  f[:apple] = ""red""
  f[:orange] = ""orange""
  f[:grape] = ""purple""
end
</code></pre>
","2988","","<p>What's wrong with</p>

<pre><code>foo = {
  apple:  'red',
  orange: 'orange',
  grape:  'purple'
}
</code></pre>
"
"<p>What are the trade offs between ffi and mri c extensions in ruby?</p>
","2988","","<p>One obvious tradeoff is that MRI C extensions only work on MRI, whereas FFI extensions work on MRI, YARV, Rubinius and JRuby at the moment, and will in the future probably also work on IronRuby, MagLev, MacRuby, SmallRuby, tinyrb and RubyGoLightly.</p>
"
"<p>The handle to yourself is called different things in OOP languages. The few I've come across so far:</p>

<ul>
<li><code>this</code> (e.g. Java, C#)</li>
<li><code>Me</code> (e.g. VB, vba)</li>
<li><code>self</code> (e.g. Python)</li>
</ul>

<p>Anyone know any others?</p>
","2988","","<p>F# is similar to Python and Perl, in that you just supply your own name. Here's @Pete Kirkham's Python example in F#:</p>

<pre><code>type Foo =
  member i.bar = printfn ""%O"" i
</code></pre>

<p>Use it like so:</p>

<pre><code>let x = new Foo()
x.bar
</code></pre>
"
"<p>The handle to yourself is called different things in OOP languages. The few I've come across so far:</p>

<ul>
<li><code>this</code> (e.g. Java, C#)</li>
<li><code>Me</code> (e.g. VB, vba)</li>
<li><code>self</code> (e.g. Python)</li>
</ul>

<p>Anyone know any others?</p>
","2988","","<p>In multiple-dispatch OO languages like Common Lisp (CLOS), Dylan or Slate, there is no single receiver object, and therefore no notion of <code>self</code>.</p>
"
"<p>I found <a href=""http://stackoverflow.com/questions/2893841/open-source-projects-with-good-quality-tests"">http://stackoverflow.com/questions/2893841/open-source-projects-with-good-quality-tests</a> but I wanted to ask something a bit different.</p>

<p>I'm having a hard time visualizing how to build production code using TDD practices, particularly for networked database-driven applications where big chunks of functionality are dependent on one or more external systems.  The two main strategies I've seen discussed for accomplishing that are decoupling code from the systems in question and using mocks.  However, my intuition is that doing either one properly would also be complex and error-prone.</p>

<p>I'd like to take a look at some real-life code that was built using test-driven development practices from the ground up.  Such a project would have had to deal with such issues from very early on, and I think looking at the results would be instructive.  Any examples out there, whether positive or negative?</p>
","2988","","<p>Both the <a href=""http://Ioke.Org/"" rel=""nofollow"">Ioke</a> and <a href=""http://Seph-Lang.Org/"" rel=""nofollow"">Seph</a> programming languages, as well as their implementations ikj (Ioke interpreter for the JVM), ikc (Ioke interpreter for the CLI) and whatever the Seph implementations is called, and their standard libraries were written 100% test-driven or rather behavior-driven.</p>
"
"<p>Hi 
I'm looking for an equivalent of the haskell instersperse function  in Ruby. Basically that add something (like a separator) between each element of a list.</p>

<pre><code>intersperse(nil, [1,2,3]) =&gt; [1,nil,2,nil,3,nil,4].
</code></pre>

<p>I'm not asking for any code (I can do it , and I'd probably have done it before you read the question). I'm just wondering if a such function already exists on the standard Ruby platform.</p>

<h3>update</h3>

<p>I'm not asking for any code, and especially ones using flatten, as that doesn't work (flatten does not only flat one level but all).
I gave the example [1,2,3] just as example, but it should work with</p>

<pre><code> [[1,2],[3,4]].interperse(""hello"") =&gt; [[1,2], ""hello"", [3,4]]
</code></pre>

<p>(Please don't send me any code to make that it work , I have it already </p>

<pre><code>class Array
  def intersperse(separator)
    (inject([]) { |a,v|  a+[v,separator] })[0...-1]
  end
end
</code></pre>

<p>)</p>
","2988","","<p>No, not that I know of. But you can always <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Enumerable.html"" rel=""nofollow"">check yourself</a>.</p>

<p>The only similar method (by the way: Ruby is an object-oriented language, there is no such thing as a ""function"" in Ruby) is <code>Array#join</code>, which maps the elements to strings and interperses them with a separator. <code>Enumerable#intersperse</code> would basically be a generalization of that.</p>

<p>Like you said, it's trivial to implement, for example like this:</p>

<pre><code>module Enumerable
  def intersperse(obj=nil)
    map {|el| [obj, el] }.flatten(1).drop(1)
  end
end
</code></pre>

<p>or this:</p>

<pre><code>module Enumerable
  def intersperse(obj=nil)
    drop(1).reduce([first]) {|res, el| res &lt;&lt; obj &lt;&lt; el }
  end
end
</code></pre>

<p>Which would then make <code>Array#join</code> simply a special case:</p>

<pre><code>class Array
  def join(sep=$,)
    map(&amp;:to_s).intersperse(s ||= sep.to_str).reduce('', :&lt;&lt;)
  end
end
</code></pre>
"
"<p>I have an Foo module, that it is namespace for many classes ie: Foo::Bar, Foo::Baz an so on. Is there an way to return all class names namespaced by Foo?</p>
","2988","","<p>If, instead of the <em>names</em> of the constants, you want the classes themselves, you could do it like this:</p>

<pre><code>Foo.constants.map(&amp;Foo.method(:const_get)).grep(Class)
</code></pre>
"
"<p>I have an array that looks something like this:</p>

<pre><code>[[100, ""one""],
 [101, ""one""],
 [102, ""one""],
 [103, ""two""],
 [104, ""three""],
 [105, ""three""]]
</code></pre>

<p>What I would like to do is create an array of hashes that looks like this</p>

<pre><code>[{""one"" =&gt; [100,101,102]},
 {""two"" =&gt; [103]},
 {""three"" =&gt; [104,105]}]
</code></pre>

<p>The number portion will always be unique, the string portion will have duplicates. Every way I think about doing this I get some long function, I would like to know the ""rails way"" of going about this, I'm sure there's some obscure function I am missing.</p>
","2988","","<p>Is there a specific reason why you need <em>that</em> specific format, i.e. an array of single-element hashes instead of just a bog-standard hash? Because in that case, it would literally be just</p>

<pre><code>arr.group_by(&amp;:last)
</code></pre>
"
"<p>The scala plugin seems to automatically download version 2.8 of Scala.  I'l like to try out the <a href=""http://www.gridgain.com/index.html"" rel=""nofollow"">Gridgain 3.0-beta</a>, which currently only works with Scala 2.7.7.  Since Gridgain 3.0-beta already provides scala-compiler-2.7.7.jar and scala-library-2.7.7.jar, is it possible to get the Eclipse Scala Plugin to compile to Scala 2.7.7?</p>

<p>I tried removing the Scala Library 2.8 from the project build path and added both the 2.7 jars, but this didn't seem to work.</p>

<p>Would this be easier if I switched to Netbeans?</p>
","2988","","<p>Both the Eclipse plugin and the NetBeans plugin use the Scala Compiler for a lot of things from the simple stuff like syntax highlighting to stuff like type inference, resolution and display of implicits to more involved stuff like automated type-driven refactorings and semantic highlighting.</p>

<p>And more specifically, they use the 2.8 compiler, because the 2.8 compiler has a completely refactored API and a new framework (the so-called <em>presentation compiler</em>), which is <em>specifically</em> designed for IDEs, so that they can get all the information they need <em>out</em> of the compiler, but also can feed information (like in the case of refactorings) back <em>into</em> the compiler.</p>

<p>So, in short: the version of the plugin is closely coupled to the version of the compiler, and the compiler in turn only supports one version of the language. In particular, the IDE plugins require a 2.8 version of the compiler, because they use the new presentation compiler framework, and the 2.8 compiler does not support the 2.7 language.</p>

<p>This tight coupling is of course <em>not</em> a good thing, and it will get broken up in the future, but for now, you are stuck.</p>

<p>You <em>could</em> try the IntelliJ IDEA IDE and their Scala plugin. As far as I know, they have written their <em>own</em> compiler (well, at least the parts they need for syntax highlighting and refactoring purposes) purely from the Scala Language Specification, without using any of the Scala Compiler APIs. The Scala Plugin does work with the Community Edition.</p>
"
"<p>Just wondering if anybody had the same problem with rubygems.org</p>

<p>I appluad the decision to consolidated everything on rubygems.org, but when the default was rubyforge - I never had any problems. Now it seems I have a problem updating gems everytime I do a new installation. I mean I can work around it, but downloading gems through the browser and then installing them manually - but that is very annoying. </p>

<p>The message I keep getting  bad response Bad Gateway 502 (name of some gem goes here).</p>

<p>It never breaks on the same gem, and I have mostly problems installing Rails stack - such as mail, railties, actionmailer, etc.</p>

<p>Other gems like  nokogori or haml - install without any problem.</p>

<p>If I run bundle - it also breaks with the same message or a variation thereof. </p>

<p>I tried obvious things - like removing rubygems.org from sources - pointing to rubyforge or rubyonrails, but keep getting the same problem. I tried it on 3 different machines - my Debian dev box, my windows machine and my macbook, all running different subversions of Ruby 1.8.7.</p>

<p>Does anyone have any solution or suggestion please??? Pretty please?</p>

<p>P.S.:
By the way ""wget"" on certain gems from rubyforge.org - doesn't work - I'm getting the same error - downloading through the browser seems to be the only option. Which leads me to believe it has nothing to do with my ruby setup, but is actually a problem on rubygems.org .</p>
","2988","","<blockquote>
  <p>Which leads me to believe it has nothing to do with my ruby setup, but is actually a problem on rubygems.org </p>
</blockquote>

<p>Not necessarily. <code>502</code> only means that <em>some</em> gateway, somewhere, <em>anywhere</em>, between you and rubygems.org didn't respond properly. This could be pretty much any server that sits in between you and rubygems.org: your company's proxy, your company's firewall, your own proxy, your own firewall, (one of) your provider's prox(y/ies), (one of) your provider's firewall(s), (one of) rubygems.org's hosting provider's firewall(s), rubygems.org's load balancer, your government's web content filter, or really <em>any</em> other server that sits&nbsp;&ndash; for whatever reason&nbsp;&ndash; between you and rubygems.org.</p>

<p>It literally just means that somewhere on the internet there is a <code>Bad Gateway</code>.</p>
"
"<p>I am getting a 'ArgumentError: array size too big' message with the following code:  </p>

<pre><code>MAX_NUMBER = 600_000_000
my_array = Array.new(MAX_NUMBER)
</code></pre>

<p>Question. What is the max value that the Array.new function takes in Ruby? </p>
","2988","","<p>An array with 500 million elements is 2 GiBytes in size, which&nbsp;&ndash; depending on the specific OS you are using&nbsp;&ndash; is typically the maximum that a process can address. In other words: your array is bigger than your address space.</p>

<p>So, the solutions are obvious: either make the array smaller (by, say, breaking it up in chunks) or make the address space bigger (in Linux, you can patch the kernel to get 3, 3.5 and even 4 GiByte of address space, and of course switching to a 64 bit OS <em>and</em> a 64 bit Ruby implementation(!) would also work).</p>

<p>Alternatively, you need to rethink your approach. Maybe use <code>mmap</code> instead of an array, or something like that. Maybe lazy-load only the parts you need.</p>
"
"<p>When I upgraded from rubygems 1.3.5 to 1.3.7, my GEM_PATH changed.  <code>gem environment</code> gives me</p>

<pre><code>- GEM PATHS:
- /usr/lib/ruby/gems/1.8
- /home/me/.gem/ruby/1.8 
</code></pre>

<p>... whereas it was previously <code>/var/lib/gems/1.8</code></p>

<p>How would you handle this?  </p>

<ol>
<li><p>I could set GEM_PATH, but this seems a bit messy, as I'd have to do this for my shell, and each of my application's <code>environment.rb</code> files.</p></li>
<li><p>I could try to set the default, but I imagine this would involve making changes to default installation files, which seems like a bad idea.</p></li>
<li><p>Should I just delete the old dir and reinstall all gems?  This sounds safe, but time-consuming.</p></li>
</ol>

<p>Thanks for any feedback.</p>
","2988","","<p>The gem path changing doesn't really have anything do with updating RubyGems. It has to do with the fact that you have <em>two</em> parallel installations of RubyGems: the one from the Debian package repository which you installed via APT and another one.</p>

<p>The solution is simple: Don't Do That.</p>

<p>The Debian RubyGems has been patched to install its gems in <code>/var/lib/gems</code>, the RubyGems from RubyGems.Org uses <code>/usr/lib/ruby/gems</code> if that is writeable, <code>~/.gem</code> otherwise.</p>

<p>You should <em>never</em> mix several different installations of RubyGems, and you should <em>particularly</em> not mix Debian-RubyGems and plain RubyGems. <em>Either</em> install RubyGems from Debian and use <em>only</em> that, and <em>only</em> update it with APT <em>or</em> install RubyGems from RubyGems.Org and use <em>only</em> that and <em>only</em> update it via <code>gem update --system</code>. Note that this transitively also applies to YARV, which contains its own copy of RubyGems. <em>If</em> you use Debian-RubyGems, then you must <em>also</em> use the Debian-packaged versions of YARV, because only the Debian packages of YARV have been patched to remove RubyGems and use the Debian-provided one.</p>

<p>Somehow, you managed to ""update"" your Debian-RubyGems to a plain one, which isn't really an update but actually more like a separate installation. This shouldn't actually happen, because the Debian-RubyGems has the update functionality removed. This is what <em>my</em> Debian-installed RubyGems prints:</p>

<pre><code>gem update --system
# ERROR:  While executing gem ... (RuntimeError)
# gem update --system is disabled on Debian. RubyGems can be updated using the 
# official Debian repositories by aptitude or apt-get.
</code></pre>

<p>1.3.5 is pretty old, so maybe that error check wasn't in there, although I doubt it. AFAIK that error check was introduced somewhere in the 1.2 timeframe.</p>
"
"<p>It does not look very good for me to always repeat a line-long tuple definition every time I need it. Can I just name it and use as a type name? Would be nice to name its fields also instead of using ._1, ._2 etc.</p>
","2988","","<p>Regarding your first question, you can simply use a type alias:</p>

<pre><code>type KeyValue = (Int, String)
</code></pre>

<p>And, of course, Scala is an object-oriented language, so regarding your second about how to specialize a tuple, the magic word is <em>inheritance</em>:</p>

<pre><code>case class KeyValue(key: Int, value: String) extends (Int, String)(key, value)
</code></pre>

<p>That's it. The class doesn't even need a body.</p>

<pre><code>val kvp = KeyValue(42, ""Hello"")
kvp._1    // =&gt; res0: Int    = 42
kvp.value // =&gt; res1: String = ""Hello""
</code></pre>

<p>Note, however, that inheriting from case classes (which <code>Tuple2</code> is), is deprecated and may be disallowed in the future. Here's the compiler warning you get for the above class definition:</p>

<blockquote>
  <p>warning: case class <code>class KV</code> has case class ancestor <code>class Tuple2</code>.  This has been deprecated for unduly complicating both usage and implementation.  You should instead use extractors for pattern matching on non-leaf nodes.</p>
</blockquote>
"
"<p>what's the difference between NoSql DB and OO Db?</p>
","2988","","<p>NoSQL is a movement, OODB is a technology. Or in other words: NoSQL is a group of people, an OODB is a piece of code.</p>
"
"<p>I am a C#/.Net developer who just began Java development for Android, and using Eclipse I noticed that it compiles as you go, so that at no point do you have to wait for the program to build. This seems pretty amazing, unless there is something going on I don't understand.</p>

<p>I was wondering why C# and the Visual Studio IDE don't provide this functionality? Is there a reason?</p>
","2988","","<p>This doesn't really have anything to do with Java. It's more a feature of Eclipse. In particular, incremental background compilation is a standard feature of all Smalltalk IDEs since at least 1978 or thereabouts, and even longer than that in Lisp IDEs.</p>

<p>Eclipse <em>was</em> originally a Smalltalk IDE, written in Smalltalk, and it is still to this day maintained by IBM's Smalltalk division. So, when IBM's Smalltalk division developed their own Java compiler, they naturally wrote it to be incremental and re-entrant, just like their Smalltalk compilers. And this compiler, called <em>Jikes</em> was open-sourced together with Eclipse and became the <em>ecj (Eclipse Compiler for Java)</em> that powers all of the incremental on-the-fly compilation, syntax highlighting, code completion, type inference and refactoring capabilities of Eclipse JDT.</p>

<p>There is absolutely no reason why this shouldn't be possible for C# as well. The reason why it <em>doesn't</em> work, is because the compiler doesn't support it, in particular, the compiler is not incremental. But that is not an inherent limitation of .NET or C# or Visual Studio, that's a limitation in the imagination of the C# compiler maintainers: traditionally, all compilers at Microsoft were written in C++ by the C++ compiler team, and those guys simply have never heard of incremental compilation. Not because they are stupid, but because in the C++ community nobody cares about that.</p>

<p>But, for example, the VB community <em>does</em> care about that stuff, because they are used to it from VB Classic. So, the VB.NET compiler actually supports incremental building, edit-and-continue, IntelliSense, type inference and refactoring.</p>

<p>Of course, the C# plugin supports a lot of that stuff, too, but they don't use the actual C# compiler to do that. Instead, they basically had to re-implement half of the compiler for the Visual Studio plugin to work, but they didn't implement the actual code generation backend, so while the ""compiler"" which is part of the plugin <em>can</em> do incremental parsing, syntax highlighting, refactoring and edit-and-continue, it <em>cannot</em> actually, you know, <em>compile</em>.</p>

<p>The situation for C# is going to change, however: the responsibility for the compilers was reassigned to the respective language teams, and the C# team is currently in the process of re-implementing the compiler <em>in</em> C# and <em>within</em> the C# team. One of the often talked about results of this rewrite is going to be the Compiler-as-a-Service feature, which allows you to compile small snippets of C# and/or Expression Trees on-the-fly and which powers for example the also often demonstrated C# REPL and C# Scripting capabilities.</p>

<p>Given that in order for the REPL to work, the compiler needs to be able to compile small individual snippets of code <em>anyway</em>, <em>and</em> the new compiler is supposed to be used in the Visual Studio C# plugin to replace the current pile of IntelliSense and syntax highlighting hacks, it shouldn't be too hard to get incremental compilation going in Visual Studio.</p>
"
"<p>I like reading about programming theories, so could you tell me if there is any object-oriented static typed language that allow variables to have a few types?
Example in pesudocode:</p>

<pre><code>var value: BigInteger | Double | Nil
</code></pre>

<p>I think about way of calling methods on this object. If object <em>value</em> have type <strong>BigInteger | Double</strong> language could allow user to call only shared methods (lake plus, minus) but when the type is <strong>BigInteger | Double | Nil</strong> then object of Nil hasn't methods plus and minus, so we can't do anything usefull with this object, because it has only few shared methods (like toString).</p>

<p>So is there any idea how should work calling methods on variable with few types in static typed object-oriented language?</p>
","2988","","<p>What you are describing is an <a href=""http://www.macs.hw.ac.uk/~jbw/itrs/""><em>intersection type</em></a>. They do <a href=""http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#108433"">exist in Java</a>, for example, but they only arise within the type-checker as the result of capture conversion and type-inference. You cannot write one yourself.</p>

<p>I don't know of any language which uses them directly, but they are often used to <em>describe</em> or <em>analyze</em> type systems of languages, espececially languages which don't actually <em>have</em> a type system. For example, Diamondback Ruby, which is a static type system and type-inferencer for the dynamically typed Ruby programming language, uses both union and intersection types.</p>

<p>Note that the <em>syntax</em> you are using is generally used to denote <em>union types</em>, which are the dual of intersection types. Intersection types are generally written <code>A &amp; B &amp; C</code>.</p>
"
"<p>If I have a class like the following, how do I tell when an ancestor is a class vs. a module?</p>

<pre><code>ActiveRecord::Base.send(:include, SomeLibrary)

class Group &lt; ActiveRecord::Base
  include SomeLibrary::Core
end

class SubGroup &lt; Group

end

ancestor_names = SubGroup.ancestors.map(&amp;:name)
puts ancestor_names.inspect
  #=&gt; [
  ""SubGroup"", ""SomeLibrary::Core::InstanceMethods"", ""SomeLibrary::Core"", 
  ""Group"", ""ActiveRecord::Base"", ""SomeLibrary"", ""ActiveRecord::Aggregations"", 
  ""ActiveRecord::Transactions"", ""ActiveRecord::Reflection"", ""ActiveRecord::Batches"", 
  ""ActiveRecord::Calculations"", ""ActiveRecord::Serialization"", ""ActiveRecord::AutosaveAssociation"", 
  ""ActiveRecord::NestedAttributes"", ""ActiveRecord::Associations"", ""ActiveRecord::AssociationPreload"", 
  ""ActiveRecord::NamedScope"", ""ActiveRecord::Callbacks"", ""ActiveRecord::Observing"", 
  ""ActiveRecord::Timestamp"", ""ActiveRecord::Dirty"", ""ActiveRecord::AttributeMethods"", 
  ""ActiveRecord::Locking::Optimistic"", ""ActiveRecord::Locking::Pessimistic"", 
  ""ActiveSupport::Callbacks"", ""ActiveRecord::Validations"", ""Object"", ""Mocha::ObjectMethods"", 
  ""JSON::Pure::Generator::GeneratorMethods::Object"", ""ActiveSupport::Dependencies::Loadable"", 
  ""Base64::Deprecated"", ""Base64"", ""PP::ObjectMixin"", ""Kernel""
]
</code></pre>

<p>I would like to be able to do something like this:</p>

<pre><code>ancestor_names.each do |name|
  if class?(name)
    puts ""#{name} is a Class""
  elsif module?(name)
    puts ""#{name} is a Module""
  end
end
</code></pre>

<p>or...</p>

<pre><code>SubGroup.ancestor_classes #=&gt; only the classes in the tree
SubGroup.ancestor_modules #=&gt; only the modules in the tree
</code></pre>

<p>It boils down to, how do you check if an object is a class or module?</p>
","2988","","<p>Use <code>Object#instance_of?</code>:</p>

<pre><code>Object.instance_of? Class  # =&gt; true
Object.instance_of? Module # =&gt; false
Kernel.instance_of? Class  # =&gt; false
Kernel.instance_of? Module # =&gt; true
</code></pre>
"
"<p>I thought it was possible to define attr_accessor methods in a eigenclass like this:</p>

<pre><code>class IOS
  @@modules_paths = ""hello""

  class &lt;&lt; self
    attr_accessor :modules_paths
  end

end

puts IOS::modules_paths
</code></pre>

<p>But this returns nothing.</p>

<p>Is there a way to do it?</p>
","2988","","<p>You never call the <code>IOS::modules_paths=</code> setter method, nor do you assign to the corresponding <code>@modules_paths</code> instance variable anywhere. Therefore, <code>@modules_paths</code> is unitialized and thus <code>IOS.modules_paths</code> returns an unitialized variable. In Ruby, uninitialized variables evaluate to <code>nil</code> and <code>puts nil</code> prints nothing.</p>
"
"<p>This is mostly just because I'm curious, but how would one distribute a closed source python program since python is run from source and its bytecode is easily decompiled? I'm mostly asking for linux since I don't care about windows, but any answers are great. </p>

<p>Edit:
Thanks for the answers guys. I was just curious since I just got my first job as a software engineer and my first project I'm working on is in python. Personally I'm all for open source, I was just curious how proprietary python programs could be distributed.</p>
","2988","","<p>The question of whether a program is open source or closed source is a legal question, not a technical one. So, the way to make a Python program closed source is to simply not put an open source license on it, since closed source is the default by law. In other words: just do nothing at all.</p>
"
"<p>I greatly enjoyed <a href=""http://yuiblog.com/crockford/"" rel=""nofollow"">Douglas Crockford's recent lecture series</a>, particularly the talk which covered the history of programming languages. I'd like to learn about this subject in more detail.</p>

<p>Consider this question language agnostic. I'm not interested in books that <em>teach</em> programming. I'm interested in books which discuss decisions made during the design of one or more languages.</p>
","2988","","<p>Every 15 years, the ACM puts on a <a href=""http://acm.org/sigplan/hopl/"" rel=""nofollow""><em>History of Programming Languages</em></a> conference (affectionately known as <em>HoPL</em>). The proceedings are of exceptionally high quality, and are available, unfortunately only behind the ACM paywall. (However, if you access them from a university, college or school IP address, you should be able to access them.)</p>

<p>For <a href=""http://research.ihost.com/hopl/HOPL-III.html"" rel=""nofollow"">HoPL-III (2007)</a>, Guido van Rossum wanted to submit a paper about Python, but he wasn't able to meet the review requirements in time, so he <a href=""http://python-history.blogspot.com/"" rel=""nofollow"">published it in form of a blog instead</a>.</p>

<p>Several presenters also published their papers for free, in addition to the official conference proceedings. Also, several presenters gave the same talk again, at a different venue. For example, Guy L. Steele, Jr. and Richard P. ""Dick"" Gabriel repeated their ""<a href=""http://Blip.TV/file/1472720/"" rel=""nofollow"">50 in 50</a>"" talk (which, as you can imagine if you've ever seen a talk by Guy Steele or Dick Gabriel, is not really a talk, more like multimedia performance art crossed with poetry slam meets Broadway), which presents 50 programming languages in 50 words each.</p>

<p>As @Missing Faktor mentioned above, not only <em>Project Oberon</em>, but <em>all</em> of Niklaus Wirth's languages are <em>tremendously</em> well documented: Algol-60, Algol-X, Algol-W, Pascal, Modula-2, and Oberon.</p>
"
"<p>I know that l1 and l2 caches are levels in multi-level cache.<br>
I would like to know where each level cache is placed, and what is the maximum number of cache levels allowed?</p>
","2988","","<p>Both of these depend on the CPU. There are CPUs which have no cache at all, there are CPUs which have the L1 cache on die and the L2 cache on a separate die on the same chip or even on a separate chip, or there are CPUs which have both L1 and L2 cache on the same die as the CPU core.</p>

<p>There are multi-core, multi-chip CPUs where each core has its own L1 cache on die, the 4 cores of one multi-core chip share an L2 cache that is on chip, but on a separate die, and the 2 chips share an L3 cache that is on a separate chip, but in the same package. Sometimes, there are also so-called <em>CPU books</em> which contain multiple chip packages, which might or might not have their own shared cache, which would then be an L4 cache.</p>

<p>Of course, multi-core chips don't have to share their L2 cache, they can also have private L2 caches.</p>

<p>And it's not always obvious, what level a certain cache is, or even whether or not a piece of RAM is a cache at all.</p>

<p>For example, on later Intel 80486 processors, there was an L1 cache on the chip and an L2 cache on the motherboard. But then AMD came out with a socket-compatible CPU that had both an L1 and L2 cache on the chip. So, the exact same cache chip on the motherboard was either an L2 or L3 cache, depending on what kind of CPU you used.</p>

<p>On the Cell BE CPU, the SPEs have 256&thinsp;KiByte of RAM each. Except that this RAM has about the same size and the same speed as a typical L2 cache, and since the SPEs don't have any other caches, you could also view this as a cache. However, caches are normally managed automatically by the CPU, whereas RAM is typically managed by the user program, the language runtime or the OS, not the CPU. So, is this RAM or a cache? It turns out that, in order to achieve best performance, you should really <em>not</em> view this as RAM, but more as a software-controlled cache.</p>
"
"<p>Correct me if I'm wrong, is <a href=""http://yardoc.org/"">YARD</a> not the same as <a href=""http://rdoc.rubyforge.org/"">RDoc</a>?</p>

<p>It's not based on RDoc but a total rewrite?</p>

<p>So if I'm using YARD, I don't have to bother with RDoc right?</p>
","2988","","<p>In short: Yes. (To all three questions.)</p>

<p>Note that YARD is mostly backwards-compatible with RDoc, at least as far as the markup is concerned. (RDoc plugins OTOH don't work with YARD.) So, you can actually use YARD to process your legacy RDoc files. YARD is mostly a proper superset of RDoc.</p>
"
"<p>For some time, <a href=""http://xml-simple.rubyforge.org/"" rel=""nofollow"">xml-simple</a> gem had been working for me just fine (indirectly, through another gem).</p>

<p>But lately I had to install Amazon S3 gem also. Amazon guys had decided that xml-simple wasn't cool enough, so they supplied a replacement: 'faster-xml-simple'. And they also decided that everybody wants to use their code now, so they did this:  </p>

<pre><code>class XmlSimple # :nodoc:
  def self.xml_in(*args)
    FasterXmlSimple.xml_in *args
  end
end
</code></pre>

<p>But two gems largely differ in behaviour and options. And now, each time I call <code>XmlSimple.xml_in</code>, I go to Amazon's version.</p>

<p>Is there a way to stop gem A (amazon S3) from overriding methods of gem B (xml-simple)? Or make Amazon's changes seen only to Amazon's gems? E.g., when deployed on Heroku, it all works just fine.</p>

<p>Thanks!</p>
","2988","","<p>Ruby has open classes, which means that anybody can modify any class at any time. There's no way to prevent that. And problems like the one you are describing are exactly the reason why every manual, every tutorial, every course, every FAQ teaches <em>not</em> to do that.</p>

<p>Over the last 10 years or so, there has been talk of adding <em>selector namespaces</em> to Ruby 2.0, to provide lexically scoped monkey patching. More recently, matz has set his sights on <a href=""http://scg.unibe.ch/research/classboxes/"" rel=""nofollow""><em>classboxes</em></a>. It looks very likely that Ruby 2.0 will provide classboxes to limit the scope of monkey patching, but until then, your best bet is to file a bug with the author of that library.</p>
"
"<p>How can I mock the initialize method on a ruby class?</p>

<p>I'm doing some testing and want to mock out the object that is created from a new call.  </p>

<p>I tried to write a few things and none of them seemed to get the mock class to return from the new call.  It just keeps returning the normal, expected object.</p>

<p>EDIT:</p>

<p>one attempt -</p>

<pre><code>class MockReminderTimingInfoParser &lt; ReminderTimingInfoParser
  def new(blank)
    ReminderTimingInfoParserForTest.new
  end
end

describe ReminderParser do
  parser = ReminderParser.new(MockReminderTimingInfoParser)

  it ""should parse line into a Reminder"" do
    parser.parse("" doesnt matter  \""message\"""").should == Reminder.new('message', ReminderTimingInfo.new([DaysOfWeek.new([:sundays])], [1]))
  end
end

class ReminderTimingInfoParserForTest
  include TimingInfoParser

  def parse_section(section); [DaysOfWeek.new([:sundays]), 1] end

  def reminder_times_converter(times); times end
end
</code></pre>
","2988","","<pre><code>class MockReminderTimingInfoParser &lt; ReminderTimingInfoParser
  def new(blank)
    ReminderTimingInfoParserForTest.new
  end
end
</code></pre>

<p>Here, you are defining a method called <code>new</code> for all instances of the class <code>MockReminderTimingInfoParser</code>. In your question, you mention that you want to hook into instance creation. However, in Ruby, instance creation is not done by instance methods. Obviously, this cannot work, since in order to call an instance method, you'd need to have an instance first!</p>

<p>Instead, instances are created by calling a factory method (commonly called <code>new</code>) on the class.</p>

<p>In other words, in order to create an instance of <code>MockReminderTimingInfoParser</code>, you would call <code>MockReminderTimingInfoParser.new</code>, but you have defined a method <code>MockReminderTimingInfoParser#new</code>. In order to call the method you have defined, you would have to call <code>MockReminderTimingInfoParser.new.new</code>.</p>

<p>You need to define a method on <code>MockReminderTimingInfoParser</code>'s singleton class. There's several ways to do that. One way would be just mimicking the way you would <em>call</em> the method:</p>

<pre><code>def MockReminderTimingInfoParser.new(blank)
  ReminderTimingInfoParserForTest.new
end
</code></pre>

<p>Another would be opening up <code>MockReminderTimingInfoParser</code>'s singleton class:</p>

<pre><code>class &lt;&lt; MockReminderTimingInfoParser
  def new(blank)
    ReminderTimingInfoParserForTest.new
  end
end
</code></pre>

<p>However, in both of these cases, <code>MockReminderTimingInfoParser</code> obviously has to exist first. Given that you need to define the class anyway, here's the most idiomatic way of defining methods on a class's (or module's) singleton class:</p>

<pre><code>class MockReminderTimingInfoParser &lt; ReminderTimingInfoParser
  def self.new(blank)
    ReminderTimingInfoParserForTest.new
  end
end
</code></pre>
"
"<p>Are there any tests that compare Javascript's performance with Java's?</p>

<p>UPDATE: Since everyone is asking why the hell this question, here is some context :)</p>

<p>As you all know - I hope - Javascript nowadays doesn't only reside in the web client but also in the web server with node.js.</p>

<p>It could also be run in mobile phones and dekstops with appcelerator and phonegap.</p>

<p>It could also be used substantially in the web browser to make the user experience first class like with desktop applications.</p>

<p>But Java could do these things too, running applets on the web client, and on mobile phones. It's also a language for the backend with many frameworks to choose between.</p>

<p>Since each one of them could almost/entirely replace each other in the mentioned area, I want to know the performance difference between them, for every case I described:</p>

<ul>
<li>Client: Java Applets vs Javascript</li>
<li>Server: Java EE vs Javascript with Node.js + Express</li>
<li>Mobile phones: Java ME vs Javascript with Phonegap / Appcelerator</li>
<li>Desktop: Java SE vs Javascript with Phonegap / Appcelerator</li>
</ul>

<p>I hope the context is more clear now.</p>
","2988","","<p>Java and JavaScript are both programming languages. Programming languages are just a bunch of abstract mathematical rules. Programming languages aren't fast. Or slow. They just <em>are</em>.</p>

<p>The performance of an application has nothing to do with the language. The most important factor is the application architecture. Then comes algorithmic efficiency. Then micro-optimizations. Then comes the quality of the compiler/interpreter. Then the CPU. Maybe a couple of other steps in between. The language, however, doesn't directly play a role. (And of course if you're talking about benchmarks, then also the particular benchmark plays a role, as well as how well implemented the benchmark is, how well run it is, whether the guy who performs the benchmark actually <em>knows</em> something about benchmarking, and even more importantly statistics. Also, the <em>precise</em> definition of what you actually <em>mean</em> by ""fast"" is pretty important, since it can also have significant influence on the benchmark.)</p>

<p>However, the language might indirectly play a role: it is much easier to find and fix performance bottlenecks in 10 lines of highly expressive, clear, concise, readable, well-factored, isolated, high-level Lisp code, than in 100 lines of tangled, low-level C. (Note that those two languages are only examples. I don't mean to single any one language out.) Twitter, for example, have said that with a less expressive language than Ruby, they wouldn't have been able to make such radical changes to their architecture in such a short amount of time, to fix their scalability problems. And the reason why Node.js is able to provide such good evented I/O performance is because JavaScript's standard library is so crappy. (That way, Node.js has to provide all I/O itself, so they can optimize it for evented I/O from the ground up. Ruby and Python, for example, have evented I/O libraries that work just as well as Node.js and are much more mature ... but, Ruby and Python already have large standard libraries, including I/O libraries, all of which are synchronous and don't play well with evented libraries. JavaScript doesn't have the problem of I/O libraries that don't play well with evented I/O, because JavaScript doesn't have I/O libraries <em>at all</em>.)</p>

<p>But if you <em>really</em> want to compare the two, here's an interesting datapoint for you: HotSpot, which is one of the more popular, and also more performant JVM implementations out there, was created by a team of guys which included, among other people, a guy named Lars Bak. But actually, HotSpot didn't appear out of thin air, it was based on the sourcecode of the Anamorphic Smalltalk VM, which was created by a team of guys which included, among other people, a guy named Lars Bak.</p>

<p>V8, which is one of the more popular, and also more performant JavaScript implementations out there, was created by a team of guys which included, among other people, a guy named Lars Bak. But actually, V8 didn't appear out of thin air, it was based on the sourcecode of the Anamorphic Smalltalk VM, which was created by a team of guys which included, among other people, a guy named Lars Bak.</p>

<p>Given that the two are more or less the same, we can expect similar performance. The only difference is that HotSpot has over a hundred engineers working on it for 15 years, whereas V8 has a dozen engineers working for less than 5 years. <em>That</em> is the <em>only</em> difference in performance. It's not about static vs. dynamic typing (Java <em>is</em> statically typed, but most JVMs and certainly HotSpot make no static optimizations whatsoever, all optimizations are purely dynamic), compilation vs. interpretation (HotSpot is actually interpreted with an additional JIT compiler, whereas V8 is purely compiled), high-level vs. low-level. It is purely about money.</p>

<p>But I am going to bet that for every pair of Java and JavaScript implementations where the Java implementation is faster, I can find another pair where the JavaScript implementation is faster. Also, I can probably <em>keep</em> the pair and just use a different benchmark. There's a <em>reason</em> the call the Computer Languages Benchmark Game a ""game"": they even <em>encourage</em> you right on their own page to play around with the benchmarks to make any arbitrary language rise to the top.</p>
"
"<pre><code>{'a' =&gt; 'b'}.grep /a/
=&gt; []
&gt;&gt; {'a' =&gt; 'b'}.grep /b/
=&gt; []
</code></pre>

<p>It doesn't seem to match the keys or values.  Does it do something I'm not discerning? </p>
","2988","","<p><code>grep</code> is defined on <code>Enumerable</code>, i.e. it is a generic method that doesn't know anything about <code>Hash</code>es. It operates on whatever the elements of the <code>Enumerable</code> are. Ruby doesn't have a type for key-value-pairs, it simply represents <code>Hash</code> entries as two-element arrays where the first element is the key and the second element is the value.</p>

<p><code>grep</code> uses the <code>===</code> method to filter out elements. And since neither</p>

<pre><code>/a/ === ['a', 'b']
</code></pre>

<p>nor</p>

<pre><code>/b/ === ['a', 'b']
</code></pre>

<p>are true, you always get an empty array as response.</p>

<p>Try this:</p>

<pre><code>def (t = Object.new).===(other)
  true
end

{'a' =&gt; 'b'}.grep t
# =&gt; [['a', 'b']]
</code></pre>

<p>Here you can see how <code>grep</code> works with <code>Hash</code>es.</p>
"
"<p>The <code>upcase</code> method capitalizes the entire string.</p>

<p>I need to capitalize only the first letter.</p>

<p>Also, I need to support several popular languages, like ""German"", ""Russian"" etc.</p>

<p>How do I do it?</p>
","2988","","<p>Unfortunately, it is impossible for a machine to upcase/downcase/capitalize properly. It needs way too much contextual information for a computer to understand.</p>

<p>That's why Ruby's <code>String</code> class only supports capitalization for ASCII characters, because there it's at least <em>somewhat</em> well-defined.</p>

<p>What do I mean by ""contextual information""?</p>

<p>For example, to capitalize <code>i</code> properly, you need to know which language the text is in. English, for example, has only two <code>i</code>s: capital <code>I</code> without a dot and small <code>i</code> with a dot. But Turkish has four <code>i</code>s: capital <code>I</code> without a dot, capital <code>İ</code> with a dot, small <code>ı</code> without a dot, small <code>i</code> with a dot. So, in English <code>'i'.upcase # =&gt; 'I'</code> and in Turkish <code>'i'.upcase # =&gt; 'İ'</code>. In other words: since <code>'i'.upcase</code> can return two different results, depending on the language, it is obviously impossible to correctly capitalize a word without knowing its language.</p>

<p>But Ruby doesn't know the language, it only knows the encoding. Therefore it is impossible to properly capitalize a string with Ruby's built-in functionality.</p>

<p>It gets worse: even <em>with</em> knowing the language, it is sometimes impossible to do capitalization properly. For example, in German, <code>'Maße'.upcase # =&gt; 'MASSE'</code> (<em>Maße</em> is the plural of <em>Maß</em> meaning <em>measurement</em>). However, <code>'Masse'.upcase # =&gt; 'MASSE'</code> (meaning <em>mass</em>). So, what is <code>'MASSE'.capitalize</code>? In other words: correctly capitalizing requires a full-blown Artificial Intelligence.</p>

<p>So, instead of sometimes giving the wrong answer, Ruby chooses to sometimes give no answer <em>at all</em>, which is why non-ASCII characters simply get ignored in downcase/upcase/capitalize operations. (Which of course also reads to wrong results, but at least it's easy to check.)</p>
"
"<p>I'm currently switching from rdoc to yard for my ruby software documentaion.</p>

<p>In my doc I often reference some classes/modules from the comments, for instance : </p>

<pre><code>## == Provides various utility features
##
## == Features
##
## Logging : logging is provided by the Mysoft::Mypackage::Utility::Logger class
##
</code></pre>

<p>Rdoc correctly creates a link to the Mysoft::Mypackage::Utility::Logger class documentation page, while yard ignores the tag and considers the class name as simple string.</p>

<p>I know that yard has the @see tag, however this will create a separate ""See Also"" section in the documentation, while I need to reference the class/modules with inside my description text.</p>

<p>I'm surely missing something, but if you have any examples on how this should be done with yard, I'd realy appreciate.</p>

<p>Thanks per advace, </p>

<p>dl</p>
","2988","","<p>Quoth <a href=""http://RubyDoc.Info/docs/yard/file/docs/GettingStarted.md#Other_Extended_Syntax"">the documentation</a>:</p>

<blockquote>
  <p>YARD supports a special syntax to link to other code objects or files. The syntax is <code>{ObjectName#method OPTIONAL_TITLE}</code>. This syntax is acceptable anywhere in documentation with the exception of the <code>@see</code> tag, which automatically links its data.</p>
</blockquote>

<p>So, you want</p>

<pre><code>## == Provides various utility features
##
## == Features
##
## Logging: logging is provided by the {Mysoft::Mypackage::Utility::Logger} class
##
</code></pre>
"
"<p>To refresh Redmine, I need SVN to ping our Redmine installation from our post-commit hook. Our post-commit hook is a Ruby script that generates an email. I'd like to insert a call do this:</p>

<p><code>curl --insecure <a href=""https://redmineserver+webappkey"" rel=""nofollow"">https://redmineserver+webappkey</a></code></p>

<p>This call works from the command line but when I try to do this:</p>

<pre><code>#!/usr/bin/ruby -w

REFRESH_DRADIS_URL = ""https://redmineserver+webappkey""
system(""/usr/bin/curl"", ""--insecure"", ""#{REFRESH_DRADIS_URL}"")
</code></pre>

<p>It doesn't work. How do I do this in ruby? I googled 'ruby system curl' but I just got a bunch of links to integrate curl into ruby (which is NOT what I'm interested in).</p>
","2988","","<p>For such a simple problem, I wouldn't bother with shelling out to <code>curl</code>, I'd simply do</p>

<pre><code>require 'net/https'

http = Net::HTTP.new('redmineserver+webappkey', 443)

http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

http.get('/')
</code></pre>

<p>And for more complex problems, I'd <em>still</em> not shell out to <code>curl</code>, but rather use one of the many Ruby <code>libcurl</code> bindings.</p>
"
"<p>I'm working on my company's intranet with </p>

<ul>
<li>cucumber 0.8.5</li>
<li>gherkin 2.1.5</li>
</ul>

<p>And I'm trying to switch from using ruby 1.8.7 to jruby 1.5.1</p>

<p>However, whenever I try to run cucumber from jruby, I get an error:</p>

<pre><code>% jruby -S cucumber
/usr/local/src/jruby-1.5.1/lib/ruby/site_rub/1.8/rubygems/custom_require.rb:31:in `require': no such file to load -- gherkin (LoadError)
</code></pre>

<p>I think this is b/c gherkin 2.1.5 is a native extension, and jruby can't handle it:</p>

<pre><code>% jgem install gherkin-2.1.5.gem
...
ERROR: Error installing gherkin-2.1.5.gem:
       ERROR: Failed to build gem native extension.
</code></pre>

<p>Now, I'd love to just try updating versions, but since this is on a protected intranet, importing new software is a PITA, and takes some time.</p>

<p>Does anyone have any suggestions of how I can make the software I have work?  Am I missing a proper configuration setting or some such?</p>
","2988","","<p>You need to install the JRuby version of gherkin. If you simply do</p>

<pre><code>jgem install gherkin
</code></pre>

<p>you will get the correct version automatically. Otherwise, you have to figure out the URI to the JRuby version of the gherkin gem yourself and download it by hand.</p>

<p>But really, there is only one sensible thing you can do if you are working for a company that asks you to do a job and then ties your hands behind your back: run, as fast as you can, as far away as you can.</p>
"
"<p>This is my array</p>

<pre><code>[{:amount=&gt;10, :gl_acct_id=&gt;1, :alt_amount=&gt;20}, {:amount=&gt;20, :gl_acct_id=&gt;2
, :alt_amount=&gt;30}]
</code></pre>

<p>i want result </p>

<pre><code>[{:amount =&gt; 30}] or {:amount = 30}
</code></pre>

<p>Any idea?</p>
","2988","","<p>This is one way to do it:</p>

<pre><code>a = {amount:10,gl_acct_id:1,alt_amount:20},{amount:20,gl_acct_id:2,alt_amount:30}
a.map {|h| h[:amount] }.reduce(:+)
</code></pre>

<p>However, I get the feeling that your object model is somewhat lacking. With a better object model, you would probably be able to do something like:</p>

<pre><code>a.map(&amp;:amount).reduce(:+)
</code></pre>

<p>Or even just</p>

<pre><code>a.sum
</code></pre>

<p>Note that as @sepp2k pointed out, if you want to get out a <code>Hash</code>, you need to wrap it in a <code>Hash</code> again.</p>
"
"<p>I have an array of hashes, and the values are all float numbers.</p>

<p>What are some good ways in Ruby to convert them all to int? </p>

<p>I have this way right now but wonder what other methods there are that are more elegant or clear:</p>

<pre><code>analytics.map {|e| e.keys.each {|k| e[k] = e[k].to_i}; e}
</code></pre>

<p><strong>Update:</strong> this is a run of the code:</p>

<pre><code>&gt; @analytics = [{:a =&gt; 1.1, :b =&gt; 123.456}, {'c' =&gt; 765.432}]
 =&gt; [{:a=&gt;1.1, :b=&gt;123.456}, {""c""=&gt;765.432}] 

&gt; @analytics.map {|e| e.keys.each {|k| e[k] = e[k].to_i}; e} 
 =&gt; [{:a=&gt;1, :b=&gt;123}, {""c""=&gt;765}] 

&gt; @analytics
 =&gt; [{:a=&gt;1, :b=&gt;123}, {""c""=&gt;765}]
</code></pre>
","2988","","<pre><code>analytics.map {|h| Hash[h.map {|k, v| [k, v.to_i] }] }
</code></pre>

<p>Looks kind of neat.</p>

<p>In general, whenever I find myself juggling several nested iterators, I try to refactor my object model such that I'm actually dealing with actual objects, not just a twisted maze of nested arrays and hashes. This seems to be right on the fence.</p>

<p>After all, Ruby is an object-oriented programming language, not a hash-oriented one.</p>
"
"<p>I am trying to write some test code for my java application using Scalatest. I figured, since Scala has so much more readable syntax it would result with more readable test code.  </p>

<p>So far, this is what I managed:</p>

<pre>
package com.xyz

import org.scalatest.FlatSpec
import org.scalatest.matchers.ShouldMatchers
import com.xyz.SecurityService
import org.mockito.Mockito._
import org.scalatest.mock.MockitoSugar
import org.mockito.Matchers._
import javax.servlet.jsp.tagext.Tag

class CheckRoleTagSpec extends FlatSpec with ShouldMatchers with  MockitoSugar {

  behavior of ""CheckRole tag""

  it should ""allow access when neither role nor root defined"" in {
    val securityServiceMock = mock[SecurityService]

    val tag = new CheckRoleTag()
    tag.setSecurityService(securityServiceMock)

    tag.setGroup(""group"")
    tag.setPortal(""portal"")

    tag.setRoot(false)
    tag.setRole(null)

    tag.doStartTag should be(Tag.SKIP_BODY)
  }

}
</pre>

<p>I am quite dissapointed with this code. It's practically the same thing I would need to write in Java. Please help me make it more scala-like and functional.</p>
","2988","","<p>You cannot fix an ugly test by rewriting the test. You can only fix it by redesigning the API that is being tested.</p>

<p>Well, technically, it <em>is</em> possible to write ugly tests for good APIs if you try <em>really</em> hard, are very evil, very, stupid, very drunk or very tired. But writing an ugly test takes <em>effort</em> and programmers are lazy, so it is very unlikely that someone would write an ugly test by choice. It is almost impossible to write ugly tests: you stick something in, you get something out, you check whether you got what you expected. That's it. There's really nothing to uglify there.</p>

<p>A test just uses the API the same way a user of the API would use it. It's basically an example of how to use the API properly, that also, almost as a side-effect, happens to check that the API is actually <em>implemented</em> properly. That's why an ugly test is a good indicator for bad API design, and it's also why test-driving the API design is a good thing, even if you don't do TDD.</p>

<p>In this particular case, I can see quite a few ways to improve the API, although these suggestions are necessarily incomplete, shallow and simplistic (not to mention probably wrong), since I don't know anything about your domain:</p>

<ul>
<li><em>Better Names</em>: <code>setRoot</code> sounds like it is setting the root. But, unless <code>false</code> is the root of your hierarchy, I assume that what it is <em>actually</em> setting is whether or not this Tag is the root. So, it should rather be named <code>isRoot</code> or <code>makeRoot</code> or <code>setIsRoot</code> or something like that.</li>
<li><em>Better Defaults</em>: continuing with <code>setRoot</code>, assuming that my guess is correct and this sets whether or not the Tag is the root, then the default is the wrong way around. By the very definition of the concept of ""root"", there can only ever be <em>one</em> root. So, you are forcing your users to specify <code>setRoot(false)</code> <em>every single time</em>, except for that <em>one</em> time when they are actually defining a root. Non-root Tags should be the default, and you should only be forced to <code>setRoot(true)</code> for that <em>one</em> Tag which actually <em>is</em> the root.</li>
<li><em>Better Defaults, Part II</em>: <code>setRole(null)</code>. Seriously? You are forcing your users to explicitly <em>set</em> the role to be <em>unset</em>? Why not simply make unset the default? After all, the test is called ""... when neither role nor root defined"", so why define them?</li>
<li><em>Fluent API / Builder Pattern</em>: if you <em>really</em> have to construct invalid objects (but see next point), at least use something like a Fluent API or a Builder Pattern.</li>
<li><em>Only Construct Valid Objects</em>: But really, objects should always be valid, complete and fully configured, when constructed. You shouldn't have to construct an object, and <em>then</em> configure it.</li>
</ul>

<p>That way, the test basically becomes:</p>

<pre><code>package com.xyz

import org.scalatest.FlatSpec
import org.scalatest.matchers.ShouldMatchers
import com.xyz.SecurityService
import org.mockito.Mockito._
import org.scalatest.mock.MockitoSugar
import org.mockito.Matchers._
import javax.servlet.jsp.tagext.Tag

class CheckRoleTagSpec extends FlatSpec with ShouldMatchers with MockitoSugar {
  behavior of ""CheckRole tag""
  it should ""allow access when neither role nor root defined"" in {
    val tag = new CheckRoleTag(mock[SecurityService], ""group"", ""portal"")

    tag.doStartTag should be(Tag.SKIP_BODY)
  }
}
</code></pre>
"
"<p>I have been toying around with <a href=""http://pyusb.berlios.de/"">PyUSB</a> lately, and found that it works beautifully on Linux (Ubuntu has <a href=""http://www.libusb.org/"">libusb</a> 0.1 and 1.0, as well as <a href=""http://sourceforge.net/projects/openusb/develop"">OpenUSB</a>)... but only if I run the program with root privileges (with <code>sudo</code>, of course).</p>

<p>Can anyone tell me why it requires elevated privileges and, more importantly, if I can change the permissions somehow to make it work for normal user accounts?</p>
","2988","","<p><code>libusb</code> allows you to manipulate arbitrary USB devices in arbitrary ways. You could format an external USB harddisk, for example.</p>

<p>In general, all direct hardware access requires <code>root</code> privileges, although I guess that actually full <code>root</code> privileges are not required, you should be fine with just <code>CAP_SYS_RAWIO</code>.</p>
"
"<p>I read that the executables for the commands issued using exec() calls are supposed to be stored in directories that are part of the PATH variable.</p>

<p>Accordingly, I found the executables for <code>ls, chmod, grep, cat</code> in /bin.</p>

<p>However, I could not find the executable for <code>cd</code>.</p>

<p>Where is it located? </p>
","2988","","<p>Not all utilities that you can execute at a shell prompt need actually exist as actual executables in the filesystem. They can also be so-called <em>shell built-ins</em>, which means&nbsp;&ndash; you guessed it&nbsp;&ndash; that they are built into the shell.</p>

<p>The Single Unix Specification does, in general, <em>not</em> specify whether a utility has to be provided as an executable or as a built-in, that is left as a private internal implementation detail to the OS vendor.</p>

<p>The only exceptions are the so-called <a href=""http://OpenGroup.Org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_14""><em>special built-ins</em></a>, which <em>must</em> be provided as built-ins, because they affect the behavior of the shell <em>itself</em> in a manner that regular executables (or even regular built-ins) can't (for example <code>set</code>, which sets variables that persist even after <code>set</code> exits). Those special built-ins are:</p>

<ul>
<li><code>break</code></li>
<li><code>:</code></li>
<li><code>continue</code></li>
<li><code>.</code></li>
<li><code>eval</code></li>
<li><code>exec</code></li>
<li><code>exit</code></li>
<li><code>export</code></li>
<li><code>readonly</code></li>
<li><code>return</code></li>
<li><code>set</code></li>
<li><code>shift</code></li>
<li><code>times</code></li>
<li><code>trap</code></li>
<li><code>unset</code></li>
</ul>

<p>Note that <code>cd</code> is <em>not</em> on that list, which means that <code>cd</code> is not a special built-in. In fact, <a href=""http://OpenGroup.Org/onlinepubs/9699919799/utilities/cd.html"">according to the specification</a>, it would be perfectly legal to implement <code>cd</code> as a regular executable. It's just not possible, for the reasons given by the other answers.</p>

<p>And if you scroll down to the non-normative section of the specification, i.e. to the part that is not officially part of the specification but only purely informational, you will find that fact explicitly mentioned:</p>

<blockquote>
  <p>Since cd affects the current shell execution environment, it is always provided as a <em>shell regular built-in</em>.</p>
</blockquote>

<p>So, the specification doesn't require <code>cd</code> to be a built-in, but it's simply impossible to do otherwise.</p>

<p>Note that sometimes utilities are provided both as a built-in <em>and</em> as an executable. A good example is the <code>time</code> utility, which on a typical GNU system is provided both as an executable by the Coreutils package and as a shell regular built-in by Bash. This can lead to confusion, because when you do <code>man time</code>, you get the manpage of the <code>time</code> executable (the <code>time</code> builtin is documented in <code>man builtins</code>), but when you execute <code>time</code> you get the <code>time</code> built-in, which does not support the same features as the <code>time</code> executable whose manpage you just read. You have to explicitly run <code>/usr/bin/time</code> (or whatever path you installed Coreutils into) to get the executable.</p>
"
"<p>If both a method and a variable has the same name it will use the variable.</p>

<pre><code>hello = ""hello from variable""

def hello
  ""hello from method""
end

puts hello
</code></pre>

<p>Is it possible somehow to use the method instead without changing name?</p>
","2988","","<p>The ambiguity between local variables and methods only arises for receiverless message sends with no argument list. So, the solution is obvious: either provide a receiver or an argument list:</p>

<pre><code>self.hello
hello()
</code></pre>

<p>See also</p>

<ul>
<li><a href=""http://StackOverflow.Com/questions/2985850/how-does-ruby-allow-a-method-and-a-class-with-the-same-name/2986338#2986338"">How does ruby allow a method and a Class with the same name?</a></li>
<li><a href=""http://StackOverflow.Com/questions/2950956/optional-parens-in-ruby-for-method-with-uppercase-start-letter/2951439#2951439"">Optional parens in Ruby for method with uppercase start letter?</a></li>
</ul>
"
"<p>I have recently come across <code>SCALA</code> while going through the designs of twitter and linkedin. A part of the twitter and linkedin are being shifted to scala for scalability which where originally developed in RoR?</p>

<p>Does changing the programming language guarantee scalability? How exactly is this decided? Can there by any pre-planning on how to scale while designing the system?</p>

<p>Can anyone please give me some insights on this ?</p>

<p>Cheers.</p>
","2988","","<p>This seems to be a typical instance of conflating coincidence and causality. Twitter changed their architecture, which solved their scalability problems. At the same time, they also happened to introduce a new programming language, but this doesn't mean that this was responsible for fixing their problems.</p>

<p>Twitter was originally envisioned as a CMS platform. So, it was architected as a CMS, with a database at the center. However, users didn't use it as a CMS, they used it as a messaging platform. A database is pretty much the worst case scenario for a messaging platform: a messaging platform needs a message queue at the center. So, Twitter wrote a message queue that complements their database, and that helped their scalability problems somewhat.</p>

<p>This message queue was actually written in Ruby. So, no Scala there. (BTW: the name of the language is <em>Scala</em>, not <em>SCALA</em>. It's not an acronym.)</p>

<p>This first message queue also had scalability problems. Not because it was written in Ruby, but because it was the first time that any of the developers had ever written a message queue. So, they wrote another message queue. This time, they had all the experience from the first message queue, so this one was better. And it happened to be written in Scala.</p>

<p>The reason why Twitter had scalability problems at the beginning was not because of Ruby, it was because there had never been a Twitter before, and nobody knew how to scale it.</p>

<p>The reason why it scales now, is because they learned how to scale it, not because of Scala. (In fact, large parts of Twitter are still implemented in Ruby. Others are in C++, and there's some Erlang, too, I believe.)</p>

<p>Architecture scales. Good languages can make it easier to find performance and scalability bottlenecks (by simply having less code to look through), and make it easier to do large scale architecture refactoring (again: less code), but ultimately, it's about the architecture.</p>
"
"<p>In Ruby, I have a hash of objects. Each object has a type and a value. I am trying to design an efficient function that can get the average of the values of all of objects of a certain type within the hash.</p>

<p>Here is an example of how this is currently implemented:</p>

<pre><code>#the hash is composed of a number of objects of class Robot (example name)
class Robot
  attr_accessor :type, :value

  def initialize(type, value)
    @type = type
    @value = value
  end

end


#this is the hash that inclues the Robot objects
hsh = { 56 =&gt; Robot.new(:x, 5), 21 =&gt; Robot.new(:x, 25), 45 =&gt; Robot.new(:x, 35), 31 =&gt; Robot.new(:y, 15), 0 =&gt; Robot.new(:y, 5) }


#this is the part where I find the average
total = 0
count = 0
hsh.each_value { |r|  
if r.type == :x        #is there a better way to get only objects of type :x ?
  total += r.value 
  count += 1
end
} 

average = total / count
</code></pre>

<p>So my question is:</p>

<p><b> is there a better way to do this that does not involve looping through the entire hash? </b></p>

<p>Note that I can't use the key values because there will be multiple objects with the same type in the same hash (and the key values are being used to signify something else already).</p>

<p>If there is an easy way to do this with arrays, that would also work (since I can convert the hash to an array easily).</p>

<p>Thanks!</p>

<p>EDIT: fixed error in my code.</p>
","2988","","<pre><code>hsh.values.select {|v| v.type == :x}.map(&amp;:value).reduce(:+) / hsh.size
</code></pre>

<blockquote>
  <p>I am trying to design an efficient function that can get the average of the values of all of objects of a certain type within the hash</p>
</blockquote>

<p>Unless I misunderstood what you are trying to say, this is <em>not</em> what the code you posted does. The average value of the <code>:x</code> robots is <code>21</code> (there's 3 <code>:x</code> robots, with values <code>5</code>, <code>25</code> and <code>35</code>; <code>5 + 25 + 35 == 65</code> and <code>65</code> divided by 3 robots is <code>21</code>), but your code (and mine, since I modeled mine after yours) prints <code>13</code>.</p>

<blockquote>
  <p>is there a better way to get only objects of type :x ?</p>
</blockquote>

<p>Yes. To select elements, use the <code>select</code> method.</p>

<blockquote>
  <p>is there a better way to do this that does not involve looping through the entire hash?</p>
</blockquote>

<p>No. If you want to find all objects with a given property, you have to look at all objects to see whether or not they have that property.</p>

<p>Do you have <em>actual</em> hard statistical evidence that <em>this</em> method is causing your performance bottlenecks?</p>
"
"<p>I am just starting to look at JavaFX and it seems like a nice language -- reminds me of Scala without the sophisticated (complex) type system.</p>

<p>Is there any word on when generics will be added? I hate going back to ""Java 1.4"" style coding.</p>

<p>Thanks.</p>
","2988","","<p>Never. It was announced just yesterday at JavaOne that the JavaFXScript programming language (that's what you are talking about, right?) will be abandoned. Only the JavaFX framework will be continued, in order to be used with other JVM languages such as Scala, Ruby, Python, Clojure or Java.</p>
"
"<p>How do I determine who pushed to the repository? </p>

<p>I.e. Somebody does <code>git push origin master</code> and in the post-receive hook on the <code>origin</code> repo I need to use the name or e-mail of Somebody.</p>
","2988","","<p>You cannot tell that using Git. If you use SSH to push, then you can use SSH to get the username, if you use a user-management frontend such as gitolite, you can use <em>that</em> to get the username, if you use HTTP with authentication, you can use your webserver to get the username, but the Git networking protocols do not transmit any usernames.</p>
"
"<p>I'm writing post-receive hook basing on the <code>post-receive-email</code> script from the <code>contrib</code> dir, but it seems that the <code>oldrev</code> and <code>newrev</code> arguments are empty.</p>

<p>The script looks like this:</p>

<pre><code>#!/bin/bash

oldrev=$(git rev-parse $1)
newrev=$(git rev-parse $2)
</code></pre>

<p>The script runs on push, but all <code>$1</code>, <code>$2</code>, <code>$oldrev</code> and <code>$newrev</code> are empty. Should I configure something to get it running?</p>

<p>(The repository was created by <code>gitolite</code> if it does matter)</p>
","2988","","<p>The <code>post-receive</code> hook doesn't take any arguments. Quoth <a href=""http://Kernel.Org/pub/software/scm/git/docs/githooks.html"">the manual</a> (emphasis added):</p>

<blockquote>
  <p>This hook is invoked by git-receive-pack on the remote repository, which happens when a git push is done on a local repository. It executes on the remote repository once after all the refs have been updated.</p>
  
  <p>This hook executes once for the receive operation. <strong>It takes no arguments</strong>, but gets the same information as the <code>pre-receive</code> hook does on its standard input.</p>
  
  <p>This hook does not affect the outcome of <code>git-receive-pack</code>, as it is called after the real work is done.</p>
  
  <p>This supersedes the <code>post-update</code> hook in that it gets both old and new values of all the refs in addition to their names.</p>
  
  <p>Both standard output and standard error output are forwarded to <code>git send-pack</code> on the other end, so you can simply echo messages for the user.</p>
  
  <p>The default <code>post-receive</code> hook is empty, but there is a sample script <code>post-receive-email</code> provided in the <code>contrib/hooks</code> directory in git distribution, which implements sending commit emails.</p>
</blockquote>
"
"<p>Can you have an MVC without an ORM?</p>
","2988","","<p>Of course you can. Those two things have absolutely nothing to do with each other. They are in no way related to each other. Not even remotely. They live in completely different worlds.</p>

<p>They live in different areas of the application: MVC is about user interaction, ORM is about database access.</p>

<p>They live on different abstraction levels: MVC is an architecture pattern, ORM is a type of library.</p>

<p>This is of course most obvious when you consider that ORMs didn't exist in 1977.</p>
"
"<p>Haven't seen this ""feature"" anywhere else. I know that the 32nd bit is used for garbage collection. But why is it that way only for ints and not for the other basic types?</p>
","2988","","<p>This is called a <em>tagged pointer</em> representation, and is a pretty common optimization trick used in many different interpreters, VMs and runtime systems for decades. Pretty much every Lisp implementation uses them, many Smalltalk VMs, many Ruby interpreters, and so on.</p>

<p>Usually, in those languages, you always pass around pointers to objects. An object itself consists of an object header, which contains object metadata (like the type of an object, its class(es), maybe access control restrictions or security annotations and so on), and then the actual object data itself. So, a simple integer would be represented as a pointer plus an object consisting of metadata and the actual integer. Even with a very compact representation, that's something like 6 Byte for a simple integer.</p>

<p>Also, you cannot pass such an integer object to the CPU to perform fast integer arithmetic. If you want to add two integers, you <em>really</em> only have two pointers, which point to the beginning of the object headers of the two integer objects you want to add. So, you first need to perform integer arithmetic on the first pointer to add the offset into the object to it where the integer data is stored. Then you have to dereference that address. Do the same again with the second integer. Now you have two integers you can actually ask the CPU to add. Of course, you need to now construct a new integer object to hold the result.</p>

<p>So, in order to perform <em>one</em> integer addition, you actually need to perform <em>three</em> integer additions plus two pointer dererefences plus one object construction. And you take up almost 20 Byte.</p>

<p>However, the trick is that with so-called <em>immutable value types</em> like integers, you usually don't <em>need</em> all the metadata in the object header: you can just leave all that stuff out, and simply synthesize it (which is VM-nerd-speak for ""fake it""), when anyone cares to look. An integer will <em>always</em> have class <code>Integer</code>, there's no need to separately store that information. If someone uses reflection to figure out the class of an integer, you simply reply <code>Integer</code> and nobody will ever know that you didn't actually store that information in the object header and that in fact, there <em>isn't</em> even an object header (or an object).</p>

<p>So, the trick is to store the value <em>of</em> the object within the pointer <em>to</em> the object, effectively collapsing the two into one.</p>

<p>There are CPUs which actually have additional space within a pointer (so-called <em>tag bits</em>) that allow you to store extra information about the pointer within the pointer itself. Extra information like ""this isn't actually a pointer, this is an integer"". Examples include the Burroughs B5000, the various Lisp Machines or the AS/400. Unfortunately, most of the current mainstream CPUs don't have that feature.</p>

<p>However, there is a way out: most current mainstream CPUs work significantly slower when addresses aren't aligned on word boundaries. Some even don't support unaligned access at all.</p>

<p>What this means is that in practice, <em>all</em> pointers will be divisible by 4, which means they will <em>always</em> end with two <code>0</code> bits. This allows us to distinguish between <em>real</em> pointers (that end in <code>00</code>) and pointers which are actually integers in disguise (those that end with <code>1</code>). And it still leaves us with all pointers that end in <code>10</code> free to do other stuff. Also, most modern operating systems reserve the very low addresses for themselves, which gives us another area to mess around with (pointers that start with, say, 24 <code>0</code>s and end with <code>00</code>).</p>

<p>So, you can encode a 31-bit integer into a pointer, by simply shifting it 1 bit to the left and adding <code>1</code> to it. And you can perform <em>very fast</em> integer arithmetic with those, by simply shifting them appropriately (sometimes not even that is necessary).</p>

<p>What do we do with those other address spaces? Well, typical examples include encoding <code>float</code>s in the other large address space and a number of special objects like <code>true</code>, <code>false</code>, <code>nil</code>, the 127 ASCII characters, some commonly used short strings, the empty list, the empty object, the empty array and so on near the <code>0</code> address.</p>

<p>For example, in the MRI, YARV and Rubinius Ruby interpreters, integers are encoded the way I described above, <code>false</code> is encoded as address <code>0</code> (which just so happens <em>also</em> to be the representation of <code>false</code> in C), <code>true</code> as address <code>2</code> (which just so happens to be the C representation of <code>true</code> shifted by one bit) and <code>nil</code> as <code>4</code>.</p>
"
"<p>This may be a question that others have seen, but I am trying to find a language designed for (or with language support for) concurrent programming that can run on the .net platform.  </p>

<p>I have been doing side development in erlang to get a feel for the language and have loved how easy it is to get a stable concurrent or even distributed system up.  It led me to scala which also had a nice system using actors, however scala.net does not seem to have this functionality currently (Granted this is a concurrent system vs a distributed system).  The two .net languages I was looking at are Axum and F#.  </p>

<p>Are these the only choices I have?  Are there others?  And, if they are the only choices, what are the advantages/disadvantages of each?</p>
","2988","","<p>Axum is a research project. A <em>real</em> research project, where only ideas from it will end up in products. (Unlike F#, which was productized as a whole.) I'm not even sure the license allows using it to develop production applications.</p>

<p>F# is a fine choice.</p>

<p>Clojure also runs on the CLI, and is a good choice, too.</p>

<p>The CLI port of Scala is currently in the process of being resurrected (with officiall funding from Microsoft, actually), and Scala's Actor libraries (both the built-in one, as well as Akka) are pretty good.</p>

<p>Regarding @wmeyer's comment above: Scala itself doesn't have any provisions for distributed programming. (Neither does Clojure.) Both generally rely on the myriad of Java frameworks that exist for that purpose, such as Terracotta. However, Akka <em>does</em> have Remote Actors for distributed programming, and Akka is largely API-compatible with the built-in Scala Actor library, which allows for a smooth transition.</p>

<p>Erlang would be kind of cool. Kresten Krab Thorup is currently working on Erjang, an Erlang implementation on the JVM, and he has some pretty impressive results: running on HotSpot, Erjang scales comparably to BEAM, sometimes even better. For example, in the (in)famous process-ring benchmark with 10000 processes, Erjang starts up only minimally slower than BEAM, but when you repeat the run several times and the JIT kicks in, it overtakes BEAM after about 3 runs (and curiously, BEAM starts slowing down after 4 runs).</p>

<p>I'm pretty sure you could build an ""#rlang"" on the DLR and the TPL that performs equally well.</p>
"
"<p>Do linked lists have any practical uses at all. Many computer science books compare them to arrays and say the main advantage is that they are mutable. However, most languages provide mutable versions of arrays. So do linked lists have any actual uses in the real world, or are they just part of computer science theory?</p>
","2988","","<p>An Immutable Linked List is the most trivial example of a Persistent Data Structure, which is why it is the standard (and sometimes even <em>only</em>) data structure in many functional languages. Lisp, Scheme, ML, Haskell, Scala, you name it.</p>
"
"<p>I want to intercept method calls on a ruby-class and being able to do something before and after the actual execution of the method. I tried the following code, but get the error:</p>

<blockquote>
  <p>MethodInterception.rb:16:in <code>before_filter': (eval):2:in</code>alias_method': undefined method
  <code>say_hello' for class</code>HomeWork'
  (NameError)
          from (eval):2:in `before_filter'</p>
</blockquote>

<p>Can anybody help me to do it right?</p>

<pre><code>class MethodInterception

  def self.before_filter(method)
    puts ""before filter called""
    method = method.to_s
    eval_string = ""
      alias_method :old_#{method}, :#{method}

      def #{method}(*args)
        puts 'going to call former method'
        old_#{method}(*args)
        puts 'former method called'
      end
    ""
    puts ""going to call #{eval_string}""
    eval(eval_string)
    puts ""return""
  end
end

class HomeWork &lt; MethodInterception
  before_filter(:say_hello)

  def say_hello
    puts ""say hello""
  end

end
</code></pre>
","2988","","<p>I just came up with this:</p>

<pre><code>module MethodInterception
  def method_added(meth)
    return unless (@intercepted_methods ||= []).include?(meth) &amp;&amp; !@recursing

    @recursing = true # protect against infinite recursion

    old_meth = instance_method(meth)
    define_method(meth) do |*args, &amp;block|
      puts 'before'
      old_meth.bind(self).call(*args, &amp;block)
      puts 'after'
    end

    @recursing = nil
  end

  def before_filter(meth)
    (@intercepted_methods ||= []) &lt;&lt; meth
  end
end
</code></pre>

<p>Use it like so:</p>

<pre><code>class HomeWork
  extend MethodInterception

  before_filter(:say_hello)

  def say_hello
    puts ""say hello""
  end
end
</code></pre>

<p>Works:</p>

<pre><code>HomeWork.new.say_hello
# before
# say hello
# after
</code></pre>

<p>The basic problem in your code was that you renamed the method in your <code>before_filter</code> method, but then in your client code, you called <code>before_filter</code> before the method was actually defined, thus resulting in an attempt to rename a method which doesn't exist.</p>

<p>The solution is simple: Don't Do That&trade;!</p>

<p>Well, okay, maybe not so simple. You <em>could</em> simply force your clients to always call <code>before_filter</code> <em>after</em> they have defined their methods. However, that is bad API design.</p>

<p>So, you have to somehow arrange for your code to defer the wrapping of the method until it actually exists. And that's what I did: instead of redefining the method inside the <code>before_filter</code> method, I only record the fact that it is to be redefined later. Then, I do the <em>actual</em> redefining in the <code>method_added</code> hook.</p>

<p>There is a tiny problem in this, because if you add a method inside of <code>method_added</code>, then of course it will immediately get called again and add the method again, which will lead to it being called again, and so on. So, I need to guard against recursion.</p>

<p>Note that this solution actually <em>also</em> enforces an ordering on the client: while the OP's version <em>only</em> works if you call <code>before_filter</code> <em>after</em> defining the method, my version only works if you call it <em>before</em>. However, it is trivially easy to extend so that it doen't suffer from that problem.</p>

<p>Note also that I made some additional changes that are unrelated to the problem, but that I think are more Rubyish:</p>

<ul>
<li>use a mixin instead of a class: inheritance is a very valuable resource in Ruby, because you can only inherit from one class. Mixins, however, are cheap: you can mix in as many as you want. Besides: can you really say that Homework IS-A MethodInterception?</li>
<li>use <code>Module#define_method</code> instead of <code>eval</code>: <code>eval</code> is evil. 'Nuff said. (There was absolutely no reason whatsoever to use <code>eval</code> in the first place, in the OP's code.)</li>
<li>use the method wrapping technique instead of <code>alias_method</code>: the <code>alias_method</code> chain technique pollutes the namespace with useless <code>old_foo</code> and <code>old_bar</code> methods. I like my namespaces clean.</li>
</ul>

<hr>

<p>I just fixed some of the limitations I mentioned above, and added a few more features, but am too lazy to rewrite my explanations, so I repost the modified version here:</p>

<pre><code>module MethodInterception
  def before_filter(*meths)
    return @wrap_next_method = true if meths.empty?
    meths.delete_if {|meth| wrap(meth) if method_defined?(meth) }
    @intercepted_methods += meths
  end

  private

  def wrap(meth)
    old_meth = instance_method(meth)
    define_method(meth) do |*args, &amp;block|
      puts 'before'
      old_meth.bind(self).(*args, &amp;block)
      puts 'after'
    end
  end

  def method_added(meth)
    return super unless @intercepted_methods.include?(meth) || @wrap_next_method
    return super if @recursing == meth

    @recursing = meth # protect against infinite recursion
    wrap(meth)
    @recursing = nil
    @wrap_next_method = false

    super
  end

  def self.extended(klass)
    klass.instance_variable_set(:@intercepted_methods, [])
    klass.instance_variable_set(:@recursing, false)
    klass.instance_variable_set(:@wrap_next_method, false)
  end
end

class HomeWork
  extend MethodInterception

  def say_hello
    puts 'say hello'
  end

  before_filter(:say_hello, :say_goodbye)

  def say_goodbye
    puts 'say goodbye'
  end

  before_filter
  def say_ahh
    puts 'ahh'
  end
end

(h = HomeWork.new).say_hello
h.say_goodbye
h.say_ahh
</code></pre>
"
"<p>This does not seem to work:</p>

<pre><code>class Test
  private

  define_method :private_method do 
    ""uh!""
  end
end

puts Test.new.private_method
</code></pre>
","2988","","<p><code>Module#private</code> takes an optional argument for the method name:</p>

<pre><code>class Test
 private :private_method
end
</code></pre>

<p>The above is of course equivalent to</p>

<pre><code>Test.private :private_method # doesn't work
</code></pre>

<p>Except that <code>Module#private</code> is private, so you have to use reflection to circumvent the access restrictions:</p>

<pre><code>Test.send :private, :private_method
</code></pre>

<p>No <code>eval</code> necessary.</p>
"
"<p>I'm trying to implement a language (or family of languages) whose grammar can be changed dynamically. I have found no examples that serve as study cases.</p>

<p>Can you give me some reference to any that are actually used in the real world (even from the academic world)?</p>

<p>Does it make sense to implement a Domain-Specific Languages with a dynamic grammar? </p>
","2988","","<p>The most famous current language that has a dynamic syntax is <a href=""http://Perl6.Org/"">Perl6</a>. The most famous example in general is probably <a href=""http://Wiki.Squeak.Org/squeak/989/"">Smalltalk-72</a>.</p>

<p>You might also want to look into <a href=""http://TinLizzie.Org/ometa/"">OMeta</a> and the rest of the <a href=""http://VPRI.Org/html/work/ifnct.htm"">STEPS project</a> from <a href=""http://VPRI.Org/"">Alan Kay's Viewpoints Research Institute</a>, as well as Val Schorre's original <a href=""http://BayFrontTechnologies.Com/metaii.html"">META II</a>.</p>

<p>Also interesting: the <a href=""http://Pi-Programming.Org/"">&pi; programming language</a>.</p>

<p><a href=""http://XLR.SourceForge.Net/"">XL (Extensible Language)</a> also allows for powerful manipulation of the syntax itself.</p>
"
"<p>I was looking through some tab-completions that were automatically set up for my editor, and I found one where y was mapped to:</p>

<pre><code>:yields: arguments
</code></pre>

<p><strong>What</strong> is this syntax called, <strong>when</strong>, <strong>where</strong>, <strong>how</strong> and for <strong>what</strong>  is this used?</p>
","2988","","<p>This is one of the many directives supported by the RDoc documentation tool. <a href=""http://RDoc.RubyForge.Org/RDoc/Parser/Ruby.html"" rel=""nofollow"">It is used to document the arguments that get passed to a block</a>.</p>
"
"<p>Are there any sane analogues to LINQ (.NET) exists for Scala? </p>
","2988","","<p>It depends on what exactly you mean by ""LINQ"". LINQ is many things.</p>

<p>The most obvious answer would be: just use the .NET port of Scala. It gives you full native access to everything in .NET, which obviously includes LINQ.</p>

<p>Unfortunately, the .NET port of Scala was dropped a couple of years ago. Fortunately, it was picked up again a couple of months ago, with official funding directly from Microsoft no less. You can expect a release sometime in the 2011/2012 timeframe.</p>

<p>Anyway, what is LINQ?</p>

<p>A couple of features where added to .NET and specifically C# and VB.NET <em>for</em> LINQ. They are not technically part of LINQ, but are necessary prerequisites: type inference, anonymous (structural) types, lambda expressions, function types (<code>Func&lt;T...&gt;</code> and <code>Action&lt;T...&gt;</code>) and expression trees. All of these have been in Scala for a long time, most have been there forever.</p>

<p>Also not directly part of LINQ, but in C#, LINQ query expressions can be used to generate XML, to emulate VB.NET's XML literals. Scala has XML literals, like VB.NET.</p>

<p>More specifically, LINQ is</p>

<ul>
<li>a specification for a set of standard query operators</li>
<li>a set of implementations for those operators (i.e. <code>IQueryable</code>, LINQ-to-XML, LINQ-to-SQL, LINQ-to-Objects)</li>
<li>a built-in embedded syntax for LINQ query comprehensions</li>
<li>a monad</li>
</ul>

<p>In Scala, like in pretty much any other functional language (and in fact also pretty much any other object-oriented language, too), the query operators are simply part of the standard collections API. In .NET, they have a little bit weird names, whereas in Scala, they have the same standard names they have in other languages: <code>Select</code> is <code>map</code>, <code>Aggregate</code> is <code>reduce</code> (or <code>fold</code>), <code>SelectMany</code> is <code>flatMap</code>, <code>Where</code> is <code>filter</code> or <code>withFilter</code>, <code>orderBy</code> is <code>sort</code> or <code>sortBy</code> or <code>sortWith</code>, and there are <code>zip</code>, <code>take</code> and <code>takeWhile</code> and so on. So, that takes care of both the specification and the LINQ-to-Objects implementation. Scala's XML libraries also implement the collections APIs, which takes care of LINQ-to-XML.</p>

<p>SQL APIs are not built into Scala, but there are third-party APIs which implement the collection API.</p>

<p>Scala also has specialized syntax for those APIs, but unlike Haskell, which tries to make them look like imperative C blocks and C#, which tries to make them look like SQL queries, Scala tries to make them look like <code>for</code> loops. They are called <em><code>for</code> comprehensions</em> and are the equivalent to C#'s query comprehensions and Haskell's monad comprehensions. (They also replace C#'s <code>foreach</code> and generators (<code>yield return</code>)).</p>

<p>But if you <em>really</em> want to know whether or not there are analogues for LINQ in Scala, you will first have to specificy what exactly you mean by ""LINQ"". (And of course, if you want to know whether they are ""sane"", you will have to define that, too.)</p>
"
"<p>In Ruby 1.9 (YARV) you can get a count of all currently allocated objects like so:</p>

<pre><code>ObjectSpace.count_objects
</code></pre>

<p>which returns a hash like</p>

<pre><code>{:TOTAL=&gt;1226560, :FREE=&gt;244204, :T_OBJECT=&gt;26141, :T_CLASS=&gt;9819, :T_MODULE=&gt;1420, :T_FLOAT=&gt;287,
 :T_STRING=&gt;260476, :T_REGEXP=&gt;4081, :T_ARRAY=&gt;72269, :T_HASH=&gt;14923, :T_STRUCT=&gt;4601, :T_BIGNUM=&gt;7,
 :T_FILE=&gt;16, :T_DATA=&gt;54553, :T_MATCH=&gt;5, :T_COMPLEX=&gt;1, :T_RATIONAL=&gt;15, :T_NODE=&gt;524818, 
 :T_ICLASS=&gt;8924}
</code></pre>

<p>What is the meaning of these hash keys?  Some like T_STRING and T_FILE are obvious.  I'm particularly curious about :FREE, :T_ICLASS, :T_DATA, and :T_NODE.</p>
","2988","","<p>Just a guess: I assume <code>:T_ICLASS</code> counts <em>include classes</em> and <code>:T_NODE</code> could maybe stand for <em>AST nodes</em>.</p>

<p>Here's a full list (unfortunately without comments):</p>

<pre><code>#define T_NONE   RUBY_T_NONE
#define T_NIL    RUBY_T_NIL
#define T_OBJECT RUBY_T_OBJECT
#define T_CLASS  RUBY_T_CLASS
#define T_ICLASS RUBY_T_ICLASS
#define T_MODULE RUBY_T_MODULE
#define T_FLOAT  RUBY_T_FLOAT
#define T_STRING RUBY_T_STRING
#define T_REGEXP RUBY_T_REGEXP
#define T_ARRAY  RUBY_T_ARRAY
#define T_HASH   RUBY_T_HASH
#define T_STRUCT RUBY_T_STRUCT
#define T_BIGNUM RUBY_T_BIGNUM
#define T_FILE   RUBY_T_FILE
#define T_FIXNUM RUBY_T_FIXNUM
#define T_TRUE   RUBY_T_TRUE
#define T_FALSE  RUBY_T_FALSE
#define T_DATA   RUBY_T_DATA
#define T_MATCH  RUBY_T_MATCH
#define T_SYMBOL RUBY_T_SYMBOL
#define T_RATIONAL RUBY_T_RATIONAL
#define T_COMPLEX RUBY_T_COMPLEX
#define T_UNDEF  RUBY_T_UNDEF
#define T_NODE   RUBY_T_NODE
#define T_ZOMBIE RUBY_T_ZOMBIE
#define T_MASK   RUBY_T_MASK
</code></pre>

<p>The <code>RUBY_T_xyz</code> enum is defined like this:</p>

<pre><code>enum ruby_value_type {
    RUBY_T_NONE   = 0x00,

    RUBY_T_OBJECT = 0x01,
    RUBY_T_CLASS  = 0x02,
    RUBY_T_MODULE = 0x03,
    RUBY_T_FLOAT  = 0x04,
    RUBY_T_STRING = 0x05,
    RUBY_T_REGEXP = 0x06,
    RUBY_T_ARRAY  = 0x07,
    RUBY_T_HASH   = 0x08,
    RUBY_T_STRUCT = 0x09,
    RUBY_T_BIGNUM = 0x0a,
    RUBY_T_FILE   = 0x0b,
    RUBY_T_DATA   = 0x0c,
    RUBY_T_MATCH  = 0x0d,
    RUBY_T_COMPLEX  = 0x0e,
    RUBY_T_RATIONAL = 0x0f,

    RUBY_T_NIL    = 0x11,
    RUBY_T_TRUE   = 0x12,
    RUBY_T_FALSE  = 0x13,
    RUBY_T_SYMBOL = 0x14,
    RUBY_T_FIXNUM = 0x15,

    RUBY_T_UNDEF  = 0x1b,
    RUBY_T_NODE   = 0x1c,
    RUBY_T_ICLASS = 0x1d,
    RUBY_T_ZOMBIE = 0x1e,

    RUBY_T_MASK   = 0x1f
};
</code></pre>

<p>I think most of those are rather obvious. The only ones I can't figure out are <code>T_DATA</code> (see @banister's comment), <code>T_ZOMBIE</code> and <code>T_MASK</code>.</p>

<p>BTW: Note that these are <em>not</em> part of Ruby 1.9. They are part of YARV. They might be totally different on other implementations of Ruby 1.9 or even not exist <em>at all</em>. The documentation clearly states:</p>

<blockquote>
  <p>The contents of the returned hash is implementation defined. It may be changed in future.</p>
</blockquote>

<p>In fact, it isn't even guaranteed that the method itself exists:</p>

<blockquote>
  <p>This method is not expected to work except C Ruby.</p>
</blockquote>

<p>(By which the author presumably means that the method is only guaranteed to work on MRI and YARV.)</p>
"
"<p>I am new to Ruby so forgive me if the question is inconsistent. Can I iterate over class members like through array in Ruby? How do I achieve this?</p>
","2988","","<p>You can get a list of all constants defined in a module using <code>Module#constants</code>. Example:</p>

<pre><code>Object.constants.sort
# =&gt; [:ARGF, :ARGV, :ArgumentError, :Array, :BasicObject, :Bignum, ... ]
</code></pre>

<p>For methods, you can call one of the various <code>Module#methods</code> methods:</p>

<pre><code>Object.methods.sort
# =&gt;  [:!, :!=, :!~, :&lt;, :&lt;=, :&lt;=&gt;, :==, :===, :=~, :&gt;, :&gt;=, :__id__, ... ]
</code></pre>

<p>You can get a list of all the various <code>methods</code> methods using reflection itself (yay meta):</p>

<pre><code>Module.methods.sort.grep /methods/
# =&gt; [:instance_methods, :methods, :private_instance_methods, :private_methods, 
# =&gt;  :protected_instance_methods, :protected_methods, :public_instance_methods, 
# =&gt;  :public_methods, :singleton_methods]
</code></pre>

<p>It is impossible to get a list of the instance variables from a module for the simple reason that modules don't <em>know</em> about the instance variables, since unlike Smalltalk or Java, the instance variables aren't fixed by the class, they are simply dynamically added to the object as needed.</p>
"
"<p>Ruby newbie here. I'm trying to use the Easyjour module ( <a href=""http://easyjour.rubyforge.org/"" rel=""nofollow"">http://easyjour.rubyforge.org/</a> ) from irb. After a <code>gem install easyjour</code> this is what I get:</p>

<pre><code>irb(main):002:0&gt; service = Easyjour.serve(""files"", 'http', 3000)
NameError: uninitialized constant Easyjour
</code></pre>

<p>What am I missing here? Do I need to import the module first somehow?</p>
","2988","","<p>You need to first load the <code>easyjour</code> library, before you can use any code from it:</p>

<pre><code>require 'easyjour'
</code></pre>
"
"<p>I'm trying to use the difference method (array1 - array2), and it isn't working as expected.</p>

<p>My unit test: </p>

<pre><code>a = DeepsEdge.new(Set[1,2])
b = DeepsEdge.new(Set[3,4])
c = DeepsEdge.new(Set[3,4])
assert a != b, ""these are equal and should not be""
assert_equal c, b
assert_not_equal a, b
assert_not_same c, b
x = [a,b]
y = [c]
assert_equal x, [a,c]
assert_equal y, [b]
assert b.eql?(c), 'b not eql? to c' #tests up to and including this line pass
assert_equal x-y, [a] #does not pass  
</code></pre>

<p>I'm not sure what is going on here. The class DeepsEdge includes comparable. I have overloaded &lt;=> and eql?. How can I get x-y to return [a] rather than [a,c]?</p>
","2988","","<p>My guess is that while you overrode <code>eql?</code>, you forgot to override <code>hash</code>.</p>
"
"<p>Sometimes I need such method, which could change class of its own object. There are <code>String#delete!</code>, <code>#downcase!</code>, <code>#encode!</code>, <code>#gsub!</code>, <code>#strip!</code>, <code>#slice!</code>, etc. They are all trying to change string, but resulting class is anyway still <code>String</code>. And I want a method, which can convert <code>String</code> to <code>Array</code>.
Some way to make this:</p>

<pre><code>irb(main):082:0&gt; str = ""qwerty""
=&gt; ""qwerty""
irb(main):083:0&gt; str.split! ""e""
=&gt; [""qw"", ""rty""]
irb(main):084:0&gt; str
=&gt; [""qw"", ""rty""]
</code></pre>

<p>Is it possible? Maybe some cool japan kung-fu or ugly bicycles — I would like to see any solution.</p>
","2988","","<p>Nope, not possible. Objects can't change their classes in Ruby.</p>

<p>In Smalltalk, for example, you could use <code>become:</code>:</p>

<pre><code>becomeSubStrings: aString
    self become: (self subStrings: aString).
</code></pre>

<p>If you call it like this:</p>

<pre><code>s := 'qwerty'.
s becomeSubStrings: 'e'.
</code></pre>

<p>Now, <code>s</code> is an array:</p>

<pre><code>Transcript show: s printString.
</code></pre>

<p>The result is:</p>

<pre><code>#('qw' 'rty')
</code></pre>

<p>Technically, <code>become:</code> doesn't change the class of the object, rather it lets one object become another object. In this case, we let <code>self</code> become the result of <code>self subStrings:</code>, which splits the string into an array of substrings. The result is the same: the original string receiver is now an array.</p>
"
"<p>Say I have a file named test1.rb with the following code:</p>

<pre><code>my_array = [1, 2, 3, 4 5]
</code></pre>

<p>Then I run irb and get an irb prompt and run ""require 'test1'. At this point I am expecting to be able to access my_array. But if I try to do something like...</p>

<pre><code>puts my_array
</code></pre>

<p>irb tells me ""my_array"" is undefined. Is there a way to access ""my_array""</p>
","2988","","<p>No, there isn't. Local variables are always local to the scope they are defined in. That's why they are called <em>local variables</em>, after all.</p>
"
"<p>I have a loop where i execute a series of command on a remote machine:</p>

<pre><code>
   ssh.exec('cd /vmfs/volumes/4c6d95d2-b1923d5d-4dd7-f4ce46baaadc/ghettoVCB;  ./ghettoVCB.sh -f vms_to_backup -d dryrun') do|ch, stream, data|
                                    if #{stream} =~ /vmupgrade/
                                    puts value_hosts + "" is "" + data
                                    puts #{stream}
                                    puts data
                                    end
                            end
</code></pre>

<p>i want to access #{stream} and data outside the do-end loop</p>

<p>I would appreciate any help.
Thanks,</p>

<p>Hi Jörg,</p>

<p>I implemented your suggestions, but now i am getting error:</p>

<pre><code>
WrapperghettoVCB.rb:49: odd number list for Hash
      communicator = {ch: ch, stream: stream, data: data}
                         ^
WrapperghettoVCB.rb:49: syntax error, unexpected ':', expecting '}'
      communicator = {ch: ch, stream: stream, data: data}
                         ^
WrapperghettoVCB.rb:49: syntax error, unexpected ':', expecting '='
      communicator = {ch: ch, stream: stream, data: data}
                                     ^
WrapperghettoVCB.rb:49: syntax error, unexpected ':', expecting '='
      communicator = {ch: ch, stream: stream, data: data}
                                                   ^
WrapperghettoVCB.rb:76: syntax error, unexpected kELSE, expecting kEND
WrapperghettoVCB.rb:80: syntax error, unexpected '}', expecting kEND
</code></pre>
","2988","","<p>You can't. Local variables are local to their scope. That's why they are called <em>local variables</em>.</p>

<p>You could, however, use a variable from an outer scope:</p>

<pre><code>communicator = nil

ssh.exec('...') do |ch, stream, data|
  break unless stream =~ /vmupgrade/
  puts ""#{value_hosts} is #{data}"", stream, data
  communicator = {ch: ch, stream: stream, data: data}
end

puts communicator
</code></pre>

<p>BTW: there were several bugs in your code, that would have prevented it from working <em>anyway</em> regardless of your problem with variable scoping, because you used wrong syntax for dereferencing local variables: the syntax for dereferencing a variable is simply the name of the variable, e.g. <code>foo</code>, and not <code>#{foo}</code> (that's simply a syntax error).</p>

<p>Also, there are some other improvements:</p>

<ul>
<li><em>formatting</em>: the standard for indentation in Ruby is 2 spaces, not 26</li>
<li><em>formatting</em>: the standard for indentation in Ruby is 2 spaces, not 0</li>
<li><em>formatting</em>: usually, the block arguments are separated from the <code>do</code> keyword with a space</li>
<li><em>guard clause</em>: if you wrap the <em>entire</em> body of a block or method in a conditional, you can just replace that with a guard a the beginning of the block that skips the whole block if the condition is true</li>
<li><em>string interpolation</em>: adding strings together with <code>+</code> is unusual in Ruby; <em>if</em> you need to concatenate strings, you usually do it with <code>&lt;&lt;</code>, but more often than not, string interpolation is preferred</li>
<li><em>multiple arguments to <code>puts</code></em>: if you pass multiple arguments to <code>puts</code>, it will print all of them on a separate line, you don't need to call it multiple times</li>
</ul>
"
"<p>I have a folder full of ruby files, and when I try and require one file in another that is in the same directory using <code>require 'file'</code> I get a <code>LoadError</code> but when I use <code>require './file'</code> everything works fine. Can somebody explain to me why this happens and if there is any way I can require a file without adding a <code>./</code> onto the file?</p>

<p>(Picture of directory):
<img src=""http://i.stack.imgur.com/sTYHL.png"" alt=""alt text""></p>
","2988","","<p>If you want to <code>require</code> a file not from the system <code>$LOAD_PATH</code> but rather relative to the directory of the file you are <code>require</code>ing <em>from</em>, you should use <a href=""http://RubyDoc.Info/docs/ruby-core/1.9.2/Kernel%3arequire_relative""><code>require_relative</code></a>. (Which, as you can see, isn't exactly <em>extensively</em> documented.)</p>
"
"<p><a href=""http://services.tvrage.com/tools/quickinfo.php?show=Chuck"" rel=""nofollow"">http://services.tvrage.com/tools/quickinfo.php?show=Chuck</a></p>

<p>I'm trying to parse that info, for example, get the Airtime,</p>

<blockquote>
  <p>Airtime@Monday at 08:00 pm</p>
</blockquote>

<p>I want to get what's <strong>after</strong> ""Airtime@"" till the end of the line, to just come out with ""Monday at 08:00 pm"". How can I do this?</p>
","2988","","<p>Is there any reason you don't use the XML feeds?</p>

<pre><code>require 'open-uri'
require 'nokogiri'

d = Nokogiri.XML(open 'http://services.tvrage.com/feeds/showinfo.php?sid=15614')

name = d.search('//showname').text               # =&gt; 'Chuck'
day  = d.search('//airday').text                 # =&gt; 'Monday'
time = d.search('//airtime').text                # =&gt; '20:00'
net  = d.search('//network[@country=""US""]').text # =&gt; 'NBC'

puts ""#{name} airs #{day}s at #{time} on #{net}.""
# Chuck airs Mondays at 20:00 on NBC.
</code></pre>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/919690/jar-executable-that-cannot-be-decompiled"">Jar executable that cannot be decompiled</a>  </p>
</blockquote>



<p>How can I make ""undecompilable"" source in java? I have a microedition app that has code that I need to hide
Is it possible?</p>

<p>Thanks in advance</p>
","2988","","<p>If you want your users to actually, you know, <em>use</em> the program, they need to be able to <em>run</em> the program. In order to be able to run the program, the CPU must be able to <em>understand</em> the program. CPUs are much stupider than humans, so this means that humans can understand the program, too.</p>

<p>If you obfuscate your program in such a way that it cannot be understood by humans, this also means that it cannot be executed.</p>

<p>If you don't want people to get access to your code, there is only one way: don't give it to them. Put it on a server and let your users connect to it via the network.</p>

<p>But all of that is completely unnecessary, since your code is automatically protected by copyright law anyway, which is much more powerful than any obfuscation.</p>
"
"<p>I have a Ruby program that takes about 4 minutes to complete task and I'd like to get it down to under 1 minute.</p>

<p>I tried ruby-prof from gem but enabling it increases running times to ~30 minutes, and doesn't even seem to preserve monotonicity particularly well (some changes reliably improve performance-with-profiler and as reliably deteriorate performance-without-profiler). This task also cannot really be broken down into parts that can be meaningfully profiled independently.</p>

<p>What's the current best way to profile Ruby code with lowest overhead?</p>

<p>I use OSX, but if for any reason profiler requires another OS, I might reboot.</p>

<p>EDIT: <code>perftools.rb</code> has much lower overhead, but results look rather dubious to be honest, way outside any reasonable sampling error - at the very least it must be messing with GC or i/o buffering or something like that, causing a lot of silly misattributions. It still beats ruby-prof.</p>

<p>I'll keep the question open in case someone knows anything better than that.</p>
","2988","","<p>I don't think you can do any better with either MRI or YARV.</p>

<p>Rubinius, however, has a built-in profiler (just call with <code>-Xprofile</code>) with much less overhead.</p>

<p>And with JRuby, you get the whole array of Java tooling, which includes some of the best profilers ever created. Even without specific support for JRuby, those tools can be quite helpful. Oracle JDK has this extremely cool <em>VisualVM</em> tool, which lets you visualize all sorts of stuff about your program (and AFAIK there's even a JRuby plugin for it). Oracle JRockit also has a great profiler. The Azul JVM is rumored to have an absolutely mindblowingly awesome profiler. I think J9 has a great one, too. And of course, there's <a href=""http://YourKit.Com/"" rel=""nofollow"">YourKit</a>.</p>

<p>Charles Oliver Nutter and other members of the JRuby community have recently written a series of articles on comprehending runtime behavior of Ruby code using JRuby. Mostly, those articles were written as a reaction to the <a href=""http://MemProf.Com/"" rel=""nofollow"">memprof library for MRI</a> and thus they tend to focus on memory profiling, but there is also some stuff about call profiling in there.</p>

<p>AFAIK, one of the goals for MacRuby was to be able to use XCode's runtime comprehension stuff (Instruments and Co.) for Ruby, but that's more of a long-term goal, I don't know if this is currently implemented.</p>

<p>Here's a little example from Rubinius:</p>

<pre><code>rbx -Xprofile -e'
  Hash.new {|fibs, n|
    fibs[n] = if n &lt; 2 then n else fibs[n-1] + fibs[n-2] end
  }[100]
'
</code></pre>

<p>Which prints:</p>

<pre><code>Total running time: 0.009895000000000001s

  %   cumulative   self                self     total
 time   seconds   seconds      calls  ms/call  ms/call  name
------------------------------------------------------------
   7.59    0.00      0.00        234     0.00     0.01  Hash#find_entry
   5.86    0.00      0.00        419     0.00     0.00  Hash#key_index
   5.49    0.00      0.00        275     0.00     0.00  Hash::Entry#match?
   4.97    0.01      0.00        234     0.00     0.02  Hash#[]
</code></pre>

<p>As you can see, one interesting property of the Rubinius profiler is that, since it can profile arbitrary Ruby code, and Rubinius <em>itself</em> is mostly Ruby code, it can profile <em>deeply</em> into the system itself.</p>
"
"<p>Looking for a Ruby differencing engine.  So you can do some of the same things meld viewer does.</p>

<p>For example you have this first set of code per line:</p>

<ol>
<li>String1</li>
<li>String2</li>
<li>String3</li>
</ol>

<p>2nd set:</p>

<ol>
<li>String1</li>
<li>String3</li>
<li>String4</li>
</ol>

<p>The diff would come out to show lines 2 and 3 are different.</p>

<p>I already am using this one: <a href=""http://github.com/pvande/differ"" rel=""nofollow"">http://github.com/pvande/differ</a>, but it's definitely not perfect but pretty good.  I would like to add on to it, however I'm trying to find some knowledge on another one before going further with this differ.</p>
","2988","","<p>The ""standard"" solution is Austin Ziegler's <code>diff-lcs</code> library, which&nbsp;&ndash; as the name implies&nbsp;&ndash; implements a longest common subsequence algorithm. More precisely, the LCS algorithm by McIlroy and Hunt. This library is a port of Mario I. Wolczko's Smalltalk implementation of the McIlroy-Hunt algorithm from 1993 as well es the <code>Algorithm::Diff</code> Perl library.</p>

<p>Unfortunately, there hasn't been a release since 2004. Which wouldn't be that bad, since the McIlroy-Hunt algorithm hasn't changed since 1976, but <code>String</code> handling in Ruby has changed significantly in Ruby 1.9.</p>
"
"<p>The meaning of most nodes from <a href=""http://www.igvita.com/2008/12/11/ruby-ast-for-fun-and-profit/"" rel=""nofollow"">mri's syntax tree</a> can be easily infered. However the list is quite long (source: <a href=""http://github.com/seattlerb/parsetree/blob/master/bin/parse_tree_abc"" rel=""nofollow"">bin/parse_tree_abc</a>):</p>

<pre><code>:attrasgn, :attrset, :dasgn_curr, :iasgn, :lasgn, :masgn,
:and, :case, :else, :if, :iter, :or, :rescue, :until, :when, :while,
:call, :fcall, :super, :vcall, :yield,
:args, :argscat, :array, :begin, :block, :block_arg, :block_pass, :bool,
:cfunc, :colon2, :const, :cvar, :defined, :defn, :dregx, :dstr, :dvar,
:dxstr, :ensure, :false, :fbody, :gvar, :hash, :ivar, :lit, :long, :lvar,
:match2, :match3, :nil, :not, :nth_ref, :return, :scope, :self, :str,
:splat, :to_ary, :true, :unknown, :value, :void, :zarray, :zarray,
:zclass, :zsuper
</code></pre>

<p>Since Python's AST manipulation is a builtin library, its <a href=""http://docs.python.org/library/compiler.html"" rel=""nofollow"">documentation is far better</a>. Is there a place where all nodes from parse tree's syntax tree is documented?</p>
","2988","","<p>There is no such thing as a Ruby AST, therefore there is no documentation for it. Every implementation has its own AST, which might or might not be documented.</p>

<p>Besides, what you are talking about is not the abstract syntax tree but the parse tree (aka concrete syntax tree), which is, by definition, closely tied to the specific parser used to construct it. Different parsers might construct very different parse trees for the same code and the same syntax.</p>

<p>What you show there looks like the parse tree from either MRI or YARV, both of which are notoriously badly documented.</p>
"
"<p>Let us say there are two gems</p>

<pre><code>A ( depends on gem C version 2)
B ( depends on gem C version 1)
</code></pre>

<p>My rails application requires gem A, and B.</p>

<p>How do you handle the collision of two versions of the gem C while loading A and B.</p>
","2988","","<p>You don't. RubyGems can <em>install</em> multiple versions of the same Gem, but it only can ever activate <em>one</em>. That's one of the reasons why Bundler was created: it will at least check for such an incompatibility <em>before</em> you run the app.</p>
"
"<pre><code>&lt;%if @item.rigged %&gt;Yes&lt;%else%&gt;No&lt;%end%&gt;
</code></pre>

<p>I was thinking of something like this?</p>

<pre><code>if @item.rigged ? ""Yes"" : ""No"" 
</code></pre>

<p>But it dosen't work. Ruby has the ||= but I""m not even sure how to use that thing. </p>
","2988","","<p>In Ruby, the condition and the <code>then</code> part of an <code>if</code> expression must be separated by either an expression separator (i.e. <code>;</code> or a newline) or the <code>then</code> keyword.</p>

<p>So, all of these would work:</p>

<pre><code>if @item.rigged then 'Yes' else 'No' end

if @item.rigged; 'Yes' else 'No' end

if @item.rigged
  'Yes' else 'No' end
</code></pre>

<p>There is also a conditional operator in Ruby, but that is completely unnecessary. The conditional operator is needed in C, because it is an operator: in C, <code>if</code> is a statement and thus cannot return a value, so if you want to return a value, you need to use something which <em>can</em> return a value. And the only things in C that can return a value are functions and operators, and since it is impossible to make <code>if</code> a function in C, you need an operator.</p>

<p>In Ruby, however, <code>if</code> is an expression. In fact, <em>everything</em> is an expression in Ruby, so it <em>already</em> can return a value. There is no need for the conditional operator to even <em>exist</em>, let alone use it.</p>

<p>BTW: it is customary to name methods which are used to ask a question with a question mark at the end, like this:</p>

<pre><code>@item.rigged?
</code></pre>

<p>This shows another problem with using the conditional operator in Ruby:</p>

<pre><code>@item.rigged? ? 'Yes' : 'No'
</code></pre>

<p>It's simply hard to read with the multiple question marks that close to each other.</p>
"
"<p>I'm looking for examples of functional code in ruby. Maybe you know some gems, where I can find such a code?</p>
","2988","","<p>A couple of months ago, I wondered whether it was possible to make a mixin that behaves <em>exactly</em> like <code>Enumerable</code>, but is based on <em>folding</em> instead of <em>enumerating</em>. Or more precisely, I already <em>knew</em> that it was possible to do this, since <em>fold</em> is a generic iteration operation that is equal in expressive power to <em>foreach</em>, but I wanted to know what it would look like and how hard it would be.</p>

<p>I got bored after I had implemented most methods up to the letter <em>g</em>, so it's incomplete. Also, the version I show here is simplified, since making it behave <em>exactly</em> like <code>Enumerable</code> is a PITA in Ruby. (For example, there are overloaded methods in there, but Ruby doesn't support overloading. This isn't a problem for most Ruby implementations, because they implement <code>Enumerable</code> in Java or C# or other languages that <em>do</em> support overloading, but it is pretty painful when doing it in pure Ruby, so I decided to leave it out.)</p>

<p><code>Enumerable</code> is full of higher-order procedures, and of course <em>fold</em> (or <code>reduce</code> / <code>inject</code> as it is called in Ruby) is <em>itself</em> a higher-order procedure, so this code is full of them.</p>

<pre><code>module Enumerable
  def all?
    reduce(true) {|res, el| res &amp;&amp; yield(el) }
  end

  def any?
    reduce(false) {|res, el| res || yield(el) }
  end

  def collect
    reduce([]) {|res, el| res + yield(el) }
  end
  alias_method :map, :collect

  def count
    reduce(0) {|res, el| res + 1 if yield el }
  end

  def detect
    reduce(nil) {|res, el| if yield el then el end unless res }
  end
  alias_method :find, :detect

  def drop(n=1)
    reduce([]) {|res, el| res.tap {|res| res + el unless n -= 1 &gt;= 0 }}
  end

  def each
    reduce(nil) {|_, el| yield el }
  end

  def each_with_index
    reduce(-1) {|i, el| (i+1).tap {|i| yield el, i }}
  end

  def find_all
    reduce([]) {|res, el| res.tap {|res| res + el if yield el }}
  end
  alias_method :select, :find_all

  def grep(pattern)
    reduce([]) {|res, el| res.tap {|res| res + yield(el) if pattern === el }}
  end

  def group_by
    reduce(Hash.new {|hsh, key| hsh[key] = [] }) {|res, el| res.tap {|res|
        res[yield el] &lt;&lt; el
    }}
  end

  def include?(obj)
    reduce(false) {|res, el| break true if res || el == obj }
  end

  def reject
    reduce([]) {|res, el| res.tap {|res| res + el unless yield el }}
  end
end
</code></pre>

<p>You will notice that I use side-effects in some places. I could have written it without side-effects instead, but it would have been much more complicated. And the problem is that there is no way for me to ensure that the <code>reduce</code> method, which is provided by the <em>client</em> of the mixin, or any of the methods from the core library, don't have side-effects.</p>

<p>Another nice example is the <a href=""http://AppDesign.Com/products/open-source-projects/prelude-library/"" rel=""nofollow"">Prelude</a> library for Ruby, which is an implementation of some parts of the Haskell Prelude (Haskell's equivalent to Ruby's core library) in Ruby.</p>
"
"<p>I've never heard anyone speak of CORBA in anything but derisive terms which is odd considering that 10+ years ago it was the bee's knees.  Why did CORBA fall from grace?  Was it purely that the implementations were bad or was there something more fundamental?</p>
","2988","","<p>It's not just CORBA, it's RPC in general. This includes stuff like DCOM, Java-RMI, .NET Remoting and all the others as well.</p>

<p>The problem is basically that distributed computing is <em>fundamentally</em> different than local computing. RPC tries to pretend these differences don't exist, and makes remote calls look just like local calls. But, in order to build a good distributed system, you need to deal with those differences.</p>

<p>Bill Joy, Tom Lyon, L. Peter Deutsch and James Gosling identified 8 <em>Fallacies of Distributed Computing</em>, i.e. things that newcomers to distributed programming believe to be true, but that are actually false, which usually results in the failure of the project or a significant increase in cost and effort. RPC is the perfect embodiment of those fallacies, because it is built on those same wrong assumptions:</p>

<ol>
<li>The network is reliable.</li>
<li>Latency is zero.</li>
<li>Bandwidth is infinite.</li>
<li>The network is secure.</li>
<li>Topology doesn't change.</li>
<li>There is one administrator.</li>
<li>Transport cost is zero.</li>
<li>The network is homogeneous.</li>
</ol>

<p>All of this is true for local computing.</p>

<p>Take reliability, for example: if you call a method locally, then the call itself <em>always</em> suceeds. Sure, the called method itself may have an error, but the actual <em>calling</em> of the method will always succed. And the result will always be returned, or, if the method fails, an error will be signaled.</p>

<p>In a distributed system, this is not true: the act of <em>calling</em> the method <em>itself</em> may fail. I.e. from your end it looks like you called the method, but the call actually got lost on the network and never reached the method. Or, the method successfully received the call and performed the operation, but the result got lost on the way back to you. Or the method failed, but the error got lost.</p>

<p>Similar with latency: locally, calling a method is essentially free. The method <em>itself</em> may take an arbitrary amount of time to <em>compute</em> the answer, but the <em>call</em> is free. Over a network, a call may take hundreds of milliseconds.</p>

<p>That's why pretty much all RPC projects, including CORBA failed.</p>

<p>Note that the other way around works just fine: if you just pretend that <em>all</em> calls are <em>remote</em> calls, then the worst thing that can happen is that you lose a little bit of performance and your app contains some error handling code that will never be used. That's how Erlang works, for example.</p>

<p>In Erlang, processes <em>always</em> have separate heaps and separate garbage collectors, just like if they were running on different machines on different continents, even if those processes run on the same VM on the same CPU in the same address space. If you pass data from one process to another, that data is <em>always</em> copied, just like it would have to be, if the processes were on different machines. Calls are <em>always</em> made as asynchronous message sends.</p>

<p>So, making local and remote calls look <em>the same</em> is not the problem. Making them look like <em>local</em> calls is.</p>

<p>In CORBA, the problem is actually a bit more convoluted than that. They actually <em>did</em> make local calls look like remote calls, but since CORBA was designed by committee, remote calls were <em>incredibly</em> complex, because they had to be able to handle some incredibly absurd requirements. And that complexity was forced upon <em>everybody</em>, even for local calls.</p>

<p>Again, comparing to Erlang, the complexity is much lower. In Erlang, sending a message to a process is not more complex than calling a method in Java. The interface is basically the same, it's only the expectations that are different: method calls in Java are expected to be instantaneous and synchronous, in Erlang, message sends are expected to be asynchronous and have visible latency. But actually <em>using</em> them is not more involved than a simple local procedure call.</p>

<p>Another difference is that Erlang distinguishes between function calls, which can only happen inside a process and thus are always local, and message sends, which happen between processes and are assumed to be always remote, even if they aren't. In CORBA, all method calls are assumed to be remote.</p>
"
"<p>I have a Ruby on Rails project with what seems to be a memory leak. It keeps using more and more memory until it crashes. Dumping the amount of objects per class using ObjectSpace I've found this:</p>

<pre><code>Name                                                              Count
-----------------------------------------------------------------------
String                                                           649476
Hash                                                              59695
Array                                                             39407
ActiveSupport::Multibyte::Codepoint                               19337
FileNode                                                          17134
Time                                                               3391
Regexp                                                             1944
ActionController::Routing::DividerSegment                          1743
Proc                                                               1597
Gem::Version                                                       1545
Class                                                              1503
Gem::Requirement                                                   1479
ActiveRecord::DynamicFinderMatch                                   1021
</code></pre>

<p>I believe FileNode is the problem. It's a model. Any ideas how to find where the references to the 17k FileNodes are being kept?</p>

<p>This is using Ruby 1.8.6 and Rails 2.2.0. Upgrading is not an option unfortunately.</p>
","2988","","<p><a href=""http://Blog.Headius.Com/"">Charles Oliver ""Headius"" Nutter</a> has recently written a series of blog posts on debugging memory leaks in Ruby using JVM tools:</p>

<ul>
<li><a href=""http://Blog.Headius.Com/2010/07/browsing-memory-jruby-way.html"">Browsing Memory the JRuby Way</a></li>
<li><a href=""http://Blog.Headius.Com/2010/07/finding-leaks-in-ruby-apps-with-eclipse.html"">Finding Leaks in Ruby Apps with Eclipse Memory Analyzer</a></li>
<li><a href=""http://Blog.Headius.Com/2010/07/browsing-memory-with-ruby-and-jdi.html"">Browsing Memory with Ruby and Java Debug Interface</a></li>
<li><a href=""http://EngineYard.Com/blog/2010/monitoring-memory-with-jruby-part-1-jhat-and-visualvm/"">Monitoring Memory with JRuby, Part 1: jhat and VisualVM</a></li>
<li><a href=""http://EngineYard.Com/blog/2010/montoring-memory-with-jruby-part-2-eclipse-memory-analyzer/"">Monitoring Memory with JRuby, Part 2: Eclipse Memory Analyzer</a></li>
</ul>

<p>IIRC, there were also a couple of other blog posts on that same topic by other members of the JRuby community around the same time.</p>

<p>Their basic argument (although they are too polite to spell it out that way) is that using anything other than JRuby to debug memory leaks is just plain stupid, simply because JRuby can use Java tools which have more engineering effort put into them than <em>all</em> Ruby profiling tools <em>together</em>. And the Ruby community gets those tools for free, because all the enterprise Java drones are paying for them.</p>
"
"<p>Using irb the mail library worked fine, now I am creating my first ruby script.</p>

<p>I am getting the error:</p>

<pre><code>testmail.rb:3:in `require': no such file to load -- mail (LoadError)
    from testmail.rb:3
</code></pre>

<p>Below is the file testmail.rb:</p>

<pre><code>#!/usr/bin/env ruby

require 'mail'



if __FILE__ == $0

  Mail.defaults do
    retriever_method :pop3, { :address             =&gt; ""mail.blah.com"",
                             :port                =&gt; 995,
                             :user_name           =&gt; 'test@blah.com',
                             :password            =&gt; 'asdfasdf',
                             :enable_ssl          =&gt; false }
    end

  emails = Mail.all

end
</code></pre>
","2988","","<p>How did you install the <code>mail</code> library? Which version of Ruby are you using? Which package did you use to install Ruby?</p>

<p>If you installed <code>mail</code> via RubyGems, for example, and you are using Ruby 1.8, then you have to make sure that the RubyGems library is loaded before you load any Gems. Or more precisely, your administrator should have your environment set up in such a way that RubyGems gets loaded for you.</p>
"
"<p>I have my class</p>

<pre><code>
class A
  def to_s
    'string'
  end
  def inspect
    'string'
  end
end
</code></pre>

<p>and trying to do something like this</p>

<pre><code>
a = A.new
'somestring' + a
</code></pre>

<p>Error is ""in `+': can't convert A into String (TypeError)""</p>

<p>Is there any way to fix it?</p>

<p>P.S. using 'somestring' + a.to_s isn't an option.</p>

<p><strong>Answer found. to_str method needed.</strong></p>
","2988","","<p><code>#to_s</code> is for <em>representing</em> an object as a <code>String</code>. In your case, you need to <em>convert</em> the object to a <code>String</code>, because <code>String#+</code> only deals with <code>String</code>s. In Ruby, type conversions are done with the three letter form of the <code>to_X</code> methods, i.e. <code>to_int</code>, <code>to_ary</code>, <code>to_hash</code> (someone can't count to three ...), <code>to_str</code> and so on.</p>

<p>So, you need to implement <code>to_str</code>, in order to make that work.</p>

<p><em>However</em>, you should <em>only</em> implement <code>to_str</code>, if your object actually <em>is</em> a string! If it's something else, you <em>must not</em> implement <code>to_str</code> and rather have the clients explicitly represent it as a string using <code>to_s</code>.</p>

<p>Basically, implementing <code>to_str</code> in Ruby is like inheriting from <code>String</code> in Java: it means that <code>A</code> IS-A <code>String</code>.</p>

<p>As an example, look at which classes in the Ruby core library <em>actually</em> implement the type conversion methods:</p>

<ul>
<li>the only class that implements <code>to_ary</code>, is <code>Array</code> itself,</li>
<li>the only class that implements <code>to_hash</code>, is <code>Hash</code> itself and</li>
<li>the only class that implements <code>to_str</code>, is <code>String</code> itself.</li>
</ul>

<p>This should show you that implementing <code>to_str</code> is a <em>very</em> serious matter that should not be undertaken lightly.</p>

<p>The only conversion method that does not have only a trivial no-op implementation, is <code>to_int</code>, which is also implemented by <code>Float</code> and <code>Numeric</code>. And actually, I think that is a mistake, since there is an infinite number of <code>Float</code>s which aren't <code>Integer</code>s. And <code>Numeric</code> is a <em>superclass</em> of <code>Integer</code>, so saying that every <code>Numeric</code> IS-A <code>Integer</code> is even more strange.</p>
"
"<p>I am implementing a method that looks up an element in a list. The element should exist in the list. Instead of returning <code>null</code> if the element didn't exist, I would like to throw an <code>Exception</code>, but I'm new to exception handling in Java and I don't know what <code>Exception</code> I should throw in this case.</p>

<p>I think this is a quite general case so I can probably use one <code>Exception</code> that already exist in the Java SE standard library.</p>

<p>What <code>Exception</code> should I throw in this case?</p>
","2988","","<p>Personally, I don't think this deserves an exception. There are infinitely many elements which are not in the list, so the fact that an element can't be found is hardly exceptional, rather it's pretty normal. I would much prefer some sort of <code>Option</code> or <code>Maybe</code> type as the return type.</p>

<p>I have no idea why such a type is not already provided by the JRE (it seems to me a massive oversight), so, unfortunately, you will have to roll your own. However, you can find plenty examples of Java implementations of the <code>Maybe</code> type and even the <code>Maybe</code> monad on the web. It seems to be a pretty common introductory example for teaching generics, for example.</p>
"
"<p>I am currently involved in some interesting programming language research which has, up until now, centred around extending the upcoming Java 7.0 compiler with some very powerful programmer-productivity-based features. The work should be equally applicable to related programming languages such as C#.</p>

<p>I'm currently scoping out the options for prototyping a C# port of the functionality. I would prefer open-source options so that the fruits of this work can be shared with the broadest-possible audience. Thus the Mono C# compiler seems to be the most obvious starting point. I'm an experienced C# developer so writing the code isn't the problem. I'm mainly concerned about extending the compiler in a maintainable and supported fashion. In the Mono FAQ on the subject (<a href=""http://www.mono-project.com/FAQ%3a_Technical"" rel=""nofollow"">link</a>) it is stated that ""Mono has already been used as a foundation for trying out new ideas for the C# language (there are three or four compilers derived from Mono's C# compiler)"". Unfortunately, there are no further pointers than this and, so far, Google searches have not turned anything up.</p>

<p>I'm wondering if anybody out there has any information on this. Do <code>mcs</code>/<code>gmcs</code>/<code>dmcs</code> have a standard extensibility model? Specifically, I will be performing some interesting transformations on a program's abstract syntax tree. Is there a standard mechanism for inserting functionality into the compiler chain between abstract syntax tree generation and the type checker and then code generation?</p>

<p>Up until now I've written some ad-hoc extensions to the code (primarily in the code generator) but this doesn't seem to be a maintainable solution especially given that I intend to keep my extensions up to date with the Git trunk of Mono as much as possible. Furthermore it would be nice to be able to make updates to my extensions without having to recompile the whole compiler every time I make a change. I would like to be able to wrap all my AST manipulations into a single .NET assembly that could be dynamically loaded by <code>mcs</code>/<code>gmcs</code>/<code>dmcs</code> without having to hack at the core compiler code directly.</p>

<p>Any thoughts or pointers on extending the Mono C# compiler would be gratefully received!</p>

<p>UPDATES (23 October 2010)</p>

<p>In response to the responses to my question, I decided that I would start working on a branch of Mono in order to create a simple extensibility model for the compiler. It's in its very early stages, but here it is at GitHub:</p>

<p><a href=""http://github.com/rcook/mono-extensibility"" rel=""nofollow"">http://github.com/rcook/mono-extensibility</a></p>

<p>And the main commit is: <a href=""http://github.com/rcook/mono-extensibility/commit/a0456c852e48f6822e6bdad7b4d12a357ade0d01"" rel=""nofollow"">http://github.com/rcook/mono-extensibility/commit/a0456c852e48f6822e6bdad7b4d12a357ade0d01</a></p>

<p>If anybody would be interested in collaborating on this project, please let me know!</p>
","2988","","<p>Unfortunately, I cannot adequately answer your question, but if you look at the examples of C# extensions on Miguel de Icaza's blog, you will notice that all of them take the form of patches to the compiler, not plugins or extensions. This seems to indicate that there is no such API.</p>

<p>Note that all of these examples are of much smaller scope than what you seem to be working on:</p>

<ul>
<li><a href=""http://themonkeysgrinder.blogspot.com/2009/07/cer.html"" rel=""nofollow"">Parameterless Anonymous Methods</a> (this post actually explicitly mentions concerns about the maintainability of such language extensions)</li>
<li><a href=""http://tirania.org/blog/archive/2009/Dec-20.html"" rel=""nofollow"">String Interpolation</a></li>
<li><a href=""http://tirania.org/blog/archive/2009/Dec-23.html"" rel=""nofollow"">Destructuring Assignment for Tuples</a></li>
<li><a href=""http://evain.net/blog/articles/2010/08/09/a-river-of-t"" rel=""nofollow"">Syntactic Sugar for <code>IEnumerable</code></a></li>
</ul>

<p>These are mostly localized syntactic sugar, with no ""interesting"" behavior. The fourth patch, for example, implements Cω's syntactic sugar for <code>IEnumerable</code>s, but without any of Cω's semantics that make this syntax interesting. If you look at the patch you can see that it literally does stupid syntactical expansion of <code>~T</code> &rarr; <code>IEnumerable&lt;T&gt;</code>, as opposed to Cω, where member access and method invocation are properly lifted over streams.</p>

<p><a href=""https://connect.microsoft.com/Phoenix"" rel=""nofollow"">Microsoft Research's Phoenix Compiler Pipeline</a> was once explicitly touted as the solution to such extensibility problems, but it seems that it now focuses mostly on optimizations and analysis on the IR level in a code generation backend. In fact, I'm not even sure if the project is even still alive.</p>
"
"<p>What are the advantages of <strike>OOP</strike> subtyping over typeclasses, if any? In other words, now that we have typeclasses, is there any reason to still use <strike>OOP</strike> subtyping? </p>

<p>PS: I am a Scala programmer.</p>
","2988","","<p>Personally, I find OOP easier to deal with within the constraints of what it handles well. In other words: in cases where you don’t actually <em>need</em> typeclasses, I find objects easier to understand.</p>

<p>However, this might just be an artifact of the syntactic overhead that the typical typeclass embedding of objects has. If Haskell had syntactic sugar for some common kinds of typeclass patterns, that difference would probably vanish.</p>

<p>What I find more interesting, is the fact that the Haskell community shows that typeclasses are more powerful than objects, since there exists a trivial embedding of objects in typeclasses, but typeclasses can do things objects can’t. The Scala community, however, shows that objects are at least as powerful as typeclasses<sup>1</sup>, since there exists a trivial embedding of typeclasses in objects.</p>

<p>This seems to indicate that the relationship between the two is much more intimate than commonly thought.</p>

<hr>

<p><sup>1</sup> See <a href=""http://ropas.snu.ac.kr/~bruno/papers/TypeClasses.pdf"" rel=""nofollow""><em>Type Classes as Objects and Implicits</em></a> by Bruno C.d.S. Oliveira, Adriaan Moors and Martin Odersky, as well as <a href=""http://lambda-the-ultimate.org/node/4039/"" rel=""nofollow"">the discussion of that paper on <em>Lambda the Ultimate</em></a>, especially this nice summary by Paul Snively (emphasis added):</p>

<blockquote>
  <p>Martin Odersky and team’s design decisions around how to do type classes in a unified OO and FP language continue to bear fascinating fruit. <strong>Implicits look less and less like “poor man’s type classes,” and more and more like an improvement upon type classes</strong>, in my opinion given a quick read of this paper.</p>
</blockquote>
"
"<p>Is it possible to have compiler support to enforce the cleanup of data (XSS encoding)?</p>

<p>This question got me thinking about double encoding and the other times when encoding is needed.  Seems like it would work great for Linq, but possibly I may need this feature in other scenarios as well.</p>

<p><a href=""http://stackoverflow.com/questions/3774776/microsoft-antixss-is-there-a-need-to-decode/3775152#3775152"">http://stackoverflow.com/questions/3774776/microsoft-antixss-is-there-a-need-to-decode/3775152#3775152</a></p>
","2988","","<p>Yes, given a type system than is expressive and powerful enough, this is indeed possible.</p>

<p><a href=""http://impredicative.com/ur/"" rel=""nofollow"">Ur/Web</a>, for example, is a web application framework written in the Ur programming language, in which several interesting properties are guaranteed by the type system:</p>

<ul>
<li>there cannot be dead links (within the application)</li>
<li>it is impossible to generate invalid HTML</li>
<li>it is impossible to have XSS attacks</li>
<li>SQL injection is impossible</li>
<li>form fields always have a corresponding server-side handler</li>
<li>AJAX calls always have a corresponding server-side handler</li>
<li>the types of client-side form fields, server-side handlers and database tables match up</li>
<li>... a lot more ...</li>
</ul>

<p>Adam Chlipala, the author of Ur and Ur/Web gave <a href=""http://confreaks.net/videos/119/"" rel=""nofollow"">a talk about it at the Emerging Languages Camp 2010</a>.</p>

<p>There are also some web frameworks in Haskell, OCaml and Scala that (try to) do (some of) that. Their type systems are powerful enough to guarantee at least some of those properties. There are type-safe embeddings of SQL into Haskell, for example, or an HTML templating language in OCaml that doesn't allow the user to generate invalid HTML.</p>
"
"<p>I am working on a really big project and I was wondering if i should make it open or have them pay for the license to use..</p>
","2988","","<p>You seem to confusing open source and gratis, and closed source and paid, respectively. Those two are completely orthogonal: you can have open source paid, open source gratis, closed source paid and closed source gratis software.</p>

<p>Examples of closed source gratis software include Microsoft .NET, Apple iTunes, Opera, all Freeware. Examples of open source paid software include the enterprise versions of most Linux distributions.</p>
"
"<p>Today we have documentation and code implementation in the same file:</p>

<pre><code># @returns &lt;String&gt; A combined string
def say :this :that
   return ""#{this} ""{that}""
end
</code></pre>

<p>I have never seen unit testing in the same file like:</p>

<pre><code># @if_insert ""good"", ""morning""
# @should_return ""good morning""
#
# @returns &lt;String&gt; A combined string
def say :this :that
   return ""#{this} ""{that}""
end
</code></pre>

<p>I think all these three parts are better to be clustered at one place (but with better syntax than the above quick examples)</p>

<p>Isn't it better not divide the unit testing from the actual code implementation? I don't see any benefit doing so, just like we are not separating documentations from code implementations.</p>
","2988","","<p>There are plenty of languages which allow tests to be embedded with the code. D, Cobra and Clojure come to mind.</p>

<p>The main problem with this is that unit tests test units of behavior, and a unit of behavior does not necessarily correspond to a unit of code. In other words, a unit test may only test half of a method, or two methods. Where do you attach that test?</p>

<p>Here is a stupid example of some Cobra code demonstrating language-integrated documentation, contracts and tests:</p>

<pre><code>def sqrt(i as number) as number
    """"""
    square root of i
    """"""
    require
        i &gt;= 0
    ensure
        result == i*i
        result &gt;= 0
    test
        assert sqrt(4) == 2
    body
        # Imagine Newton-Raphson or something like that here ...
</code></pre>
"
"<p>I never really thought about this until I was explaining some clojure code to a coworker who wasn't familiar with clojure.  I was explaining <code>let</code> to him when he asked why you use a vector to declare the bindings rather than a list.  I didn't really have an answer for him.  But the language <em>does</em> restrict you from using lists:</p>

<pre><code>=&gt; (let (x 1) x)
java.lang.IllegalArgumentException: let requires a vector for its binding (NO_SOURCE_FILE:0)
</code></pre>

<p>Why exactly is this?</p>
","2988","","<p>This is an idiom from Scheme. In many Scheme implementations, square brackets can be used interchangeably with round parentheses in list literals. In those Scheme implementations, square brackets are often used to distinguish parameter lists, argument lists and bindings from S-expressions or data lists.</p>

<p>In Clojure, parentheses and brackets mean different things, but they are used the same way in binding declarations.</p>
"
"<pre><code>$ chmod +x libsomelibrary.so
$ ./libsomelibrary.so
Segmentation fault

$ gcc -O2 http://vi-server.org/vi/bin/rundll.c -ldl -o rundll
$ ./rundll ./libsomelibrary.so main
(application starts normally)
</code></pre>

<p>Why can't I just start libsomelibrary.so if it has usable entry point?</p>

<p><code>rundll.c</code> is trivial:</p>

<pre><code>void* d = dlopen(argv[1], RTLD_LAZY);
void* m = dlsym(d, argv[2]);
return ((int(*)(int,char**,char**))m)(argc-2, argv+2, envp);
</code></pre>

<p>Why is it not used internally when attempting to load a binary?</p>
","2988","","<p>You <em>can</em> start shared libraries in Linux.</p>

<p>For example, if you start <code>/lib/libc.so.6</code>, it will print out its version number:</p>

<pre><code>$ /lib/libc.so.6
GNU C Library stable release version 2.12, by Roland McGrath et al.
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 4.5.0 20100520 (prerelease).
Compiled on a Linux 2.6.34 system on 2010-05-29.
Available extensions:
        crypt add-on version 2.1 by Michael Glad and others
        GNU Libidn by Simon Josefsson
        Native POSIX Threads Library by Ulrich Drepper et al
        BIND-8.2.3-T5B
libc ABIs: UNIQUE IFUNC
For bug reporting instructions, please see:
&lt;http://www.gnu.org/software/libc/bugs.html&gt;.
</code></pre>

<p>There must be something missing from your library.</p>
"
"<p>I played around with Go a bit shortly after it came out. There wasn't a profiler then; is there one now?</p>
","2988","","<p>If you use the <code>gccgo</code> compiler instead of the <code>6g</code> compiler, you'd probably be able to use the normal GNU tools, i.e. <code>gprof</code>.</p>

<p>I haven't actually <em>done</em> it with <code>gprof</code>, but I at least know that it works for <code>gdb</code>.</p>
"
"<p>I want a one-liner to return true/false, that tests each element in an array for whether it's an Integer or not. So if any element in the array is not an Integer, it should return false, else true. Here's my try:</p>

<pre><code>&gt;&gt; ([2,1,4].map {|x| (x.is_a? Integer)}).reduce {|x, result| x and result}
=&gt; true
&gt;&gt; ([2,""a"",4].map {|x| (x.is_a? Integer)}).reduce {|x, result| x and result}
=&gt; false
</code></pre>

<p>Any other ideas to distill it down further?</p>

<p>Thanks.</p>
","2988","","<pre><code>ary.all?(&amp;Integer.method(:===))
</code></pre>
"
"<p>Given that <code>acronym</code> is removed in HTML 5, how does one get standards support with similar functionality? Every other removed tag looks like CSS can do it, but that one seems to be removed completely...</p>
","2988","","<p>The <code>acronym</code> element was folded into the <code>abbr</code> element, because</p>

<ol>
<li>most HTML authors didn't know the difference between an acronym and an abbreviation and thus used them wrongly and</li>
<li>for the use cases of those two elements, the difference between an acronym and an abbreviation are irrelevant anyway.</li>
</ol>
"
"<p>In Python, the <code>with</code> statement is used to make sure that clean-up code always gets called, regardless of exceptions being thrown or function calls returning. For example:</p>

<pre><code>with open(""temp.txt"", ""w"") as f:
    f.write(""hi"")
    raise ValueError(""spitespite"")
</code></pre>

<p>Here, the file is closed, even though an exception was raised. A better explanation is <a href=""http://effbot.org/zone/python-with-statement.htm"" rel=""nofollow"">here</a>.</p>

<p>Is there an equivalent for this construct in Ruby? Or can you code one up, since Ruby has continuations? </p>
","2988","","<p>Ruby has syntactically lightweight support for literal anonymous procedures (called <em>blocks</em> in Ruby). Therefore, it doesn't need a new language feature for this.</p>

<p>(In general, it is a bad sign, if you need to add language features. You should be able to implement everything in a library, otherwise it is a sign of bad language design.)</p>

<p>So, what you normally do, is to write a method which takes a block of code, allocates the resource, executes the block of code in the context of that resource and then closes the resource.</p>

<p>Something like this:</p>

<pre><code>def with(klass, *args)
  yield r = klass.open(*args)
ensure
  r.close
end
</code></pre>

<p>You could use it like this:</p>

<pre><code>with File, 'temp.txt', 'w' do |f|
  f.write 'hi'
  raise 'spitespite'
end
</code></pre>

<p>However, this is a very procedural way to do this. Ruby is an object-oriented language, which means that the responsibility of properly executing a block of code in the context of a <code>File</code> should belong to the <code>File</code> class:</p>

<pre><code>File.open 'temp.txt', 'w' do |f|
  f.write 'hi'
  raise 'spitespite'
end
</code></pre>

<p>This could be implemented something like this:</p>

<pre><code>def File.open(*args)
  f = new(*args)
  return f unless block_given?
  yield f
ensure
  f.close if block_given?
end
</code></pre>

<p>This is a general pattern that is implemented by lots of classes in the Ruby core library, standard libraries and third-party libraries.</p>

<hr>

<p>A more close correspondence to the generic Python context manager protocol would be:</p>

<pre><code>def with(ctx)
  yield ctx.setup
ensure
  ctx.teardown
end

class File
  def setup; self end
  alias_method :teardown, :close
end

with File.open('temp.txt', 'w') do |f|
  f.write 'hi'
  raise 'spitespite'
end
</code></pre>

<p>Note that this is virtually indistinguishable from the Python example, but it didn't require the addition of new syntax to the language.</p>
"
"<p>According to Microsoft, ""Extension methods are a special kind of static method, but they are called as if they were instance methods on the extended type"".</p>

<p>Is there a way to add an extension method that it called as if it was a static method? Or to do something else that has the same effect?</p>

<p>Edit:
By which I mean ""called as if it was a static method on the extended class"".
Sorry for the ambiguity.</p>
","2988","","<p>Extension methods <em>are</em> static methods. You don't need to do anything.</p>

<p>The only thing that distinguishes an extension method from any other static method is that it can be called as if it were an instance method <em>in addition</em> to being called normally as a static method.</p>
"
"<p>In the python world, there are a number of alternative python interpreters that add cool additional features. One particularly useful example is bpython, which adds dynamic syntax highlighting, automatically pulls documentation, and displays live autocomplete information. In the Ruby world, I have yet to uncover any projects which add to the basic IRB interpreter even a subset of these features. Am I just not looking hard enough, or is this just something the Ruby community is lacking?</p>
","2988","","<p>JRuby ships with <code>jirb_swing</code>, which provides code completion.</p>
"
"<p>I'm curious which languages allow you to do something like this:</p>

<pre><code>method foo(String bar = ""beh""){

}
</code></pre>

<p>If you call foo like this:</p>

<pre><code>foo();
</code></pre>

<p><code>bar</code> will be set to ""beh"", but if you call like this:</p>

<pre><code>foo(""baz"");
</code></pre>

<p><code>bar</code> will be set to ""baz"".</p>
","2988","","<ul>
<li>almost all Lisps</li>
<li>Ruby</li>
<li>Python</li>
<li>C++</li>
<li>C#</li>
<li>Visual Basic.NET</li>
<li>Tcl</li>
<li>Visual Basic</li>
<li>Ioke</li>
<li>Seph</li>
<li>Cobra</li>
<li>Nemerle</li>
<li>Mirah</li>
<li>Delphi</li>
<li>Groovy</li>
<li>PHP</li>
<li>Fancy</li>
<li>Scala</li>
</ul>
"
"<p>Some time ago I found the <a href=""http://www.igormaznitsa.com/projects/mjvm/index.html"">MJVM</a> project. Sadly, this project has been abandoned by it author (I asked <a href=""http://www.igormaznitsa.com/"">Igor</a> via email).</p>

<p>I wonder if there is a (continued) open source project of a full implementation of a JVM in Java like this one.</p>

<p>By ""full"", I mean, not only to emulate mobile devices.</p>
","2988","","<p>The <a href=""http://JikesRVM.Org/"">Jikes RVM</a> is probably the most prominent JVM implementation written in Java. However, its lowest level implementation simply consists of static method calls to a ""magic"" interface which is treated specially by the compiler and translated into native code.</p>

<p>The <a href=""http://Labs.Oracle.Com/projects/maxine/"">Maxine VM</a> (developed originally by Sun Labs, now Oracle Labs) is a <em>real</em> metacircular VM, in which not only everything is written in Java, but there is no special-casing in the compiler going on. Even more: not only is the Maxine VM written in Java, it even runs <em>in itself</em>! This might sound crazy, and to be frank, I have no idea how that works, but it is based on the <a href=""http://KleinVM.SourceForge.Net/"">Klein VM</a> (developed by Sun Labs) which does the same thing for the Self programming language.</p>

<p>This has some very interesting properties: since the JVM itself is part of the codebase that the JVM interprets, the same codebase that the user code belongs to, this means that it can do optimizations such as inlining across the VM boundary. IOW: it can inline VM code into the user code and vice versa. It also means that the VM itself is subject to the same runtime profiling and dynamic optimizations that&nbsp;&ndash; on other VMs (even including Jikes)&nbsp;&ndash; only the user code is, which means that the VM itself constantly gets re-compiled and re-optimized to adapt to changing loads, new classes being loaded, changing profiles, changing usage patterns and so on.</p>

<p>On VMs like HotSpot, JRockit, J9 and others, these optimizations are impossible, for the simple reason that the JVM only knows how to optimize JVML bytecode, but the VM isn't written in Java. But even in Jikes, this is not possible because, while the VM is written in Java, it gets statically compiled to native code <em>before</em> it runs, and the code of the VM itself is not part of the code that the VM ""sees"".</p>

<p>The <a href=""http://Labs.Oracle.Com/projects/squawk/"">Squawk VM</a> is also a JVM developed by Sun Labs, now Oracle Labs. Unlike Maxine, which is roughly similar to J9, HotSpot or JRockit in its target audience, Squawk is more analogous to the KVM (originally developed by Sun, now Oracle), i.e. targeted at resource-constrained embedded devices. Squawk is also inspired by Klein. Unlike Maxine, it has a small abstraction layer written in C. But keep in mind, that Maxine requires an OS to run, whereas Squawk runs without an OS. So, in a sense, Squawk is even purer than Maxine, because many parts that are not part of Maxine but part of the OS (where they are often implemented in C, C++ or other low-level languages), are actually part of Squawk itself. Device drivers, for example, are written in Java. Only a small hardware abstraction layer and I/O libraries are written in C.</p>
"
"<pre><code>apt-get install ruby
</code></pre>

<p>Installs ruby 1.8.7</p>

<p>When I install ruby 1.9.2 from sources via ./configure make install, ruby is not installed (ruby -v gives nothing).</p>

<p>So how can I install ruby 1.9.2 on Ubuntu?</p>
","2988","","<ul>
<li>on 10.10 ""Maverick Meerkat"": <code>apt-get install ruby1.9.1</code></li>
<li>on 10.04 ""Lucid Lynx"": Ruby 1.9.2 was only released a couple of weeks ago, it didn't exist when Lucid was frozen.</li>
</ul>
"
"<p>There was a flurry of posts on the web about ""Managed VBScript"", the DLR &amp; VBx right after Mix07 but I've not seen anything about it since.</p>

<p>So, what is going on?  Has it been dropped?  Implemented?</p>
","2988","","<p>MS decided to fold dynamic typing support into their existing languages (C# 4 and VB.NET 10) instead of creating yet another new language, so VBx was dropped.</p>

<p>Managed JavaScript was also dropped (however, the developers were reassigned to work on Chakra, the ECMAScript engine of IE9), which means that of the original four DLR compilers (VBx, Managed JavaScript, IronRuby, IronPython), only IronPython and IronRuby survived. (Well, actually, there's some doubt about the latter, since while MS refuses to officially announce anything about IronRuby, they also have reassigned all developers to other projects, so that there is only one half-time developer (where ""half-time"" doesn't even mean ""half-time on IronRuby"" but ""half-time on the DLR, IronPython and IronRuby together"") inside MS left. The IronPython team was also reduced, which was for example responsible for the <em>huge</em> delay of the release of the <em>IronPython tools for Visual Studio</em>.)</p>
"
"<p>I know how to list the remote branches</p>

<pre><code>$ git branch -a
</code></pre>

<p>And I know how to find the head commit hash of my current branch</p>

<pre><code>$ git rev-parse HEAD
</code></pre>

<p>But I'm not sure how to list all the head commit hashes for all the remote branches.  This is close to what I want but what order are they in?</p>

<pre><code>$ git rev-parse --remotes
4b9f7128e9e7fa7d72652ba49c90c37d0727123d
4ebab9616fac6896b7827e8502b4dc7c5aac6b5b
ea7a5fab4a757fb0826253acf1fe7d8c546c178e
...
</code></pre>

<p>Ideally, I'd like a list of branch-name commit-hash pairs or even a way to pass a remote branch name to <code>git rev-parse HEAD</code></p>
","2988","","<p>You can use <code>git rev-parse</code> for this. It can take anything which looks even remotely like a commit and returns the full SHA1 hash for that commit.</p>

<p>For example, to get the SHA1 of <code>HEAD</code>:</p>

<pre><code>git rev-parse HEAD
</code></pre>

<p>To get the SHA1 of <code>master</code>:</p>

<pre><code>git rev-parse master
</code></pre>

<p>To get the SHA1 of <code>origin/trunk</code>:</p>

<pre><code>git rev-parse origin/trunk
</code></pre>

<p>To get the SHA1s of all remote heads (this is just one of many ways to do this, and <em>certainly</em> not the best one):</p>

<pre><code> git branch -r | cut -d' ' -f 3 | while read remote; do
   echo ${remote} `git rev-parse ${remote}`
done
</code></pre>
"
"<p>What is the difference? When should I use which? Why are there so many of them?</p>
","2988","","<blockquote>
  <p>What is the difference?</p>
</blockquote>

<p>From the documentation:</p>

<blockquote>
  <dl><dt>- (<em>Boolean</em>) <code>instance_of?(class)</code></dt><dd>Returns <code>true</code> if <code>obj</code> is an instance of the given class.</dd></dl>
</blockquote>

<p>and:</p>

<blockquote>
  <dl><dt>- (<em>Boolean</em>) <code>is_a?(class)</code><br />- (<em>Boolean</em>) <code>kind_of?(class)</code></dt><dd>Returns <code>true</code> if <code>class</code> is the class of <code>obj</code>, or if <code>class</code> is one of the superclasses of <code>obj</code> or modules included in <code>obj</code>.</dd></dl>
</blockquote>

<p>If that is unclear, it would be nice to know what <em>exactly</em> is unclear, so that the documentation can be improved.</p>

<blockquote>
  <p>When should I use which?</p>
</blockquote>

<p>Never. Use polymorphism instead.</p>

<blockquote>
  <p>Why are there so many of them?</p>
</blockquote>

<p>I wouldn't call <em>two</em> ""many"". There are two of them, because they do two different things.</p>
"
"<p>Just to be up front, although the title appears to be similar to the thread <a href=""http://stackoverflow.com/questions/393622/rspec-vs-cucumber-rspec-stories"">http://stackoverflow.com/questions/393622/rspec-vs-cucumber-rspec-stories</a>, however my question is fundamentally different.</p>

<p>I understand the difference between testing user stories and testing behavior of objects individually. My question is, why is Cucumber usually coupled with RSpec for writing user stories when RSpec has had user story functionality since 1.1? Is it because RSpec's focus remains strong on individual object testing and Cucumber has since been heavily developed with emphasis on user stories? </p>

<p>Context switching is a pain and we developers deal with enough tools. I'd prefer to stick to just RSpec, but if there is some important distinctions that Cucumber has from RSpec, please do let me know.</p>
","2988","","<p>The difference is rather simple: Cucumber <em>is</em> the RSpec Story Runner. Or rather, Cucumber is the RSpec Story Runner <em>done right</em>.</p>

<p>So, Cucumber is maintained, the RSpec Story Runner is not. The RSpec Story Runner is obsolete and deprecated, Cucumber isn't. Cucumber is still being developed, the RSpec Story Runner isn't. The impending release of RSpec does no longer contain (nor support) the Story Runner.</p>

<p>The fact that RBehave (Cucumber's pre-cursor) was merged into RSpec was purely a historical accident and should never have been done in the first place. That's why pretty soon after the merge, the maintainer of the RSpec Story Runner declared it dead and wrote Cucumber.</p>
"
"<p>Hello I have a trouble with Ruby unit testing, I'm new to it so some help would be lovely</p>

<pre><code>class TestItem &lt; Test::Unit::TestCase
 def setUp
  **@item**=Item.new('Food','Burger',120)
 end
 def testGetType
  assert_equal(**@item**.getType,'Food')
 end
end
</code></pre>

<p>Here the value of instance variable @item takes <strong>nil</strong> when I declare it in setUp() and use it in test functions! So I get an error like no method 'getType' for nil-class</p>

<p>But when I directly use it like assert_equal(Item.new('Food','Burger',120).getType,'Food'),it works fine.</p>

<p>Please point out to my mistakes, thanks in advance</p>
","2988","","<p>The name of the <code>setup</code> method is <code>setup</code>, not <code>setUp</code>. In fact, you will <em>never</em> find a method called <code>setUp</code> in Ruby, since the standard Ruby style for method naming is <code>snake_case</code>, not <code>camelCase</code>. (The same applies to <code>getType</code> and <code>testGetType</code>, BTW. It should be <code>get_type</code> and <code>test_get_type</code>. Well, actually, in Ruby, getters aren't prefixed with <code>get</code>, so really it should be <code>type</code> and <code>test_type</code>. But note that in Ruby, all objects already have <code>type</code> method, although that is deprecated.)</p>
"
"<p>Objective-J is compiled/transformed into JavaScript directly on the browser. (This is contrast to doing this on the server, as GWT does for Java.) Has this approach been implemented for any language, other than Objective-J?</p>
","2988","","<p>The <a href=""http://CoffeeScript.Org/"">CoffeeScript</a> compiler compiles CoffeeScript into ECMAScript. Since the CoffeeScript compiler is itself written in CoffeeScript, it can compile itself to ECMAScript and thus run in the browser. The necessary bits and pieces to support <code>&lt;script type='text/coffeescript'&gt;</code> elements are already included in the standard CoffeeScript compiler.</p>

<p>In general, <em>any</em> language can be compiled to ECMAScript, all you need is a compiler. And, since <em>any</em> language can be compiled to ECMAScript, any <em>compiler</em> can be compiled to ECMAScript, all you need is a compiler for the language <em>that</em> compiler is written in.</p>

<p>This leads to a combinatorial explosion of possibilities for compiling languages within the browser.</p>

<p>For example, there is this guy who writes <a href=""http://ClueCC.SourceForge.Net/"">C compilers which target high-level languages</a> for fun. He has a compiler that compiles C to Java, Perl, Common Lisp, Lua or ECMAScript. So, you can use <em>that</em> compiler to compile any <em>other</em> compiler written in C to ECMAScript. And most languages have some compiler somewhere which is written in C.</p>

<p>Clue is written in C. Clue compiles C to ECMAScript. Ergo, you can use Clue to compile Clue to ECMAScript. Then, you can run Clue in the browser to compile C to ECMAScript on the fly. <code>&lt;script type='text/c'&gt;</code>, anyone? (Fun thought: node.js is written in C. Hmm &hellip;)</p>

<p>On a more serious note: there are generally three reasons for compiling to ECMAScript:</p>

<ol>
<li>reuse</li>
<li><a href=""http://StackOverflow.Com/questions/3848521/"">safety</a></li>
<li>expressivity</li>
</ol>

<p>If you simply want to reuse existing code written in a different language (or existing knowlwedge in a different language), then compiling/interpreting on the client doesn't make much sense. The code or the coder doesn't expect to be able to use <code>&lt;script&gt;</code> elements anyway. This category includes stuff like <a href=""http://Google-Web-Toolkit.GoogleCode.Com/"">GWT</a> or <a href=""http://Wikipedia.Org/wiki/Microsoft_Live_Labs_Volta"">Volta</a>.</p>

<p>If (type-)safety is your goal, then compiling/interpreting on the client simply doesn't work: how can you guarantee safety if you don't control the compiler? That's why <a href=""http://Impredicative.Com/ur/"">Ur/Web</a>, <a href=""http://Groups.Inf.Ed.Ac.Uk/links/"">Links</a>, <a href=""http://Flapjax-Lang.Org/"">Flapjax</a>, <a href=""http://haXe.Org/"">haXe</a>, <a href=""http://Google-Caja.GoogleCode.Com/"">Caja</a> and such compile the code on the server. They guarantee safety either by static typing or tight integration or both. (By tight integration I mean that backend, frontend and app are tightly connected, by e.g. specifying data structures <em>once</em> and then generating the corresponding SQL, ECMAScript and HTML forms from that single source to make sure that they all match up. It should be obvious why this requires processing on the server.)</p>

<p>The ones that focus on expressivity, however, expect to be used as a replacement for ECMAScript, i.e. inside <code>&lt;script&gt;</code> elements, and thus they often come with interpreters and/or compilers which run on the client. CoffeeScript, <a href=""http://Cappuccino.Org/"">Objective-J</a> and <a href=""http://Clamato.Net/"">Clamato</a> fall in this category.</p>
"
"<p>The DOT markup language uses -> and -- to indicate directed and undirected edges between nodes. Do you know of any other programming or markup languages with graph operators, and are there any standards, conventions or even just trends for defining nodes and edges?</p>
","2988","","<p>The <a href=""http://OGDL.SourceForge.Net/"" rel=""nofollow""><em>Ordered Graph Data Language</em></a> uses whitespace for defining edges. It only supports directed graphs, if you want an undirected graph you will ever have to implement direction-agnosticism in your app or write down every edge twice.</p>

<p><a href=""http://yUML.Me/"" rel=""nofollow""><em>yUML</em></a> is not a general-purpose graph description language, it only supports UML Activity Diagrams, UML Use Case Diagrams and UML Class Diagrams. Similar to DOT, it uses an iconographic ASCII art representation of the edges. For example, the graphical representation of an aggregation association is a hollow diamond at the end of the edge. yUML represents this using <code>&lt;&gt;</code>. So, an aggregation association between <code>A</code> and <code>B</code> would be written as <code>[A]&lt;&gt;-[B]</code> and rendered as <img src=""http://yUML.Me/55eb66dd/"" alt=""[A]&lt;&gt;-[B]""></p>

<p>And then there's <a href=""http://GraphML.GraphDrawing.Org/"" rel=""nofollow""><em>GraphML</em></a>.</p>
"
"<p>I ran into this question many times ago and have seen the terms again and didn't know their real concept in computer engineering.</p>

<p>What do platform and framework refer to?</p>

<p>I see many terms like platform-independent and development platforms, and also same for frameworks, but i can't quietly understand them. Do they refer to libraries? do they refer to different kinds of Operating-System? </p>
","2988","","<p>The term <em>framework</em> is very well defined: a framework is very similar to a library, except that Control is Inverted. (Inversion Of Control is <em>the</em> defining characteristic of what constitutes a framework.) IOW: <em>you</em> call a library, but a framework calls you.</p>

<p>Another way to think about it, is that <em>you</em> write an application, but leave all the un-interesting details blank and use libraries to fill them. A framework OTOH <em>is</em> an application. It is an application which has all the <em>interesting</em> details left blank for <em>you</em> to fill in. (Of course, in the code you use to fill in the blanks you can in turn call libraries yourself. Also, the framework itself will call libraries to implement <em>its</em> inner workings. And, frameworks usually come bundled with a rich set of libraries which are tightly integrated with the framework. However, the distinction is still clear. Just because the framework and the libraries ship together in one package doesn't mean there is no distinction.)</p>

<p>The term <em>platform</em>, however, is not so well defined. It is also heavily overloaded. In the context of porting native applications, it usually refers to the combination of CPU ISA (e.g. x86, AMD64, IA-64, POWER, MIPS, ARMv9, Sparc), hardware architecture (PC, CHRP, PReP, Mac), kernel (Linux, NT) and base libraries (POSIX, Win32, Core Foundation).</p>

<p>In the broader context of software development, ""platform"" usually literally means ""that which your code stands on"". For a native application, that could be basically the same as above, for a JVM application it could be the JVM plus the JRE plus OSGI.</p>

<p>Basically, you can take the metaphor quite literal: a platform allows you (i.e. your code) to stand on higher ground than you could without it.</p>
"
"<p>I've heard great things about JRuby and I know you can run it without knowing any Java. My development skills are strong, Java is just not one of the tools I know. It's a massive tool with a myriad of accompanying tools such as Maven/Ant/JUnit etc.</p>

<p>Is it worth moving my current Rails applications to JRuby for performance reasons alone? Perhaps if I pick up some basic Java along side, there can be so added benefits that aren't obvious such as better debugging/performance optimization tools?</p>

<p>Would love some advice on this one.</p>
","2988","","<p>I think you pretty much nailed it.</p>

<p>JRuby is just yet another Ruby execution engine, just like MRI, YARV, IronRuby, Rubinius, MacRuby, MagLev, SmallRuby, Ruby.NET, XRuby, RubyGoLightly, tinyrb, HotRuby, BlueRuby, Red Sun and all the others.</p>

<p>The main differences are:</p>

<ul>
<li><p>portability: for example, YARV is only officially supported on x86 32 Bit Linux. It is not supported on OSX or Windows or 64 Bit Linux. Rubinius only works on Unix, not on Windows. JRuby OTOH runs <em>everywhere</em>: desktops, servers, phones, App Engine, you name it. It runs on the Oracle JDK, OpenJDK, IBM J9, Apple SoyLatte, RedHat IcedTea and Oracle JRockit JVMs (and probably a couple of others I forgot about) and also on the Dalvik VM. It runs on Windows, Linux, OSX, Solaris, several BSDs, other proprietary and open Unices, OpenVMS and several mainframe OSs, Android and Google App Engine. In fact, on Windows, JRuby passes more RubySpec tests than ""Ruby"" (meaning MRI or YARV) itself!</p></li>
<li><p>extensibility: Ruby programs running on JRuby can use any arbitrary Java library. Through JRuby-FFI, they can also use any arbitrary C library. And with the new C extension support in JRuby 1.6, they can even use a large subset of MRI and YARV C extensions, like Mongrel for example. (And note that ""Java"" or ""C"" library does not actually mean written in those languages, it only means with a Java or C API. They could be written in Scala or Clojure or C++ or Haskell.)</p></li>
<li><p>tooling: whenever someone writes a new tool for YARV or MRI (like e.g. memprof), it turns out that JRuby already had a tool 5 years ago which does the same thing, only better. The Java ecosystem has some of the best tools for ""runtime behavior comprehension"" (which is a term I just made up, by which I mean much more than just simple profiling, I mean tools for deeply understanding what exactly your program does at runtime, what its performance characteristics are, where the bottlenecks are, where the memory is going, and most importantly <em>why</em> all of that is happening) and visualization available on the market, and pretty much all of those work with JRuby, at least to some extent.</p></li>
<li><p>deployment: assuming that your target system already has a JVM installed, deploying a JRuby app (and I'm not just talking about Rails, I also mean desktop, mobile, other kinds of servers) is literally just copying one JAR (or WAR) and a double-click.</p></li>
<li><p>performance: JRuby has much higher startup overhead. In return you get much higher throughput. In practice, this means that deploying a Rails app to JRuby is a good idea, as is running your integration tests, but for developer unit tests and scripts, MRI, YARV or Rubinius are better choices. Note that many Rails developers simply develop and unit test on MRI and integration test and deploy on JRuby. There's no need to choose a single execution engine for everything.</p></li>
<li><p>concurrency: JRuby runs Ruby threads concurrently. This means two things: if your locking is correct, your program will run faster, and if your locking is incorrect, your program will break. (Unfortunately, neither MRI nor YARV nor Rubinius run threads concurrently, so there's still some broken multithreaded Ruby code out there that doesn't know it's broken, because obviously concurrency bugs can only show up if there's actual concurrency.)</p></li>
<li><p>platforms (this is somewhat related to portability): there are some amazing Java platforms out there, e.g. the Azul JCA with 768 GiBytes of RAM and 864 CPU cores specifically designed for memory-safe, pointer-safe, garbage-collected, object-oriented languages. Android. Google App Engine. All of those run JRuby.</p></li>
</ul>
"
"<p>I have <strong>very</strong> little experience in web development, so this may be a very basic question.</p>

<p>It's just, from the limited experience I <em>do</em> have (a little PHP, and a little Ruby on Rails), it seems that the way dynamically generated HTML is <em>formatted</em> just ""doesn't matter""; it ends up ugly, with weird indentation, and nobody cares because that isn't what the <em>users</em> sees.</p>

<p>Unless, of course, the user is a developer, or even just someone who's curious to look at a little HTML to try and learn something.</p>

<p>Maybe you don't know what I'm talking about; so let me give an example.</p>

<p>In a Ruby file I might have some code like this:</p>

<pre><code>&lt;h1&gt;Heading&lt;/h1&gt;

&lt;div&gt;
    &lt;%= render :partial =&gt; '/layouts/body' %&gt;
&lt;/div&gt;
</code></pre>

<p>Then, in my ""/layouts/_body.html.erb"" file, I might have this:</p>

<pre><code>&lt;p&gt;Here is some content!&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;List item 1&lt;/li&gt;
    &lt;li&gt;List item 2&lt;/li&gt;
    &lt;li&gt;List item 3&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>When all this gets rendered, it'll look fine. But if the user tries to view the source, the HTML will look pretty crappy:</p>

<pre><code>    &lt;h1&gt;Heading&lt;/h1&gt;

    &lt;div&gt;
        &lt;p&gt;Here is some content!&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;List item 1&lt;/li&gt;
    &lt;li&gt;List item 2&lt;/li&gt;
    &lt;li&gt;List item 3&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
</code></pre>

<p>Obviously, this is not a big deal. And I can totally understand if the prevailing opinion is simply ""It doesn't matter."" But is that just the way it has to be? Does the readability of HTML not matter to anyone?</p>

<p>I'm just curious to know if this ever bugged anyone else enough for him/her to come up with a ""solution"" for it (obviously it would have to be someone who viewed it as a ""problem"" in the first place).</p>
","2988","","<p>The <a href=""http://HAML-Lang.Com/"" rel=""nofollow"">HAML</a> templating engine was specifically created with the goal of generating properly indented, nested and formatted HTML. There's no reason why other templating engines couldn't do the same.</p>

<p>So, yes, it is just laziness.</p>
"
"<p>I get this when I run a main.rb file from OSX command line</p>

<pre><code>`require': no such file to load -- EngineAPIWrapper (LoadError)
</code></pre>

<p>I have tried putting all the files that it references within the same folder instead of sym links but I still get the problem</p>

<p>if I require 'rubygems' at the top of the main.rb file I get this error instead:</p>

<pre><code>link-mbp:~ benb$ ruby /Library/Application\ Support/Episode/Engine/SDK/Samples/ruby/xmlrpc/engine_client.rb 
/Library/Ruby/Site/1.8/rubygems/custom_require.rb:31:in `gem_original_require': no such file to load -- EngineAPIWrapper (LoadError)
    from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:31:in `require'
    from /Library/Application Support/Episode/Engine/SDK/Samples/ruby/xmlrpc/engine_client.rb:14
</code></pre>

<p>The top of the source file looks like this:</p>

<pre><code>require 'rubygems'
require 'xmlrpc/client'
require 'EngineAPIWrapper'
require 'pp'
require 'English'    
</code></pre>

<p>that is, I don't see anything wrong with how I am running things.</p>

<p>Any help is appreciated!</p>
","2988","","<p>In 99% of all cases, when a computer tells you that it couldn't find something, the reason is that it is not there. In the other 1% of cases, the computer is looking in the wrong place.</p>

<p>So, in order for <code>require 'EngineAPIWrapper'</code> to work, there has to be a file named <code>EngineAPIWrapper.rb</code> and that file has to be in a directory which is in Ruby's <code>$LOAD_PATH</code>.</p>
"
"<p>I have a parser that reads files. Inside a file, you can declare a filename and the parser will go and read that one, then when it is done, pick up right where it left off and continue. This can happen as many levels deep as you want. </p>

<p>Sounds pretty easy so far. All I want to do is print out the file names and line numbers.</p>

<p>I have a class called FileReader that looks like this:</p>

<pre><code>class FileReader
    attr_accessor :filename, :lineNumber
    def initialize(filename)
        @filename = filename
        @lineNumber = 0
    end
    def readFile()
        # pseudocode to make this easy
         open @filename
         while (lines)
             @lineNumber = @lineNumber + 1
             if(line startsWith ('File:'))
                 FileReader.new(line).readFile()
             end
             puts 'read ' + @filename + ' at ' + @lineNumber.to_s()
         end
         puts 'EOF'
    end
end
</code></pre>

<p>Simple enough. So lets say I have a file that refers other files like this. File1->File2->File3. This is what it looks like:</p>

<pre><code>read File1 at 1
read File1 at 2
read File1 at 3
read File2 at 1
read File2 at 2
read File2 at 3
read File2 at 4
read File3 at 1
read File3 at 2
read File3 at 3
read File3 at 4
read File3 at 5
EOF
read File3 at 5
read File3 at 6
read File3 at 7
read File3 at 8
EOF
read File2 at 4
read File2 at 5
read File2 at 6
read File2 at 7
read File2 at 8
read File2 at 9
read File2 at 10
read File2 at 11
</code></pre>

<p>And that doesnt make any sense to me.</p>

<pre><code>File 1 has 11 lines
File 2 has 8 lines
File 3 has 4 lines
</code></pre>

<p>I would assume creating a new object would have its own scope that doesn't affect a parent object.</p>
","2988","","<pre><code>class FileReader
  def initialize(filename)
    @filename = filename
  end

  def read_file
    File.readlines(@filename).map.with_index {|l, i|
      next ""read #{@filename} at #{i}"" unless l.start_with?('File:')
      FileReader.new(l.gsub('File:', '').chomp).read_file
    }.join(""\n"") &lt;&lt; ""\nEOF""
  end
end

puts FileReader.new('File1').read_file
</code></pre>

<p>or just</p>

<pre><code>def File.read_recursively(filename)
  readlines(filename).map.with_index {|l, i|
    next ""read #{filename} at #{i}"" unless l.start_with?('File:')
    read_recursively(l.gsub('File:', '').chomp)
  }.join(""\n"") &lt;&lt; ""\nEOF""
end

puts File.read_recursively('File1')
</code></pre>
"
"<p>I'm trying to install some Gems and need to run the following command:</p>

<pre><code>gem install mongrel mongrel_service mysql ruby-postgres oniguruma 
ultraviolet libxml-ruby --no-ri --no-rdoc --platform=mswin32
</code></pre>

<p>However, that <code>--platform=mswin32</code> at the end of it bothers the hell out of me. I mean, my platform is x64 as it's supposed to be. When I remove the <code>--platform=mswin32</code> from the command or replace <code>mswin32</code> with <code>mswin64</code>, I get a long list of errors. Should I be concerned with <code>--platform=mswin32</code> or just leave it alone and let it be? Thanks a lot in advance.</p>
","2988","","<p>You really shouldn't be using the <code>mswin32</code> versions of Ruby (aka. One-Click Installer). They are obsolete. They are compiled with Microsoft Visual C++ 6.0 (aka MSVC6), which was released in 1998(!). Code compiled with MSVC6 is incompatible with code compiled with both GCC and newer versions of MSVC. It is much slower, since a lot has happened in the area of compiler optimizations research in the last 12 years.</p>

<p>Because of the incompatibilities, all libraries that Ruby uses, all C extensions, all libraries that the C extensions use and so on, have to <em>also</em> be compiled with MSVC6. However, MSVC6 isn't even available anymore. Also, many open source projects only test for compatibility with GCC, not MSVC (and certainly not a version of MSVC that has been obsolete for almost a decade).</p>

<p>Use the <code>mingw32</code> versions (aka. <a href=""http://RubyInstaller.Org/"" rel=""nofollow"">RubyInstaller</a>) instead. They are compiled with GCC 3.4 or 4.5 (the (almost) latest version). With the optional DevKit, you can install <em>any</em> C extension, without the author of the gem having to provide a pre-compiled version; the gem just gets compiled on your local machine, just like it would under Linux or OSX.</p>

<blockquote>
  <p>However, that --platform=mswin32 at the end of it bothers the hell out of me. I mean, my platform is x64 as it's supposed to be.</p>
</blockquote>

<p>Are you sure you have a 64 Bit build of Ruby? Like I wrote above, the <code>mswin</code> versions are usually compiled with MSVC6, which came out in 1998. AMD64 was only announced in 1999, the spec wasn't finished until 2000 and the first processors didn't appear until 2003, so, unless Microsoft has time-travel technology, it is simply impossible for a 64 Bit version of MSVC6 to even exist!</p>

<p>As far as I know, there are no pre-compiled versions of Ruby for 64 Bit Windows available. The RubyInstaller developers have only just started working on a 64 Bit <code>mingw</code> build.</p>

<p>If you compiled Ruby yourself, you should use <code>--platform=ruby</code> to force the Gems being compiled on you local system, since the pre-compiled <code>mswin32</code> Gems which are available are all incompatible with your system, since they are a) 32 Bit and b) compiled with MSVC6 which is incompatible with whatever compiler you used.</p>
"
"<p>Say I have an array of strings</p>

<pre><code>arr = ['sandra', 'sam', 'sabrina', 'scott', 'mark', 'melvin']
</code></pre>

<p>How would I search this array just like I would an active record object in Rails. For example, the query ""sa"" would return <code>['sandra', 'sam', 'sabrina']</code>.</p>

<p>Thanks!</p>
","2988","","<pre><code>arr.grep(/^sa/)
</code></pre>
"
"<p>What exactly is the difference? It seems like the terms can be used somewhat interchangeably, but reading the wikipedia entry for Objective-c, I came across: </p>

<blockquote>
  <p>In addition to C’s style of procedural
  programming, C++ directly supports
  certain forms of object-oriented
  programming, generic programming, and
  metaprogramming.</p>
</blockquote>

<p>in reference to C++. So apparently they're different?</p>
","2988","","<ul>
<li><em>Programming</em>: Writing a program that creates, transforms, filters, aggregates and otherwise manipulates data.</li>
<li><em>Metaprogramming</em>: Writing a program that creates, transforms, filters, aggregates and otherwise manipulates <em>programs</em>.</li>
<li><em>Generic Programming</em>: Writing a program that creates, transforms, filters, aggregates and otherwise manipulates data, but makes only the minimum assumptions about the structure of the data, thus maximizing reuse across a wide range of datatypes.</li>
</ul>

<p>As was already mentioned in several other answers, the distinction can be confusing in C++, since both Generic Programming  and (static/compile time) Metaprogramming are done with Templates. To confuse you even further, Generic Programming in C++ actually uses Metaprogramming to be efficient, i.e. Template Specialization generates specialized (fast) programs from generic ones.</p>

<p>Also note that, as every Lisp programmer knows, code and data are the same thing, so there really is no such thing as ""metaprogramming"", it's all just programming. Again, this is a bit hard to see in C++, since you actually use two completely different programming languages for programming (C++, an imperative, procedural, object-oriented language in the C family) and metaprogramming (Templates, a purely functional ""accidental"" language somewhere in between pure lambda calculus and Haskell, with butt-ugly syntax, since it was never actually intended to <em>be</em> a programming language.)</p>

<p>Many other languages use the same language for both programming and metaprogramming (e.g. Lisp, Template Haskell, Converge, Smalltalk, Newspeak, Ruby, Ioke, Seph).</p>
"
"<p>when a compiler compile a high-level language into the target language that are executable , what form is the target language in ? </p>

<p>Is it a lower-level language like machine code ? Or the compiler just translate it to the OS's functions from the OS's API  and the OS do all the work under the hood?</p>
","2988","","<p>A compiler is any program that transforms a program from one representation into another representation. That target representation can be <em>anything</em>, provided that it is at least as computationally powerful as the source representation. In particular, this means that if the source representation is Turing-complete, the target representation must also be Turing-complete.</p>

<p>A compiler can compile from a high-level language to another high-level language (e.g. GWT, which compiles Java to ECMAScript), from a high-level language to a low-level language (e.g. Gambit, which compiles Scheme to C), from a high-level language to machine code (e.g. GCJ, which compiles Java to native code), from a low-level language to a high-level language (e.g. Clue, which compiles C to Java, Lua, Perl, ECMAScript and Common Lisp), from a low-level language to another low-level language (e.g. the Android SDK, which compiles JVML bytecode to Dalvik bytecode), from a low-level language to machine code (e.g. the C1X compiler which is part of HotSpot, which compiles JVML bytecode to machine code), machine code to a high-level language (any so-called ""decompiler""), machine code to low-level language (e.g. the JIT compiler in JPC, which compiles x86 native code to JVML bytecode) and native code to native code (e.g. the JIT compiler in PearPC, which compiles PowerPC native code to x86 native code).</p>
"
"<p>I want to test the compliance of Linux Ethernet and I2C drivers. Is there any open source tool or framework to test these drivers?</p>
","2988","","<p>Compliance with what? Usually, the organization which publishes the standards with which you want to be compliant also publish the corresponding testsuites, or at least can tell you where to get them.</p>
"
"<p>I was going through a few tests written in Java using JUnit and I could'nt help noticing the emphasis which is laid on checking the ""type"" of objects. This is something I have never seen in Python test-suites.</p>

<p>Java being statically-typed and Python being dynamically-typed, should'nt the reverse be the case?</p>
","2988","","<p>Python unit tests <em>do</em> check types. All the time. In fact, that's the <em>only</em> thing they are doing.</p>

<p>Python is duck-typed. Duck typing means that the type of an object is defined by its behavior. Unit tests test behavior. Ergo, they test types.</p>
"
"<p>What programming languages can one use to develop iPhone, iPod Touch and iPad (iOS) applications?</p>

<p>Also are there plans in the future to expand the amount of programming languages that iOS will support?</p>
","2988","","<blockquote>
  <p>What programming languages can one use to develop iPhone, iPod Touch and iPad (iOs) applications?</p>
</blockquote>

<p>Ruby, Python, Lua, Scheme, Lisp, Smalltalk, C#, Haskell, ActionScript, JavaScript, Objective-C, C++, C. That's just the ones that pop into my head right now. I'm sure there's hundreds if not thousands of others. (E.g. there's no reason why you couldn't use <em>any</em> .NET language with MonoTouch, i.e. VB.NET, F#, Nemerle, Boo, Cobra, ...)</p>

<blockquote>
  <p>Also are there plans in the future to expand the amount of programming languages that iOs will support?</p>
</blockquote>

<p>Sure. Pretty much <em>every</em> programming language community on this planet is currently working on getting their language to run on iOS.</p>

<p>Also, a lot of people are working on programming languages specifically designed for touch devices such as iPod touch, iPhone and iPad, e.g. Phil Mercurio's <a href=""http://Thyrd.Org/"">Thyrd</a> language.</p>
"
"<p>I've got this:</p>

<pre><code>a = [[123,1],[124,1],[125,1],[126,2],[127,3],[128,3]]
</code></pre>

<p>And I would like to turn a into b:</p>

<ul>
<li>ordered by value</li>
<li>random within array of value</li>
</ul>

<p>// updated:</p>

<pre><code>b = [[124,123,125],[126],[128,127]]
</code></pre>

<p>How to do this in ruby? Im using rails.</p>
","2988","","<pre><code>a.group_by(&amp;:last).
  sort_by(&amp;:first).
  map(&amp;:last).
  map {|el| el.map(&amp;:first).shuffle }
</code></pre>
"
"<p>Just installed IronRuby 1.1. I'm trying to take a look at rake and albacore.  After installing ironruby, I am able to hit a command prompt by typing ir, and I am able to do simple puts, but when I try to run rake, I get the error</p>

<pre><code>undefined method `rake' for main:Object
</code></pre>

<p>How do I resolve this?  Any ideas? </p>

<p>Thanks,<br>
~ck in San Diego</p>
","2988","","<p><code>rake</code> is an executable Ruby script that you call from the Windows command line, not a Ruby method that you call from IRb.</p>
"
"<p>I need to know a correct name for this cool feature that some languages provide.</p>

<p>FYI: In some languages it is possible to do a multiple assignments by assigning a structure of values to a structure of ""variables"". In the example in the question title it assigns ""foo"" to foo and ""bar"" to bar.</p>
","2988","","<p>It's generally called <em>destructuring bind</em> in functional languages (which don't <em>have</em> assignments) and <em>destructuring assignment</em> in imperative languages.</p>

<p>Some languages provide subsets of that feature and then call it something different. For example, in Python it works with Tuples, Lists or Sequences and is called <em>Tuple unpacking</em>, <em>List unpacking</em> or <em>Sequence unpacking</em>, in Ruby, it works with Arrays (or objects that are convertible to an array) and is called <em>parallel assignment</em>.</p>

<p>Destructuring bind can get arbitrarily complex. E.g. this (imaginary) bind</p>

<pre><code>[Integer(a), b, 2, c] = some_array
</code></pre>

<p>would assign the first element of <code>some_array</code> to <code>a</code>, the second element to <code>b</code> and the fourth element to <code>c</code>, but <em>only</em> if the first element is an <code>Integer</code>, the third element is equal to <code>2</code> and the length is 4. So, this even incorporates some conditional logic.</p>

<p>Destructuring bind is a subset of more general <em>pattern matching</em>, which is a standard feature of functional languages like Haskell, ML, OCaml, F#, Erlang and Scala. The difference is that destructuring bind only lets you take apart a structure and bind its components to variables, whereas pattern matching also matches on values inside those structures and lets you make decisions and in particular lets you run arbitrary code in the context of the bindings. (You can see the above imaginary bind as half-way in between destructuring bind and pattern matching.)</p>

<p>Here's the classical example of a <code>reverse</code> function in an imaginary language, written using pattern matching:</p>

<pre><code>def reverse(l: List): List {
  match l {
    when []              { return [] }
    when [first :: rest] { return (reverse(rest) :: first) }
  }
}
</code></pre>
"
"<p>let's say I have the following array:</p>

<pre><code>arr = [[5,1], [2,7]]
</code></pre>

<p>and I want to find the minimum comparing the second element. i.e. The minimum will be [5,1] (since 1 is less than 7).  I can use the following code:</p>

<pre><code>arr.min {|a,b| a[1] &lt;=&gt; b[1]}
</code></pre>

<p>For calculating the maximum I can do the same:</p>

<pre><code>arr.max {|a,b| a[1] &lt;=&gt; b[1]}
</code></pre>

<p>That gives [2,7]. Now, what I do not want is repeat myself since I am basically given all the time the same block. I would like to have that block somewhere and provide it to the min/max function. I hoped something like:</p>

<pre><code>blo = lambda {|a,b| a[1] &lt;=&gt; b[1]}
arr.min blo
</code></pre>

<p>but didn't really work... so didn't work any of the other things I tried. 
Any Idea on how can I do this? </p>
","2988","","<p>@sepp2k's answer is the more general one, but in your specific case, I would just use</p>

<pre><code>arr.min_by(&amp;:last)
arr.max_by(&amp;:last)
</code></pre>

<p>since that is <em>much</em> more obvious than all those curly braces and square brackets and array indices floating around.</p>
"
"<p>Basically what I would like to know is if there is any way to add new 'statements' to the .net based languages?
An example of what I'm looking for would be something like introducing a <code>public class MyClass decoratorOf ClassWithLotsOfMethods</code> and in pre-compile time changing that to be a normal class that overrides everything by default but the methods I define.</p>

<p>Another example would be the .net 3.5 auto properties, or extension methods, etc</p>

<p>This is just for fun, not that I really want to do this, just curious if is possible</p>

<p>Thanks!
Seba</p>
","2988","","<p>Related: <a href=""http://StackOverflow.Com/q/3848001/"">Extending the Mono C# compiler: is there any documentation or precedent?</a></p>
"
"<p>How do I compare two lambda functions in C++ (Visual Studio 2010)?</p>

<pre><code>std::function&lt;void ()&gt; lambda1 = []() {};
std::function&lt;void ()&gt; lambda2 = []() {};
bool eq1 = (lambda1 == lambda1);
bool eq2 = (lambda1 != lambda2);
</code></pre>

<p>I get a compilation error claiming that operator == is inaccessible.</p>

<p>EDIT: I'm trying to compare the function instances. So lambda1 == lambda1 should return true, while lambda1 == lambda2 should return false.</p>
","2988","","<p>This is impossible.</p>

<p>Proof sketch: if it were possible to compute</p>

<pre><code>f1 == f2
</code></pre>

<p>then it would also be possible to compute</p>

<pre><code>f == infiniteLoop
</code></pre>

<p>and solve the Halting Problem.</p>
"
"<p>Is it possible to install Ruby 1.9.2 on Ubuntu not using RVM?</p>
","2988","","<p>On current versions of Ubuntu, <code>aptitude install ruby1.9.1</code> installs YARV 1.9.2-p0.</p>
"
"<p>I'm reading <a href=""http://rads.stackoverflow.com/amzn/click/193435631X"">Programming Scala</a>. At the beginning of chapter 4, the author comments that Java supports static methods, which are ""not-so-pure OO concepts."" Why is this so?</p>
","2988","","<p>Object-orientation is about three things:</p>

<ul>
<li>messaging,</li>
<li>local retention and protection and hiding of state-process, and</li>
<li>extreme late-binding of all things.</li>
</ul>

<p>Of those three, the most important one is <em>messaging</em>.</p>

<p>Static methods violate at least messaging and late-binding.</p>

<p>The idea of <em>messaging</em> means that in OO, computation is performed by networks of self-contained objects which send messages to each other. Sending a message is the <em>only</em> way of communication/computation.</p>

<p>Static methods don't do that. They aren't associated with any object. They really aren't methods <em>at all</em>, according to the usual definition. They are really just procedures. There's pretty much no difference between a Java static method <code>Foo.bar</code> and a BASIC subroutine <code>FOO_BAR</code>.</p>

<p>As for late-binding: a more modern name for that is <em>dynamic dispatch</em>. Static methods violate that, too, in fact, it's even in their very name: <em>static</em> methods.</p>

<p>Static methods break some very nice properties of object-orientation. For example, object-oriented systems are automatically capability-safe with objects acting as capabilities. Static methods (or really <em>any</em> statics, be that static state or static methods) break that property.</p>

<p>You can also execute every object in parallel in its own process, since they only communicate via messaging, thus providing some trivial concurrency. (Like <em>Actors</em>, basically, which shouldn't be too surprising, since Carl Hewitt created the Actor Model based on Smalltalk-71, and Alan Kay created Smalltalk-71 partially based on PLANNER, which in turn was created by Carl Hewitt. The close relationship between actors and objects is far from coincidental, in fact, they are essentially one and the same.) Again, statics (both static methods, and <em>especially</em> static state) break that nice property.</p>
"
"<p>I just installed ruby on rails on my new computer ( I was using instantrails before) and I'm trying to get everything setup.</p>

<p>Im running Windows 7. So I followed the instructions from this tutorial.</p>

<p><a href=""http://blogupstairs.com/ruby-on-rails/installing-ruby-on-rails-on-windows-7/"" rel=""nofollow"">http://blogupstairs.com/ruby-on-rails/installing-ruby-on-rails-on-windows-7/</a></p>

<p>The problem i'm guessing is step 3</p>

<p>""Add the newly installed bin directory to your path in your windows system : Open windows explorer-> right click the icon computer-> choose Properties -> in the contol panel Home, Click Advanced system settings and then click Envitonment Variables button->in the system variables click new and add new system variables like this :  Variable name : RUBY_HOME  , Variable Value : C:\Ruby, after that add it in to the path and add the bin after a semicolon to the “Path” variable like this : C:\Program Files\Common Files\Adobe\AGL;%JAVA_HOME%\bin;%ANDROID_HOME%\tools;%RUBY_HOME%\bin""</p>

<p>I set created the system variables but when I try to run script/generate in the main directory of my app I get the error</p>

<p>""Ruby: no such file or directory --script/generate""</p>

<p>I checked the apps directory and the script folder is in there.  How can I run the ""ruby script/generate"" commands from the control panel? </p>

<p>I was guessing it was something with the path but I dont know any ways to check to find out whats going wrong.</p>
","2988","","<p>In 99.99999% of all cases, if a computer tells you that it cannot find a file at a specific location, it is because that file is not at that specific location.</p>

<p>So, <em>is</em> there actually a file named <code>generate</code> in a directory named <code>script</code> in the current directory?</p>
"
"<p>Whenever I require a file in ruby or irb I get this error:</p>

<pre><code>LoadError: no such file to load -- (insert any filename).rb
    from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
    from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
    from (irb):1
    from /usr/bin/irb1.9.1:12:in `&lt;main&gt;'
</code></pre>

<p>It happens even if the file exists
I am using ruby1.9.1 and to my knowledge, I have not installed rubygems. I am running on Ubuntu 10.10 Maverick Meerkat. Please help, this problem is very annoying! Thanks in advance, ell.</p>

<p>EDIT: I forgot to say that no matter where the file is, even if its in the same directory and definately exists I always get this error.</p>
","2988","","<p>In Ruby 1.9.2, which I guess is the version you are using, the current directory is no longer in the <code>$LOAD_PATH</code>. If you want to <code>require</code> files relative to the path of the file that the <code>require</code> call is in, you should use <code>require_relative</code> instead.</p>

<p>If you <em>really</em> want to <code>require</code> files relative to the current directory, then you can add the current directory to the <code>$LOAD_PATH</code> like so:</p>

<pre><code>$LOAD_PATH &lt;&lt; '.'
</code></pre>

<p>However, this change was made for a reason, so you shouldn't do that lightly. After all, this will make your app behave more or less randomly, depending on what directory you just happened to be in, when you started the app. Worse, an attacker can get you to execute arbitrary code on his behalf if he can get you to run the app from a directory under his control.</p>
"
"<p>More and more gems I run into requires building ""native extensive"", such as RedCloth.  Are there tools that are open-source or free that is sufficient to do that?  I heard MS Visual Studio also has a free version.  Will that be enough to build native extensions?</p>
","2988","","<p>If you installed Ruby with the <a href=""http://RubyInstaller.Org/"" rel=""nofollow"">RubyInstaller</a> (as you should), then the <a href=""http://RubyInstaller.Org/add-ons/devkit/"" rel=""nofollow"">DevKit</a> has everything you need.</p>

<p>If you use the <a href=""ftp://FTP.Ruby-Lang.Org/pub/ruby/binaries/mswin32/"" rel=""nofollow"">obsolete MSVC6 builds</a>, then you need to install Microsoft Visual C++ 6.0, because newer versions of MSVC are incompatible. Good luck finding that, though, MSVC6 isn't even from this millenium.</p>
"
"<p><strong>Short version:</strong>  The default <code>inspect</code> method for a class displays the object's address.*  How can I do this in a custom <code>inspect</code> method of my own?</p>

<p>*(To be clear, I want the 8-digit hex number you would normally get from <code>inspect</code>.  I don't care about the actual memory address.  I'm just calling it a memory address because it <em>looks</em> like one.  I know Ruby is memory-safe.)</p>

<p><strong>Long version:</strong>  I have two classes, <code>Thing</code> and <code>ThingList</code>.  <code>ThingList</code> is a subclass of <code>Array</code> specifically designed to hold Things.  Due to the nature of Things and the way they are used in my program, Things have an instance variable <code>@container</code> that points back to the <code>ThingList</code> that holds the <code>Thing</code>.</p>

<p>It is possible for two Things to have exactly the same data. Therefore, when I'm debugging the application, the only way I can reliably differentiate between two Things is to use <code>inspect</code>, which displays their address.  When I <code>inspect</code> a <code>Thing</code>, however, I get pages upon pages of output because <code>inspect</code> will recursively inspect <code>@container</code>, causing every Thing in the list to be inspected as well!</p>

<p>All I need is the first part of that output.  How can I write a custom <code>inspect</code> method on <code>Thing</code> that will just display this?</p>

<pre><code>#&lt;Thing:0xb7727704&gt;
</code></pre>

<p><strong>EDIT:</strong>  I just realized that the default <code>to_s</code> does exactly this.  I didn't notice this earlier because I have a custom <code>to_s</code> that provides human-readable details about the object.</p>

<p>Assume that I cannot use <code>to_s</code>, and that I must write a custom <code>inspect</code>.</p>
","2988","","<p>This is impossible. There is no way in Ruby to get the memory address of an object, since Ruby is a memory-safe language which has (by design) no methods for accessing memory directly. In fact, in many implementations of Ruby, objects don't even <em>have</em> a memory address. And in most of the implementations that <em>do</em> map objects directly to memory, the memory address potentially changes after every garbage collection.</p>

<p>The reason why using the memory address as an identifier in current versions of MRI and YARV accidentally works, is because they have a crappy garbage collector implementation that never defragments memory. All other implementations have garbage collectors which <em>do</em> defragment memory, and thus move objects around in memory, thereby changing their address.</p>

<p>If you tie your implementation to the memory address, your code will only ever work on slow implementations with crappy garbage collectors. And it isn't even guaranteed that MRI and YARV will always have crappy garbage collectors, in fact, in both implementations the garbage collector has been identified as one of <em>the</em> major performance bottlenecks and it is safe to assume that there <em>will</em> be changes to the garbage collectors. There are already some major changes to YARV's garbage collector in the SVN, which will be part of YARV 1.9.3 and YARV 2.0.</p>

<p>If you want an ID for objects, use <code>Object#object_id</code>.</p>
"
"<p>I discovered the ""FizzBuzz"" question today at <a href=""http://www.codinghorror.com/blog/2007/02/why-cant-programmers-program.html"" rel=""nofollow"">coding horror</a>.  Great article.  However, something in one of the user-comments confused me --  here's the quote:</p>

<blockquote>
  <p>Geez guys - EVERY ONE of you who gave
  example code - EVERY ONE - hard coded
  the FIZZ and BUZZ conditions...</p>
</blockquote>

<p>It sounds to me like this poster is ridiculing people for ""hard-coding"" conditions, ie :</p>

<pre><code>if(i % 3 == 0)
...
</code></pre>

<p>What is point the poster is trying to make?  Is there another way to specify conditions in a program?</p>

<p>Thanks for taking the time!</p>

<p>Dan</p>

<blockquote>
  <p>the FIZZ and BUZZ conditions...</p>
</blockquote>
","2988","","<p>It's meant as a joke.</p>
"
"<p>here's a short question that my googling failed to deliver any clues on.</p>

<p>It seems to be pretty commonplace to use the word ""res"" for one of the indexes in function arguments. Its existence appears to be agnostic to whatever programming language you look at.</p>

<p>What does it stand for? A simple guess would be, ""resource"", perhaps? If this is spot on, it would be nice if someone who feels pedagogically inclined, would care to help me shed some light on this. What I don't grok, in particular, is when and why there's a use for the meaning, ""resource"" (granted that this is the actual meaning of ""res"").</p>

<p><strong>Edit 1:</strong> I'm providing a random example, this is from the <a href=""http://nodejs.org/"" rel=""nofollow"">NodeJS.org</a> homepage:</p>

<p><code>var http = require('http');<br/>
http.createServer(function (req, <strong>res</strong>) {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<strong>res</strong>.writeHead(200, {'Content-Type': 'text/plain'});<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<strong>res</strong>.end('Hello World\n');<br/>
}).listen(8124, ""127.0.0.1"");<br/>
console.log('Server running at <a href=""http://127.0.0.1:8124/"" rel=""nofollow"">http://127.0.0.1:8124/</a>');</code></p>

<p><strong>Edit 2:</strong> I first came across the ""res"" thing while working with a PHP backend developer on a fairly modded WP instance. At the time things were too hectic to really sort out what he meant in his quick explanation, but he seemed to scatter the word all around, in arguments and $res variable calls alike. It's obviously impossible to comment on individual programmers' style and preference of coding, but I'm mostly curious to know if there's some sort of untold consensus among programmers – and <em>if there's a single purpose</em> – using a so called ""res"" pointer. (Compare eg. with using <code>i</code> for ""iterator"" as often used in loops.)</p>
","2988","","<p>A HTTP transaction consists of a <em>request</em> from the client to the server and a <em>response</em> from the server to the client.</p>
"
"<p>Does anyone know some free AOT Java compiler? I have found just one - <a href=""http://gcc.gnu.org/java/"" rel=""nofollow"">http://gcc.gnu.org/java/</a>. </p>
","2988","","<p>Oracle's JDK as well as OpenJDK both ship with an AOT Java compiler called <code>javac</code>.</p>
"
"<p>Same in Ruby 1.8.7 and 1.9.2:</p>

<pre><code>$ irb

ruby-1.8.7-p302 &gt; foo.nil?
NameError: undefined local variable or method `foo' for #&lt;Object:0x3794c&gt;
    from (irb):1

ruby-1.8.7-p302 &gt; @bar.nil?
 =&gt; true 

ruby-1.8.7-p302 &gt; @@wah.nil?
NameError: uninitialized class variable @@wah in Object
    from (irb):3
</code></pre>

<p>why the instance variable treated differently than a local and class variable?</p>
","2988","","<p>In Ruby, most uninitialized or even non-existing variables evaluate to <code>nil</code>. This is true for local variables, instance variables and global variables:</p>

<pre><code>defined? foo       #=&gt; nil
local_variables    #=&gt; []
if false
  foo = 42
end
defined? foo       #=&gt; 'local-variable'
local_variables    #=&gt; [:foo]
foo                #=&gt; nil
foo.nil?           #=&gt; true

defined? @bar      #=&gt; nil
instance_variables #=&gt; []
@bar               #=&gt; nil
@bar.nil?          #=&gt; true
# warning: instance variable @bar not initialized

defined? $baz      #=&gt; nil
$baz               #=&gt; nil
# warning: global variable `$baz' not initialized
$baz.nil?          #=&gt; true
# warning: global variable `$baz' not initialized
</code></pre>

<p>It is, however, not true for class hierarchy variables and constants:</p>

<pre><code>defined? @@wah     #=&gt; nil
@@wah
# NameError: uninitialized class variable @@wah in Object

defined? QUUX      #=&gt; nil
QUUX
# NameError: uninitialized constant Object::QUUX
</code></pre>

<p>This is a red herring:</p>

<pre><code>defined? fnord     #=&gt; nil
local_variables    #=&gt; []
fnord
# NameError: undefined local variable or method `fnord' for main:Object
</code></pre>

<p>The reason why you get an error here is <em>not</em> that unitialized local variables don't evaluate to <code>nil</code>, it is that <code>fnord</code> is ambiguous: it could be <em>either</em> an argument-less message send to the default receiver (i.e. equivalent to <code>self.fnord()</code>) <em>or</em> an access to the local variable <code>fnord</code>.</p>

<p>In order to disambiguate that, you need to add a receiver or an argument list (even if empty) to tell Ruby that it is a message send:</p>

<pre><code>self.fnord
# NoMethodError: undefined method `fnord' for main:Object
fnord()
# NoMethodError: undefined method `fnord' for main:Object
</code></pre>

<p>or make sure that the <em>parser</em> (<em>not</em> the evaluator) parses (<em>not</em> executes) an assignment before the usage, to tell Ruby that it is a local variable:</p>

<pre><code>if false
  fnord = 42
end
fnord              #=&gt; nil
</code></pre>

<blockquote>
  <p>why the instance variable treated differently than a local and class variable?</p>
</blockquote>

<p>It's not, actually. It's treated the same as a local variable. The class hierarchy variable is the one that behaves differently, local variables, instance variables and global variables all behave the same.</p>

<blockquote>
  <p>is there other reasons &hellip; can't class variables behave like that too?</p>
</blockquote>

<p>I don't know. For instance variables it is very convenient, since unlike in Java, for example, where instance variables are declared in the class definition und thus always exist for every instance of the class, in Ruby, instance variables aren't declared anywhere. They just magically spring into existence, as soon as they are assigned. Since instance variables aren't necessarily guaranteed to exist, writing methods that use instance variables would be a pain if they threw exceptions.</p>

<p>Why class hierarchy variables are different, I have no idea. Maybe it's because nobody uses them anyway, or because they generally tend to be initialized in the class body and simply aren't accessed when they are not initialized.</p>
"
"<p>I'm completely muddled up about what code runs at runtime and what code runs at parsetime.  With objects especially, I don't understand what parts of the object run before initialization, what runs at initialization and what runs sometime after.</p>

<p>Since I'm completely confused, I'm not sure how complicated this question is. If it's not just a simple rule or two that answers the question, is there perhaps an article or cheat sheet somewhere?  Google is giving me squat.</p>

<p>EDIT: It seems that parsetime is the wrong word.  Gareth understood what I meant.  I guess I should have formulated the question ""In the 2-pass read, what gets read the first pass and what gets read the second pass?""  Does that question make more sense?</p>
","2988","","<p>While JavaScript's direct ancestor is Scheme, JavaScript didn't inherit macros, so the answer is fairly simple: there is <em>never</em> any code run during parse time.</p>
"
"<p>Does anybody why I can write this:</p>

<pre><code>ruby-1.8.7-p302 &gt; a = %w( a b c)
 =&gt; [""a"", ""b"", ""c""] 
ruby-1.8.7-p302 &gt; while (i = a.shift) do; puts i ; end
a
b
c
 =&gt; nil 
</code></pre>

<p>Which looks like passing a block to while.
And not:</p>

<pre><code>while(i = a.shift) { puts i; }
</code></pre>

<p>Is it because the ""do"" of the while syntax is just syntaxic sugar and as nothing to do with the ""do"" of a block?</p>
","2988","","<blockquote>
  <p>Is it because the <code>do</code> of the <code>while</code> syntax is just syntaxic sugar and as nothing to do with the <code>do</code> of a block?</p>
</blockquote>

<p>More or less, yes. It's not syntactic sugar, it's simply a built-in language construct, like <code>def</code> or <code>class</code>, as @meagar already wrote.</p>

<p>It has nothing to do with the <code>do</code> of a block, except that keywords are expensive and so reusing keywords makes sense. (By ""expensive"" I mean that they limit the programmer in his expressiveness.)</p>

<p>In a <code>while</code> loop, there are two ways to separate the block from the condition:</p>

<ol>
<li>the <code>do</code> keyword and</li>
<li>an expression separator.</li>
</ol>

<p>There are, in turn, two different expression separators in Ruby:</p>

<ol>
<li>the semicolon <code>;</code> and</li>
<li>a newline</li>
</ol>

<p>So, all three of the following are valid:</p>

<pre><code>while i = a.shift do puts i end # do

while i = a.shift; puts i end   # semicolon

while i = a.shift
  puts i end                    # newline
</code></pre>

<p>[Obviously, that last one wouldn't be written that way, you would put the <code>end</code> on a new line, dedented to match the <code>while</code>. I just wanted to demonstrate what is the minimum needed to separate the parts of the <code>while</code> loop.]</p>

<p>By the way: it is highly un-idiomatic to put the condition in parentheses. There's also a lot of superfluous semicolons in your code. And the variable name <code>i</code> is usually reserved for an index, not an element. (I normally use <code>el</code> for generic elements, but I much prefer more semantic names.)</p>

<p>It is also highly un-idiomatic to iterate a collection manually. Your code would be much better written as</p>

<pre><code>a.each(&amp;method(:puts)).clear
</code></pre>

<p>Not only is it much easier to understand what this does (print all elements of the array and delete all items from it), it is also much easier to write (there is no way to get the termination condition wrong, or screw up any assignments). It also happens to be more efficient: your version is &Theta;(n<sup>2</sup>), this one is &Theta;(n).</p>

<p>And actually, that's not really how you would write it, either, because <code>Kernel#puts</code> already implements that behavior, anyway. So, what you would <em>really</em> write is this</p>

<pre><code>puts a
a.clear
</code></pre>

<p>or maybe this</p>

<pre><code>a.tap(&amp;method(:puts)).clear
</code></pre>

<p>[Note: this very last one is not 100% equivalent. It prints a newline for an empty array, all the other ones print nothing.]</p>

<p>Simple. Clear. Concise. Expressive. Fast.</p>

<p>Compare that to:</p>

<pre><code>while (i = a.shift) do; puts i ; end
</code></pre>

<p>I actually had to run that multiple times to be 100% clear what it does.</p>
"
"<p>Developers need to write some manuals. Word sucks so we're killing it as fast as possible.</p>

<p>So, what are good tools that people actually use?</p>

<p>I'm perfectly ok with, and prefer, some kind of markup. LateX is a bit over the top and IIRC, rather tricky to modify the output in.</p>

<p>I've looked at Sphinx (seems nice, has nice PDF, and we use Python already) and docbook (XML, ugh) and am leaning to the former. I'm sure there are other suggestions and am willing to hear them.</p>

<p>Note, this is not an exact duplicate of <a href=""http://stackoverflow.com/questions/371654/application-not-a-markup-language-for-producing-a-user-manual"">http://stackoverflow.com/questions/371654/application-not-a-markup-language-for-producing-a-user-manual</a>. It's rather the counterpart of it. :)</p>

<p><strong>Update</strong>: Not for APIs. We use Doxygen for that already. This is pure end-user functionality that needs to be described in a few books/booklets.</p>
","2988","","<p>Steve Streeting, the (former) project lead for OGRE, recently wrote an article about his new documentation toolchain which starts out with ASCIIDoc and ends up as PDF: <a href=""http://SteveStreeting.Com/2010/03/07/building-a-new-technical-documentation-tool-chain/""><em>Building a new technical documentation tool chain</em></a>. It includes full setup instructions for ASCIIDoc, DocBook and FOP on Windows.</p>
"
"<p>As the title states, does Ruby allow Cartesian product types? I can't find anything on it anywhere.</p>

<p>Thanks</p>
","2988","","<p>Ruby doesn't allow types <em>at all</em>, at least not in the sense that you seem to be using the word ""type"". Therefore, it obviously doesn't support product types, either.</p>

<p>Ruby is a so-called ""dynamically typed"" language (using the pragmatic, programmer-jargon definition of the word ""type"") or an untyped language (using the mathematical, type-theoretic definition), so talking about ""product types"" simply doesn't make sense at all.</p>

<p>Or, if you want to, you can see a dynamically typed language as a statically typed language with only a single type which is the sum type of all dynamic types.</p>

<p>However, you <em>can</em> obviously construct <em>values</em> that <em>would</em> have a product type if Ruby had types <em>at all</em>:</p>

<pre><code>class Tuple
  include Enumerable; include Comparable

  class &lt;&lt; self
    alias_method :[], :new

    def call(length)
      class_name = :""Tuple#{length}""
      return const_get class_name if const_defined? class_name
      const_set class_name, Class.new(self) {
        (@length = length).times do |i| define_method :""_#{i+1}"" do @ary[i] end end
      }
    end
  end

  def to_s; ""(#{@ary.join(', ')})"" end
  def inspect; ""#&lt;#{self.class} (#{@ary.map(&amp;:inspect).join(', ')})&gt;"" end
  def to_a; @ary.dup end
  def [](*args) @ary[*args] end
  def each(*args, &amp;block) @ary.each(*args, &amp;block) end

  def &lt;=&gt;(other)
    raise TypeError unless other.is_a? self.class
    raise TypeError unless each_with_index.all? {|el, i| other.instance_variable_get(:@ary)[i].instance_of?(el.class) }
    map.with_index {|el, i| el &lt;=&gt; other.instance_variable_get(:@ary)[i] }.find(0) {|cmp| !cmp.zero? }
  end

  def initialize(*args)
    raise ArgumentError unless args.length == self.class.instance_variable_get(:@length)
    (@ary = args).freeze
  end
end
</code></pre>

<p>This will give you a way to construct n-Tuples, which of course are special cases of product types. For example, this:</p>

<pre><code>t3 = Tuple.(3)[1, :two, 'three']
</code></pre>

<p>will construct a triple with the tuple type <code>(Fixnum, Symbol, String)</code>, which is a special case of the product type <code>Fixnum × Symbol × String</code>. But there is no way to represent and/or <em>enforce</em> those types in Ruby.</p>

<p>If you want to look deeper into type systems for Ruby, the <a href=""http://WWW.CS.UMD.Edu/projects/PL/druby/"" rel=""nofollow"">Diamondback Ruby</a> project is a good starting point. It includes <em>tuple types</em>, for example, which are an instance of product types.</p>
"
"<p>Is it possible to add a core method to the Module class in Ruby?  I want to do something like this (messed around with the idea yesterday, just whipped this together in a second):</p>

<pre><code>module MyModule
  base do
    has_many :something
  end
end

# implementation, doesn't work though... reason for the question
Module.class_eval do
  def self.base(&amp;block)
    class_eval do
      def self.included(base)
        base.class_eval(&amp;block)
      end
    end
  end
end
</code></pre>

<p>If I create a module, I can't access that method:</p>

<pre><code>$ module User; end
$ User.base
NoMethodError: undefined method `base' for User:Module
</code></pre>

<p>Any ways to do this?</p>

<p><strong>Update</strong></p>

<p>This works!  Thanks @Jörg W Mittag.  Makes it much easier to read for Rails <code>has_many</code> and such:</p>

<pre><code>class Module
  def base(&amp;block)
    metaclass = class &lt;&lt; self; self; end
    # add the method using define_method instead of def x.say so we can use a closure
    metaclass.send :define_method, :included do |base|
      base.class_eval(&amp;block) unless block.nil?
      base.class_eval &lt;&lt;-EOF
        extend  #{name}::ClassMethods
        include #{name}::InstanceMethods
      EOF
    end
    block
  end
end
</code></pre>

<p>Like this example:</p>

<pre><code>module UserRoleBehavior
  base do
    has_many :user_roles
    has_many :roles, :through =&gt; :user_roles
  end

  module ClassMethods
    # ...
  end

  module InstanceMethods
    # ...
  end
end

class User &lt; ActiveRecord::Base
  include UserRoleBehavior
end
</code></pre>

<p>Cheers!</p>
","2988","","<p>If you want to add a method to the <code>Module</code> class, you simply add a method to the <code>Module</code> class:</p>

<pre><code>class Module
  def base
    # ...
  end
end
</code></pre>

<p>In your code, you were using</p>

<pre><code>def self.base
  # ...
end
</code></pre>

<p>This syntax (<code>def foo.bar</code>) is the syntax for adding a singleton method named <code>bar</code> to the object referenced by <code>foo</code>, which is actually really just adding a regular instance method to the singleton class of the object referenced by <code>foo</code>.</p>

<p>So, in your code you were adding a singleton method named <code>base</code> to the object referenced by <code>self</code>, which inside of <code>class_eval</code> is the class object itself, in this case <code>Module</code>. The reason why singleton methods are <em>called</em> singleton methods, is because they only exist on a single object. In your case, the method <code>base</code> exists only on the object <code>Module</code>, not on any other object, and in particular not on the object <code>User</code>. In other words: the <em>only</em> way to call the <code>base</code> method is as <code>Module.base</code>, because that is the only object that you added it to.</p>

<p>It took me quite a while to wade through your three(!) nested <code>class_eval</code>s to find out what it is that you are trying to achieve. Which wasn't made easier by the fact that your code doesn't even actually work, even <em>if</em> defined on the correct class, because <code>def</code> creates a new scope, and so <code>block</code> is undefined in the innermost <code>class_eval</code>.</p>

<p>Apparently, what you are trying to do is this:</p>

<pre><code>class Module
  def base(&amp;block)
    define_singleton_method(:included) do |base|
      base.class_eval(&amp;block)
    end
  end
end
</code></pre>
"
"<p>In java ,or common</p>

<ol>
<li>Whether java is fully object oriented
or partially?</li>
<li>Why its called as  fully object oriented or partially?</li>
<li>What is Object oriented programming?</li>
<li><strong>What is a class ?</strong></li>
<li><strong>What is object?</strong></li>
</ol>

<p>Please can anyone explain simple realtime example?</p>

<p>i could not understand technically.......
thanks.......</p>
","2988","","<blockquote>
  <p>Whether java is fully object oriented or partially?</p>
</blockquote>

<p>That depends on your definition of ""object-oriented"".</p>

<p>For example, according to Alan Kay, who coined the word ""object-oriented"", the only object-oriented languages today are Smalltalk and Lisp. I assume that he probably also would include Self, Newspeak, Io, Ioke, Seph and Erlang, but definitely not Java.</p>

<blockquote>
  <p>Why its called as  fully object oriented or partially?</p>
</blockquote>

<p>You would have to ask the people who call it that.</p>

<p>In the case of Alan Kay, it is because it is missing the most important concept of object-orientation: Messaging.</p>

<blockquote>
  <p>What is Object oriented programming?</p>
</blockquote>

<p>Programming with messages.</p>

<blockquote>
  <p><strong>What is a class ?</strong></p>
</blockquote>

<p>Classes were an initial attempt at implementing inheritance in the 1960s. We have since learnt that we don't actually need them.</p>

<blockquote>
  <p><strong>What is object?</strong></p>
</blockquote>

<p>An object is an entity that can send and receive messages. You can think of it as a little computer on a network or as a cell in a complex organism.</p>
"
"<p>I have an algorithm, and I want to figure it what it does. I'm sure some of you can just look at this and tell me what it does, but I've been looking at it for half an hour and I'm still not sure. It just gets messy when I try to play with it. What are your techniques for breaking down an algoritm like this? How do I analyze stuff like this and know whats going on?</p>

<p>My guess is its sorting the numbers from smallest to biggest, but I'm not too sure.</p>

<pre><code>1. mystery(a1 , a2 , . . . an : array of real numbers)
    2. k = 1
    3. bk = a1
    4. for i = 2 to n
        5. c = 0
        6. for j = 1 to i − 1
            7. c = aj + c
        8. if (ai ≥ c)
            9. k = k + 1
           10. bk = ai
    11. return b1 , b2 , . . . , bk
</code></pre>

<p>Here's an equivalent I tried to write in Java, but I'm not sure if I translated properly:</p>

<pre><code>public int[] foo(int[] a) {
        int k=1;
        int nSize=10;
        int[] b=new int[nSize];
        b[k]=a[1];
        for (int i=2;i&lt;a.length;){
            int c=0;
            for (int j=1;j&lt;i-1;)
                c=a[j]+c;
            if (a[i]&gt;=c){
                k=k+1;
                b[k]=a[i];
</code></pre>
","2988","","<pre><code>def funct(*a)
  sum = 0
  a.select {|el| (el &gt;= sum).tap { sum += el }}
end
</code></pre>

<p>Srsly? Who invents those homework questions?</p>

<p>By the way: since this is doing both a <code>scan</code> and a <code>filter</code> at the same time, and the <code>filter</code> depends on the <code>scan</code>, which language has the necessary features to express this succinctly in such a way that the sequence is only traversed once?</p>
"
"<p>What browsers / engines already support ES5 [strict]? </p>
","2988","","<p>AFAIK, the only implementation of ECMAScript 5 is <a href=""http://BESEN.SourceForge.Net/"" rel=""nofollow"">BESEN</a>. It's a bit disappointing, really. BESEN was created from scratch, by a single developer, in just a couple of weeks. Google, Microsoft, Apple, Mozilla and Opera on the other hand, with all their developers, all their money, haven't been able to provide an implementation after almost <em>11 months</em>. And that is <em>despite</em> the fact that they have dozens of developers, have an already working implementation as a base to start from, were a part of the standardization process from day one (and thus had access to the specs long before the author of BESEN did), <em>and</em> most of the features in the ES5 specification were taken from <em>already</em> existing implementations in the browsers.</p>

<p>AFAIK, the <em>only</em> two features that in ECMAScript 5 that were not already part of JavaScript were the Properties API and Strict Mode.</p>
"
"<p>A colleague of mine claims that Microsoft paid the developer of NUnit to develop MSTest. I have not been able to find any information that backs this claim up.</p>

<p>Is this true? What is the history of MSTest?</p>
","2988","","<p>According to <a href=""http://Mtelligent.Com/journal/2008/7/1/automated-testing-with-nunit-mstest-mbunit-and-xunitnet.html"" rel=""nofollow"">some random comment</a> (scroll down to the very end) by some semi-anonymous random dude on an insignificant blog post somewhere on the intarwebz, this is not true.</p>

<p>And you know you can trust this info, since it came from the intarwebz!</p>
"
"<p>I have used XML in the past, but it is very verbose and clunky. We are currently using YAML, but I am finding that most developers have alot of trouble with the whitespace. Is there a YAML like format that is whitespace insensitive, but not as verbose as XML?</p>
","2988","","<p>You don't <em>have</em> to use the whitespace syntax in <a href=""http://YAML.Org/"">YAML</a>. All the datastructures also have non-whitespace alternatives, e.g. sequences <code>[1, 2, 3]</code> and maps <code>{ key: value, k: v }</code>. This is called <a href=""http://YAML.Org/spec/1.2/spec.html#id2790088""><em>flow style</em></a> as opposed to <em>block style</em>.</p>

<p>An alternative might be <a href=""http://JSON.Org/"">JSON</a>, which is actually a subset of YAML. It's basically YAML without block style and without extensibility.</p>

<p>Standard Lisp list syntax (list delimited by parentheses, elements separated by whitespace) is also a very nice format.</p>
"
"<p>I have taken this example <em>exactly</em> from the Ruby Cookbook.  Unfortunately for me, like a whole lot of the examples in that book, this one does not work:</p>

<p>my file (Find.rb - saved both locally and to Ruby\bin):</p>

<pre><code>require 'find'

    module Find
     def match(*paths)
      matched=[]
      find(*paths) { |path| matched &lt;&lt; path if yield path }
      return matched
     end
     module_function :match
    end
</code></pre>

<p>I try to call it this way from IRB, according to the example the book provides:</p>

<pre><code>irb(main):002:0&gt; require 'Find'
=&gt; false

irb(main):003:0&gt; Find.match(""./"") { |p| ext = p[-4...p.size]; ext &amp;&amp; ext.downcase == ""mp3"" }
</code></pre>

<p>It SHOULD return a list of mp3 files in my recursive directory.  Instead, it does this:</p>

<pre><code>NoMethodError: undefined method `match' for Find:Module
        from (irb):3
        from C:/Ruby192/bin/irb:12:in `&lt;main&gt;'
</code></pre>

<p>What gives?  I'm new at this (although I MUST say that I'm farther along with Python, and much better at it!).</p>

<p>How can I get IRB to use my method?</p>
","2988","","<p>The only explanation is that the code you posted is not the code you are running, since both carefully reading it and simply cut&amp;paste&amp;running it shows absolutely no problems whatsoever.</p>
"
"<p>How to change all the keys of a hash by a new set of given keys ? Is there a way to do that elegantly?</p>
","2988","","<p>Assuming you have a <code>Hash</code> which maps old keys to new keys, you could do something like</p>

<pre><code>Hash[hsh.map {|k, v| [key_map[k], v] }]
</code></pre>
"
"<p>Does there exist anything like CLOS (Common Lisp Object System) for Clojure?</p>
","2988","","<p>Clojure itself doesn't have an object system, for two reasons:</p>

<ol>
<li>Clojure is specifically designed to be hosted on an object-oriented platform and it then simply absorbs the underlying platform's object system. I.e. ClojureJVM has the JVM object system, ClojureCLR has the CLI object system, ClojureScript has the ECMAScript object system, and so on.</li>
<li>Rich Hickey hates objects.</li>
</ol>

<p>But, you <em>can</em> obviously implement an object system in Clojure. Clojure is, after all, Turing-complete.</p>

<p><a href=""http://MikelEvins.Com/"" rel=""nofollow"">Mikel Evins</a> is working on a new approach to OO which he calls <a href=""https://GitHub.Com/MikelEvins/Categories/"" rel=""nofollow""><em>Categories</em></a>. He has implementations for several Lisps, including Clojure (although not all the ports are guaranteed to be up-to-date all the time).</p>

<p>Categories is slowly being subsumed by <a href=""http://BardCode.Net/"" rel=""nofollow"">Bard</a>, a new Lisp dialect that Mikel is designing, which has Categories built in. (Which then, in turn, may become the implementation language for <a href=""http://Bywicket.Com/users/mikel/weblog/fbc2a/Closos.html"" rel=""nofollow"">Closos</a>, an idea Mikel had for how to design an operating system.)</p>
"
"<p>There are claims that Scala's type system is Turing complete. My questions are:</p>

<ol>
<li><p>Is there a formal proof for this?</p></li>
<li><p>How would a simple computation look like in the Scala type system?</p></li>
<li><p>Is this of any benefit to Scala - the language? Is this making Scala more ""powerful"" in some way compared languages without a Turing complete type system?</p></li>
</ol>

<p>I guess this applies to languages and type systems in general.</p>
","2988","","<p>There is a blog post somewhere with a type-level implementation of the SKI combinator calculus, which is known to be Turing-complete.</p>

<p>Turing-complete type systems have basically the same benefits and drawbacks that Turing-complete languages have: you can do anything, but you can prove very little. In particular, you cannot prove that you will actually eventually do something.</p>

<p>One example of type-level computation are the new type-preserving collection transformers in Scala 2.8. In Scala 2.8, methods like <code>map</code>, <code>filter</code> and so on are guaranteed to return a collection of the same type that they were called on. So, if you <code>filter</code> a <code>Set[Int]</code>, you get back a <code>Set[Int]</code> and if you <code>map</code> a <code>List[String]</code> you get back a <code>List[Whatever the return type of the anonymous function is]</code>.</p>

<p>Now, as you can see, <code>map</code> can actually transform the element type. So, what happens if the new element type cannot be represented with the original collection type? Example: a <code>BitSet</code> can only contain fixed-width integers. So, what happens if you have a <code>BitSet[Short]</code> and you map each number to its string representation?</p>

<pre><code>someBitSet map { _.toString() }
</code></pre>

<p>The result <em>would</em> be a <code>BitSet[String]</code>, but that's impossible. So, Scala chooses the most derived supertype of <code>BitSet</code>, which can hold a <code>String</code>, which in this case is a <code>Set[String]</code>.</p>

<p>All of this computation is going on during <em>compile time</em>, or more precisely during <em>type checking time</em>, using type-level functions. Thus, it is statically guaranteed to be type-safe, even though the types are actually computed and thus not known at design time.</p>
"
"<p>In OOP, there are entities (e.g. Person) which has attributes (e.g. name, address, etc) and it has methods. How do you describe <code>new</code>? Is it a method or just special token to bring an abstract entity to real one?</p>
","2988","","<p>In most object-oriented languages, <code>new</code> is simply a convention for naming a factory method. But it's only one of many conventions.</p>

<p>In Ruby, for example, it is conventional to name the factory method <code>[]</code> for collection classes. In Python, classes are simply their own factories. In Io, the factory method is generally called <code>clone</code>, in Ioke and Seph it is called <code>mimic</code>.</p>

<p>In Smalltalk, factory methods often have more descriptive names than just <code>new:</code>. Something like <code>fromList:</code> or <code>with:</code>.</p>
"
"<p>I'm just wondering what editors you know which are ""scriptable"". E.g take an Emacs, one can really say you can do everything from within the editor: writing,reading, programming. All with the  ""scripting language"" Emacs-Lisp. What other editors you know are out there as scriptable? </p>

<p>Do you know let's say an editor scriptable in Perl, Ruby or any other more C-like  language?</p>
","2988","","<p><a href=""http://Haskell.Org/haskellwiki/Yi"" rel=""nofollow"">Yi</a> is the Haskell equivalent to Emacs. It is specifically designed along the same lines as Emacs: everything is scriptable in Haskell, the editor itself is more or less just a Haskell script, and there is only a very small, very generic, non-scriptable core. In contrast to most Emacs implementations, however, which use a different language for the core than for the scripts, Yi's core is also implemented in Haskell.</p>
"
"<p>I'm just wondering what editors you know which are ""scriptable"". E.g take an Emacs, one can really say you can do everything from within the editor: writing,reading, programming. All with the  ""scripting language"" Emacs-Lisp. What other editors you know are out there as scriptable? </p>

<p>Do you know let's say an editor scriptable in Perl, Ruby or any other more C-like  language?</p>
","2988","","<p><a href=""http://RedcarEditor.Com/"" rel=""nofollow"">Redcar</a> is a text editor written in (mostly) Ruby, which is fully scriptable in Ruby. It is not nearly as flexible as Emacs, but more on the level of TextMate.</p>
"
"<p>what is the difference between typecasting and typeconversion in c++ or java ?</p>
","2988","","<p>Maybe an example can help:</p>

<ul>
<li>If you <em>cast</em> <code>33</code> to a string, you get <code>""!""</code>.</li>
<li>If you <em>convert</em> <code>33</code> to a string, you get <code>""33""</code>.</li>
</ul>

<p>[Note: this example makes all sorts of not-necessarily-valid assumptions about the encodings and in-memory representations of numbers and strings, but I hope the mechanism is clear.]</p>
"
"<p>Can you explain why the developer is using <code>class &lt;&lt; self</code> to add a methods to the base class?</p>

<p><a href=""http://github.com/carlosparamio/geoplanet/blob/master/lib/geoplanet/base.rb"">base.rb from the GeoPlanet Gem</a></p>

<pre><code>module GeoPlanet
  class Base
    class &lt;&lt; self
      def build_url(resource_path, options = {})
    end
  end
end
</code></pre>
","2988","","<p>Because he doesn't know that</p>

<pre><code>def GeoPlanet::Base.build_url(resource_path, options = {}) end
</code></pre>

<p>would work just as well?</p>

<p>Well, they aren't 100% equivalent: if <code>GeoPlanet</code> doesn't exist, then the original snippet will create the module, but my version will raise a <code>NameError</code>. To work around that, you'd need to do this:</p>

<pre><code>module GeoPlanet
  def Base.build_url(resource_path, options = {}) end
end
</code></pre>

<p>Which will of course raise a <code>NameError</code>, if <code>Base</code> doesn't exist. To work around <em>that</em>, you'd do:</p>

<pre><code>module GeoPlanet
  class Base
    def self.build_url(resource_path, options = {}) end
  end
end
</code></pre>

<p>However you look at it, there's no <em>need</em> to use the singleton class syntax. Some people just simply prefer it.</p>
"
"<p>I'm trying to use <a href=""http://treetop.rubyforge.org/"">Treetop</a> to parse an ERB file.  I need to be able to handle lines like the following:</p>

<pre><code>&lt;% ruby_code_here %&gt;
&lt;%= other_ruby_code %&gt;
</code></pre>

<p>Since Treetop is written in Ruby, and you write Treetop grammars in Ruby, is there already some existing way in Treetop to say ""hey, look for Ruby code here, and give me its breakdown"" without me having to write out separate rules to handle all parts of the Ruby language?  I'm looking for a way, in my <code>.treetop</code> grammar file, to have something like:</p>

<pre><code>rule erb_tag
  ""&lt;%"" ruby_code ""%&gt;"" {
    def content
      ...
    end
  }
end
</code></pre>

<p>Where <code>ruby_code</code> is handled by some rules that Treetop provides.</p>

<p><strong>Edit:</strong> <a href=""http://stackoverflow.com/questions/2588967/library-to-parse-erb-files"">someone else</a> parsed ERB using Ruby-lex, but I got errors trying to reproduce what he did.  The rlex program did not produce a full class when it generated the parser class.</p>

<p><strong>Edit:</strong> right, so you lot are depressing, but thanks for the info.  :)  For my Master's project, I'm writing a test case generator that needs to work with ERB as input.  Fortunately, for my purposes, I only need to recognize a few things in the ERB code, such as <code>if</code> statements and other conditionals as well as loops.  I think I can come up with Treetop grammar to match that, with the caveat that it isn't complete for Ruby.</p>
","2988","","<p>As far as I know, nobody has yet created a Treetop grammar for Ruby. (In fact, nobody has ever been able to create <em>any</em> grammar for Ruby other than the YACC grammar that ships with MRI and YARV.) I know that the author of Treetop has been working on one for several years, but it's not a trivial undertaking. Getting the ANTLR grammar which is used in XRuby right took about 5 years, and it is still not fully compliant.</p>

<p>Ruby's syntax is <em>insanely</em>, mindbogglingly complex.</p>
"
"<p>Can somebody explain why multiplying by 100 here gives a less accurate result but multiplying by 10 twice gives a more accurate result?</p>

<pre><code>± % sc
Loading development environment (Rails 3.0.1)
&gt;&gt; 129.95 * 100
12994.999999999998
&gt;&gt; 129.95*10
1299.5
&gt;&gt; 129.95*10*10
12995.0
</code></pre>
","2988","","<p>First off: you are looking at the string representation of the result, not the actual result itself. If you <em>really</em> want to compare the two results, you should format both results explicitly, using <code>String#%</code> and you should format both results the same way.</p>

<p>Secondly, that's just how binary floating point numbers work. They are inexact, they are finite and they are binary. All three mean that you get rounding errors, which generally look totally random, unless you happen to have memorized the entirety of IEEE754 and can recite it backwards in your sleep.</p>
"
"<blockquote>
  <p><strong>Possible Duplicates:</strong><br>
  <a href=""http://stackoverflow.com/questions/745192/what-is-a-smoke-testing-and-what-will-it-do-for-me"">What is a smoke testing and what will it do for me?</a><br>
  <a href=""http://stackoverflow.com/questions/4055733/what-is-a-sanity-test-check"">What is a sanity test/check</a>  </p>
</blockquote>



<p>What is a smoke test and why is it useful?</p>
","2988","","<p>""Smoke test"" is a term that comes from electrical engineering. It refers to a <em>very</em> basic, very simple test, where you just plug the device in and see if smoke comes out.</p>

<p>It doesn't tell you anything about whether or not the device actually works. The only thing it tells you is that it is not <em>completely</em> broken.</p>

<p>It is usually used as a time-saving step before the more thorough regression/integration/acceptance tests, since there is no point in running the full testsuite, if the thing catches fire anyway.</p>

<p>In programming, the term is used in the same sense: it is a very shallow, simple test that checks for some simple properties like: does the program even start? Can it print its help message? If those simple things don't work, there is no point in even attempting to run the full testsuite, which can sometimes take minutes or even hours.</p>
"
"<p>Is the concept of a <strong>strict</strong> modularity provided by OSGi frameworks in Java, available in any other programming language?</p>

<p>I felt the concept of <code>friend</code> classes in C++ is somewhat similar, but it seems to be a much more granular control. I'm not sure if the <code>friend</code> concept can be applied at a <code>namespace</code> level.  </p>

<p>In other languages I have no idea, and would really appreciate if someone can provide some insight here.</p>
","2988","","<p>There are plenty of languages that have module systems. Three that spring to mind immediately are the module system of Standard ML, the unit system of Racket and the module system of Newspeak.</p>

<p>Those three are by some people regarded as either more powerful or better designed (or both) than OSGi or similar systems.</p>

<p>I specifically like the Newspeak module system, because of its incredible simplicity. In fact, Newspeak doesn't even really <em>have</em> a module system, it just turns out that if you take object-orientation <em>seriously</em>, classes automatically become module definitions, and objects automatically become modules.</p>

<p>This is a refreshing contrast to other module systems like Standard ML's, Racket's or OSGi's, which typically are <em>insanely</em> complex. Here is a nice and funny quote by Jonathan Shapiro, the designer of the BitC programming language about designing a module system:</p>

<blockquote>
  <p>The ML module system is fully understood only by David MacQueen, and only on alternating weeks. The Scheme module system required the combined brilliance of Matt Flatt and Matthias Felleisen (and six revisions of the language standard) to achieve.</p>
</blockquote>

<p>And when Simon Peyton Jones, one of the designers of Haskell, was asked why Haskell has only such a basic module system, he said that they didn't feel they were smart enough to design a real one. Let that sink in ... The <em>designers of Haskell</em>. <em>Not smart</em>.</p>

<p>Newspeak's design is utterly brilliant: in object-orientation, everything is a message send (in Java-speak that's a (non-static) method call, in C++-speak that's a virtual function call). In most object-oriented languages that is unfortunately not true. You have variables, fields, constants, non-virtual functions, static methods, a class dictionary, a package dictionary, and so on. Accessing any of those is not done via a message send, but via some other means.</p>

<p>Not so on Newspeak: in Newspeak, everything is a message send. Even the superclass of a class is a message send. (I.e.: if I write <code>class Foo extends Bar</code> in Newspeak, then <code>Bar</code> is <em>not</em> a reference to the class itself, it is just calling a method named <code>Bar</code>, which will then return a class. Which BTW means that you can override superclasses in subclasses, which is pretty mindblowing.)</p>

<p>This means that top-level classes cannot have a superclass: since the superclass is message send, where would you send it to? In a top-level class, you can only call methods that are defined in the class itself: you cannot call methods from the enclosing scope, because in a top-level class, there <em>is no</em> enclosing scope. And you cannot call methods inherited from a superclass, because in order to <em>declare</em> a superclass, you would need to call a method, but you can only call methods defined <em>inside</em> the class.</p>

<p>Now, this is isn't very useful, so classes have class initializers, which allow you to inject objects (and classes are objects) into a class. And this is the <em>only</em> way to inject dependencies into the class, ergo the class initializer functions as a module dependency specification.</p>

<p>On the flip side, if the only way to do something is via message sending, then the internals of a class are automatically private, its functionality can only be achieved by calling public methods. Ergo, the public methods function as a module interface specification.</p>

<p>A couple of other cool features also fall out naturally from this. Features that many other module systems don't have: since a module is really just a class, you can have multiple instances of a module, just call the constructor multiple times like you would with any other class. In a lot of other module systems, modules are singletons.</p>

<p>And, you can pass in arguments to the constructor, thus providing you with parameterized modules, which is typically only supported by very advanced module systems, if at all.</p>
"
"<p>If a project has multiple people, say, A,B,C working together and they all edit a same source file. </p>

<p>Couple months later, they realize that what A has been doing is wrong and they want to roll back the file in such a way that only parts/functions/lines/... that A ""touched"" are removed and the work B and C did is still in the roll back version. In other words, the roll back version has only the work of B and C up to the time they decide to remove A's work. </p>

<p>Is there any version/source control software out there (free/commercial) can do that?</p>

<p>Thanks.</p>
","2988","","<p>In Git, you would probably do something like</p>

<pre><code>git revert `git rev-list --author=A`
</code></pre>

<p>[Note: completely untested.]</p>
"
"<p>I have a directed graph data structure, where I am trying to implement individual version control for each vertex. This creates some interesting scenarios, and I would much appreciate any ideas that you guys have. Specifically, I am looking to resolve the default behavior of the system when encountering the stated scenarios.</p>

<p>See the following image: <a href=""http://bayimg.com/faAGCaADD"" rel=""nofollow"">Graph versions</a></p>

<p><strong>Scenario 1: ""The Null Pointer Paradox""</strong></p>

<p>Vertex A is rolled back to version 1.0. Since this rollback will cascade down its subgraph, C will no longer be pointing to D. This could create a hazard. Should the behavior be to:</p>

<ul>
<li>1.1: Delete the edge C -> D, creating a broken graph</li>
<li>1.2: Delete D, leaving E orphaned</li>
<li>1.3: Delete D and E</li>
<li>1.4: Refuse to perform the rollback before all edges pointing to D (which would be E -> D in this case) are deleted</li>
<li>1.X: Alternative solutions?</li>
</ul>

<p><strong>Scenario 2: ""Indirect Effects""</strong></p>

<p>Vertex D is updated, so that the following holds:</p>

<ul>
<li>D is now version 1.2</li>
<li>E is now version 1.1</li>
<li>C is now version 1.3</li>
<li>A is now version 1.3</li>
</ul>

<p>Vertex A is now rolled back to version 1.2, so that the following holds:</p>

<ul>
<li>A is now version 1.2</li>
<li>C is now version 1.2</li>
<li>D is now version 1.1</li>
</ul>

<p>Should the default behavior be to:</p>

<ul>
<li>2.1: Roll back E to 1.0</li>
<li>2.2: Refuse to roll back due to version hazard, in effect impairing functionality</li>
<li>2.X: Alternative solutions?</li>
</ul>
","2988","","<p>It seems to me that there is some confusion about the granularity here. If you only version individual vertices but not the graph, then rolling back an individual vertex should not affect the rest of the graph. If, OTOH, you <em>want</em> the whole graph to be rolled back, then you should also version the whole graph.</p>

<p>The problem is that if you only version individual vertices, then you only have integrity guarantees for individual vertices, but not for the graph as a whole. So, if, as you describe it, rolling back an individual vertex ""ripples through"" the whole graph (or at least the connected subgraph), then you are not guaranteed to end up in a consistent state.</p>

<p>The research that seems to be closest to what you are trying, is about version control for XML, which, however, only deals with strongly typed trees (IOW degenerate graphs), not general graphs.</p>
"
"<p>Say I have two versions of a gem installed (somegem versions 0.10.6 and 0.10.5) and I want to run the earlier version from the commandline. Do I have to uninstall the newer version? Is there a way I can use a flag to specify which version I want to use? Something like... </p>

<pre><code>somegem /path/to/dir --version 0.10.5
</code></pre>

<p>I checked the rubygems documentation, and it only describes how to use a specific version when you require a gem from a file, but nothing about how to do it from the commandline. </p>
","2988","","<pre><code>somegem _0.10.5_ /path/to/dir
</code></pre>

<p>No link to documentation, because apparently there isn't any.</p>
"
"<p>I'd like to split and do a substitution in a string in one chained command. 
Here's my example including the error message:</p>

<pre><code>&gt;&gt; filebase
=&gt; ""Ueki_-_Hello_World""
&gt;&gt; filebase.split(""_-_"").gsub(""_"","" "")
NoMethodError: private method `gsub' called for [""Ueki"", ""Hello_World""]:Array
    from (irb):16
</code></pre>

<p>It works when I save the result of ""split"" in a temporary variable. Do I really need that?</p>
","2988","","<p><code>String#split</code> returns an <code>Array</code>. <code>Array</code>s don't have a <code>gsub</code> method.</p>

<p>It's not clear what it is you are trying you achieve. Is this what you are looking for?</p>

<pre><code>filebase.split(""_-_"").map {|s| s.gsub(""_"","" "") }
</code></pre>
"
"<p>I've a problem with the instance_variable_get method cause it's always returns nil object with one of my object instance.
Here is my code:</p>

<pre><code>logger.info ""ASDF: "" + @d_tree.inspect
logger.info ""ASDF: "" + @d_tree.instance_variable_get(:@content);
</code></pre>

<p>and the output is:</p>

<pre><code>ASDF: #&lt;DTree id: 11, parent_id: nil, content: ""bababababa"", subsidiary_info: """", deep_info: ""blabla"", title: ""hello"", direction: 1, created_at: ""2010-10-26 19:27:32"", updated_at: ""2010-11-01 23:14:31"", color: 2, cell_color: 2, howtoinfo: ""howtoinfooo"", textinfo: ""textInfooo"", locationinfo: ""locationInfoooo"", productinfo: ""productinfoooo""&gt;
TypeError (can't convert nil into String):
    /app/controllers/d_trees_controller.rb:38:in `+'
</code></pre>

<p>According to the inspect the object seems to be fine, but the instance_variable_get returns a nil object</p>

<p>Thanks for your help!</p>
","2988","","<p><code>instance_variable_get</code> returns <code>nil</code> if the variable is uninitialized (or if it has been set to <code>nil</code>, of course).</p>

<p>So, obviously, <code>@content</code> hasn't been initialized yet.</p>

<p><em>Why</em> it hasn't been initialized is impossible to tell, since you haven't shown us any actual code yet.</p>

<p>It <em>looks</em> like <code>@d_tree</code> might be an <code>ActiveRecord</code> object, in which case the solution is rather simple: <code>ActiveRecord</code> objects don't keep their state in instance variables, they are backed by a database.</p>
"
"<p>i am using:
windows 7
rails 3.0</p>

<p>whenever i try to run rake db:migrate. i get the following error in popup...</p>

<p><em>This application has failed to start because msvcrt-ruby18.dll was not found. Re-installing the application may fix the problem.</em></p>

<p>need help here..
thnx..</p>
","2988","","<p><code>msvcrt-ruby18.dll</code> is the runtime library for MRI 1.8.x. Somehow, you installed a MRI C extension for which the author provides a pre-compiled binary, but with the wrong version information. That way, you ended up with a C extension that has been compiled for MRI 1.8.x, but you are actually using YARV 1.9.2-p0.</p>

<p>You need to find either a different version of the gem which provides a pre-compiled binary for your version of YARV, or you need to compile it yourself.</p>

<p>If you use <a href=""http://RubyInstaller.Org/"" rel=""nofollow"">the MinGW port of YARV</a>, that's trivial: just install <a href=""https://GitHub.Com/OneClick/RubyInstaller/wiki/Development-Kit"" rel=""nofollow"">the DevKit</a> and then re-install the offending gem with the <code>--platform=ruby</code> option, to force compilation.</p>
"
"<p>Is there an easy way to undo a tortoisegit revert? </p>

<p>Here's more info: I just committed a large multi-file checkin, and right afterwards decided I instead wanted to commit a separate small checkin before the big one, to make it easier to amend that big checkin tomorrow. </p>

<p>So I brought up the log in tortoisegit, right-clicked on the last checkin, and chose ""revert"".  This undid the changes and deleted a bunch of files in my working directory. What I really wanted was ""reset"" (roll back a checkin and leave my working directory as is), not revert (create an ""undo checkin"" in my working directory).</p>

<p>How can I undo my revert?</p>
","2988","","<p>Just <code>git reset</code> to the point you wanted to, anyway. A <code>revert</code> is nothing special: it is just a normal commit which does the exact opposite of what another commit does. Since it is just a normal commit, it will be garbage collected just like the other commit(s) you originally wanted to get rid of.</p>
"
"<p>In popular programming speak, what is the difference between these terms and what are the overlaps?</p>

<p>Any related terms I'm missing out?</p>
","2988","","<p>All three of those provide functionality.</p>

<p>However, there are important differences.</p>

<p>A <strong>library</strong> is <em>just</em> a collection of related functionality. Nothing more, but also nothing less. The defining characteristic of a library is that <em>you</em> are in control, <em>you</em> call the library.</p>

<p>The defining characteristic of a <strong>framework</strong> is <em>Inversion of Control</em>. The framework calls <em>you</em>, not the other way round. (This is known as the <em>Hollywood Principle</em>: ""Don't call us, we'll call you."") The framework is in control. The flow of control and the flow of data is managed by the framework.</p>

<p>You can think of it this way: in both cases, you have an application, and this application has holes in it, where code has been left out, and these holes need to be filled in. The difference between a library and a framework is</p>

<ul>
<li>who writes the application,</li>
<li>what are the holes and</li>
<li>who fills in the holes.</li>
</ul>

<p>With a library, <em>you</em> write the application, and you leave out the <em>boring</em> details, which gets filled in by a <em>library</em>.</p>

<p>With a framework, the <em>framework writer</em> writes the application, and leaves out the <em>interesting</em> details, which <em>you</em> fill in.</p>

<p>This can be a little confusing at times, because the framework itself might also contain boring details, that the framework author filled in with libraries, the parts that you write might contain boring details, that you fill in with libraries, and the framework might provide a set of bundled libraries that either work well with the framework or that are often needed in conjunction with the framework. For example, you might use an XML generator library when writing a web application using a web framework, and that XML library might have been provided by the framework or even be an integral part of it.</p>

<p>That doesn't mean, however, that there is no distinction between a library and a framework. The distinction is very clear: Inversion of Control is what it's all about.</p>

<p>The defining characteristic of a <strong>module</strong> is <em>information hiding</em>. A module has an <em>interface</em>, which explicitly, but abstractly specifies both the functionality it provides as well as the functionality it depends on. (Often called the <em>exported</em> and <em>imported</em> functionality.) This interface has an <em>implementation</em> (or multiple implementations, actually), which, from the user of a module are a black box.</p>

<p>Also, a library is a <em>collection</em> of related functionality, whereas a module only provides a <em>single piece</em> of functionality. Which means that, if you have a system with both modules and libraries, a library will typically contain multiple modules. For example, you might have a collections library which contains a <code>List</code> module, a <code>Set</code> module and a <code>Map</code> module.</p>

<p>While you can certainly write modules without a module system, ideally you want your modules to be separately compilable (for languages and execution environments where that notion even makes sense), separately deployable, and you want module composition to be safe (i.e. composing modules should either work or trigger an error before runtime, but never lead to an runtime error or unexpected behavior). For this, you need a module system, like Racket's units, Standard ML's modules and functors or Newspeak's top-level classes.</p>

<p>So, let's recap:</p>

<ul>
<li><strong>library</strong>: collection of related functionality</li>
<li><strong>framework</strong>: Inversion of Control</li>
<li><strong>module</strong>: abstract interface with explicit exports and imports, implementation and interface are separate, there may be multiple implementations and the implementation is hidden</li>
</ul>
"
"<p>In <a href=""http://rads.stackoverflow.com/amzn/click/0981531644"">Programming in Scala: A Comprehensive Step-by-Step Guide</a>, the author said:</p>

<blockquote>
  <p>One way in which Scala is more
  object-oriented than Java is that
  classes in Scala cannot have static
  members. Instead, Scala has singleton
  objects.</p>
</blockquote>

<p>Why is a <a href=""http://en.wikipedia.org/wiki/Singleton_pattern"">singleton</a> object more object-oriented? What's the good of not using static members, but singleton objects?</p>
","2988","","<p>Hint: it's called <strong>object</strong>-oriented programming.</p>

<p>Seriously.</p>

<p>Maybe I am missing something fundamentally important, but I don't see what the fuss is all about: objects are more object-oriented than non-objects because they are objects. Does that really need an explanation?</p>

<p>Note: Although it sure sounds that way, I am really <em>not</em> trying to sound smug here. I have looked at all the other answers and I found them terribly confusing. To me, it's kind of obvious that objects and methods are more object-oriented than namespaces and procedures (which is what static ""methods"" really are) by the very <em>definition</em> of ""object-oriented"".</p>

<p>An alternative to having singleton objects would be to make classes themselves objects, as e.g. Ruby, Python, Smalltalk, Newspeak do.</p>
"
"<p>I need to hold values in sorted hash in ruby (1.8.7). What data structed will fit the best?</p>
","2988","","<p>There is nothing in the core library or the standard library now, that will fit your bill.</p>

<p>There <em>is</em>, however, <a href=""http://redMine.Ruby-Lang.Org/issues/show/2348/"" rel=""nofollow"">a feature request to add a Red/Black-Tree implementation</a> to Ruby 1.9.3/2.0.</p>

<p>If you are able to force your users to only ever use <a href=""http://XRuby.Com/"" rel=""nofollow"">XRuby</a> or <a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a>, you could just use one of the implementations of Java's <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/util/SortedMap.html"" rel=""nofollow""><code>java.util.SortedMap&lt;K, V&gt;</code></a> such as <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/util/TreeMap.html"" rel=""nofollow""><code>java.util.TreeMap&lt;K, V&gt;</code></a>.</p>

<p>If you are able to force your users to only ever use <a href=""http://RubyDotNETCompiler.GoogleCode.Com/"" rel=""nofollow"">Ruby.NET</a> or <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a>, you could just use .NET's <a href=""http://MSDN.Microsoft.Com/library/f7fta44c.aspx"" rel=""nofollow""><code>System.Collections.Generic.SortedDictionary&lt;TKey, TValue&gt;</code></a>.</p>

<p>If you are able to force your users to only ever use MRI or YARV, you could use the <a href=""http://WWW.GeoCities.Co.Jp/SiliconValley-PaloAlto/3388/rbtree/README"" rel=""nofollow""><code>Ruby/RBTree</code></a> library. It might also work on <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a> or <a href=""https://GitHub.Com/JRuby/JRuby/tree/cext/"" rel=""nofollow"">the not-yet-released JRuby 1.6</a>. Note that there seem to be multiple independent updated forks of that library in the wild. It is not obvious, which one of those is the most recent and/or best maintained one.</p>

<p>The <em>only</em> solution I know of which is guaranteed to be portable, is <a href=""http://Algorithms.RubyForge.Org/"" rel=""nofollow"">Kanwei Li's Algorithms and Containers GSoC 2008 project</a>, which actually contains two implementations of a sorted, key-indexed collection: <a href=""https://GitHub.Com/Kanwei/Algorithms/blob/master/lib/containers/rb_tree_map.rb"" rel=""nofollow""><code>Containers::RBTreeMap</code> based on a Red/Black-Tree</a> and <a href=""https://GitHub.Com/Kanwei/Algorithms/blob/master/lib/containers/splay_tree_map.rb"" rel=""nofollow""><code>Containers::SplayTreeMap</code> based on a Splay Tree</a>.</p>
"
"<p>I need a data structure that is ordered but also gives fast random access and inserts and removes. Linkedlists are ordered and fast in inserts and removes but they give slow random access. Hashtables give fast random access but are not ordered.</p>

<p>So, it seems to nice to use both of them together. In my current solution, my Hashtable includes iterators of the list and the List contains the actual items. Nice and effective. Okay, it requires double the memory but that's not an issue.</p>

<p>I have heard that some tree structures could do this also, but are they as fast as this solution?</p>
","2988","","<p>What you did is pretty much the right choice.</p>

<p>The cool thing about this is that adding ordering to an existing map implementation by using a double-ended doubly-linked list doesn't actually change its asymptotic complexity, because all the relevant list operations (appending and deleting) have a worst-case step complexity of &Theta;(1). (Yes, deletion is &Theta;(1), too. The reason it is usually &Theta;(n) is because you have to <em>find</em> the element to delete first, which is &Theta;(n), but the actual deletion <em>itself</em> is &Theta;(1). In this particular case, you let the map do the finding, which is something like &Theta;(1) amortized worst-case step complexity or &Theta;(log<sub>b</sub>&thinsp;n) worst-case step complexity, depending on the type of map implementation used.)</p>

<p>The <code>Hash</code> class in Ruby 1.9, for example, is an ordered map, and it is implemented at least in YARV and Rubinius as a hash table embedded into a linked list.</p>

<p>Trees generally have a worst-case step complexity of &Theta;(log<sub>b</sub>&thinsp;n) for random access, whereas hash tables may be worse in the worst case (&Theta;(n)), but usually amortize to &Theta;(1), provided you don't screw up the hash function or the resize function.</p>

<p>[Note: I'm deliberately only talking about asymptotic behavior here, aka ""infinitely large"" collections. If your collections are small, then just choose the one with the smallest constant factors.]</p>
"
"<p>Hi
  I am using sed to replace a line with NULL in a file. The command i used is </p>

<p>sed -i ""s/.<em>shayam.</em>//g"" FILE</p>

<p>This is working fine in linux. shayam is replaced with blank in the FILE. But when i used this in solaris it is showing some error. </p>

<p>sed: illegal option -- i</p>

<p>How to use -i functionality of sed in solaris. Kindly help.</p>
","2988","","<p><a href=""http://OpenGroup.Org/onlinepubs/9699919799/utilities/sed.html"" rel=""nofollow""><code>sed</code> doesn't haven an <code>-i</code> option</a>.</p>

<p>You are probably using some vendor-specific variant of <code>sed</code>. If you want to use the vendor-specific non-standardized extensions of your vendor-specific non-standardized variant of <code>sed</code>, you need to make sure that you install said vendor-specific non-standardized variant and need to make sure that you call <em>it</em> and don't call the standards-compliant version of <code>sed</code> that is part of your operating environment.</p>

<p>Note that as always when using non-standardized vendor-specific extensions, there is absolutely no guarantee that your code will be portable, which is exactly the problem you are seeing.</p>

<p>In this particular case, however, there is a much better solution: use the right tool for the job. <code>sed</code> is a <em>stream editor</em> (that's why it is <em>called</em> ""sed""), i.e. it is for editing streams, not files. If you want to edit files, use a <em>file editor</em>, such as <a href=""http://OpenGroup.Org/onlinepubs/9699919799/utilities/ed.html"" rel=""nofollow""><code>ed</code></a>:</p>

<pre><code>ed FILE &lt;&lt;-HERE
  ,s/.shayam.//g
  w
  q
HERE
</code></pre>

<p>See also:</p>

<ul>
<li><a href=""http://StackOverflow.Com/q/722699/#722942"">Unable to use SED to edit files fast</a></li>
<li><a href=""http://StackOverflow.Com/q/703459/#703535"">How can I replace a specific line by line number in a text file?</a></li>
</ul>
"
"<p>I know that they provide a quick reference, but as the code grows they can lead to hundreds of files changing just due to version/history updates.</p>

<p>This leads/relates to my other question: 
<a href=""http://stackoverflow.com/questions/4127980/is-there-a-way-to-prevent-code-comments-to-be-marked-as-changes-in-the-diffs-obta"">Is there a way to prevent code comments to be marked as changes in the diffs obtained from version control? (CVS/SVN)</a></p>
","2988","","<p>I agree with @Franci Penov. Here's a slightly different perspective:</p>

<ul>
<li>In the <em>best case</em>, they are useless, because they just duplicate information that is readily available, always automatically up-to-date, and much easier accessible in the version control system.</li>
<li>In all other cases, they range from distracting over annoying to outright misleading (if they go out of sync with the version control system).</li>
</ul>
"
"<p>I am wondering if the HTML5 <code>&lt;video&gt;</code> tag now supports playback of .avi format video files. Thanks.</p>
","2988","","<p>The HTML specification <em>never</em> specifies any content formats. That's not its job. There's plenty of standards organizations that are more qualified than the W3C to specify video formats.</p>

<p>That's what content negotiation is for.</p>

<ul>
<li>The HTML specification doesn't specify any image formats for the <code>&lt;img&gt;</code> element.</li>
<li>The HTML specification doesn't specify any style sheet languages for the <code>&lt;style&gt;</code> element.</li>
<li>The HTML specification doesn't specify any scripting languages for the <code>&lt;script&gt;</code> element.</li>
<li>The HTML specification doesn't specify any object formats for the <code>&lt;object&gt;</code> and <code>embed</code> elements.</li>
<li>The HTML specification doesn't specify any audio formats for the <code>&lt;audio&gt;</code> element.</li>
</ul>

<p>Why should it specify one for the <code>&lt;video&gt;</code> element?</p>
"
"<p>A friend was telling me the other day that there is a pyramid for the costs of fixing a problem in the software development life cycle.  Where could I find this?</p>

<p>He was referring to the cost of fixing a problem.</p>

<p>For example,</p>

<blockquote>
  <p>To fix a problem at the requirements stage costs 1.</p>
  
  <p>To fix a problem at the development stage costs 10.</p>
  
  <p>To fix a problem at the testing stage costs 100</p>
  
  <p>To fix a problem at the production stage costs 1000.</p>
</blockquote>

<p>(These numbers are just examples)</p>

<p>I would be interested in seeing more about this if anyone has references.</p>
","2988","","<p>This is a well-known result in empirical software engineering that has been replicated and verified over and over again in countless studies. Which is very rare in software engineering, unfortunately: most software engineering ""results"" are basically hearsay, anecdotes, guesses, opinions, wishful thinking or just plain lies. In fact, most software engineering probably doesn't deserve the ""engineering"" brand.</p>

<p>Unfortunately, despite being one of the most solid, most scientifically and statistically sound, most heavily researched, most widely verified, most often replicated results of software engineering, it is also wrong.</p>

<p>The problem is that all of those studies do not control their variables properly. If you want to measure the effect of a variable, you have to be <em>very</em> careful to change <em>only</em> that <em>one</em> variable and that the other variables don't change <em>at all</em>. Not ""change a few variables"", not ""minimize changes to other variables"". ""Only one"" and the others ""not at all"".</p>

<p>Or, in the brilliant Zed Shaw's words: if you want to measure shit, don't measure other shit.</p>

<p>In this particular case, they did <em>not</em> just measure in which phase (requirements, analysis, architecture, design, implementation, testing, maintenance) the bug was found, they <em>also</em> measured how <em>long</em> it stayed in the system. And it turns out that the phase is pretty much irrelevant, all that matters is the time. It's important that bugs be found <em>fast</em>, not in which phase.</p>

<p>This has some interesting ramifications: if it is important to find bugs <em>fast</em>, then why wait so long with the phase that is most likely to find bugs: testing? Why not put the testing at the <em>beginning</em>?</p>

<p>The problem with the ""traditional"" interpretation is that it leads to inefficient decisions. Because you assume you need to find all bugs during the requirements phase, you drag out the requirements phase unnecessarily long: you can't <em>run</em> requirements (or architectures, or designs), so <em>finding</em> a bug in something that you cannot even <em>execute</em> is freaking <em>hard</em>! Basically, while <em>fixing</em> bugs in the requirements phase is cheap, <em>finding</em> them is expensive.</p>

<p>If, however, you realize that it's not about finding the bugs <em>in the earliest possible phase</em>, but rather about finding the bugs <em>at the earliest possible time</em>, then you can make adjustments to your process, so that you move the phase in which <em>finding</em> bugs is cheapest (testing) to the point in time where <em>fixing</em> them is cheapest (the very beginning).</p>

<hr>

<p>Note: I am well aware of the irony of ending a rant about not properly applying statistics with a completely unsubstantiated claim. Unfortunately, I lost the link where I read this. Glenn Vanderburg also mentioned this in his ""<a href=""http://confreaks.net/videos/282-lsrc2010-real-software-engineering/""><em>Real Software Engineering</em></a>"" talk at the Lone Star Ruby Conference 2010, but AFAICR, he didn't cite any sources, either.</p>

<p>If anybody knows any sources, <em>please</em> let me know or edit my answer, or even just <em>steal</em> my answer. (If you can find a source, you deserve all the rep!)</p>
"
"<p>In C# 4.0, we have Task in the System.Threading.Tasks namespace. What is the true difference between Thread and Task. I did some sample program(help taken from MSDN)  for my own sake of learning with </p>

<pre><code>Parallel.Invoke 
Parallel.For 
Parallel.ForEach 
</code></pre>

<p>but have many doubts as the idea is not so clear. </p>

<p>I have initially searched in Stackoverflow for a similar type of question but may be with this question title I was not able to get the same. If anyone knows about the same type of question being posted here earlier, kindly give the reference of the link.</p>
","2988","","<p>In computer science terms, a <code>Task</code> is a <em>future</em> or a <em>promise</em>. (Some people use those two terms synomymously, some use them differently, nobody can agree on a <em>precise</em> definition.) Basically, a <code>Task&lt;T&gt;</code> ""promises"" to return you a <code>T</code>, but not right now honey, I'm kinda busy, why don't you come back later?</p>

<p>A <code>Thread</code> is a way of fulfilling that promise. But not every <code>Task</code> needs a brand-new <code>Thread</code>. (In fact, creating a thread is often undesirable, because doing so is much more expensive than re-using an existing thread from the threadpool. More on that in a moment.) If the value you are waiting for comes from the filesystem or a database or the network, then there is no need for a thread to sit around and wait for the data when it can be servicing other requests. Instead, the <code>Task</code> might register a callback to receive the value(s) when they're ready.</p>

<p>In particular, the <code>Task</code> does <em>not</em> say <em>why</em> it is that it takes such a long time to return the value. It <em>might</em> be that it takes a long time to compute, or it might that it takes a long time to fetch. Only in the former case would you use a <code>Thread</code> to run a <code>Task</code>. (In .NET, threads are freaking expensive, so you generally want to avoid them as much as possible and really only use them if you want to run multiple heavy computations on multiple CPUs. For example, in Windows, a thread weighs 12&thinsp;KiByte (I think), in Linux, a thread weighs as little as 4&thinsp;KiByte, in Erlang/BEAM even just 400&thinsp;Byte. In .NET, it's 1&thinsp;MiByte!)</p>
"
"<p>Does using <code>then</code> instead of semicolon or linebreak have only decorative purpose (to make code more <em>readable</em>)?</p>
","2988","","<p>In <code>if</code> expressions and <code>case</code> expressions, the condition is terminated either with the <code>then</code> keyword or an expression separator (i.e. semicolon or newline).</p>

<p>So, yes it can always be replaced with semicolon or linebreak.</p>

<p>And no, it does not have only decorative purpose, it separates the consequence from the condition in an <code>if</code> or <code>case</code> expression.</p>
"
"<p>Does Rails have a <code>some_string.starts_with(""abc"")</code> method that's built in?</p>
","2988","","<p>It's called <a href=""http://RubyDoc.Info/docs/ruby-core/1.9.2/String#start_with%3F-instance_method""><code>String#start_with?</code></a>, not <code>String#startswith</code>: In Ruby, the names of boolean-ish methods end with <code>?</code> and the words in method names are separated with an <code>_</code>. Not sure where the <code>s</code> went, personally, I'd prefer <code>String#starts_with?</code> over the actual <code>String#start_with?</code></p>
"
"<p>So my problem is that I have two classes with the same name.</p>

<p>One is REXML::Document, which is a third party library.</p>

<p>the other is an ActiveRecord model called ""Document"" controlled by my application.</p>

<p>In my controller when I do ""Document.transaction"" he tells me that method ""transaction"" doesn't exist for class ""REXML::Document"" but what I really want is to use my model. My model doesn't belong to a module so how can I tell ruby that he should look to the model ""Document"" instead of ""REXML::Document"" ?</p>
","2988","","<p><code>::Document</code> tells Ruby to start the name lookup at the top-level as opposed to the current level.</p>

<p>It's similar a Unix pathname, where the <code>/</code> also functions both as a pathname component separator and as a flag to not use relative lookup.</p>

<p>However, if you are inside your controller, <code>Document</code> by itself should <em>never</em> refer to <code>REXML::Document</code>. It should <em>always</em> only look for <code>Document</code>, first in the current namespace, then one level up, and so forth until the top-level namespace (which is actually nothing special, it's just the <code>Object</code> class).</p>

<p>Unless, of course, you have <code>include REXML</code> somewhere in your code, in which case, there is an even simpler remedy than using <code>::Document</code>: just don't do that.</p>
"
"<p>Could you create an object from a class named <code>Trung.NguyenThe</code> since <code>NguyenThe</code> isn't a method ?</p>
","2988","","<p>In Ruby, there's no such thing as a class name. Classes are just objects like every other object which get assigned to variables just like any other variable.</p>

<p><code>Trung.NguyenThe</code> is not a legal variable name, therefore this is impossible:</p>

<pre><code>class Object
  klass = Class.new do
    def to_s; 'Hello' end
  end
  const_set :'Trung.NguyenThe', klass
  # NameError: wrong constant name Trung.NguyenThe
end
</code></pre>

<p>You <em>could</em>, of course, create an object which responds to a <code>NguyenThe</code> message with a class and assign that object to a variable named <code>Trung</code>, but that's not what you are asking about:</p>

<pre><code>klass = Class.new do
  def to_s; 'Hello' end
end
(Trung = Object.new).define_singleton_method(:NguyenThe) { klass }

puts Trung.NguyenThe.new
# Hello
</code></pre>

<p>In C# and Java, periods are illegal in class names as well. C# has an escaping mechanism that allows you to use otherwise reserved words as names, but this mechanism doesn't make it possible to use illegal names, only reserved ones.</p>

<p>There are proposals for more symbolic freedom in Java names, but so far, they have not yet been implemented.</p>
"
"<p>I have a ruby hash:</p>

<pre><code>ages = { ""Bruce"" =&gt; 32,
         ""Clark"" =&gt; 28
       }
</code></pre>

<p>Assuming I have another hash of replacement names, is there an elegant way to rename all the keys so that I end up with:</p>

<pre><code>ages = { ""Bruce Wayne"" =&gt; 32,
         ""Clark Kent"" =&gt; 28
       }
</code></pre>
","2988","","<pre><code>ages = { ""Bruce"" =&gt; 32, ""Clark"" =&gt; 28 }
mappings = {""Bruce"" =&gt; ""Bruce Wayne"", ""Clark"" =&gt; ""Clark Kent""}

Hash[ages.map {|k, v| [mappings[k], v] }]
</code></pre>
"
"<p>Lets say I have two modules.  Is it possible to include a module inside another one that would behave like a mixin?</p>

<p>For example:</p>

<pre><code>module A
  def self.foo
    puts ""foo""
    bar
  end
end

module B
  include A
  def self.bar
    puts ""bar""
  end
end

B.bar
B.foo
</code></pre>

<p>Edit:  I realized I originally copied the code down wrong.  The methods need to be static.  The corrected code is above(and does not work).</p>
","2988","","<p>The exact code you posted works exactly like you want to. So, the answer is Yes.</p>

<p>Would it have been really that hard to just execute it yourself?</p>
"
"<p>Is there a reasonable way in Python to implement mixin behavior similar to that found in Ruby -- that is, without using inheritance?</p>

<pre><code>class Mixin(object):
    def b(self): print ""b()""
    def c(self): print ""c()""

class Foo(object):
    # Somehow mix in the behavior of the Mixin class,
    # so that all of the methods below will run and
    # the issubclass() test will be False.

    def a(self): print ""a()""

f = Foo()
f.a()
f.b()
f.c()
print issubclass(Foo, Mixin)
</code></pre>

<p>I had a vague idea to do this with a class decorator, but my attempts led to confusion. Most of my searches on the topic have led in the direction of using inheritance (or in more complex scenarios, multiple inheritance) to achieve mixin behavior.</p>
","2988","","<p>I am not that familiar with Python, but from what I know about Python metaprogramming, you could actually do it pretty much the same way it is done in Ruby.</p>

<p>In Ruby, a module basically consists of two things: a pointer to a method dictionary and a pointer to a constant dictionary. A class consists of three things: a pointer to a method dictionary, a pointer to a constant dictionary and a pointer to the superclass.</p>

<p>When you mix in a module <code>M</code> into a class <code>C</code>, the following happens:</p>

<ol>
<li>an anonymous class <code>α</code> is created (this is called an <em>include class</em>)</li>
<li><code>α</code>'s method dictionary and constant dictionary pointers are set equal to <code>M</code>'s</li>
<li><code>α</code>'s superclass pointer is set equal to <code>C</code>'s</li>
<li><code>C</code>'s superclass pointer is set to <code>α</code></li>
</ol>

<p>In other words: a fake class which shares its behavior with the mixin is injected into the inheritance hierarchy. So, Ruby actually <em>does</em> use inheritance for mixin composition.</p>

<p>I left out a couple of subleties above: first off, the module doesn't actually get inserted as <code>C</code>'s superclass, it gets inserted as <code>C</code>'s superclasses' (which is <code>C</code>'s singleton class) superclass. And secondly, if the mixin itself has mixed in other mixins, then <em>those</em> also get wrapped into fake classes which get inserted directly above <code>α</code>, and this process is applied recursively, in case the mixed in mixins in turn have mixins.</p>

<p>Basically, the whole mixin hierarchy gets flattened into a straight line and spliced into the inheritance chain.</p>

<p>AFAIK, Python actually allows you to change a class's superclass(es) after the fact (something which Ruby does <em>not</em> allow you to do), and it also gives you access to a class's <code>dict</code> (again, something that is impossible in Ruby), so you should be able to implement this yourself.</p>
"
"<p>I am just starting to learn Ruby (to eventually move to RoR), but I was just told that Ruby does not support unicode. Is it true? How do Ruby programmers go about supporting unicode? </p>
","2988","","<p>That's not true. What is true is that Ruby does not support <em>only</em> Unicode, it supports a whole slew of other encodings as well.</p>

<p>This is in contrast to systems such as Java, .NET or Python, which follow the ""One Encoding To Rule Them All"" model. Ruby has what one of the designers of Ruby's m17n system calls a ""CSI"" model (Code Set Indepedent), which means that instead of all strings just having one and the same encoding, every string is tagged with its own encoding.</p>

<p>This has some significant advantages both for ease of use and performance, because it means that if your input and output encodings are the same, you never need to transcode, whereas with the One True Encoding model, you need to transcode twice in the worst case (and that worst case unfortunately happens pretty often, because most of these environments chose an internal encoding that nobody actually uses), from the input encoding into the internal encoding and then to the output encoding. In Ruby, you need to transcode at most once.</p>

<p>The basic problem with the OTE model is that whatever encoding you choose as the One True Encoding, it will be a completely arbitrary choice, since there simply isn't a single encoding that everybody, or even a majority, uses.</p>

<p>In Java, for example, they chose UCS-2 as the One True Encoding. Then, a couple of years later, it turned out that UCS-2 was actually not enough to encode all characters, so they had to make a backwards-incompatible change to Java, to switch to UTF-16 as the One True Encoding. Except by that time, a significant portion of the world had moved on from UTF-16 to UTF-8. If Java had been invented a couple of years earlier, they would probably have chosen ASCII as the One True Encoding. If it had been invented in another country, it might be Shift-JIS. If it had been invented by another company, it might be EBCDIC. It's <em>really</em> completely arbitrary, and such an important choice <em>shouldn't</em> be.</p>
"
"<p>so I saved to disk some objects using the following code (this is Ruby 1.9.2 on Windows BTW):</p>

<pre><code>open('1.txt', ""wb"") { |file|
    file.write(YAML::dump( results))
}
</code></pre>

<p>Now I'm trying to get back that data, but get 'invalid byte sequence in UTF-8 (ArgumentError)'. I've tryed everything I could think of to save the data in different format, but no luck. For example</p>

<pre><code>open('1.txt', 'rb'){|f| a1 = YAML::load(f.read)}
a1.each do |a|
    JSON.generate(a)
end
</code></pre>

<p>results in:</p>

<pre><code> C:/m/ruby-1.9.2-p0-i386-mingw32/lib/ruby/1.9.1/json/common.rb:212:in `match':
invalid byte  sequence 
in UTF-8 (ArgumentError)
    from C:/m/ruby-1.9.2-p0-i386-mingw32/lib/ruby/1.9.1/json/common.rb:212:in `generate'
    from C:/m/ruby-1.9.2-p0-i386-mingw32/lib/ruby/1.9.1/json/common.rb:212:in `generate'
    from merge3.rb:31:in `block in &lt;main&gt;'
    from merge3.rb:29:in `each'
    from merge3.rb:29:in `&lt;main&gt;'
</code></pre>

<p>What can I do?</p>

<p>EDIT: from the file:</p>

<pre><code>--- 
- !ruby/object:Product 
  name: HSF
- !ruby/object:Product
  name: ""almer\xA2n""
</code></pre>

<p>The 1st product works OK, but the 2nd gives the exception.</p>
","2988","","<p>You need to read the file back in using the same encoding you used to write it out, obviously. Since you don't specify an encoding in either case, you will basically end up with an environment-dependent encoding outside of your control, which is why it is never a good idea to not specify an encoding.</p>

<p>The snippet you posted is <em>clearly</em> not valid UTF-8, so the fact that you get an exception is perfectly appropriate.</p>
"
"<p>I'm jumping into rails programming for the first time and while looking at the code for some libraries I've downloaded, I occasionally notice the code: </p>

<pre><code>class &lt;&lt; self
  def func
     stuff
  end
end
</code></pre>

<p>I've tried searching the web for an explanation, but the &lt;&lt; gets stripped from most useful search engines, so it ends up just searching for class self, which isn't very useful.  Any insight would be appreciated.</p>
","2988","","<p>In Ruby, <code>class &lt;&lt; foo</code> opens up the <em>singleton class</em> of the object referenced by <code>foo</code>. In Ruby, every object has a singleton class associated with it which only has a single instance. This singleton class holds object-specific behavior, i.e. singleton methods.</p>

<p>So, <code>class &lt;&lt; self</code> opens up the singleton class of <code>self</code>. What exactly <code>self</code> <em>is</em>, depends on the context you are in, of course. In a module or class definition body, it is the module or class itself, for example.</p>

<p>If all you are using the singleton class for, is defining singleton methods, there is actually a shortcut for that: <code>def foo.bar</code>.</p>

<p>Here's an example of how to use singleton methods to provide some ""procedures"" which don't really have any association with a particular instance:</p>

<pre><code>class &lt;&lt; (Util = Object.new)
  def do_something(n)
    # ...
  end
end

Util.do_something(n)
</code></pre>
"
"<p>After installing Ruby and Ruby Gems:</p>

<pre><code>$ sudo apt-get install ruby rubygems
...
$ ruby -v
ruby 1.8.7 (2010-06-23 patchlevel 299) [i686-linux]
$ gem -v
1.3.7
</code></pre>

<p>If I try to install Rails I get an error, and even though it seems to be the documentation only, <code>rails</code> isn't installed:</p>

<pre><code>$ sudo gem install rails
...
Successfully installed rails-3.0.1
24 gems installed
... 
Installing ri documentation for builder-2.1.2...
ERROR:  While generating documentation for builder-2.1.2
... MESSAGE:   Unhandled special: Special: type=17, text=""&lt;!-- HI --&gt;""
... RDOC args: --ri --op /var/lib/gems/1.8/doc/builder-2.1.2/ri --title Builder -- Easy XML Building --main README --line-numbers --quiet lib CHANGES Rakefile README doc/releases/builder-1.2.4.rdoc doc/releases/builder-2.0.0.rdoc doc/releases/builder-2.1.1.rdoc --title builder-2.1.2 Documentation
(continuing with the rest of the installation)
...
Installing ri documentation for rails-3.0.1...
File not found: lib

$ rails -v
The program 'rails' is currently not installed.  You can install it by typing:
sudo apt-get install rails
</code></pre>

<p>Ubuntu repositories only have Rails 2.3.5 so that isn't an option.</p>

<p>How do I get Rails to install properly?</p>

<p><strong>Update:</strong> I tried the following, no error this time, but still no success: </p>

<pre><code>$ sudo gem install rails --no-rdoc --no-ri
Successfully installed rails-3.0.1
1 gem installed
$ rails -v
The program 'rails' is currently not installed...
</code></pre>

<p><strong>Update 2:</strong> So, thanks to Maran and Jörg, I now know the problem is not that <code>rails</code> isn't installed, but it's not added to the <code>PATH</code>. This can be fixed by adding the following to <code>~/.bashrc</code>:</p>

<pre><code>export PATH=/var/lib/gems/1.8/bin:$PATH
</code></pre>

<p>That raises a further question: What should have added that to the <code>PATH</code>? Presumably the <code>apt-get install rubygems</code>? And what else may be broken?</p>
","2988","","<p>The Debian version of RubyGems installs Gems into <code>/var/lib/gems/1.8/</code> and Gem binaries into <code>/var/lib/gems/1.8/bin</code>. You need to make sure that directory is in your <code>$PATH</code>.</p>

<p>This is a typical example of what I call the ""If you hear hooves, think horses, not zebras"" rule. If a computer tells you it cannot find something, the first thing to look for, is if that something is actually there, the second thing is whether the computer is looking in the right place. Installing <code>libreadline5-dev</code> OTOH is pretty far down the end of the list &hellip;</p>

<p>In this case, you are telling the computer to execute the file <code>rails</code> in the <code>$PATH</code>, which simply doesn't exist, because the directory it was installed into is not in the <code>$PATH</code>.</p>
"
"<p>In this example, </p>

<pre><code>def foo(x)
  if(x &gt; 5)
    bar = 100
  end
 puts bar
end
</code></pre>

<p>Then foo(6)    Outputs: 100
and foo(3) outputs nothing.</p>

<p>However if i changed the definition to</p>

<pre><code>def foo(x)
  if(x &gt; 5)
    bar = 100
  end
 puts bob
end
</code></pre>

<p>I get an ""undefined local variable or method"" error.  </p>

<p>So my question is why I am not getting this error when I call foo(3) and bar is never set?</p>
","2988","","<p>Your second example is actually a red herring: the reason why you are getting an exception is not because <code>bob</code> is uninitialized, it's because it is ambiguous. It's impossible to tell whether it's a variable or a method.</p>

<p>Your first example works, because uninitialized local variables (as well as global variables and instance variables) evaluate to <code>nil</code>. Therefore, <code>puts bar</code> is perfectly fine: in one case <code>bar</code> is initialized to <code>100</code> and this evaluates to <code>100</code>, in the other case it is uninitialized and thus evaluates to <code>nil</code>. <code>puts</code> calls <code>to_s</code> on its argument, which is defined for <code>nil</code> (it simply returns the empty string), so everything is fine and dandy.</p>

<p>See also <a href=""http://StackOverflow.Com/q/4021477/#4023224""><em>In Ruby, why after starting irb, foo.nil? says undefined error, and @foo.nil? gives “true”, and @@wah.nil? gives error again?</em></a></p>
"
"<p>I am trying to write a module that overwrites an instance method in the class it is included in.</p>

<p>This doesn't work:  </p>

<pre><code>require 'active_support'

class Foo
  def bar
    ""bar""
  end
end

module NewFoo
  extend ActiveSupport::Concern

  included do
    alias __bar__ bar
  end

  def bar
    ""new "" + __bar__
  end
end

class Baz &lt; Foo
  include NewFoo
end
</code></pre>

<p>My expectation is that <code>Baz.new.bar.should eql ""new bar""</code> but instead I get a <code>undefined local variable or method '__bar__'</code> error.</p>

<p>I have tried variations of the above, including the old way via <code>def self.include(base)...</code> to no avail.</p>

<p>Any pointers?</p>
","2988","","<p>There's this great new invention called <em>inheritance</em>:</p>

<pre><code>module NewFoo
  def bar
    'new ' + super
  end
end
</code></pre>

<p>Or more idiomatically</p>

<pre><code>""new #{super}""
</code></pre>
"
"<p>just curious why I cann't remove declared local variable from 'local_variables' array.</p>

<p>Example:</p>

<pre><code>x=1
myarr = local_variables.clone
p local_variables
=&gt; [:x, :_]
p myarr
=&gt; [:x, :_]
p local_variables.class
=&gt; Array
p myarr.class
=&gt; Array
myarr.delete :x
p myarr
=&gt; [:_]
local_variables.delete :x
p local_variables
=&gt; [:x, :_]
</code></pre>

<p>WTF ?</p>

<p>I did suspected calling local_variables.delete with parameter :x reinserts it back as it is declared anew. But if called with other previously undeclared symbol does not change it:</p>

<pre><code>p local_variables
=&gt; [:x, :_]
local_variables.delete :whatever
p local_variables
=&gt; [:x, :_]
</code></pre>

<p>Can somebody explain ?</p>

<p>Thx.</p>
","2988","","<p><code>local_variables</code> returns an array containing the names of all currently declared local variables. You can do anything you want with that array, but this is obviously not going to affect which local variables are declared. Why would it? If you strike out a name from phone book, does that person die?</p>
"
"<p>What's the best way to version large amounts of binary files, say audio and video files? Git doesn't seem like it's really designed to handle large amounts of binary files.</p>

<p>The other issue is that content produces don't necessarily want to learn how to use a developer's tool like Git.</p>

<p>Has anyone found a good binary versioning companion for text based versioning systems like Git? What do game developers usually do? Is content just not versioned in many cases? Do centralized SCM's work better in this case?</p>
","2988","","<p>I'm versioning my binary files in Git, and before that I used Subversion. However, I really cannot recommend either of those, especially on Windows and/or 32 Bit systems.</p>

<p>In game development, Perforce seems to have an almost 100% market penetration, specifically <em>because</em> of its handling of binary files.</p>
"
"<p>I am at a company that does not understand the concept of using frameworks and the benefits of them. I have tried to explain that it provides structure and organization but the people I am trying to explain to are still a little fuzzy about it. In your opinion, what is the best way to describe a framework in the most simplest terms and how it could overall benefit a company to transition their code from procedural and spaghetti code to a nice organized framework?</p>

<p>Thank you for your time.</p>
","2988","","<p>I'm going to concentrate on only a part of the question:</p>

<blockquote>
  <p>In your opinion, what is the best way to describe a framework in the most simplest terms</p>
</blockquote>

<p>Framework == Library + Inversion of Control</p>
"
"<p>Can library under GPL be used in the commercial software? </p>

<p>How about lgpl?</p>
","2988","","<p>Yes, provided that you abide by the terms of the license.</p>
"
"<p>Can library under MIT be used in the commercial software?</p>
","2988","","<p>Yes, provided that you abide by the terms of the license.</p>
"
"<p>Can library under Apache be used in the commercial software?</p>
","2988","","<p>Yes, provided that you abide by the terms of the license.</p>
"
"<p>I want an inherited ruby class to 'know' its class name via a class method. This is best illustrated by a contrived example:</p>

<pre><code>class Parent
  def self.whoami
    ??
  end
end

class Child &lt; Parent
  #No code should be needed.
end
</code></pre>

<p>So I should be able to call:</p>

<pre><code>Parent.whomai
</code></pre>

<p>and expect a return of ""Parent"" I should then be able to call:</p>

<pre><code>Child.whoami
</code></pre>

<p>and expect a return of ""Child"" I have a feeling that in conventional languages this might not be possible. But Ruby's metaprogramming model has amazed me before. Any thoughts? Thanks in advance.</p>
","2988","","<p>The method to get the name of a class (module, actually) is just <a href=""http://Ruby-Doc.Org/ruby-1.9/classes/Module.html#M000913""><code>Module#name</code></a>. There's no need to write your own:</p>

<pre><code>Parent.name # =&gt; 'Parent'
Child.name  # =&gt; 'Child'
</code></pre>

<p>However, in Ruby, there really is no such thing as a ""class name"" as there is in some other languages. In Ruby, a class is simply an object like any other object which gets assigned to a variable like any other variable.</p>

<p>All the <code>Module#name</code> method does is loop through all the constants in the system and check whether the module has been assigned to any one of them, and return that constant's name or <code>nil</code> if it cannot find any.</p>

<p>So, just like any other object, the ""name"" of a class is <em>really</em> nothing but whatever variable you use to refer to it.</p>

<p>Example:</p>

<pre><code>foo = Class.new
foo.name # =&gt; nil
</code></pre>

<p>Now, the ""name"" of the class is <code>foo</code>. However, <code>Module#name</code> returns <code>nil</code>, because <code>foo</code> is not a constant.</p>

<pre><code>bar = foo
bar.name # =&gt; nil
</code></pre>

<p>Now, the ""name"" of the class is <em>both</em> <code>foo</code> and <code>bar</code>, but <code>Module#name</code> obviously still returns <code>nil</code>.</p>

<pre><code>BAZ = foo
foo.name # =&gt; 'BAZ'
</code></pre>

<p>Now, since the class has been assigned to a constant, that constant's name will be considered that class's name &hellip;</p>

<pre><code>BAZ = nil
foo.name # =&gt; 'BAZ'
</code></pre>

<p>&hellip; even after the constant has been assigned to something different and &hellip;</p>

<pre><code>QUX = foo
QUX.name # =&gt; 'BAZ'
</code></pre>

<p>&hellip; even after the class has been assigned to a different constant.</p>

<p><code>Module#to_s</code> uses <code>Module#name</code> if it is not <code>nil</code>, so, to print the name of a class, you simply do</p>

<pre><code>puts Parent
</code></pre>

<p>There's really absolutely no need for all the complex fluff in the other answers.</p>
"
"<p>Is there anyway to install Apple iOS in VirtualBox? i have installed Android on VirtualBox with <a href=""http://code.google.com/p/live-android/"">live Android</a> and i have installed Snow leopard on VirtualBox but i don't know whether i could do the same with iOS if there is a way please let me know.(i am using both Ubuntu 10.04 and Windows 7 as hosts)</p>

<p>Thanks !!</p>

<p>UPDATE : here i wanted to know whether there exists a project like Hackintosh for iOS</p>
","2988","","<p>VirtualBox is a virtualizer, not an emulator. (The name kinda gives it away.) I.e. it can only virtualize a CPU that is actually there, not emulate one that isn't. In particular, VirtualBox can only virtualize x86 and AMD64 CPUs. iOS only runs on ARM CPUs.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/479596/what-makes-code-legacy"">What makes code legacy?</a>  </p>
</blockquote>



<p>What is the definition of ""legacy code""?</p>
","2988","","<p>Channeling Michael Feathers: Code without tests.</p>
"
"<p>What is the definition of technical debt?</p>
","2988","","<p>The <em>Technical Debt</em> Metaphor is meant to evoke an analogy to Financial Debt.</p>

<p>Financial Debt can be used as a tool to bootstrap a business: you need machines to make money, but you need money to buy machines. You break this catch-22 by taking out a loan to buy machines, and then repaying the loan using the money you gained using the machines.</p>

<p>Technical Debt can be used as a tool to boostrap your understanding of the domain: you need to play around with the software to figure out what it's all about, but you need to know what it's about to write the software. You break this catch-22 by writing the software as best as you can using the partial understanding you have currently, then rewrite the software using the understanding you gained from playing around with it.</p>

<p>Just like Financial Debt, Technical Debt needs to be small, needs to be paid back, and it accumulates interest if it <em>isn't</em> paid back.</p>

<p>It's very important that Technical Debt is a tool for <em>understanding</em>. It is <em>not</em> an excuse for bad code, bad design or bad decicions. It is <em>not</em> about getting a product out of the door.</p>

<p>It is about getting experience. (Note that getting a product out of the door might very well be a prerequisite to getting experience, but it's not what Technical Debt is about.)</p>

<p>Ward Cunningham originally coined the term when he was explaining to his boss why refactoring was important. The software they were working on was financial software, the company was a financial company, the boss was a finance guy, so he used a financial metaphor.</p>

<p>Since you specifically asked about a definition, here's mine:</p>

<blockquote>
  <p><em>Technical Debt</em> is the difference between your current understanding of the domain and the understanding that is reflected in the current version of the software.</p>
</blockquote>
"
"<p>In rspec: Can I attach a message to a check the same way as I would do in xUnit style test frameworks? How?</p>

<pre><code>assert_equal value1, value2, ""something is wrong""
</code></pre>
","2988","","<p>In RSpec, it's the matcher's job to print a sensible failure message. The generic matchers that ship with RSpec can obviously only print generic non-descript failure messages, since they don't know anything about your particular domain. That's why it is recommended that you write your own domain-specific matchers, which will give you both more readable tests and more readable failure messages.</p>

<p>Here's an example from the <a href=""https://www.relishapp.com/rspec/rspec-expectations/docs/custom-matchers/define-matcher"" rel=""nofollow"">RSpec documentation</a>:</p>

<pre><code>require 'rspec/expectations'

RSpec::Matchers.define :be_a_multiple_of do |expected|
  match do |actual|
    (actual % expected).zero?
  end
  failure_message_for_should do |actual|
    ""expected that #{actual} would be a multiple of #{expected}""
  end
  failure_message_for_should_not do |actual|
    ""expected that #{actual} would not be a multiple of #{expected}""
  end
  description do
    ""be multiple of #{expected}""
  end
end
</code></pre>

<p>Note: only <code>match</code> is required, the others will be generated automatically. However, the whole point of your question is of course that you do <em>not</em> like the default messages, so you need to at least also define <code>failure_message_for_should</code>.</p>

<p>Also, you can define <code>match_for_should</code> and <code>match_for_should_not</code> instead of <code>match</code> if you need different logic in the positive and negative case.</p>

<p>As @Chris Johnsen shows, you can also explicitly pass a message to the expectation. However, you run the risk of losing the readability advantages.</p>

<p>Compare this:</p>

<pre><code>user.permissions.should be(42), 'user does not have administrative rights'
</code></pre>

<p>with this:</p>

<pre><code>user.should have_administrative_rights
</code></pre>

<p>That would (roughly) be implemented like this:</p>

<pre><code>require 'rspec/expectations'

RSpec::Matchers.define :have_administrative_rights do
  match do |thing|
    thing.permissions == 42
  end
  failure_message_for_should do |actual|
    'user does not have administrative rights'
  end
  failure_message_for_should_not do |actual|
    'user has administrative rights'
  end
end
</code></pre>
"
"<p>I have the following dynamically created class that is passed into the xpath function of nokogiri:</p>

<pre><code>country = nil

ret = parent.xpath("".//text()[regex(.)]"", Class.new{
  def regex(node_set, lead)
    result = node_set.find_all do |node|
      node.text =~ POST_CODE_EXPRESSION || node.text =~ ZIP_CODE_EXPRESSION
    end
    result
  end
}.new)
</code></pre>

<p>I would like to somehow access or set the country variable or get access to the outer self from within the regex function.</p>

<p>Is there anyway I can pass the outer self into the Class.new expression or can anyone suggest a better way?</p>
","2988","","<p>Methods cannot be closures in Ruby, only blocks can:</p>

<pre><code>country = nil

ret = parent.xpath("".//text()[regex(.)]"", Class.new{
  define_method(:regex) do |node_set, lead|
    result = node_set.find_all do |node|
      node.text =~ POST_CODE_EXPRESSION || node.text =~ ZIP_CODE_EXPRESSION
    end
    result
  end
}.new)
</code></pre>

<p>By the way: your <code>regex</code> method is much more complicated than it needs to be. It's simply equivalent to</p>

<pre><code>define_method(:regex) do |node_set, lead|
  node_set.find_all do |node|
    node.text =~ POST_CODE_EXPRESSION || node.text =~ ZIP_CODE_EXPRESSION
  end
end
</code></pre>
"
"<p>In Ruby, programmers are allowed to change predefined classes.  So a really bad programmer could do something like:</p>

<pre><code>class String
  def ==(other)
    return true
  end
end
</code></pre>

<p>Obviously, almost no one would be quite this dumb, but the idea that more subtle changes to a predefined class could cause problems in already-working code seems to me to violate the principle of encapsulation.</p>

<p>Four questions:  </p>

<ol>
<li>First, does this, in fact, violate the OO principle of encapsulation?</li>
<li>Second, is there a way, as a     programmer, that I can guarantee in 
my code that I am working with an       unmodified version of a class?</li>
<li>Third,    should I ever be ""opening""    classes in    my code, for any
reason?</li>
<li>Finally, how    is this sort    of thing handled in a large-scale, production coding       environment?  In other words, do people in the programming industry      actually do this in code that others
will use?  Or even if they don't,    how    do you ensure that some
plugin author    somewhere isn't    doing something like    this that
will ruin an essential part    of    your program?</li>
</ol>

<p>I know this is a somewhat subjective question, but I'd really like to know how the wider programming community feels about this so called ""monkey patching.""</p>
","2988","","<blockquote>
  <p>First, does this, in fact, violate the OO principle of encapsulation?</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>Second, is there a way, as a programmer, that I can guarantee in my code that I am working with an unmodified version of a class?</p>
</blockquote>

<p>Not yet. Classboxes in Ruby 2.0 are (hopefully) going to be the solution.</p>

<blockquote>
  <p>Third, should I ever be ""opening"" classes in my code, for any reason?</p>
</blockquote>

<p>Only as a last resort.</p>

<p>You should <em>never</em> monkey-patch your own classes. There's simply no point. You control them, you can make them do what you want in the first place.</p>

<p>You should never monkey-patch classes in a library. (The exception to this rule are libraries whose <em>sole purpose</em> it is to monkey-patch something, e.g. Marc-André Lafortune's <code>backports</code> library, which monkey-patches Ruby 1.8.6, 1.8.7, 1.9.0 and 1.9.1 with as much as possible of the functionality from Ruby 1.9.2.) You <em>may</em> provide an add-on library which provides monkey-patches that make it easier to use your library (e.g. you have an encryption library which provides a <code>Kryptonite.encrypt(str)</code> method and you provide an add-on <code>String#encrypt</code> method), but that add-on should be in a separate library, which the user needs to <em>explicitly</em> <code>require</code>. It should be fully optional.</p>

<p>You should not monkey-patch core classes. This refers to classes like <code>Array</code> or <code>Symbol</code> in Ruby, but for a Rails library, I would also include classes like <code>ActiveRecord::Base</code> under the ""core"" label. (Same caveat as above. E.g. in versions of Rails before 3.0, there was no well-defined plugin API, monkey-patching was the <em>only way</em> to extend Rails. Without people who broke this rule, there would never haven been any plugins, and Rails would never be where it is now.)</p>

<p>Try inheritance first. Try composition (wrappers, proxies, facades, adapters, &hellip;) first. Try refactoring first. Try helper objects first. <em>Only</em> if that doesn't work, turn to monkey-patching.</p>

<p>Be respectful when you monkey-patch: if you are adding a new method, make sure it doesn't already exist, and deal with it if it does (e.g. call it from your method). If you are wrapping an existing method, make sure that if somebody else has already wrapped it, their wrapper gets called and that when somebody wants to wrap it afterwards, your wrapper allows that. (In particular, this means you must preserve the method's existing contract.)</p>

<p>Put your monkey-patches in a mixin, if at all possible. That way, they show up in the inheritance chain, which will give anybody who tries to debug the code a fighting chance to figure out what is going on. Put your monkey-patches in separate, obviously named files.</p>

<blockquote>
  <p>Finally, how is this sort of thing handled in a large-scale, production coding environment? In other words, do people in the programming industry actually do this in code that others will use? Or even if they don't, how do you ensure that some plugin author    somewhere isn't doing something like this that will ruin an essential part of your program?</p>
</blockquote>

<p>Don't work with ""really bad programmers"", as you call them.</p>

<p>As simplistic as this sounds, that's basically what it boils down to. Yes, of course, you can write tests, do code reviews, practice pair programming, use static analysis tools, run your code with warnings enabled (e.g. the code you posted in your question will generate a <code>warning: method redefined; discarding old ==</code>). But for me, that's all something that a not-really-bad-programmer would do anyway.</p>
"
"<p>Java has the convienient <code>System.getProperty(""user.home"")</code> to get the user's ""home"" directory in a platform-independent way.  What's the equivalent in Ruby?  I don't have a Windows box to play around with, and I feel like relying on tildes in filenames isn't the cleanest way.  Are there alternatives?</p>
","2988","","<p>The <a href=""http://RubyDoc.Info/docs/ruby-core/1.9.2/File.expand_path""><code>File.expand_path</code></a> method uses the Unix convention of treating the tilde (<code>~</code>) specially, so that <code>~</code> refers to the current user's home directory and <code>~foo</code> refers to <code>foo</code>'s home directory.</p>

<p>I don't know if there's a better or more idiomatic way, but <code>File.expand_path('~')</code> should get you going.</p>
"
"<p>I'm trying to optimize some code and I want to <em>instead on checking a value on every method call</em> just define the method to respond with the <em>checking already pre-calculate</em>, because this checking doesn't change on the whole live of the instance.</p>

<p>I decided to define different versions of the method for every instance created. More or less this way:</p>

<pre><code>class TestingSingletonMethodsWithVariable
  METHODS = %w(a b c d)

  def initialize(favorite_method)
    class &lt;&lt; self
      METHODS.each do |method_name|
        if( favorite_method == method_name )
          define_method method_name do
            puts ""#{method_name} its my favorite method""
          end
        else
          define_method method_name do
            puts ""#{method_name} its not my favorite method""
          end
        end
      end
    end
  end
end

t = TestingSingletonMethodsWithVariable.new('b')
t.a
t.b
t.c
t.d

# $ ruby test/testing_singleton_methods_with_variable.rb 
# test/testing_singleton_methods_with_variable.rb:7:in `initialize': undefined local variable or method `favorite_method' for #&lt;Class:#&lt;TestingSingletonMethodsWithVariable:0x1001a77b8&gt;&gt; (NameError)
#   from test/testing_singleton_methods_with_variable.rb:6:in `each'
#   from test/testing_singleton_methods_with_variable.rb:6:in `initialize'
#   from test/testing_singleton_methods_with_variable.rb:21:in `new'
#   from test/testing_singleton_methods_with_variable.rb:21
</code></pre>

<p>What is happening is that something weird is happening with the variables: the variables declares out-side the <code>class &lt;&lt; self</code> block are not visible for the variables inside.</p>

<p>Any one can explain me how can I do the behavior I'm looking for?</p>

<p>Thanks</p>
","2988","","<p>In Ruby, only blocks can be closures, class bodies (as well as module and method bodies) cannot be closures. Or to put it another way: only blocks create a new nested lexical scope, all others (module bodies, class bodies, method bodies and script bodies) create new top-level scopes.</p>

<p>So, you will need a block. Normally, this would mean using some form of <code>eval</code>, but here you can just use <code>define_singleton_method</code> instead:</p>

<pre><code>class TestingSingletonMethodsWithVariable
  METHODS = %w(a b c d)

  def initialize(favorite_method)
    METHODS.each do |method_name|
      if favorite_method == method_name
        define_singleton_method method_name do
          puts ""#{method_name} its my favorite method""
        end
      else
        define_singleton_method method_name do
          puts ""#{method_name} its not my favorite method""
        end
      end
    end
  end
end

t = TestingSingletonMethodsWithVariable.new('b')
t.a
t.b
t.c
t.d
</code></pre>
"
"<p>Does Ruby's standard library have a priority queue implementation?</p>
","2988","","<p>Nope, but <a href=""http://Algorithms.RubyForge.Org/classes/Containers/PriorityQueue.html"">there's one</a> in <a href=""https://GitHub.Com/Kanwei/Algorithms/"">Kanwei Li's Algorithms and Containers GSoC 2008 project</a>.</p>
"
"<p>On ruby, what is the reason for <code>include</code> is private, while <code>Object#extend</code> is public?</p>
","2988","","<p><code>Object#extend</code> <em>has</em> to be public, otherwise you wouldn't be able to use it. After all, its purpose is to mix in a module into an object, so you'd generally call it like <code>obj.extend(Foo)</code>, which isn't possible with private methods.</p>

<p><code>Module#include</code> is usually only used inside a module body like so:</p>

<pre><code>class Bar
  include Foo
end
</code></pre>

<p>I.e. it is usually called without a receiver, so it doesn't have to be public. Of course, it doesn't <em>have</em> to be private either.</p>

<p>My guess is the reason why it is private is that it is more invasive, because it changes the behavior of <em>every</em> instance of <code>Bar</code>, whereas <code>Object#extend</code> only changes a single object. Therefore, <code>Module#include</code> is in some sense ""more dangerous"" and thus is made private.</p>

<p>I don't know whether that is the actual reason, but it is consistent with other similar methods like <code>Module#define_method</code>.</p>
"
"<p>Not really sure if this question belong on SO but...</p>

<p>Say you were in the process of choosing between proprietary and open source products for some purpose. To help you choose you perform some benchmarks. Are you aware of any laws that would allow the vendor of the proprietary software to sue the publisher of a benchmark that is less than flattering to their product?</p>
","2988","","<p>Unfortunately, it is quite common for software vendors to put Field Of Use Restrictions in their EULAs which forbid benchmarking their products. Whether or not the specific product you are talking about has such restrictions and whether such restrictions are legally binding in your jurisdiction is something only a lawyer, or ultimately a court of law, can determine.</p>

<p>For example, I live in Germany, where a lot of stuff which US companies put in their EULAs is actually illegal and thus void. You can legally run Apple software on non-Apple hardware, and you can legally re-sell Microsoft OEM licenses, both of which is expressly forbidden in the licenses but is simply an illegal restriction and thus void under German law.</p>

<p>Microsoft's EULAs for instance, at least for their server products, routinely <em>do</em> forbid benchmarking, even though the US DoJ has actually ruled this practice illegal.</p>

<p>Note that if you are a competitor to the product you are benchmarking, you open up a whole different can of anti-trust worms &hellip;</p>
"
"<p>Does java support in current version of 6 lambda expressions or ""anonymous functions""? Is there something I can't do in java that I couldn't do with a programming language supporting lambda expressions? I understand that java is turing complete so you can do ""anything"" in it.</p>

<p>Why couldn't anonymous inner class wrapped functions represent functions as defined in lambda calculus? </p>

<p>What actually is an anonymous function and how you can say that some language supports anonymous functions?</p>
","2988","","<p>As I already hinted at with my comment above, the question really hinges on how exactly you define ""support"". In your question you already mentioned that Java is Turing-complete, and thus Java ""supports"" (for some definition of ""supports"") everything that every other programming language supports.</p>

<p>Java <em>does</em> support anonymous functions: just write an interpreter for the &lambda;-calculus in Java and pass the anonymous function in as a string.</p>

<p>However, I for one find that too much work for using an anonymous function. So, for me the interesting question is not so much whether Java supports anonymous functions but whether, when I want to use anonymous functions, Java supports <em>me</em>. IOW: does Java make it easy to use anonymous functions, does it guide me, does it help me?</p>

<p>Let's make a simple experiment: implement the <code>map</code> function and use it to increment every element of the list <code>[1, 2, 3, 4, 5]</code> by <code>1</code>.</p>

<h2>Haskell</h2>

<p>Here's how the implementation of <code>morph</code> (which is what I'm going to call the function in order to not collide with the already existing builtin <code>map</code> function) looks like in Haskell:</p>

<pre><code>morph _ []     = []
morph f (x:xs) = f x : morph f xs
</code></pre>

<p>That's all. Short and sweet: morphing the empty list with anything is just the empty list, and morphing a list with at least one element is applying the morphing function to the first element and concatenating that with the result of morphing the rest of the list.</p>

<p>As you can see, writing a function which accepts a function as an argument, is very easy, very lightweight.</p>

<p>Assuming that we have a list <code>l</code>:</p>

<pre><code>l = [1, 2, 3, 4, 5]
</code></pre>

<p>We can now call morph like so:</p>

<pre><code>morph (\x -&gt; 1 + x) l
</code></pre>

<p>Again, <em>passing</em> an anonymous function to our higher-order function is very easy, very lightweight.</p>

<p>And it looks almost like &lambda;-calculus. In fact, if you use a Haskell IDE, a text editor with a Haskell mode or a Haskell pretty-printer, it will actually be displayed like this:</p>

<pre><code>morph (λx → 1 + x) l
</code></pre>

<p>It gets even easier if we use an <em>operator section</em>, which allows us to pass a partially applied operator:</p>

<pre><code>morph (1+) l
</code></pre>

<p>Or, we can pass the pre-defined <code>succ</code> function which returns the successor of an integer:</p>

<pre><code>morph succ l
</code></pre>

<p>Although this is of course not an anonymous function, it is a named one.</p>

<h2>Scala</h2>

<p>In Scala, it looks very similar. The main difference is that Scala's type system is more complex than Haskell's and thus requires more type annotations:</p>

<pre><code>def morph[A, B](l: List[A])(f: A =&gt; B): List[B] = l match {
  case Nil     =&gt; Nil
  case x :: xs =&gt; f(x) :: morph(xs)(f)
}
</code></pre>

<p>It is still very lightweight. Essentially, all we had to do was to declare the <code>f</code> parameter to be of type <code>A =&gt; B</code> (i.e. a function from type <code>A</code> to type <code>B</code>), which is actually syntactic sugar for <code>Function1[A, B]</code>.</p>

<p>Now we just need our list:</p>

<pre><code>val l = List(1, 2, 3, 4, 5)
</code></pre>

<p>And morph it:</p>

<pre><code>morph(l) {_ + 1}
</code></pre>

<p>This takes again advantage of some of Scala's syntactic sugar. In anonymous functions, you can leave off the parameter list; if use every parameter exactly once and in the order they are defined, you can simply refer to them as <code>_</code>.</p>

<p>But even the full form is not much heavier:</p>

<pre><code>morph(l) {(e) =&gt; e + 1}
</code></pre>

<p>If I had gone through the trouble of making <code>morph</code> an instance method of some class and defined an implicit conversion from <code>List</code> to that class according to the <em>Pimp My Library</em> pattern, I could have even written something like</p>

<pre><code>l morph {_ + 1}
</code></pre>

<h2>Scheme</h2>

<p>Scheme, of course, should have no problems with anonymous and higher-order functions. Here's <code>morph</code>:</p>

<pre><code>(define (morph f l)
    (if (null? l)
        null
        (cons
            (f (first l))
            (morph f (rest l)))))
</code></pre>

<p>Here's our list:</p>

<pre><code>(define l '(1 2 3 4 5))
</code></pre>

<p>And our anonymous function usage:</p>

<pre><code>(morph (lambda (e) (+ e 1)) '(1 2 3 4 5))
</code></pre>

<h2>Ruby</h2>

<pre><code>module Enumerable
  def morph
    [].tap {|r| each {|e| r &lt;&lt; yield(e) }}
  end
end
</code></pre>

<p>This is <em>extremely</em> lightweight. We didn't even have to define a parameter for the function, because in Ruby, every method has an implied function parameter, called a <em>block</em>.</p>

<pre><code>l = [1, 2, 3, 4, 5]
</code></pre>

<p>Calling it is almost as lightweight as Scala</p>

<pre><code>l.morph {|e| e + 1 }
</code></pre>

<p>I can sort-of replicate the operator sections from the Haskell example by grabbing a reference to the <code>+</code> method of <code>1</code>:</p>

<pre><code>l.morph(&amp;1.method(:+))
</code></pre>

<p>Ruby also has a pre-defined <code>succ</code> method for integers which we can pass using the <code>Symbol#to_proc</code> trick:</p>

<pre><code>l.morph(&amp;:succ)
</code></pre>

<p>Some people criticize blocks in Ruby, because every method can only take a single block, and methods taking more than one function are much uglier, but it's actually not <em>that</em> bad. Here's the same code as above, but without using blocks:</p>

<pre><code>module Enumerable
  def morph(f)
    [].tap &amp;-&gt; r { each &amp;-&gt; e { r &lt;&lt; f.(e) }}
  end
end

l = [1, 2, 3, 4, 5]

l.morph -&gt; e { e + 1 }
l.morph(1.method(:+))
</code></pre>

<h2>ECMAScript</h2>

<p>ECMAScript is a direct descendant of Scheme, so it's no surprise that it can handle our problem nicely, although with some amount of syntax clutter:</p>

<pre><code>Array.prototype.morph = function (f) {
    var r = [];
    this.forEach(function (e) { r.push(f(e)); });

    return r;
}
</code></pre>

<p>The main distraction here is the generally ugly syntax, not so much the handling of higher-order functions.</p>

<p>Let's build our list (well, array):</p>

<pre><code>var l = [1, 2, 3, 4, 5];
</code></pre>

<p>And call the <code>morph</code> function (actually, a method in this case) passing an anonymous function as an argument:</p>

<pre><code>l.morph(function (e) { return e + 1; });
</code></pre>

<h2>C#</h2>

<p>Now we're moving closer to our ultimate target language. Here's C#:</p>

<pre><code>public static IEnumerable&lt;B&gt; Morph&lt;A, B&gt;(this IEnumerable&lt;A&gt; l, Func&lt;A, B&gt; f)
{
    IList&lt;B&gt; r = new List&lt;B&gt;();
    foreach (var e in l) r.Add(f(e));

    return r;
}
</code></pre>

<p>Not too bad. Note the type of the function: <code>Func&lt;A, B&gt;</code>. This is a pre-defined type which is part of the core library, just like <code>Function1[A, B]</code> in Scala or <code>a → b</code> in Haskell. (This is an important distinction to Java.)</p>

<p>Thanks to type inference and collection initializers, creating the list isn't all too painful:</p>

<pre><code>var l = new List&lt;int&gt; { 1, 2, 3, 4, 5 };
</code></pre>

<p>And passing a lambda which consists only of a single expression is basically as lightweight as Ruby, Scala, Scheme or Haskell and even more lightweight than ECMAScript, because you don't need the <code>function</code> or <code>return</code> keywords:</p>

<pre><code>l.Morph(e =&gt; e + 1);
</code></pre>

<p>But even using the ""full"" syntax isn't too bad:</p>

<pre><code>l.Morph((e) =&gt; { return e + 1; });
</code></pre>

<p>(You'll notice that I made <code>Morph</code> an extension method, which means I can call it like <code>l.Morph(f)</code> in addition to <code>Morph(l, f)</code>.)</p>

<h2>Java</h2>

<pre><code>static &lt;A, B&gt; List&lt;B&gt; morph(List&lt;A&gt; l, Function1&lt;A, B&gt; f) {
    List&lt;B&gt; r = new ArrayList&lt;B&gt;();
    for (A e: l) r.add(f.apply(e));

    return r;
}
</code></pre>

<p>At first glance, this isn't too bad, actually. In fact, it looks pretty much exactly like the C# version. But why can't I write <code>f(e)</code>? Why do I have to write <code>f.apply(e)</code>? In all other languages I could use the same (or in the case of Ruby, almost the same) syntax for calling a function that was passed as an argument as I would for calling any other function, procedure or method.</p>

<p>I know it isn't much, but it leaves this kind of bitter taste that somehow functions aren't quite first-class. Also, as we'll see further on, there is one of those small annoyances at every single step along the way, and even though every single one of them is insignificant by itself, they <em>do</em> add up.</p>

<p>Here's our list:</p>

<pre><code>List&lt;Integer&gt; l = Arrays.asList(1, 2, 3, 4, 5);
</code></pre>

<p>And this is how we call our <code>morph</code>:</p>

<pre><code>morph(l, new Function1&lt;Integer, Integer&gt;() {
    public Integer apply(Integer n) {
        return n + 1;
    }
});
</code></pre>

<p>This is pretty heavy stuff. I mean, all I'm doing is calling a method and passing two arguments. Why does that explode into four lines? In all other languages it was just a simple one-liner. Of course, I could remove all line breaks and it would still be valid:</p>

<pre><code>morph(l, new Function1&lt;Integer, Integer&gt;() { public Integer apply(Integer n) { return n + 1; }});
</code></pre>

<p>But I think you see what I'm getting at. The actual operation that is being performed, incrementing each element by 1, is pretty much invisible between all that noise.</p>

<p>Note also that in some of the other languages I actually used anonymous functions <em>inside</em> the definition of the <code>morph</code> function, for example in Ruby and ECMAScript and it was no big deal. If I were to do that in Java, it would lead to even more clutter and cruft and an explosion of lines.</p>

<p>So, even at this point we are seeing that working with higher-order and anonymous functions in Java is <em>way</em> more cumbersome than in pretty much any other mainstream (and not so mainstream) language.</p>

<p>But we haven't even gotten to the really ugly part yet: what is that <code>Function1&lt;A, B&gt;</code> type there? Where did that come from?</p>

<p>Well, I actually had to <em>write</em> that type <em>myself</em>!</p>

<pre><code>interface Function1&lt;A, B&gt; {
    B apply(A a);
}
</code></pre>

<p>This is, of course, a so-called <em>SAM interface</em>, i.e. an interface or an abstract class with a <em>Single 
Abstract Method</em>. Which is the closest thing to a function type Java has. In some sense, a function <em>is</em> just an object with a single method, so that's perfectly fine. The fact that function types are represented via SAM interfaces isn't the problem either. In fact, that's basically how they are are represented in Scala (in Scala, <code>f(a)</code> is just syntactic sugar for <code>f.apply(a)</code>, so <em>any</em> object with an <code>apply</code> method is essentially a function), Ruby (in Ruby, <code>f.(a)</code> is just syntactic sugar for <code>f.call(a)</code>, so <em>every</em> object with a <code>call</code> method is essentially a function) and similarly in C#.</p>

<p>The problem is that I had to write it, that it wasn't already there.</p>

<p>Not only did I have to <em>write</em> it myself, I had to come up with a <em>name</em> for it. <em>And</em> I had to come up with a name for the method. None of which I had to do with any of the other languages here. Well, actually, I just stole the names from Scala, so the actual ""coming up with the names"" part wasn't so difficult.</p>

<p>What's really important are the <em>implications</em> of having to come up with a name. Java has a <em>nominal type system</em>, i.e. a type system based on <em>names</em>. And thus the fact that I had to come up with a name myself means that everybody else also has to come up with names. And because <em>their</em> names are different than mine (and if they aren't, then that will be a compile error), that means that I cannot pass the same function to two different libraries. Say, for example, I want to pass the same filtering function to my gridview and to my ORM. But the gridview expects, say, a <code>javax.swing.Predicate&lt;T&gt;</code> with a single method <code>apply(T el)</code> whereas my ORM expects an <code>org.sleepy.Predicate&lt;T&gt;</code> with a single method <code>apply(T el)</code>.</p>

<p>Note that these two types are really exactly the same, it's just that they have different names and thus I cannot pass the same function to both libraries. This is not a hypothetical example. During the recent discussions about Project Lambda for Java, someone counted how many duplicate instances of a <code>Predicate</code> type there were already in Java SE 6, and IIRC the number was in the double digits.</p>

<p>It is perfectly possible to solve this problem in a nominal type system. After all, there aren't dozens of incompatible copies of a <code>List</code> type, simply because Sun put a <em>single</em> one in the library, and everybody uses that. They could have done the same with <code>Function</code>, but they didn't, which leads to a proliferation of identical, yet mutually incompatible types not only in third-party libraries but even <em>within</em> the JRE. (For example, <code>Runnable</code> is arguably a function type, as is <code>Comparator</code>. But why do they have to be special-cased?) In .NET, it works just fine, because Microsoft put one single type into the runtime. (Well, actually not quite one single type, but close enough.)</p>

<p><em>Because</em> there is no single function type in the JRE, there are also only very few methods which take a function type. This is another thing that makes first-class and anonymous functions hard to use in Java. Once you have one, there's not much you can do with it. You can't filter an array with a predicate function, you can't transform a list using a mapping function, you can't sort a gridview using a comparator function.</p>

<p>This is also one of the reasons why I am so disappointed with some of the iterations of Project Lambda. They keep dropping the introduction of Function Types from the project, although the lack of function types is IMHO one of the biggest problems. The ugly syntax can be fixed with IDE trickery, the lack of standard function types can't. (Not to mention all those people who use the JVM and the JRE but don't use Java. They don't benefit one bit from adding syntactic sugar for anonymous inner SAM classes to the Java language, simply because they <em>do not use</em> the Java language. What they need are function types, and an updated collection library which <em>uses</em> function types.)</p>

<p>So, we're up to four problems now:</p>

<ol>
<li><em>syntactic overhead</em> because you have to use stuff like <code>f.apply(a)</code> and <code>new Function1&lt;A, A&gt;() { public A apply(A a) { return a; }}</code> (BTW, that's the identity function, i.e. the function which does absolutely nothing, and it takes up 58(!) characters),</li>
<li><em>modelling overhead</em> because you have to define your own function types yourself, in addition to the domain types you actually care about,</li>
<li><em>limited usefulness</em> because once you have created your lambdas, there aren't actually that many methods which take lambdas as arguments and </li>
<li><em>limited reuse</em> because even <em>if</em> you find a method that takes a lambda, it doesn't take <em>your</em> lambda, since the types don't match up.</li>
</ol>

<p>And when I talk about ""modelling overhead"", I'm not just talking about <em>one</em> <code>Function1</code> type. Enter primitive types &hellip;</p>

<p>Have you noticed how I used <code>Integer</code>s and not <code>int</code>s in my code above? Yes, that's right, the single biggest design screwup in the history of programming languages, Java's Original Sin, the bane of every Java programmer's existence, has once again come to bite us in the ass: primitive types.</p>

<p>You see, in Scala, there is exactly <em>one</em> class that represents a function with <code>n</code> arguments. It's called <code>FunctionN[T₁, T₂, …, Tn, R]</code>. So, there is exactly one class <code>Function0[R]</code> for functions without any arguments, one class <code>Function1[T, R]</code> for functions with one argument, one class <code>Function3[A, B, C, R]</code> for functions with three arguments and so forth, all the way up to something around 20, I believe.</p>

<p>In C#, there are exactly <em>two</em> classes that represent a function with <code>n</code> arguments: <code>Func&lt;T₁, T₂, …, Tn, R&gt;</code> and <code>Action&lt;T₁, T₂, …, Tn&gt;</code>. This is because there is no type which represents ""no type"". So, you cannot declare a function which doesn't return anything using C# (<code>void</code> is a modifier, not a type), and thus you need a separate type (<code>Action</code>) to represent functions that don't return anything. So, you have two classes <code>Func&lt;R&gt;</code> and <code>Action</code>, which represent functions that don't take any arguments, two classes <code>Func&lt;T, R&gt;</code> and <code>Action&lt;T&gt;</code> which represent functions of one argument and so forth, again up to circa 20. (In Scala, a function that doesn't return anything simply has the return type <code>Unit</code>, so you can just have a <code>Function2[Int, Int, Unit]</code>, for example.)</p>

<p>In Java, however, you need 10&times;9<sup>n</sup> types to represent a function of n arguments. Let me demonstrate that with just <em>one</em> argument:</p>

<pre><code>interface Action1_T                 { void    apply(T       a); }
interface Action1_byte              { void    apply(byte    a); }
interface Action1_short             { void    apply(short   a); }
interface Action1_int               { void    apply(int     a); }
interface Action1_long              { void    apply(long    a); }
interface Action1_float             { void    apply(float   a); }
interface Action1_double            { void    apply(double  a); }
interface Action1_boolean           { void    apply(boolean a); }
interface Action1_char              { void    apply(char    a); }
interface Function1_T_R             { R       apply(T       a); }
interface Function1_T_byte          { byte    apply(T       a); }
interface Function1_T_short         { short   apply(T       a); }
interface Function1_T_int           { int     apply(T       a); }
interface Function1_T_long          { long    apply(T       a); }
interface Function1_T_float         { float   apply(T       a); }
interface Function1_T_double        { double  apply(T       a); }
interface Function1_T_boolean       { boolean apply(T       a); }
interface Function1_T_char          { char    apply(T       a); }
interface Function1_byte_R          { R       apply(byte    a); }
interface Function1_byte_byte       { byte    apply(byte    a); }
interface Function1_byte_short      { short   apply(byte    a); }
interface Function1_byte_int        { int     apply(byte    a); }
interface Function1_byte_long       { long    apply(byte    a); }
interface Function1_byte_float      { float   apply(byte    a); }
interface Function1_byte_double     { double  apply(byte    a); }
interface Function1_byte_boolean    { boolean apply(byte    a); }
interface Function1_byte_char       { char    apply(byte    a); }
interface Function1_short_R         { R       apply(short   a); }
interface Function1_short_byte      { byte    apply(short   a); }
interface Function1_short_short     { short   apply(short   a); }
interface Function1_short_int       { int     apply(short   a); }
interface Function1_short_long      { long    apply(short   a); }
interface Function1_short_float     { float   apply(short   a); }
interface Function1_short_double    { double  apply(short   a); }
interface Function1_short_boolean   { boolean apply(short   a); }
interface Function1_short_char      { char    apply(short   a); }
interface Function1_int_R           { R       apply(int     a); }
interface Function1_int_byte        { byte    apply(int     a); }
interface Function1_int_short       { short   apply(int     a); }
interface Function1_int_int         { int     apply(int     a); }
interface Function1_int_long        { long    apply(int     a); }
interface Function1_int_float       { float   apply(int     a); }
interface Function1_int_double      { double  apply(int     a); }
interface Function1_int_boolean     { boolean apply(int     a); }
interface Function1_int_char        { char    apply(int     a); }
interface Function1_long_R          { R       apply(long    a); }
interface Function1_long_byte       { byte    apply(long    a); }
interface Function1_long_short      { short   apply(long    a); }
interface Function1_long_int        { int     apply(long    a); }
interface Function1_long_long       { long    apply(long    a); }
interface Function1_long_float      { float   apply(long    a); }
interface Function1_long_double     { double  apply(long    a); }
interface Function1_long_boolean    { boolean apply(long    a); }
interface Function1_long_char       { char    apply(long    a); }
interface Function1_float_R         { R       apply(float   a); }
interface Function1_float_byte      { byte    apply(float   a); }
interface Function1_float_short     { short   apply(float   a); }
interface Function1_float_int       { int     apply(float   a); }
interface Function1_float_long      { long    apply(float   a); }
interface Function1_float_float     { float   apply(float   a); }
interface Function1_float_double    { double  apply(float   a); }
interface Function1_float_boolean   { boolean apply(float   a); }
interface Function1_float_char      { char    apply(float   a); }
interface Function1_double_R        { R       apply(double  a); }
interface Function1_double_byte     { byte    apply(double  a); }
interface Function1_double_short    { short   apply(double  a); }
interface Function1_double_int      { int     apply(double  a); }
interface Function1_double_long     { long    apply(double  a); }
interface Function1_double_float    { float   apply(double  a); }
interface Function1_double_double   { double  apply(double  a); }
interface Function1_double_boolean  { boolean apply(double  a); }
interface Function1_double_char     { char    apply(double  a); }
interface Function1_boolean_R       { R       apply(boolean a); }
interface Function1_boolean_byte    { byte    apply(boolean a); }
interface Function1_boolean_short   { short   apply(boolean a); }
interface Function1_boolean_int     { int     apply(boolean a); }
interface Function1_boolean_long    { long    apply(boolean a); }
interface Function1_boolean_float   { float   apply(boolean a); }
interface Function1_boolean_double  { double  apply(boolean a); }
interface Function1_boolean_boolean { boolean apply(boolean a); }
interface Function1_boolean_char    { char    apply(boolean a); }
interface Function1_char_R          { R       apply(char    a); }
interface Function1_char_byte       { byte    apply(char    a); }
interface Function1_char_short      { short   apply(char    a); }
interface Function1_char_int        { int     apply(char    a); }
interface Function1_char_long       { long    apply(char    a); }
interface Function1_char_float      { float   apply(char    a); }
interface Function1_char_double     { double  apply(char    a); }
interface Function1_char_boolean    { boolean apply(char    a); }
interface Function1_char_char       { char    apply(char    a); }
</code></pre>

<p>That's 90(!) different types just to represent the concept of ""something that takes one argument"".</p>

<p>And, of course, if I want to write something which takes a function as an argument, I need to have a corresponding number of overloads as well, so if I want to write a method which filters some values based on a predicate, I need 9 overloads of that function which take <code>Function1_T_boolean</code>, <code>Function1_byte_boolean</code>, <code>Function1_short_boolean</code>, <code>Function1_int_boolean</code>, <code>Function1_long_boolean</code>, <code>Function1_float_boolean</code>, <code>Function1_double_boolean</code>, <code>Function1_boolean_boolean</code> and <code>Function1_char_boolean</code>.</p>

<p>(By the way: this still ignores checked exceptions. Technically, we also need 2<sup>n</sup> copies of every single one of those 90 interfaces, where n is the number of different types of checked exceptions that exist in Java.)</p>

<p>So, that's reasons number 5 and 6: a massive explosion in the number of types and correspondingly the number of methods.</p>

<p>If you put all of that together, then I guess you would agree that anonymous inner classes in Java are much more cumbersome than anonymous functions in, well, pretty much every other programming language.</p>

<p>But there's still more!</p>

<p>We haven't even talked about closures yet! While closures are orthogonal to first-class and anonymous functions, they are also one of the most important (and interesting) use cases of anonymous and first-class functions. Inner classes (whether anonymous or not) <em>are</em> closures, but as @Jon Skeet already pointed out, they are severely limited.</p>

<p>In conclusion, I would say that No, Java does not support anonymous functions.</p>

<p>Oh, I almost forgot: there was another question somewhere:</p>

<blockquote>
  <p>What actually is an anonymous function</p>
</blockquote>

<p>That's easy. A function with no name.</p>

<blockquote>
  <p>and how you can say that some language supports anonymous functions?</p>
</blockquote>

<p>If it makes it easy to work with them.</p>

<p>Java doesn't: there is a difference between <em>supporting</em> anonymous functions and being able to emulate a subset of the features of anonymous functions by encoding them into anonymous inner SAM classes.</p>
"
"<p>How do I determine the current open class in Ruby?</p>
","2988","","<p>Inside of a <code>class</code> definition body, <code>self</code> refers to the class itself. <code>Module#name</code> will tell you the name of the class/module, but only if it actually has one. (In Ruby, there is no such thing as a ""class name"". Classes are simply objects just like any other which get assigned to variables just like any other. It's just that if you happen to assign a class object to a constant, then the <code>name</code> method will return the name of that constant.)</p>

<p>Example:</p>

<pre><code>puts class Foo
  name
end
# Foo
</code></pre>

<p>But:</p>

<pre><code>bar = Class.new
bar.name # =&gt; nil
BAR = bar
bar.name #=&gt; 'BAR'
</code></pre>
"
"<p><a href=""http://www.hanselman.com/blog/"" rel=""nofollow"">Scott Hanselman</a> (<a href=""http://stackoverflow.com/users/6380/scott-hanselman"">alternate link</a>) suggested in a <a href=""https://twitter.com/shanselman/status/5490500635205632"" rel=""nofollow"">twitter tweet</a> on November 18, 2010 that ""OpenID might be Dead"".</p>

<p><img src=""http://i.stack.imgur.com/vmtBE.png"" alt=""OpenID is Dead""></p>

<p><strong><em>If</em> this were true (I'm not saying it is), what other options are there for universal sign-in (similar to OpenID)?</strong>  </p>

<hr>

<h3>further info</h3>

<p>I'm currently involved in a pretty good sized project, and it's public facing log-ins are completely OpenID driven (Using <a href=""http://www.dotnetopenauth.net/"" rel=""nofollow"">DotNetOpenAuth</a>).  If this is going to be too challenging for users (as per the comments made around Scott's original tweet), I'm going to need to know of some GOOD alternative solutions... if there even is one.</p>

<p>Any information would be appreciated.</p>

<h3>edit</h3>

<p>To clarify and rephrase.  I'm not trying to launch a debate on ""<strong>WHAT IS THE NEXT BIG THING</strong>""... I'm simply asking ""What is there to take the place of OpenID, should it be <em>dead</em>"".  I'm also NOT saying that I think OpenID <strong>is</strong> dead, but merely asking the question based on a comment made by a well respected developer.</p>

<h3>addition</h3>

<p>As @marc pointed out in a comment. There is a pretty good rant/blog post by Rob Conery titled <a href=""http://blog.wekeroad.com/thoughts/open-id-is-a-party-that-happened"" rel=""nofollow"">Open ID Is A Nightmare</a> where the Rob makes some pretty compelling arguments as to why OpenID is not desirable. I have to agree that I don't want to be wasting a large amount of time recovering accounts for my users, my time is better spent in other places.</p>

<p>So back to the original question.  What is there for alternatives? Is there a better ""standard"" out there that is ""open"" yet doesn't fall apart if a provider decides to change something? (changing API's or encryption logic for example)... but also one that can span across multiple providers and still recognize a single user?</p>
","2988","","<p>In my thoroughly subjective personal opinion, OpenID is <em>not dead</em> precisely because there is <em>nothing</em> there to take its place.</p>

<p>oAuth is often mentioned but that is completely orthogonal. OpenID is for humans logging into machines, oAuth is for machines logging into machines on behalf of humans.</p>

<p>My <em>fear</em> is that it is going to be replaced with a proprietary technology like Facebook Login, Yahoo! ID, Live ID, etc., which would leave people like me who don't want all their sensitive information shipped off to a country with frankly less-than-third-world-level privacy standards unable to login.</p>
"
"<p>this is my algorithm that I have written it with my friends (which are in stackoverflow site)
this algorithm will find just the first duplicate number and returns it.this works in <code>O(n)</code>
I want to complete this algorithm that helps me to get duplicate numbers with their repetition. consider that I have <code>[1,1,3,0,5,1,5]</code>
I want this algorithm to return <code>2</code> duplicate numbers which are <code>1 and 5</code> with their repetition which is <code>3 and 2</code> respectively .how can I do this with <code>O(n)</code>?</p>

<pre><code>1   Algorithm Duplicate(arr[1:n],n)
2   
3   {
4      Set s = new HashSet();i:=0;
5      while i&lt;a.size() do
6      {
7          if(!s.add(a[i)) then
8          {
9             return a[i]; //this is a duplicate value!
10            break;
11         }
12         i++;
13      } 
14   }
</code></pre>
","2988","","<p>In this particular instance it's not so much about the algorithm, it's about the data structure: a <code>Multiset</code> is like a <code>Set</code>, except it doesn't store only unique items, instead it stores a count of how often each item is in the <code>Multiset</code>. Basically, a <code>Set</code> tells you whether a particular item is in the <code>Set</code> <em>at all</em>, a <code>Multiset</code> in addition also tells you <em>how often</em> that particular item is in the <code>Multiset</code>.</p>

<p>So, basically all you have to do is to construct a <code>Multiset</code> from your <code>Array</code>. Here's an example in Ruby:</p>

<pre><code>require 'multiset'

print Multiset[1,1,3,0,5,1,5]
</code></pre>

<p>Yes, that's all there is to it. This prints:</p>

<pre><code>#3 1
#1 3
#1 0
#2 5
</code></pre>

<p>If you only want actual duplicates, you simply <code>delete</code> those items with a count less than <code>2</code>:</p>

<pre><code>print Multiset[1,1,3,0,5,1,5].delete_with {|item, count| count &lt; 2 }
</code></pre>

<p>This prints just</p>

<pre><code>#1 3
#2 5
</code></pre>

<p>As @suihock mentions, you can also use a <code>Map</code>, which basically just means that instead of the <code>Multiset</code> taking care of the element counting for you, you have to do it yourself:</p>

<pre><code>m = [1,1,3,0,5,1,5].reduce(Hash.new(0)) {|map, item| map.tap { map[item] += 1 }}
print m
# { 1 =&gt; 3, 3 =&gt; 1, 0 =&gt; 1, 5 =&gt; 2 }
</code></pre>

<p>Again, if you only want the duplicates:</p>

<pre><code>print m.select {|item, count| count &gt; 1 }
# { 1 =&gt; 3, 5 =&gt; 2 }
</code></pre>

<p>But you can have that easier if instead of counting yourself, you use <code>Enumerable#group_by</code> to group the elements by themselves and then map the groupings to their sizes. Lastly, convert back to a <code>Hash</code>:</p>

<pre><code>print Hash[[1,1,3,0,5,1,5].group_by(&amp;-&gt;x{x}).map {|n, ns| [n, ns.size] }]
# { 1 =&gt; 3, 3 =&gt; 1, 0 =&gt; 1, 5 =&gt; 2 }
</code></pre>

<p>All of these have an amortized worst case step complexity of &Theta;(n).</p>
"
"<p>I know Rails has some nice helpers for date and time management. Is there an already-working project consisting of, or incorporating a clean DSL for standard units and their conversions? Any project with helpers for the conversion between the two systems' basic units of length and weight would work. Thank you!</p>
","2988","","<p>Take a look at Tom Sawyer's <a href=""http://RubyWorks.GitHub.Com/vanunits/"" rel=""nofollow"">Van/Unit</a></p>

<p>This is from the homepage:</p>

<pre><code>require 'van/units'
include Units

1.mile.to(feet)
1.acre.to(yd**2)
1.acre.to(sq_yd)
1.gallon.to(self.L)
1.lb.to(kg)
1.m.s.to(m.s)
1.sq_mi.to(km**2)
1.mile.to(km)
1.usd.to(twd)
1.bit/s + 8.bytes/s
</code></pre>
"
"<p>I'm looking for a way (in JavaScript) to collect a set of objects into multiple arrays, where each array contains a certain type of object, and the arrays are stored as values in an associative array, with the keys being the types. For example:</p>

<p>Input:</p>

<pre><code>[&lt;apple&gt;, &lt;cat&gt;, &lt;pear&gt;, &lt;mercedes&gt;, &lt;dog&gt;, &lt;ford&gt;, &lt;orange&gt;]
</code></pre>

<p>Output:</p>

<pre><code>{
  'fruit': [&lt;apple&gt;, &lt;pear&gt;, &lt;orange&gt;],
  'animal': [&lt;cat&gt;, &lt;dog&gt;],
  'car': [&lt;mercedes&gt;, &lt;ford&gt;]
}
</code></pre>

<p>In ruby, you could do the following:</p>

<pre><code>things_by_type = {}
things.each do |thing|
  (things_by_type[thing.type] ||= []) &lt;&lt; thing
end
</code></pre>

<p>which is nice and concise.</p>

<p>What's a good pattern for doing the same thing in JavaScript that's concise and efficient? I could do something like this, but it's not as nice:</p>

<pre><code>var thing, things_by_type = {};
for (var i = 0; i &lt; things.length; i++) {
  thing = things[i];
  if(things_by_type[thing.type]) {
    things_by_type[thing.type].push(thing);
  } else {
    things_by_type[thing.type] = [thing];
  }
}
</code></pre>
","2988","","<blockquote>
  <p>In ruby, you could do the following:</p>

<pre><code>things_by_type = {}
things.each do |thing|
  (things_by_type[thing.type] ||= []) &lt;&lt; thing
end
</code></pre>
  
  <p>which is nice and concise.</p>
</blockquote>

<p>Actually, you can make that even nicer.</p>

<p>First off, <code>Hash.new</code> takes a block argument which will be called every time a non-existing key is referenced. You can use that to create that key. That way you get rid of the conditional logic inside the block.</p>

<pre><code>things_by_type = Hash.new {|h, k| h[k] = [] }
things.each do |thing|
  things_by_type[thing.type] &lt;&lt; thing
end
</code></pre>

<p>Secondly, what you have here is called a <code>fold</code> or <code>reduce</code>: you are ""folding"" or ""reducing"" a collection (the array of objects) into a single value (the hash, which confusingly also happens to be a collection, but is nonetheless a single value).</p>

<p>You can generally easily spot this pattern by looking for places where you initialize some variable, then loop over a collection and manipulate that variable at every iteration of the loop.</p>

<p>Ruby has folding built in, via the <code>Enumerable#reduce</code> method:</p>

<pre><code>things.reduce(Hash.new {|h, k| h[k] = [] }) do |h, thing|
  h.tap { h[thing.type] &lt;&lt; thing }
end
</code></pre>

<p>But what you are <em>really</em> doing, is grouping the array by the type attribute of its elements, which is also built into Ruby as <code>Enumerable#group_by</code>:</p>

<pre><code>things.group_by {|thing| thing.type }
</code></pre>

<p>Which can be further simplified by using <code>Symbol#to_proc</code> to</p>

<pre><code>things.group_by(&amp;:type)
</code></pre>

<p>Unfortunately, ECMAScript doesn't have <code>groupBy</code>, nor default values for non-existing properties, but it <em>does</em> have <code>Array.prototype.reduce</code>:</p>

<pre><code>things.reduce(function (acc, thing) {
    (acc[thing.type] || (acc[thing.type] = [thing])).push(thing);
    return acc;
}, {});
</code></pre>
"
"<p>This is an interview question: Given the 1.14 billion population of India,what is the most effective/efficient sorting algorithm that can be used to sort them by their heights?(Heights data is available to you).</p>
","2988","","<p>My guess is that the interviewer assumes that the number of different heights is significantly smaller than the number of people, which means that a <em>counting sort</em> would be appropriate, which has a worst-case step complexity of <code>Θ(n+k)</code>, where <code>n</code> is the number of people and <code>k</code> is the number of heights.</p>

<p>Because counting sort is not a comparison sort, the typical <code>Ω(n×log n)</code> lower bound does not apply, which is probably what the interviewer was <em>really</em> getting at.</p>
"
"<p>Is there a way to point Ruby FFI to a header file instead of writing attach_function calls?  A header file basically has the same exact information.</p>

<p>temp_convert.rb:</p>

<pre><code>attach_function :temp_convert, [:float], :float
</code></pre>

<p>temp_convert.h:</p>

<pre><code>float temp_convert(float temp);
</code></pre>
","2988","","<p>Because C header files are written in C but Ruby interpreters only interpret Ruby. Also, the header files might not even be available at runtime.</p>

<p>There <em>has</em> been talk about automatically generating <code>attach_function</code> calls from headers. However, as I hinted at above, this basically means that you must implement a full C compiler (well, the full front half of one, to be precise). At the moment, the Ruby implementers are more focused on making Ruby run as fast as C to alleviate the need to use FFI in the first place than writing their own C compiler (which is a non-trivial undertaking even though you only need to do the lexing, parsing, semantic analysis and typing parts, not the actual code generation or optimization).</p>
"
"<p>why  most of the scripting languages are loosely typed ? for example</p>

<p>javascript , python , etc ?</p>
","2988","","<p>I don't quite understand your question. Apart from PHP, VBScript, <code>COMMAND.COM</code> and the Unix shell(s) I can't really think of any loosely typed scripting languages.</p>

<p>Some examples of scripting languages which are not loosely typed are Python, Ruby, Mondrian, JavaFXScript, PowerShell, Haskell, Scala, ELisp, Scheme, AutoLisp, Io, Ioke, Seph, Groovy, Fantom, Boo, Cobra, Guile, Slate, Smalltalk, Perl, &hellip;</p>
"
"<p>What is regular expression for detecting a for loo and another one for detecting while loop.
want to detect <code>for(--;--;--)</code> and <code>while (--comparison operator --)</code> constructs.</p>
","2988","","<p>Regular expressions can only parse regular (Ch-3) languages. Java is not a regular language, it is <em>at least</em> context-free (Ch-2), maybe even context-sensitive (Ch-1).</p>
"
"<p>I asked one of my developers to give each dev a different copy of the trunk to work on in /branches (under their own name).</p>

<p>That developer is not experienced in subversion (and neither am I), so I'm trying to determine if he did the right thing by copying the trunk into each branch folder and committing it, or if he should have done something else.</p>
","2988","","<p>Subversion doesn't have subprojects, branches or tags, only directories and files (and properties). Whether you treat a certain copy as a subproject, a branch, a tag, a backup, just a plain ol' copy or something else entirely is purely a social convention between you and your teammates.</p>
"
"<p>I want to delete 'third' and blanks lines from my.txt below and then store the o/p in my.txt
what should be the sed command? 
Note: this should be in a loop till end of the file</p>

<pre><code>my.txt -

first

sec


third


third

third
</code></pre>
","2988","","<p><a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/sed.html"" rel=""nofollow""><code>sed</code></a> is a <em>stream editor</em>, i.e. it is for editing <em>streams</em> (pipes) not files. If you want to edit files, you should use a file editor such as <a href=""http://OpenGroup.Org/onlinepubs/009695399/utilities/ed.html"" rel=""nofollow""><code>ed</code></a>:</p>

<pre><code>ed my.txt &lt;&lt;-HERE
  ,g/^third$/d
  ,g/^$/d
  w
  q
HERE
</code></pre>
"
"<p>How can I increment an Integer variable by X without creating a new object instance ?</p>

<p>+= does not work because :</p>

<pre><code>ree-1.8.7-2010.02 &gt; x = 1
1
ree-1.8.7-2010.02 &gt; x.object_id
3
ree-1.8.7-2010.02 &gt; x += 1
2
ree-1.8.7-2010.02 &gt; x.object_id
5
</code></pre>
","2988","","<p>You can't. Not in Ruby, and not in any other programming language I am aware of.</p>

<p>The object which represents the mathematical number <code>1</code> will <em>always</em> have the value <code>1</code>. Mutating the object which represents the mathematical number <code>1</code> to suddenly have the value <code>2</code> would quite simply be insane, because now all of a sudden <code>1 + 1 == 4</code>.</p>
"
"<p>Is it possible that readonly modifier influences on Garbage collector work?
For value type, for reference type?</p>
","2988","","<p><code>readonly</code> is a C# feature. The GC is a CLI feature. Therefore, it simply <em>cannot</em> influence the GC <em>at all</em>.</p>
"
"<p>What is wrong in the code?</p>

<pre><code>def call_block(n)

  if n==1

    return 0
  elsif n== 2

    return 1
  else
    yield
    return call_block(n-1) + call_block(n-2)

  end

end


puts call_block(10) {puts ""Take this""}
</code></pre>

<p>I am trying to use yield to print  Take this other than the tenth fibonacci number.</p>

<p>I am getting the error:
in `call_block': no block given (LocalJumpError)</p>

<p>Even the following code throws error:</p>

<pre><code>def call_block(n)

  if n==1
    yield
    return 0
  elsif n== 2
    yield
    return 1
  else
    yield
    return call_block(n-1) + call_block(n-2)

  end

end


puts call_block(10) {puts ""Take this""}
</code></pre>
","2988","","<p>First, let's clean that up a bit so that it's easier to see what's going wrong:</p>

<pre><code>def call_block(n)
  return 0 if n == 1
  return 1 if n == 2

  yield

  call_block(n-1) + call_block(n-2)
end

puts call_block(10) { puts 'Take this' }
</code></pre>

<p>Now let's just trace it through.</p>

<p>We start by calling</p>

<pre><code>call_block(10) { puts 'Take this' }
</code></pre>

<p>So, <code>n</code> is <code>10</code> and the block is { puts 'Take this' }. Since <code>n</code> is neither <code>1</code> nor <code>2</code>, we arrive at the <code>yield</code>, which transfers control to the block.</p>

<p>Now we are calling</p>

<pre><code>call_block(n-1)
</code></pre>

<p>which is</p>

<pre><code>call_block(9)
</code></pre>

<p>Notice that we are not calling it with a block. So, for this new call, <code>n</code> is <code>9</code> and there is no block. Again, we skip the first two lines and come to the <code>yield</code>.</p>

<p>But there is no block to <code>yield</code> to, and that's why the code blows up here.</p>

<p>The solution is both obvious and subtle. The obvious part is: the problem is that we are not passing a block, thus the solution is we need to pass the block along. The subtle part is: how do we do that?</p>

<p>The thing that makes Ruby blocks so syntactically lightweight, is that they are anonymous. But if the block doesn't have a name, we cannot refer to it, and if we cannot refer to it, then we cannot pass it along.</p>

<p>The solution to this is to use another construct in Ruby, which is basically a more heavyweight abstraction for the idea of ""a chunk of code"" than a block: a <code>Proc</code>.</p>

<pre><code>def call_block(n, blk)
  return 0 if n == 1
  return 1 if n == 2

  blk.()

  call_block(n-1, blk) + call_block(n-2, blk)
end

puts call_block(10, -&gt;{ puts 'Take this' })
</code></pre>

<p>As you can see, this <em>is</em> a little bit heavier syntactically, but we can give the <code>Proc</code> a name, and thus pass it along to the recursive calls.</p>

<p>However, this pattern is actually common enough that there is special support in Ruby for it. If you put a <code>&amp;</code> sigil in front of a parameter name in a parameter list, Ruby will ""package up"" a block that is passed as an argument into a <code>Proc</code> object and bind it to that name. And conversely, if you put a <code>&amp;</code> sigil in front of an argument expression in an argument list, it will ""unpack"" that <code>Proc</code> into a block:</p>

<pre><code>def call_block(n, &amp;blk)
  return 0 if n == 1
  return 1 if n == 2

  yield # or `blk.()`, whichever you prefer

  call_block(n-1, &amp;blk) + call_block(n-2, &amp;blk)
end

puts call_block(10) { puts 'Take this' }
</code></pre>
"
"<p>I have no idea about Ruby :)</p>

<p>The thing is, I need a way to turn all CSS in an HTML e-mail into inline styles. And there's no better way to do that, than use <a href=""https://github.com/alexdunae/premailer"" rel=""nofollow"">Alex Dunae's Premailer</a>.</p>

<p>But I want to run it on Windows. My goal is to be able to run the script from C#, and fetch the file created by the ruby script in C# and use the HTML for the e-mail.</p>

<p>Anyway, running the ruby script is the hard part for me. I've downloaded and installed the <a href=""http://rubyinstaller.org/downloads/"" rel=""nofollow"">Ruby Installer</a>, and I've also downloaded the Premailer 1.6.2 package.</p>

<p>I try to run it doing this:</p>

<pre><code>C:\Ruby192\bin&gt;ruby.exe C:\Workspace\Premailer\bin\premailer C:\Workspace\index.htm &gt; C:\Workspace\index2.htm
</code></pre>

<p>And what it tells me is this:</p>

<pre><code>C:\Ruby192\bin&gt;ruby.exe C:\Workspace\Premailer\bin\premailer C:\Workspace\index.htm &gt; C:\Workspace\index2.htm
&lt;internal:lib/rubygems/custom_require&gt;:29:in `require': no such file to load -- hpricot (LoadError)
        from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
        from C:/Workspace/Premailer/lib/premailer.rb:4:in `&lt;top (required)&gt;'
        from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
        from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
        from C:/Workspace/Premailer/bin/premailer:5:in `&lt;main&gt;'
</code></pre>

<p>I probably need some dependencies, or what?</p>
","2988","","<p>You are missing the Hpricot library, which is an HTML parser.</p>

<p>However, I am not sure <em>why</em> it is missing. It is properly listed as a dependency in Premailer's package specification and it should have been automatically installed when you installed Premailer (unless you explicitly disabled it with the <code>--ignore-dependencies</code> flag).</p>

<p>Also, the Premailer binary should have been installed in <code>C:\Ruby192\bin</code>, not <code>C:\Workspace\Premailer\bin</code>.</p>

<p>Try uninstalling Premailer:</p>

<pre><code>gem uninstall --force premailer
</code></pre>

<p>And then try again to install it:</p>

<pre><code>gem install premailer
</code></pre>

<p>Note: Hpricot is actually written in C, not in Ruby, so to install it, you need to have the RubyInstaller DevKit installed. (This could be an explanation why it didn't get installed automatically.)</p>

<p>A general tip: if you want to interoperate between the CLI and Ruby, it is much easier to use the IronRuby Ruby implementation instead of YARV, which it appears you are using, because IronRuby actually runs on the CLI (more precisely the DLR) and has a standardized API for calling CLI code from Ruby and vice versa (and that API is fully compatible with C# 4's <code>dynamic</code>). Except in <em>this</em> particular case that won't work because, as I mentioned, Hpricot is written in C, as an extension to YARV, so it simply won't work with IronRuby.</p>
"
"<p>I need write a parser manually. Can`t choose between LL(*) and LR (maybe try Earley?). Should I use bottom-up parsing, because grammar for LL will be rather difficult?</p>
","2988","","<p>I would go with either a recursive descent parser or maybe a tail-recursive descent parser (i.e. LL) or a top-down operator precedence parser.</p>

<p>The LR family of parsers, whether that be LR, LALR(k), LALR(1), GLR or whatever are just too ""weird"" to keep in your head. If you try to write one of those, you generally end up implementing a parser generator <em>anyway</em>, just to stay sane.</p>
"
"<p>I'm trying to use activeSupport's blank method in a script and getting the error ""undefined method 'blank?' for ""blah"":String (NoMethodError)"".  Ruby doesn't have an issue with the require statement but I can't use the library.</p>

<pre><code>require ""rubygems""
require ""active_support""

if ""blah"".blank?
  puts ""blank!""
end
</code></pre>
","2988","","<p>Which version of ActiveSupport are you using? In current versions, it does no longer load every single feature into the namespace by default. Instead, you can pick and choose exactly which features you need. In your case:</p>

<pre><code>require 'rubygems'
require 'active_support/core_ext/object/blank'

puts 'blank!' if 'blah'.blank?
</code></pre>

<p>If you <em>want</em> everything, use</p>

<pre><code>require 'active_support/all'
</code></pre>

<p>Actually, in modern versions of Ruby, you can get rid of the <code>require 'rubygems'</code> as well. And even in older versions, you shouldn't put that there, since it forces every user of your code to use RubyGems and makes it impossible to use in environments where RubyGems is not available.</p>
"
"<p>I'm new to ruby. So I'm confused by the  following lines of code:</p>

<pre><code>class CreateProducts &lt; ActiveRecord::Migration
  def self.up
    create_table :products do |t|
      t.string :title
      t.text :description
      t.string :image_url
      t.decimal :price, :precision =&gt; 8, :scale =&gt; 2

      t.timestamps
    end
  end

  def self.down
    drop_table :products
  end

end
</code></pre>

<p>one of the lines makes me most confused is :</p>

<pre><code>t.string :title
</code></pre>

<p>I just can't understand it. So could any of you give me some hint on which part of ruby grammar I need to read in order to understand this single line of code? thanks in advance.</p>
","2988","","<p>This is just normal Ruby messaging syntax.</p>

<pre><code>t.string :title
</code></pre>

<p>means </p>

<ol>
<li>dereference the block local variable <code>t</code></li>
<li>send the message <code>:string</code> to the object referenced by <code>t</code> and pass the literal symbol <code>:title</code> as the only argument</li>
</ol>
"
"<blockquote>
  <p><strong>Possible Duplicates:</strong><br>
  <a href=""http://stackoverflow.com/questions/2998768/how-can-a-languages-compiler-be-written-in-that-language"">How can a language&#39;s compiler be written in that language?</a><br>
  <a href=""http://stackoverflow.com/questions/193560/implementing-a-compiler-in-itself"">implementing a compiler in &ldquo;itself&rdquo;</a>  </p>
</blockquote>



<p>I was looking at <a href=""http://rubini.us/"">Rubinius</a>, a Ruby implementation that compiles to bytecode using a compiler written in Ruby. I cannot get my head around this. How do you write a compiler for a language in the language itself? It seems like it would be just text without anything to compile it into an executable that could then compile the future code written in Ruby. I get confused just typing that sentence. Can anyone help explain this?</p>
","2988","","<p>All of the answers so far have explained how to bootstrap the compiler by using a different compiler. However, there is an alternative: compiling the compiler by hand. There's no reason why the compiler has to be executed by a machine, it can just as well be executed by a human.</p>
"
"<p>In ruby, how do I decode c-style escape sequences?  e.g. '\n' to a newline, '\t' to a tab?</p>
","2988","","<p>EDIT: Note that this does not actually work. You really need to build a proper parser here with a state machine that keeps track of whether you are in an escape sequence or not.</p>

<hr>

<p>Ruby supports many of the same escape sequences, so you could build a simple translation table like this:</p>

<pre><code>T = {
  '\n' =&gt; ""\n"",
  '\t' =&gt; ""\t"",
  '\r' =&gt; ""\r""
}
</code></pre>

<p>And then use that translation table to replace those sequences in the source string:</p>

<pre><code>a = '1\t2\n3'

a.gsub(/#{T.keys.map(&amp;Regexp.method(:escape)).join('|')}/, &amp;T.method(:[]))
# =&gt; ""1\t2\n3""
</code></pre>
"
"<p>I'm new to Ruby</p>

<p>MakModule.rb</p>

<pre><code>module Display
  class Multiply
    def Multiply.mul(first, second)
      return first * second
    end
  end
end
</code></pre>

<p>MakRequire1.rb</p>

<pre><code>require ""Display""
puts Multiply.mul 5,6
</code></pre>

<p>MakRequire2.rb</p>

<pre><code>require ""MakModule.rb""
puts Multiply.mul 5,6
</code></pre>

<p>both file give me the error below</p>

<pre><code>ruby: No such file or directory -- makRequire (LoadError)
</code></pre>

<p>How should I correct my code?</p>
","2988","","<p>It is simply impossible that the code you posted here generates that error message. The error message says that you tried to <code>require</code> a file named <code>makRequire</code>, but that filename doesn't appear anywhere in the code you posted.</p>

<p>Without the actual code that is generating the actual error, it is impossible to answer your question. However, here are a few general tips:</p>

<p>Whenever the computer tells you that it cannot find something, in 99% of the cases, the problem is that the thing the computer tells it couldn't find isn't actually there.</p>

<p>So, in this case, the computer tells you that it cannot find a file named <code>makRequire.rb</code>, and the most likely explanation for that is that <code>makRequire.rb</code> doesn't actually exist. So, the first thing you need to check is: <em>does</em> <code>makRequire.rb</code> (note the capitalization and the file extension) actually exist? Because if it doesn't exist, then the reason why the computer cannot find it, should be rather obvious.</p>

<p>In 99% of the <em>rest</em> of the cases, the problem is that the thing the computer is looking for <em>does</em> exist, but the computer is looking in the wrong place. So, after you have verified that <code>makRequire.rb</code> actually <em>does</em> exist, you need to make sure that the directory the file is in, is in Ruby's <code>$LOAD_PATH</code>, and if it isn't, you need to add that directory to Ruby's <code>$LOAD_PATH</code>. Alternatively, if you want to <code>require</code> the file relative to the path of the file that is doing the requiring, you need to use <code>require_relative</code> instead of <code>require</code>.</p>

<p>The third thing to check for, is whether the user who own the <code>ruby</code> process has sufficient privileges to access the file <code>makRequire.rb</code>, the directory it is in and all of its parent directories.</p>
"
"<p>I'm wondering how github can read in these values?  I could see a use of this for deployments etc. if I can define my own, custom sections.</p>

<p>Thanks</p>
","2988","","<p>GitHub cannot read those values. If some random company on the other side of the world could just willy-nilly read any arbitrary files on your computer, that would be truly scary.</p>

<p>But of course any program <em>you</em> run on <em>your</em> computer can read those values. Including, for example, the <code>hub</code> command or the <code>github</code> command, which are two popular commandline clients for GitHub.</p>
"
"<p>I am trying to create an intersection of the values of hash1 with those of hash2, if those values share the same key.  Here is my code so far.  I am able to generate two hashes --> data and data1.  </p>

<pre><code>#!/usr/bin/env ruby

require 'pp'
require 'set'
data = {}
File.read(ARGV[0]).each do |l|
  l.chomp!
  key, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12 = l.split(/\s+/)
  data[key] ||= {}
  values = [value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12]
  data[key] = values.compact!

end

data1 = {}
File.read(ARGV[1]).each do |l|
  l.chomp!
  value = l.split(/\s+/)
  data1[value[0]] ||= {}
  data1[value[0]] = [value] 
end
</code></pre>

<p>So, my main goal is for each key in hash1, keep only those values that also are present at that identical key in hash2, otherwise remove those values from hash1.  I am not concerned with any keys present in Hash2 that are not present in Hash1, btw.</p>

<p>I know arrays can be intersected using ""&amp;"" and ""set"", though I have not been able to accomplish this in my script so far.</p>

<p>Any advice would be great.  Thanks.</p>

<p>For Theo:</p>

<p>Yes.<br>
hash1 { alpha: [a,b,c,d,e], bravo: [f,g,h,i,j], charlie: [k,l,m,n,o], delta:[p,r]}   </p>

<p>hash2 { alpha: [a,c,q,z], bravo: [z,x], charlie: [k,l,m,n]}  </p>

<p>So, the intersection would look like this.   </p>

<p>hash3 { alpha: [a,c], bravo:[nil], charlie: [k,l,m,n]}</p>
","2988","","<pre><code>data  = { a: [11], b: [22, 222], c: [33] }
data2 = { b: [222, 2222], d: [4444] }

Hash[data.map {|k, v| if data2[k] then [k, v &amp; data2[k]] end }.compact]
# =&gt; { b: [222] }
</code></pre>
"
"<p>So this might be a dumb question but I don't know what to ask for since 'jruby print stack trace' googled doesn't come up with much thats worthwhile but,</p>

<p>How does one print the stack trace when writing Jruby code that accesses Java classes that throw exceptions? ie right now I took code from someone else that looks like </p>

<p><code>rescue JavaSql::SQLException
  puts ""SQLException""
end</code></p>

<p>which works, but I'd like to see which particular SQLException is happening like I would in Java (ie. PrintStackTrace(Exception e))?  How does one accomplish this?</p>
","2988","","<p>I've never worked with Java exceptions in Ruby, but AFAIK, Java exceptions get presented to you as Ruby exceptions, which means you can get the exception message by sending the <code>:message</code> message to the exception object:</p>

<pre><code>begin
  # stuff
rescue JavaSql::SQLException =&gt; e
  puts ""#{e.class}: #{e.message}""
end
</code></pre>

<p>Is that what you mean? I'm not quite sure what you would need the stacktrace for in this particular situation, so I probably misunderstood.</p>
"
"<p>Is it possible to implement an internal DSL in a language without macros?  Has anyone succeeded in implementing a Ruby-like internal DSL in python?</p>

<p>I am trying to develop a simple state machine with a more intuitive syntax like:</p>

<pre><code>start -&gt; Event -&gt; Next -&gt;Action 
</code></pre>
","2988","","<p>I am having a bit of trouble grokking your question.</p>

<p>AFAIU, you are asking</p>

<blockquote>
  <p>Can you implement a Ruby-like internal DSL in a language without macros?</p>
</blockquote>

<p>And the answer to that is obviously ""Yes"", since Ruby doesn't have macros.</p>
"
"<p>I have read amortized analysis in coreman but unable to understand what it realy is.
i went through internet but unable to understand.please someone make me understand.thanks</p>
","2988","","<p>The idea behind amortized analysis is based on the idea of amortization in economics: you spend more money now, in order to save money over time. For example: you spend an extra $500 to buy the car with a more modern, more fuel-efficient engine, and over time, you amortize those $500 by saving gas.</p>

<p>The way that amortized analysis differs from most other kinds, is that it looks at a whole sequence of operations, not a single operation.</p>

<p>For example, worst-case analysis would look at insertion into a dynamic array and say ""if the array is full, you need to copy the entire array into a bigger array, therefore the worst-case step complexity of inserting into a dynamic array is <code>Ο(n)</code>"".</p>

<p>Amortized worst-case analysis would say that resizing only happens very seldomly, <em>and</em> it actually buys you the possibility of doing insertions in <code>Ο(1)</code> for the foreseeable future. So, while the worst-case for one individual insertion is <code>Ο(n)</code>, this worst-case will only appear <code>Ο(1)</code> times every <code>Ω(n)</code> operations, which means the cost of resizing the array is amortized over the lifetime of the array, so the overall amortized worst-case step complexity of inserting into a dynamic array is <code>Ο(1)</code>.</p>
"
"<p>I can understand why there is <em>public</em> and <em>private</em> access modifier, these two are also found in almost any language. I can even understand why there might be a <em>package</em> modifier, as you may want to have your classes (those that tightly belong together) interact with each other in a way, that is not suitable for public interaction (e.g. as it depends upon knowledge of class internals, maybe because it would reveal a secret, or maybe because it may change at any time and relying on it will break all existing code, and so on). However, why would I want to have a <em>protected</em> identifier? Don't get me wrong, I know what <em>protected</em> means, but why would I want subclasses of my classes to access certain instance variables or use certain methods, just because they are subclasses and even if they are part of a different package? What is a real world use case for <em>protected</em>? </p>

<p>(And performance as an argument for instance variables does not count, since a JIT compiler can always inline accessor methods, decreasing their call overhead to zero)</p>
","2988","","<p>The fact that languages exist which do not have a <code>protected</code> access modifier, and even languages that do not have access modifiers <em>at all</em> where all methods are public, <em>and</em> those languages are generally considered to be some of the ""most pure"" OO languages, shows that you do, in fact, <em>not</em> ""really need"" a <code>protected</code> access modifier.</p>
"
"<p>This is probably easy to do! I'm not able envision the loop yet, I was thinking about a nested for loop but not quite sure how to alternate between the two hashes.</p>

<p>Lets say I have a class with a def that containts two hash tables:</p>

<pre><code> class Teststuff
    def test_stuff
     letters = { ""0"" =&gt; "" A "", ""1"" =&gt; "" B "", ""2"" =&gt; "" C "" }
     position = {""1"" =&gt; ""one "", ""2""=&gt; "" two "", ""3""=&gt; "" three "", ""4""=&gt;"" four "" }

     my_array=[0,1,2,2] #this represents user input stored in an array valid to 4 elements
     array_size = my_array.size #this represents the size of the user inputed array
     element_indexer = my_array.size # parellel assignment so I can use same array for array in dex
     array_start_index = element_indexer-1 #give me the ability later to get start at index zero for my array

 #for loop?? downto upto?? 
 # trying to get loop to grab the first number ""0"" in element position ""0"", grab the hash values then
 # the loop repeats and grabs the second number ""1"" in element position ""1"" grab the hash values
 # the loop repeats and grabs the third number ""2"" in elements position ""2"" grab the hash values
 # the final iteration grabs the fourth number ""2"" in elements position ""3"" grab the hash values
 # all this gets returned when called. Out put from puts statement after grabing hash values 
 # is: **A one B two C three C four**  

     return a_string
    end
  end  
</code></pre>

<p>How do I go about returning string output to the screen like this: </p>

<pre><code>   **A one B two C three C four** 
</code></pre>

<p>or simply letter position letter position...
Thanks for the help, put code up so I can try on my editor!</p>
","2988","","<p>I think I figured out what it is you want, although I still have no idea what <code>array_size</code>, <code>element_indexer</code>, <code>array_start_index</code> and <code>TestStuff</code> are for.</p>

<pre><code>def test_stuff
  letters = { ""0"" =&gt; "" A "", ""1"" =&gt; "" B "", ""2"" =&gt; "" C "" }
  position = {""1"" =&gt; ""one "", ""2""=&gt; "" two "", ""3""=&gt; "" three "", ""4""=&gt;"" four "" }

  my_array = [0, 1, 2, 2]

  ""**#{my_array.map.with_index {|e, i|
    ""#{letters[e.to_s].strip} #{position[(i+1).to_s].strip}""
  }.join(' ')}**""
end
</code></pre>

<p>[I took the liberty of reformatting your code to standard Ruby coding style.]</p>

<p>However, everything would be much simpler, if there weren't all those type conversions, and all those superfluous spaces. Also, the method would be much more useful, if it actually had a way to return different results, instead of always returning the same thing, because at the moment, it is actually exactly equivalent to</p>

<pre><code>def test_stuff
  '**A one B two C three C four**'
end
</code></pre>

<p>Something along these lines would make much more sense:</p>

<pre><code>def test_stuff(*args)
  letters = %w[A B C]
  position = %w[one two three four]

  ""**#{args.map.with_index {|e, i| ""#{letters[e]} #{position[i]}"" }.join(' ')}**""
end

test_stuff(0, 1, 2, 2)
# =&gt; '**A one B two C three C four**'
</code></pre>

<p>If you don't want to pollute the <code>Object</code> namespace with your method, you could do something like this:</p>

<pre><code>def (TestStuff = Object.new).test_stuff(*args)
  letters = %w[A B C]
  position = %w[one two three four]

  ""**#{args.map.with_index {|e, i| ""#{letters[e]} #{position[i]}"" }.join(' ')}**""
end

TestStuff.test_stuff(0, 1, 2, 2)
# =&gt; '**A one B two C three C four**'
</code></pre>
"
"<p>I tried doing something like this:</p>

<pre><code>class Student: IPersonalDetails: IOtherDetails
{
      //Code
}
</code></pre>

<p>It gives error. Why I can't implement two interfaces?</p>
","2988","","<p>Yes, a class can <em>definitely</em> implement more than one interface. After all, that is the <em>whole point</em> of interfaces.</p>

<p>Take a look at the error message you are getting. It is <em>not</em> telling you that a class cannot implement more than one interface. It is telling you that have a syntax error.</p>
"
"<p>In C#:</p>

<p>How many interfaces a class can implement <strong>at the same time</strong>?</p>

<pre><code>public class MyClass: IInteferface_1, IInterface_2, ... , IInterface_N
{
}
</code></pre>

<p>Is there a limit for N? </p>

<p>Don't worry I don't want to implement or maintain such an object. I was just wondering if there is a limit.</p>
","2988","","<p>I just checked the current version of the Microsoft C♯ Language Specification Version 4.0, and there is no mention of a limit in §1.6.4, §1.9, §10.1.4, §10.1.4.2 and §13. There is also no syntactic limit in the grammar in §B.2.7.</p>

<p>I obviously didn't read the entire 500 pages, but I don't know where else in that document a limit might be mentioned.</p>

<p>Note: this only applies to Microsoft C♯, and only to Version 4.0. I didn't check earlier versions of Microsoft C♯, nor did I check ECMA/ISO C♯. Also, it only applies to C♯, there might be limits in the CLI.</p>

<p>And last but not least, there might be implementation-specific limits in both Microsoft Visual C♯ and Novell Mono C♯, as well implementation-specific limits in Microsoft's and Mono's implementations of the CLI (i.e. the CLR and the Mono VM).</p>

<p>However, the question was about C♯, not about any particular implementation of C♯ and not about the CLI, so I feel pretty confident in claiming that the number of interfaces a class can implement is unbounded.</p>
"
"<p>As I understand there are several different algorithms for implementing Software Transactional Memory (and this is a quite active research area).
Where can I find (without having to dive into source code) which are used in different languages and libraryes, particularly in Clojure and Haskell (GHC)?</p>
","2988","","<p>At a very high level, one thing that is interesting about Clojure's implementation of STM, is that it is very much different from all other implementations. Rich has looked much more towards actual real-world high-performance databases than academic papers about hypothetical STMs. For example, Clojure's STM is to my knowledge the only STM that uses Multi Version Concurrency Control (MVCC), which is a well-known technique in the database world (in fact, there's pretty much no serious database out there, which <em>doesn't</em> use MVCC) but is pretty much not discussed at all in the STM world.</p>
"
"<pre><code>class Example
 private
 def example_test
  puts 'Hello'
 end
end

e = Example.new
e.example_test
</code></pre>

<p>This of course will not work, because we specified explicit receiver - instance of Example (<code>e</code>), and that is against a ""private rule"".</p>

<p>But I cannot understand, why one cannot do in Ruby this:</p>

<pre><code>class Foo
 def public_m
  self.private_m # &lt;=
 end
 private
 def private_m
  puts 'Hello'
 end
end

Foo.new.public_m
</code></pre>

<p>The current object inside <code>public_m</code> method definition (i.e. <code>self</code>) is the instance of Foo. So why it is not allowed? To fix that I have to change <code>self.private_m</code> to just <code>private_m</code>. But why this differ, isn't the <code>self</code> an instance of Foo inside <code>public_m</code>? And who is the receiver of bare-word <code>private_m</code> call? Isn't that <code>self</code> - what actually you omit because, Ruby will do it for you (will call private_m on self)?</p>

<p>I hope I didn't confuse it too much, I am still fresh to Ruby. </p>

<hr>

<p>EDIT:
Thank you for all the answers. Putting them all together I was able (finally) to grok the obvious (and not so obvious for someone, who have never seen things like Ruby): that <code>self</code> itself can be
explicit and implicit receiver and that make the difference. So there are two rules, if you want to call a private method: <code>self</code> must be implicit receiver, and that self must be an instance of current class (<code>Example</code> in that case - and that takes place only when self if inside instance method definition, during this method execution). Please correct me if I am wrong.</p>

<pre><code>class Example 

 # self as an explicit receiver (will throw an error)
 def explicit 
  self.some_private_method
 end

 # self as an implicit receiver (will be ok)
 def implicit
  some_private_method
 end

 private

 def some_private_method; end
end

Example.new.implicit
</code></pre>

<p>Message for anyone who could find this question during the google trails: this may be helpful - <a href=""http://weblog.jamisbuck.org/2007/2/23/method-visibility-in-ruby"">http://weblog.jamisbuck.org/2007/2/23/method-visibility-in-ruby</a></p>
","2988","","<p>The <em>definition</em> of <code>private</code> in Ruby is ""can only be called without an explicit receiver"". And that's why you can only call private methods without an explicit receiver. There is no other explanation.</p>

<p>Note that there actually is an exception to the rule: because of the ambiguity between local variables and method calls, the following will <em>always</em> be resolved to be an assignment to a local variable:</p>

<pre><code>foo = :bar
</code></pre>

<p>So, what do you do if you want to call a writer called <code>foo=</code>? Well, you <em>have</em> to add an explicit receiver, because without the receiver Ruby simply won't know that you want to call the method <code>foo=</code> instead of assigning to the local variable <code>foo</code>:</p>

<pre><code>self.foo = :bar
</code></pre>

<p>But what do you do if you want to call a <code>private</code> writer called <code>foo=</code>? You <em>can't</em> write <code>self.foo =</code> because <code>foo=</code> is <code>private</code> and thus cannot be called with an explicit receiver. Well, actually for <em>this</em> specific case (and this case <em>alone</em>), you <em>can</em> actually use an explicit receiver of <code>self</code> to call a <code>private</code> writer.</p>
"
"<p>In python, it's fairly straightforward to reference a function:</p>

<pre><code>&gt;&gt;&gt; def foo():
...     print ""foo called""
...     return 1
... 
&gt;&gt;&gt; x = foo
&gt;&gt;&gt; foo()
foo called
1
&gt;&gt;&gt; x()
foo called
1
&gt;&gt;&gt; x
&lt;function foo at 0x1004ba5f0&gt;
&gt;&gt;&gt; foo
&lt;function foo at 0x1004ba5f0&gt;
</code></pre>

<p>However, it seems to be different in Ruby since a naked <code>foo</code> actually calls foo:</p>

<pre><code>ruby-1.9.2-p0 &gt; def foo
ruby-1.9.2-p0 ?&gt;  print ""foo called""
ruby-1.9.2-p0 ?&gt;  1
ruby-1.9.2-p0 ?&gt;  end
 =&gt; nil 
ruby-1.9.2-p0 &gt; x = foo
foo called =&gt; 1 
ruby-1.9.2-p0 &gt; foo
foo called =&gt; 1 
ruby-1.9.2-p0 &gt; x
 =&gt; 1 
</code></pre>

<p>How do I actually assign the <em>function</em> foo to x and then call it?  Or is there a more idiomatic way to do this?</p>
","2988","","<p>Ruby doesn't have functions. It only has methods (which aren't first-class) and <code>Proc</code>s which are first-class, but are not associated with any object.</p>

<p>So, this is a method:</p>

<pre><code>def foo(bar) puts bar end

foo('Hello')
# Hello
</code></pre>

<p>Oh, and, yes, this <em>is</em> a <em>real</em> method, not a top-level function or procedure or something. Methods defined at the top-level end up as private(!) instance methods in the <code>Object</code> class:</p>

<pre><code>Object.private_instance_methods(false) # =&gt; [:foo]
</code></pre>

<p>This is a <code>Proc</code>:</p>

<pre><code>foo = -&gt; bar { puts bar }

foo.('Hello')
# Hello
</code></pre>

<p>Notice that <code>Proc</code>s are called differently from methods:</p>

<pre><code>foo('Hello')  # method
foo.('Hello') # Proc
</code></pre>

<p>The <code>foo.(bar)</code> syntax is just syntactic sugar for <code>foo.call(bar)</code> (which for <code>Proc</code>s and <code>Method</code>s is also aliased to <code>foo[bar]</code>). Implementing a <code>call</code> method on your object and then calling it with <code>.()</code> is the closest thing you will get to Python's <code>__call__</code>ables.</p>

<p>Note that an important distinction between Ruby <code>Proc</code>s and Python lambdas is that there are no restrictions: in Python, a lambda can only contain a single statement, but Ruby doesn't <em>have</em> the distinction between statements and expressions (<em>everything</em> is an expression), and so this limitation simply doesn't exist, therefore in a lot of cases where you <em>need</em> to pass a named function as an argument in Python because you cannot express the logic in a single statement, you would in Ruby simply pass a <code>Proc</code> or a block instead, so that the problem of the ugly syntax for referencing methods doesn't even arise.</p>

<p>You can <em>wrap</em> a method in a <code>Method</code> object (which essentially duck-types <code>Proc</code>) by calling the <code>Object#method</code> method on an object (which will give you a <code>Method</code> whose <code>self</code> is bound to that particular object):</p>

<pre><code>foo_bound = self.method(:foo)

foo_bound.('Hello')
# Hello
</code></pre>

<p>You can also use one of the methods in the <code>Module#instance_method</code> family to get an <code>UnboundMethod</code> from a module (or class, obviously, since a class is-a module), which you can then <code>UnboundMethod#bind</code> to a particular object and call. (I think Python has the same concepts, albeit with a different implementation: an unbound method simply takes the self argument explicitly, just like the way it is declared.)</p>

<pre><code>foo_unbound = Object.instance_method(:foo) # this is an UnboundMethod

foo_unbound.('Hello')
# NoMethodError: undefined method `call' for #&lt;UnboundMethod: Object#foo&gt;

foo_rebound = foo_unbound.bind(self)       # this is a Method

foo_rebound.('Hello')
# Hello
</code></pre>

<p>Note that you can only bind an <code>UnboundMethod</code> to an object which is an instance of the module you took the method from. You cannot use <code>UnboundMethods</code> to ""transplant"" behavior between unrelated modules:</p>

<pre><code>bar = module Foo; def bar; puts 'Bye' end; self end.instance_method(:bar)
module Foo; def bar; puts 'Hello' end end

obj = Object.new
bar.bind(obj)
# TypeError: bind argument must be an instance of Foo

obj.extend(Foo)
bar.bind(obj).()
# Bye
obj.bar
# Hello
</code></pre>

<p>Note, however, that both the <code>Method</code> and the <code>UnboundMethod</code> are <em>wrappers</em> around the method, <em>not</em> the method itself. Methods are <em>not</em> objects in Ruby. (Contrary to what I have written in other answers, BTW. I really need to go back and fix those.) You can <em>wrap</em> them in objects, but they <em>aren't</em> objects, and you can see that because you essentially get all the same problems you <em>always</em> get with wrappers: identity and state. If you call <code>method</code> multiple times for the same method, you will get a different <code>Method</code> object every time. If you try to store some state on that <code>Method</code> object (such as Python-style <code>__doc__</code>strings, for example), that state will be private to <em>that particular</em> instance, and if you try to retrieve your docstring again via <code>method</code>, you will find that it is gone.</p>

<p>There have been several proposals in the past to use Ruby's scope resolution operator <code>::</code> to access bound <code>Method</code>s of objects like this:</p>

<pre><code>bound_method = obj::foo
</code></pre>

<p>Which is supposed to be identical to</p>

<pre><code>bound_method = obj.method(:foo)
</code></pre>

<p>The problem is that currently, using the scope resolution operator for <em>calling</em> methods is actually supported:</p>

<pre><code>obj.bar
obj::bar
# Hello
</code></pre>

<p>And even worse, this is actually <em>used</em>, so it would be a backwards-incompatible change.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/200574/linq-equivalent-of-foreach-for-ienumerablet"">LINQ equivalent of foreach for IEnumerable&lt;T&gt;</a>  </p>
</blockquote>



<p>I'm wondering whether there is a method for IEnumerable like the following .Each() in the .Net library</p>

<pre><code>var intArray = new [] {1, 2, 3, 4};
intArrary.Each(Console.WriteLine);
</code></pre>

<p>I know I can use a <code>foreach</code> loop or easily write an extension method like this:</p>

<pre><code>public static class EnumerableExtensions
{
    public static void Each&lt;T&gt;(this IEnumerable&lt;T&gt; enumberable, Action&lt;T&gt; action)
    {
        foreach (var item in enumberable)
        {
            action(item);
        }
    }
}
</code></pre>

<p>But I'm hoping not to create my own method to mess up code if there is already such an extension method in the library. And something like .Each() (with a few overloadings which can take conditions as extra params) is heavily needed by programmers, and there should already be one. Am I correct?</p>

<p><strong>Update</strong></p>

<p>Ruby developers may recognize it as a .each() iterator. And that's what I hope to have in C#. Maybe C# can have more iterator methods like those in Ruby.</p>
","2988","","<p>No, there isn't, unfortunately. (I think this question has been discussed before, but I can't find it currently.)</p>

<p>Due to some bizarre accident of history, the <code>ForEach</code> method ended up on <code>List&lt;T&gt;</code>, instead of <code>IEnumerable&lt;T&gt;</code>, where it would make more sense, and because of backwards-compatiblity, this can never ever be fixed.</p>

<p>Ever since extension methods existed, adding a <code>ForEach(this IEnumerable&lt;T&gt;, ...)</code> extension method was requested over and over again, but it is usually rejected because it would lead to confusing behavior: since instance methods are always selected before extension methods, this would mean that <em>all</em> <code>IEnumerable</code>s get treated identically, <em>except for</em> <code>List</code>s and they wouldn't allow such inconsistencies in the BCL.</p>

<p>As a result, pretty much every .NET project on the planet now starts off with exactly the code you described above:</p>

<pre><code>namespace IEnumerableExtensions
{
    public static class IEnumerableExtensions
    {
        public static void ForEach&lt;T&gt;(this IEnumerable&lt;T&gt; xs, Action&lt;T&gt; f)
        {
            foreach (var x in xs) f(x);
        }
    }
}
</code></pre>
"
"<p>I am wondering what are some specific questions I should keep in mind when I am comparing programming languages for use on given work projects. For instance, I am told logic programming languages like Prolog are good for natural language processing. I'm not sure why exactly; I assume it is true because experts say so, but I don't know the consideration that guides them to that conclusion. So I am looking for a simple heuristic, a checklist of questions, I can apply to evaluate programming languages and be able to explain my decisions, so that I can say ""Language X is good for Y because it does Z.""</p>
","2988","","<p>The only way I know of to figure out which programming language is most appropriate for a given problem, is to know lots of programming languages. After all, if you don't know screwdrivers exist, how will you know not to use a hammer when you encounter a screw?</p>

<p>Unfortunately, there are thousands (maybe tens of thousands) of programming languages, so learning even a significant portion of them is just not realistic.</p>

<p>However, programming languages implement <em>paradigms</em>. And Peter van Roy's famous poster only lists about 34 of those. Although he deliberately decided to ignore several aspects, including anything related to typing, so the real number is probably higher than that. But we can expect it to be well below 100.</p>

<p>That's still a lot, though, but thankfully, paradigms aren't atomic either, they are composed of <em>concepts</em>. The poster lists about a dozen of those (again ignoring typing and a couple of other things). Significantly less than paradigms.</p>

<p>Learning a significant portion of concepts is entirely feasible. Once you know them, you can look at a problem and see which concepts would be useful to have to build a solution. Then you look at which paradigms contain those concepts and which languages implement those paradigms. Pick one, learn it, use it, solve the problem.</p>

<p>And since you already know the concepts (and thus the paradigms) the language implements, you only need to learn the syntax, not the semantics. There aren't actually that many different syntaxes in the wild (C, C++, Objective-C, Objective-C++, D, Go, Java, C#, ECMAScript, PHP, Vala and many others share a lot of syntax, for example, as do Smalltalk, Self, Newspeak and Objective-C, SML, OCaml and F#, and so on), so chances are, you'll pick that up very quickly. (Besides, with today's modern IDEs that's much less of an issue anyway.)</p>
"
"<p>I currently use Git, and am generally happy with it, but I'd like to know more about Mercurial.  Does it have any advantages over Git?  What are the advantages of Git over Mercurial?</p>

<p>I realize there are already detailed comparisons of the two, but that's not what I'm asking for.  I don't want dispassionate information, but rather impassioned (but polite!!!) reasons why you think one is better/easier/faster/smarter/stronger/etc.  </p>
","2988","","<p>Historical accident. I <em>started</em> using Git during the very few days before Mercurial was released. I <em>kept</em> using Git because I was too lazy to relearn.</p>

<p>IOW: Mercurial didn't exist when I started using Git, so I never actually made a conscious decision between the two.</p>

<p>However, there are a couple of things I like:</p>

<ul>
<li>every single project I care about uses Git and the few that don't use Git provide a two-way gateway</li>
<li><a href=""https://GitHub.Com/"" rel=""nofollow"">GitHub</a>, <a href=""http://CodaSet.Com/"" rel=""nofollow"">Codaset</a>, <a href=""https://Assembla.Com/"" rel=""nofollow"">Assembla</a>, <a href=""http://CodebaseHQ.Com/"" rel=""nofollow"">Codebase</a>, <a href=""http://Gitorious.Org/"" rel=""nofollow"">Gitorious</a>, <a href=""http://Repo.Or.Cz/"" rel=""nofollow"">Repo.Or.Cz</a> (mob branch FTW), <a href=""http://Unfuddle.Com/"" rel=""nofollow"">Unfuddle</a>, <a href=""https://ProjectLocker.Com/"" rel=""nofollow"">ProjectLocker</a>, <a href=""https://SourceForge.Net/"" rel=""nofollow"">SourceForge</a>, <a href=""https://TuxFamily.Org/"" rel=""nofollow"">TuxFamily</a></li>
<li>the staging area aka. index</li>
<li>easy access to the low-level ""plumbing"" (I've done some <em>insane</em> stuff that I would have had to write a Python extension for in Mercurial. In Git, I just called the commands.) E.g. I merged two repositories which had no common history, similar to the <a href=""http://Thread.GMANE.Org/gmane.comp.version-control.git/5126/"" rel=""nofollow"">Coolest Merge Ever</a>.</li>
</ul>
"
"<p>let's say I have a file with numbers on each line:</p>

<pre><code>0101
1010
1311
0101
1311
431
1010
431
420
</code></pre>

<p>In the end I would have a hash with number of occurrences of each number, in this case:</p>

<pre><code>{0101 =&gt; 2, 1010 =&gt; 2, 1311 =&gt; 2, 431 =&gt; 2, 420 =&gt; 1}
</code></pre>

<p>how can I achieve this?</p>
","2988","","<pre><code>ID = -&gt; x { x } # Why is the identity function not in the core lib?

f = &lt;&lt;-HERE
  0101
  1010
  1311
  0101
  1311
  431
  1010
  431
  420
HERE

Hash[f.lines.map(&amp;:to_i).group_by(&amp;ID).map {|n, ns| [n, ns.size] }]
# { 101 =&gt; 2, 1010 =&gt; 2, 1311 =&gt; 2, 431 =&gt; 2, 420 =&gt; 1 }
</code></pre>

<p>You simply group the numbers by themselves using <code>Enumerable#group_by</code>, which gives you something like</p>

<pre><code>{ 101 =&gt; [101, 101], 420 =&gt; [420] }
</code></pre>

<p>And then you <code>Enumerable#map</code> the value arrays to their lengths, i.e. <code>[101, 101]</code> becomes <code>2</code>. Then just convert it back to a <code>Hash</code> using <code>Hash::[]</code>.</p>

<p>However, if you are willing to use a third-party library, it becomes even more trivial, because if you use a <code>MultiSet</code> data structure, the answer falls out naturally. (A <code>MultiSet</code> is like a <code>Set</code>, except that an item can be added multiple times and the <code>MultiSet</code> will keep count of how often an item was added&nbsp;&ndash; which is exactly what you want.)</p>

<pre><code>require 'multiset' # Google for it, it's so old that it isn't available as a Gem

Multiset[*f.lines.map(&amp;:to_i)]
# =&gt; #&lt;Multiset:#2 101, #2 1010, #2 1311, #2 431, #1 420&gt;
</code></pre>

<p>Yes, that's it.</p>

<p>That's the beatiful thing about using the right datastructure: your algorithms become massively simpler. Or, in this particular case, the algorithm just <em>vanishes</em>.</p>

<p>I've written more about using <code>MultiSet</code>s for solving this exact problem at</p>

<ul>
<li><a href=""http://StackOverflow.Com/q/4231534/#4232851"">find the repetition of duplicate numbers.</a> (the first example in that post is the same as the second one here, the second example in that post is essentially the same as @Chuck's here and the third one is the same as the first in this post.)</li>
<li><a href=""http://StackOverflow.Com/q/3735605/#3737892"">Counting occurences of unique letters in a string</a> (the Ruby example is the same as here, the Scala and ECMAScript examples are the same as @Chuck's and the C# example is the same as my <code>group_by</code> example here.)</li>
<li><a href=""http://Article.GMaNe.Org/gmane.comp.lang.scala.user/33698/"" rel=""nofollow"">Bag/Multiset in scala and a touch of multimap</a> (Again the same three examples as my two and @Chuck's in Scala.)</li>
</ul>
"
"<p>I'd like to execute an <a href=""http://en.wikipedia.org/wiki/AWK#Versions_and_implementations"" rel=""nofollow"">gawk</a> script with <code>--re-interval</code> using a shebang. The ""naive"" approach of </p>

<pre><code>#!/usr/bin/gawk --re-interval -f
... awk script goes here
</code></pre>

<p>does not work, since gawk is called with the first argument <code>""--re-interval -f""</code> (not splitted around the whitespace), which it does not understand. Is there a workaround for that?</p>

<p>Of course you can either not call gawk directly but wrap it into a shell script that splits the first argument, or make a shell script that then calls gawk and put the script into another file, but I was wondering if there was some way to do this within one file.</p>

<p>The behaviour of shebang lines differs from system to system - at least in <a href=""http://en.wikipedia.org/wiki/Cygwin"" rel=""nofollow"">Cygwin</a> it does not split the arguments by whitespaces. I just care about how to do it on a system that behaves like that; the script is not meant to be portable.</p>
","2988","","<p>The shebang line has never been specified as part of POSIX, SUS, LSB or any other specification. AFAIK, it hasn't even been properly documented.</p>

<p>There is a rough consensus about what it does: take everything between the <code>!</code> and the <code>\n</code> and <code>exec</code> it. The assumption is that everything between the <code>!</code> and the <code>\n</code> is a full absolute path to the interpreter. There is no consensus about what happens if it contains whitespace.</p>

<ol>
<li>Some operating systems simply treat the entire thing as the path. After all, in most operating systems, whitespace or dashes are legal in a path.</li>
<li>Some operating systems split at whitespace and treat the first part as the path to the interpreter and the rest as individual arguments.</li>
<li>Some operating systems split at the <em>first</em> whitespace and treat the front part as the path to the interpeter and the rest as a <em>single</em> argument (which is what you are seeing).</li>
<li>Some even don't support shebang lines <em>at all</em>.</li>
</ol>

<p>Thankfully, 1. and 4. seem to have died out, but 3. is pretty widespread, so you simply cannot rely on being able to pass more than one argument.</p>

<p>And since the location of commands is also not specified in POSIX or SUS, you generally use up that single argument by passing the executable's <em>name</em> to <code>env</code> so that <em>it</em> can determine the executable's location; e.g.:</p>

<pre><code>#!/usr/bin/env gawk
</code></pre>

<p>[Obviously, this <em>still</em> assumes a particular path for <code>env</code>, but there are only very few systems where it lives in <code>/bin</code>, so this is generally safe. The location of <code>env</code> is a lot more standardized than the location of <code>gawk</code> or even worse something like <code>python</code> or <code>ruby</code> or <code>spidermonkey</code>.]</p>

<p>Which means that you cannot actually use <em>any</em> arguments <em>at all</em>.</p>
"
"<p>Why the following code issues an error ?</p>

<pre><code>['hello','stack','overflow'].inject{|memo,s|memo+s.length}

TypeError: can't convert Fixnum into String
        from (irb):2:in `+'
        from (irb):2:in `block in irb_binding'
        from (irb):2:in `each'
        from (irb):2:in `inject'
        from (irb):2
</code></pre>

<p>If the initial value is passed, it works OK:</p>

<pre><code>['hello','stack','overflow'].inject(0){|memo,s|memo+s.length}
=&gt; 18
</code></pre>
","2988","","<p>As the error message already tells you, the problem is that you have a <code>TypeError</code>. Just because Ruby is dynamically and implicitly typed doesn't mean that you don't have to think about types.</p>

<p>The type of <code>Enumerable#inject</code> without an explicit accumulator (this is usually called <code>reduce</code>) is something like</p>

<pre><code>reduce :: [a] → (a → a → a) → a
</code></pre>

<p>or in a more Rubyish notation I just made up</p>

<pre><code>Enumerable[A]#inject {|A, A| A } → A
</code></pre>

<p>You will notice that all the types are the same. The element type of the <code>Enumerable</code>, the two argument types of the block, the return type of the block and the return type of the overall method.</p>

<p>In your case, the types for the block just don't add up. The block gets passed two <code>String</code>s and it is supposed to return a <code>String</code>. But you call the <code>+</code> method on the first argument (which is a <code>String</code>) with an argument that is an <code>Integer</code>. But <code>String#+</code> doesn't take an <code>Integer</code> it only takes a <code>String</code> or more precisely something which can be <em>converted</em> to a <code>String</code>, i.e. something that responds to <code>#to_str</code>. That's why you get a <code>TypeError</code> for <code>String#+</code>.</p>

<p>The type of <code>Enumerable#inject</code> <em>with</em> an explicit accumulator (this is usually called <code>fold</code>) is something like</p>

<pre><code>fold :: [b] → a → (a → b → a) → a
</code></pre>

<p>or</p>

<pre><code>Enumerable[B]#inject(A) {|A, B| A } → A
</code></pre>

<p>Here you see that the accumulator can have a <em>different</em> type than the element type of the collection. Which is precisely what you need.</p>

<p>These two rules generally get you through all <code>Enumerable#inject</code>-related problems:</p>

<ol>
<li>the type of the accumulator and the return type of the block must be the same</li>
<li>when not passing an explicit accumulator, the type of the accumulator is the same as the element type</li>
</ol>

<p>Rule #1 will most often bite you when you do something like</p>

<pre><code>acc[key] = value
</code></pre>

<p>in your block, because assignments evaluate to the assigned value, not the receiver of the assignment. You'll have to replace this with</p>

<pre><code>acc.tap { acc[key] = value }
</code></pre>

<p>In your particular case, the two solutions have already been mentioned. Either use an explicit accumulator</p>

<pre><code>ary.reduce(0){|acc, e| acc + e.length }
</code></pre>

<p>or convert to integers <em>first</em></p>

<pre><code>ary.map(&amp;:length).reduce(:+)
</code></pre>
"
"<p>What are your favorite code snippets with ruby collections? Preferably they should be discovery for you, be expressive, readable and introduce some fun in your coding practice.</p>

<hr>

<p>Pattern-matching in arrays (for local variables and parameters):</p>

<pre><code>(a, b), c = [[:a, :b], :c]
[a,b,c]
=&gt; [:a, :b, :c]

(a,), = [[:a]]
a
=&gt; :a
</code></pre>

<p>Assigning from non-arrays to multiple variables:</p>

<pre><code>abc, a, b =* ""abc"".match(/(a)(b)./)
=&gt; [""abc"", ""a"", ""b""]

nil1, =* ""abc"".match(/xyz/)
=&gt; []
</code></pre>

<p>Initialize array elements with the same expression:</p>

<pre><code>5.times.map { 1 }    
=&gt; [1,1,1,1]

Array.new(5) { 1 }
=&gt; [1,1,1,1,1]
</code></pre>

<p>Initialize array with the same value:</p>

<pre><code>[2]*5
=&gt;[2,2,2,2,2]

Array.new 5, 2
=&gt;[2,2,2,2,2]
</code></pre>

<p>Sum elements of an array:</p>

<pre><code>[1,2,3].reduce(0, &amp;:+)

=&gt; 6
</code></pre>

<p>Find all indices that match condition:</p>

<pre><code>a.each_with_index.find_all { |e, i| some_predicate(e) }.map(&amp;:last)
</code></pre>

<p>Alternate CSS classes:</p>

<pre><code>(1..4).zip(%w[cls1 cls2].cycle)

=&gt; [[1, ""cls1""], [2, ""cls2""], [3, ""cls1""], [4, ""cls2""]]
</code></pre>

<p>Unzipping:</p>

<pre><code>keys, values = {a: 1, b: 2}.to_a.transpose
keys
=&gt; [:a, :b]
</code></pre>

<p>Exploring boolean member methods of a string:</p>

<pre><code>"""".methods.sort.grep(/\?/)
</code></pre>

<p>Exploring string-specific methods:</p>

<pre><code>"""".methods.sort - [].methods
</code></pre>
","2988","","<p>Lazy Fibonacci series with memoization, taken from <a href=""http://Neeraj.Name/2008/05/10/how-hash-works-with-block-in-ruby.html"" rel=""nofollow"">Neeraj Singh</a>:</p>

<pre><code>fibs = { 0 =&gt; 0, 1 =&gt; 1 }.tap do |fibs|
  fibs.default_proc = -&gt;(fibs, n) { fibs[n] = fibs[n-1] + fibs[n-2] }
end

fibs.take(10).map(&amp;:last).each(&amp;method(:puts))
</code></pre>

<p>An implementation of Counting Sort:</p>

<pre><code>module Enumerable
  def counting_sort(k)
    reduce(Array.new(k+1, 0)) {|counting, n| counting.tap { counting[n] += 1 }}.
    map.with_index {|count, n| [n] * count }.flatten
  end
end
</code></pre>

<p>An implementation of <code>sum</code> aka prefix sum:</p>

<pre><code>module Enumerable
  def scan(initial=nil, sym=nil, &amp;block)
    args = if initial then [initial] else [] end
    unless block_given?
      args, sym, initial = [], initial, first unless sym
      block = -&gt;(acc, el) { acc.send(sym, el) }
    end
    [initial || first].tap {|res| 
      reduce(*args) {|acc, el| 
        block.(acc, el).tap {|e|
          res &lt;&lt; e
        }
      }
    }
  end
end
</code></pre>

<p>Here, I experimented with having <code>Hash#each</code> yield <code>KeyValuePair</code>s instead of two-element <code>Array</code>s. It's quite surprising, how much code <em>still</em> works, after doing such a brutal monkey-patch. Yay, duck typing!</p>

<pre><code>class Hash
  KeyValuePair = Struct.new(:key, :value) do
    def to_ary
      return key, value
    end
  end

  old_each = instance_method(:each)
  define_method(:each) do |&amp;blk|
    old_each.bind(self).() do |k, v|
      blk.(KeyValuePair.new(k, v))
    end
  end
end
</code></pre>

<p>Something I have been playing around with is making <code>Enumerable#===</code> perform recursive structural pattern matching. I have no idea if this is in any way useful. I don't even know if it actually works.</p>

<pre><code>module Enumerable
  def ===(other)
    all? {|el| 
      next true if el.nil?
      begin
        other.any? {|other_el| el === other_el }
      rescue NoMethodError =&gt; e
        raise unless e.message =~ /any\?/
        el === other
      end
    }
  end
end
</code></pre>

<p>Another thing I toyed around with recently was re-implementing all methods in <code>Enumerable</code>, but using <code>reduce</code> instead of <code>each</code> as the basis. In this case, I <em>know</em> it doesn't actually work properly.</p>

<pre><code>module Enumerable
  def all?
    return reduce(true) {|res, el| break false unless res; res &amp;&amp; el } unless block_given?
    reduce(true) {|res, el| break false unless res; res &amp;&amp; yield(el) }
  end

  def any?
    return reduce(false) {|res, el| break true if res || el } unless block_given?
    reduce(false) {|res, el| break true if res || yield(el) }
  end

  def collect
    reduce([]) {|res, el| res &lt;&lt; yield(el) }
  end
  alias_method :map, :collect

  def count(item=undefined = Object.new)
    return reduce(0) {|res, el| res + 1 if el == item } unless undefined.equal?(item)
    unless block_given?
      return size if respond_to? :size
      return reduce(0) {|res, el| res + 1 }
    end
    reduce(0) {|res, el| res + 1 if yield el }
  end

  def detect(ifnone=nil)
    reduce(ifnone) {|res, el| if yield el then el end unless res }
  end
  alias_method :find, :detect

  def drop(n=1)
    reduce([]) {|res, el| res.tap { res &lt;&lt; el unless n -= 1 &gt;= 0 }}
  end

  def drop_while
    reduce([]) {|res, el| res.tap { res &lt;&lt; el unless yield el }}
  end

  def each
    tap { reduce(nil) {|_, el| yield el }}
  end

  def each_with_index
    tap { reduce(-1) {|i, el| (i+1).tap {|i| yield el, i }}}
  end

  def find_all
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el if yield el }}
  end
  alias_method :select, :find_all

  def find_index(item=undefined = Object.new)
    return reduce(-1) {|res, el| break res + 1 if el == item } unless undefined.equals?(item)
    reduce(-1) {|res, el| break res + 1 if yield el }
  end

  def grep(pattern)
    return reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el if pattern === el }} unless block_given?
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; yield(el) if pattern === el }}
  end

  def group_by
    reduce(Hash.new {|hsh, key| hsh[key] = [] }) {|res, el| res.tap { res[yield el] = el }}
  end

  def include?(obj)
    reduce(false) {|res, el| break true if res || el == obj }
  end

  def reject
    reduce([]) {|res, el| res.tap {|res| res &lt;&lt; el unless yield el }}
  end
end
</code></pre>
"
"<pre><code>  def command_to_title
    Sound.play_decision
    RPG::BGM.fade(800)
    RPG::BGS.fade(800)
    RPG::ME.fade(800)
    $scene = Scene_Title.new
    close_command_window
    Graphics.fadeout(60)
  end
  #--------------------------------------------------------------------------
  # * Process When Choosing [Shutdown] Command
  #--------------------------------------------------------------------------
  def command_shutdown
    Sound.play_decision
    RPG::BGM.fade(800)
    RPG::BGS.fade(800)
    RPG::ME.fade(800)
    $scene = nil
  end
  #--------------------------------------------------------------------------
  # *  Process When Choosing [Cancel] Command
  #--------------------------------------------------------------------------
  def command_cancel
    Sound.play_decision
    return_scene
  end
end
</code></pre>

<p>Used in RPG Maker VX</p>
","2988","","<p>It looks like Ruby syntax. However, there are multiple languages which have Ruby syntax, so it's impossible to tell which one of those it is.</p>

<p>If it <em>were</em> Ruby, it would be highly un-idiomatic Ruby, though.</p>
"
"<p>Currently, when a user here gets a 404, they see the following image:</p>

<p><img src=""http://sstatic.net/stackoverflow/img/polyglot-404.png"" alt=""polygot-404.png""></p>

<p>Which represents the text:</p>

<pre><code># define v putchar
#   define print(x) main(){v(4+v(v(52)-4));return 0;}/*
#&gt;+++++++4+[&gt;++++++&lt;-]&gt; ++++.----.++++.*/
print(202*2);exit();
#define/*&gt;.@*/exit()
</code></pre>

<p>This looks suspiciously <em>polyglottish</em>. Which languages does this do something interesting in?</p>

<hr>

<p>Side thought: Is it just me, or did I find a bug in Prettify?</p>
","2988","","<p>Line 4 with the <code>print(202*2)</code> is valid in any number of scripting languages like Perl, Ruby, ECMAScript (provided a suitable implementation of a <code>print</code> function) and probably Python.</p>

<p>Line 2 is there to make line 4 valid in C and Objective-C, maybe also C++ and Objective-C++.</p>

<p>Line 3 contains some Brainfuck, but there seems to be something else there.</p>

<p>I have no idea what line 1 with the <code>v</code> is for. Why not just call <code>putchar</code> directly in line 2? So, I suspect that there's another language that is somehow made valid through this line. (At first I thought about Whitespace, but there's not enough whitespace in there to be a valid Whitespace program.)</p>

<p>And line 5 obviously also contains some code in some highly compressed language. Maybe something in the APL family (J, K, ...) or Golfscript?</p>
"
"<p>Are these two essentially the same thing? They look very similar to me. </p>

<p>Did lambda expression borrow its idea from Ruby?</p>
","2988","","<h1>C# vs. Ruby</h1>

<blockquote>
  <p>Are these two essentially the same thing? They look very similar to me.</p>
</blockquote>

<p>They are very different.</p>

<p>First off, lambdas in C# do two <em>very</em> different things, only one of which has an equivalent in Ruby. (And that equivalent is, surprise, lambdas, not blocks.)</p>

<p>In C#, lambda expression literals are overloaded. (Interestingly, they are the <em>only</em> overloaded literals, as far as I know.) And they are overloaded on their <em>result type</em>. (Again, they are the <em>only</em> thing in C# that can be overloaded on its result type, methods can only be overloaded on their argument types.)</p>

<p>C# lambda expression literals can <em>either</em> be an anonymous piece of executable code <em>or</em> an <em>abstract representation</em> of an anonymous piece of executable code, depending on whether their result type is <code>Func</code> / <code>Action</code> or <code>Expression</code>.</p>

<p>Ruby doesn't have any equivalent for the latter functionality (well, there are interpreter-specific non-portable non-standardized extensions). And the equivalent for the former functionality is a lambda, not a block.</p>

<p>The Ruby syntax for a lambda is very similar to C#:</p>

<pre><code>-&gt;(x, y) { x + y }           # Ruby
(x, y) =&gt; { return x + y; } // C#
</code></pre>

<p>In C#, you can drop the <code>return</code>, the semicolon and the curly braces if you only have a single expression as the body:</p>

<pre><code>-&gt;(x, y) { x + y }  # Ruby
(x, y) =&gt; x + y    // C#
</code></pre>

<p>You can leave off the parentheses if you have only one parameter:</p>

<pre><code>-&gt; x { x }  # Ruby
x =&gt; x     // C#
</code></pre>

<p>In Ruby, you can leave off the parameter list if it is empty:</p>

<pre><code>-&gt; { 42 }  # Ruby
() =&gt; 42  // C#
</code></pre>

<p>An alternative to using the literal lambda syntax in Ruby is to pass a block argument to the <code>Kernel#lambda</code> method:</p>

<pre><code>-&gt;(x, y) { x + y }
lambda {|x, y| x + y } # same thing
</code></pre>

<p>The main difference between those two is that you don't know what <code>lambda</code> does, since it could be overridden, overwritten, wrapped or otherwise modified, whereas the behavior of literals cannot be modified in Ruby.</p>

<p>In Ruby 1.8, you can also use <code>Kernel#proc</code> although you should probably avoid that since that method does something different in 1.9.</p>

<p>Another difference between Ruby and C# is the syntax for <em>calling</em> a lambda:</p>

<pre><code>l.()  # Ruby
l()  // C#
</code></pre>

<p>I.e. in C#, you use the same syntax for calling a lambda that you would use for calling anything else, whereas in Ruby, the syntax for calling a method is different from the syntax for calling any other kind of callable object.</p>

<p>Another difference is that in C#, <code>()</code> is built into the language and is only available for certain builtin types like methods, delegates, <code>Action</code>s and <code>Func</code>s, whereas in Ruby, <code>.()</code> is simply syntactic sugar for <code>.call()</code> and can thus be made to work with <em>any</em> object by just implementing a <code>call</code> method.</p>

<h1>procs vs. lambdas</h1>

<p>So, what <em>are</em> lambdas exactly? Well, they are instances of the <code>Proc</code> class. Except there's a slight complication: there are actually two different kinds of instances of the <code>Proc</code> class which are subtly different. (IMHO, the <code>Proc</code> class should be split into two classes for the two different kinds of objects.)</p>

<p>In particular, not all <code>Proc</code>s are lambdas. You can check whether a <code>Proc</code> is a lambda by calling the <code>Proc#lambda?</code> method. (The usual convention is to call lambda <code>Proc</code>s ""lambdas"" and non-lambda <code>Proc</code>s just ""procs"".)</p>

<p>Non-lambda procs are created by passing a block to <code>Proc.new</code> or to <code>Kernel#proc</code>. However, note that before Ruby 1.9, <code>Kernel#proc</code> creates a <em>lambda</em>, not a proc.</p>

<p>What's the difference? Basically, lambdas behave more like methods, procs behave more like blocks.</p>

<p>If you have followed some of the discussions on the Project Lambda for Java 8 mailinglists, you might have encountered the problem that it is not at all clear how non-local control-flow should behave with lambdas. In particular, there are three possible sensible behaviors for <code>return</code> (well, three <em>possible</em> but only two are really <em>sensible</em>) in a lambda:</p>

<ul>
<li>return from the lambda</li>
<li>return from the method the lambda was called from</li>
<li>return from the method the lambda was created in</li>
</ul>

<p>That last one is a bit iffy, since in general the method will have <em>already</em> returned, but the other two both make perfect sense, and neither is more right or more obvious than the other. The current state of Project Lambda for Java 8 is that they use two different keywords (<code>return</code> and <code>yield</code>). Ruby uses the two different kinds of <code>Proc</code>s:</p>

<ul>
<li>procs return from the calling method (just like blocks)</li>
<li>lambdas return from the lambda (just like methods)</li>
</ul>

<p>They also differ in how they handle argument binding. Again, lambdas behave more like methods and procs behave more like blocks: </p>

<ul>
<li>you can pass more arguments to a proc than there are parameters, in which case the excess arguments will be ignored</li>
<li>you can pass less arguments to a proc than there are parameters, in which case the excess parameters will be bound to <code>nil</code></li>
<li>if you pass a <em>single</em> argument which is an <code>Array</code> (or responds to <code>to_ary</code>) and the proc has multiple parameters, the array will be unpacked and the elements bound to the parameters (exactly like they would in the case of destructuring assignment)</li>
</ul>

<h1>Blocks: lightweight procs</h1>

<p>A block is essentially a lightweight proc. <em>Every</em> method in Ruby has <em>exactly one</em> block parameter, which does not actually appear in its parameter list (more on that later), i.e. is implicit. This means that on <em>every</em> method <em>call</em> you can pass a block argument, whether the method expects it or not.</p>

<p>Since the block doesn't appear in the parameter list, there is no name you can use to refer to it. So, how do you use it? Well, the only two things you can do (not really, but more on that later) is <em>call</em> it implicitly via the <code>yield</code> keyword and check whether a block was passed via <code>block_given?</code>. (Since there is no name, you cannot use the <code>call</code> or <code>nil?</code> methods. What would you call them on?)</p>

<p>Most Ruby implementations implement blocks in a very lightweight manner. In particular, they don't actually implement them as objects. However, since they have no name, you cannot refer to them, so it's actually impossible to tell whether they <em>are</em> objects or not. You can just think of them as procs, which makes it easier since there is one less different concept to keep in mind. Just treat the fact that they aren't actually implemented as blocks as a compiler optimization.</p>

<h1><code>to_proc</code> and <code>&amp;</code></h1>

<p>There <em>is</em> actually a way to refer to a block: the <code>&amp;</code> sigil / modifier / unary prefix operator. It can only appear in parameter lists and argument lists.</p>

<p>In a <em>parameter list</em>, it means ""<em>wrap up</em> the implicit block into a proc and bind it to this name"". In an <em>argument list</em>, it means ""<em>unwrap</em> this <code>Proc</code> into a block"".</p>

<pre><code>def foo(&amp;bar)
end
</code></pre>

<p>Inside the method, <code>bar</code> is now bound to a proc object that represents the block. This means for example that you can store it in an instance variable for later use.</p>

<pre><code>baz(&amp;quux)
</code></pre>

<p>In this case, <code>baz</code> is actually a method which takes zero arguments. But of course it takes the implicit block argument which all Ruby methods take. We are passing the contents of the variable <code>quux</code>, but unroll it into a block first.</p>

<p>This ""unrolling"" actually works not just for <code>Proc</code>s. <code>&amp;</code> calls <code>to_proc</code> on the object first, to convert it to a proc. That way, <em>any</em> object can be converted into a block.</p>

<p>The most widely used example is <code>Symbol#to_proc</code>, which first appeared sometime during the late 90s, I believe. It became popular when it was added to ActiveSupport from where it spread to Facets and other extension libraries. Finally, it was added to the Ruby 1.9 core library and backported to 1.8.7. It's pretty simple:</p>

<pre><code>class Symbol
  def to_proc
    -&gt;(recv, *args) { recv.send self, *args }
  end
end

%w[Hello StackOverflow].map(&amp;:length) # =&gt; [5, 13]
</code></pre>

<p>Or, if you interpret classes as functions for creating objects, you can do something like this:</p>

<pre><code>class Class
  def to_proc
    -&gt; *args { new *args }
  end
end

[1, 2, 3].map(&amp;Array) # =&gt; [[nil], [nil, nil], [nil, nil, nil]]
</code></pre>

<h1><code>Method</code>s and <code>UnboundMethod</code>s</h1>

<p>Another class to represent a piece of executable code, is the <code>Method</code> class. <code>Method</code> objects are reified proxies for methods. You can create a <code>Method</code> object, by calling <code>Object#method</code> on <em>any</em> object and passing the name of the method you want to reify:</p>

<pre><code>m = 'Hello'.method(:length)
m.() # =&gt; 5
</code></pre>

<p><code>Method</code>s respond to <code>to_proc</code>, so you can pass them anywhere you could pass a block:</p>

<pre><code>[1, 2, 3].each(&amp;method(:puts))
# 1
# 2
# 3
</code></pre>

<p>An <code>UnboundMethod</code> is a proxy for a method that hasn't been bound to a receiver yet, i.e. a method for which <code>self</code> hasn't been defined yet. You cannot call an <code>UnboundMethod</code>, but you can <code>bind</code> it to an object (which must be an instance of the module you got the method from), which will convert it to a <code>Method</code>.</p>

<p><code>UnboundMethod</code> objects are created by calling one of the methods from the <code>Module#instance_method</code> family, passing the name of the method as an argument.</p>

<pre><code>u = String.instance_method(:length)

u.()
# NoMethodError: undefined method `call' for #&lt;UnboundMethod: String#length&gt;

u.bind(42)
# TypeError: bind argument must be an instance of String

u.bind('Hello').() # =&gt; 5
</code></pre>

<h1>Generalized callable objects</h1>

<p>Like I already hinted at above: there's not much special about <code>Proc</code>s and <code>Method</code>s. <em>Any</em> object that responds to <code>call</code> can be called and <em>any</em> object that responds to <code>to_proc</code> can be converted to a <code>Proc</code> and thus unwrapped into a block and passed to a method which expects a block.</p>

<h1>History</h1>

<blockquote>
  <p>Did lambda expression borrow its idea from Ruby?</p>
</blockquote>

<p>Probably not. Most modern programming languages have some form of anonymous literal block of code: Lisp (1958), Scheme, Smalltalk (1974), Perl, Python, ECMAScript, Ruby, Scala, Haskell, C++, D, Objective-C, even PHP(!). And of course, the whole idea goes back to Alonzo Church's &lambda;-calculus (1935 and even earlier).</p>
"
"<p>I have an affinity for python, but I work in a .NET environment, so I was looking into Iron Python, and wondering what it would be used for.  </p>

<p>Could you write an app in it? or is it for adding a scripting language to your app?</p>

<p>How do you guys use it?</p>
","2988","","<ul>
<li>IronPython is just Yet Another Python Implementation. You can use it anywhere you would use any other Python implementation. (Modulo platform constraints, of course&nbsp;&ndash; obviously you can't use IronPython on a Java-only device.)</li>
<li>IronPython is just Yet Another .NET Compiler. You can use it anywhere you would use any other .NET language.</li>
<li>IronPython is More Than Just Yet Another Python Implementation. It's a Python implementation that gives you full access to any .NET library.</li>
<li>IronPython is More Than Just Yet Another .NET Compiler. It's a .NET compiler that gives you full access to any Python library.</li>
<li>IronPython is an embeddable scripting engine for any .NET app, library and framework.</li>
</ul>
"
"<p>What I would like to know is to start programming from scratch without any Operating System and anything like it.</p>

<p>As I know Windows and Mac and almost anything even the DOS is written in C, C++ Pascal etc., so I think I should know one of these languages, but for this I would need a program where I can write the code, and also to compile it but without an Operating System and programs how can be this done? How could they do it?</p>

<p>But this is not enough far, how was C written? in what? So when I mean scratch I mean, building everything from the basics. Maybe from <code>0,1,0,1</code> right now I think this is the exact start point. But how can I do it, what should I have and where should I start?</p>

<p>Thanks for every answer!</p>
","2988","","<p>There's a <em>great</em> textbook called <a href=""http://IDC.Ac.Il/tecs/""><em>The Elements of Computing Systems: Building a Modern Computer from First Principles</em></a> by Noam Nisan and Shimon Schocken, which serves as the basis for a university course taught by the authors called <em>Workshop In Computer Construction - From <code>NAND</code> to Tetris in 12 Steps</em>. This course is also taught at other universities under different names.</p>

<p>There's a <a href=""http://YouTube.Com/?v=JtXvUoPx4Qs"">10 minute introduction</a> on YouTube and a <a href=""http://Video.Google.Com/videoplay?docid=7654043762021156507"">1 hour Google TechTalk</a> on Google Video, both by the author himself.</p>

<p>Don't let the title ""Computer Construction"" fool you. By ""computer"", the author does not just mean the rectangular plastic box on your desk, he means the entire <em>computing system</em>, from the individual logic gates up to highest-level application programming.</p>

<p>The book/course teaches you</p>

<ul>
<li>how to create your own individual logic gates</li>
<li>how to build your own logic circuits</li>
<li>how to build your own CPU</li>
<li>how to program in machine code directly</li>
<li>how to program in your own assembler (which you wrote in machine code)</li>
<li>how to write your own virtual machine</li>
<li>how to design, implement and program in your own high-level language (which you wrote in assembler)</li>
<li>how to write a bootloader</li>
<li>how to write an operating system</li>
<li>and ultimately how to write a simple game</li>
</ul>
"
"<pre><code>while(i &lt; bArray.length)
  if(aArray.include?(bArray[i]) == false) then
    return false
  end
  i+=1
end
</code></pre>

<p>I've written the above but I find it to be ugly and bloated. There must be a clean cut way to do this in a single statement.. but how?</p>
","2988","","<pre><code>bArray.all?(&amp;aArray.method(:include?))
</code></pre>
"
"<p>I am looking to implement a functionality in a list of object as I would in C# using an extension method.</p>

<p>Something like this:</p>

<pre><code>List&lt;DataObject&gt; list;
// ... List initialization.
list.getData(id);
</code></pre>

<p>How do I do that in Java?</p>
","2988","","<p>It looks like there is some small chance that Defender Methods might make it into Java 8. However, as far as I understand them, they only allow the <em>author</em> of an <code>interface</code> to retroactively extend it, not arbitrary users.</p>

<p>Defender Methods + Interface Injection would then be able to fully implement C#-style extension methods, but AFAICS, Interface Injection isn't even on the Java 8 roadmap yet.</p>
"
"<p>I am not happy with the speed Eclipse runs inside my Windows XP VM (in VMWare). Do you know whether there is a JIT-optimized version of Eclipse that runs faster then the officially distributed one?</p>

<p>Update: Thank you @PterT, @Jörg and @maarons for pointing out my misconception. I am new to Java and so some terms may be still not very clear to me. In a recent question I asked about a CPU optimized for Java, one of the answers was that such CPU is not needed because </p>

<blockquote>
  <p>Every commonly used JVM has a
  sophisticated JIT compiler than
  intelligently native-compiles methods
  that would benefit from it. So
  nowadays executing bytecode natively
  is fairly useless.</p>
</blockquote>

<p>Since I am new to Java, I thought perhaps I missed something important that makes it less CPU-hog than I currently experience. Are you saying that the only way to make Eclipse snappy is by running it on real hardware instead of inside a VM?</p>
","2988","","<p>Your question doesn't make sense. It is simply impossible to download a JIT-optimized version of Eclipse, since the <em>very definition</em> of ""JIT-optimized"" is ""optimized at runtime"".</p>
"
"<p>I'm wondering why calls to operator methods don't require a dot? Or rather, why can't normal methods be called without a dot?</p>

<p>Example
<pre>
class Foo
  def +(object)
    puts ""this will work""
  end
  def plus(object)
    puts ""this won't""
  end
end 
f = Foo.new
f + ""anything"" # ""this will work""
f plus ""anything"" # NoMethodError: undefined method `plus' for main:Object
</pre></p>
","2988","","<p>The answer to this question, as to pretty much <em>every</em> language design question is: ""Just because"". Language design is a series of mostly subjective trade-offs. And for most of those subjective trade-offs, the <em>only</em> correct answer to the question why something is the way it is, is simply ""because Matz said so"".</p>

<p>There are certainly other choices:</p>

<ul>
<li><p>Lisp doesn't have operators <em>at all</em>. <code>+</code>, <code>-</code>, <code>::</code>, <code>&gt;</code>, <code>=</code> and so on are simply normal legal function names (variable names, actually), just like <code>foo</code> or <code>bar?</code></p>

<pre><code>(plus 1 2)
(+ 1 2)
</code></pre></li>
<li><p>Smalltalk <em>almost</em> doesn't have operators. The only special casing Smalltalk has is that methods which consist only of operator characters do not have to end with a colon. In particular, since there are no operators, all method calls have the same precedence and are evaluated strictly left-to-right: <code>2 + 3 * 4</code> is <code>20</code>, not <code>14</code>.</p>

<pre><code>1 plus: 2
1 + 2
</code></pre></li>
<li><p>Scala <em>almost</em> doesn't have operators. Just like Lisp and Smalltalk, <code>*</code>, <code>-</code>, <code>#:::</code> and so on are simply legal method names. (Actually, they are also legal class, trait, type and field names.) <em>Any</em> method can be called either with or without a dot. If you use the form without the dot and the method takes only a single argument, then you can leave off the brackets as well. Scala <em>does</em> have precedence, though, although it is not user-definable; it is simply determined by the first character of the name. As an added twist, operator method names that end with a colon are inverted or right-associative, i.e. <code>a :: b</code> is equivalent to <code>b.::(a)</code> and not <code>a.::(b)</code>.</p>

<pre><code>1.plus(2)
1 plus(2)
1 plus 2
1.+(2)
1 +(2)
1 + 2
</code></pre></li>
<li><p>In Haskell, any function whose name consists of operator symbols is considered an operator. Any function can be treated as an operator by enclosing it in backticks and any operator can be treated as a function by enclosing it in brackets. In addition, the programmer can freely define associativity, fixity and precedence for user-defined operators.</p>

<pre><code>plus 1 2
1 `plus` 2
(+) 1 2
1 + 2
</code></pre></li>
</ul>

<p>There is no particular reason why Ruby couldn't support user-defined operators in a style similar to Scala. There <em>is</em> a reason why Ruby can't support arbitrary methods in operator position, simply because</p>

<pre><code>foo plus bar
</code></pre>

<p>is <em>already</em> legal, and thus this would be a backwards-incompatible change.</p>

<p>Another thing to consider is that Ruby wasn't actually fully designed in advance. It was designed through its implementation. Which means that in a lot of places, the implementation is leaking through. For example, there is absolutely no logical reason why</p>

<pre><code>puts(!true)
</code></pre>

<p>is legal but</p>

<pre><code>puts(not true)
</code></pre>

<p>isn't. The only reason <em>why</em> this is so, is because Matz used an LALR(1) parser to parse a non-LALR(1) language. If he had designed the language <em>first</em>, he would have never picked an LALR(1) parser in the first place, and the expression would be legal.</p>

<p>The <code>Refinement</code> feature currently being discussed on <code>ruby-core</code> is another example. The way it is currently specified, will make it <em>impossible</em> to optimize method calls and inline methods, <em>even if the program in question doesn't actually use <code>Refinement</code>s at all</em>. With just a simple tweak, it can be just as expressive and powerful, <em>and</em> ensure that the pessimization cost is only incurred for scopes that actually <em>use</em> <code>Refinement</code>s. Apparently, the sole reason <em>why</em> it was specified this way, is that a) it was easier to prototype this way, and b) YARV doesn't <em>have</em> an optimizer, so nobody even bothered to think about the implications (well, nobody except Charles Oliver Nutter).</p>

<p>So, for basically <em>any</em> question you have about Ruby's design, the answer will almost always be either ""because Matz said so"" or ""because in 1993 it was easier to implement that way"".</p>
"
"<p>Here's the sample codes:</p>

<pre><code>class Square
  def initialize

    if defined?(@@number_of_squares)
      @@number_of_squares += 1
    else
      @@number_of_squares = 1
    end
  end

  def Square.count
    @@number_of_squares
  end
end
</code></pre>
","2988","","<p><code>defined?</code> is actually not a method but a unary prefix operator (just like <code>!</code>, <code>not</code>, <code>+@</code> and <code>-@</code>), but without the capability to override it. It wouldn't make sense to override it anyway, since its behavior cannot be implemented in Ruby.</p>
"
"<p>There are a lot of <a href=""http://en.wikipedia.org/wiki/Comparison_of_free_software_licenses"" rel=""nofollow"">free software licenses</a>, but is there one which already contains clauses which prevent government agencies (and other companies like banks) from using the software or code?</p>

<p>NOTE:</p>

<p>I know it would be impossible to enforce, and its not like any government would want to use software I write anyhow (its more a matter of principle).</p>

<p>It doesn't need to be a recognized license agreement, I'm just asking if any such license exists.</p>

<p>An alternative would be to use a dual license?</p>
","2988","","<p>This is impossible. If you exclude someone, it's <em>by definition</em> not a free software license.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/442026/function-overloading-by-return-type"">Function overloading by return type?</a>  </p>
</blockquote>



<p>Hi,</p>

<p>In overloading we say that the parameter list has to be different either by number or by type, but doesn't matter on the return type, Why is that so???</p>

<p>The function</p>

<pre><code>//Function 1
int Add(int a, int b)
{return a+b;}

//Function 2
Double Add(Double a, Double b)
{return a+b;}

//Function 3
Double Add(int a, int b)
{return (Double)a+b;}
</code></pre>

<p>The functions 1 2 are overloaded, where as functions 1 and 3 are not ??? Reasons ???</p>

<p>Any help is really appreciated.</p>
","2988","","<p>Note that interestingly, Anonymous Function Literals in C# <em>are</em> overloaded on their result type and it doesn't seem to pose any problems.</p>

<p>In C#, a lambda can be two very different things:</p>

<ul>
<li>a piece of executable code (a subclass of <code>Delegate</code> actually)</li>
<li>an abstract representation of an operation (basically, an abstract syntax tree)</li>
</ul>

<p>This is distinguished <em>purely</em> by the <em>result type</em> of the lambda literal:</p>

<pre><code>Func&lt;int, int&gt; l = (i) =&gt; i + i * i;
</code></pre>

<p>is a piece of executable code. I can say</p>

<pre><code>Console.WriteLine(l(3));
</code></pre>

<p>and I will get <code>12</code>.</p>

<pre><code>Expression&lt;Func&lt;int, int&gt;&gt; e = (i) =&gt; i + i * i;
</code></pre>

<p>is an <em>abstract representation</em> of that operation. I can say</p>

<pre><code>Console.WriteLine(e);
</code></pre>

<p>and I will get</p>

<pre><code>i =&gt; (i + (i * i))
</code></pre>

<p>Note that this is <em>not just</em> the original text. It really <em>is</em> an rendering of the abstract representation. The extra parentheses around the expression and inside it are there, because <code>ToString()</code> did an actual tree traversal of the AST and rendered it. The AST looks roughly like this:<img src=""http://i.stack.imgur.com/VzrAH.gif"" alt=""Expression Tree""></p>

<p>And this</p>

<pre><code>var v = (i) =&gt; i + i * i;
</code></pre>

<p>is simply illegal, <em>because</em> lambdas are overloaded on their result type, but the <code>var</code> keyword says ""use the result type to figure out the type of <code>v</code>"".</p>
"
"<p>In <a href=""http://stackoverflow.com/questions/4364344/problem-with-ruby-string-concatenation/4372002#4372002"">this answer to a separate question</a>, I said that if you do</p>

<pre><code>name = ""Rohit "" ""Sharma""
</code></pre>

<p>you don't create two <code>String</code> objects with the contents <code>""Rohit ""</code> and <code>""Sharma""</code> that combine to create a new String object with the contents <code>""Rohit Sharma""</code>, but that you only create a single String object to start off with.</p>

<p>But it's only a book telling me that, rather than manually verifying it.</p>

<p>How would you be able to log the creation of a String?</p>

<p>I tried using</p>

<pre><code>set_trace_func proc { |event, file, line, id, binding, classname|
  printf ""%8s %s:%-2d %10s %8s\n"", event, file, line, id, classname
}

string = ""Insert content here""
</code></pre>

<p>But only got</p>

<pre><code>c-return -:3  set_trace_func   Kernel
    line -:5
</code></pre>

<p>And ""Programming Ruby 1.9"" (the Pickaxe) says that modifying <code>Class#new</code> wouldn't work for strings, as they're constructed without using <code>new</code>.</p>
","2988","","<p>You can't log this, since this concatenation doesn't happen at runtime. It happens at parse time.</p>

<p>In other words: regardless of whatever code you write to log this, the concatenation will have happened long before your code ever gets run.</p>

<p>In yet other words: you trust that there's only one string object created the same way that you trust that <code>42</code> only creates one <code>Fixnum</code> object with the value <code>42</code>, not 42 <code>Fixnum</code> objects with the value <code>1</code>: the ISO Ruby Language Specification says so, and the source code of every single existing Ruby implementation says so, and every Ruby book ever written says so.</p>
"
"<p>I want to start programming in python and I was wondering,
which languages does Python resemble in syntax? I am familiar with .net.</p>
","2988","","<p>Python's abstract syntax is heavily inspired by C, as is its concrete micro-syntax. Its concrete macro-syntax, though is fairly different from C, since it uses indentation and dedentation to delimit blocks, similar to Haskell, F#, ISWIM and a couple of others.</p>

<p>Semantically, Python is probably closer to something like Modula-2 with objects, but dynamically typed, of course.</p>
"
"<p><strong>I have a negligible attention span, and since I'm immersed in <em>La Vida Powershell</em> at the moment, my code will be formatted as such</strong> </p>

<p>I apologize in advance if this has been discussed elsewhere, but since my problem is that I don't know what this is called, my googling efforts have been understandibly fruitless.</p>

<p>imagine three functions:</p>

<pre><code>function GrowGrapes(){...} #grows grapes.
function MakeWine(){...} #uses said grapes to make wine
function DrinkWine(){...} #drinks said wine
</code></pre>

<p>if the first fails, then you don't want to, and must not, attempt the 2nd.  If the 2nd fails, or is never ran, then there is no point in ever attempting to perform the 3rd.</p>

<p>rather than a big obnoxious nest of IF statements like this...</p>

<pre><code>IF ([bool]GrowGrapes()) {
   IF ([bool]MakeWine()) {
      DrinkWine()
   }
}
</code></pre>

<p>in certain languages (I <em>BELIEVE</em> I learned this in reference to C...) you can do the following:</p>

<pre><code>IF ([bool]GrowGrapes() -AND [bool]MakeWine()) {DrinkWine()}
</code></pre>

<p>or even</p>

<pre><code>$rslt = ([bool]GrowGrapes() -AND [bool]MakeWine()) -AND [bool]DrinkWine()
</code></pre>

<p>and trust that the 2nd half of your conditional would only ever execute if the first came back as true/success/whatever.</p>

<p>likewise you could OR two expressions, and trust that the 2nd would only ever be executed and tested if the first came back as false</p>

<pre><code>[bool]MakeWine() -OR [bool]BuyWine()      #only attempt to purchase wine if 
                                          #the attempt to make it has failed
</code></pre>

<p>My question is: What is this behavior called?  Also, does powershell support it?</p>
","2988","","<p>This quite a common idiom in Perl, from where it migrated into Ruby:</p>

<pre><code>do_something or die
</code></pre>

<p>where <code>die</code> is some error handling routine and</p>

<pre><code>do_something and do_something_else
</code></pre>

<p>where <code>do_something_else</code> is meaningless if <code>do_something</code> fails.</p>

<p>As was mentioned in the other answers, this (ab)uses short-circuiting behavior and/or lazy evaluation of boolean operators, which not all languages have.</p>

<p>Note that this obviously assumes that <code>do_something</code> returns a boolean value that indicates success or failure, which also means that its <em>real</em> work is some side-effect.</p>

<p>A more structured way of doing something similar would be to use an <code>Error</code> Monad. See <a href=""http://mvanier.livejournal.com/5103.html"" rel=""nofollow""><em>Yet Another Monad Tutorial (part 5: error-handling monads)</em></a> for an approachable introduction to the <code>Error</code> Monad, and the whole article series for an introduction to the concept of Monads in general.</p>
"
"<p>I am looking at this ruby code and they make reference to:</p>

<pre><code>@current_user
</code></pre>

<p>and </p>

<pre><code>self.current_user
</code></pre>

<p>what is the difference?</p>

<p><a href=""http://code.google.com/p/openplaques/source/browse/trunk/www/lib/authenticated_system.rb"" rel=""nofollow"">http://code.google.com/p/openplaques/source/browse/trunk/www/lib/authenticated_system.rb</a></p>
","2988","","<pre><code>@current_user
</code></pre>

<p>dereferences the instance variable called <code>@current_user</code>.</p>

<pre><code>self.current_user
</code></pre>

<p>sends the message <code>:current_user</code> to <code>self</code>.</p>
"
"<p>I honestly don't see the difference between BDD and TDD. I mean, both are just tests if what is expected happens. I've seen BDD Tests that are so fleshed out they practically count as TDD tests, and I've seen TDD tests that are so vague that they black box a lot of code. Let's just say I'm pretty convinced that having both is better.</p>

<p>Here's a fun question though. Where do I start? Do I start out with high level BDD tests? Do I start out with low level TDD tests?</p>
","2988","","<blockquote>
  <p>I honestly don't see the difference between BDD and TDD.</p>
</blockquote>

<p>That's because there isn't any.</p>

<blockquote>
  <p>I mean, both are just tests if what is expected happens.</p>
</blockquote>

<p>That's wrong. BDD and TDD have absolutely nothing whatsoever to do with testing. None. Nada. Zilch. Zip. Nix. Not in the slightest.</p>

<p>Unfortunately, TDD has the word ""test"" in pretty much everything (not only in its name, but also in test framework, unit test, <code>TestCase</code> (the class you tpyically inherit from), <code>FooTest</code> (the class which typically holds your tests), <code>testBar</code> (the typical naming pattern for a test method), plus a lot test-related terminology such as ""assertion"" and ""verification"") which leads some people to believe that it actually <em>does</em> have something to do with tests. So, some smart people said: ""Hey, let's just change the name"" to remove any potential for confusion.</p>

<p>And that's what BDD is. It's just TDD with any test-related terminology replaced by examples-of-behavior-related terminology:</p>

<ul>
<li>Test &rarr; Example</li>
<li>Assertion &rarr; Expectation</li>
<li><code>assert</code> &rarr; <code>should</code></li>
<li>Unit &rarr; Behavior</li>
<li>Verification &rarr; Specification</li>
<li>&hellip; and so on</li>
</ul>

<p>BDD is just TDD with different words. If you do TDD right, you are doing BDD. The difference is that&nbsp;&ndash; provided you believe at least in the weak form of the Sapir-Whorf Hypothesis&nbsp;&ndash; the different words make it easier to do it right.</p>
"
"<p>I'd like to implement a class in Ruby that's comparable (using the <code>&lt;=&gt;</code> operator) with any Fixnum, <em>and vice-versa</em>. This will ultimately be used in a range. Here is an outline of my class:</p>

<pre><code>class N
  include Comparable
  attr :offset
  def initialize(offset = 0)
    @offset = offset
  end
  def succ
    N.new(@offset + 1)
  end
  def +(offset)
    N.new(@offset + offset)
  end
  def &lt;=&gt;(other)
    return @offset &lt;=&gt; other.offset if other.kind_of? N
    return 1  # N is greater than everything else
  end
end

def n; N.new(0); end
</code></pre>

<p>Now this works great when used in <code>n..n+2</code> and <code>n..999</code>, but not in <code>1..n</code>. This is due to the fact that <code>n &lt;=&gt; 1</code> works but <code>1 &lt;=&gt; n</code> does not (returns <strong><em>nil</em></strong>).</p>

<p>Is there any way I can get Fixnum to treat my N class as a comparable object? Your thoughts are appreciated :)</p>
","2988","","<p>If you want to implement your own number type, you <em>must</em> implement <code>coerce</code>:</p>

<pre><code>class N
  def coerce(other)
    return N.new(other), self
  end
end

n = N.new

1 &lt;=&gt; n # =&gt; -1
</code></pre>

<p>All of Ruby's builtin number types in the core library, all number types in the standard library, as well as all third-party number types use the <code>coerce</code> protocol to find a common type in order to make operators such as <code>+</code>, <code>*</code> and <code>==</code> commutative and <code>-</code>, <code>/</code> and <code>&lt;=&gt;</code> symmetric.</p>

<p>It's not quite clear to me what the semantics of <code>N</code> should be, so the above implementation is only an example.</p>
"
"<p>I am developing a web based opensource project. I was considering the AGPL v3, but I explicitly want to prevent commercial use. Non-profit orgs are welcome to use it for free.</p>

<p>It seems to be a common thing in the software world, but I am looking for a pre-written license that I could use or adapt.</p>

<p>Any ideas where I can find such a thing? Are there accepted opensource licenses that fit this criteria?</p>
","2988","","<p>There cannot possibly be such a license. Forbidding the use of the source code is the <em>exact opposite</em> of open source. Ergo, there cannot ever possible be an open source license which has such a restriction, and a license which has such a restriction cannot ever possibly be an open source license.</p>
"
"<p>do you know any (ebook) ressources on this topic? I am about to deal with this issue very soon, so it would be great to have some documents for a quick lookup.</p>

<p>greets, poeschlorn</p>
","2988","","<p>I haven't read it myself, but I heard some good things about the book <a href=""http://Guru-Lang.GoogleCode.Com/svn/branches/1.0/doc/book.pdf"" rel=""nofollow""><em>Verified Programming in Guru</em></a> by Aaron Stump. It uses the <a href=""http://Guru-Lang.GoogleCode.Com/"" rel=""nofollow"">Guru programming language</a>.</p>

<p>I've also heard good things about the textbook/course <a href=""http://Adam.Chlipala.Net/cpdt/"" rel=""nofollow"">Certified Programming with Dependent Types</a> by Adam Chlipala. (Adam Chlipala is the creator of the <a href=""http://Impredicative.Com/ur/"" rel=""nofollow"">Ur programming language and the Ur/Web web application framework</a>.) This book uses the <a href=""http://Coq.INRIA.Fr/"" rel=""nofollow"">Coq interactive proof assistant</a>.</p>

<p><a href=""http://WWW.CIS.UPenn.Edu/~bcpierce/sf/"" rel=""nofollow"">Software Foundations</a> by Benjamin C. Pierce, Chris Casinghino, Michael Greenberg, Vilhelm Sjöberg, Brent Yorgey and many others. Also uses Coq.</p>

<p><a href=""http://CS.Swan.Ac.Uk/~csetzer/lectures/intertheo/"" rel=""nofollow"">Interactive Theorem Proving</a> by Anton Setzer is another course, this time using the <a href=""http://Wiki.Portal.Chalmers.Se/agda/"" rel=""nofollow"">Agda programming language</a>.</p>

<p><a href=""http://LemmaTheUltimate.Com/"" rel=""nofollow"">Lemma the Ultimate</a> is a blog by <a href=""http://LarryTheLiquid.Com/"" rel=""nofollow"">Larry Diehl</a> (aka larrytheliquid aka larrλtheliquid), a Ruby on Rails developer exploring the world of reliable software. Unfortunately, it only contains a small number of posts, but it offers a great perspective from the viewpoint of a working web developer rather than a PhD student writing a thesis on category theory or something like that. In particular, it contains the <a href=""http://LemmaTheUltimate.Com/2009/10/14/roadmap/"" rel=""nofollow"">roadmap</a> that Larry intends to take.</p>
"
"<p>I'm reading the Metaprogramming section of <em>Programming Ruby 1.9</em> and I'm having trouble understanding what's going on <em>internally</em> between <code>class_eval</code>/<code>class_exec</code> vs. <code>instance_eval</code>/<code>instance_exec</code>.</p>

<p>So first of all, my understanding is that <code>def</code> adds a method to the method table of <code>self</code> (the class object):</p>

<pre><code>class A
  puts self  # =&gt; A
  def foo; 42; end  # added to the method table of self, so becomes an instance method
end
A.new.foo  # =&gt; 42
</code></pre>

<p>And if we use <code>class_eval</code>, we get the same behavior:</p>

<pre><code>A.class_eval do
  puts self  # =&gt; A
  def bar; 42; end  # same as above
end
A.new.bar  # =&gt; 42
</code></pre>

<p>But somehow in the <code>instance_eval</code> case, things are different:</p>

<pre><code>A.instance_eval do
  puts self  # =&gt; A
  def baz; 42; end  # added to the method table of an anonymous
                    # singleton class of self, so becomes a class method
end
puts A.baz  # =&gt; 42

s = 'string'
s.instance_eval do ... end  # same behavior, so now def creates an instance method
</code></pre>

<p>So I understand the functional difference between <code>class_eval</code> and <code>instance_eval</code>.</p>

<p>But the contexts inside the <code>class_eval</code> and <code>instance_eval</code> blocks look <em>exactly</em> the same to me -- in particular, <code>self</code> points to the same object, and the <code>local_variables</code> are the same.  So what's going on inside the blocks (internally) that's making <code>def</code> act different?</p>

<p>Is there some piece of documentation I could read?  The RDoc for <a href=""http://ruby-doc.org/core/classes/Object.html#M000334"">instance_eval</a> and <a href=""http://ruby-doc.org/core/classes/Module.html#M001650"">class_eval</a> doesn't help.  Looking at the source, <a href=""http://ruby-doc.org/core/classes/Object.src/M000334.html"">instance_eval</a> seems to set up a singleton class object whereas <a href=""http://ruby-doc.org/core/classes/Module.src/M001650.html"">class_eval</a> doesn't -- but is this difference visible outside the C code, on the Ruby level?</p>
","2988","","<p>Just to add to @krusty.ar's answer: <code>def</code> and <code>define_method</code> add methods to the current <em>method definition context</em> (I believe that's what it's called, I'm not sure), not to the current <code>self</code>.</p>

<p>It's just that inside of a module, class or singleton class body, those two happen to be the same.</p>

<p>But, for example, in a script body (aka top-level), <code>self</code> is the <code>main</code> object, but the current method definition context is <code>Object</code>.</p>
"
"<p><a href=""http://stackoverflow.com/questions/1607947/practicality-of-compiling-another-language-to-javascript"">Another post</a> questioned how practical it is to compile languages into Javascript.  Practicality aside, what interpreters translate from some language <em>X</em> to Javascript and were implemented in Javascript?  I'm especially interested in the cases where <em>X</em> wasn't designed with the intention of targeting Javascript.  Even if the interpreter isn't totally finished I'd like to hear about it.</p>

<p>You may be curious about the motivation for this question.  Javascript certainly can't leverage as much power as assembler, but the flexibility for code distribution and execution may sometimes outweigh that cost.</p>

<p>One use case for these interpreters is a model for teaching and learning programming languages.  Consider how useful it is to have a Javascript interpreter in the interactive book <a href=""http://eloquentjavascript.net/"" rel=""nofollow""><em>Eloquent Javascript</em></a>.  Sure, there may be a performance hit over compiling it natively, but in some situations the cost is certainly worth it.  And yes, I realize it's always an option to rely on the server to compile or interpret code, but I'm specifically interested in client-side approaches.</p>

<hr/>

<p><em>UPDATE</em>:  A lot of responses include references to compilers that weren't implemented in Javascript.  I just want to stress that the interpreter itself should be implemented in Javascript so that both it and the source language code could run on the browser on your grandparent's computer.</p>
","2988","","<ul>
<li><a href=""http://Cappuccino.Org/"" rel=""nofollow"">Objective-J</a> is a language that basically takes the ""Objective"" part of Objective-C and glues it to ECMAScript</li>
<li><a href=""http://Clamato.Net/"" rel=""nofollow"">Clamato</a> is a Smalltalk-inspired language for client-side web scripting</li>
</ul>

<p>See also this question: <a href=""http://StackOverflow.Com/q/3895322/#3895433""><em>Are there other languages than Objective-J that get “compiled” to JavaScript in the browser?</em></a></p>
"
"<p>I have been studying design patterns lately. I am struggling with finding a scenario that I can implement builder pattern for that scenario. Has anyone got any example? </p>

<p>Any answer will be much appreciated.</p>
","2988","","<p>The Builder Pattern is often used to construct HTML and XML documents. Example:</p>

<pre><code>require 'markaby' # Markaby is an HTML builder library for Ruby

builder = Markaby::Builder.new

builder.html {
  head {
    title 'Sample Title'
    link href: 'style.css', rel: 'stylesheet'
  }

  body {
    h1 'Sample Title'
    ul {
      li 'Item 1'
      li 'Item 2'
    }
  }
}

print builder
</code></pre>
"
"<p>How to use string methods on utf-8 characters ?</p>

<p>For example I have a string with a cyrillic characters so when I use string.upcase it<code>s dosen</code>t work</p>
","2988","","<p>Ruby only supports case conversions on the letters <code>A</code>&ndash;<code>Z</code> and <code>a</code>&ndash;<code>z</code>.</p>

<p>The reason for this is simply that case conversions for other letters aren't well defined. For example, in Turkish <code>'I'.downcase # =&gt; 'ı'</code> and <code>i.upcase # =&gt; 'İ'</code>, but in French <code>'I'.downcase # =&gt; 'i'</code> and <code>i.upcase # =&gt; 'I'</code>. Ruby would have to know not only the character encoding, but also the language to do that correctly.</p>

<p>Even worse, in German</p>

<pre><code>'MASSE'.downcase
</code></pre>

<p>is <em>either</em></p>

<pre><code>'maße'   # ""measurements""
'masse'  # ""mass""
</code></pre>

<p>In other words: you need to actually <em>understand</em> the text, i.e. you need a full-blown AI, to do case conversions correctly.</p>

<p>And I myself have actually accidentally constructed a sentence once, which was undecidable <em>even for a human</em>.</p>

<p>In short: it's simply impossible to do correctly, which is why Ruby doesn't do it <em>at all</em>. There are third-party libraries, however, like the Unicode library and ActiveSupport, which <em>do</em> support a somewhat larger subset of characters.</p>
"
"<p>How do you sort a hash in ruby based on the value and then key? For example</p>

<pre><code>h = {4 =&gt; 5, 2 =&gt; 5, 7 =&gt; 1}
</code></pre>

<p>would sort into </p>

<pre><code>[[7, 1], [2,5], [4, 5]]
</code></pre>

<p>I can sort based on the value by doing</p>

<pre><code>h.sort {|x,y| x[1] &lt;=&gt; y[1]}
</code></pre>

<p>but I can't figure out how to sort based on value and then key if the values are the same</p>
","2988","","<pre><code>h.sort_by {|k, v| [v, k] }
</code></pre>

<p>This uses the fact that <code>Array</code> mixes in <code>Comparable</code> and defines <code>&lt;=&gt;</code> element-wise.</p>

<p>Note that the above is equivalent to</p>

<pre><code>h.sort_by {|el| el.reverse }
</code></pre>

<p>which is equivalent to</p>

<pre><code>h.sort_by(&amp;:reverse)
</code></pre>

<p>which may or may not be more readable.</p>

<p>If you <em>know</em> that <code>Hash</code>es usually sort by key first, then by value, the above should be obvious. Maybe with a small comment:</p>

<pre><code>h.sort_by(&amp;:reverse) # sort by value first, then by key
</code></pre>

<hr>

<p>Note: if you simply want to delegate to some property's <code>&lt;=&gt;</code> method, (i.e. sort by a key rather than a general comparison function) it is generally prefered to use <code>sort_by</code> instead of <code>sort</code>. It's much easier to read. Generally, it also happens to be faster, but the readability aspect is the more important one.</p>

<p>You should really only write your own comparison function if <em>absolutely</em> necessary.</p>

<p>So, your non-working example would better be written as</p>

<pre><code>h.sort_by {|el| el[1] }
</code></pre>

<p>Personally, I prefer to use destructuring bind in the block parameter list, instead of using <code>el[0]</code> and <code>el[1]</code>:</p>

<pre><code>h.sort_by {|key, value| value }
</code></pre>

<p>However, in this particular case, <code>el[1]</code> also happens to be identical to <code>el.last</code>, so that you could simply write</p>

<pre><code>h.sort_by(&amp;:last)
</code></pre>
"
"<p>Are there other languages apart from javascript that browsers can interpret and execute. I'm happy for browser specific ones as well.</p>

<p>Any answers welcomed</p>
","2988","","<ul>
<li>Every language for which an interpreter written in JavaScript exists: Brainfuck, Ruby (more precisely: YARV bytecode), Scheme, Clamato, many others.</li>
<li>Every language for which a compiler exists that compiles the language to JavaScript: C, Java, JVML bytecode, CIL bytecode, Ruby, Clojure, Scala, Objective-J, haXe, Ur, Links, Flapjax, Caja, many others.</li>
<li>Every language for which a compiler exists that compiles the language to one of the languages listed above, since you can then either interpret the output of the compiler in JavaScript, or compile it again to JavaScript. (E.g. you can compile JVML bytecode to JavaScript and you can compile Ruby to JVML bytecode, ergo you can compile Ruby to JavaScript.)</li>
<li>Every language for which an interpreter exists as a browser plugin: JVML bytecode (Java Applets), CIL bytecode (Silverlight), ActionScript bytecode (Flash), C, many others.</li>
<li>Every language which can be executed by the browser directly: VBScript (in Internet Explorer), XSLT (several browsers), x86/AMD64 machine code (Chrome Native Client), many others.</li>
</ul>

<p>See also:</p>

<ul>
<li><a href=""http://StackOverflow.Com/q/2872037/#2872454""><em>What language types are allowed in the HTML script tag?</em></a></li>
<li><a href=""http://StackOverflow.Com/q/3895322/#3895433""><em>Are there other languages than Objective-J that get “compiled” to JavaScript in the browser?</em></a></li>
</ul>
"
"<p>Can we expose interfaces in Ruby like we do in java and enforce the Ruby modules or classes to implement the methods defined by interface. </p>

<p>One way is to use inheritance and method_missing to achieve the same but is there any other more appropriate approach available ?</p>
","2988","","<p>Ruby has <em>Interfaces</em> just like any other language.</p>

<p>Note that you have to be careful not to conflate the concept of the <em>Interface</em>, which is an abstract specification of the responsibilities, guarantees and protocols of a unit with the concept of the <code>interface</code> which is a keyword in the Java, C# and VB.NET programming languages. In Ruby, we use the former all the time, but the latter simply doesn't exist.</p>

<p>It is very important to distinguish the two. What's important is the <em>Interface</em>, not the <code>interface</code>. The <code>interface</code> tells you pretty much nothing useful. Nothing demonstrates this better than the <em>marker interfaces</em> in Java, which are interfaces that have no members at all: just take a look at <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/io/Serializable.html""><code>java.io.Serializable</code></a> and <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/lang/Cloneable.html""><code>java.lang.Cloneable</code></a>; those two <code>interface</code>s mean <em>very</em> different things, yet they have the <em>exact same</em> signature.</p>

<p>So, if two <code>interface</code>s that mean different things, have the same signature, what <em>exactly</em> is the <code>interface</code> even guaranteeing you?</p>

<p>Another good example:</p>

<pre><code>package java.util;

interface List&lt;E&gt; implements Collection&lt;E&gt;, Iterable&lt;E&gt; {
    void add(int index, E element)
        throws UnsupportedOperationException, ClassCastException,
            NullPointerException, IllegalArgumentException,
            IndexOutOfBoundsException;
}
</code></pre>

<p>What is the <em>Interface</em> of <code>java.util.List&lt;E&gt;.add</code>?</p>

<ul>
<li>that the length of the collection does not decrease</li>
<li>that all the items that were in the collection before are still there</li>
<li>that <code>element</code> is in the collection</li>
</ul>

<p>And which of those actually shows up in the <code>interface</code>? None! There is nothing in the <code>interface</code> that says that the <code>Add</code> method must even <em>add</em> at all, it might just as well <em>remove</em> an element from the collection.</p>

<p>This is a perfectly valid implementation of that <code>interface</code>:</p>

<pre><code>class MyCollection&lt;E&gt; implements java.util.List&lt;E&gt; {
    void add(int index, E element)
        throws UnsupportedOperationException, ClassCastException,
            NullPointerException, IllegalArgumentException,
            IndexOutOfBoundsException {
        remove(element);
    }
}
</code></pre>

<p>Another example: where in <a href=""http://Download.Oracle.Com/javase/7/docs/api/java/util/Set.html""><code>java.util.Set&lt;E&gt;</code></a> does it actually say that it is, you know, a <em>set</em>? Nowhere! Or more precisely, in the documentation. In English.</p>

<p>In pretty much all cases of <code>interfaces</code>, both from Java and .NET, all the <em>relevant</em> information is actually in the docs, not in the types. So, if the types don't tell you anything interesting anyway, why keep them at all? Why not stick just to documentation? And that's exactly what Ruby does.</p>

<p>Note that there are <em>other</em> languages in which the <em>Interface</em> can actually be described in a meaningful way. However, those languages typically don't call the construct which describes the <em>Interface</em> ""<code>interface</code>"", they call it <code>type</code>. In a dependently-typed programming language, you can for example express the properties that a <code>sort</code> function returns a collection of the same length as the original, that every element which is in the original is also in the sorted collection and that no bigger element appears before a smaller element.</p>

<p>So, in short: Ruby does not have an equivalent to a Java <code>interface</code>. It <em>does</em> however have an equivalent to a Java <em>Interface</em>, and its exactly the same as in Java: documentation.</p>

<p>Also, just like in Java, <em>Acceptance Tests</em> can be used to specify *Interface*s as well.</p>

<p>In particular, in Ruby, the <em>Interface</em> of an object is determined by what it can <em>do</em>, not what <code>class</code> is is, or what <code>module</code> it mixes in. Any object that has a <code>&lt;&lt;</code> method can be appended to. This is very useful in unit tests, where you can simply pass in an <code>Array</code> or a <code>String</code> instead of a more complicated <code>Logger</code>, even though <code>Array</code> and <code>Logger</code> do not share an explicit <code>interface</code> apart from the fact that they both have a method called <code>&lt;&lt;</code>.</p>

<p>Another example is <a href=""http://RubyDoc.Info/docs/ruby-stdlib/1.9.2/StringIO/""><code>StringIO</code></a>, which implements the same <em>Interface</em> as <code>IO</code> and thus a large portion of the <em>Interface</em> of <code>File</code>, but without sharing any common ancestor besides <code>Object</code>.</p>
"
"<p>I know there are lots of libraries that read byte codes that are written in Java.  Does someone know of a byte code library that is implemented in Javascript?</p>
","2988","","<p>There are compilers which can compile Java to JavaScript. As a last resort, you can use one of those compilers to take a JVML bytecode disassembler written in Java and compile it to JavaScript. One example of such a compiler is <a href=""http://Google-Web-Toolkit.GoogleCode.Com/"" rel=""nofollow"">GWT</a>.</p>

<p>Similarly, there are compilers which can compile JVML bytecode to JavaScript. Again, you can take one of the above JVML bytecode disassemblers written in Java, use <em>any</em> Java-to-JVML compiler (<code>javac</code>, <code>ecj</code>, <code>gcj</code>, &hellip;) to compile it to JVML (i.e. <code>.class</code> files), then compile those <code>.class</code> files to JavaScript.</p>
"
"<p>We all know that MetaProgramming is a Concept of Code == Data (or programs that write programs).</p>

<p>But are there any applications that use it &amp; what are the advantages of using it?</p>

<p>This Question can be closed but i didnt see any related questions.</p>
","2988","","<p>IDEs are full with metaprogramming:</p>

<ul>
<li>code completion</li>
<li>code generation</li>
<li>automated refactoring</li>
</ul>

<p>Metaprogramming is often used to work around the limitations of Java:</p>

<ul>
<li>code generation to work around the verbosity (e.g. getter/setter)</li>
<li>code generation to work around the complexity (e.g. generating Swing code from a WYSIWIG editor)</li>
<li>compile time/load time/runtime bytecode rewriting to work around missing features (AOP, Kilim)</li>
<li>generating code based on annotations (Hibernate)</li>
</ul>

<p>Frameworks are another example:</p>

<ul>
<li>generating Models, Views, Controllers, Helpers, Testsuites in Ruby on Rails</li>
<li>generating Generators in Ruby on Rails (metacircular metaprogramming FTW!)</li>
</ul>

<p>In Ruby, you pretty much cannot do <em>anything</em> without metaprogramming. Even simply defining a method is actually running code that generates code.</p>

<p>Even if you just have a simple shell script that sets up your basic project structure, that is metaprogramming.</p>
"
"<p>Is there a better way to get the public ""properties"" of a Ruby object?</p>

<pre><code>def props
  self.public_methods.grep(/.=$/) - [""=="",""===""]
end
</code></pre>
","2988","","<p>Well, there is no such thing as a ""property"" in Ruby. And basically, since you made the word up (or more precisely: you made up its definition as it applies to Ruby), you get to define what it means, but on the flipside it also means you have to implement its semantics yourself.</p>

<p>So, if you define ""property"" to mean ""method which ends with an equals sign but does not exclusively consist of equals signs"", then, yes, your definition is the best possible way. (BTW: your definition of ""property"" includes methods such as <code>&lt;=</code>, <code>&gt;=</code> and <code>!=</code>, which may or may not be what you want.)</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3422223/vs-in-ruby"">=== vs. == in Ruby</a>  </p>
</blockquote>



<p>I've seen it used a few times lately but can't figure out what it does. Can anyone illustrate how it works?</p>
","2988","","<p>Just like with every other method in Ruby (or actually pretty much any object-oriented language),</p>

<pre><code>a === b
</code></pre>

<p>means whatever the author of <code>a</code>'s class wants it to mean.</p>

<p>However, if you don't want to confuse the heck out of your colleagues, the convention is that <code>===</code> is the <em>case subsumption</em> operator. Basically, it's a boolean operator which asks the question ""<em>If I have a drawer labelled <code>a</code> would it make sense to put <code>b</code> in that drawer?</em>""</p>

<p>An alternative formulation is ""<em>If <code>a</code> described a set, would <code>b</code> be a member of that set?</em>""</p>

<p>For example:</p>

<pre><code> (1..5) === 3           # =&gt; true
 (1..5) === 6           # =&gt; false

Integer === 42          # =&gt; true
Integer === 'fourtytwo' # =&gt; false

  /ell/ === 'Hello'     # =&gt; true
  /ell/ === 'Foobar'    # =&gt; false
</code></pre>

<p>The main usage for the <code>===</code> operator is in <code>case</code> expressions, since</p>

<pre><code>case foo
when bar
  baz
when quux
  flurb
else
  blarf
end
</code></pre>

<p>gets translated to something (roughly) like</p>

<pre><code>_temp = foo

if bar === _temp
  baz
elsif quux === _temp
  flurb
else
  blarf
end
</code></pre>

<p>Note that if you want to search for this operator, it is usually called the <em>triple equals operator</em> or <em>threequals operator</em> or <em>case equality operator</em>. I really dislike those names, because this operator has absolutely nothing whatsoever to do with equality.</p>

<p>In particular, one would expect equality to be symmetric: if <code>a</code> is equal to <code>b</code>, then <code>b</code> better be also equal to <code>a</code>. Also, one would expect equality to be transitive: if <code>a == b</code> and <code>b == c</code>, then <code>a == c</code>. While there is no way to actually <em>guarantee</em> that in a single-dispatch language like Ruby, you should at least make an effort to preserve this property (for example, by following the <code>coerce</code> protocol).</p>

<p>However, for <code>===</code> there is no expectation of either symmetry or transitivity. In fact, it is very much by design <em>not</em> symmetric. That's why I don't like calling it anything that even <em>remotely</em> resembles equality. It's also why I think, it should have been called something else like <code>~~~</code> or whatever.</p>
"
"<p>Say I am monkey patching a method in a class, how could I call the overridden method from the overriding method? I.e. Something a bit like <code>super</code></p>

<p>E.g. </p>

<pre><code>class Foo
  def bar()
    ""Hello""
  end
end 

class Foo
  def bar()
    super() + "" World""
  end
end

&gt;&gt; Foo.new.bar == ""Hello World""
</code></pre>
","2988","","<p>You can't call the <em>overwritten</em> method by name or keyword. That's one of the many reasons why monkey patching should be avoided and inheritance be preferred instead, since obviously you <em>can</em> call the <em>overridden</em> method.</p>

<h1>Inheritance</h1>

<p>So, if at all possible, you should prefer something like this:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class ExtendedFoo &lt; Foo
  def bar
    super + ' World'
  end
end

ExtendedFoo.new.bar # =&gt; 'Hello World'
</code></pre>

<p>This works, if you control creation of the <code>Foo</code> objects. Just change every place which creates a <code>Foo</code> to instead create an <code>ExtendedFoo</code>. This works even better if you use the Dependency Injection Design Pattern, the Factory Method Design Pattern, the Factory Design Pattern or something along those lines.</p>

<h1>Delegation</h1>

<p>If you <em>do not</em> control creation of the <code>Foo</code> objects, for example because they are created by a framework that is outside of your control (like Ruby on Rails for example), then you could use the Wrapper Design Pattern:</p>

<pre><code>require 'delegate'

class Foo
  def bar
    'Hello'
  end
end 

class WrappedFoo &lt; DelegateClass(Foo)
  def initialize(wrapped_foo)
    super
  end

  def bar
    super + ' World'
  end
end

foo = Foo.new # this is not actually in your code, it comes from somewhere else

wrapped_foo = WrappedFoo.new(foo) # this is under your control

wrapped_foo.bar # =&gt; 'Hello World'
</code></pre>

<p>Basically, at the boundary of the system, where the <code>Foo</code> object comes into your code, you wrap it into another object, and then use <em>that</em> object instead of the original one everywhere else in your code.</p>

<h1>Mixin Inheritance (broken)</h1>

<p>You might be tempted to do something like this:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

module FooExtensions
  def bar
    super + ' World'
  end
end

class Foo
  include FooExtensions
end
</code></pre>

<p>Unfortunately, that won't work. It's a good idea, because it uses inheritance, which means that you can use <code>super</code>. However, <code>include</code> inserts the mixin <em>above</em> the class in the inheritance hierarchy, which means that <code>FooExtensions#bar</code> will never be called (and if it <em>were</em> called, the <code>super</code> would not actually refer to <code>Foo#bar</code> but rather to <code>Object#bar</code> which doesn't exist), since <code>Foo#bar</code> will always be found first.</p>

<h1><code>alias_method</code> chain</h1>

<p>The problem we are having with our monkey patching is that when we overwrite the method, the method is gone, so we cannot call it anymore. So, let's just make a backup copy!</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class Foo
  alias_method :old_bar, :bar

  def bar
    old_bar + ' World'
  end
end

Foo.new.bar # =&gt; 'Hello World'
Foo.new.old_bar # =&gt; 'Hello'
</code></pre>

<p>The problem with this is that we have now polluted the namespace with a superfluous <code>old_bar</code> method. This method will show up in our documentation, it will show up in code completion in our IDEs, it will show up during reflection. Also, it still can be called, but presumably we monkey patched it, because we didn't like its behavior in the first place, so we might not want other people to call it.</p>

<h1>Method Wrapping</h1>

<p>So, the big question is: how can we hold on to the <code>bar</code> method, without actually keeping around an <em>actual method</em>? The answer lies, as it does so often, in functional programming. We get a hold of the method as an actual <em>object</em>, and we use a closure (i.e. a block) to make sure that we <em>and only we</em> hold on to that object:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class Foo
  old_bar = instance_method(:bar)

  define_method(:bar) do
    old_bar.bind(self).() + ' World'
  end
end

Foo.new.bar # =&gt; 'Hello World'
</code></pre>

<p>Of the methods that use actual monkey patching instead of inheritance or delegation, this is the cleanest: since <code>old_bar</code> is just a local variable, it will go out of scope at the end of the class body, and it is impossible to access it from anywhere, <em>even</em> using reflection! And since <code>define_method</code> takes a block, and blocks close over their surrounding lexical environment (which is <em>why</em> we are using <code>define_method</code> instead of <code>def</code> here), <em>it</em> (and <em>only</em> it) will still have access to <code>old_bar</code>, even after it has gone out of scope.</p>

<p>Short explanation:</p>

<pre><code>old_bar = instance_method(:bar)
</code></pre>

<p>Here we are wrapping the <code>bar</code> method into an <code>UnboundMethod</code> method object and assigning it to the local variable <code>old_bar</code>. This means, we now have a way to hold on to <code>bar</code> even after it has been overwritten.</p>

<pre><code>old_bar.bind(self)
</code></pre>

<p>This is a bit tricky. Basically, in Ruby (and in pretty much all single-dispatch based OO languages), a method is bound to a specific receiver object, called <code>self</code> in Ruby. In other words: a method always knows what object it was called on, it knows what its <code>self</code> is. But, we grabbed the method directly from a class, how does it know what its <code>self</code> is?</p>

<p>Well, it doesn't, which is why we need to <code>bind</code> our <code>UnboundMethod</code> to an object first, which will return a <code>Method</code> object that we can then call. (<code>UnboundMethod</code>s cannot be called, because they don't know what to do without knowing their <code>self</code>.)</p>

<p>And what do we <code>bind</code> it to? We simply <code>bind</code> it to ourselves, that way it will behave <em>exactly</em> like the original <code>bar</code> would have!</p>

<p>Lastly, we need to call the <code>Method</code> that is returned from <code>bind</code>. In Ruby 1.9, there is some nifty new syntax for that (<code>.()</code>), but if you are on 1.8, you can simply use the <code>call</code> method; that's what <code>.()</code> gets translated to anyway.</p>

<p>Here are a couple of other questions, where some of those concepts are explained:</p>

<ul>
<li><a href=""http://StackOverflow.Com/q/4294485/#4294660"">How do I reference a function in Ruby?</a></li>
<li><a href=""http://StackOverflow.Com/q/4331714/#4334217"">Is Ruby's code block same as C#'s lambda expression?</a></li>
</ul>

<hr>

<h1>The Future: Ruby 2.0</h1>

<p>In Ruby 2.0, there is a way to make this easier.</p>

<h2><a href=""http://Ruby-Doc.Org/core-2.0/Module.html#method-i-prepend"" rel=""nofollow""><code>Module#prepend</code></a>: Mixin Inheritance (fixed)</h2>

<p>I like this, because it just uses inheritance, without the need for new keywords, method combinators, new semantics or anything like that.</p>

<p>Remember above in the <em>Mixin Inheritance (broken)</em> section, when we said that the problem is that the mixin gets inserted <em>above</em> the class in the inheritance hierarchy? Well, <a href=""http://Ruby-Doc.Org/core-2.0/Module.html#method-i-prepend"" rel=""nofollow""><code>Module#prepend</code></a> is simply a new method which does the same thing as <code>Module#include</code>, except it mixes in the module directly <em>below</em> the class:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

module FooExtensions
  def bar
    super + ' World'
  end
end

class Foo
  prepend FooExtensions # the only change to above: prepend instead of include
end

Foo.new.bar # =&gt; 'Hello World'
</code></pre>

<p>This code actually works right now, if you get yourself a recent checkout of the trunk branch of the YARV source code and compile it.</p>

<h2>Rebind module method</h2>

<p>Binding of methods were available in earlier Ruby versions however they always had to be from same class or inheritor of the class. Since Ruby 2.0 you can rebind any module method</p>

<pre><code>module Foo
  def bar
    ""Hello #{who}""
  end
end

class Car
  def bar
    'Different hello'
  end

  def who
    'Tomas'
  end
end

car = Car.new
car.bar # =&gt; 'Different hello'
Foo.instance_method(:bar).bind(car).call # =&gt; ""Hello Tomas""
car.bar # =&gt; 'Different hello'
</code></pre>

<hr>

<p>Other competing ideas that did not make it into Ruby were:</p>

<h2>Method Combinators</h2>

<p>One idea is the idea of method combinators from CLOS. This is basically a very lightweight version of a subset of Aspect-Oriented Programming.</p>

<p>Using syntax like</p>

<pre><code>class Foo
  def bar:before
    # will always run before bar, when bar is called
  end

  def bar:after
    # will always run after bar, when bar is called
    # may or may not be able to access and/or change bar's return value
  end
end
</code></pre>

<p>you would be able to ""hook into"" the execution of the <code>bar</code> method.</p>

<p>It is however not quite clear if and how you get access to <code>bar</code>'s return value within <code>bar:after</code>. Maybe we could (ab)use the <code>super</code> keyword?</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class Foo
  def bar:after
    super + ' World'
  end
end
</code></pre>

<h2><code>old</code> keyword</h2>

<p>This idea adds a new keyword similar to <code>super</code>, which allows you to call the <em>overwritten</em> method the same way <code>super</code> lets you call the <em>overridden</em> method:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class Foo
  def bar
    old + ' World'
  end
end

Foo.new.bar # =&gt; 'Hello World'
</code></pre>

<p>The main problem with this is that it is backwards incompatible: if you have method called <code>old</code>, you will no longer be able to call it!</p>

<h2><code>redef</code> keyword</h2>

<p>Similar to above, but instead of adding a new keyword for <em>calling</em> the overwritten method and leaving <code>def</code> alone, we add a new keyword for <em>redefining</em> methods. This is backwards compatible, since the syntax currently is illegal anyway:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class Foo
  redef bar
    old + ' World'
  end
end

Foo.new.bar # =&gt; 'Hello World'
</code></pre>

<p>Instead of adding <em>two</em> new keywords, we could also redefine the meaning of <code>super</code> inside <code>redef</code>:</p>

<pre><code>class Foo
  def bar
    'Hello'
  end
end 

class Foo
  redef bar
    super + ' World'
  end
end

Foo.new.bar # =&gt; 'Hello World'
</code></pre>
"
"<p>I'm thinking of writing a compiler in haskell, and just to gain some knowledge and experience, I will try to implement compilers for existing languages. Could someone give me a list of languages which are suitable for this?</p>

<p>Thanks in advance</p>
","2988","","<p>Scheme is often used for this. There's even a tutorial called <a href=""http://Jonathan.Tang.Name/files/scheme_in_48/tutorial/overview.html"" rel=""nofollow""><em>Write Yourself a Scheme in 48 hours</em></a> for Haskell.</p>
"
"<p>I wanna make a social network with some new ideas . I wonder with which programming languages , social networks , or forums can be written?
thanks .</p>
","2988","","<p>Anything which can be written in one Turing-complete language can also be written in every other Turing-complete language. Since the vast majority of what we think of as ""programming languages"" are Turing-complete, this means that they can be written in pretty much any programming language.</p>
"
"<p>I know that security through obscurity is frowned upon and considered not really secure, but isn't a password security through obscurity?  It's only secure so long as no one finds it.</p>

<p>Is it just a matter of the level of obscurity? (i.e. a good password well salted and hashed is impractical to break)</p>

<p>Note I'm not asking about the process of saving passwords (Assume they are properly hashed and salted).  I'm asking about the whole idea using a password, which is a piece of information, which if known could compromise a person's account.  </p>

<p>Or am I misunderstanding what security through obscurity means?  I guess that's what I assume it to mean, that is there exists some information which if known would compromise a system (in this case, the system being defined as whatever the password is meant to protect)</p>
","2988","","<p>Maybe it's easier to understand what Security-by-Obscurity is about, by looking at something that is in some sense the <em>opposite</em>: <em>Auguste Kerckhoffs's Second Principle</em> (now simply known usually as <em>Kerckhoffs's Principle</em>), formulated in 1883 in two articles on <em>La Cryptographie Militaire</em>:</p>

<blockquote>
  <p>[The cipher] must not be required to be secret, and it must be able to fall into the hands of the enemy without inconvenience.</p>
</blockquote>

<p>Claude Shannon reformulated it as:</p>

<blockquote>
  <p>The enemy knows the system.</p>
</blockquote>

<p>And Eric Raymond as:</p>

<blockquote>
  <p>Any security software design that doesn't assume the enemy possesses the source code is already untrustworthy.</p>
</blockquote>

<p>An alternative formulation of that principle is that</p>

<blockquote>
  <p>The security of the system must depend <em>only</em> of the secrecy of the key, not the secrecy of the system.</p>
</blockquote>

<p>So, we can simply define Security-by-Obscurity to be any system that does not follow that principle, and thus we cleverly out-defined the password :-)</p>

<p>There are two basic reasons why this Principle makes sense:</p>

<ol>
<li>Keys tend to be much smaller than systems, therefore they are easier to protect.</li>
<li>Compromising the secrecy of a key only compromises the secrecy of all communications protected by that key, compromising the secrecy of the system compromises <em>all</em> communications.</li>
</ol>

<p>Note that it doesn't say anywhere that you can't keep your system secret. It just says you shouldn't depend on it. You may use Security-by-Obscurity as an <em>additional</em> line of defense, you just shouldn't assume that it actually works.</p>

<p>In general, however, cryptography is <em>hard</em>, and cryptographic systems are complex, therefore you pretty much <em>need</em> to publish it, to get as many eyeballs on it as possible. There are only very few organizations on this planet that actually have the necessary smart people to design cryptographic systems in secrecy: in the past, when mathematicians were patriots and governments were rich, those were the NSA and the KGB, right now it's IBM and a couple of years from now it's gonna be the Chinese Secret Service and international crime syndicates.</p>
"
"<p>Is there something like WindowBuilder for Scala?</p>
","2988","","<p>I don't know of any WYSIWYG GUI builder for Scala. But you don't need one. In fact, strictly speaking, Scala doesn't <em>have</em> a GUI; it just uses the underlying platform's GUI (or GUIs).</p>

<p>So, the JVM port of Scala uses AWT, Swing or SWT and the CLI port of Scala uses WinForms or WPF. I've heard rumors of ports of Scala to the ECMAScript runtime and the Objective-C runtime, and those would presumable use HTML5 and Quartz/Cocoa, respectively.</p>

<p>This means that you can just use the existing tools, like Expression Blend for WPF or Matisse for Swing.</p>

<p>Note, however, that at least for Swing, there is the brilliant <code>scala.swing</code> library, which contains an embedded DSL for building GUIs programmatically. This is not WYSIWYG, so it's not exactly what you are asking for, but I much prefer it, because it is WYMIWYG (What You <em>Mean</em> Is What You Get), which with all the GUI tools I have used so far, seems to be almost impossible to achieve.</p>
"
"<p>I'v a hash </p>

<p><code>{1=&gt;true, 7=&gt;false, 6=&gt;true, 4=&gt;false}</code> </p>

<p>or an array like </p>

<p><code>[1, true], [7, false], [6, true], [4, false]]</code></p>

<p>or</p>

<p><code>[true, false, true, false]</code>.</p>

<p>How can I find the number of <code>true</code>s in the array?</p>
","2988","","<p>In order to count the elements, you obviously have to iterate over the collection. Since iterating over a <code>Hash</code> yields two-element <code>Array</code>s, the first two are actually exactly the same:</p>

<pre><code>{ 1 =&gt; true, 7 =&gt; false, 6 =&gt; true, 4 =&gt; false }.count(&amp;:last)
[[1, true], [7, false], [6, true], [4, false]].count(&amp;:last)
</code></pre>

<p>For the simple <code>Array</code> case, you could do something like this:</p>

<pre><code>[true, false, true, false].count(true)
</code></pre>

<p>This <code>Array</code> is of course also the same as the <code>Hash#values</code> from your <code>Hash</code> above, so you could use the same method on that:</p>

<pre><code>{ 1 =&gt; true, 7 =&gt; false, 6 =&gt; true, 4 =&gt; false }.values.count(true)
</code></pre>

<p>If you don't know which one of three you will get, you could use something like this:</p>

<pre><code>{ 1 =&gt; true, 7 =&gt; false, 6 =&gt; true, 4 =&gt; false }.flatten.count(true)
[[1, true], [7, false], [6, true], [4, false]].flatten.count(true)
[true, false, true, false].flatten.count(true)
</code></pre>
"
"<p>I want to create a static ruby class with a library of function. I am on Vista with ruby 1.9.2</p>

<p>My class is this one :</p>

<pre><code>class TestClass

  def say_hello
    puts ""say hello""
  end
end
</code></pre>

<p>in a TestClass.rb file (I assume I am correct as all ruby tutorials on classes are a complete mess putting everything in a single magic something (file?) as if IRB was the begining and the end of all thing).</p>

<p>My ruby <code>main()</code> (yes I come from Java) or program entry or wathever it is called in ruby is :</p>

<pre><code>require 'TestClass.rb'

puts ""start""
say_hello
</code></pre>

<p>But it fails with :</p>

<pre><code>C:\ruby_path_with_all_my_classes&gt;ruby classuser.rb
&lt;internal:lib/rubygems/custom_require&gt;:29:in `require': no such file to load --
 TestClass.rb (LoadError)
    from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
    from classuser.rb:1:in `&lt;main&gt;'
</code></pre>

<p>How does it work? Is it possible to call other files in Ruby or are you trapped in only one file containing all your classes?</p>
","2988","","<p>In 99% of all cases when a computer tells you that it couldn't find a thing, it is because the thing isn't there. So, the first thing you need to check is whether there actually <em>is</em> a file named <code>TestClass.rb</code> somewhere on your filesystem.</p>

<p>In 99% of the <em>rest</em> of the cases, the computer is looking in the wrong place. (Well, actually, the computer is usually looking in the right place, but the thing it is looking for is in the wrong place). <code>require</code> loads a file from the <code>$LOAD_PATH</code>, so you have to make sure that the directory that the file <code>TestClass.rb</code> is in actually <em>is</em> on the <code>$LOAD_PATH</code>.</p>

<p>Alternatively, if you do not want to <code>require</code> a file from the <code>$LOAD_PATH</code> but rather relative to the position of the file that is <em>doing</em> the <code>require</code>ing, then you need to use <code>require_relative</code>.</p>

<p>Note, however, that your code won't work anyway, since <code>say_hello</code> is in instance method of instances of the <code>TestClass</code> class, but you are calling it on the <code>main</code> object, which is an instance of <code>Object</code>, not <code>TestClass</code>.</p>

<p>Note also that standard naming conventions of Ruby files are <code>snake_case</code>, in particular, the <code>snake_case</code> version of the primary class/module of the file. So, in your case, the file should be named <code>test_class.rb</code>. Also, <code>require</code> and <code>require_relative</code> figure out the correct file extension for themselves, so you should leave off the <code>.rb</code>. And thirdly, standard Ruby coding style is two spaces for indentation, not four.</p>

<p>None of these will lead to your code not working, of course, since it is purely stylistic, but it <em>may</em> lead to people being unwilling to answer your questions, since it shows that you don't respect their community enough to learn even the most basic rules.</p>
"
"<p>I need to use two gems in my project that both claim the PDF namespace:  pdf-reader and htmldoc.</p>

<p>Is there any way to get them to play nice together?  The only way I can think of is to rewrite my own version of htmldoc to give it a different namespace.</p>
","2988","","<p>Basically, there's nothing you can do. It is good practice in Ruby, to use <em>distinctive</em> names in the top-level namespace <em>precisely</em> for this reason, and you just happened to stumble upon two libraries that violate that practice.</p>

<p>One thing you <em>could</em> do is to use <code>Kernel#load</code> instead of <code>Kernel#require</code>. <code>Kernel#load</code> takes an optional boolean argument, which will tell it to evaluate the file within an anonymous module. Note, however, that this is in no way safe: it is perfectly possible to <em>explicitly</em> put stuff in the top-level namespace (using something like <code>module ::PDF</code>) and thus break out of the anonymous module.</p>

<p>Note also that the API is really crappy: <code>load</code> simply returns <code>true</code> or <code>false</code>, just like <code>require</code> does. (Actually, since <code>load</code> <em>always</em> loads, it <em>always</em> returns <code>true</code>.) There is no way to actually <em>get</em> at the anonymous module. You basically have to grab it out of the <code>ObjectSpace</code> by hand. Oh, and of course, since nothing actually references the anonymous module, it will be garbage-collected, so not only do you have to rummage around in the bowels of <code>ObjectSpace</code> to <em>find</em> the module, you also have to <em>race</em> the garbage collector.</p>

<p>Sometimes, I wish Ruby had a proper module system like Newspeak, Standard ML or Racket.</p>
"
"<p>I am new to ruby, can any one help me in explaining ""how to change <a href=""http://www.myexample.com:3000"" rel=""nofollow"">http://www.myexample.com:3000</a> to <a href=""http://wwww.myexample.com"" rel=""nofollow"">http://wwww.myexample.com</a> in ruby?""</p>
","2988","","<pre><code>require 'uri'

uri = URI.parse('http://www.myexample.com:3000')

uri.port = nil
uri.host.sub!('www', 'wwww')

uri.to_s # =&gt; http://wwww.myexample.com
</code></pre>
"
"<p>Just curious: sure, we all know that the general case of type inference for generics is undecidable.  And so C# won't do any kind of sub-typing at all: if <strong>Foo&lt;T&gt;</strong> is  generic, <strong>Foo&lt;int&gt;</strong> isn't a subtype of <strong>Foo&lt;T&gt;</strong>, or <strong>Foo&lt;Object&gt;</strong> or of anything else you might cook up.  And sure, we all hack around this with ugly interface or abstract class definitions.</p>

<p>But... if you can't beat the general problem, why not just limit the solution to cases that are easy.  For example, in my list above, it is OBVIOUS that <strong>Foo&lt;int&gt;</strong> is a subtype of <strong>Foo&lt;T&gt;</strong> and it would be trivial to check.  Same for checking against <strong>Foo&lt;Object&gt;</strong>.</p>

<p>So is there some other deep horror that would creep forth from the abyss if they were to just say, aw shucks, we'll do what we can?  Or is this just some sort of religious purity on the part of the language guys at Microsoft?</p>

<hr>

<h1>Update:</h1>

<p>This is a very old thread.  These days, C# has var, which solves half of what I complained about, and then using the Linq style of anonymous delegates, has a great notation for not needing to type in the same stuff twice.  So every aspect of what I was objecting to has been resolved by more recent changes to C# (or perhaps it simply took me a while to learn about things that were just being introduced around when I posted the thread...)  I use these new features now in the Isis2 system for reliable cloud computing (isis2.codeplex.com) and I think the library has a very clean look and feel as a result.  Check it out and let me know what you think). -- Ken Birman (July 2014)</p>
","2988","","<blockquote>
  <p>it is OBVIOUS that <code>Foo&lt;int&gt;</code> is a subtype of <code>Foo&lt;T&gt;</code></p>
</blockquote>

<p>To you maybe, but not to me.</p>

<p>To me, the huge hole this rips into the type system is simply not acceptable. If you want to throw type-safety out the window like that, I'd much rather use a dynamically typed language that was actually <em>designed</em> for this stuff.</p>

<p>The fact that arrays are covariant, even though this is known to break type-safety, is bad enough, now you want to break it for <em>everything</em>?</p>

<p>This goes to the very heart of what a type system is about. All a type system does is <em>reject programs</em>. And because of Rice's Theorem, those rejected program include perfectly well-typed, type-safe programs.</p>

<p>That is a <em>huge</em> cost. Taking away expressivity, preventing me from writing useful programs. In order to justify that cost, the type system better pay be back <em>big time</em>. It has basically two ways of doing that: giving back expressivity at the type-level it took away at the program-level and type-safety.</p>

<p>The former is out, simply because C#'s type system isn't powerful enough to let me express anything even remotely interesting. This leaves only the latter, and it is already on pretty shaky ground because of <code>null</code>, covariant arrays, unrestricted side-effects, <code>unsafe</code> and so on. By making generic types automatically covariant, you more or less completely take away the last shred of type-safety that is left.</p>

<p>There are only <em>very few</em> cases where <code>S &lt;: T ⇒ G&lt;S&gt; &lt;: G&lt;T&gt;</code> is actually type-safe. (<code>IEnumerable</code> is one such example.) And there are probably equally many cases where only <code>S &lt;: T ⇒ G&lt;T&gt; &lt;: G&lt;S&gt;</code> is type-safe. (<code>IObservable</code>, <code>IComparer</code>, <code>IComparable</code>, <code>IEqualityComparer</code>.) Generally, <em>neither</em> <code>G&lt;S&gt; &lt;: G&lt;T&gt;</code> nor <code>G&lt;T&gt; &lt;: G&lt;S&gt;</code> are type-safe.</p>
"
"<p>Normally, JIT Compiler works by reads the byte code, translate it into machine code, and execute it. This is what I understand, but in theory, is it possible to make the JIT Compiler parses the whole program first, then execute the program later as machine code? I do not know how JIT Compiler works technically and exactly, so I don't know any feasibility in this case. But theoretically, is it possible? Or am I doing it wrong?</p>
","2988","","<p>No, this is not possible, for the simple reason that ""JIT"" means ""Just-In-Time"" and if you don't do it ""Just-In-Time"", then it's not a ""Just-In-Time"" compiler.</p>

<p>That's like asking whether it would be possible to buy a red car, but in blue.</p>

<p>What you are asking for, is an Ahead-Of-Time compiler, which is usually just called a compiler.</p>
"
"<p>Is <code>static</code> in Java like <code>self</code> in Ruby?</p>
","2988","","<p>No. Java's <code>static</code> and Ruby's <code>self</code> have absolutely nothing whatsoever to do with each other.</p>

<p>The Java equivalent to Ruby's <code>self</code> is <code>this</code>. The Ruby equivalent to Java's <code>static</code> does not exist.</p>

<p>Java's <code>static</code> means that the method is dispatched statically instead of dynamically. In Ruby, methods are <em>always</em> dispatched dynamically. <code>static</code> means that the method is not called on any object. In Ruby, methods are <em>always</em> called on objects. Since <code>static</code> methods in Java aren't associated with any object, they don't have access to any object state. In Ruby, methods <em>always</em> have access to the state of their associated instance.</p>

<p>In short, <code>static</code> methods aren't really methods <em>at all</em>, they are procedures. Ruby doesn't have procedures, it only has (instance) methods.</p>

<p>There <em>is</em> no construct in Ruby that would even be remotely equivalent to Java's <code>static</code>.</p>
"
"<p>After watching <a href=""http://www.infoq.com/interviews/hickey-clojure-protocols"" rel=""nofollow"">the interview with Rich Hickey</a> on <a href=""http://clojure.org/protocols"" rel=""nofollow"">Protocols</a> in Clojure 1.2, and knowing very little about Clojure, I have some questions on Clojure Protocols: </p>

<ul>
<li>Are they intended to do the same thing as <a href=""http://codemonkeyism.com/scala-goodness-structural-typing/"" rel=""nofollow"">Structural Types</a> in Scala? What benefits do Protocols have over Structural Types (performance, flexibility, code clarity, etc.)? Are they implemented through reflections?</li>
<li>Questions on interoperability with Scala: Can Protocols be used instead of Structural Types in Scala? Can they be extended (if 'extension' term can be applied to Protocols) in Scala?</li>
</ul>
","2988","","<p>The purpose of Protocols in Clojure is to solve the Expression Problem in an efficient manner.</p>

<p>[See: <a href=""http://StackOverflow.Com/q/4509782/#4513556""><em>Simple explanation of clojure protocols</em>.</a>]</p>

<p>Scala's solution to the Expression Problem are Implicits. So, semantically, <em>that</em> is the closest equivalent to Clojure Protocols in Scala. (In Haskell, it would be Typeclasses or maybe Type Families.)</p>
"
"<p>I'm trying to understand clojure protocols and what problem they are supposed to solve. Does anyone have a clear explanation of the whats and whys of clojure protocols?</p>
","2988","","<p>The purpose of Protocols in Clojure is to solve the Expression Problem in an efficient manner.</p>

<p>So, what's the Expression Problem? It refers to the basic problem of extensibility: our programs manipulate data types using operations. As our programs evolve, we need to extend them with new data types and new operations. And particularly, we want to be able to add new operations which work with the existing data types, and we want to add new data types which work with the existing operations. <em>And</em> we want this to be true <em>extension</em>, i.e. we don't want to modify the <em>existing</em> program, we want to respect the existing abstractions, we want our extensions to be separate modules, in separate namespaces, separately compiled, separately deployed, separately type checked. We want them to be type-safe. [Note: not all of these make sense in all languages. But, for example, the goal to have them type-safe makes sense even in a language like Clojure. Just because we can't statically <em>check</em> type-safety doesn't mean that we want our code to randomly break, right?]</p>

<p>The Expression Problem is, how do you actually provide such extensibility in a language?</p>

<p>It turns out that for typical naive implementations of procedural and/or functional programming, it is very easy to add new operations (procedures, functions), but very hard to add new data types, since basically the operations work with the data types using some sort of case discrimination (<code>switch</code>, <code>case</code>, pattern matching) and you need to add new cases to them, i.e. modify existing code.</p>

<p>And for typical naive OO, you have the exact opposite problem: it is easy to add new data types which work with the existing operations (either by inheriting or overriding them), but it is hard to add new operations, since that basically means modifying existing classes/objects.</p>

<p>Several languages have several constructs for solving the Expression Problem: Haskell has typeclasses, Scala has implicit arguments, Racket has Units, Go has Interfaces, CLOS and Clojure have Multimethods. There are also ""solutions"" which <em>attempt</em> to solve it, but fail in one way or another: Interfaces and Extension Methods in C# and Java, Monkeypatching in Ruby, Python, ECMAScript.</p>

<p>Note that Clojure actually already <em>has</em> a mechanism for solving the Expression Problem: Multimethods. The problem that OO has with the EP is that they bundle operations and types together. With Multimethods they are separate. The problem that FP has is that they bundle the operation and the case discrimination together. Again, with Multimethods they are separate.</p>

<p>So, let's compare Protocols with Multimethods, since both do the same thing. Or, to put it another way: Why Protocols if we already <em>have</em> Multimethods?</p>

<p>The main thing Protocols offer over Multimethods is Grouping: you can group multiple functions together and say ""these 3 functions <em>together</em> form Protocol <code>Foo</code>"". You cannot do that with Multimethods, they always stand on their own. For example, you could declare that a <code>Stack</code> Protocol consists of <em>both</em> a <code>push</code> and a <code>pop</code> function <em>together</em>.</p>

<p>So, why not just add the capability to group Multimethods together? There's a purely pragmatic reason, and it is why used the word ""efficient"" in my introductory sentence: performance.</p>

<p>Clojure is a hosted language. I.e. it is specifically designed to be run on top of <em>another</em> language's platform. And it turns out that pretty much any platform that you would like Clojure to run on (JVM, CLI, ECMAScript, Objective-C) has specialized high-performance support for dispatching <em>only</em> on the type of <em>only</em> the first argument. Clojure Multimethods OTOH dispatch on <em>arbitrary properties</em> of <em>all arguments</em>.</p>

<p>So, Protocols restrict you to dispatch <em>only</em> on the <em>first</em> argument and <em>only</em> on its type (or as a special case on <code>nil</code>).</p>

<p>This is not a limitation on the idea of Protocols per se, it is a pragmatic choice to get access to the performance optimizations of the underlying platform. In particular, it means that Protocols have a trivial mapping to JVM/CLI Interfaces, which makes them very fast. Fast enough, in fact, to be able to rewrite those parts of Clojure which are currently written in Java or C# in Clojure itself.</p>

<p>Clojure has actually already had Protocols since version 1.0: <code>Seq</code> is a Protocol, for example. But until 1.2, you couldn't write Protocols in Clojure, you had to write them in the host language.</p>
"
"<p>I have defined simple grammar for parsing string and number using Treetop as below.</p>

<pre><code>grammar Simple
    rule value
        number / string
    end 

    rule string
        word space string
        /
        word
    end

    rule word
        [0-9a-zA-Z]+
    end

    rule number
        [1-9] [0-9]*
    end

    rule space
        ' '+
    end
end
</code></pre>

<p>Ruby:</p>

<pre><code>parser = SimpleParser.new
parser.parse('123abc wer') # =&gt; nil
</code></pre>

<p>I expect the parser to return <strong>string node</strong> but look like the parser <strong>could not understand</strong> the input. Any idea would be appreciated.</p>
","2988","","<p>In Treetop (and PEGs in general, actually) the choice operator is <em>ordered</em>, unlike most other parsing formalisms.</p>

<p>So, in</p>

<pre><code>rule value
  number / string
end
</code></pre>

<p>you are telling Treetop that you <em>prefer</em> <code>number</code> over <code>string</code>.</p>

<p>Your input starts with <code>1</code>, which matches <em>both</em> <code>number</code> and <code>string</code> (through <code>word</code>), but you told Treetop to prefer the <code>number</code> interpretation, so it parses it as a <code>number</code>. When it comes to the <code>a</code> in the input, it has no more rules to apply, and thus it returns nothing (<code>nil</code>), because in Treetop it is an error to not consume the entire input stream.</p>

<p>If you simply reverse the order of the choice, the entire input will interpreted as a <code>string</code> instead of a <code>number</code>:</p>

<pre><code>SyntaxNode+String0 offset=0, ""123abc wer"" (word,space,string):
  SyntaxNode offset=0, ""123abc"":
    SyntaxNode offset=0, ""1""
    SyntaxNode offset=1, ""2""
    SyntaxNode offset=2, ""3""
    SyntaxNode offset=3, ""a""
    SyntaxNode offset=4, ""b""
    SyntaxNode offset=5, ""c""
  SyntaxNode offset=6, "" "":
    SyntaxNode offset=6, "" ""
  SyntaxNode offset=7, ""wer"":
    SyntaxNode offset=7, ""w""
    SyntaxNode offset=8, ""e""
    SyntaxNode offset=9, ""r""
</code></pre>

<p>Or, you could keep the order as it is, but allow the <code>value</code> rule to be matched multiple times. Either insert a new top-level rule like this:</p>

<pre><code>rule values
  value+
end
</code></pre>

<p>or modify the <code>value</code> rule like this:</p>

<pre><code>rule value
  (number / string)+
end
</code></pre>

<p>Which will give you an AST roughly like this:</p>

<pre><code>SyntaxNode offset=0, ""123abc wer"":
  SyntaxNode+Number0 offset=0, ""123"":
    SyntaxNode offset=0, ""1""
    SyntaxNode offset=1, ""23"":
      SyntaxNode offset=1, ""2""
      SyntaxNode offset=2, ""3""
      SyntaxNode+String0 offset=3, ""abc wer"" (word,space,string):
        SyntaxNode offset=3, ""abc"":
          SyntaxNode offset=3, ""a""
          SyntaxNode offset=4, ""b""
      SyntaxNode offset=5, ""c""
    SyntaxNode offset=6, "" "":
      SyntaxNode offset=6, "" ""
    SyntaxNode offset=7, ""wer"":
      SyntaxNode offset=7, ""w""
      SyntaxNode offset=8, ""e""
      SyntaxNode offset=9, ""r""
</code></pre>
"
"<p>I'm just exploring ruby and was wondering about the theoretical possibility of adding a method to the class of an object.  For example, define a method that takes in a parameter and would add a method to the class of that parameter (not just to the parameter object itself).  Something like this example:</p>

<pre><code>class SomeClass
end

class AnotherClass
end

alpha = SomeClass.new
beta = AnotherClass.new

def AddHelloMethodTo param

 # This is where I'm trying to
 # add a method to the class of the parameter
 def param.class.Hello 
  ""Hello""
 end

end

AddHelloMethodTo alpha
AddHelloMethodTo beta

gamma = AnotherClass.new

alpha.Hello
beta.Hello
gamma.Hello
</code></pre>

<p>(Excuse me if I have syntax errors / typos I'm REALLY new to this!)<br>
Notice how I don't call the <code>AddHelloMethodTo</code> on <code>gamma</code> but I expect Hello to be defined because I added it to the class.<br>
Is this possible?</p>
","2988","","<p>This is the closest to what you had. I took the liberty of changing it to standard Ruby coding style, but notice that the only <em>real</em> change is the first line of <code>add_hello_method_to_class_of</code>:</p>

<pre><code>class SomeClass; end
class AnotherClass; end

alpha = SomeClass.new
beta = AnotherClass.new

def add_hello_method_to_class_of(obj)
  obj.class.send(:define_method, :hello) do
    'Hello'
  end
end

add_hello_method_to_class_of(alpha)
add_hello_method_to_class_of(beta)

gamma = AnotherClass.new

alpha.hello
beta.hello
gamma.hello
</code></pre>

<p>Originally, you had</p>

<pre><code>def obj.class.hello
</code></pre>

<p>This will work, but it doesn't do what you think it does. This will add a <em>singleton method</em> to the <em>class object</em> itself, but it appears you assume that it will add an <em>instance method</em>. If you want to add an <em>instance method</em>, you need to use <code>Module#define_method</code> like this:</p>

<pre><code>obj.class.define_method(:hello)
</code></pre>

<p>Except that <code>Module#define_method</code> is <code>private</code>, so you need to use reflection to circumvent that access restriction:</p>

<pre><code>obj.class.send(:define_method, :hello)
</code></pre>

<p>Note that I also changed the name of the method from <code>add_hello_method_to</code> to <code>add_hello_method_to_class_of</code>, since, well it <em>doesn't</em> add the <code>hello</code> method to its argument, it adds it to its argument's <em>class</em>.</p>

<p>However, if you do monkey patching like this, it is generally considered good practice to use mixins instead, since then, the mixin shows up in the object's inheritance chain, which leaves anybody debugging that code at least a fighting chance to figure out where the heck that mysterious <code>hello</code> method is coming from:</p>

<pre><code># file: hello_extension.rb
module HelloExtension
  def hello
    'Hello'
  end
end

def add_hello_method_to_class_of(obj)
  obj.class.send(:include, HelloExtension)
end

# some other file
require 'hello_extension'

class SomeClass; end
class AnotherClass; end

alpha = SomeClass.new
beta = AnotherClass.new

add_hello_method_to_class_of(alpha)
add_hello_method_to_class_of(beta)

gamma = AnotherClass.new

alpha.hello
beta.hello
gamma.hello
</code></pre>

<p>Now, you can easily debug this code:</p>

<pre><code>gamma.class.ancestors
# =&gt; [AnotherClass, HelloExtension, Object, Kernel, BasicObject]
</code></pre>

<p>If someone wonders where the <code>hello</code> method is coming from, then it doesn't take much to figure out that a mixin called <code>HelloExtension</code> probably has something to do with it. And following standard Ruby naming conventions they even know to look in a file named <code>hello_extension.rb</code></p>

<p>You can even do this:</p>

<pre><code>gamma.method(:hello).source_location
# =&gt; ['hello_extension.rb', 3]
</code></pre>
"
"<p>I need an easy way to convert a <code>List&lt;int&gt;</code> to a <code>string</code> array.</p>

<p>I have:</p>

<pre><code>var the_list = new List&lt;int&gt;();
the_list.Add(1);
the_list.Add(2);
the_list.Add(3);

string[] the_array = new string[the_list.Count];
for(var i = 0 ; i &lt; the_array.Count; ++i)
    the_array[i] = the_list[i].ToString();
</code></pre>

<p>...which looks to be very ugly to me.</p>

<p>Is there an easier way?</p>

<hr>

<p><strong>Note:</strong> I'm looking for an <em>easier</em> way - not necessarily a faster way.</p>
","2988","","<p>Sorry, I don't have .NET installed on this machine, so totally untested:</p>

<pre><code>var theList = new List&lt;int&gt;() { 1, 2, 3 };

var theArray = theList.Select(e =&gt; e.ToString()).ToArray();       // Lambda Form
var theArray = (from e in theList select e.ToString()).ToArray(); // Query Form
</code></pre>
"
"<p>I'm having a <code>List&lt;List&lt;String&gt;&gt;</code>, and which contains</p>

<pre><code>{  {""A"" , ""B"" }, 
   {""C"" , ""D"" }
}
</code></pre>

<p>I need to union all the innerlist into another list</p>

<p>So the resulting <code>List&lt;String&gt;</code> will contain</p>

<pre><code>     {""A"",""B"",""C"",""D""}
</code></pre>

<p>Now im using <code>for loop</code> to do this </p>

<p>Is there any way to do this Using <code>LINQ</code> or <code>Lambda Expression</code>.</p>

<p>Please help me to do this.</p>

<p>Thanks in advance.</p>
","2988","","<p>Just for kicks:</p>

<pre><code>(from list in theList from e in list select e).Distinct().ToList()
</code></pre>

<p>This is of course the same solution as @Alexander Taran's, just with query syntax instead of lambda syntax. (Or at least it should be&nbsp;&ndash; I don't have my LINQPad handy.)</p>
"
"<p>Why doesn't this work?</p>

<pre><code>module XT
  puts Fixnum.class  # So we're sure to re-open the Fixnum class
  class Fixnum
    def hi
      puts ""HI from module XT""
    end
  end
end
</code></pre>

<p>After requiring and loading the module, the <code>hi</code> method is still not added to Fixnum. It works if I remove the module wrapper.</p>
","2988","","<p>As @Jeremy wrote, constants are namespaced by modules, and defining a class is really just assigning a class object to a constant. Basically, </p>

<pre><code>class Fixnum; end
</code></pre>

<p>is (roughly) equivalent to</p>

<pre><code>Fixnum = Class.new
</code></pre>

<p>(except for the fact that if <code>Fixnum</code> already exists, the former will reopen it, while the latter will overwrite it).</p>

<p>This means that if you do that inside of a module (or class, since class IS-A module), the constant <code>Fixnum</code> will be namespaced inside that module.</p>

<p>If you want to explicitly access a top-level constant, you can tell Ruby to start its lookup at the top-level in a very similar vein to how you tell Unix to start filesystem lookup at the top-level:</p>

<pre><code>module XT
  class ::Fixnum; end
end
</code></pre>
"
"<p>Are there any active projects to build an open source replacement for the Java and the JVM? </p>

<p>In my mind to replace the JVM a new project would at least need to run on something like a virtual machine and be cross platform.</p>

<p>I know some people are not happy with the fact that Oracle owns Java now but I'm wondering if the displeasure is enough to sustain a full Java/JVM replacement project.</p>
","2988","","<p>It's not quite clear to me what is being asked here. An ""open source replacement for Java and the JVM"" doesn't make much sense, since the term ""open source"" usually refers to software, but Java and the JVM aren't software, they are specifications.</p>

<p>If you are asking about open source implementations of the Java and JVM specifications, then there are already plenty of those. There's no need to build one. There are sone ugly license restrictions that may make it illegal to call those implementations ""Java"" or ""JVM"", though.</p>

<p>If you are asking about open standards that provide an alternative to Java and the JVM, then one such set of standards is ISO/IEC 23270 aka ECMA-334 aka C# and ISO/IEC 23270, 23271, TR 23272, TR 25438 aka ECMA-335 aka CLI. Together also commonly referred to as .NET.</p>

<p>They have similar scope and goals as Java and the JVM, with the main difference being that they are published as open standards by two renowned independent international standards bodies, whereas the Java and JVM specifications are proprietary standards published by a bespoke standards body owned by a single company.</p>

<p>Like Java and the JVM, there are open source implementations (well, <em>one</em> open source implementation).</p>
"
"<p>What are the differences between continuation passing style (cps) and monads.</p>
","2988","","<p>There is no relation, thus the question makes about as much sense as asking about the difference between the color blue and Pluto.</p>
"
"<p>I often come across a pattern similar to this:</p>

<pre><code>class Person {
    public string firstName, lastName;
    public Person(string firstName, string lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
}
</code></pre>

<p>This feels overly redundant (I imagine typing ""firstName"" once, instead of thrice could be enough…), but I can't think of a proper alternative. Any ideas? Maybe I just don't know about a certain design pattern I should be using here?</p>

<p>Edit - I think I need to elaborate a little. I'm not asking how to make the example code ""better"", but rather, ""shorter"". In its current state, all member names appear 4 times (declaration, initialization, constructor arguments), and it feels rather redundant. So I'm wondering if there is a pattern (or semantic sugar) to get (roughly) the same behavior, but with less bloat.<br>
I apologize for being unclear initially.</p>

<p>Edit - Dave's C# 3.0 initialization example is pretty nice, but I'm still hoping for a more general answer. :)</p>

<p>Edit - I realize now that certain languages allow for less verbose implementations; Java and C# might not.</p>
","2988","","<p>The general pattern probably is ""use a good programming language"". For example, this single line of Scala is roughly equivalent to what you wrote above:</p>

<pre><code>class Person(var firstName: String, var lastName: String)
</code></pre>

<p>You can run a Java decompiler over the generated <code>Person.class</code> file to see what you would have to write in Java to get the same functionality:</p>

<pre><code>public class Person {
    private String firstName, lastName;

    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String paramString) {
        this.firstName = paramString;
    }

    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String paramString) {
        this.lastName = paramString;
    }

    public Person(String firstName, String lastName) {
        setFirstName(firstName);
        setLastName(lastName);
    }
}
</code></pre>

<p>The method names will be slightly different (instead of <code>getFirstName</code> and <code>setFirstName</code> Scala uses just <code>firstName</code> and <code>firstName_=</code> the latter of which in turn gets encoded as <code>firstName_$eq</code>, since it is illegal in Java), but the intent is the same.</p>

<p>If you can make your class a <code>case class</code>, you will also get automatically generated proper implementations for <code>equals</code> and <code>hashCode</code> as well.</p>

<p>In Ruby, you would write:</p>

<pre><code>Person = Struct.new(:first_name, :last:name)
</code></pre>

<p>and again get something fairly similar to what you would get in your Java example. <code>Struct.new</code> will actually synthesize a proper class that looks roughly like this:</p>

<pre><code>class Person
  attr_accessor :first_name, :last_name

  def initialize(first_name, last_name)
    self.first_name, self.last_name = first_name, last_name
  end
end
</code></pre>
"
"<p>This question may be simple for experts  but for a beginner like me it is important. My question is are there any problems involving tree traversals that can be solved by BFS , DFS and not in-order, pre-order etc. In other words, whenever i see a tree problem, should I ONLY think of the 3 tree traversal methods, or also consider BFS,DFS</p>
","2988","","<p>An obvious example where DFS doesn't work and you <em>have</em> to use BFS is an infinitely (or at least arbitrarily) high tree.</p>
"
"<p>In Ruby <code>Integer === 5</code> returns <code>true</code>. Similarly <code>String === ""karthik""</code> returns <code>true</code>.<br>
However, <code>5 === Integer</code> returns <code>false</code>. And <code>""karthik"" === String</code>.<br>
Why is the operator not commutative?</p>
","2988","","<p>The simple answer is: because it doesn't make sense. The relationship the operator describes is not commutative, why should the operator be?</p>

<p>Just look at your own examples: <code>5</code> is an <code>Integer</code>. But is <code>Integer</code> a <code>5</code>? What does that even <em>mean</em>?</p>

<p><code>===</code> is the <em>case subsumption operator</em>, and subsumption doesn't commute.</p>

<p>The fact that the case subsumption operator uses equals signs, and that it is usually called the <em>triple equals</em>, <code>threequals</code> or <code>case equality</code> operator is <em>terribly</em> unfortunate since it not only has <em>absolutely nothing</em> to do with equality, but it also does not conform to many of the laws that equality conforms to, such as transitivity and as you mentioned commutativity.</p>

<p>For more of my ranting about <code>===</code> see</p>

<ul>
<li><a href=""http://StackOverflow.Com/q/4467538/#4467823"">What does the <code>===</code> operator do in Ruby?</a></li>
<li><a href=""http://StackOverflow.Com/q/3422223/#3422349""><code>===</code> vs. <code>==</code> in Ruby</a></li>
<li><a href=""http://StackOverflow.Com/q/2030417/#2030586"">How does <code>Integer === 3</code> work?</a></li>
</ul>
"
"<p>I am curious about such thing... Is there a programming language that would have:</p>

<ul>
<li>syntax such as Java and/or C++</li>
<li>templates/generics support</li>
<li>memory management (no garbage collection)</li>
<li>""clean syntax"" (no mess like perl or c/c++)</li>
<li>""normal"" OOP (polyphormism, interfaces, abstract classes, overloading and etc.)</li>
<li>(preferably) compiles to machine code</li>
<li>namespace support</li>
<li>exception support</li>
<li>no source preprocessor (as is in c\c++)</li>
<li>statically typed</li>
</ul>
","2988","","<blockquote>
  <ul>
  <li>syntax such as Java and/or <strong>C++</strong></li>
  <li>""clean syntax"" (no mess like perl or c/<strong>c++</strong>)</li>
  </ul>
</blockquote>

<p>So, basically you want syntax such as C++, but you don't want syntax such as C++. It should be obvious that such a language cannot possibly exist, since the intersection of the set of languages that have syntax such as C++ and the set of languages that do not have syntax such as C++ must necessarily be the empty set.</p>

<p>There also some other requirements that don't make sense, like this one:</p>

<blockquote>
  <ul>
  <li>(preferably) compiles to machine code</li>
  </ul>
</blockquote>

<p>What the compiler produces as its output is a trait of the compiler, it has nothing to do with the language. <em>Every</em> language can be compiled to <em>every other</em> language, provided the target language has at least the same computational power as the source language. (Which typically means that the target language must be Turing-complete, since most source language are Turing-complete.)</p>
"
"<p>The C# spec states that an argument type cannot be both covariant and contravariant at the same time.</p>

<p>This is apparent when creating a covariant or contravariant interface you decorate your type parameters with ""out"" or ""in"" respectively.  There is not option that allows both at the same time (""outin"").</p>

<p>Is this limitation simply a language specific constraint or are there deeper, more fundamental reasons based in category theory that would make you not want your type to be both covariant and contravariant?</p>

<p><strong>Edit:</strong></p>

<p>My understanding was that arrays were actually both covariant and contravariant.</p>

<pre><code>public class Pet{}
public class Cat : Pet{}
public class Siamese : Cat{}
Cat[] cats = new Cat[10];
Pet[] pets = new Pet[10];
Siamese[] siameseCats = new Siamese[10];

//Cat array is covariant
pets = cats; 
//Cat array is also contravariant since it accepts conversions from wider types
cats = siameseCats; 
</code></pre>
","2988","","<blockquote>
  <p>Is this limitation simply a language specific constraint or are there deeper, more fundamental reasons based in category theory that would make you not want your type to be both covariant and contravariant?</p>
</blockquote>

<p>No, there is a much simpler reason based in basic logic (or just common sense, whichever you prefer): a statement cannot be both true and not true at the same time.</p>

<p>Covariance means <code>S &lt;: T ⇒ G&lt;S&gt; &lt;: G&lt;T&gt;</code> and contravariance means <code>S &lt;: T ⇒ G&lt;T&gt; &lt;: G&lt;S&gt;</code>. It should be pretty obvious that these can never be true at the same time.</p>
"
"<p>Is it a thing that let you understand ruby core? <a href=""http://rubini.us/"" rel=""nofollow"">http://rubini.us/</a></p>
","2988","","<p>Rubinius is an implementation of the Ruby programming language, just like MRI, YARV, JRuby, IronRuby, MacRuby, MagLev, SmallRuby, tinyrb, RubyGoLightly, BlueRuby, XRuby, Ruby.NET, IoRuby, Cardinal, Carbone, Aluminium, Smalltalk.Rb, MetaRuby, Rite, RedSun, HotRuby and all the others.</p>
"
"<p>I'm learning Go and can't understand one thing, why creators of this language do support simultaneous assignment? It is very easy to make mistakes like a, b = a, b and not a, b = b, a, as I would want, thanks in advance for any good explanations. </p>
","2988","","<p>How else would you get access to the second, third, fourth, &hellip; return value of a function?</p>
"
"<p>Is it possible to have one URL where if it's in an image tag it will display the images, but if it's loaded in the browser it'll display an HTML page?</p>
","2988","","<p>Yes. That's what Content Negotiation is for, after all.</p>

<p>Of course, those two Representations must represent the same Resource.</p>
"
"<p>I have a simple class that defines some constants, e.g.:</p>

<pre><code>module Foo
  class Bar
    BAZ = ""bof""
    ...
</code></pre>

<p>Everything is puppies and rainbows until I tell Rake to run all my <code>Test::Unit</code> tests. When it does, I get warnings:</p>

<pre><code>bar.rb:3: warning: already initialized constant BAZ
</code></pre>

<p>My habit has been to avoid these warnings by making the constant initialization conditional, e.g.:</p>

<pre><code>...
BAZ = ""bof"" unless const_defined? :BAZ
...
</code></pre>

<p>This seems to solve the problem, but it is a little tedious, and I don't ever see anyone else initializing constants this way. This makes me think I might be Doing It Wrong. Is there a better way to initialize constants that won't generate warnings?</p>

<p><strong>Update</strong>: By way of a little more detail on how I'm using these constants, let's say I've defined a <code>Token</code> class that has constants for all the characters that are part of the syntax of some artificial language. I also have a <code>Scanner</code> class that reads a stream of characters, generating a <code>Token</code> instance for each one.</p>

<pre><code>module Foo
  class Token
    LPAREN = ""(""
    RPAREN = "")""
    ...
  end

  class Scanner
    def next_token
      case read_char()
        when Token::LPAREN: # Generate a new LPAREN token
        ...
</code></pre>

<p>That is, when checking to see what kind of token should be generated for the given character, I want to use the constants defined in <code>Token</code>.</p>

<p><strong>Update 2</strong>: <a href=""http://stackoverflow.com/questions/4532405/what-is-the-right-way-to-initialize-a-constant-in-ruby/4533168#4533168"">Jörg's answer</a> revealed that the problem was probably in how I was constructing paths in my <code>require</code> statements, not in how I was initializing or using the constants. I rewrote my <code>require</code> statements to eliminate any manual path creation, e.g.:</p>

<pre><code># File: $PROJECT_ROOT/lib/foo.rb; trying to load $PROJECT_ROOT/lib/foo/bar.rb
require File.expand_path(File.dirname(__FILE__)) + ""foo/bar""
</code></pre>

<p>is now written to rely on <code>$LOAD_PATH</code>:</p>

<pre><code># File: $PROJECT_ROOT/lib/foo.rb; trying to load $PROJECT_ROOT/lib/foo/bar.rb
require 'lib/foo/bar'
</code></pre>

<p>I removed the conditional checks from my constant initialization statements, and rake now runs unit tests without throwing any warnings.</p>
","2988","","<p>The only way this can happen, is when <code>bar.rb</code> is <code>require</code>d multiple times. Which shouldn't happen, since <code>require</code> doesn't load files that have already been loaded once.</p>

<p>It does, however, only use the path you pass to it to determine whether a file has already been loaded, at least in Ruby 1.8:</p>

<pre><code>require 'bar'   # =&gt; true, file was loaded

require 'bar'   # =&gt; false, file had already been loaded

require './bar' # =&gt; true, OOPS, I DID IT AGAIN
# bar.rb:3: warning: already initialized constant BAZ
</code></pre>

<p>So, you are right: this could very well be an indication that there is something wrong with your dependency management.</p>

<p>Typical warning signs are</p>

<ul>
<li><p>manually constructing file paths instead of just relying on <code>$LOAD_PATH</code></p>

<pre><code>require ""File.expand_path('../lib/bar', File.dirname(__FILE__))""
</code></pre></li>
<li><p>manipulating <code>$LOAD_PATH</code> anywhere except maybe the main entry point to your library:</p>

<pre><code>path = File.expand_path(File.dirname(__FILE__))
$LOAD_PATH &lt;&lt; path unless $LOAD_PATH.include?(path)
</code></pre></li>
</ul>

<p>In general, my philosophy is that it's not my job as a library writer to figure out how to put my library on the <code>$LOAD_PATH</code>. It's the system administrator's job. If the sysadmin uses RubyGems to install my library, then RubyGems will take care of it, otherwise whatever other package management system he uses should take care of it, and if he uses <code>setup.rb</code>, then it will be installed in <code>site_ruby</code>, which is already on the <code>$LOAD_PATH</code> anyway.</p>
"
"<p>The TDD cycle is <em>test, code, refactor, (repeat) and then ship</em>. TDD implies development that is driven by testing, specifically that means understanding requirements and then writing tests first before developing or writing code.  </p>

<p>My natural inclination is a philosophical bias in favor of TDD; I would like to be convinced that there are other approaches that now work well or even better than TDD so I have asked this question. There are other questions that suggest TDD is expensive, tough to implement, presents challenges ... agreed, but what are good alternatives?</p>

<hr>

<p><strong>What are good examples of <em>perfectly acceptable</em> approaches that do not use/need/require test driven development?</strong></p>

<p>I can think of plenty approaches that are not TDD but could be a lot more trouble than what they are worth ... it's not moral judgement, it's just that they are cost more than they are worth ... the following are simply examples of  things that might be ok as learning exercises, but approaches I'd find to be NOT acceptable in serious production and NOT TDD might include:  </p>

<ul>
<li><strong>Inspecting quality into your product</strong> -- Focusing efforts on developing a proficiency in testing/QA can be problematic, especially if you don't work on the requirements and development side first ...  symptom of this include bug triaging where the developers have so many different bugs to deal with it, it is necessary to employ a form of triage -- each development cycle gets worse and worse, programmers work more and more hours, sleep less and less, struggle to keep going in death march until they are consumed. </li>
<li><strong>Superstition ... believing in things that you don't understand</strong> -- this would involve borrowing code that you <em>believe</em> has been proven or tested from somewhere, e.g. legacy code, a magic code starter wizard or an open source project, and you go forward hacking up a storm of modifications, sliding FaceBook Connect into your the user interface, inventing some new magic features on the fly (e.g. a mashup using the Twitter API, GoogleMaps API and maybe Zappos API), showing off your cool new ""product"" to a few people and then writing up a simple ""specification"" and list of ""test cases"" and turning that over to Mechanical Turk for testing. (Extra points are awarded for believing your product is then next Facebook, Twitter or YouTube.)  </li>
</ul>
","2988","","<p><em>Cleanroom Software Engineering</em> is a methodology that sounds on the one hand extremely rigid, static, ""un-agile"" and pretty much the <em>opposite</em> of TDD, but on the other hand it is actually very similar. It is highly iterative for example, like all Agile methods. Like TDD, you write a specification first, but unlike TDD that specification takes the form of a mathematical proof of correctness rather than an executable test.</p>

<p>Where the TDD cycle is</p>

<ol>
<li>Specify</li>
<li>Code</li>
<li>Refactor</li>
<li>Demonstrate correctness through executable specifications</li>
</ol>

<p>The Cleanroom cycle is</p>

<ol>
<li>Specify</li>
<li>Code</li>
<li>Refactor</li>
<li>Prove correctness</li>
<li>(Test)</li>
</ol>

<p>I put the tests in parentheses because they are usually (semi-)automatically generated from the specification. So, while they are part of the development cycle, they are not part of the work the programmer has to do.</p>

<p>From what I've read, the performance metrics of Cleanroom are very similar to those of TDD, which leads me to believe that the <em>real</em> value of TDD isn't actually in the testing part, it is in the <em>thinking</em> part. It would be interesting to perform an experiment, where you replace the ""Red"" part of TDD with a simple stopwatch that locks your keyboard for 30 seconds before you can write a new method.</p>
"
"<p>In the book Rails Test Prescriptions (b10.0, page 176), there are examples of one-liner assertions like the following:</p>

<p><code>should ""be successful"" { assert_response :success }</code></p>

<p>This doesn’t appear to be valid ruby syntax to me, and ruby reports that the left curly brace is unexpected. In order for it to be parsed, I have to change it to</p>

<p><code>should ""be successful""; do assert_response :success end</code></p>

<p>What's wrong with the syntax of the first example?</p>
","2988","","<p>This is valid Ruby syntax. Well, sort of. It just doesn't make sense!</p>

<p>Since the precedence of a literal block using curly braces is higher than passing an argument without parentheses, the block gets bound to the argument instead of the method call. If the argument is <em>itself</em> a method call, then you won't even get a syntax error. You'll just scratch your head wondering why your block doesn't get called.</p>

<p>To fix this, you either put parentheses around the argument, since parentheses have higher precedence than curly braces, or use the <code>do</code> / <code>end</code> form, which is lower precedence than an argument list without parentheses.</p>

<pre><code>def foo; yield if block_given?; 'foo' end

puts foo { puts 'block' }
# block
# foo

puts(foo) { puts 'block' }
# foo

puts foo do puts 'block' end
# foo

puts foo { puts 'block' }, foo { puts 'block' }
# block
# block
# foo
# foo

puts 'foo' { puts 'block' }
# SyntaxError: (irb):19: syntax error, unexpected '{', expecting $end
</code></pre>
"
"<p>Is F# the only actively-developed functional language for the CLI, which supports Mono and has Monodevelop plug-in? or are there others I missed?</p>

<p>F# is pretty fun, but it's not as awesome as a lisp like clojure which sadly doesn't support mono yet.</p>
","2988","","<p>There's <a href=""http://IronScheme.CodePlex.Com/"" rel=""nofollow"">IronScheme</a>, <a href=""http://Clojure.Org/"" rel=""nofollow"">Clojure</a> (or more precisely <a href=""https://GitHub.Com/RichHickey/Clojure-CLR/wiki/"" rel=""nofollow"">ClojureCLR</a>) and <a href=""http://Nemerle.Org/"" rel=""nofollow"">Nemerle</a>. The CLI port of <a href=""http://Scala-Lang.Org/"" rel=""nofollow"">Scala</a> picked up steam again a couple of months ago and is even sponsored by Microsoft, although AFAIR the projected feature-parity release (i.e. the point at which the JVM and CLI versions have the samne features and are released on the same day) is 3.0, which is still one or two years away.</p>
"
"<p>What is the difference between <code>&lt;cite&gt;, &lt;em&gt;, and &lt;i&gt;</code> tags of HTML ?</p>

<p>All render same default style in most of browsers.</p>

<p>Is there any meaning behind these tags ?</p>

<p>Can anyone give example about where these tags can be used ?</p>
","2988","","<p>In addition to the other answers: <code>&lt;i&gt;</code> only says what the element <em>looks</em> like, which is of no use to e.g. blind people who browse your site using a screenreader. <code>&lt;em&gt;</code> and <code>&lt;cite&gt;</code> OTOH tell you what they <em>are</em> and so, a screenreader can for example read an emphasized part in a louder, more forceful voice and leave a small pause before and after a citation.</p>

<p>But what the heck should it do with italics?</p>
"
"<p>What is the easiest way to find out in Rails 3 whether a string <code>str</code> contains a positive float number or not ? (<code>str</code> is not an attribute in an active-record model)</p>

<p>It should work like this:</p>

<pre><code>str = ""123""         =&gt;     true
str = ""123.456""     =&gt;     true
str = ""0""           =&gt;     true
str = """"            =&gt;     false
str = ""abcd""        =&gt;     false
str = ""-123""        =&gt;     false
</code></pre>
","2988","","<p>Here's one idea:</p>

<pre><code>class String
  def nonnegative_float?
    Float(self) &gt;= 0
  rescue ArgumentError
    return false
  end
end
</code></pre>

<p>However, since you already seem to have a pretty good idea of what a nonnegative float number looks like, you could also match it against a <code>Regexp</code>:</p>

<pre><code>class String
  def nonnegative_float?
    !!match(/\A\+?\d+(?:\.\d+)?\Z/)
  end
end
</code></pre>
"
"<p>Is there any possibility to establish in method_missing declaration in Ruby whether a given missing_method was called (without any arguments) using parentheses notation, ie:</p>

<pre><code>foo.non_existing_method()
</code></pre>

<p>or using parentheses-less notation:</p>

<pre><code>foo.non_existing_method
</code></pre>

<p>?</p>

<p>I need this to solve my very specific testing problem.</p>
","2988","","<p>No.</p>

<p>Since both are <em>exactly the same</em>, there cannot possibly be a way to detect the difference.</p>

<p>It doesn't make sense anyway, since both are <em>exactly the same</em>, so there cannot possibly any behavorial difference, either.</p>

<p>If you <em>could</em> detect the difference, then you could also have your method <em>behave</em> differently, which would be <em>extremely surprising</em> to any user of that method.</p>
"
"<p>In ruby, you can do this:</p>

<pre><code>d = [1, 2, 3]
a, b, c = d
</code></pre>

<p><code>a</code>, <code>b</code>, and <code>c</code>, will receive the values 1, 2, and 3, respectively.</p>

<p><code>d</code>, in this case in an <code>Array</code> and ruby knows to assign it's contents to <code>a</code>, <code>b</code>, and <code>c</code>. But, if <code>d</code> were a <code>Fixnum</code>, for example, only <code>a</code> would be assigned to the value of <code>d</code> while <code>b</code> and <code>c</code> would be assigned <code>nil</code>.</p>

<p>What properties of <code>d</code> allow it to be used for multiple assignment? In my exploring so far, I've only been able to make instances of subclasses of <code>Array</code> behave in this way.</p>
","2988","","<blockquote>
  <p>What properties of <code>d</code> allow it to be used for multiple assignment?</p>
</blockquote>

<p><code>d</code> has to be an <code>Array</code> or be convertible to one. IOW it must be either an instance of the <code>Array</code> class (or any of its subclasses) or respond to the <code>to_ary</code> message:</p>

<pre><code>def (not_an_array = Object.new).to_ary; [:foo, :bar, :baz] end

foo, bar, baz = not_an_array

foo # =&gt; :foo
bar # =&gt; :bar
baz # =&gt; :baz
</code></pre>

<p>Note that this is an instance of a more general pattern in Ruby: almost all methods in Ruby that expect an <code>Array</code>, a <code>String</code>, an <code>Integer</code> or a <code>Float</code> will also accept an object that responds to <code>to_ary</code>, <code>to_str</code>, <code>to_int</code> or <code>to_float</code>. And your <em>own</em> methods should, too, by the way!</p>
"
"<p>Inspired by a great question (and bunch of great answers) from <a href=""http://stackoverflow.com/questions/4456424/what-do-programmers-mean-when-they-say-code-against-an-interface-not-an-object"">here.</a></p>

<p>Does the statement ""Code against an interface, not an object"" have any significance in Python?</p>

<p>I'm looking for answers like the ones in the <a href=""http://stackoverflow.com/questions/4456424/what-do-programmers-mean-when-they-say-code-against-an-interface-not-an-object"">Original Question</a> but with Python snippets and thoughts.</p>
","2988","","<blockquote>
  <p>What's the Python version for “Code against an interface, not an object.”?</p>
</blockquote>

<p>The proper quote is ""<em>program against an interface, not an implementation</em>"". The principle holds the same way in Python that it did in Smalltalk, the language it in which it originated.</p>

<blockquote>
  <p>Does the statement ""Code against an interface, not an object."" have any significance in Python?</p>
</blockquote>

<p>Yes. It has the same significance in Python as it has in the language that this quote originated from (Smalltalk), and in every other language.</p>
"
"<p>When I have something like :</p>

<pre><code>class My_Class
attr_reader :A

def initialize(x)
  @A = x
end

def to_s
  A
end
</code></pre>

<p>end</p>

<p>and then do : </p>

<pre><code>v = My_Class.new(""some value"")
puts v
</code></pre>

<p>I get an error like :</p>

<pre><code>in `to_s': uninitialized constant My_Class::A (NameError)
</code></pre>

<p>If I change the accessor to start with a lowercase letter it works. Is this a convention I'm not aware of ?</p>
","2988","","<p>This is just the normal receiverless message send / variable name ambiguity in Ruby.</p>

<p>If you just write</p>

<pre><code>A
</code></pre>

<p>it could be <em>either</em> a receiverless message send without arguments <em>or</em> a variable (or in this case a constant).</p>

<p>Ruby resolves this by assuming it is a constant.</p>

<p>The solution is obvious: since the ambiguity is with a receiverless no-arguments message send, there are two ways to resolve it: add a receiver or add arguments:</p>

<pre><code>self.A
A()
</code></pre>

<p>Both work just fine.</p>

<p>For a more in-depth explanation and some examples, see</p>

<ul>
<li><a href=""http://StackOverflow.Com/q/2950956/#2951439""><em>Optional parens in Ruby for method with uppercase start letter?</em></a></li>
<li><a href=""http://StackOverflow.Com/q/2985850/#2986338""><em>How does ruby allow a method and a Class with the same name?</em></a></li>
<li><a href=""http://StackOverflow.Com/q/3741582/#3741741""><em>Method and variable name is the same</em></a></li>
</ul>
"
"<p>I am trying to find the documentation for the Scala operator method <code>#::</code>. I believe that it is defined in the <code>Stream</code> class because of an <a href=""http://voidmainargs.blogspot.com/2010/12/lazy-sieve-eratosthenes-in-scala-and.html"" rel=""nofollow"">example</a> I found that uses it.</p>

<p>My question is not particular to this method (although I would like to know where the docs are), but how to search the Scala docs in general. I tried entering <code>#::</code> in the search box in the upper left of the documentation page (2.8.1), but found nothing.</p>
","2988","","<p>That particular method is defined in a nested class inside of <code>Stream</code>, called <a href=""http://Scala-Lang.Org/api/current/scala/collection/immutable/Stream%24%24ConsWrapper.html"" rel=""nofollow""><code>scala.collection.immutable.Stream.ConsWrapper</code></a>.</p>

<p>And no, I have absolutely no idea how one would go about finding it. I only stumbled across it by accident. And even though I <em>knew</em> where to find it now, when I wanted to post the link to the class here in my answer, I <em>still</em> couldn't find it on the first (and even second and third) try.</p>
"
"<p>I've got some troubles with Ruby about callbacks (and inheritance). Here is my code:</p>

<pre><code>class Lmao
  def initialize
    @str = ""HAHAHAHAHAHHAHAHAH""
    @before_laughing = []
  end

  def self.inherited(base)
    base.extend(Callbacks)
  end

  def laughing
    @before_laughing.each {|method| send(method) }
    @str
  end
end

module Callbacks
  def before_laughing(*methods)
    @before_laughing = methods
  end
end

class Lol &lt; Lmao
  before_laughing :downcase_please

  def downcase_please
    @str.downcase!
  end
end

a = Lol.new
a.laughing # =&gt; ""HAHAHAHAHAHHAHAHAH""
</code></pre>

<p>And as you can see, my before laughing callback don't work... because the array @before_laughing is empty.  I believe this can be fixed by editing the way I save *methods into an Lol's instance method (from inside Callbacks).  But I don't really see how...</p>

<p>If you know the solution, thanks for your light!</p>
","2988","","<p>There are <em>two</em> different instance variables called <code>@before_laughing</code> in your code: one is an instance variable of <em>instances</em> of the <code>Lmao</code> class, which gets initialized to <code>[]</code> (i.e. an empty <code>Array</code>) in <code>Lmao</code>'s <code>initialize</code> instance methods and gets read in <code>Lmao</code>'s <code>laughing</code> instance method. However, since the <em>only</em> place this instance variable gets written to is the initializer, it will <em>always</em> be an empty <code>Array</code>.</p>

<p>The other instance variable is an instance variable of the <code>Lol</code> class object <em>itself</em>, which gets set to the <code>Array</code> <code>[:downcase_please]</code> inside of the <code>before_laughing</code> method. <em>This</em> one, however, never gets <em>read</em>.</p>
"
"<p>I am a beginner. What are generics in C#, illustrated with a simple example? What are some related articles or websites for this topic?</p>
","2988","","<p>There is really nothing special about Generics in C#. C# just likes to take well-known concepts and call them something different (e.g. calling procedures ""static methods"" or calling <code>flatMap</code> ""<code>SelectMany</code>""). In this particular case, Generics are just C#'s name for rank-1 parametric polymorphism.</p>
"
"<p>I thinking of a good opensource licence to choose for my project. I got a few requirements but I have a hard time choosing a license because a read some different things about some of them.</p>

<p>The project is a Java project that can calculate decompression schemes for scuba diving. I want this project to be opensource because a wrong decompression scheme can be lethal. Therefore feedback on the algorithms and source code is important for me. I don't make my own algorithms but I use various opensource algorithms that I implement in 1 Java library.</p>

<p>My requirements are:</p>

<ul>
<li>I and other contributers to the project don't want to be responsible for wrong calculated decompression schemes due to bugs in the code, miss use of the code or any other way that resulted in wrong decompression schemes.</li>
<li>The library should be able to use on a website I plan to build without the need to publish the server side code of the website.</li>
<li>It's not allowed to make any profit of the library itself. Even not even the library is changed and republished. However I don't mind if people sell programs the make use of the library.</li>
<li>If people change the code than they should be forced to re publish the library with an opensource licence (Optional requirement).</li>
</ul>

<p>I hope someone with a bit more knowledge of licenses can help me out.</p>
","2988","","<p>This impossible. You say you want an open source license that prohibits making money. However, one of the key requirements for being an open source license is not making any restrictions with respect to commercialization.</p>

<p>Ergo, a license like you describe it cannot possibly exist.</p>

<hr>

<p>And here the standard answer: StackOverflow is a site for programming questions. We are programmers. Your question is a legal question. This means that all answers (including mine) will be, by definition, crap, since we don't know WTF we're talking about.</p>

<p>For legal questions, ask a lawyer.</p>
"
"<p>Given this simple Ruby code:</p>

<pre><code>def testMethod
  testVar = 1
  def subTestMethod
    if testVar == 1
      puts 'Yes'
    else
      puts 'No'
    end
  end
  subTestMethod
end

testMethod
</code></pre>

<p>Is there any way to pass the local <code>testVar</code> variable to the sub-method without being forced to use a class variable?</p>
","2988","","<p>In Ruby, only blocks (and lambda literals) can be closures. So, you'll have to use a block to define the method:</p>

<pre><code>def testMethod
  testVar = 1
  Object.send(:define_method, :subTestMethod) do
    if testVar == 1
      puts 'Yes'
    else
      puts 'No'
    end
  end
  subTestMethod
end

testMethod
</code></pre>

<p>As others have already pointed out, whether or not this does what you think it does depends of course on exactly <em>what</em> you think it does, but most likely, it <em>doesn't</em>.</p>

<p>Just a couple of style tips: methods and (non-constant) variables follow a <code>snake_case</code> naming convention, you use empty lines to separate initialization from the actual work and the return value, and everything is an expression.</p>

<p>So, your <code>testMethod</code>, <code>subTestMethod</code> and <code>testVar</code> should rather be named <code>test_method</code>, <code>sub_test_method</code> and <code>test_var</code>. There should be an empty line before <code>define_method</code> and before <code>sub_test_method</code>. And you can pull the <code>puts</code> outside of the <code>if</code> expression, since, well it <em>is</em> an <em>expression</em> and thus returns its value:</p>

<pre><code>def test_method
  test_var = 1

  Object.send(:define_method, :sub_test_method) do
    puts(if test_var == 1 then 'Yes' else 'No' end)
  end

  sub_test_method
end

test_method
</code></pre>

<p>What you probably rather want is a lambda:</p>

<pre><code>def test_method
  test_var = 1

  sub_test_lambda = -&gt; { puts(if test_var == 1 then 'Yes' else 'No' end) }

  sub_test_lambda.()
end

test_method
</code></pre>
"
"<p>I installed ruby186-27_rc2 and i am getting the same error as described in the <a href=""http://stackoverflow.com/questions/1948043/ruby-cannot-install-watir-gem-on-windows/4568341#4568341"">Ruby: Cannot Install Watir Gem On Windows</a> thread when i try to install watir using <code>gem install watir</code>. Please see the error below.</p>

<pre><code>C:\DevKit&gt;gem install watir
Building native extensions.  This could take a while...
ERROR:  Error installing watir:
        ERROR: Failed to build gem native extension.

C:/Ruby/bin/ruby.exe extconf.rb
checking for strncpy_s()... no
creating Makefile.....
</code></pre>

<p>And then tried to install the devkit as suggested in the thread mentioned above. During the devkit installation i came up with a problem.  </p>

<p>In step4 of devkit installation as described at <a href=""https://github.com/oneclick/rubyinstaller/wiki/development-kit"" rel=""nofollow"">Development Kit wiki</a> i have added the path <code>C:\Ruby</code> to the config file and then ran the command <code>ruby dk.rb install</code> and i got the following error. Please help! Waiting for your inputs. Thanks!</p>

<pre><code>C:/Ruby/lib/ruby/1.8/yaml.rb:133:in `load': syntax error on line 15, col -1: `'
(ArgumentError)
        from C:/Ruby/lib/ruby/1.8/yaml.rb:133:in `load'
        from dk.rb:151:in `review'
        from dk.rb:143:in `open'
        from dk.rb:143:in `review'
        from dk.rb:248:in `send'
        from dk.rb:248:in `run'
        from dk.rb:262
</code></pre>
","2988","","<p>The DevKit contains a development environment for the <a href=""http://RubyInstaller.Org/"" rel=""nofollow"">MinGW port of MRI and YARV</a>. You are using the MSVC6 port of MRI, so you need to install a development environment for MSVC6.</p>

<p>Unfortunately, there is no ready-made DevKit-like package for that. You will have to install it on your own. Note that it's not actually <em>that</em> hard to install, the biggest problem is to get a hold of a copy of Microsoft Visual C 6.0, since that hasn't been on sale for about 10 years now. You'll basically have to find someone who is going to sell you a used copy.</p>

<p>May I ask why you need to use a port of Ruby that hasn't been maintained in over 2 years, contains a version of Ruby that is so old that it cannot even run most modern code (e.g. Rails requires at least 1.8.7 or 1.9.2) and has several bugs, including security holes? Why don't you just use the MinGW port which is actually maintained?</p>

<p>This is all independent of the <em>actual</em> problem, of course, which is that you have a syntax error in your <code>config.yml</code>: you missed a dash and a space on line 15, which should read</p>

<pre><code>- C:/Ruby
</code></pre>

<p>as indicated in the <code>example</code> section directly above it.</p>
"
"<p>I am very new to scheme. And now I am trying to compile some scheme code into binary file which will be loaded faster into interpreter. (The interpreter is a hybrid interpreter)Some one told me that I can compile the code into native binary file and then load it into interpreter. And my question is:</p>

<ol>
<li>What is the native binary file?</li>
<li>How can I compile the scheme code into a native binary file? </li>
<li>How can I load native binary file into scheme interpreter?</li>
</ol>

<p>Thanks in advance.</p>

<p>Joe</p>

<p>Suggested that I want to compile below code into native binary file:</p>

<pre><code>(define test (lambda() (display ""this is a test""))
</code></pre>

<p>And then load the bianry file into interpreter and call the function ""test"".</p>
","2988","","<blockquote>
  <p>What is the native binary file?</p>
</blockquote>

<p>That depends on your particular Scheme implementation.</p>

<blockquote>
  <p>How can I compile the scheme code into a native binary file?</p>
</blockquote>

<p>That depends on your particular Scheme implementation.</p>

<blockquote>
  <p>How can I load native binary file into scheme interpreter?</p>
</blockquote>

<p>That depends on your particular Scheme implementation.</p>
"
"<p>I'm trying to create a script to fill out a multi-page ""form"" that I have to fill out weekly (unemployment form actually), the 4th page ends up giving you a Checkbox and 2 Radio Buttons, all built by Javascript.  When I navigate to this page using Mechanize I get html back without those 3 controls so I can't go any farther in the process.</p>

<p>Is this a common problem?<br>
I'm filling out the form then just calling <code>page = agent.submit(form, form.buttons.first)</code> and it comes back without those controls built.</p>
","2988","","<p>Mechanize is an HTML parser, not a JavaScript interpreter. If it's not in the HTML, there's nothing it can do. You need a ""proper"" browser. (By ""proper"" I mean one which can at least parse HTML, run JavaScript and ideally also interpret CSS.)</p>

<p>There are tools like Selenium &amp; Co. that let you ""remote-control"" a ""real"" browser (Firefox, Internet Explorer, &hellip;) and there are efforts to build completely scriptable GUI-less browsers for precisely this use case.</p>

<p>Note: Depending on what country you are in, the unemployment agency may be in violation of anti-discrimination laws (especially if it's a government agency), so you could maybe force them to offer a JavaScript-free version of the form, but that's a) not a short-term solution and b) a topic for your lawyer, not StackOverflow.</p>
"
"<p>I am trying to change my RUBYOPT environment variable.</p>

<p>My aim is to use my own library, which is in C:\ruby_lib, so I do:</p>

<p><code>echo set RUBYOPT=""-I C:\ruby_lib\</code></p>

<p>If I try to run my program, which contains only <code>require ""dummy.rb""</code> all I get is <code>no such file to load</code>, which should not happen has long as <code>dummy.rb</code> can be found in <code>C:\ruby_lib</code></p>

<p>I am wondering if there is something I am doing wrong when I set the RUBYOPT environment variable.</p>
","2988","","<p>You are not setting the <code>RUBYOPT</code> environment variable. You are just <code>echo</code>ing the string <code>set RUBYOPT=""-I C:\ruby_lib\</code> to the console.</p>

<p>Just remove the <code>echo</code>:</p>

<pre><code>set RUBYOPT=-I C:\ruby_lib
</code></pre>
"
"<p>I'm pretty new to Bash scripting and am looking to do the following:</p>

<p>The script's pwd is ""/a/b/c/directory_name.git/"" and I'd like to cd to ""../directory_name"" where directory_name could be anything. Is there any easy way to do this?</p>

<p>I'm guessing I'd have to put the result of <code>pwd</code> in a variable and erase the last 4 characters.</p>
","2988","","<p>That's what <a href=""http://Pubs.OpenGroup.Org/onlinepubs/9699919799/utilities/basename.html"" rel=""nofollow""><code>basename</code></a> is for:</p>

<pre><code>cd ../$(basename ""$(pwd)"" .git)
</code></pre>
"
"<p>I'm new to Ruby, how can I count elements in a loop?
In Java I would write it like this</p>

<pre><code>int[] tablica = { 23,53,23,13 };
int sum = 0;
for (int i = 0; i &lt;= 1; i++) { // **only first two**
    sum += tablica[i];
}
System.out.println(sum);
</code></pre>

<p><strong>EDIT:</strong> I want only first two</p>
","2988","","<pre><code>tablica.take(2).reduce(:+)
</code></pre>

<p>But seriously? What's wrong with just</p>

<pre><code>tablica[0] + tablica[1]
</code></pre>

<p>Hey, it even works in Ruby <em>and</em> Java &hellip; and C, C++, Objective-C, Objective-C++, D, C#, ECMAScript, PHP, Python. <em>Without</em> changes.</p>
"
"<p>Can somebody please explain (with example) the difference between context-independent and context-dependent overloading?</p>
","2988","","<p>I have never heard about those. And there's only about five hits on Google, one of which is this very question, which seems to suggest to me that these are made-up terms. And as with any made-up term, if you want to know what it means, you have to ask the person who made it up.</p>

<p>From what little I could gather, it seems to be related to return-type based overloading.</p>

<p>Basically, if you have four overloaded functions like these:</p>

<pre><code>foo :: string → int
foo :: string → string
foo :: string → ()
foo :: int → int
</code></pre>

<p>And you call them like this:</p>

<pre><code>1 + foo 1
1 + foo ""one""
foo ""one""
</code></pre>

<p>Then, with context-dependent overloading (i.e. overloading based on the return type as well as the parameter types), the following implementations will be selected:</p>

<pre><code>1 + foo 1     # foo :: int → int
1 + foo ""one"" # foo :: string → int (because `+` takes an `int`)
foo ""one""     # foo :: string → ()  (because there is no return value)
</code></pre>

<p>Whereas with context-independent overloading (i.e. ignoring the return type), the following implementations will be selected:</p>

<pre><code>1 + foo 1     # foo :: int → int
1 + foo ""one"" # ERROR
foo ""one""     # ERROR
</code></pre>

<p>In both the <code>ERROR</code> cases, there is an ambiguity between <code>foo :: string → int</code>, <code>foo :: string → string</code> and <code>foo :: string → ()</code>, since they only differ in their return type but have the same paremeter type.</p>
"
"<p>I'm working through some sample code and then this appeared:</p>

<pre><code>public abstract class RandomPool&lt;T&gt; extends Pool {
     //Class...
}
</code></pre>

<p>What's <code>&lt;&gt;</code> used for? And why is just <code>T</code> inside these? This seems to be very random for me. However, how can I use it in a longer perspective of making programs?</p>

<p>Thanks and tell me if I need to add more details!</p>
","2988","","<p>There's nothing fancy about this. It's just Java's syntax for rank-1 parametric polymorphism.</p>
"
"<p>I have a project that uses the ScriptEngine to process some javascript, and worked well on my machine, but when i send the projects's jar to the server, i had discovered that the server's JVM doesn't have Rhino built-in, returning null when the code calls a </p>

<pre><code>new ScriptEngineManager().getEngineByName(""javascript"");
</code></pre>

<p>I went to the rhino's download page, get the most recent version, and extracted the js.jar from it, added the jar on the project, but still have the same problem.</p>
","2988","","<p>The JavaScript Engine is only included in the Sun/Oracle JDK. If you use some other Java implementation like IBM J9 or Oracle JRockit (quite likely on a server), or if you don't use the Sun/Oracle JDK but the Sun/Oracle JRE (even more likely on a server), then you don't get the JavaScript engine.</p>

<p>You need to use Sun's full JDK.</p>

<p>Note also that the JavaScript engine shipped with JDK6 is <em>not</em> Rhino, it's a stripped-down lobotomized version of a several year old obsolote release of Rhino. In particular, it is missing the compiler, which means that performance will probably suck.</p>

<p>Also note that the API is not necessarily compatible between Rhino and the JDK6 JavaScript engine, <em>even if</em> you manage to find that obsolete release of Rhino that it is based on. So, if you want to use Rhino in deployment, you'd better use it in development, too.</p>

<p>And last but not least: just because you make some entry in your Eclipse project file, doesn't mean that your server's classpath is going to magically change. You need to make sure that all your classpaths are properly set up. I don't have any eperience with FreeBSD, but I'm pretty sure that the package management system (FreeBSD ports in this case) is going to at least partially take care of that after a <code>port install rhino</code>.</p>
"
"<p>I would like to know if there is any elegant way to implement a loop for the following method. I can only come up with a regular while loop (Java programmer) as the following pseudo code:</p>

<pre><code>while x&lt;10       
  search = Google::Search::Web.new()
  search.query = ""china""
  search.start = x
end
</code></pre>

<p>Someone knows a better way?</p>
","2988","","<p>Since it doesn't look like the value of <code>x</code> never actually changes, there are two possible ways to rewrite this. Either <code>x &gt;= 10</code> before the loop starts, then it will never be run, and it can simply be replaced with nothing. Otherwise, it's an infinite loop, and the most idiomatic way to write that is</p>

<pre><code>loop do
  search = Google::Search::Web.new
  search.query = 'china'
  search.start = x
end
</code></pre>

<p>If you don't know the value of <code>x</code> beforehand, you can simply make the loop conditional:</p>

<pre><code>loop do
  search = Google::Search::Web.new
  search.query = 'china'
  search.start = x
end if x &lt; 10
</code></pre>

<p>If <code>x</code> is a message send whose method changes its return value, then I don't see any obvious way to improve your code other than removing the superfluous braces.</p>
"
"<p>If I do</p>

<pre><code>def eval_file(file)
  instance_eval read(file)
end
</code></pre>

<p>Then once something happens in one of the methods / blocks inside the file all I see is something like <code>(eval):20 in 'eval_file</code>'. When I use eval_file with many files it is hard to tell from which one the exception came (the exception happens after the eval, when using a method)</p>

<p>Is there some way for me to see the actual file and line number?</p>
","2988","","<p>As you can see from <a href=""http://RubyDoc.Info/stdlib/core/1.9.2/BasicObject%3ainstance_eval"">the documentation</a>, <code>BasicObject#instance_eval</code> (and in fact all the other <code>*_eval</code>s as well) will simply report whatever file name and line number you tell it to:</p>

<blockquote>
  <h1>Method: BasicObject#instance_eval</h1>
  
  <ul>
  <li>(<code>Object</code>) <code>instance_eval(string[, filename [, lineno]])</code></li>
  </ul>
  
  <p>Evaluates a string containing Ruby source code, or the given block, within the context of the receiver (<em>obj</em>). In order to set the context, the variable <code>self</code> is set to <em>obj</em> while the code is executing, giving the code access to <em>obj</em>’s instance variables. In the version of <code>instance_eval</code> that takes a <code>String</code>, <strong>the optional second and third parameters supply a filename and starting line number that are used when reporting compilation errors</strong>.</p>
  
  <p>[&hellip;]</p>
  
  <h2>Overloads:</h2>
  
  <ul>
  <li>(<code>Object</code>) <code>instance_eval(string[, filename [, lineno]])</code></li>
  </ul>
</blockquote>

<p>[Emphasis mine.]</p>

<p>In general, if you use the <code>String</code> overload of the <code>*_eval</code> methods, you should make sure that you get <a href=""http://OlaBini.Com/blog/2008/01/ruby-antipattern-using-eval-without-positioning-information/"">sensible location information by passing file name and line number</a> [<a href=""http://Ola-Bini.BlogSpot.Com/2008/01/ruby-antipattern-using-eval-without.html"">alternative link</a>].</p>

<p>In your particular case, you would omit the line number, since you want Ruby to simply use the line number(s) of the file, but you need to pass the file name:</p>

<pre><code>def eval_file(file)
  instance_eval read(file), file
end
</code></pre>
"
"<p>I have data from a CSV file that's already loaded into memory. So I might have something like this:</p>

<pre><code>csv_string = 'Value 1,Value 2,""Hey, it\'s value 3!"",Value 4 has ""some quotes""'
</code></pre>

<p>Obviously I won't want to do <code>csv_string.split("","")</code>. Since it seems like splitting a CSV-style string this way might be a not-all-that-uncommon need, I was wondering if there's a solution already out there.</p>
","2988","","<p>For parsing CSV, Ruby comes with the <a href=""http://RubyDoc.Info/stdlib/csv/1.9.2/frames/""><code>csv</code></a> library:</p>

<pre><code>require 'csv'

CSV.parse(csv_string)
# =&gt; [['Value 1', 'Value 2', ""Hey, it's value 3!"", 'Value 4 has ""some quotes""']]
</code></pre>

<p>Unfortunately, your string doesn't actually contain valid CSV, so what you'll <em>really</em> get is the following exception:</p>

<pre><code># CSV::MalformedCSVError: Illegal quoting on line 1.
</code></pre>

<p>Since your data doesn't actually conform to any common standard, there can obviously not be a common parser and you'll have to write your own.</p>

<p>Alternatively, you could change your data to be valid CSV, for example like this:</p>

<pre><code>c = %q[Value 1,Value 2,""Hey, it's value 3!"",""Value 4 has """"some quotes""""""]

CSV.parse(c)
# =&gt; [['Value 1', 'Value 2', ""Hey, it's value 3!"", 'Value 4 has ""some quotes""']]
</code></pre>
"
"<p>In the Ruby Standard Library we have the Singleton class:<br>
<a href=""http://ruby-doc.org/stdlib/libdoc/singleton/rdoc/index.html"" rel=""nofollow"">http://ruby-doc.org/stdlib/libdoc/singleton/rdoc/index.html</a></p>

<p>We can make any class a singleton by including this class inside. I just rarely see this used. When would it make sense to use this Singleton class vs. just using plain old class methods - also known as singleton methods?</p>

<p>Said in another way: Which Singleton coding-convention are the best and why? Here are three ways I could think of:</p>

<pre><code>require 'singleton'
class Foo
  include Singleton
  # method definitions go here...
end

Foo.instance.do_something!
</code></pre>

<p>Versus</p>

<pre><code>class Foo
  class &lt;&lt; self
    # method definitions go here...
  end
end

Foo.do_something!
</code></pre>

<p>Versus</p>

<pre><code>module Foo
  class &lt;&lt; self
    # method definitions go here...
  end
end

Foo.do_something!
</code></pre>
","2988","","<p><strong>WARNING</strong>: Opinions ahead!</p>

<hr>

<p>If you just need a single object, just use a single object:</p>

<pre><code>class &lt;&lt; (Foo = Object.new)
  # method definitions go here...
end

Foo.do_something!
</code></pre>

<p>Modules are for sharing behavior between objects. Classes are factories for objects. Note the plural: if you have only <em>one</em> object, you need neither a facility for sharing behavior nor a factory for producing multiple copies.</p>

<p>Whether or not this is considered idiomatic Ruby depends largely on which ""Ruby"" you are talking about: are you talking about Ruby as used by Rails programmers, Ruby as used by Smalltalk programmers, Ruby as used by Java programmers or Ruby as used by Ruby programmers? There are significant differences in the styles used by these different communities.</p>

<p>For example, old time Rubyists like David Alan Black tend to start <em>always</em> with just objects and singleton methods. Only if they later on discover duplicated behavior between objects will they extract that behavior into a mixin and <code>extend</code> the objects with it. (Note that at this stage, there still aren't any classes!)</p>

<p>Classes are created, again, only by refactoring, not by upfront design, when and <em>only</em> when there is duplicated structure between objects.</p>
"
"<p>I just don't get it. I thought, <em>Bundler</em> was developed to resolve version conflicts between gems. So that I just have to <code>require ""bundler/setup""</code> and everything is fine, knowing that <em>Bundler</em> will load the correct versions of all my gems and their dependencies. Now, <em>RVM</em> is great for managing multiple Rubies, I know, but why should I care about the Gemset feature? Do I miss something here? Can it make my development even easier? Maybe, some of you can give me some hints on the perfect <em>RVM</em> + <em>Bundler</em> workflow for both, development and production.</p>

<p>I also don't know when <em>RVM</em> starts switching to another Ruby. I know that I can have an <code>.rvmrc</code> file in my project, but do I have to <code>cd</code> to this directory so that the switch happens?</p>

<p>Furthermore, I usually use <em>Passenger</em> for development since, thanks to the <code>Passenger.prefpane</code>, integration in <em>Mac OS</em> is great. Can I still do that with RVM or is there a better way to do it? Does <em>Passenger</em> recognize <code>.rvmrc</code> files and switch to the correct Gemset?</p>
","2988","","<blockquote>
  <p>Why should I care about RVM's Gemset feature when I use Bundler?</p>
</blockquote>

<p>You shouldn't.</p>

<p>Well, if you <em>want to</em>, you <em>can</em> care about, of course, so I should better say ""You don't need to.""</p>

<p>I just listened to a <a href=""http://rubyrogues.com/045-rr-bundler-with-andre-arko/"" rel=""nofollow"">podcast interview with one of the Bundler core team members</a> who basically said that since he started using Bundler he stopped using Gemsets, because they are redundant.</p>

<p><a href=""http://rakeroutes.com/blog/how-to-use-bundler-instead-of-rvm-gemsets/"" rel=""nofollow"">Here's a blog post that discusses the same issue, with some examples.</a></p>
"
"<p>I would like to install the newest ruby and rails on my debian lenny server.</p>

<p>I found the package <a href=""http://packages.debian.org/lenny-backports/ruby1.9.1-full"">http://packages.debian.org/lenny-backports/ruby1.9.1-full</a> but when I try to install it with I just get:</p>

<pre><code>atlas:~# apt-get install ruby1.9.1-full
Reading package lists... Done
Building dependency tree       
Reading state information... Done
E: Couldn't find package ruby1.9.1-full
</code></pre>

<p>My sources.list looks like this:</p>

<pre><code>atlas:~# cat /etc/apt/sources.list

deb http://ftp.se.debian.org/debian/ lenny main non-free contrib
deb-src http://ftp.se.debian.org/debian/ lenny main non-free contrib

deb http://security.debian.org/ lenny/updates main contrib non-free
deb-src http://security.debian.org/ lenny/updates main contrib non-free

deb http://volatile.debian.org/debian-volatile lenny/volatile main contrib non-free
deb-src http://volatile.debian.org/debian-volatile lenny/volatile main contrib non-free
</code></pre>

<p>What do I have to do to get it installed?</p>
","2988","","<p>If you want to install a package from the Lenny backports repository, you obviously need to have it in your <code>sources.list</code>:</p>

<pre><code>deb http://Backports.Debian.Org/debian-backports lenny-backports main contrib non-free
deb-src http://Backports.Debian.Org/debian-backports lenny-backports main contrib non-free
</code></pre>

<p>Since the backports are not subject to the normal strict quality review that other packages are, they are disabled by default. If you want to install a package from the backports repository, you have to explicitly pass the distribution to <code>apt-get</code> or <code>aptitude</code>, just like with the <code>experimental</code> repository:</p>

<pre><code>apt-get -t lenny-backports install ruby191-full # or
aptitude -t lenny-backports install ruby191-full
</code></pre>

<p>Since the backported packages are disabled by default, you won't even get security updates for them, unless you add a pinning in <code>/etc/apt/preferences</code>:</p>

<pre><code>Package: *
Pin: release a=lenny-backports
Pin-Priority: 200
</code></pre>

<p><a href=""http://Backports.Debian.Org/Instructions/"" rel=""nofollow"">All of this is clearly spelled out on the Debian Backports website.</a></p>

<p>Note that you should be careful not to mix package management systems. You should <em>either</em> install all Ruby libraries via APT <em>or</em> via RubyGems, but it's generally not a good idea to mix them.</p>

<p>Also, if you use Debian's RubyGems package, you should only update it via APT, not via RubyGems's builtin update mechanism (<code>gem update --system</code>). Actually, I believe that in current versions, Debian has removed the update mechanism to prevent this, but it wasn't always the case.</p>

<p>Personally, I use the Debian Ruby packages without problems on a production server, and I don't use RubyGems <em>at all</em>, I only use the Ruby libraries provided by Debian.</p>
"
"<p>I had (perhaps naively) assumed that in SQL Server, an nvarchar would store each character in two bytes. But this does not always seem to be the case. The documentation out there suggests that some characters might take more bytes. Does someone have a definitive answer?</p>
","2988","","<p>Given that there are more than 65536 characters, it should be obvious that a character cannot possibly fit in just two octets (i.e. 16 bits).</p>

<p>SQL Server, like most of Microsoft's products (Windows, .NET, NTFS, &hellip;) uses UTF-16 to store text, in which a character takes up either two or four octets, although as @SQLMenace points out, current versions of SQL Server use compression to reduce that.</p>
"
"<p>I'm trying to override a dynamically-generated method by including a module.</p>

<p>In the example below, a Ripple association adds a <code>rows=</code> method to Table. I want to call that method, but also do some additional stuff afterwards. </p>

<p>I created a module to override the method, thinking that the module's <code>row=</code> would be able to call <code>super</code> to use the existing method. </p>

<pre><code>class Table

  # Ripple association - creates rows= method
  many :rows, :class_name =&gt; Table::Row

  # Hacky first attempt to use the dynamically-created
  # method and also do additional stuff - I would actually
  # move this code elsewhere if it worked
  module RowNormalizer
    def rows=(*args)
      rows = super
      rows.map!(&amp;:normalize_prior_year)
    end
  end
  include RowNormalizer

end
</code></pre>

<p>However, my new <code>rows=</code> is never called, as evidenced by the fact that if I raise an exception inside it, nothing happens.</p>

<p>I know the module is getting included, because if I put this in it, my exception gets raised.</p>

<pre><code>      included do
        raise 'I got included, woo!'
      end
</code></pre>

<p>Also, if instead of <code>rows=</code>, the module defines <code>somethingelse=</code>, that method is callable.</p>

<p>Why isn't my module method overriding the dynamically-generated one?</p>
","2988","","<blockquote>
  <p>Why isn't my module method overriding the dynamically-generated one?</p>
</blockquote>

<p>Because that's not how inheritance works. Methods defined in a class override the ones inherited from other classes/modules, not the other way around.</p>

<p>In Ruby 2.0, there's <code>Module#prepend</code>, which works just like <code>Module#include</code>, except it inserts the module as a <em>subclass</em> instead of a superclass in the inheritance chain.</p>
"
"<p>I've seen some code that makes a class method such that you can write</p>

<pre><code>class_method :instance_method,
</code></pre>

<p>to alias <code>instance_method</code> and call it from in a wrapper method every time it is called. Is there a way to be able to call <code>class_method</code> and have it apply to all the following definition calls (like how <code>private</code> works)?</p>
","2988","","<p>I don't quite understand your question. In the future, please provide a specification of what it is exactly that you are trying to do, preferably in the form of an executable testsuite, so that we can check for ourselves whether our answers <em>really</em> answer your question.</p>

<p>Are you perhaps talking about something like this?</p>

<pre><code>module MethodHook
  private

  def class_method(m=nil)
    return if @__recursing__ # prevent infinite recursion
    return @__class_method__ = true unless m

    @__recursing__ = true

    old_m = instance_method(m)
    define_method(m) do |*args, &amp;block|
      puts ""before #{m}(#{args.join(', ')})"" # wrap wrap wrap
      old_m.bind(self).(*args, &amp;block)
      puts ""after #{m}"" # more wrapping
    end

    @__recursing__ = nil
  end

  def method_added(m)
    class_method(m) if @__class_method__
    super
  end
end
</code></pre>

<p>Use like this:</p>

<pre><code>class Foo
  extend MethodHook

  def unwrapped
    puts __method__
  end

  class_method

  def wrapped
    puts __method__
  end
end

f = Foo.new

f.unwrapped
# unwrapped

f.wrapped
# before wrapped()
# wrapped
# after wrapped

class Foo
  class_method(:unwrapped)
end

f.unwrapped
# before unwrapped()
# wrapped
# after unwrapped
</code></pre>
"
"<p>I've got a section of code that I would like to run only if the previous block of code doesn't throw an error. I've implemented a solution that seems hacky and I'm sure there is a better way to do it in Ruby.</p>

<p>Here's what I have so far:</p>

<pre><code>existing_comments = Comment.all
catch(:creation_failure) do
    begin
        ActiveRecord::Base.transaction do
            results.each do |row|
                Comment.create!(row)
            end
        end
    rescue
        throw(:creation_failure)
    end
    existing_comments.destroy_all
end
</code></pre>

<p>There's gotta be a better way to do this.</p>
","2988","","<p>It's very difficult to figure out what exactly it is that you are trying to do. As @ehabkost already pointed out, if an exception is raised, the execution is aborted anyway, so there's nothing you need to do. Anything which comes after the code that raised the exception won't be executed anyway, after all that is the <em>whole point</em> of exceptions.</p>

<p>Does this do what you want?</p>

<pre><code>existing_comments = Comment.all
begin
  ActiveRecord::Base.transaction do
    results.each do |row|
      Comment.create!(row)
    end
  end
rescue # You should *never* do this!
else
  existing_comments.destroy_all
end
</code></pre>

<p>By the way: you should <em>never</em>, under no circumstances, just blindly rescue <em>all</em> exceptions. You should only ever rescue <em>exactly</em> the ones you expect. Do you <em>really</em> think it is a good idea to just blindly swallow, say, a <code>ThreadError</code> without ever noticing it? There are 39 direct subclasses of <code>ActiveRecordError</code> alone, perhaps one of those is more appropriate than just rescuing all exceptions (or at least all <code>StandardError</code> exceptions).</p>
"
"<p>I am trying to sort a document based on the number of times the word appears then alphabetically by the words so when it is outputted it will look something like this.</p>

<pre><code>Unsorted:
'the', '6'
'we', '7'
'those', '5'
'have', '3'

Sorted:
'we', '7'
'the', '6'
'those', '5'
'have', '3'
</code></pre>
","2988","","<pre><code>histogram = { 'the' =&gt; 6, 'we' =&gt; 7, 'those' =&gt; 5, 'have' =&gt; 3, 'and' =&gt; 6 }

Hash[histogram.sort_by {|word, freq| [-freq, word] }]
# {
#   'we'    =&gt; 7,
#   'and'   =&gt; 6,
#   'the'   =&gt; 6,
#   'those' =&gt; 5,
#   'have'  =&gt; 3
# }
</code></pre>

<p>Note: this assumes that you use numbers to store the numbers. In your data model, you appear to use strings to store the numbers. I have no idea why you would want to do this, but if you <em>do</em> want to do this, you would obviously have to convert them to numbers before sorting and then back to strings.</p>

<p>Also, this assumes Ruby 1.9. In Ruby 1.8, hashes aren't ordered, so you cannot convert the sorted result back to a hash since that would lose the ordering information, you would have to keep it as an array.</p>
"
"<p>It's common knowledge in most programming languages that the flow for working with files is open-use-close. Yet I saw many times in ruby codes unmatched File.open calls, and moreover I found <a href=""http://www.ruby-doc.org/core/classes/IO.html#M000939"">this gem of knowledge</a> in the ruby docs:</p>

<blockquote>
  <p>I/O streams are automatically closed when they are claimed by the garbage collector.</p>
</blockquote>

<p><strong>darkredandyellow</strong> friendly irc take on the issue:<br>
[17:12]  yes, and also, the number of file descriptors is usually limited by the OS<br>
[17:29]  I assume you can easily run out of available file descriptors <em>before</em> the garbage collector cleans up. in this case, you might want to use close them yourself. ""claimed by the garbage collector."" means that the GC acts at some point in the future. and it's expensive. a lot of reasons for explicitly closing files.</p>

<ol>
<li>Do we need to explicitly close</li>
<li>If yes then why does the GC autoclose ?</li>
<li>If not then why the option?</li>
</ol>
","2988","","<blockquote>
  <p>I saw many times in ruby codes unmatched <code>File.open</code> calls</p>
</blockquote>

<p>Can you give an example? I only ever see that in code written by newbies who <em>lack</em> the ""common knowledge in most programming languages that the flow for working with files is open-use-close"".</p>

<p>Experienced Rubyists either explicitly close their files, or, more idiomatically, use the block form of <a href=""http://RubyDoc.Info/stdlib/core/1.9.2/File.open""><code>File.open</code></a>, which automatically closes the file for you. Its implementation basically looks something like like this:</p>

<pre><code>def File.open(*args, &amp;block)
  return open_with_block(*args, &amp;block) if block_given?
  open_without_block(*args)
end

def File.open_without_block(*args)
  # do whatever ...
end

def File.open_with_block(*args)
  yield f = open_without_block(*args)
rescue
ensure
  f.close
  raise
end
</code></pre>

<p>Scripts are a special case. Scripts generally run so short, and use so few file descriptors that it simply doesn't make sense to close them, since the operating system will close them anyway when the script exits.</p>

<blockquote>
  <p>Do we need to explicitly close?</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>If yes then why does the GC autoclose?</p>
</blockquote>

<p>Because after it has collected the object, there is no way for you to close the file anymore, and thus you would leak file descriptors.</p>

<p>Note that it's not the garbage collector that closes the files. The garbage collector simply executes any finalizers for an object before it collects it. It just so happens that the <code>File</code> class defines a finalizer which closes the file.</p>

<blockquote>
  <p>If not then why the option?</p>
</blockquote>

<p>Because wasted memory is cheap, but wasted file descriptors aren't. Therefore, it doesn't make sense to tie the lifetime of a file descriptor to the lifetime of some chunk of memory.</p>

<p>You simply cannot predict <em>when</em> the garbage collector will run. You cannot even predict <em>if</em> it will run <em>at all</em>: if you never run out of memory, the garbage collector will never run, therefore the finalizer will never run, therefore the file will never be closed.</p>
"
"<p>I had a good look around but I couldn't find the <strong>convention</strong> on how to use quotes for strings, I know the difference between the two, but everywhere I see good code with double quotes where the singles are enough, therefor I can't recognize any pattern. I'm asking it because I'd like to start contributing to opensource soon (not writing code of course) and I'd like to get a good habit since the beginning. I rather use the single quotes as much as possible (also to enstrong my confidence with the difference between the two).</p>

<p>And by the way an addendum on html would be great... (something like <code>&lt;div class='ok'/&gt;</code>)</p>

<p>Thanks for that</p>
","2988","","<p>I don't think there is a strong convention within the entire community. From what I have seen, there seems to be a bias towards ignoring single quotes altogether and always using double quotes. In some circles, that <em>is</em> even a convention, but a localized one, not one for the whole community.</p>

<p>Personally, whenever I have several different ways to express the same thing, I tend to use those different ways to convey different semantics. (For example, I use curly braces vs. <code>do</code>/<code>end</code> in blocks to distinguish between blocks that are used for their side effects and blocks that are used for their return value.)</p>

<p>So, I only use double quotes when I <em>actually</em> want to use string interpolation or escaping, otherwise I use single quotes. That way, when I see a string I can immediately tell that there's no funny business going on, and there's no code hidden inside of it.</p>

<p>I am pragmatic, though. I very much prefer <code>""It's a string!""</code> over <code>'It\'s a string!'</code> or <code>%q[It's a string!]</code>.</p>
"
"<p>Ruby has differences between Procs created via <code>Proc.new</code> and <code>lambda</code> (or the <code>-&gt;()</code> operator in 1.9). It appears that non-lambda Procs will splat an array passed in across the block arguments; Procs created via lambda do not.</p>

<pre><code>p = Proc.new { |a,b| a + b}
p[[1,2]] # =&gt; 3

l = lambda { |a,b| a + b }
l[[1,2]] # =&gt; ArgumentError: wrong number of arguments (1 for 2)
</code></pre>

<p>Does anyone have any insight into the motivations behind this behavior?</p>
","2988","","<p>There are two main differences between lambdas and non-lambda <code>Proc</code>s:</p>

<ol>
<li>Just like methods, lambdas return from themselves, whereas non-lambda <code>Proc</code>s return from the enclosing method, just like blocks.</li>
<li>Just like methods, lambdas have strict argument checking, whereas non-lambda <code>Proc</code>s have loose argument checking, just like blocks.</li>
</ol>

<p>Or, in short: lambdas behave like methods, non-lambda <code>Proc</code>s behave like blocks.</p>

<p>What you are seeing there is an instance of #2. Try it with a block and a method in addition to a non-lambda <code>Proc</code> and a lambda, and you'll see. (Without this behavior, <code>Hash#each</code> would be a <em>real</em> PITA to use, since it <em>does</em> yield an array with two-elements, but you pretty much always want to treat it as two arguments.)</p>
"
"<p>Can any one explain me the difference between ""if"" and ""unless"" and when to use it ?</p>
","2988","","<p>The difference between <code>if</code> and <code>unless</code> is that they are exact opposites of each other:</p>

<ul>
<li><code>if</code> takes a condition, a then-block and an optional else-block, and it evaluates the then-block if the condition is truthy, otherwise it evaluates the else-block</li>
<li><code>unless</code> takes a condition, a then-block and an optional else-block, and it evaluates the then-block if the condition is falsy, otherwise it evaluates the else-block</li>
</ul>

<p>Or, in other words: they mean pretty much the same thing in Ruby as they do in English.</p>
"
"<p>I want to save ® into a txt file with UTF-16 Little Endian, I tested in some ways</p>

<p>1.The encoding below is UTF-8</p>

<blockquote>
<pre><code>$RegisterMark=[174].pack('U*')
file = File.new(""C:/Output.txt"",""w"")
file.puts $RegisterMark
file.close
</code></pre>
</blockquote>

<p>2.The encoding below is UTF-16 Big Endian</p>

<blockquote>
<pre><code>require 'iconv'

$RegisterMark=[174].pack('U*')
$utf16RegisterMark =Iconv.conv('UTF-16', 'UTF-8', $RegisterMark )
file = File.new(""C:/Output.txt"",""w"")
file.puts $utf16RegisterMark 
file.close
</code></pre>
</blockquote>

<p>The mentod Iconv.conv doesn't suport UTF-16 LE type.</p>

<p>How can I save output.txt with UTF16 LE?</p>
","2988","","<p>The easiest way is to just open the file as UTF-16LE in the first place:</p>

<pre><code>register_mark = ""\00ua3"" # or even just: register_mark = ®

File.open('C:/Output.txt', 'wt', encoding: 'UTF-16LE') do |f|
  f.puts register_mark
end
</code></pre>

<p>The important bit here is to explicitly specify the encoding of the file, using the <code>:encoding</code> key in the <code>options</code> <code>Hash</code> of the <code>File.new</code> method (or in this case, <code>File.open</code>). That way, strings written to the file will be converted automatically, no matter what encoding they are in.</p>

<p>I also took the liberty of changing your code to a more idiomatic Ruby style:</p>

<ul>
<li>The Ruby community uses <code>snake_case</code>, not <code>CamelCase</code> for variable and method names.</li>
<li>Global variables should be avoided, especially since in your example, they are totally superfluous anyway.</li>
<li>There's really no need to use <code>Array#pack</code> here, just write down what you want.</li>
<li>Whenever possible, use the block form of <code>File.open</code>, which will take care of closing the file for you, even in the case of an error or exception.</li>
<li>When dealing with text files, you should always pass the <code>t</code> modifier. It doesn't make any difference on most operating systems (which is why, unfortunately, most Rubyists forget to pass it), but it is <em>crucial</em> on Windows, which is what you appear to be using.</li>
</ul>
"
"<p>So I am just starting to make my way through The Pragmatic Bookself's, ""<a href=""http://pragprog.com/titles/ruby3/programming-ruby-1-9"" rel=""nofollow"">Programming Ruby 1.9 (3rd Edition)</a>"" and I've come across some code that I need a little clarification on.</p>

<p>If you own the book, it's in Chapter 3's, ""Classes, Objects, and Variables,"" specifically in the section about virtual attributes.</p>

<p>Basically, a class is defined with an initializer that sets a couple of instance variables, one of which is <code>@price</code>. That variable has an accessor / mutator created with attr_accessor like so:</p>

<pre><code>attr_accessor :price
</code></pre>

<p>That class also has a virtual attribute called, <code>price_in_cents</code> which simply returns the value from this line:</p>

<pre><code>Integer(price*100 + 0.5)
</code></pre>

<p>Now my question is why is <code>price</code> in the virtual attribute not prefixed with an <code>@</code>? It is clearly dealing with an instance variable. Executing the code without the <code>@</code> works just the same as with; why is that?</p>

<p>P.S. Sorry for not just posting the code wholesale—given that this is a question about code in a book, I wasn't sure what legal right I'd have to post.</p>
","2988","","<p>That's a receiverless message send.</p>

<p>In Ruby, the receiver <code>self</code> is implicit: you can leave it out if you want to. So, <code>price</code> is basically the same as <code>self.price</code> (ignoring access restrictions).</p>

<p>In other words, it's calling the method <code>price</code> you defined with <code>attr_accessor</code>.</p>
"
"<p>Given some HTML code, is there a way (in Ruby on Rails, in particular), to tell how many lines the HTML will take up on the screen when rendered?</p>

<p>-- Clarifications:
It's in an erb file, but i'm just talking about one string that will be rendered as HTML so yes, text that contains HTML tags.</p>

<p>-- EDIT:</p>

<p>The bigger picture: I want to know how tall a particular segment of the page is so I can conditionally include certain ""Next/Previous"" links on the bottom. These navigation links appear above the aforementioned segment, so I only want to include the links on the bottom if the segment is very tall.</p>
","2988","","<p>No.</p>

<p>How can you possibly know how wide my screen will be when I visit your website?</p>
"
"<p>I have a method inside of a method. The interior method depends on a variable loop that is being run. Is that a bad idea?</p>
","2988","","<p>No, Ruby doesn't have nested methods.</p>

<p>You can do something like this:</p>

<pre><code>class Test1
  def meth1
    def meth2
      puts ""Yay""
    end
    meth2
  end
end

Test1.new.meth1
</code></pre>

<p>But that is <em>not</em> a nested method. I repeat: Ruby <em>does not have</em> nested methods.</p>

<p>What this is, is a dynamic method definition. When you run <code>meth1</code>, the body of <code>meth1</code> will be executed. The body just happens to define a method named <code>meth2</code>, which is why after running <code>meth1</code> once, you can call <code>meth2</code>.</p>

<p>But where is <code>meth2</code> defined? Well, it's obviously <em>not</em> defined as a nested method, since there <em>are no</em> nested methods in Ruby. It's defined as an instance method of <code>Test1</code>:</p>

<pre><code>Test1.new.meth2
# Yay
</code></pre>

<p>Also, it will obviously be redefined every time you run <code>meth1</code>:</p>

<pre><code>Test1.new.meth1
# Yay

Test1.new.meth1.
# test1.rb:3: warning: method redefined; discarding old meth2
# test1.rb:3: warning: previous definition of meth2 was here
# Yay
</code></pre>

<p>In short: no, Ruby <em>does not</em> support nested methods.</p>

<p>Note also that in Ruby, method bodies cannot be closures, only block bodies can. This pretty much eliminates the major use case for nested methods, since even <em>if</em> Ruby supported nested methods, you couldn't use the outer method's variables in the nested method.</p>
"
"<p>-Hello Sandeep here. I am an apprentice to the Jedi Master Yoda. My master believes the force is strong in the Ruby community and has chosen me for a simple task to complete using the Ruby langauge:</p>

<p>I need to use the Prawn PDF gem to accomplish the task. I have an existing pdf document called Dooku.pdf - it contains sensitive information on the Evil Count Dooku's activities. In Dooku.pdf there is text called {galaxy}. {galaxy} is always in the same location on every page of the pdf document.</p>

<p>I need to open Dooku.pdf, replace each instance of {galaxy} with {planet} and then save/close Dooku.pdf. How do I accomplish this task using the Prawn PDF gem? </p>

<p>-May the force be with you.</p>
","2988","","<p>You can't. Prawn is for writing PDFs, not reading them.</p>
"
"<p>I have a class, Foo.  I want to be able to pass the constructor a Foo instance, foo and get the same instance back out.</p>

<p>In other words, I want this test to pass:</p>

<pre><code>class Foo; end

foo = Foo.new
bar = Foo.new(foo)

assert_equal foo, bar
</code></pre>

<p>Anyone know how I can do that?  I tried this:</p>

<pre><code>class Foo
  def initialize(arg = nil)
    return arg if arg
  end
end

foo = Foo.new
bar = Foo.new(foo)

assert_equal foo, bar  # =&gt; fails
</code></pre>

<p>but it doesn't work.</p>

<p>Help?</p>

<p><strong>EDIT</strong></p>

<p>Because a number of people have asked for my rationale:</p>

<p>I'm doing rapid analysis of lots of data (many TB) and I am going to have a lot of instances of a lot of objects.  For some of these objects, it doesn't make sense to have two different instances with the same data.  For example, one such object is a ""window"" (as in temporal window) object that has two properties:  start time and end time.  I want to be able to use the constructor in any of these ways and get a window object back:</p>

<pre><code>window = Window.new(time_a, time_b)
window = Window.new([time_a, time_b])
window = Window.new(seconds_since_epoch_a, seconds_since_epoch_b)
window = Window.new(window_obj)
window = Window.new(end =&gt; time_b, start =&gt; time_a)
...
</code></pre>

<p>Some other object that needs a window might be instantiated this way:</p>

<pre><code>obj = SomeObj.new(data =&gt; my_data, window =&gt; window_arg)
</code></pre>

<p>I don't necessarily know what's in window_arg, and I don't really care -- it will accept any single argument that can be interpreted by the Window constructor.  In the case of already having a Window instance, I'd rather just use that instance.  But the job of interpreting that seems like a concern of the Window constructor.  Anyway, as I mentioned I'm churning through many TB of data and creating lots of instances of things.  If a window object gets passed around, I want it just to be recognized as a window object and used.</p>
","2988","","<pre><code>def Foo.new(arg=nil)
  arg || super
end
</code></pre>
"
"<p>The following line is working fine in ruby 1.8.7 and not in 1.8.6. What alternative I can use in 1.8.6</p>

<pre><code>x = [3,4,5,6,7,78,4,3,2,5,5,3]
x.count(3)
=&gt; 3
</code></pre>

<p>Since count is not a method in Array in version 1.8.6, I am getting this error. Is there a similar method in this version?</p>
","2988","","<p>As a general tip: there is the really cool <a href=""https://GitHub.Com/MarcAndre/Backports/""><code>backports</code> library by Marc-André Lafortune</a>, which tries to implement as much of the new features of the Ruby 1.8.7, 1.8.8 (i.e. the tip of the 1_8 branch in the Subversion repository), 1.9.1 and 1.9.2 standard libraries as well as some select methods from ActiveSupport as possible in pure, cross-1.8-1.9-compatible Ruby.</p>

<p>So, if you just do</p>

<pre><code>require 'backports'
</code></pre>

<p>it will turn your Ruby 1.8.6, 1.8.7 or 1.9.1 into as close to Ruby 1.9.2 as is possible without dropping to C or breaking backwards compatibility.</p>

<p>Disclaimer: I haven't actually used it myself, since I don't see the point of using an outdated version of Ruby anyway.</p>
"
"<p>I am using Apache commons cli (1.2) for command line parsing.</p>

<p>I have the following in my code:</p>

<pre><code>import org.apache.commons.cli.OptionBuilder
OptionBuilder.withLongOpt(""db-host"").hasArg.
withDescription(""Name of the database host"").create('h')
</code></pre>

<p>I get the error <code>hasArg is not a member of org.apache.commons.cli.OptionBuilder</code>. It makes no difference if I change <code>.hasArg</code> to <code>.hasArg()</code>.</p>

<p>Why?</p>

<p>BTW, Java parses this fine.</p>
","2988","","<blockquote>
<pre><code>import org.apache.commons.cli.OptionBuilder
OptionBuilder.withLongOpt(""db-host"").hasArg.
withDescription(""Name of the database host"").create('h')
</code></pre>
  
  <p>I get the error <code>hasArg is not a member of org.apache.commons.cli.OptionBuilder</code>. It makes no difference if I change <code>.hasArg</code> to <code>.hasArg()</code>.</p>
  
  <p>Why?</p>
</blockquote>

<p>Because <em>there is no</em> instance method <code>hasArg</code> in <code>OptionBuilder</code>, only a static method. Since <code>hasArg</code> is a static method, you obviously need to call it on the class, not on an instance of the class.</p>

<blockquote>
  <p>BTW, Java parses this fine.</p>
</blockquote>

<p>I don't understand what this has to do with parsing. Scala parses this just fine, too. Plus, what some completely different programming does or doesn't do with this code is utterly irrelevant, since this is Scala code, not some other language.</p>

<p>You need to do something like this:</p>

<pre><code>import org.apache.commons.cli.OptionBuilder

OptionBuilder.withLongOpt(""db-host"")
OptionBuilder.hasArg
OptionBuilder.withDescription(""Name of the database host"")

val optionParser = OptionBuilder.create('h')
</code></pre>
"
"<pre><code>def class A
  def a
    raise ""hi"" #can't be reached
  end

  class B
    def b
      a() #doesn't find method a.
    end
  end
end
</code></pre>

<p>I want to invoke a from b and raise the exception. How can I?</p>
","2988","","<p>Ruby doesn't have nested classes.</p>

<p>The only way to inherit behavior is, well, via inheritance.</p>

<p>If you want your code to work, you need to use a language which supports nested classes. While this is an <em>incredibly</em> neat and powerful feature, I unfortunately know of only two languages that have nested classes:</p>

<ul>
<li><a href=""http://daimi.au.dk/~beta/"">BETA</a>, the language which introduced nested classes (and its successor <a href=""http://daimi.au.dk/~eernst/gbeta/"">gbeta</a>)</li>
<li><a href=""http://NewspeakLanguage.Org/"">Newspeak</a></li>
</ul>

<p>I don't know of any other.</p>

<p>Java has a construct called nested classes, but they have some unfortunate design limitations.</p>

<p>In your example above, it's not the <em>class <code>B</code></em> that is nested inside <code>A</code>, it is the <em>constant</em> <code>B</code> that is nested inside <code>A</code>. Think about this:</p>

<pre><code>C = A::B
</code></pre>

<p>Now, the class is available under <em>two</em> names: <code>A::B</code> and <code>C</code>. It should be immediately obvious that <code>C</code> is global and not nested inside <code>A</code>. (Well, actually, <code>C</code> is nested inside <code>Object</code>, because there aren't really global constants either, but that's beside the point.) But since <code>C</code> and <code>A::B</code> are the same class, it obviously cannot be both nested and not nested. The only logical conclusion is that the <em>class itself</em> isn't nested.</p>

<p>The defining feature of nested classes is that method lookup goes along two dimensions: up the inheritance chain, and outwards through the nesting. Ruby, like 99.9% of all OO languages, only supports the former. (In some sense, nested classes inherit not only the features of their superclass, but also the features of their surrounding class.)</p>
"
"<p>What is the best explanation for Ruby blocks that you can share?</p>

<p>Both usage and writing code that can take a block?</p>
","2988","","<p>Blocks are lightweight literals for anonymous first-class procedures with some annoying limitations. They work the same way in Ruby as they work in pretty much every other programming language, modulo the afore-mentioned limitations, which are:</p>

<ul>
<li>blocks can only appear in argument lists</li>
<li>at most one block can appear in an argument list (and it must be the last argument)</li>
</ul>
"
"<p>I'm new to ruby so I'm probably making a very newbie mistake here but I tried Googling for an answer and couldn't figure out the reason why this code is giving weird behavior. This code is very simple, and uses basic dynamic programming to store intermediate result to a Hash so it is used later to speed up the computation.</p>

<pre><code>$existingSequence = {0 =&gt; 1, 1 =&gt; 2}


def fib(n)
  if $existingSequence.has_key? n
    return $existingSequence.values_at n;
  end

  if n == 0
    return 1;
  elsif n == 1
    return 2;
  end

  $existingSequence[n] = fib(n - 1) + fib(n - 2)
  return $existingSequence[n];
end

n = fib(2)
puts n
</code></pre>

<p>I expect this code to output 3 since that makes a call to fib(1) and fib(0) which returns 2 and 1 respectively, and then added to be 3. But the output is 1 and 2. </p>
","2988","","<p>Slightly off-topic, here's a fun way of doing essentially the same thing, but using the <code>Hash</code> default value mechanism to use the <code>Hash</code> not only for caching, but also for computing the values:</p>

<pre><code>fibs = { 0 =&gt; 0, 1 =&gt; 1 }.tap do |fibs|
  fibs.default_proc = -&gt;(fibs, n) { fibs[n] = fibs[n-1] + fibs[n-2] }
end

fibs[9]
# =&gt; 34
</code></pre>

<p>Note: I didn't come up with this myself, I stole it from <a href=""http://Neeraj.Name/2008/05/10/how-hash-works-with-block-in-ruby.html"" rel=""nofollow"">here</a>.</p>
"
"<p>I'm trying to refactor a superfat model which has quite a few lines of ActsAsStateMachine code related to the states and transitions, and I was hoping to refactor this to a module call CallStates.  </p>

<pre><code>#in lib/CallStates.rb
module CallStates
    module ClassMethods
        aasm_column :status
        aasm_state :state1
        aasm_state :state2
        aasm_state :state3
    end

    def self.included(base)
        base.send(:include, AASM)
        base.extend(ClassMethods)
    end
end
</code></pre>

<p>And then in the model</p>

<pre><code>include CallStates
</code></pre>

<p>My question concerns how to include Module behavior into a Module such that a single Module can be included into the model.  I've tried class_eval do as well to no avail.  Thanks for any insightful thoughts you have on the matter.</p>
","2988","","<p>You include a module into another module by ... including a module into another module, of course!</p>

<pre><code>module Bmodule
  def greet
    puts 'hello world'
  end
end

module Amodule
  include Bmodule
end

class MyClass
  include Amodule
end

MyClass.new.greet # =&gt; hello world
</code></pre>
"
"<pre><code>(2011..1995).to_a 
</code></pre>

<p>returns an array</p>

<pre><code>(Time.now.year.to_i..1995).to_a
</code></pre>

<p>doesn't.  Why?</p>
","2988","","<p>I cannot replicate your results. Both of these expressions return an array.</p>

<p>Of course, since both of the ranges are empty, the expressions will always return an <em>empty</em> array, but that's not relevant to your question.</p>
"
"<p>Consider the following test for <code>rspec</code>:</p>

<pre><code>class RspecTest
  def initialize
  end

  def to_s
    ""foo""
  end
end

describe RspecTest do
  it ""should return foo (to_s)"" do
    RspecTest.new.should == ""foo""
  end

  it ""should return foo (inspect)"" do
    RspecTest.new.inspect == ""foo""
  end
end
</code></pre>

<p>And when tested through <code>rspec</code>:</p>

<pre><code>%: rspec rspec_test.rb 
F.

Failures:

  1) RspecTest should return foo (to_s)
     Failure/Error: RspecTest.new.should == ""foo""
       expected: ""foo""
            got: foo (using ==)
       Diff:
     # ./rspec_test.rb:13:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 0.00059 seconds
2 examples, 1 failure
</code></pre>

<p>So the first test fails, whereas the second test passes. Why is that?</p>
","2988","","<p>The second test passes, because it doesn't test anything. It doesn't contain any expectation (i.e. a call to <code>should</code> or <code>should_not</code>). It <em>cannot</em> fail, because there is nothing <em>to</em> fail.</p>

<p>The first test fails, because you are asserting that an instance of <code>RspecTest</code> is equal to the string <code>'foo'</code>. This cannot possibly be true. How could those two objects possibly be equal if they aren't even the same <em>kind</em> of object?</p>

<p>Judging by the description of the test, you didn't actually mean to test whether the instance of <code>RspecTest</code> is equal to the string <code>'foo'</code>, but rather whether the return value of the instance method <code>to_s</code> is equal to the string <code>'foo'</code>. However, you never call <code>to_s</code> anywhere.</p>

<p>Let's first fix the two obvious problems. Now, we have a test like this:</p>

<pre><code>it 'should return foo (to_s)' do
  RspecTest.new.to_s.should == 'foo'
end

it 'should return foo (inspect)' do
  RspecTest.new.inspect.should == 'foo'
end
</code></pre>

<p>There is some unnecessary duplication there with the two <code>RspecTest.new</code> calls, so let's fix that by simply making <code>RspecTest.new</code> the default subject:</p>

<pre><code>  subject { RspecTest.new }

  it 'should return foo (to_s)' do
    subject.to_s.should == 'foo'
  end

  it 'should return foo (inspect)' do
    subject.inspect.should == 'foo'
  end
</code></pre>

<p>And actually, if you don't supply an explicit subject, then RSpec will walk up the chain of nested <code>describe</code> blocks until it finds a class, and will simply call that class's <code>new</code> method to provide the subject. So, we can just delete the <code>subject</code> declaration:</p>

<pre><code>  it 'should return foo (to_s)' do
    subject.to_s.should == 'foo'
  end

  it 'should return foo (inspect)' do
    subject.inspect.should == 'foo'
  end
</code></pre>

<p>Personally, I prefer to let RSpec provide the example name by itself, so that the example name and the actual example code don't get out of sync, so I'd probably write that more like this:</p>

<pre><code>describe RspecTest do
  describe '#to_s' do
    it { subject.to_s.should == 'foo' }
  end

  describe '#inspect' do
    it { subject.inspect.should == ""foo"" }
  end
end
</code></pre>

<p>Which yields:</p>

<pre><code>RspecTest
  #to_s
    should == ""foo""
  #inspect
    should == ""foo""

Finished in 0.16023 seconds
2 examples, 0 failures
</code></pre>

<p>Last but not least, your initializer isn't actually doing anything, so you don't need it. All together, my version looks like this:</p>

<pre><code>class RspecTest
  def to_s; 'foo' end
end

describe RspecTest do
  describe '#to_s' do
    it { subject.to_s.should == 'foo' }
  end

  describe '#inspect' do
    it { subject.inspect.should == ""foo"" }
  end
end
</code></pre>
"
"<p>When writing about ruby code we use:</p>

<ul>
<li><code>Dog</code> to represent the dog class</li>
<li><code>#bark</code> to represent an instance method </li>
<li><code>.new</code> or <code>::new</code> to represent a class method</li>
</ul>

<p>What's the convention for representing an instance of a class? <code>dog</code> would blend right in with the surrounding regular text.</p>
","2988","","<p>That sounds about right. In Smalltalk, it is customary to use <code>anArray</code>, <code>aString</code> or <code>aDog</code> (even as parameter names in method declarations), which would translate to <code>an_array</code>, <code>a_string</code> or <code>a_dog</code>. However, that's not customary, and might look strange to an experienced Rubyist, who would expect to see <code>ary</code>, <code>str</code> and <code>dog</code>.</p>

<p>Note also that in general, the dot is <em>only</em> used in code <em>examples</em> for actual method <em>calls</em>. When talking <em>about</em> the method, <em>always</em> use <code>#</code> and <code>::</code> for instance methods and singleton methods.</p>
"
"<p>Whats the ruby equivalent of Linq Aggregate method. It works something like this</p>

<pre><code>  var factorial = new[] { 1, 2, 3, 4, 5 }.Aggregate((acc, i) =&gt; acc * i);
</code></pre>

<p>the variable acc is getting accumulated every time the value from the array sequence is passed to the lambda..</p>


","2988","","<p>This is usually called a <em>fold</em> in mathematics as well as pretty much any programming language. It's an instance of the more general concept of a <em>catamorphism</em>. Ruby inherits its name for this feature from Smalltalk, where it is called <code>inject:into:</code> (used like <code>aCollection inject: aStartValue into: aBlock.</code>) So, in Ruby, it is called <code>inject</code>. It is also aliased to <code>reduce</code>, which is somewhat unfortunate, since that usually means something slightly different.</p>

<p>Your C# example would look something like this in Ruby:</p>

<pre><code>factorial = [1, 2, 3, 4, 5].reduce(:*)
</code></pre>

<p>Although one of these would probably be more idiomatic:</p>

<pre><code>factorial = (1..5).reduce(:*)
factorial = 1.upto(5).reduce(:*)
</code></pre>
"
"<p>I'm new to Haskell and Parsec. After reading <a href=""http://book.realworldhaskell.org/read/using-parsec.html"">Chapter 16 Using Parsec of Real World Haskell</a>, a question appeared in my mind: Why and when is Parsec better than other parser generators like Yacc/Bison/Antlr?</p>

<p>My understanding is that Parsec creates a nice DSL of writing parsers and Haskell makes it very easy and expressive. But parsing is such a standard/popular technology that deserves its own language, which outputs to multiple target languages. So when shall we use Parsec instead of, say, generating Haskell code from Bison/Antlr?</p>

<p>This question might go a little beyond technology, and into the realm of industry practice. When writing a parser from scratch, what's the benefit of picking up Haskell/Parsec compared to Bison/Antlr or something similar?</p>

<p>BTW: my question is quite similar to <a href=""http://stackoverflow.com/questions/1364259/antlr-vs-happy-vs-other-parser-generators"">this one</a> but wasn't answered satisfactorily there.</p>
","2988","","<p>One of the main differences between the tools you listed, is that ANTLR, Bison and their friends are parser <em>generators</em>, whereas Parsec is a parser <em>combinator</em> library.</p>

<p>A parser generator reads in a description of a grammar and spits out a parser. It is generally not possible to <em>combine</em> existing grammars into a new grammar, and it is certainly not possible to combine two existing generated parsers into a new parser.</p>

<p>A parser combinator OTOH does nothing <em>but</em> combine existing parsers into new parsers. Usually, a parser combinator library ships with a couple of trivial built-in parsers that can parse the empty string or a single character, and it ships with a set of combinators that take 1 or more parsers and return a new one that, for example, parses the sequence of the original parsers (e.g. you can combine a <code>d</code> parser and an <code>o</code> parser to form a <code>do</code> parser), the alternation of the original parsers (e.g. a <code>0</code> parser and a <code>1</code> parser to a <code>0|1</code> parser) or parses the original parse multiple times (repetetion).</p>

<p>What this means is that you could, for example, take an existing parser for Java and an existing parser for HTML and combine them into a parser for JSP.</p>

<p>Most parser generators don't support this, or only support it in a limited way. Parser <em>combinators</em> OTOH <em>only</em> support this and nothing else.</p>
"
"<p>Is there an easier way of doing this instead of inserting each element into the array manually </p>

<pre><code>stack_of_cards &lt;&lt; Card.new(""A"", ""Spades"", 1)
stack_of_cards &lt;&lt; Card.new(""2"", ""Spades"", 2)
stack_of_cards &lt;&lt; Card.new(""3"", ""Spades"", 3)
stack_of_cards &lt;&lt; Card.new(""4"", ""Spades"", 4)
stack_of_cards &lt;&lt; Card.new(""5"", ""Spades"", 5)
stack_of_cards &lt;&lt; Card.new(""6"", ""Spades"", 6)
stack_of_cards &lt;&lt; Card.new(""7"", ""Spades"", 7)
stack_of_cards &lt;&lt; Card.new(""8"", ""Spades"", 8)
stack_of_cards &lt;&lt; Card.new(""9"", ""Spades"", 9)
stack_of_cards &lt;&lt; Card.new(""10"", ""Spades"", 10)
stack_of_cards &lt;&lt; Card.new(""J"", ""Spades"", 11)
stack_of_cards &lt;&lt; Card.new(""Q"", ""Spades"", 12)
stack_of_cards &lt;&lt; Card.new(""K"", ""Spades"", 13)

stack_of_cards &lt;&lt; Card.new(""A"", ""Hearts"", 1)
stack_of_cards &lt;&lt; Card.new(""2"", ""Hearts"", 2)
stack_of_cards &lt;&lt; Card.new(""3"", ""Hearts"", 3)
stack_of_cards &lt;&lt; Card.new(""4"", ""Hearts"", 4)
stack_of_cards &lt;&lt; Card.new(""5"", ""Hearts"", 5)
stack_of_cards &lt;&lt; Card.new(""6"", ""Hearts"", 6)
stack_of_cards &lt;&lt; Card.new(""7"", ""Hearts"", 7)
stack_of_cards &lt;&lt; Card.new(""8"", ""Hearts"", 8)
stack_of_cards &lt;&lt; Card.new(""9"", ""Hearts"", 9)
stack_of_cards &lt;&lt; Card.new(""10"", ""Hearts"", 10)
stack_of_cards &lt;&lt; Card.new(""J"", ""Hearts"", 11)
stack_of_cards &lt;&lt; Card.new(""Q"", ""Hearts"", 12)
stack_of_cards &lt;&lt; Card.new(""K"", ""Hearts"", 13)

stack_of_cards &lt;&lt; Card.new(""A"", ""Diamonds"", 1)
stack_of_cards &lt;&lt; Card.new(""2"", ""Diamonds"", 2)
stack_of_cards &lt;&lt; Card.new(""3"", ""Diamonds"", 3)
stack_of_cards &lt;&lt; Card.new(""4"", ""Diamonds"", 4)
stack_of_cards &lt;&lt; Card.new(""5"", ""Diamonds"", 5)
stack_of_cards &lt;&lt; Card.new(""6"", ""Diamonds"", 6)
stack_of_cards &lt;&lt; Card.new(""7"", ""Diamonds"", 7)
stack_of_cards &lt;&lt; Card.new(""8"", ""Diamonds"", 8)
stack_of_cards &lt;&lt; Card.new(""9"", ""Diamonds"", 9)
stack_of_cards &lt;&lt; Card.new(""10"", ""Diamonds"", 10)
stack_of_cards &lt;&lt; Card.new(""J"", ""Diamonds"", 11)
stack_of_cards &lt;&lt; Card.new(""Q"", ""Diamonds"", 12)
stack_of_cards &lt;&lt; Card.new(""K"", ""Diamonds"", 13)

stack_of_cards &lt;&lt; Card.new(""A"", ""Clubs"", 1)
stack_of_cards &lt;&lt; Card.new(""2"", ""Clubs"", 2)
stack_of_cards &lt;&lt; Card.new(""3"", ""Clubs"", 3)
stack_of_cards &lt;&lt; Card.new(""4"", ""Clubs"", 4)
stack_of_cards &lt;&lt; Card.new(""5"", ""Clubs"", 5)
stack_of_cards &lt;&lt; Card.new(""6"", ""Clubs"", 6)
stack_of_cards &lt;&lt; Card.new(""7"", ""Clubs"", 7)
stack_of_cards &lt;&lt; Card.new(""8"", ""Clubs"", 8)
stack_of_cards &lt;&lt; Card.new(""9"", ""Clubs"", 9)
stack_of_cards &lt;&lt; Card.new(""10"", ""Clubs"", 10)
stack_of_cards &lt;&lt; Card.new(""J"", ""Clubs"", 11)
stack_of_cards &lt;&lt; Card.new(""Q"", ""Clubs"", 12)
stack_of_cards &lt;&lt; Card.new(""K"", ""Clubs"", 13)
</code></pre>
","2988","","<p>First off: why do you represent the rank and the value of a card separately? Is there ever an instance where, say, a Jack does <em>not</em> have the value 11? For example, why do you have</p>

<pre><code>Card.new(""7"", ""Spades"", 7)
</code></pre>

<p>instead of just</p>

<pre><code>Card.new(7, ""Spades"")
</code></pre>

<p>and is there ever an instance where you would have</p>

<pre><code>Card.new(""7"", ""Spades"", 42)
</code></pre>

<p>If not, then those two should be packaged together into an object.</p>

<p>Also, why are the suits represented as strings and not as <code>Suit</code>s or at least as symbols?</p>

<p>I'd probably do something like this:</p>

<pre><code>Rank = Struct.new(:rank, :value) do
  def to_s; rank end
  alias_method :inspect, :to_s
end

Card = Struct.new(:rank, :suit) do
  def to_s; ""#{rank} of #{suit.capitalize}"" end
  alias_method :inspect, :to_s
end

ranks = %w[Ace 2 3 4 5 6 7 8 9 10 Jack Queen King].map.with_index {|rank, value|
  Rank.new(rank, value + 1)
}

suits = [:spades, :hearts, :diamonds, :clubs]

deck = suits.product(ranks).map {|suit, rank| Card.new(rank, suit) }
</code></pre>
"
"<p>Currently I'm reading ""The Well-Grounded Rubyist"" by David A. Black, and I stuck at 10.9 chapter (Enumerators and the next dimension of enumerability). My question is about <code>yield</code> method.
What is the meaning of the word <code>yield</code> in Ruby context? My native language is Russian, and Google Translate shows me a bunch of translation variants, that are confusing me. There are some of them: <em>give</em>, <em>bring</em>, <em>surrender</em> (<em>give up</em>), <em>produce</em>, <em>agree</em>, <em>comply</em> and many others.</p>

<p><strong>UPD:</strong> please, pay attention to the fact, that I'm trying to understand the meaning of the  <a href=""http://rubydoc.info/stdlib/core/1.9.2/Enumerator/Yielder#yield-instance_method"" rel=""nofollow"">Enumerator::Yielder#yield</a> method, but not <code>yield</code> keyword itself.</p>

<p><strong>UPD_2:</strong> I've found interesting article about Enumerators: ""<a href=""http://www.michaelharrison.ws/weblog/?p=163"" rel=""nofollow"">Lazy Enumerators in Ruby</a>"".</p>
","2988","","<p>The word <em>yield</em> doesn't really have any special meaning in the context of Ruby. It means the same thing as it means in every other programming language, or in programming and computer science in general.</p>

<p>It is usually used when some kind of execution context <em>surrenders</em> control flow to a different execution context. For example, in Unix, there is a <code>sched_yield</code> function which a thread can use to give up the CPU to another thread (or process). With coroutines, the term <code>yield</code> is generally used to transfer control from one coroutine to another. In C#, there is a <code>yield</code> keyword, which is used by an iterator method to give up control to the <em>iterating</em> method.</p>

<p>And in fact, this last usage is exactly identical to the usage of the <a href=""http://RubyDoc.Info/stdlib/core/1.9.2/Enumerator/Yielder#yield-instance_method""><code>Enumerator::Yielder#yield</code></a> method in Ruby, which you were asking about. Calling this method will suspend the enumerator and give up control to the enumerating method.</p>

<p>Example:</p>

<pre><code>fibs = Enumerator.new do |y|
  a, b = 0, 1
  y.yield a
  loop do
    y.yield b
    a, b = b, a + b
  end
end

puts fibs.next #  0
puts fibs.next #  1
puts fibs.next #  1
puts fibs.next #  2
puts fibs.next #  3
puts fibs.next #  5
puts fibs.next #  8
puts fibs.next # 13
puts fibs.next # 21
</code></pre>

<p>As you see, there is an infinite loop. Obviously, if this loop just ran on its own, it wouldn't be of much use. But since every time it hits the <code>yield</code> method, it gives up control until it is called again, this will produce the Fibonacci numbers one by one, essentially representing an infinitely long list of all Fibonacci numbers.</p>

<p>There is another method, <a href=""http://RubyDoc.Info/stdlib/core/1.9.2/Fiber#yield-class_method""><code>Fiber.yield</code></a>, which serves a similar purpose. (In fact, I already described it above, because <code>Fiber</code> is just Ruby's name for coroutines.) Inside a <code>Fiber</code>, you call <code>Fiber.yield</code> to give up control back to the execution context that originally gave control to you.</p>

<p>Lastly, there is the <code>yield</code> keyword, which is used inside a method body to give up control to the block that was passed into the method.</p>

<p>Note that, at least in the <code>Enumerator</code> case (i.e. the first example), you can additionally interpret <code>yield</code> as <em>to produce</em>, since the <code>Enumerator</code> produces a new value, every time it calls <code>yield</code>.</p>
"
"<p>I'm trying to run the basic starter example for using rspec found here: <a href=""http://rspec.info/"">http://rspec.info/</a>.  </p>

<p><strong>When I type in the command prompt</strong></p>

<blockquote>
  <p>ruby bowling_spec.rb</p>
</blockquote>

<p>I get the following error</p>

<p><strong>Test</strong></p>

<pre><code># bowling_spec.rb
require 'bowling'

describe Bowling, ""#score"" do
  it ""returns 0 for all gutter game"" do
    bowling = Bowling.new
    20.times { bowling.hit(0) }
    bowling.score.should == 0
  end
end
</code></pre>

<p><strong>Code</strong></p>

<pre><code># bowling.rb
class Bowling
  def hit(pins)
  end

  def score
    0
  end
end
</code></pre>

<p><strong>Error Message</strong></p>

<blockquote>
  <p>internal:lib/rubygems/custom_require:29:in <code>require': no such file to load --
  bowling (LoadError)
          from &lt;internal:lib/rubygems/custom_require&gt;:29:in</code>require'
          from bowling_spec.rb:2:in `'</p>
</blockquote>
","2988","","<p>As a general hint for solving such error messages: in 99% of all cases, when a computer tells you it cannot find something, it is because that thing doesn't exist. In 99% of the rest of the cases, that thing isn't where the computer expects it to be.</p>

<p>The first one is obviously not the case here, since <code>bowling.rb</code> clearly <em>does</em> exist. However, your problem squarely falls into those second 99%: <code>require</code> loads a file file from Ruby's <code>$LOAD_PATH</code>. But you didn't put <code>bowling.rb</code> into a directory on Ruby's <code>$LOAD_PATH</code>, you simply put it in the same directory as <code>bowling_spec.rb</code>.</p>

<p>One obvious solution would be to add that directory to Ruby's <code>$LOAD_PATH</code>. Obvious, but&nbsp;&ndash; in this case&nbsp;&ndash; wrong.</p>

<p>If you want to load a file relative to the position of the currently executing file, you need to use <code>require_relative</code>. This is the <em>right</em> solution in this case.</p>

<p>Note that, in order for the <code>describe</code> method to even <em>exist</em>, let alone work, you would also need to either add <code>require 'rspec'</code> to your spec file, or run it using the RSpec runner (i.e. <code>rspec bowling_spec.rb</code> instead of <code>ruby bowling_spec.rb</code>), but this is completely unrelated to the problem you are seeing.</p>
"
"<p>I want to download the source code of NeatBeans IDE 6.9. Is its possible to so and if it is how to do that. I tried to search but could not find the exact point.</p>
","2988","","<p>Instructions for how to get the NetBeans sources are on the NetBeans website: <a href=""http://NetBeans.org/community/sources/"" rel=""nofollow"">http://NetBeans.org/community/sources/</a></p>
"
"<p>Is it an intended design philosophy? For example if I have a class ""Greeter"" defined as follow:</p>

<pre><code>1: class Greeter
2:   def say_hello
3:     puts ""Hello""
4:   end
5: 
6:   puts ""Goodbye!""
7: 
8: end
</code></pre>

<p>When I execute the file:</p>

<pre><code>$ ruby greeter.rb
Goodbye!
$
</code></pre>

<p>In other languages (e.g. Java, PHP) I will get an error about line 6 is invalid. Ruby's way is somehow different to what I know about OOP, or is it me misunderstand the OOP concept?</p>
","2988","","<p>I don't understand what this has to do OOP. OOP is all about message sends, and <code>puts ""Goodbye!""</code> <em>is</em> a message send. It sends the message <code>:puts</code> with the single argument <code>""Goodbye!""</code> to <code>self</code>.</p>

<p>Indeed, the thing that's <em>not</em> OOP is line 2, which you don't seem to have a problem with, since line 2 is not a message send.</p>

<p>Let's look at it from the opposite view: If the content of a class body were <em>not</em> executed, then how would you define methods? You are obviously not surprised that line 2 gets executed, so why should line 6 be treated any different? That would be horribly inconsistent!</p>
"
"<p>Is there a way to prevent force push into a branch or repository?   </p>

<p>I want to stop important branches from having their history rewritten either accidentally or intentionally.  How do people deal with this in larger development teams?</p>

<p>Ideally, in my view, would possible to lock few branches per repository, and prevent everyone, other than the repository owner from doing a force push into them.</p>
","2988","","<p>This is easy to do with Git with a <code>pre-receive</code> hook. Of course, this requires that you are actually <em>able</em> to install hooks, and for obvious reasons, GitHub doesn't allow you to upload arbitrary executable files to run on their servers :-)</p>

<p>In general, the workflow with Git or really any distributed version control system, is that you don't allow other people to push to your repository. Instead, you pull from theirs. This requires a much lower level of trust. So, this would be workaround number 1: don't let them push, have them fork and then pull from them. That way, you can control what goes into your repository.</p>

<p>Another workaround would be to set up your own staging repository on a server you own, where you can install your own Git hooks. You can configure a <code>pre-receive</code> hook which denies pushing if it's not a fast-forward and <code>post-receive</code> hook which automatically forwards all pushes to GitHub. Of course, this means that you lose many of the benefits of using GitHub in the first place.</p>

<p>As a third workaround, you could use multiple repositories. This is a combination of the two other approaches: have one repository that your collaborators can push to and another one that only you have access to, that you pull into from the first repository.</p>

<p>At any rate, you should file a feature request with GitHub (especially if you are a paying customer!) since this seems to be a useful feature.</p>
"
"<p>I am trying to install the yr.no weather api gem from <a href=""http://irbno.rubyforge.org/yr/doc/"" rel=""nofollow"">here</a> but am having problems adding the repository. </p>

<p>I tried <code>gem sources -a <a href=""http://irbno.rubyforge.org/"" rel=""nofollow"">http://irbno.rubyforge.org/</a></code> but this results in the following error:</p>

<pre><code>Error fetching http://irbno.rubyforge.org/: 
bad response Not Found 404 (http://irbno.rubyforge.org/specs.4.8.gz)
</code></pre>

<p>I am on Windows XP with Ruby 1.9.2 and have updated to the latest version of Rubygems (1.5.2)</p>

<p><code>ruby -v</code> returns</p>

<pre><code>`ruby 1.9.2p0 (2010-08-18) [i386-mingw32]`
</code></pre>

<p>whilst <code>gem sources -l</code> returns</p>

<pre><code>*** CURRENT SOURCES ***

http://rubygems.org/
http://gemcutter.org
</code></pre>

<p>Any thoughts? Is this a problem with the repository or my setup?</p>
","2988","","<p>The correct URI for the RubyForge RubyGems Repository was <code>http://Gems.RubyForge.Org/</code>, not <code>http://IrBNo.RubyForge.Org/</code>. However, the RubyForge RubyGems repository was shut down a long time ago and migrated to RubyGems.Org, so that URI is now simply a redirect to <code>http://RubyGems.Org/</code> (as is <code>http://GemCutter.Org/</code> BTW).</p>

<p>Since you already have that repository URI in your RubyGems sources, you don't need to do anything.</p>

<p>May I ask where you found the information that <code>http://IrBNo.RubyForge.Org/</code> was the correct URI for the RubyForge RubyGems Repository? You should inform those people that their information is wrong (<code>http://IrBNo.RubyForge.Org/</code> never was the URI of the RubyForge RubyGems Repository, it always was <code>http://Gems.RubyForge.Org/</code>) and outdated (the default RubyGems Repository moved to <code>http://GemCutter.Org/</code> and then to <code>http://RubyGems.Org/</code> a long time ago).</p>

<p>Not that any of this really matters, since as far as I can tell, there was never a Gem released for this project anyway.</p>
"
"<p>I have been watching Dave Thomas' screencasts ""The Ruby Object Model and Metaprogramming"". He  mentions 7 hook methods provided by Module and Class.</p>

<pre><code>inherited
append_features
included
extend_object
extended
initialize_copy
const_missing
</code></pre>

<p>Is anyone aware of any further ruby hook methods?</p>
","2988","","<pre><code>method_missing
const_missing
respond_to_missing?
Kernel.trace_var
at_exit
BEGIN
END
</code></pre>
"
"<p>I have the following <code>Array = [""Jason"", ""Jason"", ""Teresa"", ""Judah"", ""Michelle"", ""Judah"", ""Judah"", ""Allison""]</code></p>

<p>How do I produce a count for each <strong>identical element</strong>? </p>

<pre><code>Where:
""Jason"" = 2, ""Judah"" = 3, ""Allison"" = 1, ""Teresa"" = 1, ""Michelle"" = 1?
</code></pre>

<p>or <strong>produce a hash</strong> Where:</p>

<p>Where:
    hash = { ""Jason"" => 2, ""Judah"" => 3, ""Allison"" => 1, ""Teresa"" => 1, ""Michelle"" => 1 }</p>
","2988","","<p>There's actually a data structure which does this: <code>MultiSet</code>.</p>

<p>Unfortunately, there is no <code>MultiSet</code> implementation in the Ruby core library or standard library, but there are a couple of implementations floating around the web.</p>

<p>This is a great example of how the choice of a data structure can simplify an algorithm. In fact, in this particular example, the algorithm even <em>completely</em> goes away. It's literally just:</p>

<pre><code>Multiset.new(*names)
</code></pre>

<p>And that's it. Example, using <a href=""https://GitHub.Com/Josh/Multimap/"">https://GitHub.Com/Josh/Multimap/</a>:</p>

<pre><code>require 'multiset'

names = %w[Jason Jason Teresa Judah Michelle Judah Judah Allison]

histogram = Multiset.new(*names)
# =&gt; #&lt;Multiset: {""Jason"", ""Jason"", ""Teresa"", ""Judah"", ""Judah"", ""Judah"", ""Michelle"", ""Allison""}&gt;

histogram.multiplicity('Judah')
# =&gt; 3
</code></pre>

<p>Example, using <a href=""http://maraigue.hhiro.net/multiset/index-en.php"">http://maraigue.hhiro.net/multiset/index-en.php</a>:</p>

<pre><code>require 'multiset'

names = %w[Jason Jason Teresa Judah Michelle Judah Judah Allison]

histogram = Multiset[*names]
# =&gt; #&lt;Multiset:#2 'Jason', #1 'Teresa', #3 'Judah', #1 'Michelle', #1 'Allison'&gt;
</code></pre>
"
"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>

<p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>

<p>Or this is rather matter of resources put into the V8 project by Google. </p>
","2988","","<blockquote>
  <p>What blocks Ruby, Python to get Javascript V8 speed?</p>
</blockquote>

<p>Nothing.</p>

<p>Well, okay: money. (And time, people, resources, but if you have money, you can buy those.)</p>

<p>V8 has a team of brilliant, highly-specialized, highly-experienced (and thus highly-paid) engineers working on it, that have decades of experience (I'm talking individually&nbsp;&ndash; collectively it's more like centuries) in creating high-performance execution engines for dynamic OO languages. They are basically the same people who also created the Sun HotSpot JVM (among many others).</p>

<p>Lars Bak, the lead developer, has been literally working on VMs for 25 years (and all of those VMs have lead up to V8), which is basically his entire (professional) life. Some of the people writing Ruby VMs aren't even 25 years old.</p>

<blockquote>
  <p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. inline caching) V8 engine has?</p>
</blockquote>

<p>Given that at least IronRuby, JRuby, MagLev, MacRuby and Rubinius have either monomorphic (IronRuby) or polymorphic inline caching, the answer is obviously no.</p>

<p>Modern Ruby implementations already do a great deal of optimizations. For example, for certain operations, Rubinius's <code>Hash</code> class is faster than YARV's. Now, this doesn't sound terribly exciting until you realize that Rubinius's <code>Hash</code> class is implemented in 100% pure Ruby, while YARV's is implemented in 100% hand-optimized C.</p>

<p>So, at least in some cases, Rubinius can generate better code than GCC!</p>

<blockquote>
  <p>Or this is rather matter of resources put into the V8 project by Google.</p>
</blockquote>

<p>Yes. Not just Google. The lineage of V8's source code is 25 years old now. The people who are working on V8 also created the Self VM (to this day one of the fastest dynamic OO language execution engines ever created), the Animorphic Smalltalk VM (to this day one of the fastest Smalltalk execution engines ever created), the HotSpot JVM (the fastest JVM ever created, probably the fastest VM period) and OOVM (one of the most efficient Smalltalk VMs ever created).</p>

<p>In fact, Lars Bak, the lead developer of V8, worked on <em>every single one</em> of those, plus a few others.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/2291470/why-is-the-finalize-method-in-java-lang-object-protected"">Why is the finalize() method in java.lang.Object &ldquo;protected&rdquo;?</a>  </p>
</blockquote>



<p>The finalize method is defined with a protected scope, then how is it possible that some other object such as the garbage collector is able to call it.</p>
","2988","","<p>Because the garbage collector is part of the language specification and thus can do whatever the language specification says it can.</p>
"
"<p>I am parsing a comma separated string into an array.  In C# I have:</p>

<pre><code>var someArray = someString.Split(
    new char[] { ',' },
    StringSplitOptions.RemoveEmptyEntries);

foreach (var something in someArray)
{
    SomeList.Add(something.Trim().ToLower());
}
</code></pre>

<p>Here is what I have so far in Ruby using Rails .blank?</p>

<pre><code>some_array = some_string.split(',').each { |something| something.strip.downcase }
some_array.delete_if { |something| something.blank? }
</code></pre>

<p>Is there a cleaner way to do this?</p>
","2988","","<pre><code>some_string.split(',').map(&amp;:strip).map(&amp;:downcase).reject(&amp;:empty?)
</code></pre>

<p>This creates three intermediary arrays, and traverses all of three of them, but I wouldn't generally worry about that unless you can actually prove via performance profiling that it is a serious bottleneck.</p>

<p>Otherwise you'd have to do something like</p>

<pre><code>some_string.split(',').inject([]) {|ary, str|
  ary.tap { unless (str = str.strip.downcase).empty? then ary &lt;&lt; str end }
}
</code></pre>

<hr>

<p>Sidenote: I'd probably have written that C# code more like this:</p>

<pre><code>var someList = new List&lt;string&gt;(
    from s in someString.Split(
        new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries)
    select s.Trim().ToLower());
</code></pre>
"
"<p>How would you achieve this route in rails 3 and the last stable version 2.3.9 or soish?</p>

<h1>Explained</h1>

<p>I don't really care about the followers action. What I'm really after is how to create '!#' in the routing.</p>

<p>Also, What's the point of this. Is it syntax or semantics?</p>
","2988","","<p>The part after the <code>#</code> in a URI is called the <em>fragment identifier</em>, and it is interpreted by the client, not the server. You cannot route this, because it will never leave the browser.</p>
"
"<p>I'm trying to make an array of zip codes.</p>

<pre><code>array = [07001, 07920]
</code></pre>

<p>This returns :</p>

<pre><code>array = [07001, 07920]
                  ^
    from (irb):12
    from :0
</code></pre>

<p>Never seen this before. Any workarounds?</p>
","2988","","<p>Numbers that start with <code>0</code> are assumed to be in octal format, just like numbers that start with <code>0x</code> are assumed to be in hexadecimal format. Octal digits only go from <code>0</code> to <code>7</code>, so <code>9</code> is simply not legal in an octal number.</p>

<p>The easiest workaround would be to simply write the numbers in decimal format: <code>07001</code> in octal is the same as <code>3585</code> in decimal (I think). Or did you mean to write the numbers in decimal? Then, the easiest workaround is to leave off the leading zeroes: <code>07001</code> is the same as <code>7001</code> anyway.</p>

<p>However, you mention that you want an array of ZIP codes. In that case, the correct solution would be to use, well, an array of ZIP codes instead of an array of integers, since ZIP codes aren't integers, they are ZIP codes.</p>
"
"<p>I want to use NodeJS or Narwhal to create a JS utility which takes an argument, like so:</p>

<pre><code>$ node myscript.js http://someurl.com/for/somefile.js
</code></pre>

<p>or</p>

<pre><code>$ js myscript.js http://someurl.com/for/somefile.js
</code></pre>

<p>but I'm wondering how I can get that argument within my script, or if that is even possible atm?</p>

<p>Thanks.</p>
","2988","","<p>On Node.JS, that information is available in <a href=""http://NodeJS.Org/docs/v0.4.2/api/process.html#process.argv"" rel=""nofollow""><code>process.argv</code></a>.</p>
"
"<p>I built this method to find the longest word in an array, but I'm wondering if there's a better way to have done it. I'm pretty new to Ruby, and just did this as an exercise for learning the <code>inject</code> method.</p>

<p>It returns either the longest word in an array, or an array of the equal longest words.</p>

<pre><code>class Array
  def longest_word
    # Convert array elements to strings in the event that they're not.
    test_array = self.collect { |e| e.to_s }
    test_array.inject() do |word, comparison|
      if word.kind_of?(Array) then
        if word[0].length == comparison.length then
          word &lt;&lt; comparison
        else
          word[0].length &gt; comparison.length ? word : comparison
        end
      else
        # If words are equal, they are pushed into an array
        if word.length == comparison.length then
          the_words = Array.new
          the_words &lt;&lt; word
          the_words &lt;&lt; comparison
        else
          word.length &gt; comparison.length ? word : comparison
        end
      end
    end
  end
end
</code></pre>
","2988","","<pre><code>module Enumerable
  def longest_word
    (strings = map(&amp;:to_s)).
      zip(strings.map(&amp;:length)).
      inject([[''],0]) {|(wws, ll), (w, l)|
        case  l &lt;=&gt; ll
        when -1 then [wws, ll] 
        when  1 then [[w], l]
        else         [wws + [w], ll]
        end
      }.first
  end
end
</code></pre>

<p>This method only depends on generic <code>Enumerable</code> methods, there's nothing <code>Array</code> specific about it, therefore we can pull it up into the <code>Enumerable</code> module, where it will also be available for <code>Set</code>s or <code>Enumerator</code>s, not just <code>Array</code>s.</p>
"
"<p>Was curious, but are any NoSQL DBMS written in Ruby? </p>

<p>And if not, would it be unwise to create one in Ruby?</p>
","2988","","<blockquote>
  <p>Was curious, but are any NoSQL DBMS written in Ruby?</p>
</blockquote>

<p>In 2007, <a href=""http://AnthonyEden.Com/"" rel=""nofollow"">Anthony Eden</a> played around with <a href=""http://RDDB.RubyForge.Org/"" rel=""nofollow"">RDDB</a>, a CouchDB-inspired document-oriented database. He still keeps <a href=""https://GitHub.Com/AEden/RDDB/"" rel=""nofollow"">a copy of the code</a> in his GitHub account.</p>

<p>I vaguely remember that at or around the same time, someone else was also playing around with a database in Ruby. I think it was either inspired by or a reaction to RDDB.</p>

<p>Last but not least, there is the <a href=""http://RubyDoc.Info/stdlib/pstore/frames/"" rel=""nofollow"">PStore library</a> in the stdlib, which&nbsp;&ndash; depending on your definition&nbsp;&ndash; may or may not count as a database.</p>

<blockquote>
  <p>And if not, would it be unwise to create one in Ruby?</p>
</blockquote>

<p>The biggest problem I see in Ruby are its concurrency primitives. Threads and locks are <em>so</em> 1960s. If you want to support multiple concurrent users, then you obviously need concurrency, although if you want to build an embedded in-process database, then this is much less of a concern.</p>

<p>Other than that, there are some not-so-stellar implementations of Ruby, but that is not a limitation of Ruby but of those particular implementations, and it applies to pretty much every other programming language as well. Rubinius (especially the current development trunk, which adds Ruby 1.9 compatibility and removes the Global Interpreter Lock) and JRuby would both be fine choices.</p>

<p>As an added bonus, Rubinius comes with a built-in actors library for concurrency and JRuby gives you access to e.g. Clojure's concurrency libraries or the Akka actors library.</p>

<p>Performance isn't really much of a concern, I think. Rubinius's <code>Hash</code> class, which is written in 100% pure Ruby, performs comparably to YARV's <code>Hash</code> class, which is written in 100% hand-optimized C. This shows you that Ruby code, at least when it is carefully written, can be just as fast as C, especially since databases tend to be long-running and thus Rubinius's or JRuby's (and in the latter case specifically also the JVM's) dynamic optimizers (which C compilers typically do <em>not</em> have) can <em>really</em> get to work.</p>
"
"<p>I want to execute a method every 5minutes, i implemented whenever for ruby (cron). But it does not work i think my method is not accessible. 
The method i want de execute is placed in a model. I should think i have to make that method static so i can access it with ""Mymodel.MyMethod"". But i can not find the right syntax or maybe i am looking in the wrong place.</p>

<p>Schedule.rb</p>

<pre><code>every 5.minutes do
  runner ""Ping.checkPings""
end
</code></pre>

<p>Ping.rb</p>

<pre><code>def checkPings      
  gate =  Net::Ping::External.new(""10.10.1.1"")
  @monitor_ping = Ping.new()

  if gate.ping?        
    MonitorPing.WAN = true
  else 
    MonitorPing.WAN = false
  end

  @monitor_ping.save      
end
</code></pre>
","2988","","<p>You cannot have static methods in Ruby. In Ruby, all methods are dynamic. There is only one kind of method in Ruby: dynamic instance methods.</p>

<p>Really, the term <em>static method</em> is a misnomer anyway. A static method is a method which is not associated with any object and which is not dispatched dynamically (hence ""static""), but those two are pretty much the <em>definition</em> of what it means to be a ""method"". We already have a perfectly good name for this construct: a <em>procedure</em>.</p>
"
"<p>In the Ruby 1.9.2 Core API Reference, it says that Object's parent is BasicObject. But then it says that BasicObject's parent is Object. How does this work? What is going on here?</p>
","2988","","<p>That must be a bug in the documentation. Conceptually, <code>BasicObject</code> doesn't have a parent, practically, this is represented by its parent being <code>nil</code>. (Note: <code>nil</code>, the <em>object</em>, not <code>NilClass</code>.)</p>

<p>Note that on <a href=""http://RubyDoc.Info/stdlib/core/BasicObject/"" rel=""nofollow"">RubyDoc.Info</a>, it is correctly shown as having no parent.</p>
"
"<p>I lifted the following example from <a href=""http://blog.hasmanythrough.com/2008/6/20/recursive-lambda"" rel=""nofollow"">Josh Susser</a></p>

<pre><code>  def strip_accents params
    thunk = lambda do |key,value|
      case value
        when String then value.remove_accents!
        when Hash   then value.each(&amp;thunk)
      end
    end
    params.each(&amp;thunk)
  end
</code></pre>

<p>when I put it in the the rails console (irb), and call it with a hash, I get the following:</p>

<pre><code>ruby-1.9.2-p136 :044 &gt; `ruby --version`
 =&gt; ""ruby 1.9.2p136 (2010-12-25 revision 30365) [i686-linux]\n""
ruby-1.9.2-p136 :045 &gt; strip_accents({:packs=&gt;{:qty=&gt;1}})
ArgumentError: wrong number of arguments (1 for 2)
        from (irb):32:in `block in strip_accents'
        from (irb):37:in `each'
        from (irb):37:in `strip_accents'
        from (irb):45
        from /longpathtrimedforclarity/console.rb:44:in `start'
        from /longpathtrimedforclarity/console.rb:8:in `start'
        from /longpathtrimedforclarity/commands.rb:23:in `&lt;top (required)&gt;'
        from script/rails:6:in `require'
        from script/rails:6:in `&lt;main&gt;'
</code></pre>

<p>I understand that lambdas check arity, but I see two arguments in the lambda definition.  If I change <code>lambda do</code> to <code>Proc.new do</code>, The code executes, and I get the expected result.</p>

<p>Josh's example is from 2008, so I'm assuming this is a difference in Ruby 1.8 and 1.9.  What's going on here?</p>
","2988","","<p><code>Hash#each</code>, just like every other <code>#each</code> method, yields <em>one</em> argument to the block. In the case of <code>Hash#each</code>, that one argument is a two-element array consisting of the key and the value.</p>

<p>So, <code>Hash#each</code> yields <em>one</em> argument, but your lambda has <em>two</em> mandatory parameters, therefore you get an arity error.</p>

<p>It works with blocks, since blocks are less strict about their arguments, and in particular, if a block has multiple parameters, but only gets one argument, it will try to deconstruct the argument as if it had been passed in with a splat.</p>

<p>There are two kinds of <code>Proc</code>s: lambdas and non-lambdas (confusingly, the latter are usually also called <code>Proc</code>s). Lambdas behave like methods in terms of how the <code>return</code> keyword behaves and (more importantly, for this case) how they bind arguments, whereas non-lambda <code>Proc</code>s behave like blocks in terms of how <code>return</code> and argument binding work. That's why <code>Proc.new</code> (which creates a non-lambda <code>Proc</code>) works, but <code>lambda</code> (which obviously creates a lambda) doesn't.</p>

<p>You can check whether a <code>Proc</code> is a lambda or not by calling <code>Proc#lambda?</code>.</p>

<p>If you want to deconstruct the argument, you will have to do so explicitly, the same way you would when you define a method:</p>

<pre><code>lambda do |(key, value)|
</code></pre>

<p>And, yes, a more sane approach to argument binding for blocks, <code>Proc</code>s and lambdas <em>was</em> one of the major backwards-incompatible changes in Ruby 1.9.</p>
"
"<p>Can I return nothing in ruby?</p>

<p><em>Just for educational purpose</em></p>

<p>For example:</p>

<pre><code>myarray = [1,2,3]
myarray &lt;&lt; some_method

def some_method
  if Date.today.day &gt; 15
    return ""Trololo""
  else
    return __NOTHING__
  end
end
</code></pre>

<p>So if today is 11'th March <code>myarray</code> won't add new item. I don't want <code>nil</code> - because <code>nil</code> is not nothing :)</p>

<p>And I understand, that I can use <code>if | unless</code> statement like <code>myarray &lt;&lt; some_method if some_method</code> etc. I want to understand can I return <strong>nothing</strong> or every time in ruby I am returning <strong>something</strong> (least I can get is Nil Object)</p>
","2988","","<p>Basically, what you are looking for is a <em>statement</em>. But Ruby doesn't have statements, only <em>expressions</em>. <em>Everything</em> is an expression, i.e. everything returns a value.</p>
"
"<p>I have the following code I am using to turn a hash collection into methods on my classes (somewhat like active record). The problem I am having is that my setter is not working. I am still quite new to Ruby and believe I've gotten myself turned around a bit. </p>

<pre><code>class TheClass
  def initialize
    @properties = {""my hash""}
    self.extend @properties.to_methods
  end
end

class Hash
  def to_methods
    hash = self
    Module.new do
      hash.each_pair do |key, value|
        define_method key do
          value
        end
        define_method(""#{key}="") do |val|
          instance_variable_set(""@#{key}"", val)
        end
      end
    end
  end
end
</code></pre>

<p>The methods are created and I can read them on my class but setting them does not work.</p>

<pre><code>myClass = TheClass.new
item = myClass.property # will work.
myClass.property = item # this is what is currently not working.
</code></pre>
","2988","","<p>It works just fine for me (after fixing the obvious syntax errors in your code, of course):</p>

<pre><code>myClass.instance_variable_get(:@property) # =&gt; nil
myClass.property = 42
myClass.instance_variable_get(:@property) # =&gt; 42
</code></pre>

<p>Note that in Ruby instance variables are always private and you never define a getter for them, so you cannot actually look at them from the outside (other than via reflection), but that doesn't mean that your code doesn't work, it only means that you cannot see that it works.</p>
"
"<p>Is there equivalent of python <code>__getattr__</code> in ruby (for finding methods at least)?</p>

<pre><code>class X(object):
    def __getattr__(self, name):
        return lambda x: print(""Calling "" + name + "": "" + x)

x = X()
x.some_method(""some args"")
</code></pre>

<p>So it could be something like:</p>

<pre><code>class X
    # .. ??? ..
    def default_action(method_name, x)
        puts ""Calling {method_name}: {x}""
    end
end

x = X.new()
x.some_method(""some args"")
</code></pre>
","2988","","<p>Yes. If an object does not respond to a message, Ruby will send a <code>method_missing</code> message with the message selector and the arguments to the receiver:</p>

<pre><code>class X
  def method_missing(selector, *args, &amp;blk)
    puts ""The message was #{selector.inspect}.""
    puts ""The arguments were #{args.map(&amp;:inspect).join(', ')}.""
    puts ""And there was #{blk ? 'a' : 'no'} block.""
    super
  end
end

x = X.new
x.some_method('some args', :some_other_args, 42)
# The message was :some_method.
# The arguments were ""some args"", :some_other_args, 42.
# And there was no block.
# NoMethodError: undefined method `some_method'

x.some_other_method do end
# The message was :some_other_method.
# The arguments were .
# And there was a block.
# NoMethodError: undefined method `some_other_method'
</code></pre>

<p>Note that if you define <code>method_missing</code>, you should also define <code>respond_to_missing?</code> accordingly. Otherwise you get strange behavior like this:</p>

<pre><code>x.respond_to?(:foo) # =&gt; false
x.foo               # Works. Huh?
</code></pre>

<p>In this particular case, we handle <em>all</em> messages, therefore we can simply define it as follows:</p>

<pre><code>class X; def respond_to_missing?(*) true end end

x.respond_to?(:foo) # =&gt; true
</code></pre>
"
"<p>I have always wondered why Douglas Crockford keeps comparing JavaScript to Scheme. Yes JS was intended to be Scheme by its designer; but besides the first class function support and the lexical scoping (broken), what features does JS have in common with Scheme that makes it ""Lisp in C's Clothing""?</p>
","2988","","<p>Another thing that comes to mind is the pervasive use of a single ubiquitous data structure throughout the language and the libraries: <em>cons lists</em> in the case of Scheme, <em>maps</em> (called <em>objects</em>) in the case of ECMAScript.</p>

<p>Then there is not just the fact that ECMAScript has first-class procedures, but that those procedures are the <em>only</em> abstraction mechanism. (Or more precisely <em>encapsulation</em> mechanism.)</p>
"
"<p>I'm using the Java Twitter4J library in a Scala project.</p>

<p>I'm calling the method</p>

<pre><code>twitter.getFriendsStatuses()
</code></pre>

<p>This method returns a list of twitter4j.User objects containing statuses.</p>

<p>I try to iterate over them and it goes in an infinite loop over the first element:</p>

<pre><code>val users:List[User] = twitter.getFriendsStatuses(userId, paging.getSinceId())
while( users.iterator.hasNext() ) {
  println(users.iterator.next().getStatus())
}
</code></pre>

<p>Any ideas?</p>
","2988","","<p>What's wrong with just</p>

<pre><code>users.foreach(user =&gt; println(user.getStatus()))
</code></pre>

<p>or even</p>

<pre><code>users.map(_.getStatus()).foreach(println _)
</code></pre>

<p>or, if you're worried about traversing the collection twice</p>

<pre><code>users.view.map(_.getStatus()).foreach(println _)
</code></pre>

<p>IOW: Why do you want to manage the iteration yourself (and possibly make mistakes), when you can just let someone else do the work for you?</p>
"
"<pre><code>numbers = 1..10
print numbers.map {|x| x*x}

# I want to do:
square = {|x| x*x}
print numbers.map square
</code></pre>

<p>Because the syntax is more concise. I there a way to do this without having to use <code>def</code> + <code>end</code>?</p>
","2988","","<p>You cannot assign a block to a variable because a block isn't really an object per se.</p>

<p>What you <em>can</em> do, is assign a <code>Proc</code> object to a variable, and then convert that to a block using the <code>&amp;</code> unary prefix operator:</p>

<pre><code>numbers = 1..10
print numbers.map {|x| x * x }

square = -&gt; x { x * x }
print numbers.map &amp;square
</code></pre>
"
"<p>I want to execute a function when a constructor of class Hash is called or when a Hash object is initialized. I have implemented my objective using </p>

<pre><code>class Hash
  def initialize
    p ""Constructor call""
  end
end
</code></pre>

<p>The code above works fine when a Hash object is initialized as follows:</p>

<pre><code>a = Hash.new(:a1 =&gt; ""Hi"")
</code></pre>

<p>However, when I use the following code:</p>

<pre><code>a = {:a1 =&gt; ""Hi""}
</code></pre>

<p>Then, it fails or the constructor is not called. So, how to intercept the call made in the second code snippet?</p>

<p>Thanks in advance.</p>
","2988","","<p>Unfortunately, just like in almost every other language, you cannot override literals in Ruby. You'll have to use one of the few languages that allow this, like <a href=""http://Ioke.Org/"" rel=""nofollow"">Ioke</a>:</p>

<pre><code>cell(:{}) = method(+x, ""Literal {} called with #{x inspect}"" println)

{ :a1 =&gt; ""Hi"" }
;; Literal {} called with [:a1 =&gt; ""Hi""]
</code></pre>

<p>(In fact, Ioke is the <em>only</em> language I can think of right now which allows literal overloading / overriding. I suppose Ioke's cousin <a href=""http://Seph-Lang.Org/"" rel=""nofollow"">Seph</a> will support it, and a couple of years of ago there was some discussion about allowing it in <a href=""http://NewspeakLanguage.Org/"" rel=""nofollow"">Newspeak</a>, but that's about it.)</p>
"
"<p>I'm working on a rails project and we're running <a href=""http://ruby.sadi.st/Flay.html"">Flay</a> on it. Its got a score of ~1400 and I'm unsure what this really means. I know that 0 is ideal but I'm unsure what a good target would be and what a realistic upper-bound for a project should be. Is there any good documentation on the scoring process and what the end-result is? </p>
","2988","","<p>There's a simple solution to this dilemma, which applies not only to Flay, but pretty much all ""badness"" scores: set the upper-bound to whatever the current score is, and whenever it decreases, set it to the new value.</p>

<p>That way, you guarantee</p>

<ol>
<li>that your goal is realistic (because it will <em>already</em> be fulfilled) and</li>
<li>that you only ever improve, or in the worst case stagnate, but you never get worse.</li>
</ol>
"
"<p>I just spotted <a href=""http://stackoverflow.com/questions/4249129/recover-from-git-svn-clone-without-stdlayout"">this question</a> about recovering from a clone done without --stdlayout. I didn't find documentation of this flag - what does it do?</p>
","2988","","<p>Subversion doesn't have any concept of <em>branch</em> or <em>tag</em>. Instead, those are typically simulated by simply copying the contents of the repository into a directory.</p>

<p>In order for <code>git svn</code> to be able to recognize branches and tags and the main branch (""trunk""), you have to explicitly tell it where to find them, using the <code>--tags</code> (or <code>-t</code>), <code>--branches</code> (or <code>-b</code>) and <code>--trunk</code> (or <code>-T</code>) options.</p>

<p>However, many Subversion repositories follow a standard convention, laid out in the Subversion book, of <code>--trunk=/trunk --branches=/branches --tags=/tags</code>. <code>--stdlayout</code> (or <code>-s</code>) encodes this convention, so that you don't have to pass the same arguments every time you clone a Subversion repository.</p>

<p>You can find this information in the <code>git-svn(1)</code> manual page, which you can access under Unix with <code>man git-svn</code> and in an operating system independent fashion via the builtin Git help system with <code>git help svn</code>. <a href=""http://Kernel.Org/pub/software/scm/git/docs/git-svn.html"">All of the Git man pages</a> are also available on Kernel.Org and they are usually the first search result when you search for <a href=""http://Google.Com/search?q=git-svn%281%29""><code>git-svn(1)</code></a>.</p>
"
"<p>Does Scala support something like dynamic properties? Example:</p>

<pre><code>val dog = new Dynamic // Dynamic does not define 'name' nor 'speak'.
dog.name = ""Rex"" // New property.
dog.speak = { ""woof"" } // New method.

val cat = new Dynamic
cat.name = ""Fluffy""
cat.speak = { ""meow"" }

val rock = new Dynamic
rock.name = ""Topaz""
// rock doesn't speak.

def test(val animal: Any) = {
   animal.name + "" is telling "" + animal.speak()
}

test(dog) // ""Rex is telling woof""
test(cat) // ""Fluffy is telling meow""
test(rock) // ""Topaz is telling null""
</code></pre>

<p>What is the closest thing from it we can get in Scala? If there's something like ""addProperty"" which allows using the added property like an ordinary field, it would be sufficient.</p>

<p>I'm not interested in structural type declarations (""type safe duck typing""). What I really need is to add new properties and methods at runtime, so that the object can be used by a method/code that expects the added elements to exist.</p>
","2988","","<p>First off, as @pst pointed out, your example can be entirely implemented using static typing, it doesn't require dynamic typing.</p>

<p>Secondly, if you want to program in a dynamically typed language, program in a dynamically typed language.</p>

<p>That being said, you <em>can</em> actually do something like that in Scala. Here is a simplistic example:</p>

<pre><code>class Dict[V](args: (String, V)*) extends Dynamic {
  import scala.collection.mutable.Map

  private val backingStore = Map[String, V](args:_*)

  def typed[T] = throw new UnsupportedOperationException()

  def applyDynamic(name: String)(args: Any*) = {
    val k = if (name.endsWith(""_="")) name.dropRight(2) else name
    if (name.endsWith(""_="")) backingStore(k) = args.first.asInstanceOf[V]
    backingStore.get(k)
  }

  override def toString() = ""Dict("" + backingStore.mkString("", "") + "")""
}

object Dict {
  def apply[V](args: (String, V)*) = new Dict(args:_*)
}

val t1 = Dict[Any]()
t1.bar_=(""quux"")

val t2 = new Dict(""foo"" -&gt; ""bar"", ""baz"" -&gt; ""quux"")
val t3 = Dict(""foo"" -&gt; ""bar"", ""baz"" -&gt; ""quux"")

t1.bar // =&gt; Some(quux)
t2.baz // =&gt; Some(quux)
t3.baz // =&gt; Some(quux)
</code></pre>

<p>As you can see, you were pretty close, actually. Your main mistake was that <code>Dynamic</code> is a trait, not a class, so you can't instantiate it, you have to mix it in. And you obviously have to actually define what you want it to do, i.e. implement <code>typed</code> and <code>applyDynamic</code>.</p>

<p>If you want <em>your</em> example to work, there are a couple of complications. In particular, you need something like a type-safe heterogenous map as a backing store. Also, there are some syntactic considerations. For example, <code>foo.bar = baz</code> is only translated into <code>foo.bar_=(baz)</code> if <code>foo.bar_=</code> exists, which it doesn't, because <code>foo</code> is a <code>Dynamic</code> object.</p>
"
"<p>I would like to iterate through different ruby arrays (and possibly hashes). I don't really want to have to maintain an index to keep track the position I am in for each array. It's not because I'm lazy, but I am used to the C++ way of using iterator, which I think is less error prone.</p>

<p>So is there a way to get an iterator in ruby, like we do in c++ (this example does not do much but it is just for the sake of the example):</p>

<pre><code>std::set&lt; MyObject &gt;::iterator iter1 = set1.begin();
std::set&lt; MyObject &gt;::iterator iter2 = set2.begin();

while(iter1 != set1.end() &amp;&amp; iter2 != set2.end()
{
  if (iter1-&gt;timestamp &gt; iter2-&gt;timestamp)
    ++iter2;
  else
     ++iter1;
}
</code></pre>
","2988","","<p>It's not quite clear to my what <em>exactly</em> the result of your example should be, therefore I cannot test whether this conforms to your specifications, but it appears to be roughly what you are looking for:</p>

<pre><code>iter1 = set1.each
iter2 = set2.each

loop do
  if iter1.peek.timestamp &gt; iter2.peek.timestamp
    iter2.next
  else
    iter1.next
  end
end
</code></pre>

<p><a href=""http://RubyDoc.Info/stdlib/core/Enumerator%3apeek"" rel=""nofollow""><code>Enumerator#peek</code></a> is roughly equivalent to dereferencing the iterator in C++ (although it peeks at the <em>next</em> value instead of the <em>current</em> one, which means that there may be a fencepost error in my code). <a href=""http://RubyDoc.Info/stdlib/core/Enumerator%3anext"" rel=""nofollow""><code>Enumerator#next</code></a> advances the enumerator and returns the next value. The end of the enumerator is signalled by raising a <a href=""http://RubyDoc.Info/stdlib/core/StopIteration"" rel=""nofollow""><code>StopIteration</code></a> exception, which however is handled automatically and correctly by <a href=""http://RubyDoc.Info/stdlib/core/Kernel%3aloop"" rel=""nofollow""><code>Kernel#loop</code></a>.</p>
"
"<p>Often, we can use <code>p foo</code> or <code>foo.inspect</code> to see the instance variables, but is it only the default behavior and the object can choose to show something else (or hide all instance variables) (probably by re-defining the <code>inspect</code> method).</p>

<p>The main question is, if I can see for <code>foo.inspect</code> that there is <code>@bar</code> being an object, having instance variable <code>@wah</code>, that has a value of <code>""hello""</code>, can I print out <code>@wah</code> directly, if there is no accessor (reader) available for <code>@bar</code> and <code>@wah</code>?   Usually, it should not be readable if there is no accessor, but what if for debugging purpose?</p>
","2988","","<p>In Ruby, all access protection can be circumvented using reflection:</p>

<pre><code>@bar.instance_variable_get(:@wah)
</code></pre>
"
"<p>have a ton of places I need to add</p>

<pre><code>if this_flag
  return
end
</code></pre>

<p>can that be done on one line with ruby?</p>
","2988","","<blockquote>
  <p>is there a ruby one-line “<code>return if x</code>” ?</p>
</blockquote>

<p>Yes:</p>

<pre><code>return if x
</code></pre>

<p>I love Ruby :-)</p>
"
"<p>What is the best way to remove from the array elements that are repeated.
For example, from the array</p>

<pre><code>a = [4, 3, 3, 1, 6, 6]
</code></pre>

<p>need to get </p>

<pre><code>a = [4, 1]
</code></pre>

<p>My method works to too slowly with big amount of elements.</p>

<pre><code>arr = [4, 3, 3, 1, 6, 6]
puts arr.join("" "")
nouniq = []
l = arr.length
uniq = nil
for i in 0..(l-1)
  for j in 0..(l-1) 
    if (arr[j] == arr[i]) and ( i != j )
      nouniq &lt;&lt; arr[j]
    end
  end
end
arr = (arr - nouniq).compact

puts arr.join("" "")
</code></pre>
","2988","","<pre><code>arr = [4, 3, 3, 1, 6, 6]

arr.
  group_by {|e| e }.
  map {|e, es| [e, es.length] }.
  reject {|e, count| count &gt; 1 }.
  map(&amp;:first)
# [4, 1]
</code></pre>
"
"<p>I'm trying to install RubyGems on a Fedora-based distribution that only has Ruby 1.8.6. I downloaded the RubyGems 1.6.2 package, unzipped and ran</p>

<pre><code>$ ruby setup.rb
</code></pre>

<p>It bombs out with the rather unhelpful error message:</p>

<pre><code>./lib/rubygems/custom_require.rb:54: warning: parenthesize argument(s) for future version
./lib/rubygems/custom_require.rb:57:in `require': undefined method `end_with?' for ""no such file to load -- Win32API"":String (NoMethod\
Error)
   from ./lib/rubygems/config_file.rb:55
   from ./lib/rubygems/custom_require.rb:36:in `gem_original_require'
   from ./lib/rubygems/custom_require.rb:36:in `require'
   from ./lib/rubygems/gem_runner.rb:8
   from ./lib/rubygems/custom_require.rb:36:in `gem_original_require'
   from ./lib/rubygems/custom_require.rb:36:in `require'
   from setup.rb:25
</code></pre>

<p>Looking at the source of the exception, it seems that it first tries:</p>

<pre><code>require ""etc""
Etc.sysconfdir
</code></pre>

<p>and when that throws a <code>NoMethodError</code> it tries to require <code>Win32API</code> (which I assume isn't present on linux).</p>

<p>I'm guessing that this could be because I have an old version of Ruby, but I can't find the RubyGems version requirements documented anywhere. Can anyone suggest how to proceed with this?</p>
","2988","","<p>It is definitely possible to install RubyGems on Ruby 1.8.6, but not RubyGems 1.6.2. Support for Ruby 1.8.6 was dropped in RubyGems 1.4.0.</p>

<p>Why are you trying to circumvent your Linux distribution's package manager? They test interoperability between the packages they ship <em>precisely</em> to avoid situations like this.</p>

<p>In general, it is not a good idea to mix different package management systems. Ideally, you shouldn't be using RubyGems at all, when using Linux, since most distribution's package management systems are as good as RubyGems anyway. RubyGems is only needed on operating systems like Windows or OSX which are still stuck in the 1980s.</p>

<p>Thats what I do on my Redmine installation, for example: I just use the distribution packages of Rails, RedCloth, RMagick, Rack, Redmine, Ruby Enterprise Edition, Phusion Passenger, and whatever else I need. I don't even have RubyGems installed <em>at all</em>, neither from a distribution package nor from source.</p>

<p>If, however, for some reason, you <em>need</em> RubyGems, then you should move your entire Ruby environment out of the distribution package manager and manage it yourself. Just install whatever version and flavor of Rubinius, JRuby, IronRuby, YARV or whatever you want, install the latest version of RubyGems from source (or don't, since all of the above already ship with one pre-installed anyway) and install all of your Ruby libraries as Gems.</p>

<p>As was noted in other answers, RVM can be of help, but is generally unnecessary unless you want to manage multiple Ruby installations on the same machine.</p>
"
"<p>I was adding items to a Hash key. I was expecting to get a structure like this:</p>

<pre><code>{ 
  'a' : [1],
  'b' : [2, 3, 4]
}
</code></pre>

<p>I used an Array to initialize the Hash.</p>

<pre><code>irb&gt; hash = Hash.new([])
 =&gt; {} 
</code></pre>

<p>Then started using it:</p>

<pre><code>irb&gt; hash['a'] &lt;&lt; 1
 =&gt; [1] 
irb&gt; hash['b'] &lt;&lt; 2
 =&gt; [1, 2] 
</code></pre>

<p>But it turns out:</p>

<pre><code>irb&gt; hash
 =&gt; {}
</code></pre>
","2988","","<p>This is <em>exactly</em> the behavior that you would expect to see.</p>

<p>You never add anything to the <code>Hash</code>, therefore the <code>Hash</code> is completely empty. When you look up a key, that key will never exist, therefore it returns the default value, which you have specified to be an <code>Array</code>.</p>

<p>So, you look up the key <code>'a'</code>, which doesn't exist, and thus returns the <code>Array</code> you specified as the default value. Then, you call <code>&lt;&lt;</code> on that <code>Array</code>, which appends a value (<code>1</code>) to it.</p>

<p>Next, you look up the key <code>'b'</code>, which also doesn't exist, and thus returns the <code>Array</code> you specified as the default value, which now contains the element <code>1</code> you added earlier. Then, you call <code>&lt;&lt;</code> on that <code>Array</code>, appending the value <code>2</code> to it.</p>

<p>You end up with a <code>Hash</code> that is still empty, since you never added anything to it. The default value of the <code>Hash</code> is now an array containing the values <code>1</code> and <code>2</code>.</p>

<p>The output you are seeing is because IRb always prints the result of the last expression that was evaluated. The last expression in your example is calling <code>&lt;&lt;</code> on the <code>Array</code>. <code>&lt;&lt;</code> returns its receiver, which then is the return value of the entire expression and thus what IRb prints out.</p>
"
"<p>I'd like to test class and gem loading. Have a look at the following stupid test case:</p>

<pre><code>require 'rubygems'
require 'shoulda'

class SimpleTest &lt; Test::Unit::TestCase

    context 'This test' do

       should 'first load something' do
           require 'bundler'

           assert Object.const_defined? :Bundler
       end

       should 'second have it reset again' do
           assert !Object.const_defined?(:Bundler)
       end

       teardown do
         # This works, but is tedious and unclean
         #Object.send :remove_const, :Bundler rescue nil

         # Instead I want something like this ;)
         magic_reset
       end

    end

end
</code></pre>
","2988","","<p>AFAIK, you cannot unload a file that you have loaded. You need to start a separate Ruby process for every test. (Or a separate Ruby instance if you are running on a Ruby implementation which supports multiple instances in the same process.)</p>
"
"<p>What is the meaning of '&lt;==>' in Ruby?</p>

<p>Example: The code comes from the following class that compares numbers in the format <code>x.x.x</code>,</p>

<pre><code>def &lt;==&gt;(other)
    # Some code here
end
</code></pre>

<p>The following code comes from this class that orders numbers like <code>x.x.x</code>,</p>

<pre><code>class Version

    attr_reader :fst, :snd, :trd
    def initialize(version="""")
        v = version.split(""."")
        @fst = v[0].to_i
        @snd = v[1].to_i
        @trd = v[2].to_i
    end

    def &lt;=&gt;(other)
        return @fst &lt;=&gt; other.fst if ((@fst &lt;=&gt; other.fst) != 0)
        return @snd &lt;=&gt; other.snd if ((@snd &lt;=&gt; other.snd) != 0)
        return @trd &lt;=&gt; other.trd if ((@trd &lt;=&gt; other.trd) != 0)
    end

    def self.sort
        self.sort!{|a,b| a &lt;=&gt; b}
    end

    def to_s
        @sorted = @fst.to_s + ""."" + @snd.to_s + ""."" + @trd.to_s
        #Puts out ""#{@sorted}"".
    end
end
</code></pre>
","2988","","<p>Why don't you just try it out? By just typing in the code you posted, it is trivial to see for yourself that it doesn't mean anything, since <code>&lt;==&gt;</code> is not a valid method name in Ruby. The code you posted will just raise a <code>SyntaxError</code>.</p>
"
"<p>If one were to implement Ruby on top of a Javascript engine (either in the browser or on top of standalone V8 or Spidermonkey), what would be the key impedance mismatches between the Ruby and JS object models ?</p>
","2988","","<p>The most in-your-face one is obviously the fact that ECMAScript is prototype-based and Ruby is class-plus-mixin-based. Also, in Ruby, encapsulation is done with objects, in ECMAScript with closures.</p>

<p>However, my guess is that Ruby's control flow constructs are going to be a much bigger hurdle than its object model. After all, <a href=""http://JSClass.JCoglan.Com/"">James Coglan's JS.Class</a> <em>is</em> basically an implementation of Ruby's object model in ECMAScript and it's not that big.</p>

<p>ECMAScript simply lacks the tools needed to build your own control-flow constructs on top of it. Typically, you need either <code>GOTO</code>, continuations or proper tail calls. If you have one of those, you can easily implement everything else: exceptions, loops, switches, threads, <code>Fiber</code>s, generators, coroutines, &hellip; you name it.</p>

<p>But ECMAScript doesn't have them (and for good reason, at least in the case of <code>GOTO</code>). The only control-flow construct ECMAScript has that is powerful enough to be able to build other constructs on top of is exceptions. Unfortunately, those are pretty slow. (Nonetheless, they <em>have</em> been used as an implementation substrate, for example in the Microsoft Live Labs Volta compiler, which used ECMAScript exceptions to implement .NET exceptions, iterators, generators and even threads.)</p>

<p>So, basically you are stuck with implementing at least your own call stack if not an entire interpreter (as is the case with HotRuby), performing global CPS transforms or something like that.</p>

<p>Basically, what you <em>want</em> from a Ruby engine running on top of ECMAScript, is</p>

<ol>
<li>a faithful implementation of the RubySpec (specifically the control-flow constructs such as threads, fibers, <code>throw</code>/<code>catch</code>, exceptions etc.), </li>
<li>performance and </li>
<li>tight integration with ECMAScript (i.e. the ability to pass objects and call methods back and forth between the two languages).</li>
</ol>

<p>Unfortunately, when you have to resort to tricks like managing your own stack, doing CPS transforms, building on top of exceptions, &hellip; it turns out that you can only pick two of the three goals.</p>
"
"<p>I work in a pseudo-IT team that does development outside of a formal IT development environment - using Windows XP (and IE6). I can't install any software myself, so can only use what the central IT department makes available - which isn't much.</p>

<p>I have lots of UNIX development experience, so it's painful working without some of the tools I have previously taken for granted. </p>

<p>Notepad is my favorite thing about Windows. What else is there hiding in C:\Windows that I should know about?</p>
","2988","","<ul>
<li>A JavaScript interpreter: <code>cscript</code> / <code>wscript</code> (can also interpret VBScript plus any other language for which a Windows ScriptingHost compliant interpreter is installed)</li>
<li>WordPad: practically useless except for one thing: it can read Unix line endings, unlike NotePad</li>
<li>if you're lucky: PowerShell</li>
</ul>

<p>Note that plenty of applications are also packaged as so-called <em>portable</em> applications which need no installation: Firefox, NotePad++, even a complete Ubuntu distribution.</p>
"
"<p>I'm new to Ruby and am trying to work something out which is confusing me.  While writing a simple parser, I found that comparing a char with a <code>==</code> would produce a different result than comparing it with a <code>case</code> expression:</p>

<pre><code>File.open('Quote.txt') do |f|
  f.chars.each do |c|
    puts c == '""' ? 'Quote' : 'Err'

    puts case c
    when '""' then 'QuoteCase'
    else          'ErrCase'
    end

    p c == '""', c === '""', c
  end
end
</code></pre>

<p>Assuming <code>Quote.txt</code> is a 1-byte file containing a single quote character (<code>0x22</code>), this produces:</p>

<pre><code>Quote
ErrCase
true
true
""\""""
</code></pre>

<p>I'm assuming I've done something wrong, but I can't figure out what it is.  Can anyone help?</p>

<p>This is in Ruby 1.9.2, by the way.</p>
","2988","","<p>It looks like a bug in YARV on windows. I get the correct output in JRuby 1.6.0:</p>

<pre><code># ruby -v
ruby 1.9.2p180 (2011-02-18) [i386-mingw32]

# ruby test.rb
Quote
ErrCase
true
true
""\""""

# jruby --1.9 -v
jruby 1.6.0 (ruby 1.9.2 patchlevel 136) (2011-03-15 f3b6154) (Java HotSpot(TM) Client VM 1.7.0-ea) [Windows XP-x86-java]

# jruby --1.9 test.rb
Quote
QuoteCase
true
true
""\""""
</code></pre>
"
"<p>How can I compare classes in Ruby or in other words how can I translate this Java code into Ruby?</p>

<pre><code>Class&lt;?&gt; clazz = ...;
if (clazz == String.class) {
  ...
} else if (clazz == Integer.class) {
  ...
}
</code></pre>

<p>To clarify: I do <em>not</em> want to compare object instances or check if an object is an instance of a class.</p>

<p><strong>EDIT:</strong> I do <strong>not</strong> want to compare object instances or check if an object is an instance of a class, i.e. <code>is_a?</code> and <code>kind_of?</code> don't help me.</p>
","2988","","<p>The <em>literal</em> translation of your Java code would be something like</p>

<pre><code>klass = ...

if klass == String
  ...
elsif klass == Integer
  ...
end
</code></pre>

<p>Or, more idiomatically</p>

<pre><code>klass = ...

case
when klass == String
  ...
when klass == Integer
  ...
end
</code></pre>

<p>Or maybe</p>

<pre><code>klass = ...

DISPATCH_TABLE = {
  String =&gt; -&gt; { ... },
  Integer =&gt; -&gt; { ... }
}

DISPATCH_TABLE[klass].()
</code></pre>

<p>However, Ruby is an object-oriented language, and in an object-oriented language this simply doesn't make sense. You would instead just write</p>

<pre><code>class String
  def do_something
    ...
  end
end

class Integer
  def do_something
    ...
  end
end
</code></pre>

<p>and the language will perform the dispatching for you. This is called <em>polymorphism</em> and is supported by pretty much every object-oriented language and many non-object-oriented ones as well.</p>

<p>This particular transformation is one of the fundamental Refactorings described in Martin Fowler's book (p. 255), it is called the <a href=""http://Refactoring.Com/catalog/replaceConditionalWithPolymorphism.html""><em>Replace Conditional With Polymorphism</em> Refactoring</a>.</p>

<p>The biggest problem with providing a sensible solution to your problem is that you don't tell us what the problem <em>is</em>. You only tell us what the <em>solution</em> is. Or, more precisely, you tell us what you <em>think</em> the solution is <em>in Java</em>, and you somehow expect that the solution in Ruby would be <em>exactly</em> 100% identical, even though the languages couldn't be more different.</p>

<p>To provide a good solution, we need to know the problem first. In other words: the most relevant parts of your question are the <code>…</code>s</p>
"
"<p>When I decided to learn Ruby a short while ago I also decided that I'd start using unit tests and the TDD methodology. I started out using Test::Unit and wrote a couple of very small classes to get a feel for unit testing in general and Ruby and Test::Unit in particular.</p>

<p>So far everything has been quite easy but then I wanted to do something similar to nUnit's TestCase as I had 20 tests where the only thing that changed was the input and output.</p>

<p>The code looks like this:</p>

<pre><code>def test_2_inserted_return_true
    actual = @prime_generator.is_prime?(2)
    assert_equal(true, actual)
  end

  def test_3_inserted_return_true
      actual = @prime_generator.is_prime?(3)
      assert_equal(true, actual)
    end

  def test_5_inserted_return_true
    actual = @prime_generator.is_prime?(5)
    assert_equal(true, actual)
  end
</code></pre>

<p>Which is quite horrible from a DRY-perspective. What I would want is something similar to nUnit's TestCase.</p>

<p>Something like this:</p>

<pre><code>[TestCase(2.5d, 2d, Result=1.25d)]
[TestCase(-2.5d, 1d, Result = -2.5d)]
public double ValidateDivision(double numerator, double denominator)
{
    var myClass = new MyClass();
    return myClass.Divide(numerator,denominator);
}
</code></pre>

<p>I've tried googling but could not find anything about Test::Unit. I've found some on RSpec and Selenium but that doesn't really help me. I also tried searching here but couldn't find anything either.</p>

<p>I thought about making the test method take parameters but defining methods again like that... Not happy about it. Besides, if I remember correctly it wasn't even possible (I am not able to test now or I would).</p>

<p>So, my question is: Is it possible to do data driven testing with Test::Unit in Ruby (1.9.2)? If not then what frameworks can do it?</p>
","2988","","<p>Let's not forget about good ol' loops:</p>

<pre><code>def test_that_the_first_few_primes_are_detected_as_prime
  [2, 3, 5, 7, 11, 13, 17].each do |p|
    assert @primality_tester.prime?(p)
  end
end
</code></pre>

<p>Some people would use metaprogramming to define separate test methods, but in this case I think it's overkill:</p>

<pre><code>[2, 3, 5, 7, 11, 13, 17].each do |p|
  define_method :""test_that_#{p}_is_detected_as_prime"" do
    assert @primality_tester.prime?(p)
  end
end
</code></pre>

<p>Generally, I don't think tests should be DRY. They should be DAMP (descriptive and meaningful phrases). After all, tests are your specification and your documentation, and they are read by people who may not be familiar with Ruby or even programming in general. So, I'm not even sure that your original example is bad, especially if you clean it up a bit like I did above:</p>

<pre><code>def test_that_2_is_detected_as_prime
  assert @primality_tester.prime?(2)
end

def test_that_3_is_detected_as_prime
  assert @primality_tester.prime?(3)
end

def test_that_5_is_detected_as_prime
  assert @primality_tester.prime?(5)
end
</code></pre>

<p>Here's what I did:</p>

<ul>
<li>Rename the tests: Now, the test name forms a complete sentence, and it doesn't simply restate what the test does.</li>
<li>Use <code>assert</code> instead of <code>assert_equal</code>: Checking for equality to <code>true</code> is almost never a good idea anyway, and <code>assert</code> <em>already</em> checks that the result is truthy, so why bother?</li>
<li>Rename <code>@prime_generator</code> to <code>@primality_tester</code>, since, well, it doesn't <em>generate primes</em>, it only checks whether a number is prime.</li>
<li>Rename <code>is_prime?</code> to just <code>prime?</code>, since the question is already implied by the question mark</li>
<li>Last, but certainly not least: Fix the formatting, since not only was the formatting inconsistent with standard Ruby coding conventions, it wasn't even consistent within <em>itself</em></li>
</ul>

<p>However, the <em>best</em> solution IMO would be something like this:</p>

<pre><code>def test_that_the_first_few_primes_are_detected_as_prime
  assert @primality_tester.prime?(2)
  assert @primality_tester.prime?(3)
  assert @primality_tester.prime?(5)
end
</code></pre>

<p>There's duplication in there, but it is duplication that is necessary to keep the test readable and pronouncable. DRY is a good principle for production code, which evolves and is extended, but for tests, DRY always needs to be balanced against DAMP. (Maybe it would make sense to write a custom assertion, but I doubt it. At least I can't come up with a good name for one, which is always a hint.)</p>

<p>A completely <em>different</em> approach would be property-based checking similar to Haskell's QuickCheck or .NET's Pex. There's a Ruby port of QuickCheck called <a href=""http://RushCheck.RubyForge.Org/"" rel=""nofollow"">RushCheck</a>, but it has been unmaintained since 2006 and maintenance has only picked up a couple of weeks ago with still a lot of work left to do to get it up to speed on recent versions of Ruby.</p>
"
"<p>Can someone explain to me with simple words what those two operators do:</p>

<pre><code>$

\
</code></pre>
","2988","","<p><code>\</code> is not an operator, it is part of the literal syntax. More precisely, it is part of <em>two</em> literal syntaxes: it denotes a lambda literal and it serves as an escape character in string literals.</p>

<p>The operator <code>$</code> is defined in the prelude as</p>

<pre><code>($) :: (a -&gt; b) -&gt; a -&gt; b
f $ x = f x
</code></pre>

<p>In other words, it does <em>exactly</em> the same thing as whitespace does, namely just plain function application. <em>However</em>, while function application is left-associative and has high precedence (the highest, in fact), <code>$</code> is right-associative and has low precedence.</p>

<p>This allows you to omit parentheses when you have chains like ""<code>f</code> applied to <code>g</code> applied to <code>h</code> applied to <code>x</code>"", which without the <code>$</code> operator would be written like</p>

<pre><code>f (g (h x))
</code></pre>

<p>but with the operator can be written as</p>

<pre><code>f $ g $ h x
</code></pre>

<p>It is also useful if you want to pass the function application operator itself as an argument to another function. Say, you have list of functions and a list of values and you want to apply every function in the list to the corresponding value in the other list:</p>

<pre><code>zipWith ($) fs xs
</code></pre>
"
"<p>Coming from Python, I like many of the features that Coffeescript borrows from Python and Perl (ranges/slices, comprehensions, destructuring assignments). Is there any syntactic sugar in Coffeescript to mimic Python's <code>enumerate</code> or <code>zip</code> (<code>itertools.izip</code>) functions?</p>

<p>Here are the patterns that I don't care much for:</p>

<pre><code># an enumerate call would be helpful here
i = 0
for x in arr
  ... use x and i ...
  i++
</code></pre>

<p>and</p>

<pre><code># a zip would be useful here
n = Math.min(arr1.length,arr2.length)
for i in 0...n
  x = arr1[i]; y = arr2[i]
  ... use x and y ...
</code></pre>
","2988","","<p>Don't forget that CoffeeScript is just an alternate syntax for ECMAScript. At least for your first example, there is a perfectly good ECMAscript function (<a href=""http://ES5.GitHub.Com/#x15.4.4.18"" rel=""nofollow""><code>Array.prototype.forEach</code></a>), which already does what you want:</p>

<pre><code>arr = [""a"", ""b"", ""c""]

arr.forEach (el, i) -&gt;
  alert ""Element #{el} is at index #{i}""
</code></pre>

<p>Unfortunately, there is no <code>Array.prototype.zip</code> or <code>Array.prototype.zipWith</code>. That seems to be a pretty big omission, especially considering that there is both <code>reduce</code> and <code>reduceRight</code>, the latter of which many other languages don't have. My guess is that it is a simple oversight, and we are going to see <code>zip</code> in some future version of the language.</p>
"
"<p><br>
My question is, why does rubygems on Ubuntu not add /var/lib/gems/1.8/bin to $PATH ?   </p>

<p>I see in the<br>
<a href=""https://help.ubuntu.com/community/RubyOnRails#Installing%20RubyGems"" rel=""nofollow"">https://help.ubuntu.com/community/RubyOnRails#Installing%20RubyGems</a>  </p>

<p>page that it says you have to add it yourself, but I don't understand why there is an extra step.<br>
Testing it on a Debian system, rubygems <strike><em>does</em></strike> does not make the modification to $PATH automatically.<br>
I'm wondering if this is a bug, or if I'm misunderstanding something - I know Ubuntu and Debian have many differences, perhaps this is just one of them.<br>
I posted the question to answers.launchpad.net but have not yet gotten any response.</p>
","2988","","<p>RubyGems <em>never</em> adds anything to the <code>$PATH</code>, whether on Ubuntu or otherwise. Nor does APT (or any other packaging system I know).</p>

<p>The <code>$PATH</code> variable is <em>clearly</em> in the user's domain. No program should ever mess with it.</p>
"
"<p>Can't seem to find docs on it, like what the gemspec should look like, etc.</p>
","2988","","<p>Any Gem whose version number contains a letter is a pre-release Gem.</p>
"
"<p>According to <a href=""http://redmine.ruby-lang.org/issues/1183"" rel=""nofollow"">http://redmine.ruby-lang.org/issues/1183</a> , Ruby 1.9's <code>{foo: 42}</code> apparently was back-ported to Ruby 1.8. But I tried running ruby-1.8.7-head using RVM, and I got the standard syntax error:</p>

<pre><code>Andrew-Grimms-MacBook-Pro:ruby agrimm$ rvm use ruby-1.8.7-head
Using /Users/agrimm/.rvm/gems/ruby-1.8.7-head
Andrew-Grimms-MacBook-Pro:ruby agrimm$ irb
ruby-1.8.7-head :001 &gt; {a: ""foo""}
SyntaxError: compile error
(irb):1: odd number list for Hash
{a: ""foo""}
   ^
(irb):1: syntax error, unexpected ':', expecting '}'
{a: ""foo""}
   ^
(irb):1: syntax error, unexpected '}', expecting $end
    from (irb):1
</code></pre>

<p>Has the change been reverted, or are not all changes to the source code reflected in ruby-1.8.7-head?</p>
","2988","","<p>Check the version number: this patch was applied to Ruby 1.8.<strong>8</strong>, not 1.8.7. Which ruby-core agreed just 4 days ago will never be released. As of last week, 1.8 is officially dead.</p>

<p>1.8.8 was the mythical transitional version that would correctly parse but not execute Ruby 1.9 syntax, so that you could write stuff like</p>

<pre><code>if RUBY_VERSION &gt; '1.8'
  -&gt;x { x }
else
  lambda {|x| x }
end
</code></pre>

<p>However, it turned out that everybody who wanted to migrate to Ruby 1.9 was already doing so, and the people that didn't want to migrate would not have been swayed by 1.8.8, so it simply didn't make sense to divert any more resources to it.</p>
"
"<p>I always thought Java was <strong>pass-by-reference</strong>; however I've seen a couple of blog posts (for example, <a href=""http://javadude.com/articles/passbyvalue.htm"">this blog</a>) that claim it's not. I don't think I understand the distinction they're making. </p>

<p>What is the explanation?</p>
","2988","","<p>I can't believe that nobody mentioned Barbara Liskov yet. When she designed CLU in 1974, she ran into this same terminology problem, and she invented the term <em>call by sharing</em> (also known as <em>call by object-sharing</em> and <em>call by object</em>) for this specific case of ""call by value where the value is a reference"".</p>
"
"<p>What makes a language a scripting language? I've heard some people say ""when it gets interpreted instead of compiled"". That would make PHP (for example) a scripting language. Is that the only criterion? Or are there other criteria?</p>

<h3>See also:</h3>

<ul>
<li><a href=""http://stackoverflow.com/questions/98268/whats-the-difference-between-a-script-and-an-application"">What’s the difference between a “script” and an “application”?</a></li>
</ul>
","2988","","<p>There's a lot of possible answers to this.</p>

<p>First: it's not really a question of the <em>difference</em> between a scripting language and a programming language, because a scripting language <em>is</em> a programming language. It's more a question of what traits make some programming language a scripting language while another programming language <em>isn't</em> a scripting language.</p>

<p>Second: it's really hard to say what a XYZ language is, whether that XYZ be ""scripting"", ""functional programming"", ""object-oriented programming"" or what have you. The definition of what ""functional programming"" is, is pretty clear, but nobody knows what a ""functional programming language"" is.</p>

<p>Functional programming or object-oriented programming are programming <em>styles</em>; you can write in a functional style or an object-oriented style in pretty much any language. For example, the Linux Virtual File System Switch and the Linux Driver Model are heavily object-oriented despite written in C, whereas a lot of Java or C# code you see on the web is very procedural and not object-oriented <em>at all</em>. OTOH, I have seen some heavily functional Java code.</p>

<p>So, if functional programming and object-oriented programming are merely styles that can be done in <em>any</em> language, then how do you define an ""object-oriented programming language""? You could say that an object-oriented programming language is a language that allows object-oriented programming. But that's not much of a definition: <em>all</em> languages allow object-oriented programming, therefore <em>all</em> languages are object-oriented? So, you say, well a language is object-oriented, if it <em>forces</em> you to programming in an object-oriented style. But that's not much of a definition, either: <em>all</em> languages allow functional programming, therefore <em>no</em> language is object-oriented?</p>

<p>So, for me, I have found the following definition:</p>

<blockquote>
  <p>A language is a scripting language (object-oriented language / functional language) if it <em>both</em></p>
  
  <ul>
  <li><em>facilitates</em> scripting (object-oriented programming / functional programming), i.e. it not only <em>allows</em> it but makes it <em>easy</em> and <em>natural</em> and contains features that <em>help</em> with it, <em>AND</em></li>
  <li><em>encourages</em> and <em>guides</em> you towards scripting (object-oriented programming / functional programming).</li>
  </ul>
</blockquote>

<p>So, after five paragraphs, I have arrived at: ""a scripting language is a language for scripting"". What a great definition. NOT.</p>

<p>Obviously, we now need to look at the definition of ""scripting"".</p>

<p>This is where the third problem comes in: whereas the term ""functional programming"" is well-defined and it's only the term ""functional programming language"" that is problematic, unfortunately with scripting, <em>both</em> the term ""scripting"" and the term ""scripting language"" are ill-defined.</p>

<p>Well, firstly scripting <em>is</em> programming. It's just a special kind of programming. IOW: every script is a program, but not every program is a script; the set of all scripts is a proper subset of the set of all programs.</p>

<p>In my personal opinion, the thing that makes scripting scripting and distinguishes it from other kinds of programming, is that &hellip;</p>

<blockquote>
  <p>Scripts largely manipulate objects that</p>
  
  <ul>
  <li>were not created by the script,</li>
  <li>have a lifetime independent of the script and</li>
  <li>live outside the domain of the script.</li>
  </ul>
  
  <p>Also, the datatypes and algorithms used are generally not defined by the script but by the outside environment.</p>
</blockquote>

<p>Think about a shell script: shell scripts usually manipulate files, directories and processes. The majority of files, directories and processes on your system were probably not created by the currently running script. And they don't vanish when the script exits: their lifetime is completely independent of the script. And they aren't really part of the script, either, they are a part of the system. You didn't start your script by writing <code>File</code> and <code>Directory</code> classes, those datatypes are none of your concern: you just assume they are there, and you don't even know (nor do you <em>need</em> to know) how they work. And you don't implement your own algorithms, either, e.g. for directory traversal you just use <code>find</code> instead of implementing your own breadth-first-search.</p>

<p>In short: a script attaches itself to a larger system that exists independently of the script, manipulates some small part of the system and then exits.</p>

<p>That larger system can be the operating system in case of a shell script, the browser DOM in case of a browser script, a game (e.g. World of Warcraft with Lua or Second Life with the Linden Scripting Language), an application (e.g. the AutoLisp language for AutoCAD or Excel/Word/Office macros), a web server, a pack of robots or something else entirely.</p>

<p>Note that the scripting aspect is completely orthogonal to all the other aspects of programming languages: a scripting language can be strongly or weakly typed, strictly or loosely typed, statically or dynamically typed, nominally, structurally or duck typed, heck it can even be untyped. It can be imperative or functional, object-oriented, procedural or functional, strict or lazy. Its implementations can be interpreted, compiled or mixed.</p>

<p>For example, Mondrian is a strictly strongly statically typed lazy functional scripting language with a compiled implementation.</p>

<p>However, all of this is moot, because the way the term <em>scripting language</em> is <em>really</em> used in the real world, has nothing to do with any of the above. It is most often used simply as an insult, and the definition is rather simple, even simplistic:</p>

<blockquote>
  <ul>
  <li><em>real</em> programming language: my programming language</li>
  <li>scripting language: your programming language</li>
  </ul>
</blockquote>

<p>This seems to be the way that the term is most often used.</p>
"
"<p>Obfuscation is one way, but it can't protect from breaking the piracy protection security of the application. How do I make sure that the application is not tampered with, and how do I make sure that the registration mechanism can't be reverse engineered?</p>

<p>Also it is possible to convert a C# application to native code, and <a href=""http://en.wikipedia.org/wiki/Spoon_%28software%29"">Xenocode</a> is too costly.</p>

<p>C# provides lot of features, and is the ideal language for my code, so writing the whole codebase again in C++ is out of the question.</p>

<p>Secure certificates can be easily removed from the signed assemblies in .NET.</p>
","2988","","<p>If you want people to able to run your code (and if you don't, then why did you write it in the first place?), then their CPU needs to be able to execute your code. In order to be able to <em>execute</em> the code, the CPU needs to be able to <em>understand</em> it.</p>

<p>Since CPUs are dumb, and humans aren't, this means that humans can understand the code as well.</p>

<p>There's only one way to make sure that your users don't get your code: don't give them your code.</p>

<p>This can be achieved two ways: <a href=""http://en.wikipedia.org/wiki/Software_as_a_service"" rel=""nofollow"">Software as a service</a> (SaaS), that is, you run your software on <em>your</em> server and only let your users access it remotely. This is the model that Stack&nbsp;Overflow uses, for example. I'm pretty sure that Stack&nbsp;Overflow doesn't obfuscate their code, yet you can't decompile it.</p>

<p>The other way is the appliance model: instead of giving your users your code, you give them a computer containing the code. This is the model that gaming consoles, most mobile phones and <a href=""http://en.wikipedia.org/wiki/TiVo"" rel=""nofollow"">TiVo</a> use. Note that this only works if you ""own"" the entire execution path: you need to build your own CPU, your own computer, write your own operating system and your own <a href=""http://en.wikipedia.org/wiki/Common_Language_Infrastructure"" rel=""nofollow"">CLI</a> implementation. Then, and <em>only then</em> can you protect your code. (But note that even the <em>tiniest</em> mistake will render all of your protections useless. Microsoft, Apple, Sony, the music industry and the movie industry can attest to that.)</p>

<p>Or, you could just do nothing, which means that your code will be automatically protected by copyright law.</p>
"
"<p>My 7 year old would like to learn, how to program? (his idea not mine, and he does things in the outside world. So, I am not too worried from that point of view. He already went so far as to take a game programming book out of my office to read at bed time.) The other day we sat down and wrote a very simple number guessing game (you pick 8 and it is correct, anything else it is wrong).  </p>

<p>It went OK but there were a number of questions he had based on the syntax of the language. (I happened to pick Java as I had the IDE opened at the time.)  I teach post-secondary introductory programming courses so this was a bit of an eye opener to me (most students out of high school are reluctant to ask questions) as I really had to figure out, how to explain syntax to a 7 year old?</p>

<p>Clearly any C type language is going to have the same issues, as will most “languages”. I looked at squeak but decided not to use it yet. I looked at the Alice environment but didn't like it for this either.</p>

<p>From a physical point of view he is comfortable with a keyboard/mouse and can put together Lego sets with relative ease (so following directions with a fun outcome works for him). I have access to Lego NXT but he is still a bit young for that (it takes too long to see the results of the work, even with the supplied graphical environment). </p>

<p>Ideally I'd like the experience to help him build up confidence in math and logic (if a 7 year old has logic:-).</p>

<p>I remember using turtle graphics/logo as a child. I am leaning towards this but wondering if there are any other ideas or if anyone can recommend a good logo environment?</p>

<p>Edit 1:</p>

<p>Logo works out well.  I'll need to teach him the concept of angles (90 degrees, 180 degrees).  Unfortunalty they don't really do division at school yet so angles might be fun...</p>

<p>First off draw a square:</p>

<pre><code>FORWARD 50
RIGHT 90
FORWARD 50
RIGHT 90
FORWARD 50
RIGHT 90
FORWARD 50
RIGHT 90
</code></pre>

<p>At some point later I'll go into loops:</p>

<pre><code>REPEAT 4 
[
    FORWARD 50
    RIGHT 90
]
</code></pre>

<p>And then variables:</p>

<pre><code>make ""length 50

REPEAT 4 
[
    FORWARD :length
    RIGHT 90
]
</code></pre>

<p>This works out very well.  Virtually no syntax, easy for a 7 year old to remember the vocabulary, and immediate feedback.</p>

<p>Edit 2:</p>

<p>Well it was a success, in that he was able to write a simple program (no loops yet) while I was out of the room.  It actually works out very well - we went out and got to graph paper and a protractor, we fugured out 90 degree angles, and he made a bunch of squares, turned a square into a rectangle, and got to see where he went wrong and how to debug it.  I'd recommend this approach for anyone with a 7 year old who is interested in programming.  I think I'd recommend it to my post-secondary students too (!)</p>
","2988","J&#246;rg W Mittag","<p><a href=""http://Scratch.MIT.Edu/"" rel=""nofollow"">Scratch</a> is another one. Developed at MIT specifically for the purpose of teaching programming to children.</p>
"
"<p>Since I am working with different Platforms and programming languages, I found there are many good libraries that are ported with different programming language than its original. For example JUnit and Log4j which has been ported into several different languages. Sometimes if I am already used to working with these libraries, I would find the ported version for it if I'm working with another programming language.</p>

<p>What are other libraries that you have found been ported to different languages and as good as the original?</p>

<p>Please make it one library per answer so others can vote.</p>

<p><strong>Format</strong>: </p>

<p>Original-Library-Name, Original-Programming-Language</p>

<ul>
<li>Ported-Library-Name, Ported-Programming-Language</li>
</ul>

<p>If possible with the links to the website of the libraries.</p>
","2988","","<p><a href=""http://SUnit.SourceForge.Net/"" rel=""nofollow"">SUnit</a>, Smalltalk</p>

<ul>
<li>every other unit testing framework, pretty much every programming language</li>
<li><a href=""http://docs.python.org/library/unittest.html"" rel=""nofollow"">unittest</a>, python</li>
</ul>
"
"<p>Since I am working with different Platforms and programming languages, I found there are many good libraries that are ported with different programming language than its original. For example JUnit and Log4j which has been ported into several different languages. Sometimes if I am already used to working with these libraries, I would find the ported version for it if I'm working with another programming language.</p>

<p>What are other libraries that you have found been ported to different languages and as good as the original?</p>

<p>Please make it one library per answer so others can vote.</p>

<p><strong>Format</strong>: </p>

<p>Original-Library-Name, Original-Programming-Language</p>

<ul>
<li>Ported-Library-Name, Ported-Programming-Language</li>
</ul>

<p>If possible with the links to the website of the libraries.</p>
","2988","","<p>JUnit, Java</p>

<ul>
<li>test/unit, Ruby</li>
<li>NUnit, .NET</li>
<li><a href=""http://phpunit.sourceforge.net/"" rel=""nofollow"">PHPUnit</a>, PHP</li>
<li><a href=""http://docs.python.org/library/unittest.html"" rel=""nofollow"">unittest</a>, python</li>
<li><a href=""http://cppunit.sourceforge.net/"" rel=""nofollow"">CppUnit</a>, C++</li>
<li><a href=""http://perlunit.sourceforge.net/"" rel=""nofollow"">perlunit</a>, Perl</li>
</ul>
"
"<p>Since I am working with different Platforms and programming languages, I found there are many good libraries that are ported with different programming language than its original. For example JUnit and Log4j which has been ported into several different languages. Sometimes if I am already used to working with these libraries, I would find the ported version for it if I'm working with another programming language.</p>

<p>What are other libraries that you have found been ported to different languages and as good as the original?</p>

<p>Please make it one library per answer so others can vote.</p>

<p><strong>Format</strong>: </p>

<p>Original-Library-Name, Original-Programming-Language</p>

<ul>
<li>Ported-Library-Name, Ported-Programming-Language</li>
</ul>

<p>If possible with the links to the website of the libraries.</p>
","2988","","<p>Hibernate, Java</p>

<ul>
<li>NHibernate, .NET</li>
</ul>
"
"<p>Since I am working with different Platforms and programming languages, I found there are many good libraries that are ported with different programming language than its original. For example JUnit and Log4j which has been ported into several different languages. Sometimes if I am already used to working with these libraries, I would find the ported version for it if I'm working with another programming language.</p>

<p>What are other libraries that you have found been ported to different languages and as good as the original?</p>

<p>Please make it one library per answer so others can vote.</p>

<p><strong>Format</strong>: </p>

<p>Original-Library-Name, Original-Programming-Language</p>

<ul>
<li>Ported-Library-Name, Ported-Programming-Language</li>
</ul>

<p>If possible with the links to the website of the libraries.</p>
","2988","","<p><a href=""http://WWW.CS.Chalmers.Se/~rjmh/QuickCheck/"" rel=""nofollow"">QuickCheck</a>, <a href=""http://Haskell.Org/"" rel=""nofollow"">Haskell</a></p>

<ul>
<li><a href=""http://WWW.CS.Chalmers.Se/~rjmh/ErlangQC/"" rel=""nofollow"">Quviq QuickCheck</a>, <a href=""http://Erlang.Org/"" rel=""nofollow"">Erlang</a></li>
<li><a href=""http://RushCheck.RubyForge.Org/"" rel=""nofollow"">RushCheck</a>, <a href=""http://Ruby-Lang.Org/"" rel=""nofollow"">Ruby</a></li>
<li><a href=""http://ScalaCheck.GoogleCode.Com/"" rel=""nofollow"">ScalaCheck</a>, <a href=""http://Scala-Lang.Org/"" rel=""nofollow"">Scala</a></li>
<li><a href=""http://AccessCom.Com/~darius/software/clickcheck.html"" rel=""nofollow"">ClickCheck</a>, <a href=""http://LispWorks.Com/documentation/HyperSpec/Front/"" rel=""nofollow"">CommonLisp</a></li>
<li><a href=""http://xion.io/pyqcy"" rel=""nofollow"">pyqcy</a>, <a href=""http://python.org"" rel=""nofollow"">Python</a></li>
<li><a href=""http://AccessCom.Com/~darius/software/clickcheck.html"" rel=""nofollow"">PeckCheck</a>, <a href=""http://Python.Org/"" rel=""nofollow"">Python</a></li>
<li><a href=""http://Dan.Bravender.US/2009/6/21/Simple_Quickcheck_implementation_for_Python.html"" rel=""nofollow"">qc</a>, <a href=""http://Python.Org/"" rel=""nofollow"">Python</a></li>
<li><a href=""http://Contrapunctus.Net/league/haques/qcheck/"" rel=""nofollow"">QCheck/SML</a>, <a href=""http://SMLNJ.Org/"" rel=""nofollow"">Standard ML</a></li>
<li><a href=""http://www.inf.ufrgs.br/~carlossch/scheme-check/"" rel=""nofollow"">Scheme-Check</a>, <a href=""http://Schemers.Org/"" rel=""nofollow"">Scheme</a></li>
<li><a href=""http://Search.CPAN.Org/~tmoertel/Test-LectroTest-0.3600/"" rel=""nofollow"">Test::LectroTest</a>, <a href=""http://Perl.Org/"" rel=""nofollow"">Perl</a></li>
<li><a href=""http://ReductioTest.Org/"" rel=""nofollow"">Reductio</a>, <a href=""http://Java.Net/"" rel=""nofollow"">Java</a></li>
<li><a href=""http://QuickCheck.Dev.Java.Net/"" rel=""nofollow"">QuickCheck</a>, <a href=""http://Java.Net/"" rel=""nofollow"">Java</a></li>
<li><a href=""http://CodePlex.Com/FsCheck/"" rel=""nofollow"">FsCheck</a>, <a href=""http://FSharp.Net/"" rel=""nofollow"">F#</a></li>
</ul>
"
"<p>I am looking for rules like:</p>

<p>A test is not a unit-test if:</p>

<ul>
<li>it communicates with a database</li>
<li>it cannot run in parallel with other tests</li>
<li>uses the ""environment"" like registry or file system</li>
</ul>

<p>What else is there?</p>
","2988","","<p>A test is not a unit test if it is not testing a unit.</p>

<p>Seriously, that's all there is to it.</p>

<p>The concept of ""unit"" in unit testing is not well-defined, in fact, the best definition I have found so far, isn't actually a definition because it is circular: a unit in a unit test is the smallest possible thing that can be tested in isolation.</p>

<p>This gives you two checkpoints: is it tested in isolation? And is it the smallest possible thing?</p>

<p>Please note that both of these are context-dependent. What might be the smallest possible thing in one situation (say, an entire object) might in another situation just one small piece of one single method. And what counts as isolation in one situation might be in another (e.g. in a memory-managed language, you <em>never</em> run in isolation from the garbage collector, and most of the time that is irrelevant, but sometimes it might not be).</p>
"
"<p>I'm currently backing up my current setup to move over to some new hardware and was wondering what other developers think of first when given a fresh OS installation.</p>

<p>Please answer one item per answer so they can be voted on independently.</p>
","2988","","<p>My SSH private key and my OpenVPN private key.</p>

<p>Since I keep every configuration file and my home directory under version control on a remote server on my VPN, these are the only two things I need to get back all the rest, regardless of where in the world I happen to be. (Well, provided I have broadband internet access.)</p>
"
"<p>With the Ruby 1.9.2 release on the horizon, it's time to get developers excited about Ruby 1.9. What are some nice things you can do in Ruby 1.9 that you can't do in Ruby 1.8?</p>
","2988","","<p>I can't believe that this hasn't been mentioned yet: the single biggest feature of Ruby 1.9.2+ is that for the first time in 17 years, Ruby will have a specification.</p>

<p>You might have heard that all release schedule for Ruby 1.9.2 (which was supposed to be released in the Spring of 2010) <a href=""http://Ruby-Forum.Com/topic/195825/#853518"">has been canceled</a>, and this is the reason: first, a complete specification of Ruby 1.9.2 will be developed in the RubySpec project, then Ruby 1.9.2 (the programming language) will be released, and only then will YARV 1.9.2 be released, <em>after</em> it passes the RubySpec testsuite.</p>

<p>This is exactly backwards from how it worked before: first MRI was released, then all the other implementors read the (not very well designed, and generally badly documented) C source code of MRI, to try and figure out what the heck that new feature was supposed to do, then they tried to write executable specifications, and only then did they even have a remote chance of actual compatibility. But by that time, generally, a new version of YARV had already been released, and the cycle began anew ... Not to mention that the maintainers of MRI and YARV didn't even run the RubySpecs.</p>

<p>This has <em>huge</em> ramifications. For example, despite the fact that currently more than a dozen different Ruby implementations are in active development, and over the years of its existence there have been more than 30 different implementations of the Ruby programming language, this fact has <em>not</em> been acknowledged by the maintainers of the Ruby programming language. For them, Ruby and MRI (or more recently Ruby and YARV) have always been one and the same thing: MRI was both the language and the execution engine, Ruby was both the execution engine and the language. The ""specification"" of the Ruby programming language was the C source code of MRI.</p>

<p>As of five weeks ago, this has changed: now, the official specification of the Ruby programming language (at least version 1.9.2 and later) is the executable testsuite of the RubySpec project. And YARV is just another Ruby implementation, completely equal to MacRuby, IronRuby, JRuby, Cardinal, tinyrb, SmallRuby, BlueRuby, MagLev and the others.</p>

<p>This means that so called ""alternate"" implementations (which as of now should no longer be called ""alternate"" because YARV has lost its special status) now have a chance to actually catch up with the latest language features implemented in YARV. In fact, since most of the other implementations are actually both much better designed and implemented in much better languages than YARV (which is basically a huge spaghetti mess of C), plus having more manpower, it is entirely plausible that other implementations will actually be Ruby 1.9.2 compliant <em>before</em> YARV.</p>
"
"<p>I'm interested in evaluating bug trackers, but I wanted to back up and figure out what sorts of criteria were most important in bug software. So far things I've thought of include:</p>

<ul>
<li>integration with source control</li>
<li>usability</li>
<li>basic features (email notifications, rss, case states)</li>
<li>customization</li>
<li>advanced features (reporting, visualizations)</li>
<li><p>stability</p></li>
<li><p>cost</p></li>
<li>IDE integration</li>
</ul>

<p>Any ideas?</p>
","2988","","<p>There was <a href=""http://News.YCombinator.Com/item?id=809098"" rel=""nofollow"">a recent thread on Hacker News</a> about this exact question. Lots of good stuff in there!</p>
"
"<p>I'm interested in evaluating bug trackers, but I wanted to back up and figure out what sorts of criteria were most important in bug software. So far things I've thought of include:</p>

<ul>
<li>integration with source control</li>
<li>usability</li>
<li>basic features (email notifications, rss, case states)</li>
<li>customization</li>
<li>advanced features (reporting, visualizations)</li>
<li><p>stability</p></li>
<li><p>cost</p></li>
<li>IDE integration</li>
</ul>

<p>Any ideas?</p>
","2988","","<p>Distribution. My version control system is distributed, why shouldn't my bugtracker? If I fix a bug on the train, why should I be able to <em>make</em> the fix but not <em>record</em> it?</p>
"
"<p><em>First note the inflammatory subject title is a <a href=""http://en.wikipedia.org/wiki/The%5Flongest%5Fsuicide%5Fnote%5Fin%5Fhistory"">quotation made about the manifesto of a UK political party</a> in the early 1980s</em>. This question is subjective but it is a genuine question, I've made it CW and I'd like some opinions on the matter.</p>

<p>Despite whatever my wife and coworkers keep telling me, I don't think I'm an idiot: I have a good degree in mathematics from the <a href=""http://www.ox.ac.uk/"">University of Oxford</a> and I've been programming commercially for almost 12 years and in <a href=""http://en.wikipedia.org/wiki/Scala%5F%28programming%5Flanguage%29"">Scala</a> for about a year (also commercially).</p>

<p>I have just started to look at the <a href=""http://lampsvn.epfl.ch/trac/scala/browser/scala/trunk/src/library/scala/collection"">Scala collections library re-implementation</a> which is coming in the imminent <strong>2.8</strong> release. Those familiar with the library from 2.7 will notice that the library, from a usage perspective, has changed little. For example...</p>

<pre><code>&gt; List(""Paris"", ""London"").map(_.length) 
res0: List[Int] List(5, 6)
</code></pre>

<p>...would work in either versions. <strong>The library is eminently useable</strong>: in fact it's fantastic. However, those previously unfamiliar with Scala and <em>poking around to get a feel for the language</em> now have to make sense of method signatures like:</p>

<pre><code>def map[B, That](f: A =&gt; B)(implicit bf: CanBuildFrom[Repr, B, That]): That
</code></pre>

<p>For such simple functionality, this is a daunting signature and one which I find myself struggling to understand. <strong>Not that I think Scala was ever likely to be the next Java</strong> (or /C/C++/C#) - I don't believe its creators were aiming it at that market - but I think it is/was certainly feasible for Scala to become the next Ruby or Python (i.e. to gain a significant commercial user-base)   </p>

<ul>
<li>Is this going to put people off coming to Scala?</li>
<li>Is this going to give Scala a bad name in the commercial world as an <em>academic plaything</em> that only dedicated PhD students can understand? Are <a href=""http://en.wikipedia.org/wiki/Chief%5Ftechnical%5Fofficer"">CTO</a>s and heads of software going to get scared off?</li>
<li>Was the library re-design a sensible idea?</li>
<li>If you're using Scala commercially, are you worried about this? Are you planning to adopt 2.8 immediately or wait to see what happens?</li>
</ul>

<p><a href=""http://en.wikipedia.org/wiki/Steve%5FYegge"">Steve Yegge</a> <a href=""http://steve-yegge.blogspot.com/2008/06/rhinos-and-tigers.html"">once attacked Scala</a> (mistakenly in my opinion) for what he saw as its overcomplicated type-system. I worry that someone is going to have a field day spreading <a href=""http://en.wikipedia.org/wiki/Fear,%5Funcertainty%5Fand%5Fdoubt"">fud</a> with this API (similarly to how Josh Bloch scared the <a href=""http://en.wikipedia.org/wiki/Java%5FCommunity%5FProcess"">JCP</a> out of adding closures to Java).</p>

<p><strong>Note</strong> - <em>I should be clear that, whilst I believe that Josh Bloch was influential in the rejection of the BGGA closures proposal, I don't ascribe this to anything other than his honestly-held beliefs that the proposal represented a mistake.</em> </p>
","2988","","<p>I do not have a PhD, nor any other kind of degree neither in CS nor math nor indeed any other field. I have no prior experience with Scala nor any other similar language. I have no experience with even remotely comparable type systems. In fact, the only language that I have more than just a superficial knowledge of which even <em>has</em> a type system is Pascal, not exactly known for its sophisticated type system. (Although it <em>does</em> have range types, which AFAIK pretty much no other language has, but that isn't really relevant here.) The other three languages I know are BASIC, Smalltalk and Ruby, none of which even have a type system.</p>

<p>And yet, I have no trouble at all understanding the signature of the <code>map</code> function you posted. It looks to me like pretty much the same signature that <code>map</code> has in every other language I have ever seen. The difference is that this version is more generic. It looks more like a C++ STL thing than, say, Haskell. In particular, it abstracts away from the concrete collection type by only requiring that the argument is <code>IterableLike</code>, and also abstracts away from the concrete return type by only requiring that an implicit conversion  function exists which can build <em>something</em> out of that collection of result values. Yes, that is quite complex, but it really is only an expression of the general paradigm of generic programming: do not assume anything that you don't actually have to.</p>

<p>In this case, <code>map</code> does not actually <em>need</em> the collection to be a list, or being ordered or being sortable or anything like that. The only thing that <code>map</code> cares about is that it can get access to all elements of the collection, one after the other, but in no particular order. And it does not need to know what the resulting collection is, it only needs to know how to build it. So, that is what its type signature requires.</p>

<p>So, instead of</p>

<pre><code>map :: (a → b) → [a] → [b]
</code></pre>

<p>which is the traditional type signature for <code>map</code>, it is generalized to not require a concrete <code>List</code> but rather just an <code>IterableLike</code> data structure</p>

<pre><code>map :: (IterableLike i, IterableLike j) ⇒ (a → b) → i → j
</code></pre>

<p>which is then further generalized by only requiring that a function exists that can <em>convert</em> the result to whatever data structure the user wants:</p>

<pre><code>map :: IterableLike i ⇒ (a → b) → i → ([b] → c) → c
</code></pre>

<p>I admit that the syntax is a bit clunkier, but the semantics are the same. Basically, it starts from </p>

<pre><code>def map[B](f: (A) ⇒ B): List[B]
</code></pre>

<p>which is the traditional signature for <code>map</code>. (Note how due to the object-oriented nature of Scala, the input list parameter vanishes, because it is now the implicit receiver parameter that every method in a single-dispatch OO system has.) Then it generalized from a concrete <code>List</code> to a more general <code>IterableLike</code></p>

<pre><code>def map[B](f: (A) ⇒ B): IterableLike[B]
</code></pre>

<p>Now, it replaces the <code>IterableLike</code> result collection with a function that <em>produces</em>, well, really just about anything.</p>

<pre><code>def map[B, That](f: A ⇒ B)(implicit bf: CanBuildFrom[Repr, B, That]): That
</code></pre>

<p>Which I really believe is not <em>that</em> hard to understand. There's really only a couple of intellectual tools you need:</p>

<ol>
<li>You need to know (roughly) what <code>map</code> is. If you gave <em>only</em> the type signature without the name of the method, I admit, it would be a lot harder to figure out what is going on. But since you already <em>know</em> what <code>map</code> is supposed to do, and you know what its type signature is supposed to be, you can quickly scan the signature and focus on the anomalies, like ""why does this <code>map</code> take two functions as arguments, not one?""</li>
<li>You need to be able to actually <em>read</em> the type signature. But even if you have never seen Scala before, this should be quite easy, since it really is just a mixture of type syntaxes you already know from other lanugages: VB.NET uses square brackets for parametric polymorphism, and using an arrow to denote the return type and a colon to seperate name and type, is actually the norm.</li>
<li>You need to know roughly what generic programming is about. (Which isn't <em>that</em> hard to figure out, since it's basically all spelled out in the name: it's literally just programming in a generic fashion).</li>
</ol>

<p>None of these three should give any professional or even hobbyist programmer a serious headache. <code>map</code> has been a standard function in pretty much every language designed in the last 50 years, the fact that different languages have different syntax should be obvious to anyone who has designed a website with HTML and CSS and you can't subscribe to an even remotely programing related mailinglist without some annoying C++ fanboi from the chucrh of St. Stepanov explaining the virtues of generic programming.</p>

<p>Yes, Scala <em>is</em> complex. Yes, Scala has one of the most sophisticated type systems known to man, rivaling and even surpassing languages like Haskell, Miranda, Clean or Cyclone. But if complexity were an argument against success of a programming language, C++ would have died long ago and we would all be writing Scheme. There are lots of reasons why Scala will very likely not be successful, but the fact that programmers can't be bothered to turn on their brains before sitting down in front of the keyboard is probably not going to be the main one.</p>
"
"<pre><code>@user.update_languages(params[:language][:language1], 
                       params[:language][:language2], 
                       params[:language][:language3])
lang_errors = @user.errors
logger.debug ""--------------------LANG_ERRORS----------101-------------"" 
                + lang_errors.full_messages.inspect

if params[:user]
  @user.state = params[:user][:state]
  success = success &amp; @user.save
end
logger.debug ""--------------------LANG_ERRORS-------------102----------"" 
                + lang_errors.full_messages.inspect

if lang_errors.full_messages.empty?
</code></pre>

<p><code>@user</code> object adds errors to the <code>lang_errors</code> variable in the <code>update_lanugages</code> method.
when I perform a save on the <code>@user</code> object I lose the errors that were initially stored in the <code>lang_errors</code> variable.</p>

<p>Though what I am attempting to do would be more of a hack (which does not seem to be working). I would like to understand why the variable values are washed out. I understand pass by reference so I would like to know how the value can be held in that variable without being washed out.</p>
","2988","","<blockquote>
  <p>Is Ruby pass by reference or by value?</p>
</blockquote>

<p>Ruby is pass-by-value. Always. No exceptions. No ifs. No buts.</p>

<p>Here is a simple program which demonstrates that fact:</p>

<pre><code>def foo(bar)
  bar = 'reference'
end

baz = 'value'

foo(baz)

puts ""Ruby is pass-by-#{baz}""
# Ruby is pass-by-value
</code></pre>
"
"<p>I've accidentally stumbled upon an old <a href=""http://lukeredpath.co.uk/blog/developing-a-rails-model-using-bdd-and-rspec-part-1.html"" rel=""nofollow"">article</a> by Luke Redpath that presents a very simple BDD example (very short and easy to follow even for non-Ruby programmers like me). I found the end result very incomplete, thus making the example pretty useless.</p>

<p>The end result is a single test which verifies that a user with preset attributes is valid. In my view, this is simply not enough to verify the validation rules correctly. For example, if you change</p>

<pre><code>validates_length_of :password, :in =&gt; 6..12, :allow_nil =&gt; :true
</code></pre>

<p>to</p>

<pre><code>validates_length_of :password, :in =&gt; 7..8, :allow_nil =&gt; :true
</code></pre>

<p>(or even remove password length validation completely) the test will still pass, but you can obviously see the code is now violating the initial requirements.</p>

<p>I just think the last refactoring of putting all the individual tests into a single one is simply not enough. He tests only the ""happy path"" which doesn't guarantee much. I would absolutely have all the tests that verify that the correct error is triggered with certain values. In the case of the password, I would test that a password of length less than 6 and greater than 12 is invalid and triggers the appropriate error. The ""happy path"" test would be there as well, but not alone by itself as it's in the article.</p>

<p>What's your opinion? I'm just trying to figure out why the guy did it the way he did and whether he simply overlooked the problem or it was his intention. I may be missing something.</p>
","2988","","<p>I don't quite understand your question. The specs <em>do</em> contain expectations about the password lenght, both for the happy path <em>and</em> the two different failure modes (password too long and password too short):</p>

<pre><code>specify ""should be valid with a full set of valid attributes"" do
  @user.attributes = valid_user_attributes
  @user.should_be_valid
end
</code></pre>

<p>This takes care of the happy path, since <code>valid_user_attributes</code> contains a valid password.</p>

<pre><code>specify ""should be invalid if password is not between 6 and 12 characters in length"" do
  @user.attributes = valid_user_attributes.except(:password)
  @user.password = 'abcdefghijklm'
  @user.should_not_be_valid
  @user.password = 'abcde'
  @user.should_not_be_valid
end
</code></pre>

<p>And this tests the two failure modes.</p>

<p>Granted, there is one boundary case missing (12 characters), but that's not too bad.</p>
"
"<p>Not only Compact Framework.
I know about Mono, but it will always be one step behind .NET.</p>
","2988","","<p>I am going to bet you that .NET <em>is</em> already portable <em>today</em>. I'm pretty sure that Microsoft would <em>never</em> have decided to build the XBox 360 on a PowerPC platform if they hadn't <em>already</em> had a working build of .NET for PowerPC. Also, they wouldn't have started building Silverlight if they hadn't <em>alrady</em> had a working build of .NET for OSX.</p>

<p>So, .NET <em>is</em> portable. It's just that Microsoft will never port it.</p>

<p>(It's similar to how OSX was ported to the x86 platform. Apple's engineers were asked how they managed to port the PowerPC-only OSX to x86 that fast. They said it was pretty simple, because OSX never <em>was</em> OSX-only. They <em>always</em> had an x86 build going. They just didn't tell anyone.)</p>

<p>However, I'm also curious about your claim that Mono will always lag behind .NET. I find that curious for two reasons:</p>

<ol>
<li>Literally on the same line you list an example were Mono is lightyears ahead of .NET: Mono has been ported to much more platforms than .NET.</li>
<li>You make this claim just two days after Mono introduced two new features in its implementation of C# that Microsoft's implementation is sorely lacking and many developers have long asked for: string interpolation and multiple return values.</li>
</ol>

<p>Here's a couple of other features that Mono supports and .NET doesn't:</p>

<ul>
<li>SIMD</li>
<li>Continuations</li>
<li>Modularity</li>
<li>static compilation (e.g. for building iPhone apps)</li>
<li>64 bit array indices</li>
<li>Compiler-as-a-Service (Microsoft has announced this for some future version of .NET, and are talking about it like it's the best thing since sliced bread. What they conveniently forget to mention is that Mono had this feature for ages, whereas it's going to take quite some time until it will be available in .NET; definitely not in 4.0.)</li>
<li>(related to Compiler-as-a-Service) C# compiler written in C#</li>
<li>Oh, and let's not forget: Mono is Free Software, that's <em>also</em> a feature, in fact a <em>very</em> important one, that .NET doesn't have</li>
</ul>
"
"<p>I see it used a lot, but haven't seen a definition that makes complete sense. </p>

<p><a href=""http://en.wiktionary.org/wiki/performant"">Wiktionary says</a> ""characterized by an adequate or excellent level of performance or efficiency"", which isn't much help.</p>

<p>Initially I though performant just meant ""fast"", but others seem to think it's also about stability, code quality, memory use/footprint, or some combination of all those.</p>

<p>I think this is a ""real"" question - but if enough people reckon this is a subjective question, that's an answer in itself.</p>
","2988","","<blockquote>
  <p>What does “performant” software actually mean?</p>
</blockquote>

<p>Nothing. Everything. Whatever you want. Whatever the other guy in the discussion wants (which is usually the opposite of yours).</p>

<blockquote>
  <p>I [...] haven't seen a definition that makes complete sense.</p>
</blockquote>

<p>Exactly.</p>

<p>It's a great ignition source for flamewars, that's about all it's useful for.</p>

<p>Exception: <strong>if</strong> you have a <em>precise</em> definition <strong>and</strong> <em>everybody</em> agrees on that definition <strong>and</strong> that definition is in place <em>before</em> the argument starts, then and <em>only</em> then can you have a meaningful discussion / argument.</p>

<p>[BTW: it's the same for ""scalable"" and ""strongly typed"", among others.]</p>
"
"<p>ASP is a Compiled Language or isnt it? sure it is.
PHP is a Interpreted Language. 
I also developed once an asp app with the VS 2008 IDE.
But there is a Big difference between ASP and PHP. 
What are the Differences? </p>
","2988","","<blockquote>
  <p>ASP is a Compiled Language or isnt it? sure it is.</p>
</blockquote>

<p>No, it isn't.</p>

<p>The first reason why ASP is not a compiled language is because there is <em>no such thing</em> as a compiled language. A language is neither compiled nor interpreted. A language just <em>is</em>. A language is a bunch of abstract mathematical rules. Interpretation or Compilation are traits of a language <em>implementation</em>, they have <em>nothing</em> to do with the language. <em>Every</em> language can be implemented by either a compiler or an interpreter; most modern high-performance language implementations actually use <em>both</em> and switch between them depending on which one is faster in a particular context.</p>

<p>The second reason why ASP is not a compiled language is because it is not a language. It is a framework. You can write code for ASP in <em>any</em> language for which an ActiveScripting engine exists (e.g. Ruby via ActiveRuby), but most commonly one would write code in either VBScript or JScript.</p>

<p>Which brings us to the third reason: The implementations of VBScript and JScript that ship with Windows, as well as ActiveRuby and all other ActiveScripting engines that I know of, are <em>pure interpreters</em>, they <em>cannot</em> compile. So, even though I wrote above that <em>any</em> language <em>can</em> be implemented using either a compiler or an interpreter, <em>all</em> the language execution engines that are supported by ASP are <em>interpreted</em>.</p>

<blockquote>
  <p>PHP is a Interpreted Language.</p>
</blockquote>

<p>Again: no, it isn't.</p>

<p>Reason one is the same as above: there simply is no such thing as an interpreted language.</p>

<p>And, in contrast to ASP, the vast majority of PHP implementations actually <em>do</em> contain a compiler. Some even are <em>pure</em> compilers, they don't even <em>have</em> an interpreter. (Phalanger, for example always compiles straight to CIL, with no interpretation whatsoever. P8 can either interpret or compile straight to JVM bytecode or both: interpret, gather profile data while interpreting and then JIT-compile to JVM bytecode.)</p>

<blockquote>
  <p>But there is a Big difference between ASP and PHP. What are the Differences?</p>
</blockquote>

<p>ASP is a (language-independent) framework, PHP is a language. That's a rather big difference. (Actually, PHP contains one small bit that would in other languages usually considered to be part of a web framework: webserver integration.)</p>

<p>PHP is highly portable across operating systems, CPU architectures and webservers: there is a PHP implementation for nearly every execution environment, from the JVM to the CLI to Parrot to running natively on pretty much every operating system under the sun. ASP is pretty tightly bound to Microsoft Internet Information Server, Microsoft Windows and the PC platform. (There were <em>some</em> other implementations but they are pretty obscure and no longer available.)</p>

<p>PHP has lots of different implementations (Phalanger, Quercus, Pipp, PHC, P8, Zend), ASP has only one. (Like I said, the two other ones are no longer available.)</p>

<p>The vast majority of PHP implementations are Open Source (I think the only exception is P8), while all three ASP implementations that I know of are proprietary.</p>

<p>PHP is actively developed and maintained, whereas ASP is largely obsolete and has been superseded by ASP.NET.</p>
"
"<p>I'm well aware of the whole argument over whether or not checked exceptions are a good idea and I fall on the side that they are...but that is not the point of this question. I'm in the process of designing a fairly simple compiled OOP language and I've decided to use checked exceptions basically as a way of returning errors without going down the C route of returning error codes.</p>

<p>I'm looking for some insight as to how I could improve on the Java model of checked exceptions to eliminate most of their bad aspects, perhaps a syntactic change or changing the actual functionality slightly. One of the main criticisms against checked exceptions is that lazy programmers are likely to swallow them and so errors would not appear.</p>

<p>Perhaps it could be optional to catch exceptions and therefore if one is not caught the program would crash? Or maybe there could be specific notation to denote that an exception is not being handled (like the C++ virtual function '= 0' notation)? Or I could even cause the program to crash if the exception handler is empty (though this might surprise programmers new to the language)?</p>

<p>How about the try...catch syntax, do you think there could be a more concise way of expressing that an exception is being caught? The language will use a garbage collector, much like Java, so is there any need for the finally clause? Finally, what other disadvantages are there to checked exceptions and what potential solutions (if any) exist?</p>
","2988","","<p>Checked Exceptions are just a small instance of a more general drive towards what Erik Meijer calls <em>type honesty</em>. I.e. procedures, methods, functions should not lie with their types. If you see a type signature, you should be able to trust its type.</p>

<p>This is not true for Java today (especially if you imagine a Java-- without Checked Exceptions).</p>

<p>If you have a type signature like this in Java:</p>

<pre><code>Foo bar(Baz)
</code></pre>

<p>it says ""I take a <code>Baz</code> as input and produce a <code>Foo</code> as output"". But that's a lie.</p>

<p>Actually, <code>bar</code> takes <em>either</em> a <code>Baz</code> <em>or</em> <code>null</code> as input. It also takes the <em>entire</em> global state, class state and instance state as input, as well as the entire universe, really (via e.g. file I/O, network I/O, database I/O and so forth). And it does not produce a <code>Baz</code> as output either: it produces <em>either</em> a <code>Foo</code> <em>or</em> <code>null</code> <em>or</em> an Exception <em>or</em> <code>Bottom</code> (i.e. nothing at all). <em>Plus</em> its output also includes the entire global state, the entire class state, the entire instance state and really also the entire state of the universe.</p>

<p><code>bar</code>'s <em>actual</em> type is:</p>

<pre><code>(IO&lt;Foo | null | Exception&gt; | Bottom) bar(IO&lt;Baz | null&gt;)
</code></pre>

<p>or something like that.</p>

<p>This needs to be fixed, and Checked Exceptions are a (very small) part of that. I personally think that the other parts are more important and the Java designers should have concentrated on fixing <em>those</em> rather than exceptions (especially since exceptions are just side-effects, anyway and so you actually pretty much automatically fix exceptions for free when you fix side-effects).</p>

<p>Anyway, this is why I believe that the general idea <em>behind</em> Checked Exceptions is a Good Thing&trade;, even if the specific implementation in Java might be a bit cumbersome.</p>

<p>How to fix Checked Exceptions depends a lot on what exactly you think is actually <em>wrong</em> with them.</p>

<p>Some people believe that the problem with Checked Exceptions is that when you change the internal implementation of your method to use a different helper method than it did before, which throws a different set of exceptions than the old one, you need to either explicitly handle those exceptions or declare them, thus breaking all your clients. Now, if that is what you think is wrong with Checked Exceptions, then there is only way to fix them: don't have them in the first place. Changing the exceptions you throw <em>is</em> a breaking change in your API contract, and breaking changes in your API contract <em>should</em> break client code. (Or more precisely: you shouldn't make breaking changes to your API contract, in order to <em>not</em> break client code.)</p>

<p>I believe that the main problem with Checked Exceptions as implemented by Java is that they break one of the main features of exceptions: non-local error handling. An error happens way over here, and is handled way over there, and these two are the only ones that need to know about it. If a different kind of error can happen over here, then the <em>only</em> place that needs to know about that new error and the only place that needs to <em>change</em> is the error handler over there.</p>

<p>With Checked Exceptions as implemented in Java, every piece of code in between <em>also</em> needs to change.</p>

<p>One proposal to fix this problem, are <a href=""http://WWW.CS.KULeuven.Be/publicaties/rapporten/cw/CW407.abs.html"" rel=""nofollow"">Anchored Exception Declarations</a>. (Improved in <a href=""http://WWW.CS.KULeuven.Be/publicaties/rapporten/cw/CW544.abs.html"" rel=""nofollow"">Modular Anchored Exception Declarations</a>.)</p>

<p>The idea of Anchored Exception Declarations is basically to use <em>delegation</em> for the exception declarations the same way that you use delegation in the method body, which is after all what creates the problem in the first place.</p>

<p>Say you have some file reader method which delegates to another method:</p>

<pre><code>String fileReader(String filename) {
  return this.fileHelper.read(filename);
}
</code></pre>

<p>Now you go into the JavaDoc for <code>FileHelper#read</code> and cut&amp;paste the exception list into your method:</p>

<pre><code>String fileReader(String filename) throws IOException, CustomFileReaderEx
</code></pre>

<p>Now the author of <code>FileHelper#read</code> decides that he uses a different implementation strategy. Now he makes sure that the <em>actual</em> file read never can fail, by first ensuring that the file exists, can be opened, and is of the right format. So, naturally, the set of exceptions changes. It is no longer possible to get an <code>IOException</code> or a <code>CustomFileReaderEx</code>. Instead you can get a <code>InvalidFilenameEx</code> or <code>CorruptDataEx</code>. So, you cut&amp;paste again:</p>

<pre><code>String fileReader(String filename) throws InvalidFilenameEx, CorruptDataEx
</code></pre>

<p>Not only did <em>you</em> have to make that change, but everybody else who calls <code>fileReader</code> (and everybody who calls them and everybody who calls them and ...) as well. That's crazy! The reason why you delegated the call to the <code>fileHelper</code> in the first place was so that you need not concern yourself with those details.</p>

<p>So, the idea of Anchored Exception Declarations is to use this delegation for the Exception Declarations themselves. Instead of saying which <em>precise</em> exceptions you throw, you just blame someone else. ""He did it!"":</p>

<pre><code>String fileReader(String filename) throws like this.fileHelper.read
</code></pre>

<p>And your clients just say:</p>

<pre><code>Foo whatever() throws like fileReader
</code></pre>

<p>That way, when <code>FileHelper</code> changes its exceptions, then the <em>only</em> code that needs to change is the very top-level exception handling code, just like I described above for the <em>unchecked</em> case.</p>

<p>There are restrictions, of course. For example, in order to not break encapsulation, you can only use identifiers in your <code>throws like</code> clause which are accessible to all your clients. If, in this case, <code>fileHelper</code> is a <code>private</code> field, you cannot use it. You would need some other way. For example, if the <code>FileHelper</code> class is <code>public</code> (or if it is package private <em>and</em> all your clients live in the same package), you could instead say</p>

<pre><code>String fileReader(String filename) throws like FileHelper.read
</code></pre>

<p>There are other restrictions listed in the paper as well. (One of those is lifted in the Modular Anchored Exception Declarations paper.)</p>

<p>Anyway, this is <em>one</em> way to ameliorate some of the problems with Checked Exceptions. However, Checked Exceptions have been around for almost 40 years now, and we still haven't figured them out, so it's <em>obviously</em> a hard problem.</p>
"
"<p>I found out after testing that linux allows any character in a file name except for <code>/</code> and null (<code>\0</code>). So what sequence should I not allow in a filename? I heard a leading <code>-</code> may confuse some command line programs, which doesn't matter to me, however it may bother other people if they decide to collect a bunch of files and filter it with some GNU programs.</p>

<p>It was suggested to me to remove leading and trailing spaces and I plan to only because typically the user doesn't mean to have leading/trailing space.</p>

<p>What problematic sequence might there be and what sequence should I consider not allowing?
I am also considering not allowing characters illegal in windows just for convenience. I think I may not allow dashes at the beginning (dash is a legal window character)</p>
","2988","","<p>Your question is somewhat confusing since you talk at length about Linux, but then in a comment to another answer you say that you are generating filenames for people to download, which presumably means that you have absolutely no control whatsoever over the filesystem and operating system that the files will be stored on, making Linux completely irrelevant.</p>

<p>For the purpose of this answer I'm going to assume that your question is wrong and your comment is correct.</p>

<p>The vast majority of operating systems and filesystems in use today fall roughly into three categories: POSIX, Windows and MacOS.</p>

<p>The POSIX specification is very clear on what a filename that is guaranteed to be portable across <em>all</em> POSIX systems looks like. The characters that you can use are defined in <a href=""http://OpenGroup.Org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_276"">Section 3.276 (Portable Filename Character Set) of the Open Group Base Specification</a> as:<pre>ABCDEFGHIJKLMNOPQRSTUVWXYZ
abcdefghijklmnopqrstuvwxyz
0123456789._-</pre>The maximum filename length that you can rely on is defined in <a href=""http://OpenGroup.Org/onlinepubs/9699919799/basedefs/limits.h.html#tag_13_23_03_05"">Section 13.23.3.5 (<code>&lt;limits.h&gt;</code> Minimum Values)</a> as <code>14</code>. (The relevant constant is <code>_POSIX_NAME_MAX</code>.)</p>

<p>So, a filename which is up to 14 characters long and contains only the 65 characters listed above, is safe to use on all POSIX compliant systems, which gives you 24407335764928225040435790 combinations (or roughly 84 bits).</p>

<p>If you don't want to annoy your users, you should add two more restrictions: don't start the filename with a dash or a dot. Filenames starting with a dot are customarily interpreted as ""hidden"" files and are not displayed in directory listings unless explicitly requested. And filenames starting with a dash may be interpreted as an option by many commands. (Sidenote: it is amazing how many users don't know about the <code>rm ./-rf</code> or <code>rm -- -rf</code> tricks.)</p>

<p>This leaves you at 23656340818315048885345458 combinations (still 84 bits).</p>

<p>Windows adds a couple of new restrictions to this: filenames cannot end with a dot and filenames are case-insensitive. This reduces the character set from 65 to 39 characters (37 for the first, 38 for the last character). It doesn't add any length restrictions, Windows can deal with 14 characters just fine.</p>

<p>This reduces the possible combinations to 17866587696996781449603 (73 bits).</p>

<p>Another restriction is that Windows treats everything after the last dot as a filename extension which denotes the type of the file. If you want to avoid potential confusion (say, if you generate a filename like <code>abc.mp3</code> for a text file), you should avoid dots altogether.</p>

<p>You still have 13090925539866773438463 combinations (73 bits).</p>

<p>If you have to worry about DOS, then additional restrictions apply: the filename consists of one or two parts (seperated by a dot), where neither of the two parts can contain a dot. The first part has a maximum length of 8, the second of 3 characters. Again, the second part is usually reserved to indicate the file type, which leaves you only 8 characters.</p>

<p>Now you have 4347792138495 possible filenames or 41 bits.</p>

<p>The good news is that you can use the 3 character extension to actually <em>correctly</em> indicate the file type, without breaking the POSIX filename limit (8+3+1 = 12 &lt; 14).</p>

<p>If you want your users to be able to burn the files onto a CD-R formatted with ISO9660 Level 1, then you have to disallow hyphen anywhere, not just as the first character. Now, the remaining character set looks like<pre>ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789_</pre>which gives you 3512479453921 combinations (41 bits).</p>
"
"<p>I'm working on an embedded system, and i'm having dramas getting it to send a certain chunk of data across the serial port. I narrowed it down and found that if a 0x9B is present in the message, it corrupts the message.</p>

<p>So i then look up 0x9b (155) on <a href=""http://www.asciitable.com/"" rel=""nofollow"">http://www.asciitable.com/</a>, and it's missing! Isn't that a bizarre coincidence!</p>

<p>Any ideas, is this a special character or something?</p>

<p>edit: Here's my serial port settings (8N1):</p>

<p><img src=""http://img15.imageshack.us/img15/2844/setn.gif"" alt=""alt text""></p>

<p>-edit- Okay sorry guys, it wasn't the 0x9b causing this, it was an 0x11 character. Which...drumroll... is an XON/XOFF character. I mistakenly had flow control as xon/xoff on the computer, and no flow control on the device! Thanks for the help anyway.</p>
","2988","","<p>For anyone coming to this question just because of the title: <code>0x9B</code> / <code>155</code> is missing from ASCII tables because it isn't an ASCII character. ASCII characters are only 7 bits wide, meaning there are only 128 of them, there simply <em>is</em> no character 155.</p>

<p>[Community Wiki because it doesn't actually answer the question, only the title.]</p>
"
"<p>I'm currently working on the topic of programming-languages and interpreter-design. I have already created several programming languages but couldn't reach my goal so far:</p>

<p>Create a programming-language which focuses on giving the programmer a <em>good feeling</em> when writing code in it. It should just be fun and/or interesting and in no case annoying to write something in it. </p>

<p>I get this feeling when writing code in Python. I sometimes get the opposite with PHP and in rare cases when having to reinvent some wheel in C++.</p>

<p>So I've tried to figure out some syntactical features to make programming in my new language fun, but I just can't find any.</p>

<ul>
<li>Which concrete features, maybe mainly in terms of syntax, do/could make programming in a language fun?</li>
</ul>

<p>Examples:</p>

<p>I find it enjoyable to program in Ruby because of it's use of code blocks.</p>

<ul>
<li>It would be nice if you could include exactly one example in your answer</li>
<li>Those features do not have to already exist in any language!</li>
</ul>

<p>I'm doing this because I have experienced extreme rises in (my own) productivity when programming in languages I love (because of particular features).</p>
","2988","","<p>You mentioned Ruby in your question. AFAIK, Ruby is the <em>only</em> programming language, for which <em>Joy</em> is an actual, stated, explicit design goal. (In fact, it is the <em>only</em> design goal.)</p>

<p>The reason that Yukihiro Matsumoto was able to design Ruby this way, is that he already knew and used <em>tons</em> of programming languages <em>before</em> he started designing Ruby and learned tons more <em>in order to</em> design Ruby. (Interestingly, he didn't know Python, and has said that he probably wouldn't have created Ruby if he did.)</p>

<p>Here's just a tiny fraction of the languages that matz has either used himself, or looked at for inspiration (or in some cases for inspiration what <em>not</em> to do):</p>

<ul>
<li>CLU</li>
<li>Sather</li>
<li>Lisp</li>
<li>Scheme</li>
<li>Smalltalk</li>
<li>Perl</li>
<li>Python</li>
<li>Haskell</li>
<li>Scala</li>
<li>PHP</li>
<li>C</li>
<li>C++</li>
<li>Java</li>
<li>C#</li>
<li>Objective-C</li>
<li>Erlang</li>
</ul>

<p>And I believe that this is one way that good programming languages can be designed (what Larry Wall calls <em>postmodernist language design</em>): Throw away everything that didn't work in the past, take everything that worked and combine that tastefully.</p>

<p>Of course, this requires that you actually <em>know</em> all those languages from which you want to ""steal"" and in particular, it requires that you know lots of very <em>different</em> languages with different paradigms, different concepts and different ""feels"", otherwise the idea pool from which you steal is rather small and inbred.</p>
"
"<p>In C/C++</p>

<p>What happens to code placed between an #if 0/#endif block?</p>

<pre><code>#if 0

//Code goes here

#endif
</code></pre>

<p>Does the code simply get skipped and therefore does not get executed?</p>
","2988","","<blockquote>
  <p>What exactly does an #if 0 … #endif block do?</p>
</blockquote>

<p>It tells you that the author has obviously never heard of a version control system. Which, in turn, tells you to run as far away as possible &hellip;</p>
"
"<p>I would like to ask if there existed a program, which were intended to travel (for example following some physical forces) across the planet, possibly occupying and freeing computational resources/nodes. Literally that means that some agent-based system is just regularly changing it's location and (inevitably to some extent) configuration.</p>

<p>An example would be: suppose you have external sensors, and free computers - nodes - across the space; would it make sense to self-replicate agents to follow the initializers from sensors, but in such restrictive manner that the computation is only localized at where the physical business is going on. </p>

<p>I want to stress that this question is just for 'theoretical' fun, cause I cannot see any practical benefits of the restrictions mentioned, apart from the optimization of 'outdated' (outplaced?) agent disposal. But maybe it could be of some interest. Thank you!</p>

<p>EDIT: It's obvious that a virus is fitting example, although the deletion of such agents is rarely of concern of the developers. More precisely, I'm interested in 'travelling' software - that is, when the count (or at least order) of the agents is kind of constant, and it's just the whole system who travels.</p>
","2988","","<p>I believe what you are looking for is called <em>Mobile Agents</em>.</p>

<p>BTW: I don't believe a virus qualifies. One of the defining characteristics of a virus is that it <em>cannot</em> travel on its own but depends on a human user to spread it. <em>Worms</em> would qualify, though.</p>
"
"<p>I'll try to be concise this time around! I'm still working Project Euler, this time back to #2. My real issue here is I'm terrible with Ruby. When I run the following code </p>

<pre><code>x = 1
y = 2
sum = 2
while x &gt;= 4_000_000 do |x|

  sum += y if y % 2 == 0

  z = x + y

  x = x ^ y   # xor magic
  y = x ^ y   # xor magic
  x = x ^ y   # xor magic

  y = z 
end

p sum
</code></pre>

<p>My interpreter kicks out the following output:</p>

<pre><code>/Users/Andy/Documents/Programming/Ruby/ProjectEuler/P2.rb:4: syntax error, unexpected '|'
while x &gt;= 4_000_000 do |x|
                         ^
</code></pre>

<p>I'm reading <a href=""http://mislav.uniqpath.com/poignant-guide/book/chapter-1.html"" rel=""nofollow"">why's (Poignant) Guide to Ruby</a>, and I'm pretty sure I have the pipe syntax correct for the Do. Could someone point out what I'm doing wrong here? I've tried messing around in a lot of different ways and am coming up short handed</p>
","2988","","<p>What an interesting question! It inspired me to take a shot at the problem, too. Here's my solution.</p>

<p>First, some preparatory work:</p>

<pre><code>class Enumerator
  def lazy_select
    Enumerator.new do |y|
      each do |el|
        y.yield(el) if yield el
      end
    end
  end

  alias_method :lazy_find_all, :lazy_select
end

module Enumerable
  def sum
    reduce(:+)
  end
end

module Math
  ROOT5 = Math.sqrt(5)
  PHI = 0.5 + ROOT5/2

  def self.fibonacci(n)
    Integer(0.5 + PHI**n/ROOT5)
  end
end

class Integer
  def fibonacci
    Math.fibonacci(self)
  end
end
</code></pre>

<p>Now an <code>Enumerator</code> which generates an infinite sequence of Fibonacci Numbers:</p>

<pre><code>fibs = Enumerator.new do |y|
  n = -1
  loop do
    y.yield (n += 1).fibonacci
  end
end
</code></pre>

<p>And the nice thing is that we can now <em>directly</em> express the original problem statement in code:</p>

<blockquote>
  <p>Find the sum of all the even-valued terms in the sequence which do not exceed four million.</p>
</blockquote>

<pre><code>puts fibs.lazy_find_all(&amp;:even?).take_while {|n| n &lt;= 4_000_000 }.sum
</code></pre>

<p>I think that this is a much more Rubyish way to solve the problem. You write in your question that you are terrible with Ruby. But that's not actually the problem. The <em>real</em> problem is that you are good with C! In other words, the real problem is that you simply aren't writing Ruby, you are writing C with Ruby syntax.</p>

<p>Two good examples are:</p>

<pre><code>y % 2 == 0
</code></pre>

<p>and</p>

<pre><code>x = x ^ y
y = x ^ y
x = x ^ y
</code></pre>

<p>The Ruby way to write these would be</p>

<pre><code>y.even?
</code></pre>

<p>and</p>

<pre><code>x, y = y, x
</code></pre>
"
"<p>Is there a definitive specification for Ruby, akin to the Java Language Specification for Java. Googling ruby language specification provides <a href=""http://ruby-std.netlab.jp/"">http://ruby-std.netlab.jp/</a> as a result, but the site is down and i am not sure whether it is current</p>
","2988","","<p>There is <a href=""http://WWW.IPA.Go.Jp/osc/english/ruby/ruby_draft_specification_agreement.html"">a draft</a> for a <a href=""http://WWW.IPA.Go.Jp/osc/english/ruby/"">formal specification</a> of Ruby. It is being developed by the <a href=""http://WWW.IPA.Go.Jp/osc/english/"">Open Standards Promotion Center</a> of the <a href=""http://WWW.IPA.Go.Jp/index-e.html"">Information-Technology Promotion Agency</a> (a Japanese government agency) for submission to the <a href=""http://WWW.JISC.Go.Jp/eng/"">Japanese Industrial Standards Committee</a> and then further on to the <a href=""http://ISO.Org/"">International Organization for Standardization</a>.</p>

<p>However, nobody actually uses this specification. The specification that is <em>actually</em> being used by all the Ruby implementors like <a href=""http://Rubini.us/"">Rubinius</a>, <a href=""http://IronRuby.Net/"">IronRuby</a>, <a href=""http://JRuby.Org/"">JRuby</a>, <a href=""http://MacRuby.Org/"">MacRuby</a>, <a href=""http://MagLev.GemStone.Com/"">MagLev</a> and so on, is the <a href=""http://RubySpec.Org/"">RubySpec</a>.</p>

<p>The three main differences between the ISO Draft Specification and RubySpec are:</p>

<ol>
<li>RubySpec is <em>complete</em>: it covers the entire Ruby language, and the entire core library, from version 1.8.7 to 1.9.2 and 1.9.3. The ISO Draft Specification only covers a very small subset of the intersection of 1.8 and 1.9.</li>
<li>RubySpec is written in <em>Ruby</em> (which is a language that every Rubyist can read), the ISO Draft Specification is written in English, or rather in ISO Standardese (which is a language that only a handful of people on the planet can fully understand).</li>
<li>RubySpec is <em>executable</em>: you can just run it against your Ruby implementation to see what you are still missing.</li>
</ol>

<p>Another great source (pun intended) of information about the behavior of Ruby is the <a href=""https://GitHub.Com/Rubinius/Rubinius/tree/master/kernel/"">source code of the Rubinius kernel</a>, which implements the semantics of the Ruby language and the Ruby core library. (Note: a lot of people prefer <a href=""https://GitHub.Com/Ruby/Ruby/"">the source code</a> of <a href=""http://AtDot.Net/yarv/"">YARV</a>, but I don't, for two reasons: firstly, YARV is in C, which is a language that not every Rubyist knows, whereas Rubinius is in Ruby, which (hopefully) every Rubiyst knows, and secondly, the Rubinius codebase is much better structured, well-designed, well-organized, well-tested, well-documented.)</p>
"
"<p>After reflecting upon all the great answers I received to my <a href=""http://stackoverflow.com/questions/3389588/how-should-i-model-my-code-to-maximize-code-re-use-in-this-specific-situation"">previous question about modeling my code to maximize code re-use</a>, I started wondering if it would be possible to assign the interface to an object at runtime instead of when it is coded.</p>

<p>Take, for example, a simplified portion of code from <a href=""http://stackoverflow.com/questions/3389588/how-should-i-model-my-code-to-maximize-code-re-use-in-this-specific-situation"">my previous question</a>:</p>

<pre><code>public class OutboxManager
{
    private IVendorMessenger _VendorMessenger;

    //This is the default constructor, forcing the consumer to provide
    //the implementation of IVendorMessenger.
    public OutboxManager(IVendorMessenger messenger)
    {
         _VendorMessenger = messenger;
    }

    public void DistributeOutboxMessages()
    {
        VendorMessenger.SendMessageToVendor()
                      _OutboxMgrDataProvider.MarkMessageAsProcessed(om)
    }

}
</code></pre>

<p>Currently, if someone wants to consume this class, they have to code a class that implements <code>IVendorMessenger</code> and provide it during initialization as a parameter:</p>

<pre><code> var MyOutboxManger = new OutboxManager(new MyVendorMessenger())
</code></pre>

<p>What if, instead of hard-coding the interface parameter, it instead gets assinged at runtime?  This way, I could compile a dll for a class that implements <code>IVendorMessenger</code>, drop it into the same folder that <code>OutboxManagerExecutable</code> exists, and it will wire everything up at run time.  I suppose, using this logic, I could figure out a way to drop <em>multiple</em> implementations of <code>IVendorMessenger</code> in the same folder and design the executable to be smart enough to iterate through all appropriate dlls and consume them accordingly.</p>

<p>Is this type of functionality possible in .NET 4?</p>
","2988","","<p>EDIT: I just realized that I misunderstood the question. The question does <em>not</em>, in fact, seem to be about assigning an interface to an object at runtime, but rather about late binding type names.</p>

<p>I'll leave the answer up as Community Wiki, in case someone else has the same misconception.</p>

<hr>

<p>This is usually called <em>Interface Injection</em>, and has been on the wishlist for both the CLI and the JVM for as long as they exist.</p>

<p>Especially the people who write implementations for programming languages that were not natively designed for the CLI or the JVM, like JRuby, XRuby, Ruby.NET, IronRuby, IronPython, Jython, Rhino, IronJS, etc. have this feature high on their wishlist, because it means that they do no longer have to maintain a parallel type hierarchy and marshal objects back and forth between the two.</p>

<p>However, they don't seem to be on the horizon any time soon, or indeed at all, although there is at least a strawman spec for the JVM with an accompanying partial prototype implementation for the Da Vinci Machine.</p>
"
"<p>Are Ruby on Rails site usually slower than java or .net sites?
(This is assuming developers are not abusing the technology.)</p>

<p>A lot of Ruby sites I have seen have performance issues.</p>
","2988","","<p>Yes, Ruby on Rails sites do have performance issues, just like any other site. And just like any other site, those performance almost always are rooted in architectural decisions, not the language or the framework.</p>

<p>There was a nice presentation a couple of years back by Joyent (might have been RailsConf 2007?), which showed on one slide all the servers that are running on a single instance of their Rails platform. About 40 processes. Only one of those processes was the Ruby interpreter, everything else was stuff like the DNS resolver, web server, database server, MTA, memcached, message queue, reverse proxy, load balancer, etc. Every single one of those can screw up your performance. That's a 97.5% chance that your performance problems have nothing whatsoever to do with Rails or Ruby.</p>

<p>There's some really nice E-Mails on the JRuby mailinglists, and also some Tweets and blog posts by people who rewrote their Java web applications in Ruby and got a 10% performance improvement.</p>

<p>A really good example is Twitter. Twitter is one of the biggest Ruby on Rails sites in the world. It is also one with a very unusual usage pattern that will give <em>any</em> framework that is designed for ""normal"" web applications a tough nut to crack.</p>

<p>Now, you might think, why did I choose <em>Twitter</em> of all things as an example of performance and scalabilit, when clearly it is the exact <em>opposite</em> that they are known for? Well, that's exactly the point: they have had a <em>ton</em> of scaling, performance and reliability problems. And not a <em>single one</em> of those had anything to do with Rails or Ruby. In fact, Rails and Ruby were pretty much the only pieces in their stack that they did <em>not</em> have problems with.</p>

<p>They had problems with unexpected growth. It doesn't matter which language or framework you use: if users are signing on faster than you can buy new servers, there is nothing you can do.</p>

<p>They had problems with the performance and scalability of MySQL. Again, MySQL has nothig to do with Rails or Ruby. In fact, MySQL is written in C, so if you <em>really</em> absolutely <em>must</em> make any ridiculous conclusion about a programming language, based solely on a single incident, then it would be this: C is slow. If you want performance, stay away from C.</p>

<p>(In this particular case, in one interview, they actually <em>did</em> blame Rails: they said that because Rails only supported a single connection to a single database, their MySQL instance simply got overloaded. Within hours of that interview being posted, two Rails developers independently of one another both released Rails plugins to implement multiple connections. The lesson is: only the 80% solutions are in the core. Twitter clearly isn't in the 80%. The plugin API is there for a reason.)</p>

<p>They had problems with the performance and scalability of the overall system. It turned out that, in order to get the product out quickly, they implemented absolutely no caching whatsoever. Even the ""static"" Twitter homepage was completely dynamically generated for every single request. Again, this had nothing to do with Rails or Ruby. You can bring <em>any</em> site down by turning off their caches, I guarantee you that.</p>

<p>They hit some very bad scalability problems (and the MySQL problems mentioned above are related to that) which were simply caused by the fact that people used the site in a way not anticipated by the developers. Everybody knows that Twitter is a micro-messaging platform. Well, except for the Twitter founders. They had this brilliant idea for a micro content management system.</p>

<p>And so, they <em>did</em> build a micro-CMS. And of course, the central piece of a content management system, is a content repository, IOW a database. Users however used Twitter as a micro-messaging platform. And the central piece of a messaging platform is a message queue.</p>

<p>As a result, MySQL was being used as a message queue. No two things could be further apart than a database (especially a SQL database) and a message queue. The two have almost exactly opposite requirements and constraints.</p>

<p>And of course, the entire architecture was built <em>around</em> that content repository which was now being abused as a message queue.</p>

<p>In response to that, the Twitter developers wrote their own message queue in Ruby, which helped performance and scalability a lot. But not enough. So, they wrote another message queue, this time in Scala.</p>

<p>It is this single rewrite that is wholly responsible for, I would estimate, at leat 70% of all the Rails FUD out there. But, I don't know about you: when I write something that I have absolutely no idea how to write it, and then I write the exact same thing a second time, when I actually <em>do</em> know what the heck I'm doing &hellip; the second one is always better than the first. And I suspect that this is the case here, too.</p>

<p>In several interviews, the Twitter developers have pointed out that Ruby on Rails was not responsible for their scaling problems. On the contrary, only the maintainability of Ruby made it possible to do such large-scale architectural changes to <em>fix</em> their scaling problems.</p>

<p>To cut a long story short: today, Twitter is actually using Ruby on Rails for what it was intended to be used: for a web application. And they use a database for storing data and not as a message queue. And they use an actual proper message queue. The message queue and some other backend stuff is written in Scala. The frontend is written in Ruby on Rails. Some stuff is written in C.</p>

<p>And all is peachy.</p>

<p>The <em>real</em> moral of the story here is that you can substitute pretty much <em>any</em> large web app, any language, any framework into the above story and it would still be true. MySpace is one of the slowest, most unreliable websites I know, and that is a .NET site. GitHub is one of the fastest websites I know, while being the biggest hosting platform (it has over a million repositories after just over 2 years, that's more than SourceForge and Google Code combined) and it is written in Ruby on Rails for the frontend, Sinatra for the web service, Ruby for the Git interfacing and Git infrastructure, Erlang for the federation and cloud infrastructure and Node.JS for the download server.</p>
"
"<p>The code:</p>

<pre><code>public String getTemperatureMessage(double temp)
{
    if(temp &lt; 32)
        return ""Freezing"";
    else if(temp &lt; 60)
        return ""Brr"";
    else if(temp &lt; 80)
        return ""Comfortable"";
    else
        return ""Too hot"";
}
</code></pre>

<p>Regarding the code snippet above, the else ifs are technically superfluous and don't change the behavior at all. However, I tend to like to put them in there to emphasize that the conditions are exclusive. What are your thoughts? Unnecessary or more clear?</p>
","2988","","<p>Personally, I think the <code>else</code>s are unnecessary. Since this question is tagged as <code>[language-agnostic]</code>, I'm going to provide a couple of examples of how I would write it:</p>

<pre><code>def temperature_message(temp)
  return 'Freezing'    if temp &lt; 32
  return 'Brr'         if temp &lt; 60
  return 'Comfortable' if temp &lt; 80
  'Too hot'
end
</code></pre>

<p>This is typical guard clause style, which both I personally and the Ruby community in general use quite often.</p>

<pre><code>def temperature_message(temp)
  case
  when temp &lt; 32
    'Freezing'
  when temp &lt; 60
    'Brr'
  when temp &lt; 80
    'Comfortable'
  else
    'Too hot'
  end
end
</code></pre>

<p>This is a typical <code>switch</code> as you would find it in some less powerful languages. This is probably one that I would <em>not</em> use, I would refactor it like this:</p>

<pre><code>def temperature_message(temp)
  case temp
  when (-1.0/0.0)...32
    'Freezing'
  when 32...60
    'Brr'
  when 60...80
    'Comfortable'
  else
    'Too hot'
  end
end
</code></pre>

<p>Although I must admit I still find the first one easiest to read.</p>

<p>Since this is basically a mapping table, I would try to format it as such, so that everybody who reads the code, immediately sees the ""table-ness"":</p>

<pre><code>def temperature_message(temp)
  case temp
  when (-1.0/0.0)...32 then 'Freezing'
  when         32...60 then 'Brr'
  when         60...80 then 'Comfortable'
                      else 'Too hot'
  end
end
</code></pre>

<p>This also applies to your original Java implementation:</p>

<pre><code>public String getTemperatureMessage(double temp) {
    if(temp &lt; 32) return ""Freezing"";
    if(temp &lt; 60) return ""Brr"";
    if(temp &lt; 80) return ""Comfortable"";
    else          return ""Too hot"";
}
</code></pre>

<p>Of course, since it <em>is</em> basically a mapping table, you might just as well implement it as a map:</p>

<pre><code>def temperature_message(temp)
  {
    (-1.0/0.0)...32       =&gt; 'Freezing',
            32...60       =&gt; 'Brr',
            60...80       =&gt; 'Comfortable',
            80..(1.0/0.0) =&gt; 'Too hot'
  }.detect {|range, _| range.include?(temp) }.last
end
</code></pre>
"
"<p>The name for Lisp derives from <b>LIS</b>t <b>P</b>rocessing. Linked lists are the major data structure of Lisp languages, and Lisp source code is itself made up of lists. As a result, Lisp programs can manipulate source code as a data structure (this is known as homoiconicity).</p>

<p>However, a list is by definition a sequential construct. This encourages us to solve problems using sequential language idioms (algorithms that process one thing at a time and accumulate the results). For example, in a Lisp where <em>cons</em> cells are used to implement singly-linked lists, the <em>car</em> operation returns the first element of the list, while <em>cdr</em> returns the rest of the list. My vision is of a functional language for parallel execution, that splits problems into roughly equal sub-problems, recursively solves them, and combines the sub-solutions.</p>

<p>Pretty much every programming language's code is already parsed into trees; is there a homoiconic language like Lisp, but with trees as the major data structure? btw, I'd call it Treep, for <b>TREE</b> <b>P</b>rocessing.</p>

<p><em>Update:</em> An interesting presentation (PDF) from 2009 by Guy Steele on parallel algorithms &amp; data structures, <a href=""http://research.sun.com/projects/plrg/Publications/ICFPAugust2009Steele.pdf"" rel=""nofollow""><em>Organizing Functional Code for Parallel Execution: or, <code>foldl</code> and <code>foldr</code> Considered Slightly Harmful</em></a>.</p>
","2988","","<p>The canonical example of a homoiconic tree processing language is XSLT. But you probably don't want to write (nor read) anything substantial in it.</p>
"
"<p>What are some examples of large projects (e.g., web sites) programmed in Lisp or a Lisp framework?</p>
","2988","","<p>The Operating System and in fact the <em>entire</em> system on the various Lisp Machines was written in Lisp. In fact, while the commercial Lisp Machines often used more traditional languages such as Verilog and VHDL, on some of the more ""researchy"" Lisp Machines, even the <em>CPU</em> was written in Lisp.</p>

<p>Lispers just <em>love</em> their language. They'd rather write <em>everything</em> in it. (In that way, they are similar to Smalltalkers.)</p>
"
"<p>What are some examples of large projects (e.g., web sites) programmed in Lisp or a Lisp framework?</p>
","2988","","<p><a href=""http://Flightcaster.Com/"" rel=""nofollow"">Flightcaster</a> is a heavy user of <a href=""http://Clojure.Org/"" rel=""nofollow"">Clojure</a>. While Ruby on Rails provides the pretty face, all the ""thinking"" (statistical analysis / machine learning) is done in Clojure.</p>
"
"<p>I've been told that ruby 1.9.2 is ruby 2.0 but ruby 1.9.3 is slated to be released in the near future and it will contain some performance enhancements.</p>

<p>So what are they planning for 2.0? Will it be much different than ruby 1.9.x?</p>
","2988","","<p>Two features that are already implemented in YARV, and which will most likely end up in Ruby 2.0, are traits (<code>mix</code>) and <code>Module#prepend</code>.</p>

<p>The <code>mix</code> method, unlike the current <code>include</code> method, takes a <em>list</em> of modules, and mixes all of them in at the same time, making sure that they have no conflicting methods. It also gives you a way to easily resolve conflicts, if e.g. two modules you want to mix in define the same method. So, basically, while the <code>include</code> method allows you to treat a module as a mixin, the <code>mix</code> method allows you to treat a module as a trait.</p>

<p><code>Module#prepend</code> mixes a module into a class or module, again just like <code>include</code> does, but instead of inserting it into the inheritance chain just <em>above</em> the class, it inserts is just <em>below</em> the class. This means that methods in the module can override methods in the class, and they can delegate to the overriden methods with <code>super</code>, both of which is not possible when using <code>include</code>. This basically makes <code>alias_method_chain</code> obsolete.</p>

<p>One feature that has been discussed for a couple of months (or 10 years, depending on how you count), are Refinements. There has been discussion for over 10 years now to add a way to do scoped, safe monkey patching in Ruby. I.e. a way where I can monkey patch a core class, but only my code sees that monkey patch, other code doesn't. For many years, the frontrunner for that kind of safe monkey patching were Selector Namespaces, however more recently, Classboxes have been getting a lot of attention, and even more recently, a prototype implementation and specification of Refinements, a variant of Classboxes, was put forward.</p>

<p>Generally speaking, the big theme of Ruby 2.0 is scalability: scaling <em>up</em> to bigger teams, bigger codebases, bigger problem sizes, bigger machines, more cores. But also scaling <em>down</em> to smaller machines like embedded devices.</p>

<p>The three features I mentioned above are for scaling to bigger teams and bigger codebases. Some proposed features for scaling to bigger problem sizes and more cores are parallel collections and parallel implementations of <code>Enumerable</code> methods such as <code>map</code>, as well as better concurrency abstractions such as futures, promises, agents, actors, channels, join patterns or something like that.</p>
"
"<p>i just want to know whether other programming languages/platforms like PHP, Ruby, C# etc. (where you dont have to manually deal with memory-managment) have the same prolem with GC like Java on JVM which results in long pause, high response time, low throughput etc. on large heap size (> 5gb)?</p>

<p>Or that's a general problem with all languages/platforms with GC-Ability, but it is in java-world a hot discussion thema just because there are many large scale systems are written in Java out there and one oftener have to deal with this problem then elsewhere?</p>

<p>Thx you very much!</p>
","2988","","<p>This has nothing to with the programming language. It's a question of the quality of the garbage collector implementation.</p>

<p>Realtime garbage collectors with predictable and tunable pause times times have been known since the 1970s. Nowadays, it gets even easier: as machines routinely have 1000s of CPUs, just set a couple dozen or so aside for the garbage collector to run on, and do the collection concurrently.</p>

<p>The Azul Jaca Compute Appliance, for example, does exactly that. It is specifically designed for very large applications with very large heaps and near-realtime requirements (e.g. automated trading systems for hedgefonds). And since the JCA runs a JVM, and both Ruby and PHP (and Python, Smalltalk, Lisp, Scheme, JAvaScript, &hellip;) run on the JVM, they get access to that technology as well.</p>

<p>The current version (JCA 7300) has up to 864 CPUs and 768 GiByte of RAM. Typically, the grbage collector(s) will use 20&ndash;30 CPUs, leaving well over 700 (the JIT compiler also uses a dozen or three) for the application(s). That's still way more than almost all applications can handle.</p>
"
"<p>My service(written in Java) returns me an output in the format:</p>

<pre><code> ""serviceMetricList"": 
  [
    {""MetricDataList"": 
      {""metricDataList"": 
        [
          {""metricDate"": ""2011-04-05T14:50:00.000Z"", 
           ""metricValue"": ""427448.0""}, 
          {""metricDate"": ""2011-04-12T14:30:00.000Z"", 
           ""metricValue"": ""430089.0""}
        ]
      }, 
     ""urlSerialNo"": ""1""}
     }
  ]
</code></pre>

<p>I need to retrieve the values metricDate and metricValue from my Ruby client. Am not sure about how this can be done. Any help in this regard will be great.</p>
","2988","","<p>If you want to parse this data format, you first need to know what data format it is. It doesn't appear to be any well-known data format and it's not any format I know. It's obviously not JSON, nor is it YAML and definitely not XML.</p>

<p>So, you'll probably have to write your own parser. Or a preprocessor which converts the data into a more well-known format, for wich a parser already exists.</p>

<p>For example, if you were to convert the example to YAML, it would look something like this:</p>

<pre><code>""serviceMetricList"": 
  [
    {""MetricDataList"": 
      {""metricDataList"": 
        [
          {""metricDate"": ""2011-04-05T14:50:00.000Z"", 
           ""metricValue"": ""427448.0""}, 
          {""metricDate"": ""2011-04-12T14:30:00.000Z"", 
           ""metricValue"": ""430089.0""}
        ]
      }, 
     ""urlSerialNo"": ""1""
    }
  ]
</code></pre>

<p>And you could parse it like this:</p>

<pre><code>require 'yaml'
h = YAML.load(your_java_data)

Date.parse(h['serviceMetricList'][0]['MetricDataList']['metricDataList'][0]['metricDate'])
# =&gt; #&lt;Date: 2011-04-05 (4911313/2,0,2299161)&gt;

Float(h['serviceMetricList'][0]['MetricDataList']['metricDataList'][0]['metricValue'])
# =&gt; 427448.0

# or maybe, if you don't like to lose precision:
require 'bigdecimal'

BigDecimal(h['serviceMetricList'][0]['MetricDataList']['metricDataList'][0]['metricValue'])
# =&gt; #&lt;BigDecimal:eb8240,'0.427448E6',8(12)&gt;
</code></pre>
"
"<p>From searching elsewhere on this site and the web, tail call optimization is not supported by the JVM. Does that therefore mean that tail recursive Scala code such as the following, which may run on very large input lists, should not be written if it is to run on the JVM?</p>

<pre><code>// Get the nth element in a list    
def nth[T](n : Int, list : List[T]) : T = list match {
            case Nil =&gt; throw new IllegalArgumentException
            case _ if n == 0 =&gt; throw new IllegalArgumentException
            case _ :: tail if n == 1 =&gt; list.head
            case _ :: tail  =&gt; nth(n - 1, tail)
}
</code></pre>

<p>Martin Odersky's Scala by Example contains the following paragragh which seems to suggests that there are circumstances or other environments where recursion is appropriate:</p>

<blockquote>
  <p>In principle, tail calls can always re-use the stack frame of the calling
  function. However, some run-time environments (such as the Java VM) lack the
  primitives to make stack frame re-use for tail calls efficient. A production quality
  Scala implementation is therefore only required to re-use the stack frame of a di-
  rectly tail-recursive function whose last action is a call to itself. Other tail calls might
  be optimized also, but one should not rely on this across implementations.</p>
</blockquote>

<p>Can anyone explain what this middle two sentences of this paragraph mean?</p>

<p>Thank you!</p>
","2988","","<blockquote>
  <blockquote>
    <p>In principle, tail calls can always re-use the stack frame of the calling
    function. However, some runtime environments (such as the Java VM) lack the
    primitives to make stack frame re-use for tail calls efficient. A production quality
    Scala implementation is therefore only required to re-use the stack frame of a di
    rectly tail-recursive function whose last action is a call to itself. Other tail calls might
    be optimized also, but one should not rely on this across implementations.</p>
  </blockquote>
  
  <p>Can anyone explain what this middle two sentences of this paragraph mean?</p>
</blockquote>

<p>Tail recursion is a special case of a tail call. Direct tail recursion is a special case of tail recursion. <em>Only</em> direct tail recursion is guaranteed to be optimized. Others <em>may</em> be optimized, too, but that's basically just a compiler optimization. As a <em>language feature</em>, Scala only guarantees direct tail recursion elimination.</p>

<p>So, what's the difference?</p>

<p>Well, a tail call is simply the last call in a subroutine:</p>

<pre><code>def a = {
  b
  c
}
</code></pre>

<p>In this case, the call to <code>c</code> is a tail call, the call to <code>b</code> is not.</p>

<p>Tail <em>recursion</em> is when a tail call calls a subroutine that was already called before:</p>

<pre><code>def a = {
  b
}

def b = {
  a
}
</code></pre>

<p>This is tail recursion: <code>a</code> calls <code>b</code> (a tail call), which in turn calls <code>a</code> again. (In contrast to the direct tail recursion described below, this is sometimes called <em>indirect</em> tail recursion.)</p>

<p>However, none of the two examples will get optimized by Scala. Or, more precisely: a Scala implementation is <em>allowed</em> to optimize them, but it is not <em>required</em> to do so. This is in contrast to, e.g. Scheme, where the language specification guarantees that all of the above cases will take <code>O(1)</code> stack space.</p>

<p>The Scala Language Specification <em>only</em> guarantees that <em>direct</em> tail recursion is optimized, i.e. when a subroutine <em>directly</em> calls <em>itself</em> with no other calls in between:</p>

<pre><code>def a = {
  b
  a
}
</code></pre>

<p>In this case, the call to <code>a</code> is a tail call (because it is the last call in the subroutine), it is tail recursion (because it calls itself again) and most importantly it is <em>direct</em> tail recursion, because <code>a</code> directly calls itself without going through another call first.</p>

<p>Note that there are many subtle things that may lead to a method not being directly tail-recursive. For example, if <code>a</code> is overloaded, then the recursion may actually go through different overloads, and thus would no longer be direct.</p>

<p>In practice, this means two things:</p>

<ol>
<li>you cannot perform an Extract Method Refactoring on a tail-recursive method, at least not including the tail call, because this would turn a directly tail-recursive method (which will get optimized) into an indirectly tail-recursive method (which will not get optimized).</li>
<li>You can <em>only</em> use direct tail recursion. A tail-recursive descent parser, or a state machine, which can be very elegantly expressed using indirect tail recursion, are out.</li>
</ol>

<p>The main reason for this is that when your underlying execution engine lacks powerful control flow manipulation features such as <code>GOTO</code>, continuations, first-class mutable stack or proper tail calls, then you need to either implement your own stack on top of it, use trampolines, make a global CPS transform or something similarly nasty, in order to provide generalized proper tail calls. All of these have either severe impact on performance or interoperability with other code on the same platform.</p>

<p>Or, as Rich Hickey, the creator of Clojure, said when he was facing the same problem: ""Performance, Java interop, tail calls. Pick two."" Both Clojure and Scala chose to compromise on tail calls and provide only tail recursion and not full tail calls.</p>

<p>To cut a long story short: yes, the specific example you posted will be optimized, since it is direct tail recursion. You can test this by putting an <code>@tailrec</code> annotation on the method. The annotation does not change whether or not the method gets optimized, it <em>does</em> however guarantee that you will get a compile error if the method can <em>not</em> be optimized.</p>

<p>Due to the above-mentioned subtleties, it is generally a good idea to put an <code>@tailrec</code> annotation on methods that you need to be optimized, both in order to get a compile error, but also as a hint to other developers maintaining your code.</p>
"
"<p>I have a two part question:</p>

<p><strong>Part 1</strong></p>

<p>I have a module that has a public class method which depends on a few private helper methods in the module. What is the best way to test these private helper methods? They contain complex logic that needs to be tested, but they should not be exposed to be called as they alone provide nothing useful.</p>

<p>I read on <a href=""http://stackoverflow.com/questions/318850/private-module-methods-in-ruby"">this</a> stackoverflow post that the convention is to do:</p>

<pre><code>module GTranslate
  class Translator
    def perform( text ); 'hola munda'; end
  end

  def self.translate( text )
    t = Translator.new
    t.perform( text )
  end
end
</code></pre>

<p>and then write tests on the public methods of class <code>GTranslate::Translator</code>. However, I do not want this class to be able to instantiate or have the methods on them called.</p>

<p><strong>Part 2</strong></p>

<p>Seeing that the public method on a module is defined as <code>self.someMethodName</code>, does this mean the helper methods have to be defined as <code>self.helperName</code>?</p>

<p>There will be no instance of a module (if you can even create instances of modules (I'm new to Ruby)) so I can't use the <code>send</code> method defined on an instance to invoke the method from my tests?</p>

<p>Any ideas?</p>
","2988","","<p>There are two cases:</p>

<ol>
<li>The private method gets called by a public method, or by a private method that gets called by a public method, or by a private method that gets called by a private method that gets called by a public method, or &hellip; (you get the idea). In that case, you don't need to test the private method, because it is already tested through the public method.</li>
<li>The private method never gets called by a public method. In that case, you don't need to test it either, you can simply delete it because it never gets called.</li>
</ol>

<p>So, in both cases you simply don't need to test it in the first place.</p>

<p>(Note that it's a little bit more complicated than that, since the private method might be called via reflection or other means. But the gist is: either someone somewhere calls the private method, in which case it is tested through that someone, or noone calls the private method, in which case it is dead code.)</p>

<p>If I may make a small advertisement for Test-Driven Development: in TDD, it is actually impossible for untested private methods to exist. The only way for a private method to be introduced into the system, is by extraction from an already tested public method. (Actually, in TDD, it is impossible for <em>any</em> untested code to exist, so the statement that it is impossible for untested private methods to exist is trivially true.)</p>

<p>In general, private methods usually are created by extracting them from a public method that has become too big or too complex. The nice thing about this is that the Extract Method Refactoring has a very convenient property: like all other Refactorings, it doesn't change the externally observable behavior, but <em>unlike</em> many other Refactorings, which entail rather significant changes to the internal logic (e.g. the Null Object Refactoring or the Replace Conditional With Polymorphism Refactoring), it does <em>not</em> change the internal logic, either. It just shuffles code around. (In fact, with a good optimizing compiler like the one in Rubinius, IronRuby or JRuby, the calls to the private methods will probably be inlined, so that the code that gets actually executed is 100% the same both before and after extracting the methods.)</p>

<p>So, if your code was tested before you moved into a private method, then it is guaranteed to still be tested after you move it.</p>
"
"<p>How do you write the following using the <code>Symbol#to_proc</code> syntax?</p>

<pre><code>[[a,1],[b,2],[c,3]].map { |r| r[0] }
</code></pre>

<p>This gives an error that the number of arguments is wrong. But I do not know where to give the index argument.</p>

<pre><code>[[a,1],[b,2],[c,3]].map &amp;:[]  # Where to put the index 0 ?
</code></pre>

<p>I prefer the first form, and I just want to know how to do it using <code>&amp;:</code>.</p>
","2988","","<p><code>Symbol#to_proc</code> takes the first argument to be the receiver and passes on any extra arguments it receives to the method, but in this case it gets passed only one argument, because <code>Enumerable#map</code> only passes the element as the only argument.</p>

<p>However, if that only argument happens to be an <code>Array</code>, then we can use the destructuring bind feature of block argument binding! So, we can simply use <code>Enumerable#zip</code> to zip together our elements with an infinite list of <code>0</code>s! This, of course, requires that we use something which has block argument binding semantics, i.e. either a block proper:</p>

<pre><code>[[a,1],[b,2],[c,3]].zip([0].cycle).map {|el, i| el[i]}
</code></pre>

<p>or a non-lambda <code>Proc</code></p>

<pre><code>f = proc {|a, i| a[i] }

[[a,1],[b,2],[c,3]].zip([0].cycle).map(&amp;f)
</code></pre>

<p>It does, however, not work with <code>Method</code>s or lambdas, because those don't have block argument binding semantics, they have method argument binding semantics, thus they don't perform automatic destructuring. <code>Symbol#to_proc</code>, of course, does a message send, thus ending up invoking a method and not a non-lambda <code>Proc</code> or a block. That's why this won't work with <code>Symbol#to_proc</code>.</p>
"
"<p>In Netbeans 7, Ruby support was dropped:</p>

<blockquote>
  <p>Although our Ruby support has
  historically been well received, based
  on existing low usage trends we are
  unable to justify the continued
  allocation of resources to support the
  feature.</p>
</blockquote>

<p>How can I use it in Netbeans 7?</p>
","2988","","<p><em>Oracle</em> stopped supporting the NetBeans Ruby plugin, but the development has been taken over by the community. In fact, there are now <em>more</em> people working on the plugin than back when Oracle <em>did</em> still support it, including three of the lead developers of JRuby, one of the original developers of the NetBeans Ruby plugin and one former NetBeans core developer, all of whom would probably not be working on it if it was still controlled by Oracle.</p>

<p>They are still using the NetBeans source control repository, the NetBeans project infrastructure, the NetBeans build server, the NetBeans plugin server, &hellip; in order to keep the transition as seamless as possible.</p>

<p>Pretty much the only difference is that you can no longer select the plugin directly in the installer, you have to install NetBeans first and then install it via the plugin menu, just like every other plugin, like the Scala or Clojure plugins, for example.</p>

<p>Just download and install the All-In-One Edition, deactivate all options except <code>Base IDE</code> during installation and install the Ruby plugin afterwards.</p>

<p>The plugin center for Ruby from the Continuous Integration server is <a href=""http://Deadlock.NetBeans.Org/hudson/job/ruby/lastSuccessfulBuild/artifact/build/updates/updates.xml"">http://Deadlock.NetBeans.Org/hudson/job/ruby/lastSuccessfulBuild/artifact/build/updates/updates.xml</a></p>
"
"<p>I wrote some code in a Ruby library (incidentally used in Rails) that raised a RuntimeError somewhat like below:</p>

<pre><code>class MyClass
  def initialize(opts = {})
     # do stuff
     thing = opts[:thing]
     raise RuntimeError ""must have a thing!"" unless thing.present? &amp;&amp; thing.is_a?(Thing)
     # more stuff
  end
end
</code></pre>

<p>and when I ran my fresh new rspec spec over it, which looks somewhat like:</p>

<pre><code>it ""should raise an error if we don't pass a thing"" do
  lambda {
    my_class = MyClass.new(:thing =&gt; nil)
  }.should raise_exception(RuntimeError)
end
</code></pre>

<p>I kept getting something weird:</p>

<pre><code>expected RuntimeError, got 
#&lt;NoMethodError: undefined method `RuntimeError' for #&lt;MyClass:0xb5acbf9c&gt;&gt;
</code></pre>
","2988","","<p>Just to add a little bit more explanation: in Ruby, there is an ambiguity between variable references and message sends.</p>

<pre><code>foo
Foo
</code></pre>

<p>Could <em>either</em> mean ""dereference the variable named <code>foo</code> (or <code>Foo</code>)"" <em>or</em> ""send the message <code>:foo</code> (or <code>:Foo</code>) with an empty argument list to the default receiver"".</p>

<p>This ambiguity is resolved as follows:</p>

<ol>
<li>If <code>foo</code> starts with a lower-case letter, it is assumed to be a message send, unless the parser has seen an assignment to <code>foo</code> before, in which case it is treated as a variable dereference. (Note that the assignment only needs to <em>parsed</em>, not executed; <code>if false then foo = nil end</code> is perfectly fine.)</li>
<li>If <code>Foo</code> starts with an uppercase letter, it is treated as a variable (or rather constant) dereference, unless you pass an argument list (even an empty one), in which case it is treated as a message send.</li>
</ol>

<p>In this case, <code>RuntimeError</code> is treated as a message send, because it has an argument list: <code>""must have a thing!""</code>. This is, of course, because of another of Ruby's peculiarities, namely that it allows you to leave out the parentheses around an argument list, as long it is unambiguous.</p>

<p>IOW: the whole thing is interpreted roughly as</p>

<pre><code>self.RuntimeError(""must have a thing!"")
</code></pre>
"
"<p>if arguments.callee is not allowed in ""use strict"", and we can't do</p>

<pre><code>var f = function g() {
    //g
}
</code></pre>

<p>because in IE that wouldn't work (or that would work ""weirdly"") <a href=""http://kangax.github.com/nfe/#jscript-bugs"" rel=""nofollow"">http://kangax.github.com/nfe/#jscript-bugs</a>, then what other options do we have to refer to the anonymous function within the function itself?</p>
","2988","","<p>That's <em>precisely</em> what the <a href=""http://StackOverflow.Com/q/93526/"">Y combinator</a> is for.</p>

<p><a href=""http://Blog.JCoglan.Com/2008/01/10/deriving-the-y-combinator/"" rel=""nofollow"">Here's an article by James Coglan about deriving the Y combinator in JavaScript.</a></p>
"
"<p>I can't seem to grasp the exact difference between these two ""constructs"". To my mind, the following small script should output the same thing three times:</p>

<pre><code>class Example
  puts self

  class &lt;&lt; self
    puts self
  end

  instance_eval do
    puts self
  end
end
</code></pre>

<p>However, the output is:</p>

<pre><code>Example
#&lt;Class:Example&gt;
Example
</code></pre>

<p>Here's my rationale:</p>

<ul>
<li><code>Example</code> is an instance of <code>Class</code>, so <code>self</code> in the class body refers to that;</li>
<li><code>class &lt;&lt; obj</code> sets <code>self</code> to whatever <code>obj</code> is in the given block, which in my case is the instance of <code>Class</code> that is <code>Example</code> (this is where I'm probably wrong);</li>
<li><code>instance_eval</code> runs the block in the given instance, so, in my case it's pretty much the same as putting the code in the block directly in the class body.</li>
</ul>

<p>My current guess is that <code>class &lt;&lt; self</code> inserts a ghost class between <code>Example</code> and <code>Class</code> and sets self to that, but the output of <code>#&lt;Class:Example&gt;</code> is not confirming that at all.</p>

<p>So what is wrong with my rationale?</p>
","2988","","<blockquote>
  <p><code>class &lt;&lt; obj</code> sets <code>self</code> to whatever <code>obj</code> is in the given block, which in my case is the instance of <code>Class</code> that is <code>Example</code> (this is where I'm probably wrong);</p>
</blockquote>

<p>No, <code>class &lt;&lt; obj</code> opens up the <em>singleton class</em> of <code>obj</code>. As you correctly pointed out, inside of a class declaration, <code>self</code> refers to the class itself, so, in this case, the ""inner"" <code>self</code> (i.e. the one being passed to <code>puts</code>) refers to the <em>singleton class</em> of <code>Example</code>.</p>
"
"<p>I've tried reading about procs and lambda's but I have to keep re-reading the definition.</p>

<p>Can someone explain it to me in a way that is clear and memorable?</p>
","2988","","<p><code>Proc</code>s behave like blocks. Lambdas behave like methods.</p>

<p>I.e. <code>return</code> inside a <code>Proc</code> behaves like <code>return</code> inside a block and argument binding for <code>Proc</code>s works the same as argument binding for blocks. <code>return</code> inside a lambda works like <code>return</code> inside a method and argument binding for lambdas works the same as argument binding for methods.</p>

<p>Note, however, that lambdas <em>are</em> <code>Proc</code>s, i.e. they are instances of the <code>Proc</code> class. The difference between them is whether <code>Proc#lambda?</code> is <code>true</code> or <code>false</code>.</p>

<p>Note also that in older versions of Ruby, <code>Kernel#proc</code> created a lambda and <em>not</em> a <code>Proc</code>, which was utterly confusing. This has been fixed in modern versions of Ruby, where <code>Kernel#proc</code> is now equivalent to <code>Proc.new</code> and thus creates a <code>Proc</code>.</p>

<p><code>Kernel#lambda</code> and the lambda literal syntax (<code>-&gt;(x, y) { x + y }</code>) always create a lambda, <code>Proc.new</code> always creates a <code>Proc</code> and <code>Kernel#proc</code> depends on the Ruby version.</p>
"
"<p>So a game I'm developing has a map system where individual parts of the map can be loaded independently from (most of) the other parts.</p>

<p>I wanted to have a random number generator which, given a seed number, and a map part number, would generate a random number. But this number has to be consistent for each pair of seed and map part number.</p>

<p>What is such a random number generator called? Also, what are good examples of such a RNG?</p>
","2988","","<p>It sounds to me like you're not looking for a PRNG at all, but rather for <a href=""http://Wikipedia.Org/wiki/Procedural_generation"" rel=""nofollow"">Procedural Generation aka Procedural Synthesis</a>. (Although, of course, a PRNG with a fixed seed value is a very common and popular implementation technique for Procedural Generation.)</p>
"
"<p>I'm wondering if <code>if … else</code> could have been implemented in <code>Predef</code> with special compiler treatment, in a similar way to what's being done with <code>classOf[A]</code>: the definition is in <code>Predef</code>, the implementation is filled in by the compiler.</p>

<p>Granted, many people would find reassuring to know that an <code>if</code> is always an <code>if</code>, and an <code>else</code> is always an <code>else</code>, no matter the context. However, defining <code>else</code> as a method on the result type of <code>if</code> would remove it from the list of keywords, and allow library designers to define their own <code>else</code> methods. <em>(I know I can use any keyword as an identifier with backticks, but something like <code>`else`</code> just looks awful in code.)</em> Such methods could be useful in cases discusses in situations such as <a href=""http://www.scala-lang.org/node/3496"">this one, discussed on the mailing list</a>, where people are forced to use <code>otherwise</code> when defining methods that actually should be named <code>else</code>. (Also discussed on SO <a href=""http://stackoverflow.com/questions/5654004/implementing-iftrue-iffalse-ifsome-ifnone-etc-in-scala-to-avoid-if-and/5654007#5654007"">here</a> and <a href=""http://stackoverflow.com/questions/5945904/what-are-your-most-useful-own-library-extensions/5947797#5947797"">here</a>.)</p>

<p>So:</p>

<ul>
<li>Would such an approach be possible, even in theory, or does it break some fundamental principle in Scala?</li>
<li>What would the downsides be?</li>
</ul>
","2988","","<p><em>Any</em> object-oriented language (or <em>any</em> language with runtime polymorphism) can implement conditionals as a library feature, since method dispatch already is a more general form of conditional anyway. Smalltalk, for example, has absolutely no conditionals whatsoever except for method dispatch.</p>

<p>There is no need for any kind of compiler magic, except maybe for syntactic convenience.</p>

<p>In Scala, it would look maybe a little bit like this:</p>

<pre><code>trait MyBooleanLike {
  def iff[T &lt;: AnyRef](thenn: =&gt; T): T
  def iffElse[T](thenn: =&gt; T)(els: =&gt; T): T
  def &amp;&amp;(other: =&gt; MyBoolean): MyBoolean
  def ||(other: =&gt; MyBoolean): MyBoolean
  def nott: MyBoolean
}

trait MyTruthiness extends MyBooleanLike {
  def iff[T](thenn: =&gt; T) = thenn
  def iffElse[T](thenn: =&gt; T)(els: =&gt; T) = thenn
  def &amp;&amp;(other: =&gt; MyBoolean) = other
  def ||(other: =&gt; MyBoolean) = MyTrue
  def nott = MyFalse
}

trait MyFalsiness extends MyBooleanLike {
  def iff[T](thenn: =&gt; T): T = null.asInstanceOf[T]
  def iffElse[T](thenn: =&gt; T)(els: =&gt; T) = els
  def &amp;&amp;(other: =&gt; MyBoolean) = MyFalse
  def ||(other: =&gt; MyBoolean) = other
  def nott = MyTrue
}

abstract class MyBoolean extends MyBooleanLike

class MyTrueClass extends MyBoolean with MyTruthiness {}
class MyFalseClass extends MyBoolean with MyFalsiness {}

object MyTrue extends MyTrueClass {}
object MyFalse extends MyFalseClass {}
</code></pre>

<p>Just add a little implicit conversion:</p>

<pre><code>object MyBoolExtension {
  implicit def boolean2MyBoolean(b: =&gt; Boolean) =
    if (b) { MyTrue } else { MyFalse }
}

import MyBoolExtension._
</code></pre>

<p>And now we can use it:</p>

<pre><code>object Main extends App {
  (2 &lt; 3) iff { println(""2 is less than 3"") }
}
</code></pre>

<p>[Note: my type-fu is rather weak. I had to cheat a little bit to get this to compile within a reasonable timeframe. Someone with a better understanding of Scala's type system may want to fix it up. Also, now that I look at it, 8 classes, traits and objects, two of them abstract, seems a little over-engineered ;-) ]</p>

<p>Of course, the same is true for pattern matching as well. Any language with pattern matching doesn't need other kinds of conditionals, since pattern matching is more general anyway.</p>

<p>[BTW: This is basically a port of <a href=""http://joergwmittag.github.com/b001e/"" rel=""nofollow"">this Ruby code</a> I wrote a couple of years ago for fun.]</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/5944278/overriding-method-by-another-defined-in-module"">Overriding method by another defined in module</a>  </p>
</blockquote>



<p>Here's some code:</p>

<pre><code>class Foo
  def bar
    puts ""Original bar""
  end
end

module M
  def bar
    puts ""Called M::bar""    
  end
end

Foo.send(:include,M)
Foo.new.bar
# =&gt; Original bar
</code></pre>

<p>Does ruby prevent overriding a previously defined method when a method of the same name is ""included""?</p>
","2988","","<p>I don't quite understand your question. What, exactly, do you think is ""prevented"" here, and by whom?</p>

<p>This is precisely how it is supposed to work. <code>Module#include</code> mixes in the module as the direct superclass of whatever class it is being mixed into. <code>M</code> is a superclass of <code>Foo</code>, so <code>Foo#bar</code> overrides <code>M#bar</code>, because that's how inheritance works: subclasses override superclasses, not the other way around. Nothing is being ""prevented"" here, <em>of course</em> you can still override <code>Foo#bar</code> in a subclass of <code>Foo</code>.</p>

<p>You can clearly see the ancestry:</p>

<pre><code>class FooS; end
module M; end
class Foo &lt; FooS; include M end

Foo.ancestors # =&gt; [Foo, M, FooS, Object, Kernel, BasicObject]
</code></pre>
"
"<p>I have a Gem that I found at RubyForge and want to peek inside to see what code it contains. Is it possible to do this without installing the Gem on my system?</p>

<p>Also, if I use RVM on Mac OS X, does that at all change how my gems get installed (assuming I have one gemset)?</p>
","2988","","<p><code>gem unpack</code> unpacks the gem without installing it.</p>
"
"<p>I wonder how much different these funcionality would look like (and how different the implementation would be), if Scala wouldn't (have to) follow Java's <code>java.io.Serializable</code>/<code>java.lang.Cloneable</code> (mostly to stay compatible with Java and the tools/ecosystem around it).</p>

<p>Because Scala is more simpler in language design, but enables more powerful implementation and abstraction possibilities, it is thinkable that Scala might take a different path compared to Java, if it wouldn't have to shoulder the Java-compatibility-burden.</p>

<p>I could imagine that a idiomatic implementation would use type classes or traits with (possibly) private fields/methods (not possible in Java interfaces?), maybe carrying some standard implementation?</p>

<p>Or are marker interfaces still the right choice in Scala?</p>
","2988","","<blockquote>
  <p>Or are marker interfaces still the right choice in Scala?</p>
</blockquote>

<p>Nope. They aren't even the right choice in Java. They should be annotations, not interfaces.</p>
"
"<p>Nokogiri is awesome. I can do things like <code>#css('.bla')</code> which will return the first matching element.</p>

<p>Right now we need to do some parsing of Ruby source code - finding all methods within a class etc. We're using the <a href=""http://parsetree.rubyforge.org/ruby_parser/"" rel=""nofollow"">ruby_parser</a> gem, but all it does is comb your source code and spit out S-expressions. Is there anything like Nokogiri for these S-expressions which can do things like ""return S-expression for first method found named 'foo'""?</p>
","2988","","<p>The only thing I can think of, is <a href=""https://GitHub.Com/AdamSanderson/SExp_Path/"" rel=""nofollow"">Adam Sanderson's <code>SExpPath</code> library</a>.</p>
"
"<p>These days there are two main hardware environments for parallel programming, one is multi-threading CPU's and the other is the graphics cards which can do parallel operations on arrays of data.</p>

<p>The question is, given that there are two different hardware environments, how can I write a program which is parallel but independent of these two different hardware environments.
I mean that I would like to write a program and regardless of whether I have a graphics card or multi-threaded CPU or both, the system should choose automatically what to execute it on, either or both graphics card and/or multi-thread CPU.</p>

<p>Is there any software libraries/language constructs which allow this?</p>

<p>I know there are ways to target the graphics card directly to run code on, but my question is about how can we as programmers write parallel code without knowing anything about the hardware and the software system should schedule it to either graphics card or CPU.</p>

<p>If you require me to be more specific as to the platform/language, I would like the answer to be about C++ or Scala or Java.</p>

<p>Thanks</p>
","2988","","<p>Martin Odersky's research group at EPFL <a href=""http://Scala-Lang.Org/node/8579/"">just recently received</a> a multi-million-euro European Research Grant to answer exactly this question. (The article contains several links to papers with more details.)</p>
"
"<p>What's the science behind the fact that the to_i method in Ruby's NilClass instances returns zero? Returning <em>nil</em> or raising an exception would not be more logical? </p>
","2988","","<p>The protocol of <code>to_i</code> says that you <em>must</em> return an <code>Integer</code> and you <em>must not</em> raise an exception. Both of your suggestions violate at least one of those rules. So, no, those would not only not be more logical, they would be simply invalid.</p>

<p>Note, however, that <code>nil</code> <em>does not</em> respond to <code>to_int</code>. If it <em>did</em> respond to <code>to_int</code>, that would, indeed, be ""illogical"".</p>
"
"<p>I am using Ruby 1.9 and I would like to know if there is a ""better"" way to write the following code. </p>

<pre><code>  array_one = []
  array_two = []
  some_array.each { |value|
    array_one &lt;&lt; value.id
    array_two &lt;&lt; value.name
  }
</code></pre>

<p>I ""don't like"" to initialize <code>array_one</code> and <code>array_two</code> like in the above example and then add in those <code>value.id</code> and <code>value.name</code>. <em>This because and mostly for a better understanding and reading of the code in my application.</em></p>

<p>I would like to provide the same functionality but with a ""better"" coding. Is it possible?</p>
","2988","","<p>The code pattern you have there, is usually a sure sign of a <code>fold</code> (or more generally a <em>catamorphism</em>) wanting to get out. Ruby does provide a built-in method for folding, for historical reasons it is called <code>inject</code>.</p>

<p>Untested:</p>

<pre><code>array_one, array_two = some_array.
  inject([[], []]) {|(array_one, array_two), value|
    [array_one &lt;&lt; value.id, array_two &lt;&lt; value.name]
}
</code></pre>

<p>Not sure whether you think this is ""better"" or not. For someone who understands what a <code>fold</code> is, this is probably clearer. For someone who doesn't, it's probably not.</p>

<p>(Although I think that if you <em>don't</em> understand what a <code>fold</code> is, then you are not a very good Ruby programmer, or even a very good programmer <em>at all</em>, but that is just my opinion.)</p>

<p>However, saying that some iteration is a <code>fold</code> isn't really terribly useful, since <code>fold</code> is a general method of iteration (which means that <em>every</em> form of iteration can be expressed as a <code>fold</code>). What you <em>really</em> have here, is a <code>map</code>:</p>

<pre><code>array_one, array_two = some_array.map(&amp;:id), some_array.map(&amp;:value)
</code></pre>

<p>Note that this will traverse <code>some_array</code> twice. However, unless you have credible benchmarks and profiling results that show that this double traversal is a major source of performance troubles in your application, you really shouldn't worry about that.</p>
"
"<p>is there any library that can inspect and display what are the arguments that a method takes?</p>
","2988","","<p>I don't know of any third-party libraries or even RubyGems that can do this reliably. It just isn't possible to do this kind of inspection given the limited reflection facilities Ruby provides.</p>

<p>You will have to make do with what is available in the core library, which is basically <a href=""http://RubyDoc.Info/stdlib/core/Method%3aparameters"" rel=""nofollow""><code>Method#parameters</code></a>:</p>

<pre><code>def foo(a, b=nil, *c, d, &amp;e); end
method(:foo).parameters
  # =&gt; [[:req, :a], [:opt, :b], [:rest, :c], [:req, :d], [:block, :e]]
</code></pre>
"
"<p>If I have </p>

<pre><code>class Foo
   CONSTANT_NAME = [""a"", ""b"", ""c""]

  ...
end
</code></pre>

<p>Is there a way to access Foo::CONSTANT_NAME or do I have to make a class method to access the value?  </p>
","2988","","<blockquote>
  <p>Is there a way to access <code>Foo::CONSTANT_NAME</code>?</p>
</blockquote>

<p>Yes, there is:</p>

<pre><code>Foo::CONSTANT_NAME
</code></pre>
"
"<p>I don't understand why the following raises an exception:</p>

<pre><code>class X
  def to_s
    ""x""
  end
end

s = """"
s &lt;&lt; X.new
# --&gt; TypeError: can't convert X into String
</code></pre>

<p>After all 'to_s' is supposed to convert X into a String. </p>
","2988","","<blockquote>
  <p>After all <code>to_s</code> is supposed to convert <code>X</code> into a <code>String</code>.</p>
</blockquote>

<p>No, it's not. It is supposed to <em>represent</em> it as a <code>String</code>. <code>to_str</code> is supposed to <em>convert</em> it.</p>
"
"<p>I'm having problems with Ruby regex.</p>

<p>How do you do AND(&amp;) regex in ruby?</p>

<p>ex:</p>

<pre><code>cat and dog
cat
dog

I just want to match ""cat and dog""
</code></pre>
","2988","","<p>There is no <code>and</code> operator in <code>Regexp</code>s, simply because it doesn't make sense. It will <em>never</em> match: how can a <code>String</code> both be <code>'cat'</code> <em>and</em> <code>'dog'</code> at the same time?</p>
"
"<p>Today I happened to compile, using Delphi 7, a code with a class definition like this</p>

<pre><code>type TAudioStream = class helper of TStream;
</code></pre>

<p>and, to my astonishment, the compiler spits </p>

<p><em>""System unit out of date or corrupted: missing 'TClassHelperBase'""</em>. </p>

<p>It looks like Delphi7 has already some reserved usage of the <code>helper</code> word.</p>

<p>Delphi introduced Helper classes in Delphi 8. They were intended for binding VCL to .Net. So, is Delphi7 prescient? </p>
","2988","","<p>It is quite common for language designers to reserve certain words for future use. <code>class</code> and <code>interface</code>, for example, have been reserved words in JavaScript for &hellip; what, ten years now &hellip; even though they aren't expected to be used for another couple of years. <code>goto</code> is a reserved word in Java, even though it is <em>never</em> expected to be used.</p>

<p>It is also quite common for compiler writers to implement features for future use. Generics, for example, were already implemented in Sun's Java 1.2 <code>javac</code> compiler, even though they weren't added to the language specification until Java 5.</p>
"
"<p>I am playing around with creating a DSL. I am using <a href=""http://jroller.com/rolsen/entry/building_a_dsl_in_ruby"" rel=""nofollow"">http://jroller.com/rolsen/entry/building_a_dsl_in_ruby</a> as a guide.</p>

<p>Given this DSL:</p>

<pre><code>question 'Who was the first president of the USA?'
wrong 'Fred Flintstone'
wrong 'Martha Washington'
right 'George Washington'
wrong 'George Jetson'
</code></pre>

<p>is there a way to make sure that question() is called at least once, right() exactly once and wrong() n or more times?</p>
","2988","","<p>Sure. Just add the line</p>

<pre><code>(@question_count ||= 0) += 1
</code></pre>

<p>to whatever your current implementation of the <code>question</code> method looks like (and similarly for <code>right</code> and <code>wrong</code>) and then check those variables.</p>
"
"<p>I have just started learning ruby reading from different resources. One of them is rubylearning.com, and I was just reading the <a href=""http://rubylearning.com/satishtalim/ruby_blocks.html"" rel=""nofollow"">blocks section</a> and doing the exercises. For some reason, this example's scope is working differently in my case:</p>

<pre><code>x = 10  
5.times do |x|  
  puts ""x inside the block: #{x}""  
end  

puts ""x outside the block: #{x}""  
</code></pre>

<p>The output should be ( according to the site): </p>

<pre><code>x inside the block: 0  
x inside the block: 1  
x inside the block: 2  
x inside the block: 3  
x inside the block: 4  
x outside the block: 10  
</code></pre>

<p>But my output is:</p>

<pre><code>x inside the block: 0
x inside the block: 1
x inside the block: 2
x inside the block: 3
x inside the block: 4
x outside the block: 4
</code></pre>

<p>Any idea why? This section is supposed to be about the scope in ruby blocks, but I am totally confused now...</p>

<p>EDIT:</p>

<p>Ok I just realized something: I was executing my code from textmate. If i run it from the command line i get the expected result, plus 1.9.2 RUBY_VERSION. But I get 1.8.7 running it from Textmate. Has textmate its own version of ruby installed or something? – 0al0 0 secs ago edit </p>
","2988","","<p>You are using an outdated version of Ruby. The scope of block local variables has changed in Ruby 1.9.0+.</p>
"
"<p>Is there any performance implications if I do either of these:</p>

<pre><code>def do_something(user, article)
...
end
</code></pre>

<p>versus</p>

<pre><code>def do_something(user_id, article_id)
  ..
end
</code></pre>

<p>I prefer passing objects as I might need other attributes down the road.</p>
","2988","","<p>No, Ruby <em>never</em> passes by reference. Ruby is pass-by-value. Always. No exceptions.</p>

<pre><code>def is_Ruby_pass_by_value_or_reference?(parameter)
  parameter = 'Ruby is pass-by-reference.'
end

var = 'Ruby is pass-by-value. Always. No exceptions.'

is_Ruby_pass_by_value_or_reference?(var)

puts var
# Ruby is pass-by-value. Always. No exceptions.
</code></pre>

<p>If Ruby <em>were</em> pass-by-reference, this would print <code>Ruby is pass-by-reference.</code></p>
"
"<p>Im trying to install gems that require the ruby DevKit to be installed. E.g:</p>

<pre><code>gem install sqlite3
</code></pre>

<p>This is the output:</p>

<pre><code>Temporarily enhancing PATH to include DevKit...
Building native extensions.  This could take a while...
ERROR:  Error installing sqlite3:
ERROR: Failed to build gem native extension.

/usr/local/bin/ruby.exe extconf.rb
checking for sqlite3.h... yes
checking for sqlite3_libversion_number() in -lsqlite3... yes
checking for rb_proc_arity()... yes
checking for sqlite3_initialize()... yes
checking for sqlite3_next_stmt()... yes
checking for sqlite3_backup_init()... yes
checking for sqlite3_column_database_name()... no
checking for sqlite3_enable_load_extension()... yes
checking for sqlite3_load_extension()... yes
creating Makefile

make
gcc -I. -I/usr/local/include/ruby-1.9.1/i386-cygwin -I/usr/local/include/ruby-1.9.1/ruby/backward -I/usr/local/include/ruby-1.9.1 -I. -DHAVE
_RB_PROC_ARITY -DHAVE_SQLITE3_INITIALIZE -DHAVE_SQLITE3_NEXT_STMT -DHAVE_SQLITE3_BACKUP_INIT -DHAVE_SQLITE3_ENABLE_LOAD_EXTENSION -DHAVE_SQL
ITE3_LOAD_EXTENSION -I/usr/local/include -I/opt/local/include -I/sw/local/include -I/usr/include    -O3 -g -Wall -Wno-unused-parameter -Wno-
parentheses -Wpointer-arith -Wwrite-strings -Wno-long-long  -o backup.o -c backup.c
make: gcc: Command not found
make: *** [backup.o] Error 127


Gem files will remain installed in /usr/local/lib/ruby/gems/1.9.1/gems/sqlite3-1.3.3 for inspection.
Results logged to /usr/local/lib/ruby/gems/1.9.1/gems/sqlite3-1.3.3/ext/sqlite3/gem_make.out
</code></pre>

<p>I do have make and gcc installed and don't understand why it's complaining that a command can't be found.</p>

<p>This happens not only if i try to install the sqlite3 gem but also other gems that require de devkit to be installed.</p>
","2988","","<p>The DevKit is for the MingW port of YARV, not the Cygwin port. The Cygwin port doesn't need the DevKit, since Cygwin itself already contains all the necessary tools, libraries, and headers.</p>
"
"<p>The following code:</p>

<pre><code>a = [1,2,3,4,5]
b = a.each.map {|i| i = 0}  # or   b = a.map {|i| i = 0}  does the same thing
</code></pre>

<p>makes b = [0, 0, 0, 0, 0] as expected</p>

<p>Is there an equally succinct way to change a range of a? (ex: set a[2..4] to 0)</p>

<p>I have messed around in irb, but my code returns only the elements that were modified</p>

<pre><code>a = [1,2,3,4,5]
b = a[2..4].each.map {|i| i = 0}
</code></pre>

<p>makes b = [0, 0, 0], where as I am trying to make b = [1, 2, 0, 0, 0]</p>
","2988","","<p>I'm not exactly sure what you are trying to do here.</p>

<p>First: why are you turning the <code>Array</code> into an <code>Enumerator</code> and then <code>map</code> that <code>Enumerator</code> instead of just mapping the <code>Array</code> directly? I.e. why do you have </p>

<pre><code>b = a.each.map {|i| i = 0 }
</code></pre>

<p>instead of just </p>

<pre><code>b = a.map {|i| i = 0 }
</code></pre>

<p>Also, why are you assigning to the block local variable <code>i</code> but never actually using that variable? I.e. why don't you just do </p>

<pre><code>b = a.map {|i| 0 }
</code></pre>

<p>Of course, now you aren't using <code>i</code> <em>at all</em> ... </p>

<pre><code>b = a.map { 0 }
</code></pre>

<p>However, since the values of <code>b</code> actually have absolutely no relationship at all to the values of <code>a</code>, you might just as well do </p>

<pre><code>b = [0] * a.size
</code></pre>

<p>The same questions basically apply also to your second code example. Again, you completely <em>ignore</em> the elements of <code>a</code>, so using <code>map</code> simply makes no sense whatsoever. You can just do </p>

<pre><code>(b = a.dup)[2..4] = [0] * 3
</code></pre>

<p>Or slightly more readable broken up into two expressions</p>

<pre><code>b = a.dup
b[2..4] = [0] * 3 # or ... = [0, 0, 0]
</code></pre>
"
"<p>Right now I'm doing a <code>split</code> on a string and assuming that the newline from the user is <code>\r\n</code> like so:</p>

<pre><code>string.split(/\r\n/)
</code></pre>

<p>What I'd like to do is split on either <code>\r\n</code> or just <code>\n</code>.</p>

<p>So how what would the regex be to split on either of those?</p>
","2988","","<p>The alternation operator in Ruby <code>Regexp</code> is the same as in standard regular expressions: <code>|</code></p>

<p>So, the obvious solution would be</p>

<pre><code>/\r\n|\n/
</code></pre>

<p>which is the same as </p>

<pre><code>/\r?\n/
</code></pre>

<p>i.e. an optional <code>\r</code> followed by a mandatory <code>\n</code>.</p>
"
"<p><a href=""https://github.com/seattlerb/zentest/blob/master/lib/autotest/autoupdate.rb"" rel=""nofollow"">https://github.com/seattlerb/zentest/blob/master/lib/autotest/autoupdate.rb</a></p>

<p>It's not documented and I can't find any discussion about it on the web.</p>
","2988","","<p>It runs the <code>@@update_cmd</code> (by default: <code>svn up</code>) every <code>@@sleep_time</code> seconds (by default: <code>60</code>).</p>
"
"<p>I have a gem which implements my entire business logic, so that I can use it in different applications. Now, one of these applications requires persistence. How do I easily extend my existing Ruby models to support persistence? Should I monkey patch them?</p>

<p>To give you a bit of a background, my model objects are usually just built from XML or JSON files, but now I need to store them in an relational database.</p>

<p>Are there common patterns for this problem? Should I write new model objects that support persistence and map between my legacy objects and the new model objects or should I extend the existing ones to be representable in a database?</p>

<p>Any tips, hints, and links are highly welcome.</p>
","2988","","<p>I am not sure that I fully understand your question. However, the <a href=""http://DataMapper.Org/"" rel=""nofollow"">DataMapper</a> library can be very easily used to add persistence to an already existing object model after the fact, for two reasons:</p>

<ol>
<li>It doesn't rely on class inheritance (like e.g. ActiveRecord does) but on mixin inheritance, and you can inherit from as many mixins you like, which means you won't have to change the inheritance tree of your object model just to add DataMapper to it.</li>
<li>The object-relational-mapping is declared explicitly in the model, not inferred from the data-store. This means that you can have very complex mappings between the data-store and your models, unlike the rather simple 1:1 table == class, row == object, column == attribute mapping of ActiveRecord.</li>
</ol>

<p>Now, whether or not you will manage to keep the persistence aspect fully orthogonal, and e.g. in a separate gem, that's another question. You <em>could</em> indeed keep it in a separate library that just opens up all the model classes and <code>include DataMapper::Resource</code> and declare all the properties. This will allow you to still deploy your object model gem without persistence, but the persistence gem will obviously be rather tightly coupled to the object model gem.</p>
"
"<p>I understand that <code>x == y</code> in Ruby interpreted as <code>a.==(y)</code>. I tried to check if I can achieve the same with custom method, <code>foo</code>, like this:</p>

<pre><code>class Object
  def foo(n)
    self == n
  end
end

class A
  attr_accessor :x
end

a = A.new
a.x = 4

puts a.x.==(4)   # =&gt; true
puts a.x.foo(4)  # =&gt; true

puts a.x == 4    # =&gt; true
puts a.x foo 4   # =&gt; in `x': wrong number of arguments (1 for 0) (ArgumentError)
</code></pre>

<p>Unfortunately, this doesn't work. What am I missing ? Is <code>==</code> a special method in Ruby ?</p>
","2988","","<p>No, <code>==</code> is not a special method in Ruby. It's a method like any other. What you are seeing is simply a parsing issue:</p>

<pre><code>a.x foo 4
</code></pre>

<p>is the same as </p>

<pre><code>a.x(foo(4))
</code></pre>

<p>IOW, you are passing <code>foo(4)</code> as an argument to <code>x</code>, but <code>x</code> doesn't take any arguments.</p>

<p>There <em>is</em>, however, special operator <em>syntax</em>, which allows you to write</p>

<pre><code>a == b
</code></pre>

<p>instead of </p>

<pre><code>a.== b
</code></pre>

<p>for a limited list of operators:</p>

<pre><code>==
!=
&lt;
&gt;
&lt;=
&gt;=
&lt;=&gt;
===
&amp;
|
*
/
+
-
%
**
&gt;&gt;
&lt;&lt;
!==
=~
!~
</code></pre>

<p>Also, there is special syntax that allows you to write</p>

<pre><code>!a
</code></pre>

<p>and </p>

<pre><code>~a
</code></pre>

<p>instead of </p>

<pre><code>a.!
</code></pre>

<p>and </p>

<pre><code>a.~
</code></pre>

<p>As well as </p>

<pre><code>+a
</code></pre>

<p>and </p>

<pre><code>-a
</code></pre>

<p>instead of </p>

<pre><code>a.+@
</code></pre>

<p>and </p>

<pre><code>a.-@
</code></pre>

<p>Then, there is </p>

<pre><code>a[b]
</code></pre>

<p>and </p>

<pre><code>a[b] = c
</code></pre>

<p>instead of </p>

<pre><code>a.[] b
</code></pre>

<p>and </p>

<pre><code>a.[]= b, c
</code></pre>

<p>and last but not least </p>

<pre><code>a.(b)
</code></pre>

<p>instead of </p>

<pre><code>a.call b
</code></pre>
"
"<p>Is it possible to get the <code>MinValue</code> - or <code>MaxValue</code> of an unknown Type T? As in <code>Int</code> which has <code>Int.MinValue</code> and <code>Int.MaxValue</code>??</p>

<p>Thanks</p>
","2988","","<blockquote>
  <p>is it possible to get the Min - or MaxValue of an unkwown Type T?</p>
</blockquote>

<p>No, it isn't, for the simple reason that if <code>T</code> is unknown, then how can you know that it even <em>has</em> a minimum or maximum?</p>
"
"<p>I read about unbind method object, and have known how to bind it to particular object, Now I start wondering is there any method available to check the object a method bind to</p>
","2988","","<p>The receiver of the method is returned by the aptly named <a href=""http://RubyDoc.Info/stdlib/core/Method%3areceiver"" rel=""nofollow""><code>Method#receiver</code></a> method.</p>
"
"<p>In Ruby 1.9.2 you can inspect the parameters of any method using method(:symbol). How could I inspect the Car#initialize method without having to create a new car? </p>

<pre><code>class Car
  def initialize(fuel_type, passenger_capacity, door = 3)
    puts ""TODO""
  end
end

Car.new(nil,nil).method(:initialize).parameters
  #=&gt; [[:req, :fuel_type], [:req, :passenger_capacity], [:opt, :door]]
</code></pre>

<p>Instance_eval didn't work:</p>

<pre><code>Car.instance_eval { |x| p x.method(:initialize).parameters } #=&gt; [[:rest]]
</code></pre>
","2988","","<pre><code>Car.instance_method(:initialize).parameters
# =&gt; [[:req, :fuel_type], [:req, :passenger_capacity], [:opt, :door]]
</code></pre>
"
"<p>Suppose I have the following</p>

<pre><code>class SimpleClass (myInt: Int, myString: String) {

}
</code></pre>

<p>What is wrong with the following?</p>

<pre><code>val mySimple = new SimpleClass(1, ""hi"")
println(mySimple.myInt)
</code></pre>
","2988","","<p>The problem is that you are calling the <code>SimpleClass.myInt</code> getter method but you didn't define a getter method anywhere. You need to define the <code>SimpleClass.myInt</code> getter method or even better yet, get Scala to automatically define it for you:</p>

<pre><code>class SimpleClass(val myInt: Int, myString: String) {}
</code></pre>
"
"<p>Notice, it's not difference between <code>product = ""abc""</code> and <code>product = :abc</code>.</p>

<p>it's <code>foo[:product] = ""abc""</code> and <code>foo[""product""] = ""abc""</code>, so the question is more about Ruby on rails script parser.
Does RoR also cache/hash class property name?</p>
","2988","","<p>No, there is no difference. Both of these are simply <code>SyntaxError</code>s, since neither <code>:product</code> nor <code>""product""</code> is a legal variable name:</p>

<pre><code>""product"" = ""abc""
# SyntaxError: syntax error, unexpected '=', expecting $end
# ""product"" = ""abc""
#            ^

:product = ""abc""
# SyntaxError: syntax error, unexpected '=', expecting $end
# :product = ""abc""
#           ^
</code></pre>
"
"<p>for example, the rubygem <em>Devise</em> has the following piece of code in <code>lib/devise/controllers/helpers.rb</code></p>

<pre><code>    module Helpers
      extend ActiveSupport::Concern
</code></pre>

<p>why use <code>extend</code> here? Will <code>include</code> do the same?</p>
","2988","","<p>Basically, <a href=""http://RubyDoc.Info/stdlib/core/Object%3aextend"" rel=""nofollow""><code>Object#extend</code></a> is just:</p>

<pre><code>class Object
  def extend(*ms)
    ms.each do |m|
      class &lt;&lt; self
        include m # Obviously, this won't work since m isn't in scope
      end
    end
  end
end
</code></pre>

<p>So, it's easy to see that they are obviously <em>not</em> the same, since the methods end up in different classes.</p>

<hr>

<p>A <em>working</em>, but less obvious version of <code>Object#extend</code> would be:</p>

<pre><code>class Object
  def extend(*ms)
    ms.each do |m|
      singleton_class.send :include, m # Because Module#include is private
    end
  end
end
</code></pre>
"
"<p>In the top-level :</p>

<pre><code>unbinded_method = method :puts

#=&gt; Object(Kernel)#puts(*arg1)
</code></pre>

<p>but I did this</p>

<pre><code>obj = Object.new

obj.puts 'wow'
</code></pre>

<p>I got an undefined error</p>

<p>so I assumed the Kernel module didn't include in the singleton class of obj, so I did</p>

<pre><code>obj.instance_eval do

include Kernel

end
</code></pre>

<p>but I got error again:</p>

<pre><code>NoMethodError: undefined method `include' for #&lt;Object:0x00000100b14dc8&gt;
</code></pre>
","2988","","<blockquote>
  <p>Why can't I include Kernel in the singleton class of an instance of Object</p>
</blockquote>

<p>Uhm, you <em>can</em>:</p>

<pre><code>obj = Object.new
obj.singleton_class.ancestors
# =&gt; [Object, Kernel, BasicObject]

class &lt;&lt; obj
  include Kernel
end
obj.singleton_class.ancestors
# =&gt; [Object, Kernel, BasicObject]
</code></pre>

<p>Note: obviously, <code>include</code>ing <code>Kernel</code> into an instance of <code>Object</code> doesn't actually <em>do</em> anything, because <code>Kernel</code> is <em>already</em> in the ancestor chain, and mixins can only appear once in the ancestor chain. But if you <code>include</code> <em>another</em> mixin, that will work:</p>

<pre><code>obj = Object.new
obj.singleton_class.ancestors
# =&gt; [Object, Kernel, BasicObject]

class &lt;&lt; obj
  include Enumerable
end
obj.singleton_class.ancestors
# =&gt; [Enumerable, Object, Kernel, BasicObject]
</code></pre>

<blockquote>
  <p>but I did this</p>

<pre><code>obj = Object.new

obj.puts 'wow'
</code></pre>
  
  <p>I got an undefined error</p>
</blockquote>

<p>No, you didn't. This is the error you got:</p>

<pre><code># NoMethodError: private method `puts' called for #&lt;Object:0xdeadbed&gt;
</code></pre>

<p>It tells you <em>right there</em> in the error what the problem is: <code>Kernel#puts</code> is private, and in Ruby, private methods can only be invoked as the result of a receiverless message send. For example like this:</p>

<pre><code>obj.instance_eval do puts 'wow' end
# wow
</code></pre>

<p>or just </p>

<pre><code>obj.send :puts, 'wow' # send cirvumvents access protection
# wow
</code></pre>

<blockquote>
  <p>so I assumed the Kernel module didn't include in the singleton class of obj [...]</p>
</blockquote>

<p>Why did you assume instead of just check?</p>

<pre><code>obj.singleton_class.ancestors.include? Kernel # =&gt; true
</code></pre>

<blockquote>
  <p>so I did</p>

<pre><code>obj.instance_eval do
  include Kernel
end
</code></pre>
  
  <p>but I got error again:</p>
  
  <p>NoMethodError: undefined method `include' for #</p>
</blockquote>

<p>Again, the error message already tells you everything you need to know: <code>Object</code> doesn't have an <code>include</code> method, nor is there one in its ancestor chain. <code>include</code> is a method of the <code>Module</code> class, but <code>obj</code> is an <code>Object</code>, not a <code>Module</code>.</p>
"
"<p>I am trying to extend the ruby string class like this:</p>

<pre><code>String.class_eval do
  def clear!
    # Here I want the string value to be set to empty string. The following code is not working.
    self = ''
  end
end
</code></pre>
","2988","","<p>Easy:</p>

<pre><code>class String
  alias_method :clear!, :clear
end
</code></pre>

<p>Although I'm not sure what your <code>String#clear!</code> provides over the existing <a href=""http://RubyDoc.Info/stdlib/core/String%3aclear"" rel=""nofollow""><code>String#clear</code></a> method.</p>
"
"<p>I switched to Ruby from PHP, and have yet to understand a curious Ruby class behavior where methods are executed outside of the class method definitions (see example below).  In PHP, when we wanted to execute anything on class init, we would put it in the constructor method.</p>

<p>Ruby example (Rails):</p>

<pre><code>class Comment &lt; ActiveRecord::Base
  belongs_to :post, :counter_cache =&gt; true
end
</code></pre>

<p>Am I correct in understanding that <code>belongs_to</code> will be executed on instantiation?  And is <code>belongs_to</code> a class method inherited from ActiveRecord?</p>

<p>Thanks!</p>
","2988","","<p>In Ruby, <em>everything</em> is executable code. Or, to put it another way: <em>everything</em> is a script. There is no such thing as a ""class declaration"" or something like that.</p>

<p>Any code that sits in a file, without being inside anything else like a method body, a class body, a module body or a block body, is executed when that file is <code>load</code>ed (or <code>require</code>d or <code>require_relative</code>d). This is called a <em>script body</em>.</p>

<p>Any code that sits inside a class or module body is executed when that class or module is created. (This is the case you are referring to.)</p>

<p>The boring part: any code that sits inside a method body is executed when that method is called, or more precisely, when that method is invoked in response to receiving a message with the same name as the method. (Duh.)</p>

<p>Any code that sits inside a block body is executed when that block is <code>yield</code>ed to.</p>

<p>Since a class definition is just a script, this means that it can contain any sort of code you want, including method calls:</p>

<pre><code>class Foo
  attr_accessor :bar # Yes, attr_accessor is just a method like any other
  private # I *bet* you didn't know *that* was a method, too, did you?
end
</code></pre>

<p>or conditionals:</p>

<pre><code>class Bar
  if blah # e.g. check if the OS is Windows
    def foo
      # one way
    end
  else
    def foo
      # a different way
    end
  end
end
</code></pre>
"
"<p>Trying to inject my own function (say check) to Float class. When I am doing from a module it is not injected to Float class. Please see the following snippets.       </p>

<pre><code>irb(main):001:0&gt; module QA
irb(main):002:1&gt;   class Float
irb(main):003:2&gt;     def self.check
irb(main):004:3&gt;     end
irb(main):005:2&gt;   end
irb(main):006:1&gt; end
=&gt; nil
irb(main):007:0&gt; include QA
=&gt; Object
irb(main):008:0&gt; Float.respond_to?(:check)
=&gt; false
irb(main):009:0&gt; extend QA
=&gt; main
irb(main):010:0&gt; Float.respond_to?(:check)
=&gt; false
irb(main):011:0&gt; class Float
irb(main):012:1&gt;   def self.check
irb(main):013:2&gt;   end
irb(main):014:1&gt; end
=&gt; nil
irb(main):015:0&gt; Float.respond_to?(:check)
=&gt; true
</code></pre>
","2988","","<p>You have added the method to the <code>QA::Float</code> class, not the <code>Float</code> class. If you want to add the method to the <code>Float</code> class, you should do</p>

<pre><code>module QA
  class ::Float
    # stuff
  end
end
</code></pre>

<p>Or even better just</p>

<pre><code>class Float
  # stuff
end
</code></pre>
"
"<p>I'm writing some code in which I'd like to add some methods to a predefined class, like so:</p>

<pre><code>class Model  # this class already exists

  def my_method
    # code here
  end

end
</code></pre>

<p>Is there any way to namespace this, using Modules or otherwise?</p>
","2988","","<p>There will be a mechanism to do this in Ruby 2.0, although it is not exactly clear what exactly that mechanism is going to be. For the past almost 10 years, the frontrunner seemed to be <em>Selector Namespaces</em>, but recently <em>Classboxes</em> and even more recently, <em>Refinements</em> have taken the lead. In fact, if I am not mistaken, Refinements are actually currently implemented in the YARV trunk.</p>

<p>With all currently existing versions (including the soon to be released 1.9.3), however, there is no way to do this.</p>

<p>That's one of the reasons why monkey patching should generally be avoided.</p>
"
"<p>cat module1.rb =></p>

<pre><code>module Module1

    def add(a,b)
        return a+b
    end

    def subtract(a,b)
        return a-b
    end

end
</code></pre>

<p>cat call.rb =></p>

<pre><code>#!/home/user1/.rvm/rubies/ruby-1.9.2-p180/bin/ruby

include './Module1.rb

temp = add(5,2)
print temp
print ""\n""
</code></pre>

<p>ruby call.rb =></p>

<pre><code>&lt;internal:lib/rubygems/custom_require&gt;:29:in `require': no such file to load -- Module1 (LoadError)
    from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
    from call.rb:3:in `&lt;main&gt;'
</code></pre>

<p>Can anyone fix it ?</p>
","2988","","<p><code>require</code> loads a file from Ruby's <code>$LOAD_PATH</code>. If you want to load a file relative to the current file, then you need to use <code>require_relative</code> instead.</p>
"
"<p>I'm new to Ruby and I what I want to do is the following</p>

<pre><code>class WS&lt; ActiveRecord::Base
  @@SequenceNumber = 0

  def self.oper1
    @@SequenceNumber = 2
  end

  def self.oper2
   @@SequenceNumber += 1 
   puts @@SequenceNumber.to_s
  end

  def self.oper3
   puts @@SequenceNumber.to_s
  end
end
</code></pre>

<p>If I do something like:</p>

<pre><code>WS.oper1
WS.oper2
WS.oper3
</code></pre>

<p>I get the following output:</p>

<pre><code>3
2
</code></pre>

<p>Why isn't my @@SequenceNumber += 1 working? What am I doing wrong?</p>

<p>Thank you.</p>
","2988","","<p>Works just fine:</p>

<pre><code>class WS
  @@sequence_number = 0

  def self.oper1
    @@sequence_number = 2
  end

  def self.oper2
   puts @@sequence_number += 1
  end

  def self.oper3
   puts @@sequence_number
  end
end

WS.oper3
# 0

WS.oper1
WS.oper2
# 3

WS.oper3
# 3
</code></pre>

<p>[Note: I took the liberty of Rubyfying your code a little bit.]</p>
"
"<p>From an online notes, I read the following java code snippet for reversing a string, which is claimed to have quadratic time complexity. It seems to me that the “for” loop for i just iterates the whole length of s. How does it cause a quadratic time complexity?</p>

<pre><code>public static String reverse(String s)
{
  String rev = new String();
  for (int i = (s.length()-1); i&gt;=0; i--) {
      rev = rev.append(s.charAt(i));
  }
  return rev.toString();
}
</code></pre>
","2988","","<p><code>append</code> has to find the end of the string, which is &Omicron;(n). So, you have an &Omicron;(n) loop executed &Omicron;(n) times.</p>
"
"<p>I am currently trying to convert this ruby array:</p>

<pre><code>[5, 7, 8, 1]
</code></pre>

<p>into this:</p>

<pre><code>[[5], [7], [8], [1]]
</code></pre>

<p>What's the best way ?</p>

<p>I'm currently doing it like this:</p>

<pre><code>[5, 7, 8, 1].select { |element| element }.collect { |element| element.to_a }
</code></pre>

<p>But I'm getting the following error(s):</p>

<p><strong>warning: default `to_a' will be obsolete</strong></p>

<p>What am I doing wrong? 
Could you please advice on how to do this right?</p>

<p>Thanks in advance and best regards! </p>
","2988","","<p>In point-free style:</p>

<pre><code>[5, 7, 8, 1].map(&amp;method(:Array))
</code></pre>
"
"<p>I've recently come across the <code>&amp;method(:method_name)</code> syntax. (This uses the <code>Object#method</code> method - <a href=""http://ruby-doc.org/core/classes/Object.html#M001038"">RDoc link</a>) For example, </p>

<pre><code>[5, 7, 8, 1].each(&amp;method(:puts))
</code></pre>

<p>is the equivalent of</p>

<pre><code>[5, 7, 8, 1].each{|number| puts number}
</code></pre>

<p>Are there performance penalties for the latter compared to the former in the various implementations of Ruby? If so, are the implementors working on improving its performance?</p>
","2988","","<p>Since Rubinius is the most advanced and most aggressively optimizing Ruby implementation, I <a href=""http://groups.google.com/group/rubinius-dev/browse_thread/thread/ace9e880a3dd20ac/"">asked this question</a> on the <a href=""http://groups.google.com/group/rubinius-dev/"">Rubinius mailinglist</a>, and <a href=""http://groups.google.com/group/rubinius-dev/msg/38ec3ea7e2a892de/"">here's what Evan Phoenix had to say</a>:</p>

<blockquote>
  <p>Your assumption that it could be the same as a block is, I'm sad to say, dead wrong. There reason you don't see <code>Method#to_proc</code> and such in profiling is 2 fold: </p>
  
  <ol>
  <li>Most (all?) MRI profilers do not show methods that MRI defines in C, so they'd never show up. </li>
  <li>The mechanism for activating a method that has been turned into a <code>Proc</code> is all in C, so the overhead is invisible on the invocation side too. </li>
  </ol>
  
  <p>Your point about the arty differences are right on. Additionally, your thinking that a VM could easily optimize it into a block is quite wrong. <code>Object#method</code> is a not something that would be detected and optimized away. Additionally, even with runtime optimizations, something like escape analysis is still required since <code>#method</code> returns a <code>Method</code> object that you'd have to see inside and extract the information from. On the invocation side, the invoked method can only do something special with the block in the case of block inlining, an optimization that only Rubinius has. </p>
  
  <p>So to get to your questions: </p>
  
  <ol>
  <li>Does Rubinius optimize this code? No. Could it? Yes, but it's hardly easy. </li>
  <li>In time it could, yes. </li>
  <li>In time it should, yes.</li>
  </ol>
</blockquote>

<p>Note: the questions he refers to in the last paragraph are:</p>

<blockquote>
  <ol>
  <li>Does Rubinius currently optimize such point-free code? </li>
  <li>If it doesn't, could it? </li>
  <li>If it could, should it? </li>
  </ol>
</blockquote>
"
"<p>I'm just wondering what applications it has. I believe in 1.9 the prefix ? would return the string version of that character.</p>

<pre><code>?a   #=&gt; ""a""
?\t  #=&gt; ""\t""
</code></pre>

<p>Is this just  shorthand for 'a' or '\t'?</p>
","2988","","<p>It's mainly for backwards compatibility. In versions prior to 1.9, <code>?</code> evaluated to a <code>Fixnum</code> corresponding to the ASCII value of the character in question. Indexing into a <code>String</code> <em>also</em> returned a <code>Fixnum</code>.</p>

<p>So, if you wanted to check, for example, if the third character of a string was the letter 'a' you would do</p>

<pre><code>s[2] == ?a
</code></pre>

<p>In Ruby 1.9, strings are no longer treated as an array of fixnums but as an iterator of characters (single-character strings, actually). As a result, the above code would no longer work: <code>s[2]</code> would be a string, <code>?a</code> would be a number, and those two would never be equal.</p>

<p>Therefore, <code>?</code> was also changed to evaluate to a single-character string, so that the above code continues to work.</p>
"
"<p>Here is what I do quite often in Python:</p>

<pre><code>simple_call = lambda name: extract(some[fairly][hidden], name)
result1 = simple_call('myname')
result2 = simple_call('yourname')
result3 = simple_call('hisname')
</code></pre>

<p>This is really handy if you have to extract some data from some complex data structure or some strange API repeatedly.</p>

<p>Is there a way to do the same thing in Ruby?</p>
","2988","","<p>Yes, there is a way to do the same thing in Ruby. And it is in fact the same way (modulo the minor syntactic differences between Python and Ruby, of course):</p>

<pre><code>simple_call = -&gt;name { extract(some[fairly][hidden], name) }
result1 = simple_call.('myname')
result2 = simple_call.('yourname')
result3 = simple_call.('hisname')
</code></pre>
"
"<p>Total newbie at cronjobs and that kinda stuff, never done it before, so now I tried to get my hands dirty using whenever as a plugin, after seeing it on RailsCasts.
So I am trying to run a cron job for my Ruby application, but it seems like it's not working, maybe becuase of the code or maybe because of me using Windows 7?</p>

<p>Here is the code from my Server model</p>

<pre><code>def self.ping
 Server.all.each do |t|
     if t.name.serverUp?
        @response = 'Up'
      else
        @response = 'Down'
     end
self.update_attribute(:serverStatus, @response.to_s)
end
end


def serverUp?
 if system 'ping '+name.to_s+' -n 1  &gt; nul'
   @response = 'Up'
        else
  @response = 'Down'
end
  self.update_attribute(:serverStatus, @response.to_s)
@response
end
</code></pre>

<p>And here is the code from my schedule.rb file which has the cron job in it</p>

<pre><code>#every 2.minutes do
#  runner ""Server.last.name = 'Works'""
#  runner ""for x in Server.all.each {x.serverUp?}"", environment =&gt;""development""
#end

every 2.minutes do
  runner ""Server.ping"", environment =&gt;""development""
end
</code></pre>

<p>I tried both methods out, (the latter I used most recently, to which I created the <code>self.ping</code> method in the Server model.</p>

<p>So when I run <code>whenever</code> in my rails directory, this is the output I get:</p>

<pre><code>PS C:\SIS&gt; whenever
0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58 * * * * /bin/bash -l -c 'cd C:/SIS
&amp;&amp; script/rails runner -e production '\''Server.ping'\'''

## [message] Above is your schedule file converted to cron syntax; your crontab file was not updated.
## [message] Run `whenever --help' for more options.
</code></pre>

<p>1st) Funnily enough, the environment doesn't seem to have changed to development even though I stated it in the code.
2nd) The crontab file wasn't updated (I don't even know if there existed one to begin with?)</p>

<p>So I tried to create a crontab whenever file by running <code>whenever -w ping</code>, but the results was </p>

<pre><code>PS C:\SIS&gt; whenever -w ping
[fail] Couldn't write crontab; try running `whenever' with no options to ensure your schedule file is valid.
</code></pre>

<p>So this is my problem, any help would be appreciated.</p>

<p><strong>Edit:</strong> Ok, I decided to use rufus-scheduler in order to update my Server list frequently. I tested out whether it would work to create a new server into the table every mintues, and that seemed to work. 
However, because I wasn't able to stop it from creating servers, I removed it from the bundle, deleted the 'task_scheduler' file and then re-installed it and done everything like before.
However, when I now try to run the server, I get the following error:</p>

<pre><code>C:/SIS/config/initializers/task_scheduler.rb:1:in '&lt;top (required)&gt;': undefined method 'start_new' for Rufus::Scheduler:
Module (NoMethodError)
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:235:in 'load'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:235:in 'block in load'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:225:in 'block in load_dependency'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:596:in 'new_constants_in'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:225:in 'load_dependency'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:235:in 'load'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/engine.rb:201:in 'block (2 levels) in &lt;class:Engine&gt;'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/engine.rb:200:in 'each'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/engine.rb:200:in 'block in &lt;class:Engine&gt;'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/initializable.rb:25:in 'instance_exec'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/initializable.rb:25:in 'run'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/initializable.rb:50:in 'block in run_initializers'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/initializable.rb:49:in 'each'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/initializable.rb:49:in 'run_initializers'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/application.rb:134:in 'initialize!'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/application.rb:77:in 'method_missing'
        from C:/SIS/config/environment.rb:5:in '&lt;top (required)&gt;'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:239:in 'require'

        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:239:in 'block in require'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:225:in 'block in load_dependency'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:596:in 'new_constants_in'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:225:in 'load_dependency'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/activesupport-3.0.9/lib/active_support/dependencies.rb:239:in 'require'

        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/application.rb:103:in 'require_environment!'
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/railties-3.0.9/lib/rails/commands.rb:22:in '&lt;top (required)&gt;'
        from script/rails:6:in 'require'
        from script/rails:6:in '&lt;main&gt;'
</code></pre>

<p>The code in the task_scheduler is as follows:</p>

<pre><code>scheduler = Rufus::Scheduler.start_new

scheduler.every '1m' do
#     Server.all.each do
#      |server| server.name.serverUp?
#     end

     Server.ping

end
</code></pre>

<p>Not sure which  of the two methods to use, hence I commented the first one out.
Help would be greatly appreciated.
Thanks in advance</p>

<p><strong>Edit</strong>
Ok, finally solved it, had to put <code>require 'rubygems'
require 'rufus/scheduler'</code> on the top of my code.
Now it works fine :-)</p>
","2988","","<p>Cron is a Unix program. It doesn't exist on Windows.</p>
"
"<p>So I have a for loop thats creating a hash or array depending on whats being passed in.</p>

<p>I need to create these arrays and Hashes with names based on whats being passed in.</p>

<p>Its much the same as</p>

<pre><code>window['MyNewArray-' + i] = [];
</code></pre>

<p>In javascript. Is there any equivalent for Ruby?</p>
","2988","","<p>That same code does work in Ruby, too, and does the same thing.</p>
"
"<p>I need to get the n-th bit of an Integer, either signed or unsigned, in Ruby.</p>

<pre><code>x = 123 # that is 1111011
n = 2   # bit 2 is ...0 
</code></pre>

<p>The following piece of code doesn't work in the general case:</p>

<pre><code>x.to_s(2)[-(n+1)] #0 good! but...
</code></pre>

<p>because of negative numbers not represented as 2-complement:</p>

<pre><code>-123.to_s(2) # ""-1111011""
</code></pre>

<p>So how to proceed?</p>
","2988","","<pre><code>x = 123 # that is 1111011
n = 2   # bit 2 is ...0

x[n]    # =&gt; 0

-123[2] # =&gt; 1
</code></pre>
"
"<p>I want to check if a hash has a key that contains some text. It may not be the exact key, but the key must contains (like the <code>.include?</code>) the text. My solution for this is:</p>

<pre><code>some_hash.select {|k,v| k.include? ""foo""}.empty?
</code></pre>

<p>But this will generate one more hash. I just want to check the existence of the key. Is there a better way to do that?</p>
","2988","","<pre><code>some_hash.keys.any? {|k| k.include? 'foo' }
</code></pre>
"
"<p>Is it possible to over-ride methods that are part of Ruby itself, such as <code>rb_error_frozen</code>, that are written in C, with Ruby code?</p>

<p><strong>Background</strong>: I'm wondering if it's possible to make Ruby merely log a warning, rather than raise an exception, when a frozen object is modified. That way, I can log a variety of state modifications, rather than stopping when the first one occurs.</p>

<p>I'm primarily thinking of doing this with YARV, but I could use another implementation if that made it easier.</p>

<p>And yes, it's a whyday project! Don't try this in a production environment!</p>
","2988","","<p>Yes, <em>of course</em> you can override Ruby methods that are implemented in C (or Java or C# or C++ or Objective-C or ECMAScript or whatever).</p>

<p>Since Ruby is an object-oriented language, pretty much the <em>only</em> thing you can do in Ruby is to either <em>override</em> or create <em>new</em> methods, and since on the two most widely-used Ruby implementations (MRI and YARV) <em>all</em> methods are implemented in C and <em>none</em> in Ruby, you simply wouldn't be able to do <em>anything</em> if you you <em>couldn't</em> override methods written in C.</p>

<p><em>However</em>, there is a big problem: <code>rb_error_frozen</code> isn't a Ruby method. It's a C function.</p>
"
"<p>Is there a callback which can be executed when a  class is loaded. I am thinking something like this.</p>

<pre><code>register_callback('Foo', :debug_message)

def debug_message
 puts ""Foo has been loaded""
end

require 'foo'
</code></pre>
","2988","","<p>No, there is not. And there <em>cannot</em> be, for the simple reason that classes in Ruby are <em>open</em>: they are <em>never</em> fully ""loaded"", you can <em>always</em> add, remove, rename and overwrite methods at any later point in time.</p>

<p>For example, when is the following class ""loaded""?</p>

<pre><code># foo.rb
class Foo
  def some_method
  end
end

# bar.rb
class Foo
  def some_other_method
  end
end

# baz.rb
class Foo
  def some_method
  end
end

require 'foo'
require 'bar'

require 'baz' if rand &gt; 0.5
</code></pre>
"
"<p>What is the easiest way to use these variables:</p>

<pre><code>year: ""2011""
month: ""8""
date: ""28""
hours: ""1""
minutes: ""4""
</code></pre>

<p>to create a DateTime (i.e. <code>Sun, 28 Aug 2011 01:04:00 +1000</code>). The time zone does not matter.</p>
","2988","","<p>Use <a href=""http://RubyDoc.Info/stdlib/date/DateTime.civil"" rel=""nofollow""><code>DateTime::civil</code></a></p>

<pre><code>DateTime.civil(year.to_i, month.to_i, date.to_i, hours.to_i, minutes.to_i)
</code></pre>

<p>Change that to <code>to_i(10)</code> everywhere if you're worried about something like <code>""08""</code> being interpreted as an octal number.</p>
"
"<pre><code> Ap::Application.routes.draw do
  resources :accounts
 end
</code></pre>

<p>I want to know the class or module to which the ""resources"" method belongs. If i search for ""resources"" method in <a href=""http://apidock.com/rails/"">http://apidock.com/rails/</a> (in the search text box provided), a list of classes are appearing which has the method name ""resources"". Confused, with knowing the origin of the method.</p>

<p>Is their any command which i can use in puts to see the origin. </p>

<p>The question is bit of beginners level.</p>

<p>Thanks</p>
","2988","","<p>Ruby is an object-oriented language. And while methods aren't objects in Ruby, you can ask Ruby to give you a <code>Method</code> object representing the method in question, and then you can simply tell that <code>Method</code> to give you its owner:</p>

<pre><code>Ap::Application.routes.draw do
  p method(:resources).owner
end
</code></pre>
"
"<p>When i write the following code:</p>

<pre><code>x= [1,2,3]
x &lt;&lt; x
puts x
puts x[3]
puts x[3][3][3][3][3][3][3][3][3][3]
</code></pre>

<p>I get this output:</p>

<pre><code>[1, 2, 3, [...]]
[1, 2, 3, [...]]
[1, 2, 3, [...]]
</code></pre>

<p>Shouldn't I get only [1,2,3,[1,2,3]] and what would be the explanation?</p>
","2988","","<p>There's nothing strange about this. The fourth element of the array is the array itself, so when you ask for the fourth element, you get the array, and when you ask for the fourth element of the fourth element, you get the array, and when you ask for the fourth element of the fourth element of the fourth element of the fourth element ... you get the array.</p>

<p>Simple as that.</p>

<p>The only slightly unusual thing is that <code>Array#to_s</code> detects such recursion and instead of going into an infinite loop, returns an ellipsis.</p>
"
"<p>The following code doesn't work with Ruby 1.9.2:  </p>

<pre><code>def side_box(title, &amp;block)
  render :layout =&gt; 'layouts/side_box', :locals =&gt; {:title =&gt; title} do 
    &amp;block
  end
end
</code></pre>

<p>I am getting an error:</p>

<blockquote>
  <p>syntax error, unexpected tAMPER
        &amp;block</p>
</blockquote>

<p>What has changed (since 1.8.7) for this not to work?</p>
","2988","","<p>I don't have 1.8.7 installed at the moment, but I'm pretty sure that this is illegal in 1.8.7, as well. The unary prefix <code>&amp;</code> operator is only legal in parameter lists and argument lists.</p>
"
"<p>Every time I write something of the form</p>

<pre><code>let scorePopulation f population =
  Array.map (fun i -&gt; f i) population
</code></pre>

<p>I end up asking myself if wouldn't I be better writing</p>

<pre><code>let scorePopulation f =
  Array.map (fun i -&gt; f i)
</code></pre>

<p>instead. Is there any advantage of writing it in the first form as opposed to the second?</p>

<p><strike>Also, how would you call a function definition in the first form and in the second form?</strike></p>
","2988","","<p>Actually, the pros and cons are the same: naming.</p>

<p>The reason for this is the old saying by Phil Karlton:</p>

<blockquote>
  <p>There are only two hard problems in computer science. Cache invalidation and naming things.</p>
</blockquote>

<p>If naming things is hard (i.e. expensive), then names shouldn't be wasted on irrelevant things. And conversely, if something has a name, then it is important.</p>

<p>Point-free style allows you to omit names.</p>

<p>The pro is that it allows you to omit <em>irrelevant</em> names.</p>

<p>The con is that it allows you to omit <em>relevant</em> names.</p>
"
"<p>I'm not sure if Ruby's <code>File.open</code> method isn't properly documented, or I'm missing something.</p>

<p>The <code>File</code> class inherits from <code>IO</code>, which is where the <code>open</code> method seems to be defined. As far as I can tell from the documentation, <code>File</code> doesn't seem to override <code>IO</code>'s implementation of the <code>open</code> method.</p>

<p>The <a href=""http://www.ruby-doc.org/core/classes/File.html"" rel=""nofollow"">documentation for <code>File</code></a> documents the <code>IO.open</code> class method as taking a numeric file descriptor argument, presumably an object returned by <code>IO.sysopen</code>. However, the apparently undocumented <code>File.open</code> method will just take a filename.</p>

<p>For example, this fails and quite rightly so according to the documentation:</p>

<pre><code>IO.open('data/actors.list') do |io| 
    #...
end
</code></pre>

<p>On the other hand, this works:</p>

<pre><code>File.open('data/actors.list') do |io| 
    #...
end
</code></pre>

<p>The trouble is, <code>File.open</code> appears to override <code>IO.open</code> and has a different interface, but it's not documented --- or at least doesn't appear so.</p>

<p>Am I missing something? What's going on here?</p>
","2988","","<p>I haven't dug in too deep into <em>why</em> Ruby-Doc.Org shows it that way (I don't use Ruby-Doc.Org anyway), but this is what <a href=""http://RubyDoc.Info/stdlib/core/File.open"" rel=""nofollow"">RubyDoc.Info</a> has to say:</p>

<blockquote>
  <h1>Method: <code>File.open</code></h1>
  
  <p>Defined in: <code>io.c</code></p>
  
  <ul>
  <li><code>(File) open(filename, mode = ""r""[, opt])</code></li>
  <li><code>(File) open(filename[, mode [, perm]][, opt])</code></li>
  <li><code>(Object) open(filename, mode = ""r""[, opt]) {|file| … }</code></li>
  <li><code>(Object) open(filename[, mode [, perm]][, opt]) {|file| … }</code></li>
  </ul>
  
  <p>With no associated block, <code>open</code> is a synonym for <code>File.new</code>. If the optional code block is given, it will be passed file as an argument, and the <code>File</code> object will automatically be closed when the block terminates. In this instance, <code>File.open</code> returns the value of the block.</p>
  
  <h2>Overloads:</h2>
  
  <ul>
  <li><code>(File) open(filename, mode = ""r""[, opt])</code>
  <ul>
  <li>Returns: <code>(File)</code></li>
  </ul></li>
  <li><code>(File) open(filename[, mode [, perm]][, opt])</code>
  <ul>
  <li>Returns: <code>(File)</code></li>
  </ul></li>
  <li><code>(Object) open(filename, mode = ""r""[, opt]) {|file| … }</code>
  <ul>
  <li>Yields: <code>(file)</code></li>
  <li>Returns: <code>(Object)</code></li>
  </ul></li>
  <li><code>(Object) open(filename[, mode [, perm]][, opt]) {|file| … }</code>
  <ul>
  <li>Yields: <code>(file)</code></li>
  <li>Returns: <code>(Object)</code></li>
  </ul></li>
  </ul>
</blockquote>

<p>This matches the RDoc comment in the file <a href=""https://GitHub.Com/Ruby/Ruby/blob/ruby_1_9_2/io.c#L5409-5423"" rel=""nofollow""><code>io.c</code> in the YARV sources</a>:</p>

<pre><code>/*
 *  Document-method: File::open
 *
 *  call-seq:
 *     File.open(filename, mode=""r"" [, opt])                 -&gt; file
 *     File.open(filename [, mode [, perm]] [, opt])         -&gt; file
 *     File.open(filename, mode=""r"" [, opt]) {|file| block } -&gt; obj
 *     File.open(filename [, mode [, perm]] [, opt]) {|file| block } -&gt; obj
 *
 *  With no associated block, &lt;code&gt;open&lt;/code&gt; is a synonym for
 *  &lt;code&gt;File.new&lt;/code&gt;. If the optional code block is given, it will
 *  be passed &lt;i&gt;file&lt;/i&gt; as an argument, and the File object will
 *  automatically be closed when the block terminates. In this instance,
 *  &lt;code&gt;File.open&lt;/code&gt; returns the value of the block.
 */
</code></pre>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3263031/is-there-a-formal-specification-like-the-java-language-specification-jls-for"">Is there a formal specification (like the Java Language Specification (JLS)) for Ruby?</a>  </p>
</blockquote>



<p>I am looking hard for <strong>formal specifications and a formal definition of the Ruby programming language</strong>. Does one exist, if so, where can I find it?</p>
","2988","","<p>There is <a href=""http://WWW.IPA.Go.Jp/osc/english/ruby/ruby_draft_specification_agreement.html"">a draft</a> for a <a href=""http://WWW.IPA.Go.Jp/osc/english/ruby/"">formal specification</a> of Ruby. It is being developed by the <a href=""http://WWW.IPA.Go.Jp/osc/english/"">Open Standards Promotion Center</a> of the <a href=""http://WWW.IPA.Go.Jp/index-e.html"">Information-Technology Promotion Agency</a> (a Japanese government agency) for submission to the <a href=""http://WWW.JISC.Go.Jp/eng/"">Japanese Industrial Standards Committee</a> and then further on to the <a href=""http://ISO.Org/"">International Organization for Standardization</a>.</p>

<p>However, nobody actually uses this specification. The specification that is <em>actually</em> being used by all the Ruby implementors like <a href=""http://Rubini.us/"">Rubinius</a>, <a href=""http://IronRuby.Net/"">IronRuby</a>, <a href=""http://JRuby.Org/"">JRuby</a>, <a href=""http://MacRuby.Org/"">MacRuby</a>, <a href=""http://MagLev.GemStone.Com/"">MagLev</a> and so on, is the <a href=""http://RubySpec.Org/"">RubySpec</a>.</p>

<p>The three main differences between the ISO Draft Specification and RubySpec are:</p>

<ol>
<li>RubySpec is <em>complete</em>: it covers the entire Ruby language, and the entire core library, from version 1.8.7 to 1.9.2 and 1.9.3. The ISO Draft Specification only covers a very small subset of the intersection of 1.8 and 1.9.</li>
<li>RubySpec is written in <em>Ruby</em> (which is a language that every Rubyist can read), the ISO Draft Specification is written in English, or rather in ISO Standardese (which is a language that only a handful of people on the planet can fully understand).</li>
<li>RubySpec is <em>executable</em>: you can just run it against your Ruby implementation to see what you are still missing.</li>
</ol>

<p>Another great source (pun intended) of information about the behavior of Ruby is the <a href=""https://GitHub.Com/Rubinius/Rubinius/tree/master/kernel/"">source code of the Rubinius kernel</a>, which implements the semantics of the Ruby language and the Ruby core library. (Note: a lot of people prefer <a href=""https://GitHub.Com/Ruby/Ruby/"">the source code</a> of <a href=""http://AtDot.Net/yarv/"">YARV</a>, but I don't, for two reasons: firstly, YARV is in C, which is a language that not every Rubyist knows, whereas Rubinius is in Ruby, which (hopefully) every Rubiyst knows, and secondly, the Rubinius codebase is much better structured, well-designed, well-organized, well-tested, well-documented.)</p>
"
"<p>I am trying to figure out which files I need to modify; so by that, I use sequences of grep commands. I want to find out which files contain both foo and bar. Therefore, my command is:<br/>
<code>grep foo &#96;grep bar * -l&#96; | awk -F':' '{print $1}' | sort | uniq</code> <br/>
This command gets me a big list that looks like this:<br/>
pageABC.txt <br/>
pageBCD.txt <br/>
pageDEF.txt <br/></p>

<p>I want this output to be opened in emacs. So what I'd normally do is:<br/>
<code> emacs &#96; whatever_was_in_my_output &#96; </code><br/>
This command normally opens all the files.<br/>
If I try <br/>
<code>emacs &#96;grep foo &#96;grep bar * -l&#96; | awk -F':' '{print $1}' | sort | uniq &#96;</code> <br/>
Emacs won't even start. Maybe it's because of the double grave accents used.
Any ideas how to solve this?</p>

<p>Many Thanks,</p>

<p>D</p>
","2988","","<p>You forgot to escape the inner command substitution:</p>

<pre><code>emacs `grep foo \`grep bar * -l\` | awk -F':' '{print $1}' | sort | uniq`
</code></pre>

<p>In cases like this, I usually prefer the alternative command substition syntax, since it nests  more easily:</p>

<pre><code>emacs $(grep foo $(grep bar * -l) | awk -F':' '{print $1}' | sort | uniq)
</code></pre>
"
"<p>I can install PyDev for Eclipse and have pretty good Python IDE without any vendor preconfigurations. But surprisingly, I can't find a similar standalone IDE plugin for Ruby! Same company that supports PyDev, Aptana, offers something called ""RadRails"", but I could not find a way to install it separately - only as ""Aptana Studio 3 Addin Plugin"", and this ""studio"" includes not only Ruby - but also PyDev, PHP and lots of preconfigurations focused on web development.</p>

<p>What am I missing? Why can I install PyDev and have debugger/completion for python but for Ruby this leads for Eclipse bloated with ""web perspectives"", ""web frameworks integration"", etc?</p>
","2988","","<p>There are two Ruby plugins for Eclipse. DLTK (the official Eclipse toolkit for dynamic languages) does support Ruby, and there is the RDT project.</p>

<p>There are also full-blown IDEs built on top of each: 3rd Rail by whatever-Borland-is-called-nowadays is built on top of DLTK/Ruby and RadRails by Apatana is built on top of RDT.</p>
"
"<p>I understand that def is a keyword and can't be overridden.</p>

<p>But is there a way to call a method when a method gets registered with a class(passing in the name of the method being created?)</p>
","2988","","<p>That's what the <a href=""http://RubyDoc.Info/stdlib/core/Module%3amethod_added"" rel=""nofollow""><code>Module#method_added</code></a> hook method is for:</p>

<pre><code>module Foo
  def self.method_added(meth)
    p meth
  end

  def bar; end
end

# :bar
</code></pre>
"
"<p>Where in the Rubinius source is the code that is responsible for including modules?(Specifically, to place module as super class of object class.)</p>
","2988","","<p>If you look at the documentation for <a href=""http://RubyDoc.Info/stdlib/core/Module%3ainclude""><code>Module#include</code></a>, you’ll find that it delegates to <code>Module#append_features</code>:</p>

<blockquote>
  <p>Invokes <code>Module.append_features</code> on each parameter in reverse order.</p>
</blockquote>

<p>The documentation for <a href=""http://RubyDoc.Info/stdlib/core/Module%3aappend_features""><code>Module#append_features</code></a>, in turn, describes (very briefly) how the default Ruby mixin algorithm works:</p>

<blockquote>
  <p>When this module is included in another, Ruby calls <code>append_features</code> in this module, passing it the receiving module in <code>mod</code>. Ruby’s default implementation is to add the constants, methods, and module variables of this module to <code>mod</code> if this module has not already been added to <code>mod</code> or one of its ancestors. See also <a href=""http://RubyDoc.Info/stdlib/core/Module%3ainclude""><code>Module#include</code></a>.</p>
</blockquote>

<p>If you look at <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/delta/module.rb#L164-171""><code>Module#append_features</code></a> in the <a href=""https://GitHub.Com/Rubinius/Rubinius/"">Rubinius sourcecode</a>, you’ll find that it is an alias for <code>Module#include_into</code>:</p>

<blockquote>
<pre><code># Called when this Module is being included in another Module.
# This may be overridden for custom behaviour. The default
# is to add constants, instance methods and module variables
# of this Module and all Modules that this one includes to +klass+.
#
# See also #include.
#
alias_method :append_features, :include_into
</code></pre>
</blockquote>

<p>So, finally, <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/delta/module.rb#L86-162""><code>Module#include_into</code></a> is the real deal:</p>

<blockquote>
<pre><code># Add all constants, instance methods and module variables
# of this Module and all Modules that this one includes to +klass+
#
# This method is aliased as append_features as the default implementation
# for that method. Kernel#extend calls this method directly through
# Module#extend_object, because Kernel#extend should not use append_features.
def include_into(klass)
  ...
</code></pre>
</blockquote>

<p>Your specific question:</p>

<blockquote>
  <p>exactly to place module as super class of object class</p>
</blockquote>

<p>is answered in <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/delta/module.rb#L120-137"">this loop</a>:</p>

<blockquote>
<pre><code>k = klass.direct_superclass
while k
  if k.kind_of? Rubinius::IncludedModule
    # Oh, we found it.
    if k == mod
      # ok, if we're still within the directly included modules
      # of klass, then put future things after mod, not at the
      # beginning.
      insert_at = k unless superclass_seen
      add = false
      break
    end
  else
    superclass_seen = true
  end

  k = k.direct_superclass
end
</code></pre>
</blockquote>

<p>Watch for <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/delta/module.rb#L100""><code>insert_at</code></a>.</p>
"
"<p>Anyone knows if there is similar concept in other popular language compared to symbol literal in Ruby? Can I considered it just as an ""Interned String""?</p>
","2988","","<blockquote>
  <p>Anyone knows if there is similar concept in other popular language compared to symbol literal in Ruby?</p>
</blockquote>

<p>Sure, symbols in Ruby come from symbols in Smalltalk, which in turn gets them from Lisp. Scala also has symbols, and Erlang's atoms are similar. Erlang probably got them from Prolog.</p>

<blockquote>
  <p>Can I considered it just as an ""Interned String""?</p>
</blockquote>

<p>You can consider it all sorts of things, but symbols are symbols. They aren't immutable strings or interned strings or whatever ... they are just symbols.</p>
"
"<p>I have an array of custom classes.  I've defined &lt;=> on them, and have tested to make sure that my custom definition behaves as it should. I assumed that I could then call [].uniq and have it filter out my duplicates, but that isn't happening. Is there another operator I need to overload?</p>
","2988","","<p><code>Array#uniq</code> is based on equality, not on ordering, so your objects need to respond to <code>eql?</code>. Also, it uses hashing to speed up performance, so you need to implement <code>hash</code> as well.</p>

<p>Unfortunately, this contract isn't specified in <a href=""http://RubyDoc.Info/stdlib/core/Array%3auniq"" rel=""nofollow"">the documentation</a>, but it usually <em>is</em> specified in pretty much every Ruby book or course.</p>
"
"<p>Is anyone able to pinpoint which algorithm is used for the include? method in Ruby? For example </p>

<pre><code>""helloworld"".include?(""hello"")
</code></pre>
","2988","","<p>The Ruby Language Specification doesn't prescribe any particular algorithm. Every implementation can use whatever algorithm they want.</p>

<p>For example, in <a href=""http://Rubini.us/"">Rubinius</a>, <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/string.rb#L998-1007""><code>String#include?</code></a> calls <code>String#find_string</code>:</p>

<pre><code>def include?(needle)
  if needle.kind_of? Fixnum
    needle = needle % 256
    str_needle = needle.chr
  else
    str_needle = StringValue(needle)
  end

  !!find_string(str_needle, 0)
end
</code></pre>

<p><a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/bootstrap/string.rb#L56-59""><code>String#find_string</code></a> in turn is implemented via the <code>string_index</code> primitive:</p>

<pre><code>def find_string(pattern, start)
  Rubinius.primitive :string_index
  raise PrimitiveFailure, ""String#find_string failed""
end
</code></pre>

<p>The <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/vm/builtin/string.hpp#L171-172""><code>string_index</code></a> primitive is implemented by the <code>rubinius::String::index</code> function:</p>

<pre><code>// Rubinius.primitive :string_index
Fixnum* index(STATE, String* pattern, Fixnum* start);
</code></pre>

<p><a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/vm/builtin/string.cpp#L1018-1060""><code>rubinius::String::index</code></a>:</p>

<pre><code>Fixnum* String::index(STATE, String* pattern, Fixnum* start) {
  native_int total = size();
  native_int match_size = pattern-&gt;size();

  if(start-&gt;to_native() &lt; 0) {
    Exception::argument_error(state, ""negative start given"");
  }

  switch(match_size) {
  case 0:
    return start;
  case 1:
    {
      uint8_t* buf = byte_address();
      uint8_t matcher = pattern-&gt;byte_address()[0];

      for(native_int pos = start-&gt;to_native(); pos &lt; total; pos++) {
        if(buf[pos] == matcher) return Fixnum::from(pos);
      }
    }
    return nil&lt;Fixnum&gt;();
  default:
    {
      uint8_t* buf = byte_address();
      uint8_t* matcher = pattern-&gt;byte_address();

      uint8_t* last = buf + (total - match_size);
      uint8_t* pos = buf + start-&gt;to_native();

      while(pos &lt;= last) {
        // Checking *pos directly then also checking memcmp is an
        // optimization. It's about 10x faster than just calling memcmp
        // everytime.
        if(*pos == *matcher &amp;&amp;
            memcmp(pos, matcher, match_size) == 0) {
          return Fixnum::from(pos - buf);
        }
        pos++;
      }
    }
    return nil&lt;Fixnum&gt;();
  }
}
</code></pre>
"
"<p>I am developing a new Rails app based on a similar existing one. In my old app, I have Coupon class, which is very similar to Ticket in my new app. I want to reuse all code in Coupon, but with a new class name.</p>

<p>Since refactoring is cumbersome in Rails, I wonder if there is a way to create alias for a class in Ruby (similar to alias for attributes and methods).</p>
","2988","","<p>Classes don't have names in Ruby. They are just objects assigned to variables, just like any other object. If you want to refer to a class via a different variable, assign it to a different variable:</p>

<pre><code>Foo = String
</code></pre>
"
"<p>I just came across the NArray library for Ruby -- please excuse my ignorance when asking this question :)</p>

<p>What are the advantages of using the NArray library over the standard Ruby Array implementation?</p>

<p>I've seen that NArray is geared towards numerical computing, but looking at the API, it looks like there are only a few extensions over Array geared towards numerical values -- nothing that you couldn't do with Array..</p>

<ol>
<li>Why not just use Array? </li>
<li>Is there a huge speed advantage?</li>
<li>Is there a huge memory advantage? </li>
<li>Any other advantages over using the regular Ruby Array class?</li>
</ol>

<p>Google didn't really come up with a useful explanation of this question.</p>

<p>References I found:</p>

<p><a href=""http://rubydoc.info/gems/narray-ruby19/0.5.9.7/NArray"">http://rubydoc.info/gems/narray-ruby19/0.5.9.7/NArray</a></p>

<p><a href=""http://narray.rubyforge.org/index.html.en"">http://narray.rubyforge.org/index.html.en</a></p>

<p><a href=""http://raa.ruby-lang.org/project/narray/"">http://raa.ruby-lang.org/project/narray/</a></p>
","2988","","<blockquote>
  <p>I've seen that NArray is geared towards numerical computing, but looking at the API, it looks like there are only a few extensions over Array geared towards numerical values -- nothing that you couldn't do with Array..</p>
</blockquote>

<p>You are missing the most important point: <code>NArray</code> is not just <em>extended</em> for numerical processing, it is also <em>restricted</em>. In particular</p>

<ul>
<li><code>NArray</code> elements can <em>only</em> be fixed-size integers or floats</li>
<li><code>NArray</code>s themselves are also fixed-size, they cannot shrink or grow</li>
</ul>

<p>An implementation of <code>NArray</code> can <em>exploit</em> those restrictions to provide superior performance.</p>
"
"<p>I've created a ruby C extension <code>TestExt</code>, successfully compiled it, but when I try and use it in irb I can only access it's methods after i've called <code>include TestExt</code>.</p>

<p>I'm testing it like this:</p>

<pre><code>c:/test&gt;irb -I lib
irb(main):001:0&gt; require 'TestExt'
=&gt; true
irb(main):002:0&gt; TestExt.hello()
NoMethodError: undefined method `hello' for TestExt:Module
        from (irb):2
        from C:/Ruby192/bin/irb:12:in `&lt;main&gt;'
irb(main):003:0&gt; TestExt.instance_methods
=&gt; [:hello]
irb(main):004:0&gt; include TestExt
=&gt; Object
irb(main):005:0&gt; TestExt.hello()
=&gt; 0
irb(main):006:0&gt; hello()
=&gt; 0
</code></pre>

<p>Do you always have to <code>include</code> an extension? Is there an alternative way of includeing that doesn't make the method <code>hello</code> global? Why can I see <code>hello</code> in the <code>TestExt.instance_methods</code> but not access it?</p>
","2988","","<p>As you say yourself in your question, <code>hello</code> is an instance method, ergo you first need to mix your module into something, so that you <em>have</em> an instance to call it on.</p>

<p>When you <code>include</code> a mixin at the top-level, that is basically equivalent to </p>

<pre><code>class Object
  include TestExt
end
</code></pre>

<p>which mixes <code>TestExt</code> into <code>Object</code> and thus makes <code>hello</code> available as an instance method of the <code>Object</code> class. Since <em>everything</em> inherits from <code>Object</code>, including <code>Module</code>, this makes the <code>hello</code> instance method available to both your <code>TestExt</code> module and the anonymous <code>main</code> object (which is what <code>self</code> evaluates to at the top-level).</p>

<p>Try <code>''.hello</code>, and it will work also, since you mixed <code>TestExt</code> into <code>Object</code> and <code>String</code> inherits from <code>Object</code>.</p>

<blockquote>
  <p>Do you always have to include an extension?</p>
</blockquote>

<p>No.</p>

<blockquote>
  <p>Is there an alternative way of includeing that doesn't make the method hello global?</p>
</blockquote>

<p>Yes: just don't <code>include</code> it in the global scope.</p>

<blockquote>
  <p>Why can I see hello in the TestExt.instance_methods but not access it?</p>
</blockquote>

<p>Because it's an instance method.</p>
"
"<p>How may I do like that:</p>

<pre><code>hash = {}
(140..200).each {|n| h[n] = ""#{n} cm""}
</code></pre>

<p>but in one line which returns whole hash?
I'm sure it's possible, but I dunno how ;)</p>
","2988","","<pre><code>Hash[(140..200).map {|n| next n, ""#{n} cm"" }]
</code></pre>
"
"<p>Are there any implementations of Clojure being built for other virtual machines (such as .Net, Python, Ruby, Lua), or is it too closely tied to Java and the JVM? Does it make sense to build a Clojure for other platforms?</p>
","2988","","<p>There are currently three implementations of Clojure that I know of:</p>

<ul>
<li>ClojureCLR, an implementation of Clojure for the CLI, </li>
<li>ClojureScript, an implementation of (a subset of (a variant of)) Clojure for ECMAScript and </li>
<li>a Clojure implementation for the Java platform, confusingly also called Clojure.</li>
</ul>

<p>In fact, the name <em>Clojure</em> was specifically chosen by Rich Hickey because it contained both the letters <em>CLR</em> as well as the letter <em>J</em>.</p>

<p>I've heard rumours of implementations for the Objective-C/Cocoa runtime, LLVM and the Rubinius VM, but I have no idea whether or not those actually exist.</p>
"
"<p>I would like to know if my local repo is up to date (and if not, ideally, I would like to see the changes).</p>

<p>How could I check this without doing <code>git fetch</code> or <code>git pull</code> ?</p>
","2988","","<p>This is impossible. How can you know whether or not the repository is ""up-to-date"" without going to the remote repository to see what ""up-to-date"" even means?</p>
"
"<p>How do you install a library that is not a gem in Ruby?</p>

<p>I'm trying to use <a href=""https://github.com/bruce/graphy"" rel=""nofollow"">graphy</a>.</p>

<p>In the example usage, it says to <code>require 'graphy'</code>, but even when my ruby file is in the same directory as <code>graphy.rb</code>, I get the following error:</p>

<pre><code>&lt;internal:lib/rubygems/custom_require&gt;:29:in `require': no such file to load -- graphy.rb (LoadError)
from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require'
from foo.rb:1:in `&lt;main&gt;'
</code></pre>
","2988","","<p>In this particular case, the author is using Jeweler to manage his gemspec. I'm not that familiar with Jeweler, but AFAIR, you generate and install a Gem with <code>rake install</code>. You may need to generate a version number first with <code>rake version:write MAJOR=0 MINOR=0 PATCH=1</code>.</p>
"
"<p>Is there a way to achieve the following in <strong>one line</strong>? :</p>

<pre><code>if foo 
  some_method this_var, other_var1, other_var2
else
  some_method that_var, other_var1, other_var2
end
</code></pre>
","2988","","<p>I'm not a big fan of the conditional operator. It is necessary in C, because in C, <code>if</code> is a statement, not an expression, whereas the conditional operator is an expression. In Ruby, however, <em>everything</em> is an expression, so, naturally, <code>if</code> is an expression, too:</p>

<pre><code>some_method(if foo then this_var else that_var end, other_var1, other_var2)
</code></pre>

<p>However, as Michael Kohl points out, names can help clarify the intent of code, so maybe it is better to give a name to the argument:</p>

<pre><code>meaningful_name = if foo then this_var else that_var end
some_method(meaningful_name, other_var1, other_var2)
</code></pre>
"
"<p>I've written a library that extends several base Ruby classes with observing wrappers mostly through method aliasing. However, I've hit a roadblock with the Array instantiation shorthand (e.g. <code>@a = [1, 2, 3]</code> )  I can't seem to find any method that's actually called in the creation of an Array object by the shorthand means. It's not an inherited <code>#[]</code> method in the current scope or inherited from any class or module in the ancestors chain. I've also overloaded or watched every method from the class's <code>#new</code> to an instance's <code>#initialize</code> to the singleton_method <code>#[]</code> on the Array class object based on the Ruby C code </p>

<pre><code>rb_define_singleton_method(rb_cArray, ""[]"", rb_ary_s_create, -1);
</code></pre>

<p>Does anyone know how I can assign a method that would be within the method chain of the shorthand Array instance instantiation?</p>
","2988","","<p>Unfortunately, like pretty much every other programming language on the planet, Ruby does not allow overloading of literals. If you require literal overloading, you will have to use one of the few programming languages which support it, like <a href=""http://Ioke.Org/"" rel=""nofollow"">Ioke</a> or <a href=""http://Seph-Lang.Org/"" rel=""nofollow"">Seph</a>.</p>

<p>Here's an example in Ioke:</p>

<pre><code>[] = method(foo, foo println)
[1]
; 1
</code></pre>

<p>And in Seph:</p>

<pre><code>[] = #(foo, foo println)
[1]
; 1
</code></pre>

<p>[Note that these will, of course, wreak havoc with your system, since, for example, a large part of the Ioke/Seph standard library is implemented in Ioke/Seph, and they use lists all over the place, so in a production system, you'll want to properly encapsulate this.]</p>
"
"<p>Here are some snippets in different languages. </p>

<p>Function <code>double</code> in question is taken from SICP, ex. 1.41.</p>

<p>Lisp:</p>

<pre><code>(define (double f) (lambda (x) (f (f x))))
(define (inc x) (+ x 1))
(((double (double double)) inc) 5)
</code></pre>

<p>Python:</p>

<pre><code>def double(f):
  def result(x):
    return f(f(x))
  return result

def inc(x):
  return x + 1

double(double(double(inc)))(5)
</code></pre>

<p>Javascript:</p>

<pre><code>var double = function(f) {
  return function(x) { return f(f(x)) };
};

var inc = function(x) { return x + 1  };

(double(double(double(inc))))(5);
</code></pre>

<p>Ruby:</p>

<pre><code>double = lambda {|f| lambda {|x| f[f[x]] } }
inc = lambda {|x| x+1 }
double[double[double[inc]]][5]
</code></pre>

<p>If I am not insane, these functions should do the same thing and return the same result.
However, lisp version returns 21 whereas others return 13. Can you explain that difference to me? Am I missing something?</p>
","2988","","<p>For completeness' sake, here's how a fixed Ruby version would look like:</p>

<pre><code>double = -&gt;f { -&gt;x { f.(f.(x)) }}
inc    = -&gt;x { x.succ }

double.(double.(double)).(inc).(5)
</code></pre>
"
"<p>I used Ruby many years ago and am back hopefully to stay. I recall from several years ago reading that odd-numbered releases of Ruby (eg. 1.9.1, 1.9.3, 1.9.5) are meant for development and that even releases (eg. 1.9.2, 1.9.4) are meant to be production stable. Is this (still) the case or is the latest ""stable"" as per the Ruby website the way to go?</p>

<p>I've never developed a project as grand as Ruby so I don't know if there are rules for releases that should be followed. Any enlightenment on this topic would be appreciated.</p>

<p>Thank you.</p>
","2988","","<p>Yes, it is in fact true that odd-numbered releases <em>were</em> unstable in the past. (However, note that ""odd-numbered"" refers to the <em>minor</em> number, not the <em>tiny</em> number, i.e. 1.1.x, 1.3.x, 1.5.x and 1.7.x were unstable development releases.)</p>

<p>This was changed with Ruby 1.9 for a very simple (and very embarassing) reason: there are <em>tons</em> of Ruby scripts as well as shell scripts (including the scripts that the Ruby maintainers <em>themselves</em> use to automate the development, testing and releasing of Ruby) out there, which simply assume that the major version is a single digit. They would simply <em>break</em> otherwise, mostly because they did things like</p>

<pre><code>if RUBY_VERSION &gt; '1.6.3'
</code></pre>

<p>which <em>fails</em> for <code>'1.10.0'</code>, because the <em>string</em> <code>'1.10.0'</code> is lexicograhically <em>smaller</em> than the <em>string</em> <code>'1.6.3'</code>.</p>

<p>As a result, it was decided to give up the distinction between odd-numbered and even-numbered releases, and make the next stable release 1.9, because that was easier than convincing everybody that their scripts are broken.</p>

<p>So, the 1.9.0-x series of releases corresponds to 1.9.x under the <em>old</em> numbering scheme (i.e. a series of development releases in preparation of the next release) and the 1.9.(x > 0) series of releases corresponds to 1.10.(x-1), i.e. 1.9.2 is really 1.10.1. (Well, except that 1.9.1 was a botched release, so it is more like a 1.10.0-pre and 1.9.2 is 1.10.0 and 1.9.3 is 1.10.1.)</p>

<p>Also, Ruby 2.0 is intended to be fully backwards-compatible, which means that it's really 1.12 ... does that clear up any confusion? :-)</p>

<p>So, in summary: Yes, it <em>used</em> to be true (but in a different way than you thought), but it is <em>no longer</em> true, and hasn't been true since the 1.7 series which ended with the release of Ruby 1.8.0 in August of 2003, over <em>eight years</em> ago.</p>
"
"<p>This does not work as I expect:</p>

<pre><code>class FooTest &lt; Test::Unit::TestCase
   def test_foo
      assert(not true)
   end
end
</code></pre>

<p>I expected a failing test, instead I get:</p>

<pre><code>SyntaxError: ./test.rb:10: syntax error, unexpected kNOT
assert(not true)
</code></pre>

<p>Explanations?</p>
","2988","","<p>The reason why you are getting a syntax error is, well, because it's a syntax error: <code>and</code>, <code>or</code> and <code>not</code> aren't allowed in an argument list.</p>

<p>There has been a lengthy discussion about this on the ruby-talk mailinglist, where it was explained exactly <em>why</em> that is the case, but <em>my</em> interpretation basically is ""we couldn't figure out how to do it in <code>yacc</code> and switching to a better parser generator was too much work, so we just decided to make it illegal instead"".</p>
"
"<p>I have such code in Ruby is it possible to write it shorter??</p>

<pre><code> first_name = person[0]
  last_name = person[1]
  person_id = person[2]
  email = person[3]
  title = person[4]
  phone = person[5]
  mobile = person[6]
  department = person[7]
  address = person[8]
  city = person[9]
  zip_code =person[10]
  state =person[11]
  country = person[12]
  manager_id = person[13]
</code></pre>
","2988","","<pre><code>first_name, 
  last_name, 
  person_id, 
  email, 
  title, 
  phone, 
  mobile, 
  department, 
  address, 
  city, 
  zip_code, 
  state, 
  country, 
  manager_id = person
</code></pre>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/597769/how-do-i-create-an-abstract-base-class-in-javascript"">How do I create an abstract base class in JavaScript?</a>  </p>
</blockquote>



<p>Is it possible to use OOP practices in javascript and create classes and extend abstract classes?</p>
","2988","","<blockquote>
  <p>Is it possible to use OOP practices in javascript</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>and create classes</p>
</blockquote>

<p>No, JavaScript doesn't have classes. It is pretty easy to implement them, though, if your design needs them. However, in most cases, if you need classes in JavaScript, you're probably doing something wrong and should rethink your design (or your choice of language, but that is part of the design).</p>

<blockquote>
  <p>and extend abstract classes?</p>
</blockquote>

<p>Since there are no classes: no. But again, you can build them yourself, <em>if</em> you need them. And also again, <em>if</em> you find you need them, you are <em>probably</em> doing something wrong.</p>

<p>By the way: what do classes have to do with OOP practices? Hint: it's OOP, not COP!</p>
"
"<p>Very much an idle day-dream this but is it possible with some neat meta-programming trick to define a new logical operator in Ruby? I'd like to define a <code>but</code> operator.</p>

<p>For example, if I want to do something if <code>x</code> but not <code>y</code> is true I have to write something like:</p>

<pre><code>if x and not y
</code></pre>

<p>But I would like to write</p>

<pre><code>if x but not y
</code></pre>

<p>It should work exactly the same as <code>and</code> but would be down to the programmer to use sensibly to increase the legibility of code.  </p>
","2988","","<p>As others have already pointed out, you cannot define your own operators in Ruby. The set of operators is predefined and fixed. All you can do is influence the <em>semantics</em> of some of the existing operators (namely the ones that get translated into message sends) by responding to the appropriate messages.</p>

<p>But of course, you can implement a <code>but</code> <em>method</em> quite easily:</p>

<pre><code>class Object
  def but
    self &amp;&amp; yield
  end
end

Object.new.but { not true }
</code></pre>
"
"<p>I heard that everything in ruby is object. I replied in an interview that a variable is an object, and the interviewer said NO. Anybody know the truth?</p>
","2988","","<p>Why not go directly to the source? The Ruby Language Specification couldn't be more clear and obvious (emphasis added by me):</p>

<blockquote>
  <h1>6.2 Variables</h1>
  
  <h2>6.2.1 General description</h2>
  
  <p>A variable is denoted by a name, and <strong>refers to</strong> an object, which is called the value of the variable.
  <strong>A variable itself is not an object</strong>.</p>
</blockquote>
"
"<p>I have read in Ola Bini's blog that Ruby has influenced by CLU language, but besides the multiple assignment I'm not sure what other influences exist.  Any guidance and simple examples would be most appreciative.</p>
","2988","","<p>The only time matz ever mentioned CLU was when talking about iterators. Everything else is more or less directly from Smalltalk, Lisp, Flavors and Perl. Singleton classes seem to be unique to Ruby, though they are related to Smalltalk's metaclasses.</p>
"
"<p>I discovered something that seems really strange to me. This ""works"" in Ruby 1.8.7-p352 and 1.9.2-p290 both.</p>

<p>If I do this:</p>

<pre><code>(false true)
</code></pre>

<p>it fails with a syntax error, as I'd expect. But if I do this:</p>

<pre><code>(false
 true)
</code></pre>

<p>the code is executed! Worse, it doesn't behave like an AND or OR; it throws away the first condition and returns the result of the second.</p>

<p>Is this considered a bug or a feature? I found an erroneous construct similar to this during a code review, and I'm not happy that Ruby failed to reject it.</p>
","2988","","<p>Parentheses are used for grouping, line breaks are used as expression separators. So, what you have here is simply a group of two expressions. There is nothing to reject.</p>

<p>This is useful because of this well-known idiom:</p>

<pre><code>def foo(bar = (bar_set = true; :baz))
  if bar_set
    # optional argument was supplied
  end
end
</code></pre>

<p>There is simply no other way in Ruby to figure out whether an optional argument was supplied or not.</p>

<p>Basically, this becomes interesting in the presence of side effects, such as assigning a variable in my example or printing to the screen in @32bitkid's example. In your example, there is no side effect, that's why you couldn't see what was <em>actually</em> going on.</p>
"
"<pre><code>object1=Object.new
object2=object1.clone
puts object1==object2.prototype #this statement doesn't work!
</code></pre>

<p>Can we get an object's prototype (like javascript's .prototype)in ruby?
In other words, how to get parent object?</p>
","2988","","<p>Ruby is a class-based OO language, not a prototype-based one. Objects don't <em>have</em> prototypes, they have classes.</p>

<p>So, the answer is: no, you cannot get an object's prototype, because you cannot get something which never existed in the first place.</p>
"
"<p>Can anyone tell me how to modify a class or instance variable outside of a class with <strong>only one line</strong>? So, given this code</p>

<pre><code>class Dummy
    def initialize()
        @var = 0
    end
    def value
        @var * 2
    end
end

d = Dummy.new
</code></pre>

<p>I cannot change any of the above. I can only add <strong>one</strong> line so that d.value returns 6. Do any tricks exist to do this?</p>
","2988","","<pre><code>class Dummy; def set_the_stupid_value(val) @var = val end end; d.set_the_stupid_value(3)
</code></pre>

<p>Voilà, only one line, just like the OP wanted.</p>
"
"<p>Currently we are using SVN.
I would like to start using GitHub, but one absolute requirement is that we will need to have precommit (premerge) validation of the code like we currently have. Does GitHub support precommithooks (premergehooks)?</p>

<p>We're a team of 5 developers. We made an agreement that all code (JavaScript) should pass JSLint-like validation. Voluntary validation has proven not to work because it's easily forgotten. How can we be sure that code that becomes available to the others is guaranteed to validate against JSLint (or similar)?</p>
","2988","","<p>No, GitHub doesn't support pre-commit hooks. How would that even work? Committing happens on <em>your</em> computer, do you really want to allow GitHub to run arbitrary code on your machine?</p>
"
"<p>I would like to generate a powerset of a rather big set (about 30-50 elements) and I know that it takes <code>2^n</code> to store the powerset.</p>

<p>Is it possible to generate one subset at a time? </p>

<p>I.e. generate a powerset of a set with iterations, saving each generated subset to disk/database, removing it from the stack/memory and only then continuing to generate other subsets? </p>

<p>Unfortunately I have failed to modify <a href=""http://rosettacode.org/wiki/Power_set#Erlang"" rel=""nofollow"">Erlang</a> and <a href=""http://rosettacode.org/wiki/Power_set#Ruby"" rel=""nofollow"">Ruby</a> examples to my needs.</p>
","2988","","<p>This uses the standard ""bit array"" trick for generating power sets (and it uses the fact that Ruby's <code>Integer</code>s behave as bit arrays). But more importantly, it uses an <code>Enumerator</code> to generate the sets lazily.</p>

<pre><code>require 'set'

module Enumerable
  def powerset
    number_of_sets = 2 ** count

    Enumerator.new {|ps|
      number_of_sets.times {|i|
        ps &lt;&lt; Set[*reject.with_index {|_, j| i[j].zero? }]
      }
    }
  end
end
</code></pre>

<p>This works perfectly fine even for <em>thousands</em> of elements:</p>

<pre><code>enum = (1..10_000).powerset
enum.next # =&gt; #&lt;Set: {}&gt;
enum.next # =&gt; #&lt;Set: {1}&gt;
enum.next # =&gt; #&lt;Set: {2}&gt;
enum.next # =&gt; #&lt;Set: {1, 2}&gt;
enum.next # =&gt; #&lt;Set: {3}&gt;
enum.next # =&gt; #&lt;Set: {1, 3}&gt;
enum.next # =&gt; #&lt;Set: {2, 3}&gt;
enum.next # =&gt; #&lt;Set: {1, 2, 3}&gt;
enum.next # =&gt; #&lt;Set: {4}&gt;
enum.next # =&gt; #&lt;Set: {1, 4}&gt;
enum.next # =&gt; #&lt;Set: {2, 4}&gt;
enum.next # =&gt; #&lt;Set: {1, 2, 4}&gt;
enum.next # =&gt; #&lt;Set: {3, 4}&gt;
enum.next # =&gt; #&lt;Set: {1, 3, 4}&gt;
enum.next # =&gt; #&lt;Set: {2, 3, 4}&gt;
enum.next # =&gt; #&lt;Set: {1, 2, 3, 4}&gt;
enum.next # =&gt; #&lt;Set: {5}&gt;
# ...
</code></pre>

<p>EDIT: This is based on @steenslag's solution. I totally forgot about <code>Array#combination</code>, since I was too focused on finding a solution that would work for <em>any</em> <code>Enumerable</code>. However, my solution requires that the <code>Enumerable</code> be finite anyway, and any finite <code>Enumerable</code> should probably be representable as an <code>Array</code>, so that's not much of a restriction.</p>

<pre><code>module Enumerable
  def powerset
    ary = to_a

    Enumerator.new {|ps|
      ary.size.times {|n|
        ary.combination(n).each(&amp;ps.method(:yield))
      }
    }
  end
end
</code></pre>
"
"<p>Given that <code>map()</code> is defined by <code>Enumerable</code>, how can <code>Hash#map</code> <code>yield</code> two variables to its block?  Does <code>Hash</code> override <code>Enumerable#map()</code>?</p>

<p>Here's a little example, for fun:</p>

<pre><code>ruby-1.9.2-p180 :001 &gt; {""herp"" =&gt; ""derp""}.map{|k,v| k+v}
 =&gt; [""herpderp""] 
</code></pre>
","2988","","<blockquote>
  <p>Given that <code>map()</code> is defined by <code>Enumerable</code>, how can <code>Hash#map</code> <code>yield</code> two variables to its block?</p>
</blockquote>

<p>It doesn't. It <code>yield</code>s a <em>single</em> object to its block, which is a two-element array consisting of the key and the value.</p>

<p>It's just destructuring bind:</p>

<pre><code>def without_destructuring(a, b) end
without_destructuring([1, 2])
# ArgumentError: wrong number of arguments (1 for 2)

def with_destructuring((a, b)) end # Note the extra parentheses
with_destructuring([1, 2])

def with_nested_destructuring((a, (b, c))) p a; p b; p c end
with_nested_destructuring([1, [2, 3]])
# 1
# 2
# 3

# Note the similarity to
a, (b, c) = [1, [2, 3]]
</code></pre>

<p>Theoretically, you would have to call <code>map</code> like this:</p>

<pre><code>hsh.map {|(k, v)| ... }
</code></pre>

<p>And, in fact, for <code>inject</code>, you actually <em>need</em> to do that:</p>

<pre><code>hsh.inject {|acc, (k, v)| ... }
</code></pre>

<p>However, Ruby is more lenient with argument checking for blocks than it is for methods. In particular:</p>

<ul>
<li>If you <code>yield</code> more than one object, but the block only takes a single argument, all the objects are collected into an array.</li>
<li>If you <code>yield</code> a single object, but the block takes multiple arguments, Ruby performs destructuring bind. (This is the case here.)</li>
<li>If you <code>yield</code> more objects than the block takes arguments, the extra objects get ignored.</li>
<li>If you the block takes more arguments than you are <code>yield</code>ing, the extra arguments are bound to <code>nil</code>.</li>
</ul>

<p>Basically, the same semantics as parallel assignment.</p>

<p>In fact, before Ruby 1.9, block arguments actually <em>did have</em> assignment semantics. This allowed you to do crazy things like this:</p>

<pre><code>class &lt;&lt; (a = Object.new); attr_accessor :b end

def wtf; yield 1, 2 end

wtf {|@a, a.b| } # WTF? The block body is empty!

p @a
# 1
p a.b
# 2
</code></pre>

<p>This crazy stuff works (in 1.8 and older), because block argument passing is treated the same as assignment. IOW, even though the above block is empty and doesn't do <em>anything</em>, the fact that block arguments are passed as if they had been assigned, means that <code>@a</code> is set and the <code>a.b=</code> setter method is called. Crazy, huh? That's why it was removed in 1.9.</p>

<p>If you want to startle your co-workers, stop defining your setters like this:</p>

<pre><code>attr_writer :foo
</code></pre>

<p>and instead define them like this:</p>

<pre><code>define_method(:foo=) {|@foo|}
</code></pre>

<p>Just make sure someone else ends up maintaining it :-)</p>
"
"<p>How can I create an array of functions in Scala so I can loop over them and call them to perform calculations?</p>

<pre><code>def f1(x: Int, y: Int): Int = x + y

def f2(x: Int, y: Int): Int = x - y

def f3(x: Int, y: Int): Int = x * y

def test() {
   val someValues1 = List(1, 2)
   val someValues2 = List(3, 4)
   val fnList = Array(f1,f2,f3)

   for (f &lt;- fnList; a &lt;- someValues1; b &lt;- someValues2) {
     val result = f(a, b)
     println(""Result="" + result)
   }
}
</code></pre>
","2988","","<p>In your question, you say that you want an array of functions. But there isn't a single function in your entire code snippet!</p>

<p>I'm guessing by the names <code>f1</code>, <code>f2</code> and <code>f3</code> that you thought those were functions. But they aren't: the <code>def</code> keyword is used to declare <em>methods</em>, not <em>functions</em>. Those two are <em>fundamentally different</em>!</p>

<p>So, if you want to use an array of functions, just make <code>f1</code>, <code>f2</code> and <code>f3</code> actually <em>be</em> functions instead of methods:</p>

<pre><code>val f1: (Int, Int) =&gt; Int = _ + _
val f2: (Int, Int) =&gt; Int = _ - _
val f3: (Int, Int) =&gt; Int = _ * _
</code></pre>

<p>An alternative to that would be to actually <em>read</em> the error message, which tells you <em>exactly</em> what the problem is and how to fix it:</p>

<pre><code>error: missing arguments for method f1 in object $iw;
follow this method with `_' if you want to treat it as a partially applied function
          val fnList = Array(f1,f2,f3)
                             ^
</code></pre>

<p>So, if you simply do what the error message tells you to do, namely convert the methods to functions using the <code>_</code> operator, everything will work fine:</p>

<pre><code>val fnList = Array(f1 _, f2 _, f3 _)
</code></pre>

<p>The reason why you are getting the error message is simply because Scala allows you to leave off the parentheses in a method call. So, <code>f1</code> just means ""call <code>f1</code> without an argument list"", which is an error, because <code>f1</code> takes two arguments.</p>

<p>In some cases, when it is <em>really</em> painfully blatantly obvious that the argument cannot <em>possibly</em> be anything <em>but</em> a function, Scala will perform the conversion from method to function for you automatically. So, a third option would be to <em>make</em> it painfully blatantly obvious to Scala that you <em>do</em> have an array of functions, by, you know, declaring it as an array of functions:</p>

<pre><code>val fnList: Array[(Int, Int) =&gt; Int] = Array(f1, f2, f3) // or
val fnList = Array[(Int, Int) =&gt; Int](f1, f2, f3)
</code></pre>

<p>Now that Scala <em>knows</em> that <code>fnList</code> is an array of functions, it no longer tries to call <code>f1</code>, instead it converts it to a function.</p>
"
"<p>Found table <a href=""http://phrogz.net/programmingruby/language.html#table_18.4"" rel=""nofollow"">http://phrogz.net/programmingruby/language.html#table_18.4</a> but unable to find description for <code>|=</code></p>

<p>Please explain how the <code>|=</code> assigment operator works.
Thanks!</p>
","2988","","<p>With the expection of <code>||=</code> and <code>&amp;&amp;=</code> which have special semantics, all compound assignment operators are translated according to this simple rule:</p>

<pre><code>a ω= b
</code></pre>

<p>is the same as</p>

<pre><code>a = a ω b
</code></pre>

<p>Thus, </p>

<pre><code>a |= b
</code></pre>

<p>is the same as </p>

<pre><code>a = a | b
</code></pre>
"
"<h3>Edited</h3>

<p>I originally asked about doing this in one line; I meant to say one <strong>statement</strong>. I've edited the question accordingly.</p>

<hr>

<p>Suppose I have a method that returns a two-item array, like a color and a day of the week.</p>

<pre><code>def make_tuple
  [['blue', 'red', 'orange'].sample, ['Mon','Wed', 'Fri'].sample]
end
make_tuple # =&gt;  ['orange', 'Wed']
</code></pre>

<p>I can capture the output in two separate variables like this:</p>

<pre><code>color, day = make_tuple
</code></pre>

<p>I can gather those outputs into two separate collections like this:</p>

<pre><code>colors ||= []
days   ||= []
colors &lt;&lt; color
days   &lt;&lt; day
</code></pre>

<p>Is there a way to <strong>combine these two steps</strong> - getting separate values from the tuple and appending them to separate existing collections - into one statement? For instance:</p>

<pre><code># Doesn't work
colors &lt;&lt;, days &lt;&lt; = make_tuple
</code></pre>
","2988","","<p>Yes, you can do it in one line quite easily:</p>

<pre><code>color, day = make_tuple; colors ||= []; days ||= []; colors &lt;&lt; color; days &lt;&lt; day
</code></pre>

<p>But why would you want to?</p>
"
"<p>I am a java developer and use the Eclipse IDE for developing java code. I use the built-in refactoring features a lot, since good refactoring support from the IDE helps to speed up and leads to higher code quality. I would not like to miss it and use a simple text editor instead. Now I am looking for an IDE for Ruby on Rails with good refactoring capabilities.</p>

<h2>Basic refactorings</h2>

<p>Wanted basic refactoring methods include:</p>

<ul>
<li>Extract method</li>
<li>Extract variable</li>
<li>Rename (class, method, variable etc.)</li>
</ul>

<p>and so on.</p>

<h2>Aptana Studio 3, RadRails 2, RubyMine 3 and Netbeans 7</h2>

<p>So far I've tried <a href=""http://aptana.org/products/studio3"">Aptana Studio 3</a> and was quite disappointed regarding its refactoring capabilities. Aptana RadRails 2 seemed much better for refactoring ruby code, but it lacks other nice features that the newer Aptana Studio 3 offers. Since Aptana Studio 3 seems to be RadRails' successor I would expect that it has at least the same refactorings as the older RadRails 2, but it does not. Using an old unmaintained IDE does not seem a good option. Receiving updates for the IDE should still be possible.</p>

<p>I've read that <a href=""http://www.jetbrains.com/ruby/index.html"">Jetbrains RubyMine 3</a> has decent ruby refactoring capabilities, but it costs money. I am rather looking for a free one. Netbeans 7 seems not to support Ruby on Rails anymore.</p>

<h2>Are there good IDEs with refactoring support?</h2>

<p>That confuses me, it seems like modern IDEs drop (refactoring) support for Ruby on Rails.
What are nowadays (Jan 2012) the most powerful IDEs for refactoring Ruby on Rails code? </p>

<h2>Update: Netbeans 7</h2>

<p>As suggested by <a href=""http://stackoverflow.com/a/8707648/689801"">Jörg W Mittag</a> I've tried Netbeans 7 with the ruby plugin provided by the community. I have to say that this combination is much better than Aptana RadRails 2 or Aptana Studio 3 for developing Ruby on Rails apps. The integration of css and html for views is well done and the integration of rails tests into the JUnit Netbeans view comes in handy.</p>

<p>However, the refactoring support seems to be too basic. It supports rename, move, copy and safely delete of methods. It does not support to select lines of code and extract a method out of it nor the similar behaviour for extracting variables.</p>

<h2>Update: RubyMine 3</h2>

<p>dynex <a href=""http://stackoverflow.com/a/8705347/689801"">suggested</a> to use RubyMine. I've just played around with it and think its suitability as an Ruby on Rails IDE is at least as good as Netbeans'. The refactor capabilities are by far the best I've seen in a Ruby on Rails IDE so far. </p>

<p>From what I've discovered it features renaming, moving, copying, safe deletion, method extractation, variable introduction, constant introduction, field introduction, parameter introduction, inlining, pulling members up, pushing members doen, module extraction and superclass extraction.</p>

<p>My conclusion is that from the set of IDEs I tested RubyMine was the only one with decent refactoring capabilities. RubyMine costs money, but it seems worth it. The free ones cannot compete regarding refactorings.</p>

<p>Thanks for all answers and comments.</p>
","2988","","<blockquote>
  <p>Netbeans 7 seems not to support Ruby on Rails anymore</p>
</blockquote>

<p>That's not true. Quite the opposite actually. Yes, Oracle dropped support for the Ruby on Rails plugin and gave maintenance over to the Ruby community. But the plugin is still available from the same place it was before, the community is still using the same infrastructure to develop, maintain and distribute the plugin as before. And since most of the people who originally wrote the plugin work for Google now, they can now again work on the code, now that it is no longer owned by the company that is suing their employer.</p>
"
"<p>This is best explained with an example:</p>

<p>file1.rb:</p>

<pre><code>def foo
  puts 123
end
</code></pre>

<p>file2.rb:</p>

<pre><code>class A
  require 'file1'
end
A.new.foo
</code></pre>

<p>will give an error ""': private method 'foo' called"". </p>

<p>I can get around this by doing <code>A.new.send(""foo"")</code> but is there a way to make the imported methods public?</p>

<p>Edit: To clarify, I am not confusing include and require. Also, the reason why I cannot use normal inclusion (as many have rightly pointed out) is that this is part of a meta-programming setup. I need to allow the user to add functionality at run-time; eg he can say ""run-this-app --include file1.rb"" and the app will behave differently based on the code he wrote in file1.rb. Sorry should have explained clearer.</p>

<p>Edit: After reading Jorg's answer I realized my code does not behave exactly as intended, and he answers my (misguided) question perfectly. I am trying to do something more akin to <code>str=(entire file1.rb as string); A.class_exec(str)</code>.</p>
","2988","","<p>Global procedures in Ruby aren't <em>really</em> global procedures. They are methods, like everything else. In particular, when you define what <em>looks like</em> a global procedure, you are <em>actually</em> defining a private instance method of <code>Object</code>. Since every piece of code in Ruby is evaluated in the context of an object, this allows you to use those methods as if they were global procedures, since <code>self</code> is the default receiver, and <code>self</code> is an object whose class inherits from <code>Object</code>.</p>

<p>So, this:</p>

<pre><code># file1.rb

def foo
  puts 123
end
</code></pre>

<p>is actually equivalent to </p>

<pre><code># file1.rb

class Object
  private

  def foo
    puts 123
  end
end
</code></pre>

<p>Now you have a ""global procedure"" called <code>foo</code>, which you can call just like this:</p>

<pre><code>foo
</code></pre>

<p>The <em>reason</em> why you can call it like this, is that this call is actually equivalent to </p>

<pre><code>self.foo
</code></pre>

<p>and <code>self</code> is an object that includes <code>Object</code> in its ancestry chain, thus it inherits the private <code>foo</code> method.</p>

<p>[Note: to be precise, private methods cannot be called with an explicit receiver, <em>even if</em> that explicit receiver is <code>self</code>. So, to be really pedantic, it is <em>actually</em> equivalent to <code>self.send(:foo)</code> and not <code>self.foo</code>.]</p>

<p>The <code>A.new.foo</code> in your <code>file2.rb</code> is a red herring: you could just as well try <code>Object.new.foo</code> or <code>[].foo</code> or <code>42.foo</code> and get the same result.</p>

<p>By the way: <code>puts</code> and <code>require</code> are themselves examples of such ""global procedures"", which are actually private methods on <code>Object</code> (or more precisely, they are private methods on <code>Kernel</code> which is mixed into <code>Object</code>).</p>

<p>On a sidenote: it is <em>really</em> bad style to put calls to <code>require</code> inside a class definition, because it makes it look like the <code>require</code>d code is somehow scoped or namespaced inside the class, which is of course false. <code>require</code> simply runs the code in the file, nothing more.</p>

<p>So, while </p>

<pre><code># file2.rb

class A
  require 'file1.rb'
end
</code></pre>

<p>is perfectly valid code, it is also very confusing. It is much better to use the following, semantically equivalent, code:</p>

<pre><code># file2.rb

require 'file1.rb'

class A
end
</code></pre>

<p>That way it is perfectly clear to the reader of the code that <code>file1.rb</code> is in no way scoped or namespaced inside <code>A</code>.</p>

<p>Also, it is generally preferred to leave off the file extension, i.e. to use <code>require 'file1'</code> instead of <code>require 'file1.rb'</code>. This allows you to replace the Ruby file with, for example, native code (for MRI, YARV, Rubinius, MacRuby or JRuby), JVM byte code in a <code>.jar</code> or <code>.class</code> file (for JRuby), CIL byte code in <code>.dll</code> file (for IronRuby) and so on, without having to change any of your <code>require</code> calls.</p>

<p>One last comment: the idiomatic way to circumvent access protection is to use <code>send</code>, not <code>instance_eval</code>, i.e. use <code>A.new.send(:foo)</code> instead of <code>A.new.instance_eval {foo}</code>.</p>
"
"<p>Why will <code>(1..5).each</code> iterate over <code>1,2,3,4,5</code>, but <code>(5..1)</code> will not? It returns the Range instead.</p>

<pre><code>1.9.2p290 :007 &gt; (1..5).each do |i| puts i end
1
2
3
4
5
 =&gt; 1..5
1.9.2p290 :008 &gt; (5..1).each do |i| puts i end
 =&gt; 5..1
</code></pre>
","2988","","<p>This doesn't even really have anything to do with Ruby, it's just simple basic math: the range which starts with <code>5</code> and ends with <code>1</code> is empty. There is nothing to iterate over.</p>
"
"<p>I'm building a custom Form Builder in Rails and i've been following this great Rails Cast video (<a href=""http://railscasts.com/episodes/311-form-builders?view=asciicast"" rel=""nofollow"">http://railscasts.com/episodes/311-form-builders?view=asciicast</a>).</p>

<p>Ryan uses a line like this:</p>

<pre><code>&lt;%= form_for @project, builder: BootstrapFormBuilder do |f| %&gt;
</code></pre>

<p>But under 1.8.7 this bombs out with a cryptic error message.</p>

<p>What changed in Ruby 1.9.3 that makes this now work?</p>

<p>By the way, the following <em>does</em> work in 1.8.7, but why?</p>

<pre><code>&lt;%= form_for(@project, :builder =&gt; BootstrapFormBuilder) do |f| %&gt;
</code></pre>
","2988","","<blockquote>
  <p>What changed in Ruby 1.9.3 that makes this now work?</p>
</blockquote>

<p>There is a new syntax for <code>Hash</code> literals whose keys are <code>Symbol</code>s which are valid identifiers. Instead of </p>

<pre><code>{ :foo =&gt; 'bar', :baz =&gt; 42 }
</code></pre>

<p>You can now also write </p>

<pre><code>{ foo: 'bar', baz: 42 }
</code></pre>

<p>This syntax was introduced in 1.9.0.</p>

<blockquote>
  <p>By the way, the following does work in 1.8.7, but why?</p>
</blockquote>

<p>Because that's the same thing, just written using a different syntax.</p>
"
"<p>OK, Ruby gurus, this is a hard one to describe in the title, so bear with me for this explanation:</p>

<p>I'm looking to pass a string that represents a variable: not an instance, not the collection of properties that make up an object, but the actual variable: the <em>handle</em> to the object. </p>

<p>The reason for this is that I am dealing with resources that can be located on the filesystem, on the network, or in-memory. I want to create URI handler that can handle each of these in a consistent manner, so I can have schemes like eg.</p>

<ul>
<li>file://</li>
<li>http://</li>
<li>ftp://</li>
<li>inmemory://</li>
</ul>

<p>you get the idea. It's the last one that I'm trying to figure out: is there some way to get a string representation of a reference to an object in Ruby, and then use that string to create a new reference? I'm truly interested in marshalling the <em>reference</em>, not the <em>object</em>. Ideally there would be something like taking <code>Object#object_id</code>, which is easy enough to get, and using it to create a new variable elsewhere that refers to the same object. I'm aware that this could be really fragile and so is an unusual use case: it only works within one Ruby process for as long as there is an existing variable to keep the object from being garbage collected, but those are both true for the <code>inmemory</code> scheme I'm developing.</p>

<p>The only alternatives I can think of are:</p>

<ul>
<li>marshal the whole object and cram it into the URI, but that won't work because the data in the object is an image buffer - very large</li>
<li>Create a global or singleton purgatory area to store a variable for retrieval later using e.g. a hash of object_id:variable pairs. This is a bit smelly, but would work.</li>
</ul>

<p>Any other thoughts, StackOverflowers?</p>
","2988","","<p>Variables aren't objects in Ruby. You not only cannot marshal/unmarshal them, you can't do <em>anything</em> with them. You can only do something with objects, which variables aren't.</p>

<p>(It would be <em>really</em> nice if they <em>were</em> objects, though!)</p>
"
"<p>I have a mulitdimensional array like so:</p>

<pre><code>[
  [name, age, date, gender]
  [name, age, date, gender]
  [..]
]
</code></pre>

<p>I'm wondering the best way to sort this array based on multiple conditions...For instance, how would I sort based on <strong>age</strong> <em>first</em> then by name?</p>

<p>I was messing around with the <code>sort</code> method like so:</p>

<pre><code>array.sort { |a,b| [ a[1], a[0] ] &lt;=&gt; [ b[1], b[0] ] }
</code></pre>

<p>Besides that I don't really understand this syntax, I'm not getting the results I would expect.  Should I be using the <code>sort</code> method?  Should I be individually comparing results by <code>mapping</code> the array?</p>
","2988","","<p>You should <em>always</em> use <code>sort_by</code> for a keyed sort. Not only is it much more readable, it is also <em>much</em> more efficient. In addition, I would also prefer to use destructuring bind, again, for readability:</p>

<pre><code>ary.sort_by {|name, age| [age, name] }
</code></pre>
"
"<p>Imagine it's Jan 19. This will not be hard if you look at this question today.</p>

<pre><code>Date.today
 =&gt; Thu, 19 Jan 2012    # as expected

Date.today + 1
 =&gt; Fri, 20 Jan 2012    # as expected

Date.today+1
 =&gt; Fri, 20 Jan 2012    # as expected

Date.today +1
 =&gt; Thu, 19 Jan 2012    # ?!
</code></pre>

<p>What am I missing here? </p>
","2988","","<p>Yes, whitespace <em>does</em> matter in Ruby, contrary to popular belief. For example, <code>foo bar</code> is not the same as <code>foobar</code>.</p>

<p>In this particular case, </p>

<pre><code>Date.today + 1
</code></pre>

<p>is the same as</p>

<pre><code>Date.today().+(1)
</code></pre>

<p>Whereas</p>

<pre><code>Date.today +1
</code></pre>

<p>is the same as </p>

<pre><code>Date.today(+1)
</code></pre>

<p>which is the same as </p>

<pre><code>Date.today(1.+@())
</code></pre>
"
"<p>In one of Ruby examples I see the following code:</p>

<pre><code>require 'net/http'
req = Net::HTTP::Get.new( ""http://localhost:8080/"" )
req.basic_auth( ""user"", ""password"" )
</code></pre>

<p>What is the easiest way to know what Ruby class actually implements this <code>basic_auth</code> method or is it dynamically generated? I have checked public_methods of <code>Net::HTTP::Get</code> and it's definitely not there. But how to check what class actually implements it?</p>
","2988","","<p>Generally, you would use the <code>Kernel#method</code> method to get the <code>Method</code> object for the method in question and then you would use the <code>Method#owner</code> method to ask the <code>Method</code> object where it was defined.</p>

<p>So, </p>

<pre><code>req.method(:basic_auth).owner
# =&gt; Net::HTTPHeader
</code></pre>

<p><em>should</em> answer your question.</p>

<p>Except, in this particular case, that won't work because <code>req</code> is a <code>Net::HTTP::Get</code> object and <code>Net::HTTP::Get</code> overrides the <code>method</code> method to mean something completely different. In particular, it doesn't take an argument, thus the above code will actually raise an <code>ArgumentError</code>.</p>

<p>However, since <code>Net::HTTP::Get</code> inherits from <code>Object</code> and <code>Object</code> mixes in <code>Kernel</code>, it <em>is</em> legal to bind the <code>Kernel#method</code> method to an instance of <code>Net::HTTP::Get</code>:</p>

<pre><code>Kernel.instance_method(:method).bind(req).(:basic_auth).owner
# =&gt; Net::HTTPHeader
</code></pre>

<p>So, there's your answer: the method is defined in <code>Net::HTTPHeader</code>.</p>
"
"<p>I know that attr_accessor is defined inside the Module class, but I am trying to find the source file for the Module class and cant find it.  I recursively searched in my ruby dir for 'def attr_accessor' and got nothing?</p>

<p>Any idea where it could be?</p>
","2988","","<p>In Rubinius, it's in <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/delta/module.rb#L191-200"" rel=""nofollow""><code>kernel/delta/module.rb</code></a>:</p>

<pre><code>def attr_accessor(*names)
  vis = Rubinius::VariableScope.of_sender.method_visibility

  names.each do |name|
    Rubinius.add_reader name, self, vis
    Rubinius.add_writer name, self, vis
  end

  return nil
end
</code></pre>
"
"<pre><code>module Imodule
  ???
end

class Some
  include Imodule

  def self.imethod
    puts ""original""
  end
end

Some.imethod
# =&gt; ""overrided""
</code></pre>

<p>How to create a module which will override static method?</p>

<p>This is an interview question for deep understanding ruby features. Don't suggest another formulation of the problem :)</p>
","2988","","<p>If this <em>really</em> is an interview question to test deep understanding of Ruby features, then the answer is trivial: Ruby doesn't have class methods. Nor does it have static methods. It most certainly doesn't have static class methods. If you have a deep understanding of Ruby features, heck, even if you have just a superficial familiarity with Ruby, you know this. Ergo, it's a trick question.</p>
"
"<p>I have three objects that are all the same class. One was created via <code>Item.new</code> and the other two were pulled from the database (Mongoid). I'm passing one/any of these objects to another method and checking the type in that method via <code>is_a?</code>: </p>

<pre><code>def initialize (item, attrs = nil, options = nil)
  super(attrs, options)
  raise 'invalid item object' unless item.is_a?(Item)
</code></pre>

<p>Well, this raise is getting hit. So I check the class, is_a and instance_of in rails console. I'm getting conflicting results. Why would they have the same <code>class</code> but only one of them be an <code>instance_of</code> that <code>class</code>? </p>

<pre><code>&gt;&gt; i0.is_a? Item
=&gt; false
&gt;&gt; i1.is_a? Item
=&gt; false
&gt;&gt; i2.is_a? Item
=&gt; true

&gt;&gt; i0.class
=&gt; Item
&gt;&gt; i1.class
=&gt; Item
&gt;&gt; i2.class
=&gt; Item

&gt;&gt; i0.instance_of?(Item)
=&gt; false
&gt;&gt; i1.instance_of?(Item)
=&gt; false
&gt;&gt; i2.instance_of?(Item)
=&gt; true
</code></pre>

<p>Is there a better way to do this type checking of my inputs? Why would three things that are the same class not all be instances of that class? </p>
","2988","","<p>I don't know Mongoid, but usually, in a DB access library, you don't get the actual object out of the database but rather a proxy object that acts as a stand-in for the object stored in the DB. Since Ruby lacks the features to implement a perfect transparent proxy, you will sometimes see odd results, especially when using reflection or around object identity.</p>
"
"<p>I've just seen I can do:</p>

<pre><code>Set(1, 2, 3).map(Set(1))
</code></pre>

<p>which yields the result:</p>

<pre><code>Set(true, false)
</code></pre>

<p>But I thought that the map function can only take another function not a new Set. If anything I'd expect this to return a set of sets. What's going on and what does the result mean?</p>
","2988","","<blockquote>
  <p>But I thought that the <code>map</code> function can only take another function not a new <code>Set</code>.</p>
</blockquote>

<p>A <code>Set</code> <em>is</em> a function. It is a function from its elements to booleans: when you pass it an element, it tells you whether that element is part of the <code>Set</code>.</p>

<pre><code>Set(1, 2, 3).map(Set(1))
</code></pre>

<p>Iterates over the <code>Set(1, 2, 3)</code>, passing each each element to the <code>Set(1)</code>. I.e. it first asks ""is <code>1</code> a member of set <code>{1}</code>"", which is <code>true</code>, then it asks the same question for <code>2</code> and <code>3</code>, which is <code>false</code>.</p>

<p>So, the result is <code>Set(true, false, false)</code>, which of course is just <code>Set(true, false)</code>.</p>

<p>Similarly, a sequence is a function from integers to elements, a map is a function from keys to values.</p>
"
"<p>I need some help in understanding Hash in Ruby 1.8.7. </p>

<p>I have a multi-threaded Ruby application, and about 95% of time multiple threads of the application are trying to access a global Hash. </p>

<p>I am not sure if the default Ruby Hash is thread safe. What would be the best way to have a fast Hash but also one that is thread safe given my situation? </p>
","2988","","<p>The default Ruby <code>Hash</code> is not thread-safe. On MRI and YARV it is ""somewhat accidentally thread-safe"", because MRI and YARV have a broken threading implementation that is incapable of running two threads simultaneously anyway. On JRuby, IronRuby and Rubinius however, this is not the case.</p>
"
"<p>I am wondering what the semantics of using the <code>abstract</code> keyword in combination with a <code>trait</code> is.</p>

<p>If the trait does not define any abstract methods, the <code>abstract</code> keyword does not prevent me from creating an instance:</p>

<pre><code>scala&gt; abstract trait T
defined trait T

scala&gt; new T{}
res0: java.lang.Object with T = $anon$1@12cd927d
</code></pre>

<p>On the other hand, if the trait does define an abstract method, I cannot create an instance (without implementing this method of course) no matter if the <code>abstract</code> keyword is present or not:</p>

<pre><code>scala&gt; abstract trait T { def foo : Unit }
defined trait T

scala&gt; new T{}
&lt;console&gt;:9: error: object creation impossible, since method foo in trait T of type =&gt;    Unit is not defined
              new T{}
                  ^

scala&gt; trait T { def foo : Unit }
defined trait T

scala&gt; new T{}
&lt;console&gt;:9: error: object creation impossible, since method foo in trait T of type =&gt;     Unit is not defined
              new T{}
                  ^
</code></pre>

<p>So what is the <code>abstract</code> keyword in front of a <code>trait</code> good for?</p>
","2988","","<p>You're not creating an instance of the trait. Traits can't be instantiated.</p>

<p>You're creating an anonymous object, mixing the trait into that anonymous object.</p>

<p>So, the reason why can create an instance in the first case, is because you're not creating an instance of the trait (which is abstract) but an object (which isn't).</p>

<p>In the second case, the reason why you can't create an instance is that if you inherit from something, whether that is a trait or a class, you ultimately have to implement its abstract methods somewhere along the inheritance chain in order to instantiate it. In the first case, there are no abstract methods to implement.</p>
"
"<p>I'm using <code>net/http</code> to pull in some json data from the Yahoo Placemaker API. After receiving the response I am performing <code>JSON.parse</code> on the response. This gives me a hash that looks like:</p>

<pre><code>{""processingTime""=&gt;""0.001493"", ""version""=&gt;""1.4.0.526 build 111113"", ""documentLength""=&gt;""25"", ""document""=&gt;{""administrativeScope""=&gt;{""woeId""=&gt;""2503863"", ""type""=&gt;""Town"", ""name""=&gt;""Tampa, FL, US"", ""centroid""=&gt;{""latitude""=&gt;""27.9465"", ""longitude""=&gt;""-82.4593""}}, ""geographicScope""=&gt;{""woeId""=&gt;""2503863"", ""type""=&gt;""Town"", ""name""=&gt;""Tampa, FL, US"", ""centroid""=&gt;{""latitude""=&gt;""27.9465"", ""longitude""=&gt;""-82.4593""}}, ""localScopes""=&gt;{""localScope""=&gt;{""woeId""=&gt;""2503863"", ""type""=&gt;""Town"", ""name""=&gt;""Tampa, FL, US (Town)"", ""centroid""=&gt;{""latitude""=&gt;""27.9465"", ""longitude""=&gt;""-82.4593""}, ""southWest""=&gt;{""latitude""=&gt;""27.8132"", ""longitude""=&gt;""-82.6489""}, ""northEast""=&gt;{""latitude""=&gt;""28.1714"", ""longitude""=&gt;""-82.2539""}, ""ancestors""=&gt;[{""ancestor""=&gt;{""woeId""=&gt;""12587831"", ""type""=&gt;""County"", ""name""=&gt;""Hillsborough""}}, {""ancestor""=&gt;{""woeId""=&gt;""2347568"", ""type""=&gt;""State"", ""name""=&gt;""Florida""}}, {""ancestor""=&gt;{""woeId""=&gt;""23424977"", ""type""=&gt;""Country"", ""name""=&gt;""United States""}}]}}, ""extents""=&gt;{""center""=&gt;{""latitude""=&gt;""27.9465"", ""longitude""=&gt;""-82.4593""}, ""southWest""=&gt;{""latitude""=&gt;""27.8132"", ""longitude""=&gt;""-82.6489""}, ""northEast""=&gt;{""latitude""=&gt;""28.1714"", ""longitude""=&gt;""-82.2539""}}, ""placeDetails""=&gt;{""placeId""=&gt;""1"", ""place""=&gt;{""woeId""=&gt;""2503863"", ""type""=&gt;""Town"", ""name""=&gt;""Tampa, FL, US"", ""centroid""=&gt;{""latitude""=&gt;""27.9465"", ""longitude""=&gt;""-82.4593""}}, ""placeReferenceIds""=&gt;""1"", ""matchType""=&gt;""0"", ""weight""=&gt;""1"", ""confidence""=&gt;""8""}, ""referenceList""=&gt;{""reference""=&gt;{""woeIds""=&gt;""2503863"", ""placeReferenceId""=&gt;""1"", ""placeIds""=&gt;""1"", ""start""=&gt;""15"", ""end""=&gt;""20"", ""isPlaintextMarker""=&gt;""1"", ""text""=&gt;""Tampa"", ""type""=&gt;""plaintext"", ""xpath""=&gt;""""}}}}
</code></pre>

<p>I am able to access elements by doing things like <code>jsonResponse['version']</code> but I am not able to do <code>jsonResponse.version</code>. Why is this?</p>
","2988","","<p>Because <code>Hash</code> doesn't have a <code>version</code> method.</p>
"
"<p>Instead of supporting method overloading Ruby overwrites existing methods. Can anyone explain why the language was designed this way?</p>
","2988","","<p>""Overloading"" is a term that simply doesn't even make sense in Ruby. It is basically a synonym for ""static argument-based dispatch"", but Ruby doesn't <em>have</em> static dispatch <em>at all</em>. So, the reason why Ruby doesn't support static dispatch based on the arguments, is because it doesn't support static dispatch, period. It doesn't support static dispatch of <em>any kind</em>, whether argument-based or otherwise.</p>

<p>Now, if you are <em>not</em> actually specifically asking about overloading, but maybe about <em>dynamic</em> argument-based dispatch, then the answer is: because Matz didn't implement it. Because nobody else bothered to propose it. Because nobody else bothered to implement it.</p>

<p>In general, dynamic argument-based dispatch in a language with optional arguments and variable-length argument lists, is <em>very</em> hard to get right, and even <em>harder</em> to keep it understandable. Even in languages with <em>static</em> argument-based dispatch and without optional arguments (like Java, for example), it is sometimes almost impossible to tell for a mere mortal, <em>which</em> overload is going to be picked. </p>

<p>In C#, you can actually encode <em>any</em> 3-SAT problem into overload resolution, which means that overload resolution in C# is NP-hard.</p>

<p>Now try that with <em>dynamic</em> dispatch, where you have the additional time dimension to keep in your head.</p>

<p>There are languages which dynamically dispatch based on all arguments of a procedure, as opposed to object-oriented languages, which only dispatch on the ""hidden"" zeroth <code>self</code> argument. Common Lisp, for example, dispatches on the dynamic types and even the dynamic values of all arguments. Clojure dispatches on an arbitrary function of all arguments (which BTW is extremely cool and extremely powerful).</p>

<p>But I don't know of any OO language with dynamic argument-based dispatch. Martin Odersky said that he <em>might</em> consider adding argument-based dispatch to Scala, but <em>only</em> if he can remove overloading at the same time <em>and</em> be backwards-compatible both with existing Scala code that uses overloading and compatible with Java (he especially mentioned Swing and AWT which play some extremely complex tricks exercising pretty much every nasty dark corner case of Java's rather complex overloading rules). I've had some ideas myself about adding argument-based dispatch to Ruby, but I never could figure out how to do it in a backwards-compatible manner.</p>
"
"<p>I am new in ruby,and it seems that ruby does support variable definde outside the method being accessed just now when I want to do something:</p>

<hr>

<pre><code>template=&lt;&lt;MTEMP
#methodName#:function(){},
MTEMP
result="""";
def generateMethods(mds)
  mds.each do |md|
    result+=template.gsub(/#methodName#/,md).to_s+""\n"";
  end
  result;
end

puts generateMethods(['getName','getAge','setName','setAge'])
</code></pre>

<hr>

<p>I got <code>undefined local variable or method 'template' for main:Object (NameError)</code> when I try to run it.</p>

<p>It seems that I can not access the <code>template</code> and <code>result</code> varible inner the <code>generateMethods</code> method?</p>

<p>Why?</p>

<hr>

<p>Update:</p>

<p>It seems that the scope concept is differ from what is in the javascript?</p>

<pre><code>var xx='xx';
function afun(){
  console.info(xx);
}
</code></pre>

<p>The above code will work.</p>
","2988","","<p>Local variables are local to the scope they are defined in. That's why they are called <em>local</em> variables, after all!</p>

<p>Ergo, you cannot access them from a different scope. That's the <em>whole point</em> of local variables.</p>
"
"<p>I'm trying to run a file (ruby anyfile.rb in cmd prompt) with the following contents:</p>

<pre><code># encoding: utf-8
puts 'áá'
</code></pre>

<p>happens the following error:</p>

<pre><code>invalid multibyte char (UTF-8)
</code></pre>

<p>It seems that Ruby does not understand the magic comment...</p>

<p><strong>EDIT:</strong> If I remove the ""# encoding: utf-8"" and run the command prompt like this:</p>

<pre><code>ruby-E:UTF-8 encoding.rb
</code></pre>

<p>then it works - any ideas?</p>

<p><strong>EDIT2:</strong> when i run:</p>

<pre><code>ruby -e 'p [Encoding.default_external, Encoding.default_internal]'
</code></pre>

<p>i got <strong>[#Encoding:CP850, nil]</strong>, maybe my Encoding.default_external is wrong?!</p>

<p>Environment:</p>

<ul>
<li>Windows XP (yes, I also hate windows + ruby)</li>
<li>ruby 1.9.2p180 (2011-02-18) [i386-mingw32]</li>
</ul>
","2988","","<p>I believe this is a classic case of ""if you hear hooves, think horses, not zebras"".</p>

<p>The error message is telling you that you have a byte sequence in your file that is not a valid UTF-8 multibyte sequence.</p>

<p>It is definitely possible that</p>

<blockquote>
  <p>It seems that Ruby does not understand the magic comment...</p>
</blockquote>

<p>as you say, and that up until now nobody noticed that magic comments don't actually work because you are the first person in the history of humankind to actually try to use magic comments. (Actually, this is <em>not</em> possible. If Ruby <em>didn't</em> understand magic comments, it would complain about an invalid <em>ASCII</em> character, since ASCII is the default encoding if no magic comment is present.)</p>

<p>Or, there actually <em>is</em> an invalid multibyte UTF-8 sequence in your file.</p>

<p>Which do you think is more likely? If I were you, I would check my file.</p>
"
"<p>I am new to Ruby and I am trying to write a program which convert Roman numerals to numbers.</p>

<p>This is what I did so far:</p>

<pre><code>roman_numbers = {""M"" =&gt; 1000, ""D"" =&gt; 500, ""C"" =&gt; 100, ""L"" =&gt; 50, ""X"" =&gt; 10, ""V"" =&gt; 5, ""I"" =&gt; 1}
number_by_user = ""MCMXCIX""
singlenum = number_by_user.split(//).reverse!

l = singlenum.length
result =0


result = roman_numbers[singlenum[0]]
puts result
for i in 0..l-1
  if roman_numbers.key?(singlenum[i])
    **if (roman_numbers[singlenum[i]] &gt; roman_numbers[singlenum[i+1]])** #gives error
      result = result - roman_numbers[singlenum[i+1]]
    elsif (roman_numbers[singlenum[i]]== roman_numbers[singlenum[i+1]] || **roman_numbers[singlenum[i]] &lt; roman_numbers[singlenum[i+1]])** #gives error
      result = result + roman_numbers[singlenum[i+1]]
    end
    puts roman_numbers[singlenum[i]]
  else
    puts ""One of the values are not roman""
    break
  end  
end
puts ""The number is: "" , result
</code></pre>

<p>but it gives me the following error (see the line with comment):</p>

<pre><code>:in `&gt;': comparison of Fixnum with nil failed (ArgumentError)
</code></pre>
","2988","","<p>Marc did a good job of explaining where the error was in your code. However, such an error should never have occurred in the first place, since in Ruby, all collections already know how to iterate over themselves: <em>you</em> don't have to do that, so you can never even <em>make</em> such a mistake!</p>

<p>Here's an example of how one might implement the same algorithm in more idiomatic Ruby:</p>

<pre><code>numerals = {
  'M' =&gt; 1000,
  'D' =&gt;  500,
  'C' =&gt;  100,
  'L' =&gt;   50,
  'X' =&gt;   10,
  'V' =&gt;    5,
  'I' =&gt;    1
}

num = 'MCMXCIX'

(num.chars.map(&amp;numerals.method(:[])) &lt;&lt; 0).each_cons(2).inject(0) {|a, (n1, n2)|
  if n1 &lt; n2 then a - n1 else a + n1 end
}
</code></pre>

<p>See? No loops. No indices. You cannot make an off-by-one error even if you <em>tried</em>!</p>

<p>Bonus: <em>actually</em>, the above snippet <em>does</em> contain a piece of code to prevent an off-by-one error, albeit one at a much higher semantic level. Can you find it?</p>
"
"<p>I am analysing the rails source code, because I wold like to understand the inner workings of the <code>has_many</code> and similar constructs.</p>

<p>So far, I was able to find where the method is implemented (<a href=""https://github.com/rails/rails/blob/109db5a55035781166f295d38a2702ce3cc83858/activerecord/lib/active_record/associations.rb"" rel=""nofollow"">link to github</a>): it is in the module ActiveRecord::Associations</p>

<pre><code>def has_many(name, options = {}, &amp;extension)
  Builder::HasMany.build(self, name, options, &amp;extension)
end
</code></pre>

<p>This one eventualy ends (<a href=""https://github.com/rails/rails/blob/109db5a55035781166f295d38a2702ce3cc83858/activerecord/lib/active_record/associations/builder/collection_association.rb"" rel=""nofollow"">link to github</a>) in the class ActiveRecord::Associations::Builder::CollectionAssociation as</p>

<pre><code>def self.build(model, name, options, &amp;extension)
  new(model, name, options, &amp;extension).build
end
</code></pre>

<p>There is where my ruby skills end and I could not track it further and find where is ""new"" implemented and what it does.</p>

<p>Can someone point me to the right direction and maybe comment along, what is going on under the hood?</p>
","2988","","<p>Basically, <code>new</code> is defined like this:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate

    obj.initialize(*args, &amp;block)
    # *actually* obj.send(:initialize, *args, &amp;block) since initialize is private

    obj
  end
end
</code></pre>

<p><code>allocate</code> is defined like this:</p>

<pre><code>class Class
  def allocate
    # magic stuff for creating an empty object which cannot be expressed in Ruby:

    new_obj = Deep::Within::VM.__somehow_magically_allocate_memory__!

    new_obj.__class__ = self

    new_obj
  end
end
</code></pre>
"
"<pre><code>new_hash = {:simon =&gt; ""Talek"", :lorem =&gt; ""Ipsum""}
</code></pre>

<p>can be replaced by</p>

<pre><code>new_hash = {simon: ""Talek"", lorem: ""Ipsum""}
</code></pre>

<p>Is there also a shorter way of writing</p>

<pre><code>:on =&gt; :collection
</code></pre>

<p>Applying the same logic raises an error:</p>

<pre><code>on: :collection
</code></pre>

<p>Update to provide more info:</p>

<p>In my routes.rb:</p>

<pre><code>get 'detail', { on: :member } 
</code></pre>

<p>doesn't work. Neither does</p>

<pre><code>get 'detail',  on: :member 
</code></pre>

<p>Error:</p>

<pre><code>Exiting
SyntaxError: C:/Workspace/OE_11/CyberTrack_Rails3/config/routes.rb:23: 
  syntax error, unexpected ':'

      get 'detail', { on: :member }
</code></pre>

<p>or</p>

<pre><code>Exiting
SyntaxError: C:/Workspace/OE_11/CyberTrack_Rails3/config/routes.rb:23: 
  syntax error, unexpected ':'

      get 'detail', on: :member
</code></pre>
","2988","","<p>This works just fine for me:</p>

<pre><code>def get(*args) p *args end

get 'detail', on: :member
# ""detail""
# { :on =&gt; :member }

RUBY_ENGINE
# =&gt; jruby
JRUBY_VERSION
# =&gt; 1.6.6
</code></pre>

<p>EDIT: Now that you provided the error message, it looks like you are not running Ruby 1.9. The new hash syntax was introduced in Ruby 1.9, it doesn't work in older versions. You need to make sure that you are running Ruby 1.9, either by verifying that you are running the right Ruby implementation (e.g. YARV supports 1.9, MRI doesn't) or, if you are running a Ruby implementation that supports multiple language versions (e.g. JRuby) that you are passing the correct command line flags (e.g. <code>jruby --1.9</code>).</p>
"
"<p>I am getting Ruby Error: <code>syntax error, unexpected tGVAR, expecting $end.</code></p>

<p>I am using Mechanize to access a website and then I need to enter data into the form to search. When I <code>pp page</code> the site to get the form information I get:</p>

<pre><code>#&lt;Mechanize::Form
&lt;name nil&gt;
&lt;method ""POST""&gt;
&lt;action """"&gt;
&lt;fields
...
...
[text:0xb43f9c type: text name: ct100$MainContent$txtNumber value: ]
...
</code></pre>

<p>My code that is throwing this is:</p>

<pre><code>Check_form = page.form()
Check_form.ct100$MainContent$txtNumber = 'J520518'
</code></pre>

<p>Any ideas on what is causing the error? Thank you in advance for the help!</p>
","2988","","<p>The error is telling you that there is a global variable where Ruby doesn't expect one. And there is: <code>$txtNumber</code> is a global variable, but it doesn't make sense for a global variable to appear at that place in your code.</p>
"
"<p>I want to create an instance variable in a controller to be used in the view:</p>

<pre><code>foo = ""bar""
instance_variable_set(""#{foo}"", ""cornholio"")
</code></pre>

<p>In the view, use @bar so that:</p>

<pre><code>@bar =&gt; ""cornholio""
</code></pre>

<p>This generates an error: <code>'bar' is not allowed as an instance variable name</code></p>

<p>Working in Rails 3.1</p>
","2988","","<p>In Ruby, instance variable names always have to start with an <code>@</code> sigil.</p>
"
"<p>Why does <code>""A"".send('!='.to_sym, ""B"")</code> raises a NoMethodError in Ruby 1.8.7 while <code>""A"" != ""B""</code>does not - and how would the correct syntax for <code>Object.send</code> look like?</p>
","2988","","<p>Since the second half of the question hasn't been answered yet:</p>

<pre><code>'A'.send(:==, 'B').send(:!) # Ruby 1.9

!'A'.send(:==, 'B')         # Ruby 1.8
</code></pre>
"
"<p>I am noticing differences between a hash object within Ruby 1.8.7 and a hash object within Rails 3.0.10.</p>

<p>For example, within the 1.8.7 <code>irb</code>, I get:</p>

<p><code>
1.8.7 :001 &gt; {}.try(:method)
NoMethodError: undefned method `try' for {}:Hash
    from (irb):1</code></p>

<p>However, from the 3.0.10 rails console, I get:</p>

<p><code>
1.8.7 :003 &gt; {}.try(:method_x)
NoMethodError: undefined method `method_x' for {}:Hash
    from (irb):3:in `try'
    from (irb):3
</code></p>

<p>This surprises me because I was under the impression that <a href=""http://api.rubyonrails.org/classes/Object.html#method-i-try"" rel=""nofollow""><code>try</code></a> is defined in Object which is an ancestor of Hash and <code>try</code> will return nil instead of throwing a NoMethodError.</p>

<p>What am I missing?</p>
","2988","","<blockquote>
  <p>This surprises me because I was under the impression that <code>try</code> is defined in <code>Object</code> which is an ancestor of <code>Hash</code> and <code>try</code> will return <code>nil</code> instead of throwing a <code>NoMethodError</code>.</p>
  
  <p>What am I missing?</p>
</blockquote>

<p>Your impression of which <em>class</em> <code>try</code> is defined in is correct (<code>Object</code>). What you are missing is what <em>file</em> it is defined in. It's defined in the ActiveSupport library, not in the Ruby core library.</p>

<p>So, you need to </p>

<pre><code>require 'active_support/core_ext/object/try'
</code></pre>

<p>first.</p>
"
"<p>I want to call Ruby methods from a Java environment. I have tried these four solutions:</p>

<ol>
<li><strong>Use JRuby</strong>. This would be excellent because it runs everything in the Java virtual machine. However I have experienced some critical (unacceptable) performance issues:
<ul>
<li>JRuby does currently not work with my C extensions.</li>
<li>Fork calls from Ruby, do not behave stable when running in the Java virtual machine.</li>
<li>The code runs slower in JRuby than in MRI Ruby.</li>
</ul></li>
<li><strong>Use ROR</strong>. Bypass Java all together by providing webservices via Ruby on Rails. This works but breaks the companies IT policy of using Java webservices only, it also forces either the IT department (Java and webservice developers) or the R&amp;D department (Ruby and C developers) to work outside there domain.</li>
<li><strong>Use Java system calls</strong>. We can call stand alone Ruby programs with Java system calls and parse input and output data via XML files. This works, but the overhead of starting new processes and handling XML files is a performance issue.</li>
<li><strong>Use RJB</strong>. Ruby Java Bridge allows me to call Java from Ruby, but that is the reverse of what I need.</li>
</ol>

<p>Is there a method to call MRI Ruby from Java, without any of the above described issues?</p>
","2988","","<p>You could make #3 more efficient by</p>

<ul>
<li>not starting processes, instead use a long-running daemon process</li>
<li>not communicating via files but via pipes</li>
<li>using something more efficient than XML, like Protocol Buffers</li>
</ul>

<p>But in general, I don't see any option you missed. Sorry.</p>
"
"<p>I have the following Ruby code:</p>

<pre><code>local_var = ""Hello""

def hello
  puts local_var
end

hello
</code></pre>

<p>I get the following error:</p>

<pre><code>`local_variables.rb:4:in 'hello': undefined local variable or method 'local_var' 
for main:Object (NameError) from local_variables.rb:7:in '&lt;main&gt;'`
</code></pre>

<p>I always thought that local variables are not accessible from outside of the block, function, closure etc. 
But now I defined local varible in the file and try to get an access from the function  <strong>INSIDE</strong> the same file. 
What's wrong with my understanding? </p>
","2988","","<p><code>local_var</code> is a local variable. Local variables are local to the scope they are defined in. (That's why they are <em>called</em> ""local variables"", after all!) So, obviously, since <code>local_var</code> is defined in the script scope, you cannot access it in the method scope.</p>
"
"<p><a href=""http://www.igvita.com/2011/02/03/new-ruby-19-features-tips-tricks/"">This article</a> mentions 4 ways to invoke procs in ruby 1.9, and === is one of them. I don't understand why this would be done this way at all. Does it have any relationship to the normal meaning of === (asking if the two objects are the same object)?</p>

<pre>
irb(main):010:0> f =-> n {[:hello, n]}
=> #
irb(main):011:0> f.call(:hello)
=> [:hello, :hello]
irb(main):012:0> f === :hello
=> [:hello, :hello]
irb(main):013:0> Object.new === Object.new
=> false
irb(main):014:0> f === f
=> [:hello, #]
</pre>
","2988","","<blockquote>
  <p>Does it have any relationship to the normal meaning of === (asking if the two objects are the same object)?</p>
</blockquote>

<p>Actually, that's a common misconception about <code>===</code> in Ruby. It's actually not strictly for <code>Object#object_id</code> comparison (although that is its behavior in many common invocations). In Ruby, <code>===</code> is case <a href=""http://en.wiktionary.org/wiki/subsume"" rel=""nofollow"">subsumption</a>.</p>

<p>Here's the description of <code>===</code> from <code>Object</code>: ""Case Equality -- For class Object, effectively the same
as calling  #==, but typically overridden by descendants
to provide meaningful semantics in case statements.""</p>

<p>Sadly, even though it is comprised of three <code>=</code>, it doesn't have anything even remotely to do with equality :-D</p>
"
"<p>I am quite new to Ruby and am wondering about the <code>&lt;&lt;</code> operator. When I googled this operator, it says that it is a Binary Left Shift Operator given this example:</p>

<blockquote>
  <p><code>a &lt;&lt; 2</code> will give <code>15</code> which is <code>1111 0000</code></p>
</blockquote>

<p>however, it does not seem to be a ""Binary Left Shift Operator"" in this code:</p>

<pre><code>class TextCompressor
  attr_reader :unique, :index

  def initialize(text)
    @unique = []
    @index = []

    add_text(text)
  end

  def add_text(text)
    words = text.split
    words.each { |word| do add_word(word) }
  end

  def add_word(word)
    i = unique_index_of(word) || add_unique_word(word)
    @index &lt;&lt; i
  end

  def unique_index_of(word)
    @unique.index(word)
  end

  def add_unique_word
    @unique &lt;&lt; word
    unique.size - 1
  end
end
</code></pre>

<p>and <a href=""http://stackoverflow.com/questions/4135464/operator-in-ruby"">this question</a> does not seem to apply in the code I have given. So with the code I have, how does the Ruby <code>&lt;&lt;</code> operator work?</p>
","2988","","<p>Ruby is an object-oriented language. The fundamental principle of object orientation is that objects send messages to other objects, and the receiver of the message can respond to the message in whatever way it sees fit. So, </p>

<pre><code>a &lt;&lt; b
</code></pre>

<p>means whatever <code>a</code> decides it should mean. It's impossible to say what <code>&lt;&lt;</code> means without knowing what <code>a</code> is.</p>

<p>As a general convention, <code>&lt;&lt;</code> in Ruby means ""append"", i.e. it appends its argument to its receiver and then returns the receiver. So, for <code>Array</code> it appends the argument to the array, for <code>String</code> it performs string concatenation, for <code>Set</code> it adds the argument to the set, for <code>IO</code> it writes to the file descriptor, and so on.</p>

<p>As a special case, for <code>Fixnum</code> and <code>Bignum</code>, it performs a bitwise left-shift of the twos-complement representation of the <code>Integer</code>. This is mainly because that's what it does in C, and Ruby is influenced by C.</p>
"
"<p>I'm looking for a library or extension that enables ruby to work with <a href=""http://www.ietf.org/rfc/rfc3987.txt"" rel=""nofollow"">IRIs</a>, which are URLs that contain special characters like Umlauts ( ü,ö and friends ). I'm trying to build a webscraper, and that seems to be the only point that's bothering me.</p>

<p>I've tried some quick hacks to resolve the problem, but I'd feel better if there was a tested and proven library for doing the same thing. </p>

<p>Thanks already for helping me! </p>

<p>moritz</p>
","2988","","<p><a href=""http://Addressable.RubyForge.Org/"" rel=""nofollow"">Addressable</a> is a (mostly) API-compatible replacement for the <code>URI</code> standard library which supports IRIs among other things.</p>
"
"<p>I tried to make a method (or notation?) like %w, but ruby is not happy with the name of method and give errors all the time. I tried to search a bit, but did not find anything exciting.</p>

<p>Any ideas how to do it?</p>

<p>For example,</p>

<pre><code>def %f(&amp;block)
    puts ""foo""
end
</code></pre>
","2988","","<p>Those aren't methods, those are literal syntax. There are very few languages that <em>do</em> allow creating new literals, but Ruby isn't one of them. Like most languages, the syntax is fixed.</p>
"
"<p>In Scala, how do you assign a function of a particular signature to an appropriately typed value? </p>

<pre><code>def foo = println(""foo"")
def bar = println(""bar"")
val fnRef : ()=&gt;Unit = //the function named foo or the function named bar
</code></pre>
","2988","","<p><code>foo</code> and <code>bar</code> aren't functions, they are methods. You can't assign methods to a name, because methods aren't objects.</p>
"
"<p>Related: <a href=""http://stackoverflow.com/questions/9743958/how-do-you-assign-a-function-to-a-value-in-scala"">How do you assign a function to a value in Scala?</a></p>

<p>Given: </p>

<pre><code>class Foo{
  def bar = println(""bar"")
  def bat = println(""bat"")
}
</code></pre>

<p>How do I create a <code>fnRef</code> such that it points to either <code>Foo.bar</code> or <code>Foo.bat</code>? </p>

<pre><code>def deepFunction(foos : List[Foo], fnRef : ()=&gt;Unit) = {
  foos.map(_.fnRef) //May call either bar or bat
}  
</code></pre>

<p>Bonus: Is it possible to constrain the fnRef so that it's only methods of that signature within the Foo class?</p>
","2988","","<p>Methods aren't objects in Scala, you can't assign them to names.</p>
"
"<p>I'm finishing The Well Grounded Rubyist and I've noticed some instance variable calls that I don't quite understand.  Straight from TWGR (Section 15.2.2):</p>

<pre><code>class Person
  attr_reader :name
  def name=(name)
    @name = name
    normalize_name
  end

  private
  def normalize_name
    name.gsub!(/[^-a-z'.\s]/i, """")
  end
end
</code></pre>

<p>Is the <code>name</code> variable in the normalize_name method an implicit instance variable?  Would <code>@name.gsub!(/[^-a-z'.\s]/i, """")</code> have worked just as well?  Is there some convention I should be aware of?</p>
","2988","","<blockquote>
  <p>Is the <code>name</code> variable in the normalize_name method an implicit instance variable?</p>
</blockquote>

<p>No, it's not an instance variable. Instance variables start with an <code>@</code> sigil, this doesn't, ergo, it cannot possibly be an instance variable. In fact, it's not a variable <em>at all</em>, it's a message send.</p>
"
"<p>I've one file, main.rb with the following content:</p>

<pre><code>require ""tokenizer.rb""
</code></pre>

<p>The tokenizer.rb file is in the <em>same directory</em> and its content is:</p>

<pre><code>class Tokenizer
    def self.tokenize(string)
        return string.split("" "")
    end
end
</code></pre>

<p>If i try to run main.rb I get the following error:</p>

<pre><code>C:\Documents and Settings\my\src\folder&gt;ruby main.rb

C:/Ruby193/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require': cannot load such file -- tokenizer.rb (LoadError)
        from C:/Ruby193/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require '
        from main.rb:1:in `&lt;main&gt;'
</code></pre>

<p>I just noticed that if I use <code>load</code> instead of <code>require</code> everything works fine. What may the problem be here?</p>
","2988","","<p><code>require</code> loads a file from the <code>$LOAD_PATH</code>. If you want to require a file relative to the currently executing file instead of from the <code>$LOAD_PATH</code>, use <code>require_relative</code>.</p>
"
"<p>I have to run my Ruby script from path that is higher than a script. My Ruby file is in folder <em>lib</em>. I start it in console:</p>

<pre><code>jruby --1.9 -Clib main.rb
</code></pre>

<p>but it doesn't work correctly. It changes Dir.pwd, but require doesn't see it and another library DataMapper doesn't see it too.
I know I can add path to be seen by require by -Ilib, but it doesn't fix DataMapper issue and it is ugly I think.</p>
","2988","","<p><code>require</code> loads a file from the <code>$LOAD_PATH</code>. If the directory the file you want to load is in is not on the <code>$LOAD_PATH</code>, then <code>require</code> won't find it. If you want to load a file not from the <code>$LOAD_PATH</code> but relative to the position of the currently executing file, you need to use <code>require_relative</code>.</p>
"
"<p>In Ruby I think you can call a method that hasn't been defined and yet capture the name of the method called and do processing of this method at runtime.</p>

<p>Can Javascript do the same kind of thing ?</p>
","2988","","<p>Not at the moment, no. There is <a href=""http://Wiki.ECMAScript.Org/doku.php?id=harmony%3adirect_proxies"" rel=""nofollow"">a proposal for ECMAScript Harmony, called <em>proxies</em></a>, which implements a similar (actually, much more powerful) feature, but ECMAScript Harmony isn't out yet and probably won't be for a couple of years.</p>
"
"<p>I want to build rpm with my Ruby app and its gems. As far as some gems depends on binaries I want to find out them automatically. For example <code>nokogiri</code> gem depends on <code>libxml</code>. Can I fetch all this dependencies for all gems in Gemfile automatically to pack them into rpm?</p>

<p>Now I do it mannualy and this is boring!</p>
","2988","","<p>No, unfortunately, this is not possible. RubyGems only records Gem dependencies. It obviously cannot record any dependencies it doesn't know about, how would that even work?</p>

<p>There is a <a href=""http://Docs.RubyGems.Org/read/chapter/20/#requirements"" rel=""nofollow""><code>requirements</code> attribute in the gemspec</a>, but that is only intended to be human-readable, not machine-readable.</p>
"
"<p>I'd like to add some rake tasks to a couple leves of namespace, but I don't want to have to indent my entire file to do that</p>

<pre><code>namespace :one_descriptive_name do
  namespace :sub_name do
    # many tasks which all have to be 4 chars deep
  end

  namespace :another_sub_name do
    # many more tasks. oh, my poor eyes
    # and limited screen-width, woe is me!!
  end
end
</code></pre>

<p>Are there any other ways to put a tasks into a namespace?</p>
","2988","","<p>Easy:</p>

<pre><code>namespace :one_descriptive_name do
namespace :sub_name do
# many tasks none of which have to be 4 chars deep
end

namespace :another_sub_name do
# many more tasks.
end
end
</code></pre>
"
"<p>I like method parameters enclosed in parenthesis, this is some Pascal nostalgia. When cleaning up code, if I find a method parameters without it I enclose them immediately.
Today it caused my working code throwing errors although my syntax looks okay according to the documentation.</p>

<p>Kernel.raise's documentation has this format:</p>

<pre><code>(Object) raise(exception[, string [, array]])
</code></pre>

<p>These are all working:</p>

<pre><code>&gt; raise TypeError
TypeError: TypeError

&gt; raise (TypeError)
TypeError: TypeError

&gt; raise ""Error message""
RuntimeError: Error message

&gt; raise (""Error message"")
RuntimeError: Error message
</code></pre>

<p>But the enclosed version of the next throws syntax error:</p>

<pre><code>&gt; raise TypeError, ""Error message""
TypeError: Error message

&gt; raise (TypeError, ""Error message"")
SyntaxError: unexpected ')', expecting $end
</code></pre>

<p>I can live without it, I just want to know why this ends with an error.</p>
","2988","","<p>Parentheses are used for expression grouping and precedence override in Ruby. So, when you say</p>

<pre><code>foo (bar, baz)
</code></pre>

<p>You are sending the message <code>:foo</code> with a single argument which is the result of evaluating the expression <code>bar, baz</code>. And <code>bar, baz</code> is not a valid expression, therefore you get a <code>SyntaxError</code>.</p>

<pre><code>foo (bar)
</code></pre>

<p>works, because <code>bar</code> is a valid expression.</p>

<pre><code>foo (if bar then baz else quux end)
</code></pre>

<p>would work, too.</p>

<p>If you want Ruby to interpret parentheses not for expression grouping but for passing multiple arguments along with a message send, the opening parenthesis needs to directly follow the message selector:</p>

<pre><code>foo(bar, baz)
</code></pre>

<p>This has nothing to do with <code>Kernel#raise</code>, BTW. You cannot change the syntax for message sends in Ruby (in fact, you cannot change <em>any</em> syntax in Ruby), therefore whatever is true for <code>Kernel#raise</code> must also be true for every other method.</p>
"
"<p>I understand the functional difference between single and double quotes in Ruby, but I'm wondering what concrete reasons people have for varying between the two. In my mind it seems like you should just always use a double quote, and not think about it.</p>

<p>A couple rationales that I've read in researching the topic...</p>

<ol>
<li><p>Use a single quote unless a double quote is required.</p></li>
<li><p>There's a very, very minor performance advantage to a single quotes.</p></li>
</ol>

<p>Any other interesting thoughts out there? (Or maybe this is a case of the freedom or Ruby leaving the door open for no One Right Way to do something...)</p>
","2988","","<p>I usually follow the following rule:</p>

<blockquote>
  <p><em>never</em> use double quotes (or <code>%Q</code> or <code>%W</code>) if you don't interpolate</p>
</blockquote>

<p>The reason for this is that if you're trying to track down an error or a security bug, you immediately know when looking at the beginning of the string that there cannot possibly any code inside it, therefore the bug cannot be in there.</p>

<p>However, I also follow the following exception to the rule:</p>

<blockquote>
  <p>use double quotes if they make the code more readable</p>
</blockquote>

<p>I.e. I prefer</p>

<pre><code>""It's time""
</code></pre>

<p>over </p>

<pre><code>'It\'s time'
%q{It's time}
</code></pre>

<p>It is technically true that single quoted strings are infinitesimally faster to parse than double quoted strings, but that's irrelevant because</p>

<ul>
<li>the program only gets parsed once, during startup, there is no difference in <em>runtime</em> performance</li>
<li>the performance difference really is extremely small</li>
<li>the time taken to parse strings is irrelevant compared to the time taken to parse some of Ruby's crazier syntax</li>
</ul>

<p>So, the answer to your question is: Yes, there is an advantage, namely that you can spot right away whether or not a string may contain code.</p>
"
"<p>Let's say I have a method that references an instance variable directly:</p>

<pre><code>class MyClass
  def method1
    puts @instance_var
  end
end
</code></pre>

<p>How can I stub out the value of <code>@instance_var</code> using <code>mocha</code> in a <code>Test::Unit</code> test?</p>
","2988","","<p>You can't. That's one of the many reasons why you should never access ivars directly.</p>
"
"<p>I am going through <a href=""http://www.ruby-doc.org/docs/ProgrammingRuby/"">Programming Ruby - a pragmatic programmers guide</a> and have stumbled on this piece of code:</p>

<pre><code>class SongList
  def [](key)
    if key.kind_of?(Integer)
      return @songs[key]
    else
      for i in 0...@songs.length
        return @songs[i] if key == @songs[i].name
      end
    end
    return nil
  end
end
</code></pre>

<p>I do not understand how defining [ ] method works? </p>

<p>Why is the key outside the [ ], but when the method is called, it is inside [ ]? </p>

<p>Can key be without parenthesis? </p>

<p>I realize there are far better ways to write this, and know how to write my own method that works, but this [ ] method just baffles me... Any help is greatly appreciated, thanks</p>
","2988","","<p>It's just syntactic sugar. There are certain syntax patterns that get translated into message sends. In particular</p>

<pre><code>a + b
</code></pre>

<p>is the same as</p>

<pre><code>a.+(b)
</code></pre>

<p>and the same applies to <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>&lt;=&gt;</code>, <code>===</code>, <code>&amp;</code>, <code>|</code>, <code>*</code>, <code>/</code>, <code>-</code>, <code>%</code>, <code>**</code>, <code>&gt;&gt;</code>, <code>&lt;&lt;</code>, <code>!==</code>, <code>=~</code> and <code>!~</code> as well.</p>

<p>Also, </p>

<pre><code>!a
</code></pre>

<p>is the same as </p>

<pre><code>a.!
</code></pre>

<p>and the same applies to <code>~</code>.</p>

<p>Then, </p>

<pre><code>+a
</code></pre>

<p>is the same as </p>

<pre><code>a.+@
</code></pre>

<p>and the same applies to <code>-</code>.</p>

<p>Plus, </p>

<pre><code>a.(b)
</code></pre>

<p>is the same as </p>

<pre><code>a.call(b)
</code></pre>

<p>There is also special syntax for setters:</p>

<pre><code>a.foo = b
</code></pre>

<p>is the same as </p>

<pre><code>a.foo=(b)
</code></pre>

<p>And last but not least, there is special syntax for indexing:</p>

<pre><code>a[b]
</code></pre>

<p>is the same as </p>

<pre><code>a.[](b)
</code></pre>

<p>and </p>

<pre><code>a[b] = c
</code></pre>

<p>is the same as </p>

<pre><code>a.[]=(b, c)
</code></pre>
"
"<p>I'm upgrading a rails 2 application to rails 3.2 and have come across what is described as an idiom.</p>

<p><code>person.tap |p| do</code></p>

<p>When I Googled for this and <a href=""http://apidock.com/rails/Object/tap"" rel=""nofollow"">it appears to have been deprecated or moved</a>. Is my understanding correct?</p>

<p>I ask because I can find a few examples of it on SO.</p>
","2988","","<p>The <code>Object#tap</code> monkey patch from <code>ActiveSupport</code> is deprecated because it has been part of Ruby since 1.9.0 and 1.8.7.</p>
"
"<p>I want to use overloading feature in Ruby like many other languages, but Ruby itself does not support this feature.</p>

<p>Do I have to implement it using the way that define a method with <code>*args</code> argument and determine the number and types of the arguments inside the method? Some like:</p>

<pre><code>class A
    def foo(*args)
        case (args.length)
        when 1
            do something
        when 2
            do something-else
        ....
        end
    end
end
</code></pre>

<p>You can see, it is really ugly than directly overloading.</p>

<p>I want to know whether there is any keywords or some other manners (like a meta-programming module) that could allow me to define an overloading method in a more elegant way.</p>
","2988","","<p>The defining characteristic of overloading is that dispatch happens statically. In Ruby, dispatch <em>always</em> happens dynamically, there is no other way. Therefore, overloading is not possible in Ruby.</p>
"
"<p>Using the ruby_parser and Ruby2Ruby gems, I'm writing code that keeps track of what conditions have been evaluated and what their results and parameters were. In order to keep this as simple as possible, I sometimes rewrite the AST a bit. Of course, I can only do that if I'm sure the result functions exactly the same as the original.</p>

<p>Am I correct in asserting that the following three Ruby snippets are equivalent in function, assuming the triple dots are replaced by a valid Ruby expression? Am I overlooking any edge cases?</p>

<pre><code>case var
  when foo 
    something
  when ... 
    another_thing
  else 
    something_else
end

if foo === var 
  something
elsif ... === var
  another_thing
else  
  something_else
end

case
  when foo === var 
    something
  when ... === var 
    another_thing
  else 
    something_else
end
</code></pre>
","2988","","<p>Those three snippets are equivalent iff <code>var</code> is idempotent, i.e. evaluating <code>var</code> multiple times has the same side-effects as evaluating it once.</p>

<p>So, if <code>var</code> really is a variable, you are safe, but remember that it can be an arbitrary expression, including a message send to a side-effecting method (like <code>puts</code>).</p>

<p>E.g.</p>

<pre><code>case puts('Hello')
when 1
when 2
</code></pre>

<p>is <em>not</em> the same as</p>

<pre><code>if 1 === puts('Hello')
elsif 2 === puts('Hello')
</code></pre>

<p>because in the latter case, ""Hello"" will be printed <em>twice</em>.</p>

<p>A better translation might be:</p>

<pre><code>__randomly_generated_guaranteed_unique_local_variable_jhggfq45g345 = var

if foo === __randomly_generated_guaranteed_unique_local_variable_jhggfq45g345 
  something
elsif ... === __randomly_generated_guaranteed_unique_local_variable_jhggfq45g345
  another_thing
else  
  something_else
end

case
  when foo === __randomly_generated_guaranteed_unique_local_variable_jhggfq45g345
    something
  when ... === __randomly_generated_guaranteed_unique_local_variable_jhggfq45g345
    another_thing
  else 
    something_else
end
</code></pre>
"
"<p>I was reading an <a href=""http://smyck.net/2012/04/22/why-erlang/"">interesting blog post</a> about erlang and the actor model. I also hear that scala supports the actor model. From the little I gathered so far, the actor model breaks down processing into components that communicate with each other by passing messages. Typically, those processes are immutable.</p>

<p>Are those features language-specific though or more at the architecture level? more specifically, can't you just implement the same actor model in almost any language, and just use some form of message-queue to pass messages between worker processes? (for example, use something like <a href=""http://celeryproject.org/"">celery</a>). Or is it that those languages like erlang and scala simply do this transparently and <a href=""http://stackoverflow.com/q/3358044/305019"">much faster</a>?</p>
","2988","","<p>No, there is nothing language-specific about the Actor Model. In fact, you already mention Scala in your question, where actors are not part of the language but are instead implemented as a library. (Three competing libraries, actually.)</p>

<p>However, just like Functional Programming or Object-Oriented Programming, having direct support for Actor Programming, or at least support for some abstractions that make it easier to implement, in the language will lead to a very different programming experience. Anyone who has ever done Functional Programming or Object-Oriented Programming in C will probably understand this.</p>
"
"<pre><code>class A
    def p
        puts ""1""
    end
end

a = A.new
a.p   #=&gt; ""1""

class A
    def p
        puts ""2""
    end
end

a.p   #=&gt;""2""
</code></pre>

<p>Is this ruby property called ""Open Class""?Is there any other language have this property?</p>
","2988","","<p>Yes, this is called <em>open class</em> in Ruby. Off the top of my head, other languages which have this property include Python and Smalltalk. Also, even though they don't have classes, mutating a prototype object in ECMAScript, Self, Io and Ioke will have a similar effect.</p>
"
"<p>What I want is:</p>

<pre><code>obj = Foo.new(0)  # =&gt; nil or false
</code></pre>

<p>This doesn't work:</p>

<pre><code>class Foo
  def initialize(val)
    return nil if val == 0
  end
end
</code></pre>

<p>I know in C/C++/Java/C#, we cant return a value in a constructor.</p>

<p>But I'm wondering whether it is possible in Ruby.</p>
","2988","","<blockquote>
  <p>In Ruby, what's the relationship between '<code>new</code>' and '<code>initialize</code>'?</p>
</blockquote>

<p><code>new</code> typically calls <code>initialize</code>. The default implementation of <code>new</code> is something like:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate

    obj.initialize(*args, &amp;block)
    # actually, this is obj.send(:initialize, …) because initialize is private

    obj
  end
end
</code></pre>

<p>But you can, of course, override it to do anything you want.</p>

<blockquote>
  <p>How to return nil while initializing?</p>
  
  <p>What I want is:</p>

<pre><code>obj = Foo.new(0)  # =&gt; nil or false
</code></pre>
  
  <p>This doesn't work:</p>

<pre><code>class Foo
  def initialize(val)
    return nil if val == 0
  end
end
</code></pre>
  
  <p>I know in C/C++/Java/C#, we cant return a value in a constructor.</p>
  
  <p>But I'm wondering whether it is possible in Ruby.</p>
</blockquote>

<p>There is no such thing as a <em>constructor</em> in Ruby. Constructors are unnecessary in a well-designed language. In Ruby, there are only methods and <em>of course</em> methods can return values.</p>

<p>The problem you are seeing is simply that you want to change the return value of one method but you are overriding a different method. <em>Of course</em> that doesn't work. If you want to change the return value of method <code>bar</code>, you should override <code>bar</code>, not some other method.</p>

<p>If you want to change the behavior of <code>Foo::new</code>, then you should change <code>Foo::new</code>:</p>

<pre><code>class Foo
  def self.new(val)
    return nil if val.zero?
    super
  end
end
</code></pre>

<p>Note, however, that this is a <em>really bad idea</em>, since it violates the contract of <code>new</code>, which is to return a fully initialized, fully functioning instance of the class.</p>
"
"<p>I want to implement a (class) method <code>attr_accessor_with_client_reset</code>, which does the same thing as <code>attr_accessor</code>, but on every writer it additionally executes</p>

<pre><code>@client = nil
</code></pre>

<p>So, for example,</p>

<pre><code>attr_accessor_with_client_reset :foo
</code></pre>

<p>should produce the same result as</p>

<pre><code>attr_reader :foo

def foo=(value)
  @foo = value
  @client = nil
end
</code></pre>

<p>How do I achieve this?</p>
","2988","","<p>Sergio's solution is good, but needlessly complex: there's no need to duplicate the behavior of <code>attr_reader</code>, you can just delegate to it. And there's no need for all this double module include hook hackery. Plus, <code>attr_accessor</code> takes multiple names, so <code>attr_accessor_with_client_reset</code> should, too.</p>

<pre><code>module AttrAccessorWithClientReset
  def attr_accessor_with_client_reset(*names)
    attr_reader *names

    names.each do |name|
      define_method :""#{name}="" do |v|
        instance_variable_set(:""@#{name}"", v)
        @client = nil
      end
    end
  end
end

class Foo
  extend AttrAccessorWithClientReset

  attr_reader :client
  def initialize
    @foo = 0
    @client = 'client'
  end

  attr_accessor_with_client_reset :foo
end

f = Foo.new
f.foo    # =&gt; 0
f.client # =&gt; ""client""
f.foo = 1
f.foo    # =&gt; 1
f.client # =&gt; nil
</code></pre>
"
"<p>So I'm both new to Prolog and Ruby. Learning Prolog at university and Ruby at my own. And I was thinking if there is a ""don't care"" or ""trow away"" variable in Ruby as there is in Prolog.</p>

<p>I just opened irb and just did this (supposing underscore was the ""don't care"" sign)</p>

<pre><code>1.9.2-p290 :003 &gt; _, b, c = [1,2,3]
 =&gt; [1, 2, 3] 
1.9.2-p290 :004 &gt; b
 =&gt; 2 
1.9.2-p290 :005 &gt; c
 =&gt; 3 
</code></pre>

<p>The results are actually what I expected. But then I was curious about what where the value of underscore and what class it was</p>

<pre><code>1.9.2-p290 :006 &gt; _
 =&gt; 3 
1.9.2-p290 :008 &gt; _.class
 =&gt; Fixnum 
</code></pre>

<p>Well, that's odd. Shouldn't it trow the value away? Why other value being stored?</p>

<p>Then doing more tests with underscore I saw what actually it was happening, it has the last evaluated value. </p>

<pre><code>1.9.2-p290 :017 &gt; 1
 =&gt; 1 
1.9.2-p290 :018 &gt; _
 =&gt; 1 
1.9.2-p290 :019 &gt; ""string""
 =&gt; ""string"" 
1.9.2-p290 :020 &gt; _
 =&gt; ""string"" 
1.9.2-p290 :021 &gt; Hash
 =&gt; Hash 
1.9.2-p290 :022 &gt; _
 =&gt; Hash 
</code></pre>

<p>So my question is: What's actually underscore for? Is it really a don't care variable or something else? What's the real name for it? (because I don't find many thing with ""don't care ruby variable"" with google) </p>
","2988","","<ol>
<li>In the Ruby <em>community</em>, <code>_</code> means ""don't care"".</li>
<li>In the Ruby <em>language</em>, <code>_</code> doesn't mean anything, it's an identifier like any other.</li>
<li>In the YARV Ruby <em>interpreter</em>, the ""unused local variable"" warning is suppressed for <code>_</code>, thus encoding the convention in #1.</li>
<li>In <em>IRb</em>, <code>_</code> is bound to the value of the last expression.</li>
</ol>
"
"<p>How come in Ruby it's possible to directly have an if statement directly in the class declaration? AKA:</p>

<pre><code>class ApplicationController &lt; ActionController::Base
  if foo
    bar = ""x""
  end
end
</code></pre>

<p>I know there is some class instance variables, since the Class inherits from Object, is it the same thing?</p>

<p>I just need some clarification about this whole thing :)</p>

<p>Thanks!</p>
","2988","","<blockquote>
  <p>How come in Ruby it's possible to directly have an if statement directly in the class declaration</p>
</blockquote>

<p>Because it's <em>not</em> a class ""declaration"", it's a class <em>body</em>, i.e. it's executable code just like a method body, a block body, a loop body or a script body.</p>
"
"<p>I understand that all classes in ruby are instances of metaclass Class. And that ""regular"" objects are instances of these classes (the instances of metaclass Class).</p>

<p>But I keep wondering, I mean classes are root of objects, classes are themselves instances of Class (called metaclass because its instances are classes). I saw in some blogs some overriding of method <code>new</code>, of class Class.</p>

<p>So Class behaves as a class, but its instances are classes. So it seems we have a circle, it looks likes class Class is an instance of itself.</p>

<p>I'm clearly missing a point here. What is the origin of class Class?</p>

<p>Here's an example that's confusing me:</p>

<pre><code>class Class
  def new
    #something
  end
end
</code></pre>

<p>But keyword <code>class</code> implies an instance of class Class. So how do this work?</p>
","2988","","<blockquote>
  <p>how do this work</p>
</blockquote>

<p>Easy: it doesn't. Not in Ruby, anyway.</p>

<p>Just like in most other languages, there are some core entities that are simply assumed to exist. They fall from the sky, materialize out of thin air, magically appear.</p>

<p>In Ruby, some of those magic things are:</p>

<ul>
<li><code>Object</code> doesn't have a superclass, but you cannot define a class with no superclass, the implicit direct superclass is always <code>Object</code>. [Note: there may be implementation-defined superclasses of <code>Object</code>, but eventually, there will be one which doesn't have a superclass.]</li>
<li><code>Object</code> is an instance of <code>Class</code>, which is a subclass of <code>Object</code> (which means that indirectly <code>Object</code> is an instance of <code>Object</code> itself)</li>
<li><code>Class</code> is a subclass of <code>Module</code>, which is an instance of <code>Class</code></li>
<li><code>Class</code> is an instance of <code>Class</code></li>
</ul>

<p>None of these things can be explained in Ruby.</p>

<p><code>BasicObject</code>, <code>Object</code>, <code>Module</code> and <code>Class</code> all need to spring into existence at the same time because they have circular dependencies.</p>

<p>Once they <em>do</em> exist, however, it is perfectly possible to implement most of their behavior in plain Ruby. You only need very barebones versions of those classes, thanks to Ruby's open classes, you can add any missing functionality at a later time.</p>

<p>In your example, the <code>class Class</code> is not creating a new class named <code>Class</code>, it is reopening the <em>existing</em> class <code>Class</code>, which was given to us by the runtime environment.</p>

<p>So, it is perfectly possible to explain the default behavior of <code>Class#new</code> in plain Ruby:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate # another magic thing that cannot be explained in Ruby
    obj.initialize(*args, &amp;block)
    return obj
  end
end
</code></pre>

<p>[Note: actually, <code>initialize</code> is private, so you need to use <code>obj.send(:initialize, *args, &amp;block)</code> to circumvent the access restriction.]</p>

<p>BTW: <code>Class#allocate</code> is another one of those magic things. It allocates a new empty object in Ruby's object space, which is something that cannot be done in Ruby. So, <code>Class#allocate</code> is something that has to be provided by the runtime system as well.</p>
"
"<p>my gem version is 1.3.5 and I can't install certain gems because of that.I tried to update the gem on my computer by</p>

<pre><code>sudo update --system
</code></pre>

<p>and it gives me an error</p>

<pre><code>ERROR:  While executing gem ... (RuntimeError)
gem update --system is disabled on Debian. 
RubyGems can be updated using the official     
Debian repositories by aptitude or apt-get.
</code></pre>

<p>so according to some people, the source need to be downloads and it needs to executed by ruby. i downloaded the file, did</p>

<pre><code>sudo ruby setup.rb
</code></pre>

<p>and it gave me </p>

<p>RubyGems 1.8.24 installed</p>

<p>== 1.8.24 / 2012-04-27</p>

<ul>
<li><p>1 bug fix:</p>

<ul>
<li>Install the .pem files properly. Fixes #320</li>
<li>Remove OpenSSL dependency from the http code path</li>
</ul></li>
</ul>

<hr>

<p>RubyGems installed the following executables:
    /usr/bin/gem1.8</p>

<p>but when I hit ruby gem -v it still gives me 1.3.5 rather than the one I installed which is 1.8. </p>

<p>Do I need to uninstall the older version manually? or some other thing I need to do first?</p>
","2988","","<blockquote>
  <p>RubyGems installed the following executables: <code>/usr/bin/gem1.8</code></p>
</blockquote>

<p>As the line says, the name of the program is <code>gem1.8</code>, not <code>gem</code>. Ergo, you need to call</p>

<pre><code>gem1.8 -v
</code></pre>

<p>not</p>

<pre><code>gem -v
</code></pre>
"
"<p>A while back I bought a 1TB USB external drive. I formatted it ext4 in Ubuntu and copied a bunch of files / folders to it from several machines, all to /home/machinename/whatever, respectively.</p>

<p>At some point I ran a chmod -R shell command on it to change the permissions. That was months ago and I don't remember what I typed but it made the drive so I could only access its /home folder as root. This wasn't a problem because I could still access everything, but today I decided to try to fix it.</p>

<p>I went to my shell as root, went to that drive and typed:</p>

<pre><code>chown -R rick:rick ./
chmod -R 666 ./
</code></pre>

<p>It seemed to work.  That home directory and everything else in it now shows up as rw for each:</p>

<pre><code>rick@rick64:/media/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee$ ls -l
drw-rw-rw- 7 rick rick 4096 2012-03-04 13:08 home
</code></pre>

<p>So, if I try to access that directory with the shell, I get:</p>

<pre><code>rick@rick64:/media/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee$ ls -l
drw-rw-rw- 7 rick rick 4096 2012-03-04 13:08 home
rick@rick64:/media/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee$ cd home
bash: cd: home: Permission denied
rick@rick64:/media/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee$ _
</code></pre>

<p>When I access it with nautilus I can see the multiple machine names within the /home/ folder, but they all appear with a file icon.  I can right-click on them and choose ""Properties"" but it won't let me see the permissions.</p>

<p>Am baffled.  Why can't I access that folder?  I'm the owner?  I'm even the group.  I have r/w privileges.  What am I doing wrong?</p>

<p>Thanks!</p>
","2988","","<p>You're neither trying to read (list) nor write (create a new entry) the directory. You want to enter it, therefore you need (slightly misnamed in the case of directories) e<code>x</code>exute permissions.</p>
"
"<p>Some programming languages have the feature of adding ""Categories"" to classes (for example Objective-C), this means, adding new functionality to a class without subclassing.</p>

<p>I really find it useful, but I can't imagine a way of simulating this feature in Java. </p>

<p>So the question is:</p>

<p>How would look an elegant pattern to simulate class categories in Java? What I'm really looking for is achieving the same effect rather of making it the same way.</p>
","2988","","<p>In Java 8, you'll probably be able to do this via a combination of Interface Injection (adding new <code>interface</code>s to existing classes) and Default Methods (providing default implementations for <code>interface</code> methods).</p>
"
"<pre>
a = [[1, 'a'],[2, 'b'],[3, 'c'], [4, 'd']]
a.inject({}) {|r, val| r[val[0]] = val[1]}
</pre>

<p>When I run this, I get an index error</p>

<p>When I change the block to</p>

<pre>
a.inject({}) {|r, val| r[val[0]] = val[1]; r}
</pre>

<p>It then works.</p>

<p>How is ruby handling the first inject attempt that isn't getting what I want?<br>
Is there a better way to do this?</p>
","2988","","<p>Just because Ruby is dynamically and implicitly typed doesn't mean that you don't have to think about types.</p>

<p>The type of <code>Enumerable#inject</code> without an explicit accumulator (this is usually called <code>reduce</code>) is something like</p>

<pre><code>reduce :: [a] → (a → a → a) → a
</code></pre>

<p>or in a more Rubyish notation I just made up</p>

<pre><code>Enumerable[A]#inject {|A, A| A } → A
</code></pre>

<p>You will notice that all the types are the same. The element type of the <code>Enumerable</code>, the two argument types of the block, the return type of the block and the return type of the overall method.</p>

<p>The type of <code>Enumerable#inject</code> <em>with</em> an explicit accumulator (this is usually called <code>fold</code>) is something like</p>

<pre><code>fold :: [b] → a → (a → b → a) → a
</code></pre>

<p>or</p>

<pre><code>Enumerable[B]#inject(A) {|A, B| A } → A
</code></pre>

<p>Here you see that the accumulator can have a <em>different</em> type than the element type of the collection.</p>

<p>These two rules generally get you through all <code>Enumerable#inject</code>-related type problems:</p>

<ol>
<li>the type of the accumulator and the return type of the block must be the same</li>
<li>when not passing an explicit accumulator, the type of the accumulator is the same as the element type</li>
</ol>

<p>In this case, it is Rule #1 that bites you. When you do something like</p>

<pre><code>acc[key] = value
</code></pre>

<p>in your block, assignments evaluate to the assigned value, not the receiver of the assignment. You'll have to replace this with</p>

<pre><code>acc.tap { acc[key] = value }
</code></pre>

<p>See also <a href=""http://StackOverflow.Com/a/4314292/2988/"">Why Ruby inject method cannot sum up string lengths without initial value?</a></p>

<hr>

<p>BTW: you can use destructuring bind to make your code much more readable:</p>

<pre><code>a.inject({}) {|r, (key, value)| r[key] = value; r }
</code></pre>
"
"<p>Here is, for example, a standard <code>if</code> semantic:</p>

<pre><code>if (condition)
     do stuff
end
</code></pre>

<p>What I want to be able to do is to re-write <code>if</code> in such a way that, if an exception is thrown, I can do some error handling.</p>

<p>Does ruby have a way to re-define pre-existing syntax? If so, how?</p>

<p>EDIT:
Lets say in an if condition, a method is called on nil in the condition <code>if(my_object.my_method)</code>.  If <code>my_object</code> isn't defined, ruby would throw an error.  I'd like to be able to change the way if behaves such that it can catch errors. (In my specific situation, it would email me the stack trace... but emailing is the easy part).</p>
","2988","","<p>No, you cannot change the syntax or semantics of Ruby in a Ruby program. You may want to use Perl6 or a Lisp instead.</p>
"
"<p>The short code in title is in Haskell, it does things like</p>

<pre><code>list.map {|x| x + 1}
</code></pre>

<p>in ruby.</p>

<p>While I know that manner, but what I want to know is, is there any more elegant manners to implement same thing in ruby like in Haskell.</p>

<p>I really love the <code>to_proc</code> shortcut in ruby, like this form:</p>

<pre><code>[1,2,3,4].map(&amp;:to_s)
[1,2,3,4].inject(&amp;:+)
</code></pre>

<p>But this only accept exactly matching argument number between the Proc's and method.</p>

<p>I'm trying to seek a way that allow passing one or more arguments extra into the Proc, and without using an useless temporary block/variable like what the first demonstration does.</p>

<p>I want to do like this:</p>

<pre><code>[1,2,3,4].map(&amp;:+(1))
</code></pre>

<p>Does ruby have similar manners to do this?</p>
","2988","","<p>In <em>this particular</em> case, you can use the following:</p>

<pre><code>[1, 2, 3, 4].map(&amp;1.method(:+))
</code></pre>

<p>However, this only works because <code>+</code> is not associative. It wouldn't work for <code>-</code>, for example.</p>
"
"<p>I have a Ruby file named test.rb</p>

<pre><code>ff=""ff""
def test
  puts ff
end
</code></pre>

<p>I execute it, got error:</p>

<p><code>test.rb:3:in `test': undefined local variable or method `ff' for main:Object (NameError)</code></p>

<p>What's the reason for this? Is there any documentation to explain it?</p>
","2988","","<blockquote>
  <p>Why can't I access a local variable inside a method in Ruby?</p>
</blockquote>

<p>Because it's a <em>local variable</em>. Local variables are local to the scope they are defined in. That's why they are called ""local variables"", after all.</p>

<p>In this case, you have defined a local variable in the script scope, and thus it is visible in the script scope, and <em>nowhere else</em>.</p>
"
"<pre><code>1.9.3-p194 :012 &gt; b=[1,2,3];b.instance_variable_set :@internal, ""rrr"";
b.define_singleton_method :xx do; @internal; end
 =&gt; #&lt;Proc:0x000000020f3d20@(irb):12 (lambda)&gt; 
1.9.3-p194 :013 &gt; b
 =&gt; [1, 2, 3] 
1.9.3-p194 :014 &gt; b.xx
 =&gt; ""rrr""
1.9.3-p194 :015 &gt; b.define_singleton_method :""xx=(val)"" do; @internal=val; end
 =&gt; #&lt;Proc:0x0000000254aec8@(irb):15 (lambda)&gt; 
1.9.3-p194 :017 &gt; b.xx=""yy""
NoMethodError: undefined method `xx=' for [1, 2, 3]:Array
    from (irb):17
    from /home/sir/.rvm/rubies/ruby-1.9.3-p194/bin/irb:16:in `&lt;main&gt;'
</code></pre>

<p>I want to have writer for instance variable, but it doesn't work. What am I doing wrong?</p>
","2988","","<p>You defined a method named <code>xx=(val)</code>, but you are calling a method named <code>xx=</code>. You need to change either the definition or the call site so that the two match up.</p>
"
"<p>Ruby as an Object Oriented Language. What that means is whatever message I send, I strictly send it on some object/instance of class.</p>

<p>Example:</p>

<pre><code> class Test
   def test1
    puts ""I am in test1. A public method""
    self.test2
   end

   def test2
    puts ""I am in test2. A public Method""
   end
 end
</code></pre>

<p>makes sense I call method <code>test2</code> on <code>self</code> object</p>

<p>But I cannot do this</p>

<pre><code>  class Test
   def test1
    puts ""I am in test1. A public method""
    self.test2 # Don't work
    test2 # works. (where is the object that I am calling this method on?)
   end

   private
   def test2
    puts ""I am in test2. A private Method""
   end
 end
</code></pre>

<p>When <code>test2</code> is <code>public method</code> I can call it on <code>self</code> (fair enough, a method sent to self object). But when <code>test2</code> is <code>private method</code> I cannot call it on self. So where is the object that I am sending method on?</p>
","2988","","<blockquote>
  <p>where is the object that I am sending method on</p>
</blockquote>

<p>It's <code>self</code>. Whenenver you don't specify a receiver, the receiver is <code>self</code>.</p>

<p>The definition of <code>private</code> in Ruby is that private methods can only be called without a receiver, i.e. with an implicit receiver of <code>self</code>. Interestingly, it didn't bother you at all with the <code>puts</code> method which is also a private instance method ;-)</p>

<p>Note: there's an exception to this rule. Private setters <em>can</em> be called with an explicit receiver, as long as the receiver is <code>self</code>. In fact, they <em>must</em> be called with an explicit receiver, because otherwise there would be an ambiguity with local variable assignments:</p>

<pre><code>foo = :fortytwo      # local variable
self.foo = :fortytwo # setter
</code></pre>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/201323/how-to-use-a-regular-expression-to-validate-an-email-addresses"">How to use a regular expression to validate an email addresses?</a>  </p>
</blockquote>



<p><code>\A[\w.-]+\w@[a-z\d\-.]+\.[a-z]+\z</code></p>

<p>What do you think of the above expression for email validation. Any errors, any loopholes? Thank in advance for the support.</p>
","2988","","<blockquote>
  <p>What do you think of the above expression for email validation.</p>
</blockquote>

<p>For one, it doesn't accept my address. So, there's obviously a bug in there somewhere. I suggest you read RfC5322 carefully, it describes the valid syntax for addresses quite clearly, although unfortunately it hasn't yet been updated for IDN.</p>
"
"<p>I'm doing some web scraping, this is the format for the data</p>

<pre><code>Sr.No.  Course_Code Course_Name Credit  Grade   Attendance_Grade
</code></pre>

<p>The actual string that i receive is of the following form</p>

<pre><code>1 CA727 PRINCIPLES OF COMPILER DESIGN 3 A M
</code></pre>

<p>The things that I am interested in are the Course_Code, Course_Name and the Grade, in this example the values would be</p>

<pre><code>Course_Code : CA727
Course_Name : PRINCIPLES OF COMPILER DESIGN
Grade : A
</code></pre>

<p>Is there some way for me to use a regular expression or some other technique to easily extract this information instead of manually parsing through the string.
I'm using jruby in 1.9 mode.</p>
","2988","","<p>Do I see that correctly that the delimiter is always 3 spaces? Then just:</p>

<pre><code>serial_number, course_code, course_name, credit, grade, attendance_grade = 
  the_string.split('   ')
</code></pre>
"
"<p>I need to write code to ping a sequence of 20 IP addresses if given a starting IP address (e.g 192.168.0.1). Each successive IP address should be one digit larger than the previous.</p>
","2988","","<p>That's what <a href=""http://RubyDoc.Info/stdlib/ipaddr/IPAddr%3asucc"" rel=""nofollow""><code>IPAddr#succ</code></a> is for:</p>

<pre><code>require 'ipaddr'

ipaddr = IPAddr.new('192.168.0.1')

20.times do
  ping ipaddr
  ipaddr = ipaddr.succ
end
</code></pre>
"
"<p>I have learnt java. I can write in C/C++. Recently i have been developing web applications in java. I was planning to learn <code>ruby</code>. Are there any prerequisites for ruby that i don't have. </p>
","2988","","<p>Unfortunately, you already missed the most important prerequisite to learn Ruby: not having learned Java ;-)</p>

<p>This may seem a bit inflammatory, but at least in my experience with learning Ruby myself as well as what I have observed from friends, it seems <em>indeed</em> to be harder to learn Ruby if you have learned Java beforehand than if you haven't learned to program <em>at all</em>. In my personal quest to learn Ruby, the hardest thing was unlearning everything I learned from Java.</p>

<p>Smalltalk (or even better Self and Newspeak) are much better languages to learn before learning Ruby, as are Scheme and Haskell.</p>
"
"<p>I am making a program where one of the problems is that I need to do some analysis of the bit pattern in some integers.</p>

<p>Because of this I would like to be able to do something like this:</p>

<pre><code>#Does **NOT** work:
num.each_bit do |i|
   #do something with i
end
</code></pre>

<p>I was able to make something that works, by doing:</p>

<pre><code>num.to_s(2).each_char do |c|
   #do something with c as a char
end
</code></pre>

<p>This however does not have the <strong>performance</strong> I would like.</p>

<p>I have found that you can do this:</p>

<pre><code>0.upto(num/2) do |i|
   #do something with n[i]
end
</code></pre>

<p>This have even worse performance than the <code>each_char</code> method</p>

<p>This loop is going to be executed millions of times, or more, so I would like it to be as fast as possible.</p>

<p>For reference, here is the entirety of the function</p>

<pre><code>@@aHashMap = Hash.new(-1)

#The method finds the length of the longes continuous chain of ones, minus one 
#(101110 = 2, 11 = 1, 101010101 = 0, 10111110 = 4)

def afunc(n) 
if @@aHashMap[n] != -1
    return @@aHashMap[n]
end

num = 0
tempnum = 0
prev = false

(n.to_s(2)).each_char do |i|
    if i
        if prev
            tempnum += 1
            if tempnum &gt; num
                num = tempnum
            end
        else
            prev = true
        end
    else
        prev = false
        tempnum = 0
    end
end

@@aHashMap[n] = num
return num
end
</code></pre>
","2988","","<p>In Ruby, <code>Integer</code>s (i.e. both <code>Bignum</code>s and <code>Fixnum</code>s) can already be indexed as if they were bit arrays. They are, however, not <code>Enumerable</code>.</p>

<p>But you can fix that, of course:</p>

<pre><code>class Integer
  include Enumerable

  def each
    return to_enum unless block_given?      
    (size*8).times {|i| yield self[i] }
  end
end
</code></pre>

<p>A slightly less intrusive way might be to represent the <code>Integer</code> as an array:</p>

<pre><code>class Integer
  def to_a
    Array.new(size*8, &amp;method(:[]))
  end
end
</code></pre>

<p>Then you can use Ruby's nifty <code>Enumerable</code> methods:</p>

<pre><code>0b10111110.chunk {|b| true if b == 1 }.map(&amp;:last).max_by(&amp;:size).size - 1
</code></pre>

<p>(Or <code>0b10111110.to_a.chunk …</code> if you prefer the less intrusive method.)</p>

<p>If you are worried about performance, the execution engine you choose makes a big difference. Rubinius's or JRuby's optimizing compiler may be able to inline and optimize away many method calls that YARV's rather simple compiler can't, for example. YARV's special treatment of <code>Fixnum</code> may give it an advantage over MRI.</p>

<p>As you can see from the examples, I am a big fan of point-free style and functional programming. If you can prove via profiling that you have a bottleneck at a specific point in the code, you may need to replace it with a slightly less elegant or impure version, or you may want to hand-fuse the <code>map</code> and <code>max_by</code>.</p>

<pre><code>class Integer
  def to_a
    Array.new(size*8) {|i| self[i] }
  end
end

0b10111110.chunk {|b| true if 1 == b }.map {|key, chunk| chunk.size }.max - 1
</code></pre>

<p>or</p>

<pre><code>0b10111110.chunk {|b| true if 1 == b }.max_by {|key, chunk| chunk.size }.last.size - 1
</code></pre>
"
"<p>I'm a big fan of <a href=""http://rack.github.com/"" rel=""nofollow"">Rack</a>, and I've used it to build several lightweight web apps over the past few years.  I've been curious for a while if something similar exists for C++.  I've spent quite a bit of time searching Google and come up empty-handed.  It doesn't help that I find Rack hard to describe.  Its tagline is ""A Ruby Webserver Interface"".  Searching for {c++ ""webserver interface""}, I've found things that do much more than I want, like <a href=""http://www.webtoolkit.eu/wt"" rel=""nofollow"">wt</a>, and I've found suggestions to use FastCGI directly.  I feel like Rack fits squarely between these two options.</p>

<p>I'm not sure if I'm having trouble finding a C++ analogue to Rack because no such thing exists or because I'm just using poor search terms.</p>

<p>Is there a close C++ analogue to Rack?  If not, is there a library or small set of libraries that can do most of the lower-level, error-prone stuff for me, but still leave me with the level of control that Rack does?</p>
","2988","","<p>There is a direct port of Rack, called (obviously ;-) ) Crack. I can't find it at the moment, though, and searching for <code>c++ crack</code> is pretty much useless.</p>
"
"<p>I have written a ruby script that then calls another ruby script. The callee script is very long and has a lot of ""gets"" for input. </p>

<p>So what I do is open my unix terminal, call the caller script, which then does this simple line: </p>

<pre><code>load ""calleeScript.rb""
</code></pre>

<p>The calleeScript.rb has been simplified to just do this: </p>

<pre><code>input = gets.chomp

print input
</code></pre>

<p>But it just gives me an error, like it can't handle gets. The error says: </p>

<blockquote>
  <p>./getsTest.rb:3:in `gets': No such file or directory - 5 (Errno::ENOENT)
      from ./getsTest.rb:3</p>
</blockquote>

<p>Even if I take out that gets it won't print/puts to the terminal. So any idea how I call one script that then calls another script (either relinquishing total control or forking), do some inputs/outputs, and still return to the previous script?</p>
","2988","","<p><a href=""http://RubyDoc.Info/stdlib/core/Kernel%3agets"" rel=""nofollow""><code>Kernel#gets</code></a> is a convenience method that allows you to handle input both via standard input and via files.</p>

<p>If you call your script without any arguments, i.e. like this:</p>

<pre><code>getsTest.rb
</code></pre>

<p>Then <code>Kernel#gets</code> reads its input from standard input. If, however, you call your script like this:</p>

<pre><code>getsTest.rb foo.txt
</code></pre>

<p>Then <code>Kernel#gets</code> reads its input from a file named <code>foo.txt</code>.</p>

<p>In your case, <code>Kernel#gets</code> is complaining that it can't find a file named <code>5</code>, so presumably you called your script something like this:</p>

<pre><code>getsTest.rb 5
</code></pre>

<p>If you want to read from some specific source, you should call <a href=""http://RubyDoc.Info/stdlib/core/IO%3agets"" rel=""nofollow""><code>IO#gets</code></a> on that specific source. I suggest calling </p>

<pre><code>$stdin.gets
</code></pre>

<p>Note: technically speaking, this is not a feature of <code>Kernel#gets</code> but rather of the <code>ARGF</code> magic constant. Basically, <code>Kernel#gets</code> just calls <code>ARGF.gets</code>.</p>
"
"<p>Or rather, why isn't <code>(==)</code> usable on every data type? Why do we have to derive <code>Eq</code> ourseleves? In other languages, such as Python, C++, and surely others, it has a default implementation for everything!
I can't think of types that can't be compared.</p>
","2988","","<blockquote>
  <p>I can't think of types that can't be compared.</p>
</blockquote>

<pre><code>let infiniteLoop = infiniteLoop

let iSolvedTheHaltingProblem f = f == infiniteLoop
-- Oops!
</code></pre>
"
"<p>I'm creating a gem that adds a new method to the <code>String</code> class. For instance if I were creating a method that added the <code>to_foobar</code> on <code>String</code> I know that I can simply do:</p>

<pre><code>class String
  def to_foobar
    # ...
  end
end
</code></pre>

<p>But is this the right way to do this or is there a better way?</p>
","2988","","<p>I would prefer</p>

<pre><code># my_gem/lib/my_gem/core_extensions/string.rb

module MyGem::CoreExtensions::String
  def to_foobar
    # ...
  end
end

class String
  include MyGem::CoreExtensions::String
end
</code></pre>

<p>That way, if I get for example an error message mentioning <code>String#to_foobar</code>, I don't have to wonder ""Wait, <code>String</code> doesn't have a <code>to_foobar</code> method, where is that coming from?"" I can just say</p>

<pre><code>String.ancestors
# =&gt; [String, MyGem::CoreExtensions::String, Comparable, Object, Kernel]
</code></pre>

<p>Et voilà, there's this suspicious looking module in the ancestry chain, which, following standard Ruby naming conventions, probably lives in <code>my_gem/lib/my_gem/core_extensions/string.rb</code>.</p>

<p>Or, I can say</p>

<pre><code>''.method(:to_foobar).owner
# =&gt; MyGem::CoreExtensions::String
</code></pre>

<p>And actually get a meaningful answer.</p>

<p>Of course, </p>

<pre><code>''.method(:to_foobar).source_location
# =&gt; ['my_gem-0.0.1/lib/my_gem/core_extensions/string.rb"", 4]
</code></pre>

<p>always works.</p>
"
"<p>Is there a one-line method of writing this each block in Ruby?</p>

<pre><code>cats.each do |cat|
   cat.name
end
</code></pre>

<p>I'm trying to shorten the amount of code in my project.  I'm using Ruby 1.9.2.</p>

<p>Thanks!</p>
","2988","","<p>Just remove the line breaks:</p>

<pre><code>cats.each do |cat| cat.name end
</code></pre>

<p>Note, there are two different coding styles when it comes to blocks. One coding style says to <em>always</em> use <code>do</code>/<code>end</code> for blocks which span multiple lines and <em>always</em> use <code>{</code>/<code>}</code> for single-line blocks. If you follow that school, you should write </p>

<pre><code>cats.each {|cat| cat.name }
</code></pre>

<p>The other style is to <em>always</em> use <code>do</code>/<code>end</code> for blocks which are primarily executed for their side-effects and <code>{</code>/<code>}</code> for blocks which are primarily executed for their return value. Since <code>each</code> throws away the return value of the block, it only makes sense to pass a block for its side-effects, so, if you follow that school, you should write it with <code>do</code>/<code>end</code>.</p>

<p>But as @tokland mentions, the more idiomatic way would be to write</p>

<pre><code>cats.each(&amp;:name)
</code></pre>
"
"<p>What is a good way of writing something like this in one line. The goal is to log the message at info level if the value is nil else in debug mode, along with proper message like the one shown. Seems simple, but writing 5 lines of code for something small like this keeps bothering me. I can wrap this in method, but would like to avoid if I can.  Thanks.</p>

<pre><code>if value.nil?
  Rails.logger.info ""value: nil""
else
  Rails.logger.debug ""value: #{value.inspect}""
end
</code></pre>
","2988","","<p>If you want it in one line, just remove the line breaks:</p>

<pre><code>if value.nil? then Rails.logger.info ""value: nil"" else Rails.logger.debug ""value: #{value.inspect}"" end
</code></pre>

<p>But why, oh why, would anyone want to do this?</p>
"
"<p>I am new to Scala, and have seen many ways to define a function but could not find a clear explanation on the differences, and when to use which form.</p>

<p>What are the main differences between the following function definitions?</p>

<ol>
<li><p>With '='</p>

<pre><code>def func1(node: scala.xml.Node) = {
    print(node.label + "" = "" + node.text + "","")
}
</code></pre></li>
<li><p>Without '='</p>

<pre><code>def func2 (node: scala.xml.Node) {
    print(node.label + "" = "" + node.text + "","")
}
</code></pre></li>
<li><p>With '=>'</p>

<pre><code>def func3 = (node: scala.xml.Node) =&gt; {
    print(node.label + "" = "" + node.text + "","")
}
</code></pre></li>
<li><p>As a var</p>

<pre><code>var func4 = (node: scala.xml.Node) =&gt; {
    print(node.label + "" = "" + node.text + "","")
}
</code></pre></li>
<li><p>Without a block </p>

<pre><code>def func5 (node: scala.xml.Node) = print(node.label + "" = "" + node.text + "","")  
</code></pre></li>
</ol>

<p>They all seem to compile and render the same result when used as a callback for</p>

<pre><code>    xmlNodes.iterator.foreach(...)
</code></pre>

<ul>
<li>Is there any difference in the bytecode each generate? </li>
<li>Are there any guidlines when to use which form?</li>
</ul>
","2988","","<p>Well, 1, 2, and 5 aren't functions <em>at all</em>, they are <em>methods</em>, which are fundamentally different from functions: methods <em>belong to</em> objects and are not themselves objects, whereas functions <em>are</em> objects.</p>

<p>1, 2, and 5 are also exactly the same: if you have only one statement, then you don't need curly braces to group several statements, ergo 5 is the same as 1. Leaving off the <code>=</code> sign is syntactic sugar for declaring a return type of <code>Unit</code>, but <code>Unit</code> is also the inferred return type for 1 and 5, so 2 is the same as 1 and 5.</p>

<p>3 is a method which, when called, returns a function. 4 is a variable which points to a function.</p>
"
"<p>Can anybody put lime light on what possible problems might emerge if an application created instruments class files before loading them using custom loader. I have created a java application that does the same thing.</p>

<p>I read class files in the form of byte arrays
Then I instrument using asm library and then
Load them through  custom class loader.</p>

<p>Is this procedure prone to failure if yes why??</p>
","2988","","<p>The main problem with this is that it ties your application to the JVM. The Java community works very hard on keeping the JLS and the JVMS separate, so that Java <em>could theoretically</em> be used without the JVM, and there are two fairly widespread platforms where Java <em>is actually</em> used without the JVM: Android and GWT. If you don't expect to ever need to run on a platform that doesn't understand Java byte code, then you are fine.</p>

<p>Note that <em>static</em> byte code manipulation stuff is perfectly okay. You can cross compile JVM byte code to Dalvik byte code <em>after</em> manipulating it. But if you wanted to do that at runtime, you would have to include the JVM-to-Dalvik cross compiler in your application … and it <em>still</em> wouldn't work because the Dalvik VM simply doesn't support dynamic byte code loading the same way the JVM does.</p>
"
"<p>I am testing a piece of Rails code that reads:</p>

<pre><code>sleep(10.0)
</code></pre>

<p>In my RSpec tests, calling:</p>

<pre><code>Kernel.should_receive(:sleep).exactly(1).time
</code></pre>

<p>failed and the test slept for ten seconds.  This led me to conclude that <code>sleep()</code> in a Rails program isn't calling <code>Kernel.sleep()</code>.  I verified this by changing my Rails code to:</p>

<pre><code>Kernel.sleep(10.0)
</code></pre>

<p>... after which my RSpec tests passed (and the test didn't sleep).</p>

<p>This leads to a specific and a general question:</p>

<ul>
<li>What implementation of sleep() does Rails use (I'm running Ruby 1.9.3 / Rails 3.2.1)?</li>
<li>From the interpreter, what's the easiest way to find the source code for any function?</li>
</ul>
","2988","","<p>The implicit receiver, when you don't specify an explicit one, is <code>self</code>, not <code>Kernel</code>. (Why would you think that?)</p>

<p>So, </p>

<pre><code>sleep(10.0)
</code></pre>

<p>is roughly the same as </p>

<pre><code>self.sleep(10.0)
</code></pre>

<p>and <em>not</em> at all the same as </p>

<pre><code>Kernel.sleep(10.0)
</code></pre>

<p>So, it is calling <a href=""http://RubyDoc.Info/stdlib/core/Kernel%3asleep/"" rel=""nofollow""><code>Kernel#sleep</code></a> on <code>self</code> and not on <code>Kernel</code>. Which means you need to set an expectation on whatever object <code>self</code> is in that particular method.</p>
"
"<p>My project depends on <a href=""http://rubygems.org/gems/sunspot"" rel=""nofollow"">Sunspot</a>, which in turn depends on <a href=""http://rubygems.org/gems/progress_bar"" rel=""nofollow"">progress_bar</a>. progress_bar defines a class (outside of any module/namespace) called <code>ProgressBar</code>. </p>

<p>My test code depends on <a href=""http://rubygems.org/gems/minitest-reporters"" rel=""nofollow"">minitest-reporters</a>, which in turn depends on <a href=""http://rubygems.org/gems/ruby-progressbar"" rel=""nofollow"">ruby-progressbar</a>. ruby-progressbar defines a class (also outside of any module/namespace) called <code>ProgressBar</code>. </p>

<p>Being new to Ruby, it took me an embarassing amount of time to track down the fact that the two <code>ProgressBar</code> classes were conflicting. I know how to namespace my own code to prevent such problems, but is there any way to resolve such a collision in 3rd party code? </p>

<p><strong>Update</strong>: </p>

<p>The owner of minitest-reporters very kindly replaced his usage of the (apparently abandoned) ProgressBar with yet another progress library, <a href=""http://rubygems.org/gems/powerbar"" rel=""nofollow"">PowerBar</a>. So this addressed my problem. But guess what- PowerBar also pollutes the global namespace! This just seems pathological in Ruby...</p>
","2988","","<ul>
<li>If it's in your own code (not applicable in this particular case): <strong>namespace your friggin constants!</strong></li>
<li>If it's in someone else's code: file a bug telling them to <strong>namespace their friggin constants!</strong> … and wait for them to release a new version …</li>
</ul>

<p>There's really not more you can do.</p>
"
"<pre><code>class Item

    def name=(name_value)   
        @name = name_value
    end

    def name
        @name
    end

end
</code></pre>

<p>In the first case:</p>

<pre><code>item = Item.new
item.name=(""value"")
puts item.class
</code></pre>

<p>I keep getting.</p>

<pre><code>Item
</code></pre>

<p>In the second case:</p>

<pre><code>item = Item.new.name=(""value"")
puts item.class
</code></pre>

<p>I have</p>

<pre><code>String
</code></pre>

<p>Why? I do not understand the difference.</p>
","2988","","<p>In Ruby, assignment expressions evaluate to the value that is being assigned.</p>

<p>I.e.:</p>

<pre><code>foo = 'bar'
</code></pre>

<p>evaluates to <code>'bar'</code></p>

<p>So, in your case </p>

<pre><code>Item.new.name=(""value"")
</code></pre>

<p>which would more idiomatically be written like this:</p>

<pre><code>Item.new.name = 'value'
</code></pre>

<p>the value being assigned is the string <code>'value'</code>.</p>

<p>So, <code>Item.new.name = 'value'</code> evaluates to <code>'value'</code> (with the side-effect of calling the <code>name=</code> method, of course), which means that </p>

<pre><code>item = Item.new.name = 'value'
</code></pre>

<p>evaluates to </p>

<pre><code>item = 'value'
</code></pre>

<p>And in the end, <code>item</code> has the value <code>'value'</code>, which is a <code>String</code>.</p>
"
"<p>Where can I find methods of <code>Range</code> class in Ruby's source code. I am particularly looking for <code>Range#last</code> method. Ruby -v MRI 1.9.2</p>
","2988","","<p>Personally, I very much prefer looking at <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a>'s <a href=""https://GitHub.Com/Rubinius/Rubinius/"" rel=""nofollow"">source code</a>, because I find it <em>much more</em> readable than YARV's. The method you are looking for is in <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/b9247312c0f92e1e881c30a8f6a2e826c7a8101d/kernel/common/range.rb#L126-127"" rel=""nofollow"">kernel/common/range.rb</a>, and it is simply a getter for the <code>@end</code> instance variable:</p>

<pre><code>attr_reader :end
alias_method :last, :end
</code></pre>

<p>The <code>@end</code> instance variable is set in the <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/b9247312c0f92e1e881c30a8f6a2e826c7a8101d/kernel/common/range.rb#L6-20"" rel=""nofollow""><code>initialize</code> method</a>. In other words: the <code>last</code> method simply always returns the value that you passed to <code>Range.new</code>.</p>

<p>Note that, in this case, Rubinius's implementation conforms to the Ruby 1.8 language specification and hasn't been updated to the Ruby 1.9 specification yet, which has an optional <code>count</code> parameter.</p>
"
"<p>I am beginner of Ruby programming. My program is count number of even length of words in a given string. But it's shows the following Error</p>

<p><strong>Undefined method '&lt;' for [0, 0] :Array </strong></p>

<p>Here is My code</p>

<pre><code>def even(words, n)
   i = 0, m = 0
   while i &lt; n do
       count = count + words[i].length
       if count%2 == 0 then
          m = m + 1
       end
       i = i + 1
  end
  return m
end
prinnt ""Enter The String:""
s = gets.chomp
words = s.split()
n = words.length
x = even(words, n)
puts x
</code></pre>
","2988","","<p>The others have already explained to you what the <em>immediate</em> error is in your code. However, the bigger problem is that your code is just not idiomatic Ruby code.</p>

<p>Idiomatic code would look something like this:</p>

<pre><code>puts gets.split.map(&amp;:length).count(&amp;:even?)
</code></pre>

<p>And, as you can see, there is simply no way that you <em>could</em> even make a mistake such as the one you made.</p>
"
"<pre><code>module A; def a; end; end
module B; def b; end; end

class C; include A; end

module A; include B; end
class D; include A; end

C.new.b # undefined method error
D.new.b # nil

C.ancestors # [C, A, Object...]
D.ancestors # [D, A, B, Object...]
</code></pre>

<p>How to include module B inside of A, so that classes that already include module A will also get methods from module B?</p>
","2988","","<p>You can't.</p>

<p>When you <code>include</code> a mixin <code>M</code> into a class <code>C</code>, Ruby creates a new class <code>⟦M′⟧</code> whose method table points to the method table of the mixin <code>M</code> and whose superclass is the superclass of <code>C</code>, then makes this class the new superclass of <code>C</code>. This is repeated for every mixin that was mixed into <code>M</code>.</p>

<p>Note that this algorithm is run only once, when you mix <code>M</code> into <code>C</code>. Modules that get <code>include</code>d later, will not get considered.</p>
"
"<p>For a university I was advised to learn Ruby before starting. I have a strong .NET background (with C#) and would like to find an IDE for Ruby. I'm currently very familiar with/used to VS2010 and VS2012.</p>

<ul>
<li>Which IDE has the most similarities with Visual Studio?</li>
<li>Is there a certain prominent IDE that is far better than it's competitors?</li>
</ul>
","2988","","<blockquote>
  <p>Which IDE has the most similarities with Visual Studio?</p>
</blockquote>

<p><a href=""http://SapphireSteel.Com/Products/Ruby-In-Steel/"" rel=""nofollow"">Visual Studio</a>, of course!</p>

<blockquote>
  <p>Is there a certain prominent IDE that is far better than it's competitors?</p>
</blockquote>

<p><a href=""http://JetBrains.Com/ruby/"" rel=""nofollow"">RubyMine</a> is sometimes cited as the best one. Personally, I haven't used it, so I can't comment on it. RubyMine is basically a lean (i.e. without the Java support) version of IntelliJ IDEA with the IDEA Ruby Plugin pre-installed.</p>

<p>I have always used the NetBeans Ruby Plugin and have been somewhat satisfied with it.</p>

<p>Now, if you have experience with IDEs for other dynamic languages such as Lisp or Smalltalk, then all of the Ruby IDEs, whether that be RubyMine, Eclipse RDT, Eclipse DLTK/Ruby, Ruby in Steel, RadRails or 3rd Rail, or ""IDEs"" such as Vim, Emacs, TextMate, Sublime, etc. will feel like primitive stone age tools in comparison.</p>
"
"<p>I have in some file contains this json part (from FACEBOOK API):</p>

<pre><code>--- !seq:Koala::Facebook::API::GraphCollection - name: pop ool id: ""1032225"" - name: Rose kak id: ""2312010""
</code></pre>

<p>and in ruby I try to do:</p>

<pre><code>jsonFriends = File.open(""friends.json"" ,""r"")

puts JSON.parse(jsonFriends.readline)
</code></pre>

<p>but I get this error:</p>

<pre><code>from /usr/local/Cellar/ruby/1.9.3-p194/lib/ruby/1.9.1/json/common.rb:148:in `parse' from try.rb:22:in `&lt;main&gt;'
</code></pre>
","2988","","<p>That's <a href=""http://YAML.Org/"" rel=""nofollow"">YAML</a>, not <a href=""http://JSON.Org/"" rel=""nofollow"">JSON</a>.</p>

<pre><code>require 'yaml'

friends = YAML.load(File.read('friends.json'))
</code></pre>
"
"<p>My IronRuby install of the rspec gem seems to be lacking the automated be_* method helpers. For instance, the following code generates an undefined method error:</p>

<pre><code>require 'rubygems'
require 'rspec'

x = 7
x.should == 7 # works
x.nonzero?.should == 7 #works
x.should be_nonzero # undefined method `be_nonzero' for main:Object
</code></pre>

<p>I used igem to install the rspec gem. Here is the list of my installed gems:</p>

<pre><code>bewildr (0.1.14)
builder (3.0.0)
cucumber (0.6.3)
diff-lcs (1.1.3)
iron-term-ansicolor (0.0.3)
json_pure (1.7.3)
polyglot (0.3.3)
rspec (2.11.0)
rspec-core (2.11.1)
rspec-expectations (2.11.1)
rspec-mocks (2.11.1)
term-ansicolor (1.0.7)
treetop (1.4.10)
</code></pre>

<p>Any idea what I am missing here?</p>
","2988","","<p>RSpec matchers are generally only available in an <code>it</code> block, in order to avoid polluting the global namespace. Have you tried running your code on a different Ruby implementation? You'll get the same error.</p>
"
"<p>I'm using Ruiby 1.9.2-p180. The following piece of code throws the error:</p>

<p>""test.rb:20:in <code>&lt;main&gt;': undefined local variable or method</code>val' for main:Object (NameError)""</p>

<p>Is there a way that I could make the monkeypatching work to return <code>val</code>?</p>

<pre><code>class Test
  def m
    ""m""
  end
end

def inject(testObj, val)
  def testObj.m
    val
  end

  testObj
end


t = Test.new
puts t.m
puts inject(t, val).m
</code></pre>
","2988","","<p>The immediate problem is that in line 20 you are calling</p>

<pre><code>puts inject(t, val).m
</code></pre>

<p>I.e. you are passing <code>val</code> as an argument to <code>inject</code>, but you never actually defined <code>val</code>. You need to pass an actual value, for example:</p>

<pre><code>puts inject(t, 'Hello, World!').m
</code></pre>

<p>Or define <code>val</code> first:</p>

<pre><code>val = 42
puts inject(t, val).m
</code></pre>

<p>However, if you do this, you will get a new error:</p>

<pre><code>NameError: undefined local variable or method `val' for #&lt;Test:0x007fa1228439b8&gt;
</code></pre>

<p>The reason for this is that in Ruby, only blocks can be closures. Methods do not close over their surrounding lexical environment.</p>

<p>Which means that here:</p>

<pre><code>def inject(testObj, val)
  def testObj.m
    val
  end

  testObj
end
</code></pre>

<p>you have</p>

<ul>
<li>an unused method argument <code>val</code> in <code>inject</code></li>
<li>a completely unrelated method call to a method named <code>val</code> in <code>testObj.m</code></li>
</ul>

<p>If you want to have access to the surrounding scope, you need to use a block. Thankfully, there is a (family of) methods that take blocks and define methods:</p>

<pre><code>def inject(testObj, val)
  testObj.define_singleton_method(:m) do
    val
  end

  testObj
end
</code></pre>

<p>Now, everything works as expected:</p>

<pre><code>puts inject(t, 'Hello, World!').m
# Hello, World!
</code></pre>
"
"<p>Is there a gem that allows us to write Ruby code in Rails with indentation the way Haml and CoffeeScript do for html and javascript respectively?</p>

<p>Google always ends up with Lazibi but that project has been dead for 5 years.</p>
","2988","","<p>The problem with adopting a Python-style syntax for Ruby is that Python's syntax crucially depends on the distinction between statements and expressions. For example, a lambda can only contain expressions not statements (or to put it another way: a lambda's body must consist of a single statement). Ruby, however, doesn't have statements, it only has expressions.</p>

<p>This means that adopting a Python-style syntax for Ruby (or any other Ruby-like language) is impossible. Tony Arcieri tried it with Reia, for example, but he had to revert his decision, precisely because of the fact that Reia, like Ruby, doesn't have statements.</p>

<p>A Haskell-like or F#-like syntax would probably work much better, but nobody has implemented it yet.</p>
"
"<p>As we know that we can define a repeated-parameter (varargs) function in scala, like this: </p>

<pre><code>def func(s: String*) = println(s)
</code></pre>

<p>My question is how to rewrite the above in <strong>function literal</strong> style. Or is it impossible to do that? </p>

<p><strong>Note</strong>: <code>(s: String) =&gt; println(s)</code> is not correct . </p>
","2988","","<blockquote>
  <p>As we know that we can define a multi-parameter function in scala, like this:</p>

<pre><code>def func(s: String*) = println(s)
</code></pre>
</blockquote>

<p>Actually, that's not a function, that's a method. The two are fundamentally different in Scala.</p>

<blockquote>
  <p>My question is how to rewrite the above in <strong>function literal</strong> style. Or is it impossible to do that ?</p>
  
  <p><strong>Note</strong>: <code>(s: String*) =&gt; println(s)</code> is not correct.</p>
</blockquote>

<p>You cannot define a varargs argument in a function literal. There's a bug report about this in the Scala bug tracker and a comment by Martin Odersky himself that basically says that this would be much too complicated.</p>

<p>There are several ways to cheat, however.</p>

<p>If you use type inference for the function arguments, i.e. if you use the function literal in a context where the argument is statically known to be a varargs argument, then everything works fine:</p>

<pre><code>val func: (String*) =&gt; Unit = s =&gt; println(s)
</code></pre>

<p>Alternatively, you can define a method and then convert it to a partially applied function via η-expansion:</p>

<pre><code>def meth(s: String*) = println(s)

val func = meth _
</code></pre>
"
"<p>In Ruby, my understanding is that <code>self</code> is the implied receiver for any bare method call. However:</p>

<pre><code>~: irb
&gt;&gt; puts ""foo""
foo
=&gt; nil
&gt;&gt; self.puts ""foo""
NoMethodError: private method `puts' called for main:Object
</code></pre>

<p>What explains this?</p>

<p>In case it's any help:</p>

<pre><code>&gt;&gt; method(:puts).owner
=&gt; Kernel
</code></pre>
","2988","","<p>Because that's the definition of privacy in Ruby: private methods can only be called with an implicit receiver.</p>

<p>Actually, there's an exception to this rule: because <code>foo = bar</code> <em>always</em> creates a local variable, you are allowed to call private setters like <code>self.foo = bar</code>, because otherwise you wouldn't be able to call them <em>at all</em> (without using reflection).</p>
"
"<p>I am learning Ruby and doing some math stuff.  One of the things I want to do is generate prime numbers.</p>

<p>I want to generate the first ten prime numbers and the first ten only.  I have no problem testing a number to see if it is a prime number or not, but was wondering what the best way is to do generate these numbers?</p>

<p>I am using the following method to determine if the number is prime:</p>

<pre><code>class Integer &lt; Numeric
  def is_prime?
    return false if self &lt;= 1
    2.upto(Math.sqrt(self).to_i) do |x|
      return false if self%x == 0
    end
    true
  end
end
</code></pre>
","2988","","<pre><code>require 'prime'

Prime.first(10) # =&gt; [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
</code></pre>
"
"<p>After watching <a href=""http://channel9.msdn.com/Events/Lang-NEXT/Lang-NEXT-2012/Reflection-and-Compilers"" rel=""nofollow"">Martin's keynote on Reflection and Compilers</a> I can't seem to get this crazy question out of my head. Martin talks among other things about the ""(Wedding) Cake Pattern"", where traits play the central part. I'm wondering, why in the world do we need packages when we already have traits? Is there anything a <code>package</code> can do, what a <code>trait</code> (at least theoretically) cannot?</p>

<p>I'm not talking about the current implementation, I'm just trying to imagine what programming would be like if we replace packages with traits. In my head it would be like this:</p>

<ul>
<li>one keyword less (<code>package</code> is unneeded)</li>
<li>no need for <code>package object</code>s</li>
</ul>

<p>To summarize all my questions:</p>

<ol>
<li>Is it theoretically possible to remove packages from the language and use traits instead.</li>
<li>What other benefits would we gain from this change? (I was thinking about first class packages and first class imports, but mixin composition is a compile time thing, although the super calls are dynamically bound)</li>
<li>Is Java/JVM compatibility the only thing, which would stand in the way?</li>
</ol>

<p><strong>Update</strong></p>

<p>Daniel Spiewak talks in <a href=""https://marakana.com/s/post/1399/cake_pattern_bakery_from_the_black_lagoon_daniel_spiewak_ne_scala_video"" rel=""nofollow"">this keynote</a> about the Dependency Injection being just the top of the iceberg of all the stuff you can do with the Cake Pattern.</p>
","2988","","<p>Martin Odersky has said that Scala could get by with just traits, objects, methods and paths (I hope I didn't forget something).</p>

<p>Both classes and packages are just there because Scala is intended to be a hosted language, i.e. a language which runs on (this is actually not the interesting bit) and <em>interoperates with</em> (this is the important point) a host platform. Some of the host platforms that Scala is intended to interoperate with are the Java platform and the CLI, both which have a concept of classes and packages (namespaces in the case of the CLI) that is significantly distinct enough that it cannot be easily expressed as traits or objects. This is unlike interfaces, which can be trivially mapped to and from purely abstract traits.</p>

<p>The above statement was made in a discussion about potentially removing generics from Scala, because everything generics can do can also be achieved by abstract types.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1223834/how-does-scalas-apply-method-magic-work"">How does Scala&#39;s apply() method magic work?</a>  </p>
</blockquote>



<p>I am an absolute beginner in Scala and after reading in one of the Scala books that apply function is like ""overloaded () operator"" I began to wonder how tha is defined. Namely an operator () would take the argument between the brackets themselves, rather than in the conventional infix a () b notation. Is definition of such operator possible in Scala and if so, what is the definition syntax? Thanks.</p>
","2988","","<p>As you already stated in your question, you simply define it by defining a method (<em>not</em> a function) called <code>apply</code>.</p>

<pre><code>foo(bar, baz)
</code></pre>

<p>gets translated to </p>

<pre><code>foo.apply(bar, baz)
</code></pre>

<p>So, as long as <code>foo</code> has an <code>apply</code> method of correct arity and type, this will work.</p>

<p>Some examples of implementations of the <code>apply</code> method are the <code>Array</code> companion object, which allows you to construct an array by calling <code>Array(1, 2, 3)</code> (which is actually just <code>Array.apply(1, 2, 3)</code>) and the <code>Array</code> class, which allows you to access an array element by calling <code>anArray(i)</code> (which is actually just <code>anArray.apply(i)</code>).</p>

<p>This is similar to e.g. Python, where function calls get translated into calls to the <code>__call__</code> operator or Ruby, where an expression of the form <code>foo.(bar, baz)</code> gets translated to <code>foo.call(bar, baz)</code>.</p>

<p>A similar method is <code>update</code>:</p>

<pre><code>foo(bar) = baz
</code></pre>

<p>gets translated to </p>

<pre><code>foo.update(bar, baz)
</code></pre>
"
"<p>It seems that the arguments are copied when using the splat operator to pass arguments to a block by reference.</p>

<p>I have this:</p>

<pre><code>def method
  a = [1,2,3]
  yield(*a)
  p a
end

method {|x,y,z| z = 0}
#=&gt; this puts and returns [1, 2, 3] (didn't modified the third argument)
</code></pre>

<p>How can I pass these arguments by reference? It seems to work if I pass the array directly, but the splat operator would be much more practical, intuitive and maintainable here.</p>
","2988","","<blockquote>
  <p>How can I pass these arguments by reference?</p>
</blockquote>

<p>You can't pass arguments by reference in Ruby. Ruby is pass-by-value. Always. No exceptions, no ifs, no buts.</p>

<blockquote>
  <p>It seems to work if I pass the array directly</p>
</blockquote>

<p>I highly doubt that. You simply cannot pass arguments by reference in Ruby. Period.</p>
"
"<p>How to require a chinese named ruby file, for example require '测试'！</p>
","2988","","<blockquote>
  <p>How to require a chinese named ruby file, for example <code>require '测试'</code>！</p>
</blockquote>

<p>Just</p>

<pre><code>require '测试'
</code></pre>

<p>Why would the language of the filename matter anyway?</p>
"
"<p>Why can't I call <a href=""http://www.ruby-doc.org/core-1.9.3/Enumerable.html#method-i-reduce"" rel=""nofollow""><code>Enumerable#reduce(sym)</code></a> without parentheses like the following?</p>

<pre><code>&gt;&gt; [1, 2, 3].reduce :+
?&gt;
</code></pre>

<p>While using parentheses results in this:</p>

<pre><code>&gt;&gt; [1, 2, 3].reduce(:+)
=&gt; 6
</code></pre>

<p>Am I accidentally calling <code>Enumerable#reduce {| memo, obj | block }</code> instead?</p>

<p>Furthermore, why does this happen?</p>

<pre><code>&gt;&gt; [1, 2, 3].reduce &amp;:+
?&gt; ^C
&gt;&gt; [1, 2, 3].reduce(&amp;:+)
=&gt; 6
</code></pre>

<p>Thanks a lot!</p>
","2988","","<p>That seems to be an error in IRb's parser. It works just fine if you try it in Pry, or on the commandline or in a file:</p>

<pre><code>ruby -e""res = [1, 2, 3].reduce :+
p res""
# 6
</code></pre>

<p>Basically, IRb gets confused, thinks the <code>+</code> is a binary operator and is waiting for the second operand.</p>
"
"<p>In Ruby I can nest modules/classes into other modules/classes. What I want is to add some declaration inside file or class to be able to refer nested classes by their short names, e.g. to use <code>Inner</code> to get <code>Outer::Inner</code>, like you would have in Java, C# etc. The syntax might be like this:</p>

<pre><code>module Outer
  class Inner; end
  class AnotherInner; end
end
class C
  import Outer: [:Inner, :AnotherInner]
  def f
    Inner
  end
end
</code></pre>

<p>The simplistic implementation could be like this:</p>

<pre><code>class Class
  def import(constants)
    @imported_constants = 
      (@imported_constants || {}).merge Hash[
        constants.flat_map { |namespace, names|
          [*names].map { |name| [name.to_sym, ""#{namespace}::#{name}""] }
        }]
  end

  def const_missing(name)
    const_set name, eval(@imported_constants[name] || raise)
  end
end
</code></pre>

<p>Is there solid implementation in Rails or some gem, that does similar importing while compatible with Rails' mechanism of auto-loading?</p>
","2988","","<pre><code>module Outer
  class Inner; end
  class AnotherInner; end
end

class C
  include Outer

  def f
    Inner
  end
end

C.new.f # =&gt; Outer::Inner
</code></pre>

<p>Remember: there is no such thing as a <em>nested class</em> in Ruby. A class is just an object like any other object, and it gets assigned to variables just like any other. In this particular case, the ""variable"" is a constant which is namespaced inside a module. And you add that constant to the namespace of another module (or class) the same way you would any other constant: by <code>include</code>ing the module.</p>
"
"<p>I have the following Ruby code:</p>

<pre><code>require 'rubygems'
require 'rest_client'

url = 'http://asdf.com'
response = RestClient.get(url)
b = response.body

result = b.match(/&lt;head&gt;(.*)&lt;\/head&gt;/)[1]
puts result
</code></pre>

<p>when I try to parse this page to get the header I get the following error:</p>

<pre><code>7:in `&lt;main&gt;': undefined method `[]' for nil:NilClass (NoMethodError)
</code></pre>

<p>What am I doing wrong?(apart from using regex to parse html. I'm just experimenting)</p>
","2988","","<blockquote>
  <p>What am I doing wrong?(apart from using regex to parse html. I'm just experimenting)</p>
</blockquote>

<p>You are using regex to parse HTML, that's what you are doing wrong. In this particular case, your regex doesn't match anything, therefore <code>Regexp#match</code> returns <code>nil</code> and you are trying to call <code>[]</code> on <code>nil</code>.</p>

<p>The document you are parsing looks like this:</p>

<pre><code>&lt;html&gt;
  &lt;head&gt;
    &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1""&gt;
    &lt;title&gt;asdf&lt;/title&gt;
  &lt;/head&gt;
…
</code></pre>

<p>I.e. there are line breaks in the document. An HTML parser ignores linebreaks, because it knows that they are insignificant in HTML, but your regex doesn't.</p>
"
"<p>For example, I often see this:</p>

<pre><code>Set&lt;Integer&gt; s = new TreeSet&lt;Integer&gt;();
Set&lt;Integer&gt; s = new HashSet&lt;Integer&gt;();
Map&lt;Integer, String&gt; m = new HashMap&lt;Integer, String&gt;();
</code></pre>

<p>over </p>

<pre><code>TreeSet&lt;Integer&gt; ts = new TreeSet&lt;Integer&gt;();
HashSet&lt;Integer&gt; hs = new HashSet&lt;Integer&gt;();
HashMap&lt;Integer, String&gt; hm = new HashMap&lt;Integer, String&gt;();
</code></pre>

<p>What are the advantages/disadvanges of the former vs the latter?</p>
","2988","","<p>You should read <a href=""http://CS.UTexas.Edu/~wcook/Drafts/2009/essay.pdf"" rel=""nofollow""><em>On Understanding Data Abstraction, Revisited</em></a> by <a href=""http://WCook.BlogSpot.Com/"" rel=""nofollow"">William R. Cook</a> and also his <a href=""http://WCook.BlogSpot.Com/2012/07/proposal-for-simplified-modern.html"" rel=""nofollow""><em>Proposal for Simplified, Modern Definitions of ""Object"" and ""Object Oriented""</em></a>.</p>

<p>Bascially: if you use Java classes as anything else than factories, i.e. if you have a classname anywhere expect after a <code>new</code> operator, then you are not doing object-oriented programming. Following this rule does not guarantee that you are doing OO, but violating this rule means that you aren't.</p>

<p>Note: there's nothing wrong with not doing OO.</p>
"
"<p>I'm trying to get a good Ruby coding style. To prevent accidently calling a local variable with the same name, I'm always using <code>self.</code> where appropriate. But now I stumbled over this:</p>

<pre><code>class MyClass &lt; ActiveRecord::Base
  before_validation :sanitize_user_data

  private

  def sanitize_user_data
    self.sanitize_name # with "".self"" it's a problem, without it's not!
  end

  def sanitize_name
    unless self.name.nil?
      self.name.gsub!(/\s+/, ' ')
      self.name.strip!
    end
  end
end
</code></pre>

<p>The above code results in an error</p>

<blockquote>
  <p>private method <code>sanitize_name</code> called</p>
</blockquote>

<p>but when removing <code>self.</code> and just using <code>sanitize_name</code>, it works. Why's that?</p>
","2988","","<blockquote>
  <p>Why's that?</p>
</blockquote>

<p>By definition. Private methods can only be invoked by a receiverless message send, that's the <em>definition</em> of what <code>private</code> means.</p>
"
"<p>I am using <code>class_eval</code> to define a bunch of repetitive methods more concisely, something like this:</p>

<pre><code>%w{greasy chunky bacon}.product(%w{flying sky poodle}).each do |a,b|
  class_eval ""def #{a}_#{b}; do_something; end""
end
</code></pre>

<p>I would like all the resulting methods to be included in the RDoc documentation. Is there an RDoc directive which ""manually"" adds a method to the list of methods for the class? I can't find one.</p>
","2988","","<p>See the sections on <em>Metaprogrammed Methods</em> and <em>Hidden methods and attributes</em> in the <a href=""http://Docs.SeattleRb.Org/rdoc/RDoc/Parser/Ruby.html"">RDoc documentation for <code>RDoc::Parser::Ruby</code></a>.</p>

<p>In your case, you would do something like:</p>

<pre><code>##
# :method: greasy_flying
# Makes grease fly.

##
# :method: chunky_poodle
# This is a really gruesome method. Ewww!
</code></pre>

<p>And so on.</p>
"
"<p>I'm trying to load a ruby on rails app called fatfreecrm (https://github.com/fatfreecrm/fat_free_crm).  </p>

<p>Cannot run off rails development server on my machine.  Code fails due to the following line: </p>

<pre><code>spec = Bundler.load_gemspec(Dir[""./{,*}.gemspec""].first)
</code></pre>

<p>(line 32 in project Gemfile: <a href=""https://github.com/fatfreecrm/fat_free_crm/blob/master/Gemfile"" rel=""nofollow"">https://github.com/fatfreecrm/fat_free_crm/blob/master/Gemfile</a>).  </p>

<p>Trying to diagnose the problem but having trouble understanding what this does.  In particular what directory does <code>[""./{, *}.gemspec""</code> refer to?  Dont understand the <code>{, *}</code> shorthand.  </p>

<p>Thanks <br>
Evan </p>
","2988","","<p>That's standard Unix shell glob syntax for a list of options that get expanded. I.e. in a Unix shell</p>

<pre><code>foo{a, b, c}bar
</code></pre>

<p>will get expanded to</p>

<pre><code>fooabar foobbar foocbar
</code></pre>

<p>So, </p>

<pre><code>./{, *}.gemspec
</code></pre>

<p>will get expanded to</p>

<pre><code>./.gemspec ./*.gemspec
</code></pre>

<p>In Ruby's <code>Dir::[]</code> those don't get expanded like in the shell, but they are treated as a pattern against which to match the filenames, similar to how a regex works.</p>

<p>See the documentation for <code>Dir::[]</code>, which refers to the documentation for <code>Dir::glob</code>, for details.</p>
"
"<p>The following command works in Ruby 1.9.3p194</p>

<pre><code>&gt; %w(a b c).grep(/a/) { |v| v.upcase }
 =&gt; [""A""] 
</code></pre>

<p>But if any element in the array has a slash in it, a SyntaxError is thrown:</p>

<pre><code>&gt; %w(a/ b c).grep(/a/) { |v| v.upcase }
SyntaxError: (irb):41: syntax error, unexpected tMATCH
%Q/a// =~ /a/
</code></pre>

<p>I'm assuming I'm using grep incorrectly but the error I'm getting is really confusing. Why does it throw this error, and what is the proper way to find an element in an array based on a regex?</p>

<p><strong>Update:</strong></p>

<p>Select gives me what I want, but I'm still curious what grep is for...</p>

<pre><code>&gt; %w(a/ b c).select {|v| v =~ /a/ }
=&gt; [""a/""]
</code></pre>
","2988","","<p>I cannot reproduce your error.</p>

<p>At first I thought it was a problem with IRb. It is well known that IRb's parser (which is basically a hodge-podge of unmaintainable <code>Regexp</code>s duct-taped together) parses some constructs incorrectly. Also, due to the way IRb works, there are semantic differences between Ruby and IRb, especially with local variables and global methods.</p>

<p>Which is why you should <em>always</em> reproduce your error in plain Ruby before posting it here. Or at least try it in Pry, which uses YARV's, Rubinius's or JRuby's parser instead of rolling its own.</p>

<p>But that's not the case here: your first code snippet works just fine, both in plain Ruby and in IRb.</p>

<p>Your <em>second</em> code snippet, however, <em>will</em> produce the error you encountered, <em>even</em> when run in plain Ruby:</p>

<pre><code>ruby -e '%Q/a// =~ /a/'
# -e:1: syntax error, unexpected tMATCH
# %Q/a// =~ /a/
#         ^
</code></pre>
"
"<p>I am trying to validate a variable contains a 9-digit number in Javascript.  This should be basic but for some reason this is failing:</p>

<pre><code>    var test = ""123123123"";
    var pattern = new RegExp(""/\d{9}/"");

    if(test.match(pattern))
    {
        //This code never executes
    }
    else
    {
        //This code is always executing
        alert('no match!'); 
    }
</code></pre>

<p>Can anyone see why I am not getting a match?  </p>

<p>I also tried type-casting test to an integer with:</p>

<pre><code>test = Number(test);
</code></pre>

<p>...but this doesn't work as it has to be a String to support the .match method.</p>
","2988","","<p>You aren't looking for 9 consecutive digits, you are looking for 9 consecutive digits <em>enclosed in slashes</em>.</p>
"
"<p>I have a show page for the periods controller. What I want to do is show all the registrations for that period.</p>

<p>In my period model I have: <code>has_many :registrations</code>, and in my registration model I have <code>belongs_to :period</code></p>

<p>What I want to do is something like this:</p>

<pre><code>  &lt;% registrations.@period.each do |registration| %&gt;

  &lt;% end %&gt;
</code></pre>

<p>That doesn't seem to work though. How can I make this work? and not get the error <code>syntax error, unexpected tIVAR
    registrations.@period.each do |registration|</code></p>
","2988","","<p>No, you can't do this. Instance variables are <em>always</em> private, you <em>cannot</em> access them from outside the instance. The <em>only way</em> to interact with an object is by sending it messages.</p>

<p>So, if you want to access an instance variable from the outside, you need to define a getter method for it.</p>

<p>Thankfully, <code>belongs_to :period</code> already defines a getter method called <code>period</code> for you, so you can use that.</p>
"
"<p>Why won't mapping change the array with this function:</p>

<pre><code>array[1..5].map! { |part| ""&lt;p&gt;#{part}&lt;/p&gt;"" }
</code></pre>

<p>I know that I could just assign array[1..5] to the result, but there's probably some better way to do it.</p>

<p>How should I do it?</p>
","2988","","<p>Well, it <em>does</em> change the array. You're just not seeing it, because you never assign the array to anything, so it will be immediately garbage collected again.</p>
"
"<p>Can someone please explain this to me?</p>

<pre><code>x = Rational(3/4) * 8
 =&gt; (0/1) # I Expected it to return 6
x.to_i
 =&gt; 0 
</code></pre>

<p>Thanks.</p>
","2988","","<p>You are creating a <code>Rational</code> number with <code>3/4</code> as the only argument. <code>3/4</code> is <code>0</code>, so, your code is equivalent to</p>

<pre><code>Rational(0) * 8
</code></pre>

<p>which obviously is <code>0</code>.</p>

<p>Compare this to </p>

<pre><code>Rational(3, 4) * 8
# =&gt; (6/1)
</code></pre>

<p>where you explicitly pass both the numerator and denominator.</p>
"
"<p>I understand that this question has been raised many times already. But I can't find the complete guide about all those kinds of variables. I've found a couple of articles that compare class variables vs class instance variables, but what about instance variables?<br /><br />
So, what is the difference between: <strong>instance variables</strong>, <strong>class variables</strong> and <strong>class instance variables</strong>? What kind of variables are inheritable and what are not?</p>
","2988","","<p>An <em>instance variable</em> is, well, a variable that belongs to <em>one</em> specific object (aka instance). Inheritance is irrelevant in this case, since objects can't inherit from anything, only classes can.</p>

<p><em>Class instance variables</em> don't exist. Classes are objects just like any other, so they can have instance variables just like any other object. When a class has an instance variable, this is sometimes called a class instance variable, but it's just an instance variable. So, again, it can't be inherited.</p>

<p><em>Class variables</em> are strange beasts. They are shared among </p>

<ul>
<li>the class itself</li>
<li>all instances of the class</li>
<li>all subclasses of the class</li>
<li>all instances of all subclasses of the class</li>
<li>all subclasses of all subclasses of the class</li>
<li>all instances of all subclasses of all subclasses of the class</li>
<li>… and so on …</li>
</ul>

<p>They are really more like global variables, considering how widely they are shared.</p>

<p>You can call this sharing <em>inheritance</em>, but I don't think that's a useful term. There is no polymorphic dispatch, no message sending, no overriding.</p>

<p>In Ruby, the term <em>inheritance</em> really only makes sense with <em>methods</em>, not with variables.</p>
"
"<p>I'm wondering what is the formal name of process of using multiple languages together.
Lets say I'm writing a program in C++ which calls Java functions (and uses Java libraries) and sometimes calls Python functions. Then it gathers the results from those calls and continues execution.</p>

<p>How would you name this process?</p>
","2988","","<p>Depending on how many different languages you use, how small the subproblems are for which you use different languages, how specific those languages are for the subproblem at hand, and how many of those languages you designed yourself to solve that specific subproblem, it might be called <em>Language-Oriented Programming</em>, <em>Polyglot Programming</em> or just <em>Programming</em>.</p>

<p>For example, just using C++ you actually use three languages: C++ itself, the C++ template language (which is basically a hybrid functional / logic programming language) and the C++ macro language. Throw in <code>make</code> and <code>sh</code> for building, JSON for configuration, <code>roff</code> for documenting, and Tcl for testing, and you are looking at 8 languages. However, I would just call that normal <em>Programming</em>, nothing special about it. The same applies to a typical web project combining HTML, CSS, ECMAScript, JSON, SQL, Java, XML, <code>sh</code>.</p>

<p><em>Language-Oriented Programming</em> is at the other end of the spectrum. In LOP, you break your problem apart into ever smaller subproblems, sub-subproblems and so on, and then you solve every subproblem with a language that is most suited for that particular subproblem, possibly one you designed specifically for that subproblem. Basically, in LOP, you use <em>Languages</em> the same way you use <em>Objects</em> in OOP, <em>Procedures</em> in PP, <em>Functions</em> in FP and so on. Typically, those languages are <em>Domain-Specific</em> and often not Turing-complete.</p>

<p><em>Polyglot Programming</em> is somewhere in the middle: you use different languages for different larger components, but not a the same level of abstraction as, say, individual objects, and you usually use pre-existing Turing-complete general-purpose languages, instead of designing them yourself. For example, trend.ly used ""Smalltalk for thinking, Java for brute-force computing, ECMAScript for visualizing, Ruby for gluing those three together and <code>sh</code> for deployment"". Your description sounds most like <em>Polyglot Programming</em> to me.</p>

<p>Note that those definitions are very subjective: for example, in Lisp, designing and implementing new languages is <em>so</em> obvious, natural and trivial, that no Lisp programmer would call what he does ""Language-Oriented Programming"". They just call it ""Programming"".</p>

<p>I wouldn't put a hard and fast rule on it, saying ""between 5 and 10 languages it's Polyglot, more is Language-Oriented, less is just Programming"". It's more a mindset: when you look at a problem, what's the first thing that comes to mind ""How can I solve this in this language"", ""What would be the best language to solve this in"" or ""What would the perfect language to solve this problem in look like""?</p>
"
"<p>Given a class A and a module B, mixin the instance methods of B so that it overrides the correspnding instance methods of A.</p>

<pre><code>module B
  def method1
    ""B\#method1""
  end

  def method2
    ""B\#method2""
  end
end

class A
  def method1
    ""A\#method1""
  end

  def method2
    ""A\#method2""
  end

  # include B    does not override instance methods!
  #              (module gets mixed into the superclass)
end

puts A.new.method1   # want it to print out ""B#method1""
puts A.new.method2   # want it to print out ""B#method2""</code></pre>
","2988","","<p><a href=""http://RubyDoc.Info/stdlib/core/Module%3ainclude"" rel=""nofollow""><code>Module#include</code></a> inserts the module <code>M</code> as a <em>superclass</em> of the class <code>C</code>. So, you can't override <code>C</code>'s methods in <code>M</code>, rather it's the other way around: <code>C</code>'s methods override <code>M</code>'s methods. (Technically speaking, Ruby doesn't make <code>M</code> a superclass of <code>C</code>, rather it creates an invisible <em>Include Class</em> <code>⟦M′⟧</code> whose method table and constant table point to <code>M</code>'s method table and constant table, and makes <em>that</em> class the superclass, but this distinction is not important for this particular question.)</p>

<p>In Ruby 2.0, there is a new method, <a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/class.c#L717-745"" rel=""nofollow""><code>Module#prepend</code></a> which, just as the name implies, <em>prepends</em> <code>M</code> to <code>C</code>'s ancestors, in other words, makes <code>M</code> a <em>subclass</em> of <code>C</code>.</p>

<p>So, in short: you can't, at least not yet.</p>
"
"<p>Is there any specific reason why Apple integrated ONLY git support in Xcode and not SVN? I know there are workarounds to make svn work in Xcode but they seem like pain compared to intuitive setup of git.</p>
","2988","","<ul>
<li>Because more users asked for Git than for Subversion?</li>
<li>Because Subversion support doesn't really make sense without support for managing and setting up Subversion repositories, which would be more complex (and thus expensive to implement) than Git support?</li>
<li>Because Git is cool and hip, and Apple wants to be, too?</li>
<li>Because someone, somewhere, flipped a coin?</li>
<li>Because it was added at roughly the same time as Ruby support, and Git is <em>the</em> dominant VCS in the Ruby community?</li>
</ul>

<p>You'd really have to ask someone at Apple.</p>
"
"<p>Haven't touched Ruby for ages so this really puzzled me.</p>

<p>Started up irb. 
Then first line I ran was:</p>

<pre><code>require 'init'
</code></pre>

<p>and I got this back:</p>

<pre><code>LoadError: no such file to load -- init 
</code></pre>

<p>Any idea what I'm doing wrong?</p>
","2988","","<p>The error message says it quite clearly:</p>

<pre><code>no such file to load -- init
</code></pre>

<p>So, either there is no such file (<code>init.rb</code>, <code>init.so</code>, <code>init.jar</code>, <code>init.rba</code>, etc. depending on the exact implementation of Ruby you use) or the file is not in a directory that is on the <code>$LOAD_PATH</code>.</p>
"
"<p>In Ruby, I need to convert a string like this:</p>

<pre><code>""keyA,valueA,keyB,valueB""
</code></pre>

<p>into a hash like this:</p>

<pre><code>{""keyA""=&gt;""valueA"", ""keyB""=&gt;""valueB""}
</code></pre>

<p>I'm pretty sure this will involve the <code>each_slice</code> method and possibly the enumerable <code>inject()</code>, as described in ""<a href=""http://stackoverflow.com/questions/7836928/ruby-string-to-hash-conversion"">ruby string to hash conversion</a>"".</p>

<p>but I have no idea how to bring these components together.</p>
","2988","","<pre><code>s = 'keyA,valueA,keyB,valueB'

Hash[*s.split(',')]
#=&gt; { 'keyA' =&gt; 'valueA', 'keyB' =&gt; 'valueB' }
</code></pre>
"
"<p>using ruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-linux]</p>

<p>I've been doing a lot of profiling and it's come to my attention that ruby Fixnum multiplication is really slow.</p>

<p>Through some profiling, I've learned that this is (partially) because <strong>every call to Fixnum#* involves 6 calls to Kernel#kind_of</strong>.</p>

<p>I know you can write C extensions, but these multiplications are spread throughout the code.  So, is there anyway to avoid this overhead inside Ruby?</p>

<p>thanks</p>
","2988","","<p>I seriously doubt that those measurements are accurate, for several reasons:</p>

<ol>
<li><p>You don't state which implementation of Ruby you are using, but <code>ruby-prof</code> is a Ruby profiler. It profiles Ruby code. There is no Ruby implementation I know of where <code>Fixnum#*</code> is Ruby code. In MRI, YARV, MRuby and tinyrb it is C code, in Rubinius it is C++ code, in MacRuby it is Objective-C code, in JRuby and XRuby it is Java code, in RubyGoLightly it is Go code, in IronRuby and Ruby.NET it is C# code, in MagLev and SmallRuby it is Smalltalk code, in Cardinal it is PASM code. <code>ruby-prof</code> can profile Ruby code, it cannot profile C, C++, Objective-C, Java, C#, Go, Smalltalk or PASM. Only Ruby. Therefore, it simply <em>cannot</em> profile <code>Fixnum#*</code>.</p></li>
<li><p>There is no need for <code>Fixnum#*</code> to check the class more than once. It knows that <code>self</code> is a <code>Fixnum</code>, because otherwise the call wouldn't have dispatched to the <code>Fixnum#*</code> method in the first place, so it only needs to check the argument. It also needs to check whether the result will fit into a <code>Fixnum</code> or not, but it would do that internally, not by a call to <code>kind_of?</code> (in fact, that doesn't even make sense: in order to be able to call a method on the result of the multiplication, it would first have to construct the result object, and in order to construct the result object, it would already have to know whether it fits into a <code>Fixnum</code> or not).</p></li>
<li><p>It wouldn't do that class check by calling <code>kind_of?</code> and going through the entire Ruby method lookup and method dispatch machinery. It's an internal function of the Ruby implementation, it has access to all private internal implementation details, it would just check the class directly or call some internal interpreter function, not the Ruby method <code>kind_of?</code></p></li>
<li><p>I checked the implementation of <code>Fixnum#*</code> in various popular Ruby implementations and didn't find <em>any</em> calls to <code>kind_of?</code>. Unfortunately, you didn't state which Ruby implementation you are using.</p>

<ul>
<li>Rubinius: <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/vm/builtin/fixnum.cpp#L78-89""><code>Fixnum::mul</code> in <code>vm/builtin/fixnum.cpp</code> l. 78–89</a></li>
<li>YARV: <a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/numeric.c#L2596-2640""><code>fix_mul</code> in <code>numeric.c</code> l. 2596–2640</a></li>
<li>JRuby: <a href=""https://GitHub.Com/JRuby/JRuby/blob/master/src/org/jruby/RubyFixnum.java#L472-520""><code>org.jruby.RubyFixnum.{op_mul, multiplyFixnum, multiplyOther}</code> in <code>src/org/jruby/RubyFixnum.java</code> l. 472–520</a> (Here you can clearly see, for example, how the method uses the Java <code>instanceof</code> operator instead of Ruby's <code>kind_of?</code> method to check the class.)</li>
</ul></li>
</ol>
"
"<p>Given an object and a module, how do I check that the object has been extended by the module?</p>

<p>There doesn't seem to be any corresponding extend? method</p>

<pre><code>moirb(main):001:0&gt; module Foobar
irb(main):002:1&gt; end
=&gt; nil
irb(main):003:0&gt; o=Object.new
=&gt; #&lt;Object:0x000001010d1400&gt;
irb(main):004:0&gt; o.class.include? Foobar
=&gt; false
irb(main):005:0&gt; o.extend Foobar
=&gt; #&lt;Object:0x000001010d1400&gt;
irb(main):006:0&gt; o.class.include? Foobar
=&gt; false
irb(main):007:0&gt; o.class.included_modules
=&gt; [PP::ObjectMixin, Kernel]
irb(main):016:0* o.methods.grep /extend/
=&gt; [:extend]
irb(main):019:0&gt; o.class.methods.grep /extend/
=&gt; [:extend]
</code></pre>
","2988","","<p>Is there any reason why you are not just using <code>is_a?</code>:</p>

<pre><code>o.is_a? Foobar
# =&gt; true
</code></pre>
"
"<p>I'm trying to dynamically undefine a method by opening up the eigenclass of the class.  I want something like:</p>

<pre><code>def remove_defined_mock_name_method(name)
  if Settings.respond_to?(name)
    class &lt;&lt; Settings
      remove_method name
    end
  end
end
</code></pre>

<p>where 'name' is a symbol.  Problem is name is not available to the reopened class.  How can I achieve undefining a class method dynamically like this through a method call?</p>

<p>For those curious, the use case is that I want to undefine a dynamically defined method after each test in rspec for rails.</p>
","2988","","<p><code>name</code> is a local variable. Local variables are local to the scope they are defined in, that's why they are called local variables. The only construct in Ruby that creates a nested scope is a block, so you would have to use a block if you want to have access to <code>name</code>, i.e. by using <code>class_eval</code> or something like that.</p>

<p>But in this case, that's not necessary:</p>

<pre><code>def remove_defined_mock_name_method(name)
  Settings.singleton_class.send(:remove_method, name) if Settings.respond_to?(name)
end
</code></pre>
"
"<p>When I print out all files in the windows 7 system32 directory using ruby, some files are missing. I use this simple directory iteration:</p>

<pre class=""lang-rb prettyprint-override""><code>Dir.foreach(""C:\\Windows\\System32"") do |fname|
  puts fname
end
</code></pre>

<p>I am specifically looking for python27.dll, which is not printed, though it exists. File.exists? seems to have the same problem as the dir iteration. it returns false for an existing file:</p>

<pre class=""lang-rb prettyprint-override""><code>File.exists? ""C:\\Windows\\System32\\python27.dll"" #returns false
</code></pre>

<p>Checking for another existing file of the folder works:</p>

<pre class=""lang-rb prettyprint-override""><code>File.exists? ""C:\\Windows\\System32\\quartz.dll"" #returns true
</code></pre>

<p>But it does not work if I duplicate an existing file or create a new one in system32</p>

<pre class=""lang-rb prettyprint-override""><code>File.exists? ""C:\\Windows\\System32\\quartz2.dll"" #returns false
</code></pre>

<p>Also, copying python27.dll to another directory and checking for existence works:</p>

<pre class=""lang-rb prettyprint-override""><code>File.exists? ""C:\\Otherfolder\\python27.dll"" #returns true
</code></pre>

<p>The problem has nothing to do with letter-case or the path delimiter. I checked that. Also, I don't see differences in the user-rights for files that work and that don't ... </p>

<p>I really have no idea, why this happens ... can anyone reproduce this???</p>

<p>thanks</p>

<p><strong>[edit]</strong></p>

<p>Took a while, but I found the answer. </p>

<p>It was a 32/64-bit issue. for ruby as a 32bit application, ""C:\Windows\System32"" is actually ""C:\Windows\SysWOW64"". As the 64bit WinExplorer showed, python27.dll was in System32 (which only 64bit processes see - well, confusing), wheras it should have been in SysWOW64 for ruby to see. Installing the 32bit version of Python fixed the problem for me (as I couldn't change the ruby script, because it was part of rubypython).</p>
","2988","","<p>In Windows 7 (Vista, actually), a lot of security policies that existed only on paper in earlier versions of Windows, are now actually enforced by the operating system. For example, according to Microsoft's documentation, it has been pretty much illegal to write to <code>C:\Windows\System32</code> for decades now, but if you actually tried it, it still worked. Not anymore. As of Vista, <code>C:\Windows\System32</code> is off-limits.</p>

<p>However, in order not to break existing (broken) applications, Microsoft introduced filesystem virtualization. If an application tries to write to <code>C:\Windows\System32</code>, it gets silently redirected to <code>C:\Users\%Username%\AppData\Local\VirtualStore\Windows\System32</code>. So, this specific application sees all the files it created or changed in <code>C:\Windows\System32</code>, but <em>other</em> applications see only the unchanged / empty directory.</p>

<p>This does not just apply to <code>C:\Windows\System32</code> but also to other system directories as well. Also, it applies to system parts of the registry, like <code>HKEY_LOCAL_MACHINE</code> for example.</p>

<p>This virtualization is per-application. I.e. if Application A tries to create or modify a file in a protected directory, Windows will intercept that call and redirect it to the VirtualStore. It will also record this redirection somewhere. Now, when that same application A tries to look there again, Windows will use the recorded redirection, so that the application <em>thinks</em> the file is where it put it, when in fact, it is somewhere else entirely.</p>

<p>However, if a <em>different</em> Application B looks at that directory, then the redirection is not triggered and B just sees a pristine system directory. This is the whole point: in the past, different applications would create all sorts of weird bugs by overwriting each other's files in system directories. I.e. one application would dump its <code>python27.dll</code> into <code>C:\Windows\System32</code> and another application would dump <em>its</em> own, slightly different incompatible version of <code>python27.dll</code>, overwriting the first one.</p>

<p>So, you used <em>one</em> application to copy the DLL there (probably <code>explorer.exe</code>) and you use a <em>different</em> application, namely <code>ruby.exe</code> to look at it. But <code>explorer.exe</code> didnt't <em>actually</em> copy it into <code>system32</code>, it got redirected to the VirtualStore. When you use <code>explorer.exe</code>, the redirection gets triggered and you see the file right where you <em>think</em> you put it, but when you use <code>ruby.exe</code>, the redirection does <em>not</em> get triggered and it sees the directory as it actually is.</p>

<p>I <em>bet</em> that </p>

<pre><code>File.exists? ""C:/Users/#{ENV['Username']}/AppData/Local/VirtualStore/Windows/System32/python27.dll""
</code></pre>

<p>returns <code>true</code>.</p>
"
"<p>I would like to extend the functionality of variables in Ruby. The reason is I am working on something similar of a type system or value checker (this sounds a bit crazy but the whole idea is to long to explain, just the reason I would like to extend default variables).</p>

<p>I have read that in Ruby, everything is an object; so variables are objects. And Ruby is supposed to be quite liberal concerning what can be changed via meta-programming.</p>

<p>Is there some kind of 'Class' associated with local variables that I could extend? </p>

<p>I would like to associate a string-variable for each variable that holds a string representation of a type. Further I would like to intercept variable assignments and execute a method each time a new value is assigned to a variable. This is so I can check, if the new value is correct according to the type (stored as string in the Variable).</p>

<p>If local variables in Ruby are defined as object of a class, I can extend that class or modify it via a ruby mixin.</p>

<p>The workaround would be to create a new class for my Variables (and not use the build in local variables of Ruby). This class can have a value attribute, a attribute (stored as string) for the type and a get- and set-method. This way I can solve my problem, but I would like to extend the built in variables in ruby, if that is possible.</p>

<p><strong>current work in progress</strong></p>

<pre><code>class Fixnum
        attr_accessor :tp
        @tp

        def mytype ( type )
                @tp = type
        end
        def typecheck
                #call typechecker
                puts ""checked""
        end
end
</code></pre>

<p>Test Code:</p>

<pre><code>a = 3
a.mytype(""nat"")
puts a.tp
a.typecheck
</code></pre>

<p>There are still two problems.
<em>First</em>, I think it is not possible to add a new constructor to Fixnum. <em>Second</em>, I would like to intercept the variable access, i.e. ""b = a"" calls the method 'typecheck' of a. But this would require something similar to Aspect Oriented Programming and I am not sure if this can be solved with Ruby's meta-programming facilitates. </p>
","2988","","<blockquote>
  <p>I have read that in Ruby, everything is an object</p>
</blockquote>

<p>That depends on your definition of ""<em>object</em>"" and every-""<em>thing</em>"". ""<em>Object</em>"" can mean ""<em>entity that can be manipulated by the program</em>"" (which I will call <strong>object</strong> from now on), or ""<em>value that is a member of the object system</em>"" (which I will call <code>Object</code> from now on).</p>

<p>In Ruby, everything that can be manipulated by the program (i.e. every <strong>object</strong>) is also an <code>Object</code>, i.e. an instance of a class. This is unlike Java, for example, where <em>primitives</em> can be manipulated by the program (i.e. are <strong>objects</strong> in that sense of the word), but aren't <code>Objects</code>. In Ruby, this distinction doesn't exist: every <strong>object</strong> is an <code>Object</code> and every <code>Object</code> is also an <strong>object</strong>.</p>

<p>However, there are <em>things</em> in the language, which <em>cannot</em> be manipulated by the program and which aren't instances of a class, i.e. they are neither <strong>object</strong> s nor <code>Object</code>s. These are, for example, methods, variables, syntax, parameter lists, arguments lists, keywords.</p>

<p>Note: you can use Ruby's reflection API to give you an object that <em>represents</em> a method or a parameter list, but that object is only a proxy, it is not the real thing.</p>

<p>So, when we say ""<em>everything is an object</em>"", what we really mean is that ""every <strong>object</strong> is an <code>Object</code>"", i.e. that everything which can be manipulated by the program is also a member of the object system, or in other words, there are no values outside of the object system (unlike primitives in Java). We do <em>not</em> mean that everything that exists in the language can also be manipulated at runtime by the program.</p>

<blockquote>
  <p>so variables are objects</p>
</blockquote>

<p>No, unfortunately, they are neither <strong>object</strong> s nor <code>Object</code>s.</p>

<p>This is also clearly stated in the Ruby Language Specification (emphasis added by me):</p>

<blockquote>
  <h1>6.2 Variables</h1>
  
  <h2>6.2.1 General description</h2>
  
  <p>A variable is denoted by a name, and <strong>refers to</strong> an object, which is called the value of the variable.
  <strong>A variable itself is not an object</strong>.</p>
</blockquote>

<p>In the book <a href=""http://rads.stackoverflow.com/amzn/click/0596516177"" rel=""nofollow""><em>The Ruby Programming Language</em> by Matz and David Flanagan</a> it says on page 2:</p>

<blockquote>
  <p>every value is an object</p>
</blockquote>

<p>Note, it doesn't say every-<em>thing</em>, only every <em>value</em>.</p>

<p>See also the question <a href=""http://StackOverflow.Com/a/8385471/2988/"">Is variable is object in ruby?</a></p>
"
"<p>Have an array of single pair hashes, like this:</p>

<pre><code>arguments = [{:name=&gt;""ABCD""},{:title=&gt;""Awesome""},{:number=&gt;4}]
</code></pre>

<p>I need to loop through and pull each one off as a key and value. Right now, I'm doing this:</p>

<pre><code>def methodname(*arguments, &amp;block)
  arguments.each do |arg|
    arg.each do |key, value|
      # use my key and value
    end
  end
  # use the &amp;block here in awesome ways
end
</code></pre>

<p>Ick. Gotta be a better way, so I'm asking if someone knows it. I've searched and can't seem to find this particular question on StackOverflow, but let me know if it's out there.</p>

<p>EDIT: Added context to the code example.</p>
","2988","","<pre><code>arguments.each do |arg|
  (key, value), = *arg
  # use my key and value
end
</code></pre>

<p>I guess whether or not you consider this to be ""a better way"" mostly depends on whether your teammates understand how assignment works in Ruby.</p>
"
"<p>I'm wondering how the <code>scala.xml</code> library is implemented, to get an <code>Elem</code>-instance out of XML.</p>

<p>So I can write:</p>

<pre><code>val xml = {
  &lt;myxml&gt;
    Some wired text withoud ""'s or code like
    import x
    x.func()
    It's like a normal sting in triple-quotes.
  &lt;/myxml&gt;
}

xml.text

String = 
 ""
    Some text wired withoud ""'s or code like
    import x
    x.func()
    It's like a normal sting in triple-quotes.
  ""
</code></pre>

<p>A look at the source code doesn't gave me the insight, how this is achieved.
Is the ""XML-detection"" a (hard) scala language feature or is it an internal DSL? Because I would like to build my own things like this:</p>

<pre><code>var x = LatexCode {
  \sqrt{\frac{a}{b}}
}

x.toString

""\sqrt{\frac{a}{b}}""
</code></pre>

<p>or</p>

<pre><code>var y = PythonCode {
  &gt;&gt;&gt; import something
  &gt;&gt;&gt; something.func()
}

y.toString
""""""import something ...""""""

y.execute  // e.g. passed to python as python-script
</code></pre>

<p>or</p>

<pre><code>object o extends PythonCode {
  import x
  x.y()
}

o.toString

""""""import x....""""""
</code></pre>

<p>I would like to avoid using such things like <code>PythonCode { """"""import ..."""""" }</code> as ""DSL"". And in scala, XML is magically transported to a <code>scala.xml</code>-Class; same with <code>Symbol</code> which I can get with <code>val a = 'symoblname</code>, but in the source code there's no clue how this is implemented.</p>

<p>How can I do something like that on myself, preferably as internal DSL?</p>
","2988","","<p>It's an XML literal, just like <code>""foo""</code> is a string literal, <code>42</code> is an integer literal, <code>12.34</code> is a floating point literal, <code>'foo</code> is a symbol literal, <code>(foo) =&gt; foo + 1</code> is a function literal and so on.</p>

<p>Scala has fewer literals than other languages (for example, it doesn't have array literals or regexp literals), but it <em>does</em> have XML literals.</p>

<p>Note that in Scala 2.10 string literals become <em>vastly</em> more powerful by allowing you to intercept and re-interpret them using <code>StringContext</code>s. These more powerful string literals would allow you to implement all of your snippets, <em>including</em> XML without separate language support. It is likely that XML literals will be removed in a future version of the language.</p>
"
"<p>I have a question in my mind from last many days, that while writing a code in ruby, is the linear code is faster and preferable than an iteration?</p>

<p>Let me have an example. There is a block of code for same functionality written in two different ways:</p>

<p>Way 1:</p>

<pre><code>['dog', 'cat', 'tiger'].each do |pet_name|
  puts ""I have many pets, one of them is #{pet_name}.""
end
</code></pre>

<p>Way 2:</p>

<pre><code>puts ""I have many pets, one of them is dog.""
puts ""I have many pets, one of them is cat.""
puts ""I have many pets, one of them is tiger.""
</code></pre>

<p>So, I want to know which one is better and preferable? As per my view, I think 2nd one will take less time and memory. But I want to confirm.</p>
","2988","","<p>In both cases, the time spent running the actual Ruby code is going to be completely dominated by the time it takes to print the text to the screen. Remember: console output is <em>slow</em>. <em>Really</em> slow. Painfully slow.</p>

<p>Since in both cases the code prints the same amount of text (and, in fact, the <em>same</em> text) to the screen, any miniscule performance differences that might or might not exist are going to be lost in the noise.</p>

<blockquote>
  <p>I think 2nd one will take less time and memory.</p>
</blockquote>

<p>Don't think. Look.</p>

<p>Here's a crazy idea: if you want to know which one runs faster, run them and see which one runs faster!</p>
"
"<p>For the mechanism of ""pass by value"", it was so that the callee cannot alter the original data.  So the callee can change the parameter variable in any way, but when the function returns, the original value in the argument variable is not changed.</p>

<p>But in Objective-C or Ruby, since all variables for objects are references to objects, when we pass the object to any method, the method can ""send a message"" to alter the object.  After the method returns, the caller will continue with the argument already in a different state.</p>

<p>Or is there a way to guarantee the passed in object not changed (its states not altered) -- is there such a mechanism?</p>
","2988","","<p>I'm not sure what you are getting at. Ruby <em>is</em> pass-by-value. You <em>cannot</em> ""change the argument variable"":</p>

<pre><code>def is_ruby_pass_by_value?(foo)
  foo = 'No, Ruby is not pass-by-value.'
  return nil
end

bar = 'Yes, of course, Ruby *is* pass-by-value!'

is_ruby_pass_by_value?(bar)

p bar
# 'Yes, of course, Ruby *is* pass-by-value!'
</code></pre>

<p>I'm not sure about Objective-C, but I would be surprised if it were different.</p>
"
"<p>I think the best way to explain this is with an example:</p>

<pre><code>class A
    attr_accessor :test
    def initialize(x = nil)
        @test = x
    end

    def ==(other)
        return @test == other.test
    end
end

a1 = A.new(1) # =&gt; #&lt;A:0x11b7118 @test=1&gt;
a1.test # =&gt; 1

a2 = A.new(1) # =&gt; #&lt;A:0x11fb0f8 @test=1&gt;
a2.test # =&gt; 1

a1 == a2 # =&gt; true
[a1].include?(a2) # =&gt; true
[a1] - [a2] # =&gt; [#&lt;A:0x11b7118 @test=1&gt;]
</code></pre>

<p>In this example, how would I get [a1] - [a2] to return an empty array, as one would expect it to for any other Ruby class? Is there some method that I have to define for A that I'm missing?</p>
","2988","","<p>You need to override <code>eql?</code> and <code>hash</code>. These are the ones that are used for those kinds of <em>set operations</em>.</p>
"
"<p>Given the following method:</p>

<pre><code>def some_hash
  {
    :one =&gt; 1,
    :two =&gt; 2,
  }
end
</code></pre>

<p>Is there any performance benefit from memoizing the hash?</p>

<pre><code>def some_hash
  @some_hash ||= {
    :one =&gt; 1,
    :two =&gt; 2,
  }
end
</code></pre>
","2988","","<p>The compiler / interpreter <em>cannot</em> automatically transform the first form into the second form, since the two are <em>not</em> equivalent:</p>

<pre><code>a1, b1 = hash1, hash1
a1[:one] = 'ONE'

a2, b2 = hash2, hash2
a2[:one] = 'ONE'

p b1[:one], b2[:one]
# 1
# 'ONE'
</code></pre>

<p>Once again, shared mutable state rears its ugly head. No, kids, it's not just about concurrency!</p>
"
"<p>I have read a paper discussing von Neuman style programming. The paper's name is <a href=""http://www.cs.cmu.edu/~crary/819-f09/Backus78.pdf""><em>Can  Programming Be Liberated from the von Neumann Style? A Functional Style and Its Algebra of Programs</em></a></p>

<p>My question about the functional Style programming languange (refered by the author John Backus) is this:</p>

<blockquote>
  <p>Is the functional Style in this paper exactly or approxiately meaning the same things when we refer that of function programming language like <strong>HASKELL</strong> or <strong>ERLANG</strong>?</p>
</blockquote>
","2988","","<p>If you want to look at a language that is <em>directly</em> inspired by the <em>FP</em> language described in that paper, you might want to look at <a href=""http://JSoftware.Com/"" rel=""nofollow""><em>J</em></a>.</p>
"
"<p>There are 4 arrays in Ruby</p>

<pre><code>array1 = [""label1.1"", ""label1.2"", ""label1.3"", ""label1.4""]
array2 = [""data1.1"", ""data1.2"", ""data1.3"", ""data1.4""]

array3 = [""label2.1"", ""label2.2"", ""label2.3"", ""label2.4""]
array4 = [""data2.1"", ""data2.2"", ""data2.3"", ""data2.4""]
</code></pre>

<p>What I need to do is to get the result array of hash looking</p>

<pre><code>[ {key1=&gt;""label1.1"", value1=&gt;""data1.1"" }, 
  {key1=&gt;""label1.2"", value1=&gt;""data1.2"" },
  {key1=&gt;""label1.3"", value1=&gt;""data1.3"" },
  {key1=&gt;""label1.4"", value1=&gt;""data1.4"" },

  {key1=&gt;""label2.1"", value1=&gt;""data2.1"" },
  {key1=&gt;""label2.2"", value1=&gt;""data2.2"" },
  {key1=&gt;""label2.3"", value1=&gt;""data2.3"" },
  {key1=&gt;""label2.4"", value1=&gt;""data2.4"" }
]
</code></pre>

<p>Your thoughts?</p>
","2988","","<pre><code>(array1 + array3).zip(array2 + array4).map {|k, v| { key1: k, value1: v } }
</code></pre>
"
"<p>I am trying to figure out what the difference is between ORM and ODM, as far as I understand the concept, ORM (Object Relational Mapper) maps the relations between data, where as ODM (Object Document Mapper) deals with documents. Am I right in assuming that mySQL is an example of ORM and MongoDB is a example of ODM?</p>

<p>As I am sure you can see, I am not too familiar with the theory of the concept. Could someone please clarify the differences between the two?</p>
","2988","","<p>An ORM maps between an Object Model and a Relational Database. An ODM maps between an Object Model and a Document Database. MySQL is not an ORM, it's a Relational Database, more specifically, a SQL Database. MongoDB is not an ODM, it's a Document Database.</p>
"
"<p>In <a href=""http://stackoverflow.com/questions/12272856/why-cant-i-string-print#comment16458824_12272872"">this comment</a>, it was stated that Ruby doesn't have functions, only methods. If Ruby doesn't have functions, is it not possible to do functional programming in it? Or am I confused about the term ""function""?</p>

<p>I mean ""functional programming"" in the sense of functions as first class objects, not as in prohibiting mutable state.</p>
","2988","","<p>A function (or more precisely a procedure, since we are not talking about referential transparency here) is isomorphic to an object with only a single method.</p>

<p>That's how first-class procedures are faked in Java, for example: with so-called <em>SAM</em> interfaces (Single Abstract Method). It's also how first-class procedures are ""faked"" in Ruby: anything which responds to <code>call</code> (and maybe <code>to_proc</code>) is a first-class procedure. There is a convenience class called <code>Proc</code> which provides additional features for ""procedures"" such as currying, and there is literal syntax (<code>-&gt; (x, y) { x + y }</code>) for procedures which creates instances of the <code>Proc</code> class, but those two aren't strictly necessary:</p>

<pre><code>def (i_am_a_first_class_procedure = Object.new).call(x) p x end

i_am_a_first_class_procedure.(42)
# 42
</code></pre>

<p>Scala is similar, except the method is called <code>apply</code>, not <code>call</code>. In Python, it's a ""magic"" method called <code>__call__</code>.</p>

<p>Note: I am ignoring closures here. Closures are procedures with state, and objects of course can have state, too, so there's not a real problem in representing them, but expressing the lexical capture of free variables in terms of an object with instance variables gets rather hairy.</p>
"
"<p>I have an program with lots of boilerplate (which is, sadly, not reducible even by Scala mechanisms). But if there would be a way to generate complex top-level classes with a macro, all that boilerplate will go away. For example:</p>

<pre><code>package org.smth

generate(params)

// becomes

class A { ... }
object B { ... }
case class C { ... }
</code></pre>

<p>Will it be possible with Scala 2.10 macros?</p>
","2988","","<p>In short: no.</p>

<p><a href=""http://ScalaMacros.Org/future.html"" rel=""nofollow"">Macro types</a> (i.e. macros that generate types instead of methods) are planned, but they are not designed nor specified, let alone implemented yet, and they won't be for 2.10.</p>

<p>Also, a single macro invocation can only generate a single type. However, since types (specifically, <code>object</code>s) can be nested, this is not a limitation: you can just generate a single top-level <code>object</code> containing all the classes you need. The difference between this and your code is basically one additional <code>import</code> statement:</p>

<pre><code>package org.smth

type O = Generate(params)

// becomes

object O {
  class A { ... }
  object B { ... }
  case class C { ... }
}

// which means you need an additional

import O._
</code></pre>

<p>They thought about <code>package</code> macros that can generate entire packages full of classes, but realized that since <code>object</code>s are a superset of <code>package</code>s and type macros can generate <code>object</code>s that wouldn't be necessary.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1872110/is-ruby-pass-by-reference-or-by-value"">Is Ruby pass by reference or by value?</a>  </p>
</blockquote>



<p>Working with Ruby, when passing an object to a method, how is the memory of this object handled?  </p>

<p>Coming from a C background, I can think of several things which may be happening:</p>

<ol>
<li><p>A copy of the memory associated with the according object and is made available to the method being called.  In which case the modification of the object would only be reflected in the context of method being called, and <em>not</em> the calling method.</p></li>
<li><p>A reference to the memory of the object is passed the method being called (essentially a pointer).  Hence any changes made by the object by the method being called or the calling method would be reflected in both contexts.  As well, should this program be multithreaded, some kind of mechanism (mutex, semaphore, etc.) must be used to ensure mutually exclusive access to that memory performing write operations.</p></li>
<li><p>Something else I am unable to think of... maybe a memory model similar to that of <a href=""http://golang.org/ref/mem"" rel=""nofollow"">Go</a>... Pipes... MessagePassing...?</p></li>
</ol>

<p>What is actually happening?</p>
","2988","","<p>Ruby uses pass-by-value, or more precisely, a special case of pass-by-value where the value being passed is <em>always</em> a pointer. This special case is also sometimes known as call-by-sharing, call-by-object-sharing or call-by-object.</p>

<p>It's the same convention that is used by more or less every object-oriented language ever created.</p>

<p>Note: on all existing Ruby implementations <code>Symbol</code>s, <code>Fixnum</code>s and <code>Float</code>s are actually passed <em>directly</em> by value and <em>not</em> with an intermediary pointer. However, since those three are immutable, there is no observable behavioral difference between pass-by-value and call-by-object-sharing in this case, so you can greatly simplify your mental model by simply treating <em>everything</em> as call-by-object-sharing. Just interpret these three special cases as internal compiler optimizations that you don't need to worry about.</p>

<p>Here's a simple example you can run to determine the argument passing convention of Ruby (or any other language, after you translate it):</p>

<pre><code>def is_ruby_pass_by_value?(foo)
  foo.replace('More precisely, it is call-by-object-sharing!')
  foo = 'No, Ruby is pass-by-reference.'
  return nil
end

bar = 'Yes, of course, Ruby *is* pass-by-value!'

is_ruby_pass_by_value?(bar)

p bar
# 'More precisely, it is call-by-object-sharing!'
</code></pre>

<p>In short: it's your option 2.</p>
"
"<p>I am learning java swing and came across the concept of anonymous inner class. After studying a bit at this <a href=""http://c2.com/cgi/wiki?AnonymousInnerClass"" rel=""nofollow"">link</a>, I feel that an anonymous inner class must always extend some other class since the method in which it gets passed as a parameter is predefined. At most, if a method accepts Object instances as parameter, only then we can create an anonymous independent inner class. I just seek your opinion whether I am right. It would be helpful if you could provide some example.
Thanks in advance. </p>
","2988","","<p><em>Every</em> class must extend some superclass. The <em>only</em> exception is <code>java.lang.Object</code>, which is the top-level class and thus <em>can't</em> have a superclass. Anonymous inner classes are no different in this regard.</p>
"
"<p>It would be great if I could create a method that counts the number of variables that contain a desired string. </p>

<p>Let's say the string is ""hi"", and the method needs to take in any number of variables, I'll be entering 2 or more.</p>

<p>Variables:</p>

<pre><code>var1 = ""hi""
var2 = ""bye""
var3 = ""hi""

result = countvariables(""hi"",var1,var2,var3)
</code></pre>

<p>Here I have put the desired string in the variable parameters, however it can also be entered when the method is created.</p>

<p>Result should contain the number 2. Because 2 variables contain the string ""hi"".</p>

<p>Is this possible? </p>
","2988","","<pre><code>def countvariables(needle, *haystack)
  haystack.count(needle)
end

var1, var2, var3 = 'hi', 'bye', 'hi'

result = countvariables('hi', var1, var2, var3)
# =&gt; 2
</code></pre>
"
"<p>I am new to Ruby . I  have a question with respect to using Inheritence in Ruby .</p>

<p>I have a class called as Doggy inside a file named Doggy.rb</p>

<pre><code>class Doggy
  def bark
    puts ""Vicky is barking""
  end
end
</code></pre>

<p>I have written another class named Puppy in another file named puppy.rb</p>

<pre><code>class Puppy &lt; Doggy
end

puts Doggy.new.bark
</code></pre>

<p>I am getting this Error:</p>

<pre><code>Puppy.rb:1:in `&lt;main&gt;': uninitialized constant Doggy (NameError)
</code></pre>

<p>Is it mandatory to have these classes (Doggy and Puppy ) inside a single file only?</p>

<p>Edited </p>

<p>As per the suggestions , i have tried using require and require_relative as shown , but still i am getting below Error</p>

<pre><code>Puppy.rb:1:in `&lt;main&gt;': uninitialized constant Doggy (NameError)

    class Puppy &lt; Doggy
    end
    require_relative 'Doggy.rb'
    puts Doggy.new.bark
</code></pre>
","2988","","<p>You are loading the file containing the definition of <code>Doggy</code>, <em>after</em> you inherit from <code>Doggy</code>. Of course, that <em>cannot possibly work</em>. How can you inherit from <code>Doggy</code> on line 1 if you only load the file containing the definition of <code>Doggy</code> on line 3?</p>
"
"<p>I have already read the Wikipedia article and searched for obvious places but I'm stuck. Can someone simple tell me what exactly is a Kind ? What is it used for ?</p>

<p>Scala examples are most appreciated</p>
","2988","","<p>In short: a <em>kind</em> is to <em>types</em> what a <em>type</em> is to <em>values</em>.</p>

<p>What is a <em>value</em>? <code>1</code>, <code>2</code>, <code>3</code> are values. So are <code>""Hello""</code> and <code>""World""</code>, <code>true</code> and <code>false</code>, and so forth.</p>

<p>Values belong to <em>types</em>. Types describe a set of values. <code>1</code>, <code>2</code> and <code>3</code> belong to the type <code>Nat</code>, <code>""Hello""</code> and <code>""World""</code> to the type <code>Text</code>, <code>true</code> and <code>false</code> to the type <code>Boolean</code>.</p>

<p><em>Functions</em> take one or more values as arguments and produce one or more values as results. In order to meaningfully do something with the arguments, the function needs to make some assumptions about them, this is done by constraining their types. So, function parameters and return values typically also have types.</p>

<p>Now, a function also has a type, which is described by the types of its inputs and outputs. For example, the <code>abs</code> function which computes the absolute value of a number has the type</p>

<pre><code>Number -&gt; NonNegativeNumber
</code></pre>

<p>The function <code>add</code> which adds two numbers has the type</p>

<pre><code>(Number, Number) -&gt; Number
</code></pre>

<p>The function <code>divmod</code> has the type</p>

<pre><code>(Number, Number) -&gt; (Number, Number)
</code></pre>

<p>Okay, but if functions take values as arguments and produce values as results, and functions are values, then functions can also take functions as arguments and return functions as results, right? What's the type of such a function?</p>

<p>Let's say we have a function <code>findCrossing</code> which finds the point where some other function (of numbers) crosses the y-axis. It takes as an argument the function and produces as a result a number:</p>

<pre><code>(Number -&gt; Number) -&gt; Number
</code></pre>

<p>Or a function <code>makeAdder</code> which produces a function which takes a number and adds a specific number to it:</p>

<pre><code>Number -&gt; (Number -&gt; Number)
</code></pre>

<p>And a function which computes the derivative of another function:</p>

<pre><code>(Number -&gt; Number) -&gt; (Number -&gt; Number)
</code></pre>

<p>Let's look at the level of abstraction here: a value is something very concrete. It only means one thing. If we were to order our levels of abstraction here, we could say that a value has the order 0.</p>

<p>A function, OTOH is more abstract: a single function can produce many different values. So, it has order 1.</p>

<p>A function which returns or accepts a function is even more abstract: it can produce many different functions which can produce many different values. It has order 2.</p>

<p>Generally, we call everything with an order > 1 ""<em>higher order</em>"".</p>

<p>Okay, but what about <em>kinds</em>? Well, we said above that <code>1</code>, <code>2</code>, <code>""Hello""</code>, <code>false</code> etc. have types. But what is the type of <code>Number</code>? Or <code>Text</code>? Or <code>Boolean</code>?</p>

<p>Well, its type is <code>Type</code>, of course! This ""type of a type"" is called a <em>kind</em>.</p>

<p>And just like we can have functions which construct values out of values, we can have functions which construct types out of types. These functions are called <em>type constructors</em>.</p>

<p>And just like functions have types, type constructors have kinds. For example, the <code>List</code> type constructor, which takes an element type and produces a list type for that element has kind</p>

<pre><code>Type -&gt; Type
</code></pre>

<p>The <code>Map</code> type constructor, which takes a key type and a value type and produces a map type has kind</p>

<pre><code>(Type, Type) -&gt; Type
</code></pre>

<p>Now, continuing the analogy, if we can have functions which take functions as arguments, can we also have type constructors which take type constructors as arguments? Of course!</p>

<p>An example is the <code>Functor</code> type constructor. It takes a type constructor and produces a type:</p>

<pre><code>(Type -&gt; Type) -&gt; Type
</code></pre>

<p>Notice how we always write <code>Type</code> here? Above, we had many different types like <code>Number</code>, <code>Text</code>, <code>Boolean</code> etc. Here, we <em>always</em> have only kind of type, namely <code>Type</code>. That gets tedious to (warning, bad pun ahead) type, so instead of writing <code>Type</code> everywhere, we just write <code>*</code>. I.e. <code>Functor</code> has the kind</p>

<pre><code>(* -&gt; *) -&gt; *
</code></pre>

<p>and <code>Number</code> has the kind</p>

<pre><code>*
</code></pre>

<p>Continuing the analogy, <code>Number</code>, <code>Text</code> and all others of kind <code>*</code> have order 0, <code>List</code> and all others of kind <code>* -&gt; *</code> or more generally <code>(*, …) -&gt; (*, …)</code> have order 1, <code>Functor</code> and all of kind <code>(* -&gt; *) -&gt; *</code> or <code>* -&gt; (* -&gt; *)</code> (and so forth) have order 2. Except in this case we sometimes also call it <em>rank</em> instead of order.</p>

<p>Everything above order/rank 1 is called <em>higher-order</em>, <em>higher-rank</em> or <em>higher-kinded</em>.</p>

<p>I hope the analogy is clear now: types describe sets of values; kinds describe sets of types.</p>

<hr>

<p>Aside: I completely ignored currying. Basically, currying means that you can transform any function which takes two values into a function which takes one value and returns a function which takes the other value, similarly for three, four, five, … arguments. This means that you only ever need to deal with functions with exactly one parameter, which makes languages much simpler.</p>

<p>However, this also means that technically speaking, <code>add</code> is a higher-order function (because it returns a function) which is muddying the definitions.</p>
"
"<p>In my ruby script,I required the gmail gem:</p>

<p><code>
require 'rubygems'<br>
require 'gmail'
</code></p>

<p>when running in shell,it works ok:</p>

<p><code>ruby my-script.rb</code></p>

<p>while when I put it in a cron job,it failed to execuate:</p>

<p><code>* * * * * cd /to/script/directory;/usr/local/rvm/rubies/ree-1.8.7-2011.03/bin/ruby ./my-script.rb</code></p>

<p>the log shows that the gmail gem can not be loaded:</p>

<p><code>
/usr/local/rvm/rubies/ree-1.8.7-2011.03/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require': no such file to load -- gmail (LoadError)
</code></p>

<p>well, when i do this(put the cmd in bash -l -c 'CMD'):</p>

<p><code>* * * * * /bin/bash -l -c 'cd /to/script/directory;/usr/local/rvm/rubies/ree-1.8.7-2011.03/bin/ruby ./my-script.rb'</code></p>

<p>it works ok again.</p>

<p>why?</p>

<p>ps.I know the arg <code>-l</code> make the bash a login shell,but does that make any difference?</p>
","2988","","<p>I suspect you are loading RVM in your login script, ergo RVM will only be available in a login shell.</p>
"
"<p>Is there any data structure in Ruby which is similar to Pascal records?</p>

<p>I would like to define a record type which has about 15-20 fields, all of them are strings.</p>

<p>I tried to define a class for this purpose, but I realized that I have to define getter and setter methods:</p>

<pre><code>class Data
   def description
        @description
   end

   def size
        @size
   end

   def address
        @address
   end

   .
   .  all other (about 15 variables...)
   . 

   def description=( value )
        @description = value
   end

   def size=(value)
        @size=value
   end

   def address=(value)
        @address=value
   end
  .
  . more setter method (about 15 times...)
  .

end
</code></pre>

<p>To define all the 15-20 fields and getters/setters this way is quite annoying. Is there any shorter way to do it? For example:</p>

<pre><code>class Data
 desc, size, address=""""
end
</code></pre>

<p>Or something similar, and then I would be able to create a new instance of the Data class:</p>

<pre><code>d=Data.new
</code></pre>

<p>and then set the instance variables:</p>

<pre><code>d.desc=""bla""
d.size=""50.66""
d.address=""Bla street 20.""
</code></pre>

<p>I already have a method, that can parse an XML file with the XMLSimple gem, and I would like to create a record (or class) from the parsed data and return it back with the ""return"" keyword. Then I want to access the fields of the record simply: d.size, d.address, d.description and so on. For example:</p>

<pre><code>def data_import(fname=""1.xml"")
  data = XmlSimple.xml_in(fname,{'SuppressEmpty' =&gt; """"})
  d=Data.new()
  d.desc=data['desc'][0]
  d.size=data['size'][0]
  d.address=data['address'][0]
  d. ... =
  d. ... =  (about 15-20 times)
  d. ... =
  return d
end
</code></pre>

<p>my XML (1.xml):</p>

<pre><code>&lt;entity&gt;
 &lt;desc&gt;bla&lt;/desc&gt;
 &lt;size&gt;50.66&lt;/size&gt;
 &lt;address&gt;Bla street 20.&lt;/address&gt;
 .
 . (15-20 more fields)
 .
&lt;/entity&gt;
</code></pre>

<p>In the Pascal language (and as far as I know in C++) there were a data structure called ""record"" for this purpose.</p>
","2988","","<p>Yes, there is, it uses the C/C++ name instead of <em>record</em>: <code>Struct</code>. <code>Struct</code> is a class factory, if you call <code>Struct.new</code>, it will return a class which has the desired fields:</p>

<pre><code>Data = Struct.new(:description, :size, :address, …)
</code></pre>

<p>If you need to modify the behavior, you can pass a block to <code>Struct.new</code>:</p>

<pre><code>Data = Struct.new(:description, :size, :address, …) do
  def my_custom_method; end
end
</code></pre>

<p>or use inheritance:</p>

<pre><code>class Data &lt; Struct.new(:description, :size, :address, …)
  def my_custom_method; end
end
</code></pre>

<p>Then:</p>

<pre><code>d = Data.new

d.description = …
d.size = …
d.address = …
</code></pre>

<p>or alternatively:</p>

<pre><code>d = Data.new(…, …, …)
</code></pre>
"
"<p>Not sure that there is an answer for this but hope somebody know. What I am trying is to get number of optional arguments for a Method in Ruby 1.8.7. <code>Method#arity</code> will not work since it returns <code>-n-1</code>, where <code>n</code> is number of required arguments of method. What I need is number of optional arguments? e.g.</p>

<pre><code>def foo(a,b,c=4,d=3)
  # ...
end
</code></pre>

<p>How can I identify that there are <em>2 optional arguments</em>? Keep in mind this is <strong>Ruby 1.8.7</strong></p>

<p><strong>UPDATE</strong></p>

<p>Apologies question was not clear, I need to know number of optional arguments before calling the method. e.g.</p>

<pre><code>method_def = self.instance_method(:foo)
# check for number of args
# call method if it meets some kind of criteria
</code></pre>
","2988","","<p>I don't think you can. In fact, I think that was one of the reasons for the introduction of <code>{Proc, Method, UnboundMethod}#parameters</code> in Ruby 1.9:</p>

<pre><code>instance_method(:foo).parameters.count {|type,| type == :opt }
# =&gt; 2
</code></pre>
"
"<p>I am having a simple requirement of Assigning Multiple arrays.  Right now i am doing something like.  </p>

<pre><code>   employees = Array.new
      projects = Array.new
      practices = Array.new
      entities = Array.new
      categories = Array.new
      groups = Array.new
      external_inputs = Array.new
      payrolls = Array.new
</code></pre>

<p>I Want that <code>employees, projects, practices, entities ...payrolls</code> all should be assigned to <code>Array.new</code> in a single line
Please suggest some better and clean ways of doing it.  Maybe by Metaprogramming.</p>
","2988","","<blockquote>
  <p>I Want that <code>employees</code>, <code>projects</code>, <code>practices</code>, <code>entities</code>, …, <code>payrolls</code> all should be assigned to <code>Array.new</code> in a single line</p>
</blockquote>

<p>Here ya go:</p>

<pre><code>employees = Array.new; projects = Array.new; practices = Array.new; entities = Array.new; categories = Array.new; groups = Array.new; external_inputs = Array.new; payrolls = Array.new
</code></pre>

<p>Voilà, a single line, just as you requested.</p>

<p>Now, why you have such a large, complex method that it needs 8 local variables is another question altogether.</p>
"
"<p>I know my <code>x.to_s</code> is not working and I need to use <code>.send(something)</code> but I cannot get the syntax right. If you can show me the correct send syntax I'd appreciate it.    </p>

<pre><code>h = Hash.new 
@cars.each do|x| 
  h[""x.to_s""] = 0 
end
</code></pre>
","2988","","<p>I really don't understand why you need to use <code>send</code> at all here. What's wrong with the simple:</p>

<pre><code>Hash[@cars.map(&amp;:to_s).zip([0].cycle)]
</code></pre>
"
"<p>I am trying to build a static analysis tool for a demo project. We are free to choose the language to analyze. I started off by writing a Java code analyzer using ANTLR. I now want to do the same for Scala code. However, I could not find the ANTLR grammar for Scala. Does it exist? 
Is there any other machine readable form of Scala grammar?</p>
","2988","","<p>I don't believe there is such a thing.</p>

<p>The thing is that for <em>any</em> language, but <em>especially</em> for a library language like Scala, lexical analysis and syntactic analysis is the least interesting and most trivial part of static analysis. In order to do anything even <em>remotely</em> interesting, you need to perform a significant amount of <em>semantic</em> analysis: desugaring, type inference, type checking, kind checking, macro expansion, overload resolution, implicit resolution, name binding. In short: you need to re-implement more or less the entire Scala compiler, modulo the actual code generation part. Remember that both Scala's macro system and Scala's type system are Turing-complete (in fact, Scala's macro system <em>is</em> Scala!): there could be significant compile-time and type-level computation going on that is <em>impossible</em> to analyze without actually <em>performing</em> macro expansion, type inference and type checking.</p>

<p>That is a <em>massive</em> task, and there are in fact only two projects that have successfully done it: one is the Scala compiler itself, the other is the IntelliJ IDEA Scala plugin.</p>

<p>And let's not even talk about compiler plugins, which are able to change the syntax and semantics of Scala in almost arbitrary ways.</p>

<p>But behold, there is hope: The Scala compiler itself provides an API called the <em>Presentation Compiler</em>, which is specifically designed for use by IDEs, code highlighters, and all kinds of static analysis tools. It gives you access to the entire information the compiler has during compilation, just before the optimization and code generation phases. It is used by ScalaDoc, the Scala REPL, the Scala Eclipse Plugin, the NetBeans Scala Plugin, SimplyScala.Com, the ENSIME Plugin for Emacs, some static analysis tools, and many others.</p>
"
"<p>How to build this sequence in ruby?</p>

<pre><code>{
""0"" =&gt; ""00000"",
""1"" =&gt; ""00001"",
""2"" =&gt; ""00002"",
""3"" =&gt; ""00003"",
""4"" =&gt; ""00010"",
""5"" =&gt; ""00011"",
""6"" =&gt; ""00012"",
....
""1020"" =&gt; ""33330"",
""1021"" =&gt; ""33331"",
""1022"" =&gt; ""33332"",
""1023"" =&gt; ""33333""
}
</code></pre>
","2988","","<pre><code>Hash[1024.times.map {|n| [n.to_s, format('%05d', n.to_s(4))] }]
</code></pre>
"
"<p>I have a function:</p>

<pre><code>def test(ints: Int*) = ints.foreach(println(_))
</code></pre>

<p>How to convert Array[Int] or Seq[Int] to Int*?</p>
","2988","","<p>That's what the <code>_*</code> type ascription is for:</p>

<pre><code>def test(ints: Int*) { ints foreach println }

val l = List(1, 2, 3)

test(l:_*)
// 1
// 2
// 3
</code></pre>
"
"<p>What are the main differences, if any, of Python's argument passing rules vs C#'s argument passing rules?</p>

<p>I'm very familiar with Python and only starting to learn C#. I was wondering if I could think of the rule set as to when an object is passed by reference or by value the same for C# as it is in Python, or if there are some key differences I need to keep in mind.</p>
","2988","","<p>Python is always pass-by-value:</p>

<pre><code>def is_python_pass_by_value(foo):
    foo[0] = 'More precisely, for reference types it is call-by-object-sharing, which is a special case of pass-by-value.'
    foo = ['Python is not pass-by-reference.']

quux = ['Yes, of course, Python *is* pass-by-value!']

is_python_pass_by_value(quux)

print(quux[0])
# More precisely, for reference types it is call-by-object-sharing, which is a special case of pass-by-value.
</code></pre>

<p>C# is pass-by-value by default, but also supports pass-by-reference if both at the method declaration site and at the call site the <code>ref</code> keyword is used:</p>

<pre><code>struct MutableCell
{
    public string value;
}

class Program
{
    static void IsCSharpPassByValue(string[] foo, MutableCell bar, ref string baz, ref MutableCell qux)
    {
        foo[0] = ""More precisely, for reference types it is call-by-object-sharing, which is a special case of pass-by-value."";
        foo = new string[] { ""C# is not pass-by-reference."" };

        bar.value = ""For value types, it is *not* call-by-sharing."";
        bar = new MutableCell { value = ""And also not pass-by-reference."" };

        baz = ""It also supports pass-by-reference if explicitly requested."";

        qux = new MutableCell { value = ""Pass-by-reference is supported for value types as well."" };
    }

    static void Main(string[] args)
    {
        var quux = new string[] { ""Yes, of course, C# *is* pass-by-value!"" };

        var corge = new MutableCell { value = ""For value types it is pure pass-by-value."" };

        var grault = ""This string will vanish because of pass-by-reference."";

        var garply = new MutableCell { value = ""This string will vanish because of pass-by-reference."" };

        IsCSharpPassByValue(quux, corge, ref grault, ref garply);

        Console.WriteLine(quux[0]);
        // More precisely, for reference types it is call-by-object-sharing, which is a special case of pass-by-value.

        Console.WriteLine(corge.value);
        // For value types it is pure pass-by-value.

        Console.WriteLine(grault);
        // It also supports pass-by-reference if explicitly requested.

        Console.WriteLine(garply.value);
        // Pass-by-reference is supported for value types as well.
    }
}
</code></pre>

<p>As you can see, without explicit annotation with the <code>ref</code> keyword, C# behaves <em>exactly</em> like Python. Value types are pass-by-value where the value being passed is the object itself, Reference types are pass-by-value where the value being passed is a pointer to the object (also known as call-by-object-sharing).</p>

<p>Python does not support mutable value types (probably a good thing), so it is impossible to observe the distinction between pass-value-by-value and pass-pointer-by-value, so you can just treat <em>everything</em> as pass-pointer-by-value and greatly simplify your mental model.</p>

<p>C# also supports <code>out</code> parameters. They are also pass-by-reference, but it is guaranteed that the callee will never read from them, only write, so the caller does not need to initialize them beforehand. They are used to simulate multiple return values, when you would use a tuple in Python. They are kind-of like one-way pass-by-reference.</p>
"
"<p>Do operators in Ruby belong to a particular class ? As per my knowledge operators are tokens which are redefined by classes according to the operation they are intended to perform. For example the Numeric class defines the + operator for numeric operations, similarly the String class defines it for string concatenation. So based on that if i try to do this:</p>

<pre><code>    +.is_a ? (Numeric)
</code></pre>

<p>It returns false. Is my explanation to this question correct ?</p>

<p>Sorry for all the confusion this is the actual question from my assignment.What class does + belong to and how do you check it ?</p>
","2988","","<p>It is pretty confusing what you mean by ""belong to class"". From your code snippet, it looks like you mean ""instance of class"".</p>

<p>If that is what you mean, then the answer is: the question doesn't make sense. Operators aren't objects. Therefore they cannot possibly be instances of classes.</p>
"
"<p>Is it possible to create ranges in ruby that exclude one or both of the endpoints.  So handling the concept in mathematics of open and closed interval boundaries?</p>

<p>For example, can I define a range from 1.0 to 10.0 that excludes 1.0</p>

<p>Say (with pseudo-ruby)</p>

<pre><code>range = [1.0...10.0)

range === 1.0
=&gt; false

range === 10.0
=&gt; true
</code></pre>
","2988","","<p>The <code>Range</code> class in Ruby only supports closed and half-open (right-open) ranges. However, you can easily write your own.</p>

<p>Here's an example of a half-open range in Ruby:</p>

<pre><code>range = 1.0...10.0

range === 1.0
# =&gt; true

range === 10.0
# =&gt; false
</code></pre>

<p>The total line count for the Ruby 1.9 compliant <code>Range</code> class in Rubinius is 238 lines of Ruby code. If you don't need your open range class to support every wrinkle, corner case, special case, idiosyncrasy, backwards-compatibility quirk and so on of the Ruby Language Specification you can get by with a lot less than that.</p>

<p>If you really only need to test for inclusion, then something like this should suffice:</p>

<pre><code>class OpenRange
  attr_reader :first, :last

  def initialize(first, last, exclusion = {})
    exclusion = { first: false, last: false }.merge(exclusion)
    @first, @last, @first_exclusive, @last_exclusive = first, last, exclusion[:first], exclusion[:last]
  end

  def first_exclusive?; @first_exclusive end
  def last_exclusive?;  @last_exclusive  end

  def include?(other)
    case [first_exclusive?, last_exclusive?]
    when [true,  true]
      first &lt;  other &amp;&amp; other &lt;  last
    when [true,  false]
      first &lt;  other &amp;&amp; other &lt;= last
    when [false, true]
      first &lt;= other &amp;&amp; other &lt;  last
    when [false, false]
      first &lt;= other &amp;&amp; other &lt;= last
    end
  end

  alias_method :===, :include?

  def to_s
    ""#{if first_exclusive? then '(' else '[' end}#@first...#@last#{if last_exclusive? then ')' else ']' end}""
  end

  alias_method :inspect, :to_s
end
</code></pre>
"
"<p>When I look at the version of Ruby</p>

<pre><code>`$ ruby -v`
</code></pre>

<p>i get</p>

<pre><code>ruby 1.8.7 (2011-06-30 patchlevel 352) [x86_64-linux]
</code></pre>

<p>but when I want to upgrade Ruby</p>

<pre><code>$ rvm install 1.9.3
</code></pre>

<p>i get</p>

<pre><code>Already installed ruby-1.9.3-p194.
</code></pre>

<p>What's the problem?</p>

<p>Thanks all!</p>
","2988","","<p>I don't see any problem.</p>

<p>The version that you told RVM to use is 1.8.7, and you also have a 1.9.3 installed that you could tell RVM to use if you wanted to.</p>
"
"<p>Why is there a difference between the two types of calling method in the following code:</p>

<pre class=""lang-rb prettyprint-override""><code>class Access
    def method_missing name
        print ""Method is missing""
    end

    protected
    def protected_method
        print ""Calling Protected Method""
    end
end

access = Access.new
access.protected_method #Method is missing
access.send(:protected_method) #Calling Protected Method
</code></pre>

<p>The <code>access.protected_method</code> works as expected. But the <code>send</code> option tries to call the method even though it's protected. I would like to know what happens internally. </p>

<p>I get a string for the method to be called, so I would like to use <code>send</code> but I do not want to call the protected methods.</p>
","2988","","<p>That's just how <code>send</code> works. Use <code>public_send</code> instead, if you only want to call public methods.</p>
"
"<blockquote>
  <p>A worksheet is a Scala file that is evaluated on save, and the result of each expression is shown in a column to the right of your program. Worksheets are like a REPL session on steroids, and enjoy 1st class editor support: completion, hyperlinking, interactive errors-as-you-type, auto-format, etc. (source <a href=""https://github.com/scala-ide/scala-worksheet/wiki/Getting-Started"">https://github.com/scala-ide/scala-worksheet/wiki/Getting-Started</a>)</p>
</blockquote>

<p>Is there anything similar in any other language? I mean, I know about REPL in other dynamic languages, but what the worksheet does s much more.</p>
","2988","","<p>This is not really a language feature, more an IDE feature.</p>

<p>It looks like a pretty straightforward clone of the <code>Transcript</code> window which has been a standard part of Smalltalk IDEs since at the least the 1980s.</p>

<p><em>One</em> of those Smalltalk IDEs is IBM VisualAge for Smalltalk (where it was called <em>Scrapbook</em>), which later became IBM VisualAge for Java, which became IBM VisualAge for Java Micro Edition, which became Eclipse, and in fact <a href=""http://Help.Eclipse.Org/juno/index.jsp?topic=/org.eclipse.jdt.doc.user/concepts/cscrapbook.htm"">the Eclipse Java Development Tools <em>still</em> have that feature today</a>.</p>

<p>Lisp and Forth IDEs also usually have something similar, often called a <em>listener</em>.</p>

<p><a href=""http://LINQPad.Net/"">LINQPad</a> is a product which provides a similar experience for C#, VisualBasic.NET and F#.</p>

<p><a href=""http://PryREPL.Org/"">Pry</a> is still in its infancy, but its goal is to morph into a full interactive IDE for Ruby.</p>
"
"<p>I am learning ruby from 'Programming ruby 1.9'. I am learning to use the ruby-debug so I can understand what is going on underneath. I use rubymine since it integrates ruby-debug19 or something like that (it says I don't have the gem and installs it). Here is the question, I was able to step through the code and explore the variables and the stack. However, when it reaches a <code>for i in 0...5</code>, the debugger says </p>

<blockquote>
  <p>stack frame not available</p>
</blockquote>

<p>I know that ruby don't use for loops much but I'd still like to know if there debug through for loops.</p>

<p>Code:</p>

<pre><code>    raw_text  = %{
The problem breaks down into two parts. First, given some text as a
string, return a list of words. That sounds like an array. Then, build a 
count for each distinct word. That sounds like a use for a hash---we can 
index it with the word and use the corresponding entry to keep a count.}

word_list = words_from_string(raw_text)
counts    = count_frequency(word_list)
sorted    = counts.sort_by {|word, count| count}
top_five  = sorted.last(5)

for i in 0...5            # (this is ugly code--read on
  word = top_five[i][0]   #  for a better version)
  count = top_five[i][1]
  puts ""#{word}:  #{count}""
end
</code></pre>
","2988","","<p>If you take a look at the Ruby Language Specification (clause 11.5.2.3.4 on p. 91), you will see that </p>

<pre><code>for i in 0...5
  word = top_five[i][0]
  count = top_five[i][1]
  puts ""#{word}:  #{count}""
end
</code></pre>

<p>is syntactic sugar for </p>

<pre><code>(0...5).each do |i|
  word = top_five[i][0]
  count = top_five[i][1]
  puts ""#{word}:  #{count}""
end
</code></pre>

<p><em>except</em> that <em>no new variable scope</em> is created for the block. So, the code with <code>for</code> will be translated into the code with <code>each</code> and executed as if it were written that way, except that the variables used in the <code>for</code> loop leak into the surrounding scope.</p>

<p>To put it another way: <code>for</code> actually executes <code>each</code> but <em>without allocating a new stack frame for the block</em>. So, the error message is exactly right: there is a call to a block, but somehow there is no stack frame allocated for that block call. That obviously confuses the debugger.</p>

<p>Now, one might argue that this is a bug and that <code>for</code> loops should get special treatment inside the debugger. I guess that so far nobody has ever bothered to fix that bug, since nobody ever uses <code>for</code> loops, precisely because they leak their variables into the surrounding scope and are <em>exactly</em> equivalent to an idiomatic <code>each</code> which doesn't.</p>

<p>What do I mean by ""leaking variables""? See here:</p>

<pre><code>(1..2).each do |i|
  t = true
end

i
# NameError: undefined local variable or method `i' for main:Object

t
# NameError: undefined local variable or method `t' for main:Object

for i in 1..2
  t = true
end

i
# =&gt; 2

t
# =&gt; true
</code></pre>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/7076128/best-way-to-merge-two-maps-and-sum-the-values-of-same-key"">Best way to merge two maps and sum the values of same key?</a>  </p>
</blockquote>



<p>I have a bunch of maps of the type <code>Map[String, Int]</code>. I would like to be able to merge them taking the sum of the values when the keys correspond. For instance, the standard <code>++</code> method on maps gives</p>

<pre><code>Map(""a"" -&gt; 1, ""b"" -&gt; 2) ++ Map(""a"" -&gt; 3, ""c"" -&gt; 5)
// Map[String,Int] = Map(a -&gt; 3, b -&gt; 2, c -&gt; 5)
</code></pre>

<p>I would like to define an operation that as a result would give</p>

<pre><code>Map(""a"" -&gt; 1, ""b"" -&gt; 2) ?? Map(""a"" -&gt; 3, ""c"" -&gt; 5)
// Map[String,Int] = Map(a -&gt; 4, b -&gt; 2, c -&gt; 5)
</code></pre>

<p>In fancy wording, <code>Map[A, B]</code> always has a natural structure of monoid, but there is a different one when <code>B</code> is itself a monoid.</p>

<p>Now, it would not be difficult to write, say, a recursive implementation for <code>LinkedHashMap</code>, but I think there must be some trivial and more general way to write this, possibly using scalaz. Any ideas?</p>
","2988","","<p>It looks like you are actually trying to use a <code>Map</code> as a <code>Multiset</code>. For multisets, the operation you are describing is just multiset sum <code>s1 ⊎ s2</code>.</p>

<p>Unfortunately, <a href=""http://Scala-Lang.Org/node/8192/#comment-34749"" rel=""nofollow"">there is no multiset in the Scala Collections Framework</a>, but <a href=""http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multiset.html"" rel=""nofollow"">there are some for Java</a>.</p>

<p>For a hypothetical <code>Multiset</code> in Scala:</p>

<pre><code>Multiset(""a"", ""b"", ""b"") ++ Multiset(""a"", ""a"", ""a"", ""c"", ""c"", ""c"", ""c"", ""c"")
// Multiset[String] = Multiset(""a"" -&gt; 4, ""b"" -&gt; 2, ""c"" -&gt; 5)
</code></pre>
"
"<p>This snippet of code creates method as a private method, why?</p>

<pre><code>a = %q{def hello() ""Hello there!"" end}
class A; end
A.class.send(:eval, a)
A.new.hello #=&gt; NoMethodError: private method `hello' called for A
</code></pre>

<p>Platform: ruby 1.9.3p125, tested in <code>pry</code></p>
","2988","","<p>Methods which are defined outside of any module (so called <em>global methods</em>) are actually defined as private instance methods of <code>Object</code>. That way, the can be called everywhere (since everything inherits from <code>Object</code>), and they can only be called without an explicit receiver.</p>

<p>This includes methods like <code>require</code>, <code>load</code>, <code>puts</code>, <code>print</code>, <code>p</code>, <code>gets</code>, and <code>eval</code>. (Note: most of those are <em>actually</em> defined in <code>Kernel</code> and mixed into <code>Object</code> but the effect and the objective is the same.)</p>

<p>In your case, you <em>are</em> defining a method outside of any module: there is no mention of a module in your <code>a</code> string. The fact that you are calling <code>eval</code> on <code>A.class</code> is completely irrelevant. Like I said above: <code>eval</code> is a global method defined on <code>Object</code> for convenience reasons (so that it may be called everywhere). Your <code>A.class.send(:eval)</code> is just a very convoluted way of calling the global private <code>eval</code> method. It does not somehow magically set the context of the <code>eval</code>uated string to <code>A.class</code>.</p>

<p>You could do <code>42.send(:eval)</code> instead and the result would still be the same, just like <code>puts('Hello')</code> and <code>42.send(:puts, 'Hello')</code> are exactly the same, because they end up calling the exact same method.</p>

<p>And by the way: even if it <em>did</em>, it still wouldn't do what you want. <code>A.class</code> is just <code>Class</code> (the <code>class</code> of <em>any</em> class is <em>always</em> <code>Class</code>), so if it <em>did</em> work as you expect, the method would be defined in <code>Class</code>, not in <code>A</code>.</p>
"
"<p>For the first assignment for the course <a href=""https://www.coursera.org/course/progfun"" rel=""nofollow"">https://www.coursera.org/course/progfun</a>
I would like to do the following</p>

<pre><code>   val l1 = List(1,2,3)
   val l2 = List(4,5,6)

   val lSum = l1.someOperation(l2)
   RES: lSum=List(5,7,9)  
</code></pre>

<p>I could implement someOperation with a loop, but that does not look very scalarish, I am wondering if there is a built in function to achieve this.</p>
","2988","","<p>This is probably more Scalaish than @om-nom-nom's code. Although Scala is, as languages go, still pretty young, so there is actually still debate about what actually <em>is</em> and <em>isn't</em> Scalaish:</p>

<pre><code>l1 zip l2 map { case (a, b) =&gt; a + b }
</code></pre>
"
"<p>I'm trying to get a better sense of <code>Ruby</code>. So Ruby makes <code>Mixins</code> a first class concept. In <code>C#</code> one can create <code>Extension Methods</code> that act on <code>Interfaces</code>. So both techniques provide a mechanism that is widely known as a <code>Mixin</code>.</p>

<p>It might be good to compare both approaches on a specific example. </p>

<p><strong>Enumerable in Ruby</strong></p>

<p>Let's take all those beautiful methods that work up on a collection. In Ruby those are <code>all?</code>, <code>any?</code>, <code>count</code> and a lot more: <a href=""http://ruby-doc.org/core-1.9.3/Enumerable.html"" rel=""nofollow"">http://ruby-doc.org/core-1.9.3/Enumerable.html</a></p>

<p>From the documentation:
<em>The Enumerable mixin provides collection classes with several traversal and searching methods, and with the ability to sort. The class must provide a method each, which yields successive members of the collection.</em></p>

<p><strong>Enumerable in C#</strong></p>

<p>In <code>C#</code> there is the feature called <code>LINQ</code> that also provides those methods <code>All</code>, <code>Any</code>, <code>Count</code> and a lot more.</p>

<p>If you want to make your class ""<code>LINQ enabled</code>"" you need to implement the <code>IEnumerable&lt;T&gt;</code> interface which forces you to also provide a method <code>GetEnumerator</code> which conceptually is very close to the ruby approach.</p>

<p>So from the perspective of a bird your class now gained all those methods mentioned above. How did it happend? </p>

<p>Well <code>.NET</code> defined all those <code>LINQ</code> methods as <code>Extension Methods</code> on the <code>IEnumerable&lt;T&gt;</code> interface. And since you implemented this interface you now ""mixin"" all those methods. </p>

<p>I wonder how much both approaches differ and if there are things <code>Ruby Mixins</code> can do that <code>C#'s</code> <code>Interface</code> + <code>Extension Method</code> Strategy can't? Well, beside the fact that <code>Ruby Mixins</code> can be mixed at runtime.</p>
","2988","","<p>Mixins are classes parameterized by their superclass. There really isn't any relation at all to Extension Methods, so it doesn't even make sense to compare them.</p>
"
"<pre><code>Array[1,2,3]
</code></pre>

<p>calls <code>Array::[]</code> method with <code>1,2,3</code> as arguments<br /></p>

<p>But,</p>

<pre><code>[1,2,3]
</code></pre>

<p>doesn't call <code>Array::[]</code>;</p>

<p>So, whose method is called by <code>[]</code>?</p>
","2988","","<p>This is literal syntax for an array. It's not a message send. Ruby, like the vast majority of other languages, doesn't allow overloading of literals.</p>

<p>If you need literal overloading, you should use a language which does support it, such as Ioke.</p>
"
"<p>I encountered some unauthorized strangeness working with Scala's SortedMap[A,B].  If I declare the reference to SortedMap[A,B] ""a"" to be of type Map[A,B], then map operations on ""a"" will produce a non-sorted map implementation.  </p>

<p>Example:</p>

<pre><code>import scala.collection.immutable._

object Test extends App {
    val a: Map[String, String] = SortedMap[String, String](""a"" -&gt; ""s"", ""b"" -&gt; ""t"", ""c"" -&gt; ""u"", ""d"" -&gt; ""v"", ""e"" -&gt; ""w"", ""f"" -&gt; ""x"")
    println(a.getClass+"": ""+a)

    val b = a map {x =&gt; x}  // identity
    println(b.getClass+"": ""+b)
}
</code></pre>

<p>The output of the above is: </p>

<blockquote>
  <p>class scala.collection.immutable.TreeMap: Map(a -> s, b -> t, c -> u, d -> v, e -> w, f -> x)<br>
  class scala.collection.immutable.HashMap$HashTrieMap: Map(e -> w, f -> x, a -> s, b -> t, c -> u, d -> v)</p>
</blockquote>

<p>The order of key/value pairs before and after the identity transformation is not the same.  </p>

<p>The strange thing is that removing the type declaration from ""a"" makes this issue go away.  That's fine in a toy example, but makes SortedMap[A,B] unusable for passing to methods that expect Map[A,B] parameters.</p>

<p>In general, I would expect higher order functions such as ""map"" and ""filter"" to not change the fundamental properties of the collections they are applied to.</p>

<p>Does anyone know why ""map"" is behaving like this?</p>
","2988","","<p>In short: you explicitly declared <code>a</code> to be of type <code>Map</code>, and the Scala collections framework tries very hard for higher order functions such as <code>map</code> and <code>filter</code> to not change the fundamental properties of the collections they are applied to, therefore it will also return a <code>Map</code> since that is what you explicitly told it you wanted.</p>
"
"<p>In ruby you can go</p>

<pre><code>a = { }
a['a'] = 82
a['b'] = 'foo'
puts a['a'] # 82
</code></pre>

<p>I wish I could use dot notation, like javascript.</p>

<p><code>puts a.a # 82</code></p>

<p>Is there a way to build object literals and access them with dot notation in ruby?</p>
","2988","","<p>Ruby doesn't have object literals.</p>

<p>Ruby is a class-based object-oriented language. Every object is an instance of a class, and classes are responsible for creating instances of themselves. You don't create objects just by writing them down, you have to ask a class to create an instance of itself by sending it a message (typically called <code>new</code>, although that is only a convention).</p>
"
"<p>I have asked a similar question earlier: <a href=""http://stackoverflow.com/questions/11856978/reference-to-a-method"">reference to a method?</a></p>

<p>but now I am trying to figure out how to do this with this code:</p>

<pre><code>arr0 = [1,2,3]
arr1 = [2,3,4,5]
arr1.reject! {|x|
    arr0.include? x
}
</code></pre>

<p>apparently <code>{|x| arr0.include? x}</code> can be simplified to just <code>arr0.include?</code>. But I do not know how to get this method reference.</p>

<p>EDIT: I am not interested in how to subtract arrays in Ruby using a simpler syntax. I am looking for a way to get a reference to a method.</p>
","2988","","<pre><code>arr1.reject!(&amp;arr0.method(:include?))
</code></pre>
"
"<p>As in <a href=""http://stackoverflow.com/questions/8908050"">this question</a>, when a local variable not defined is used within its own assignment, it is evaluated to <code>nil</code>.</p>

<pre><code>x = x # =&gt; nil 
</code></pre>

<p>But when the name of a local variable conflicts with an existing method name, it is more tricky. Why does the last example below return <code>nil</code>?</p>

<pre><code>{}.instance_eval{a = keys} # =&gt; []
{}.instance_eval{keys = self.keys} # =&gt; []
{}.instance_eval{keys = keys} # =&gt; nil
</code></pre>
","2988","","<p>In Ruby, because methods can be called without an explicit receiver and without parentheses, there is a syntactic ambiguity between a local variable reference and a receiverless argumentless method call:</p>

<pre><code>foo
</code></pre>

<p>could <em>either</em> mean ""call method <code>foo</code> on <code>self</code> with no arguments"" or ""dereference local variable <code>foo</code>"".</p>

<p>If there exists a local variable <code>foo</code> in scope, this is <em>always</em> interpreted as a local variable dereference, <em>never</em> as a method call.</p>

<p>So, what does it mean for a local variable to ""be in scope""? This is determined <em>syntactically</em> at <em>parse time</em>, <em>not</em> semantically at runtime. This is very important! Local variables are defined at parse time: if an assignment to a local variable is seen by the parser, the local variable is in scope from that point on. It is, however, only <em>initialized</em> at <em>runtime</em>, there is no compile time evaluation of code going on:</p>

<pre><code>if false
  foo = 42 # from this point on, the local variable foo is in scope
end

foo # evaluates to nil, since it is declared but not initialized
</code></pre>

<p>Why does it make sense for local variables to ""shadow"" methods and not the way around? Well, if methods did shadow local variables, there would no longer be a way to dereference those local variables. However, if local variables shadow methods, then there is still a way to call those methods: remember, the ambiguity only exists for receiverless argumentless methods calls, if you add an explicit receiver or an explicit argument list, you can still call the method:</p>

<pre><code>def bar; 'Hello from method' end; public :bar

bar # =&gt; 'Hello from method'

bar = 'You will never see this' if false

bar # =&gt; nil

bar = 'Hello from local variable'

bar      # =&gt; 'Hello from local variable'
bar()    # =&gt; 'Hello from method'
self.bar # =&gt; 'Hello from method'
</code></pre>
"
"<p>As we know, there are several way of Proc calling in Ruby 1.9</p>

<pre><code> f =-&gt;n {[:hello, n]}
 p f[:ruby]       # =&gt; [:hello, :ruby]
 p f.call(:ruby)  # =&gt; [:hello, :ruby]
 p f.(:ruby)      # =&gt; [:hello, :ruby]
 p f === :ruby    # =&gt; [:hello, :ruby]
</code></pre>

<p>I am curious, what is more 'natural' way of calling Proc? 'Natural', probably, means more Computer Science - like way.</p>
","2988","","<p>I always use option 3. Considering the syntactic ambiguities of being able to call methods without parentheses, this is the closest you can get to actual method call syntax.</p>
"
"<p>Consider the following structure (in reality the structure is a bit more complex):</p>

<pre><code>case class A(id:String,name:String) {
   override def equals(obj: Any):Boolean = {
      if (obj == null || !obj.isInstanceOf[A]) return false
      val a = obj.asInstanceOf[A]
      name == a.name
   }

   override def hashCode() = {
      31 + name.hashCode
   }
}

val a1 = A(""1"",""a"")
val a2 = A(""2"",""a"")
val a3 = A(""3"",""b"")
val list = List((a1,a2),(a1,a3),(a2,a3))
</code></pre>

<p>Now let's say I want to group all tuples with equal A's. I could implement it like this</p>

<pre><code>list.groupBy {
  case (x,y) =&gt; (x,y)
}
</code></pre>

<p>But, I don't like to use pattern matching here, because it's not adding anything here. I want something simple, like this:</p>

<pre><code>list.groupBy(_)
</code></pre>

<p>Unfortunately, this doesn't compile. Not even when I do:</p>

<pre><code>list.groupBy[(A,A)](_)
</code></pre>

<p>Any suggestions how to simplify my code?</p>
","2988","","<blockquote>
<pre><code>list.groupBy { case (x,y) =&gt; (x,y) }
</code></pre>
</blockquote>

<p>Here you are deconstructing the tuple into its two constituent parts, just to immediately reassemble them exactly like they were before. In other words: you aren't actually doing anything useful. The input and output are identical. This is just the same as</p>

<pre><code>list.groupBy { t =&gt; t }
</code></pre>

<p>which is of course just the identity function, which Scala helpfully provides for us:</p>

<pre><code>list groupBy identity
</code></pre>
"
"<p>Scala's Macros and C++ templates both provide access to compile time meta-programming. Could you elaborate on similarities and differences? Are they equal in terms of expressiveness?</p>
","2988","","<p>One important difference between them is that Scala macros are written in Scala, whereas C++ templates are their own programming language, which is completely unlike C++. C++ is an imperative object-oriented strict impure language, C++ templates are a declarative hybrid logic/functional non-strict pure language, which was never intended to be used as a full-fledged programming language, and thus lacks many of the features necessary for programming in the large.</p>
"
"<p>I have worked in various companies and in each place people have a different opinion on whether comments should be included in code.  Some say they shouldn't because the programmer's code should be simple enough to understand and should therefore be self-commenting.  They further contest that since code frequently changes and developers are not always diligent enough to update comments along with their code that comments quickly get out of date and therefore become misleading.  The other group say that the function of code is to describe, in technical terms what the system does, but that it doesn't always describe what the business reason for the code is and that therefore comments are useful in order to give context to the code.  I tend to lean towards the former point of view.  I was wondering what the views of the community are.  Please do share your thoughts.</p>

<p>Thanks,</p>

<p>Sachin </p>
","2988","","<p>I agree with you. The business reasons should be captured in acceptance tests, or, if your type system is powerful enough to express them, directly in the type system where they can be mechanically checked by the compiler.</p>

<p>Something as important as a business rule definitely does <em>not</em> belong in a comment, which is neither checked nor executed nor tested.</p>
"
"<p>I have a <code>List</code> class implemented with a <code>Node</code> class.  My <code>#remove!</code> method is as follows:</p>

<pre><code>def remove!(list_item)
  find list_item do |i|
    if i == nil
      return
    else
      i.pointer = i.pointer.pointer
    end
  end
end
</code></pre>

<p><code>#find</code> does as I expect, returning the node previous to the one containing the datum searched for. So I expect this to set the previous item's pointer to the object after the searched-for item, which should remove the current item from the list.</p>

<p>I think this has to do with how block scoping, and that <code>i</code> passed to the block is not directly referencing the object it should while in the block, and thus cannot overwrite the value of its pointer. How can I force this block to alter this value, without explicitly declaring the value beforehand (which defeats the purpose of this block).</p>

<p>The <code>#find</code> method and the '#traverse' method behave as expected, so I figure this block <em>has</em> to be to blame. I am trying to avoid either making the same function call twice, or declaring a throw-away variable, because I've taken an interest in functional programming and would like to try it out.</p>

<p><em>Edit per request:</em></p>

<p>The <a href=""https://github.com/robototron/linked_list/blob/master/nodes.rb"" rel=""nofollow"">full code</a> on github</p>

<p>The <code>#find</code> method</p>

<pre><code>def find(item_to_find, current_item = @sentinel.pointer, previous_item = @sentinel)
  if current_item == @sentinel then puts ""not found""; return nil end
  if current_item.datum == item_to_find
    return previous_item
  else
    find item_to_find, current_item.pointer, current_item
  end
end
</code></pre>
","2988","","<p>Your <code>find</code> method never calls the block, it doesn't store it anywhere, it doesn't pass it along to another method, it doesn't do anything at all with the block. It just ignores it. Therefore, your <code>remove!</code> method is really just</p>

<pre><code>def remove!(list_item)
  find list_item
end
</code></pre>
"
"<p>I am reading up on B Trees and looks like they achieve the dynamic set operations in O(lg n) time . The Red Black Tree( TreeMap in java ) also achieves the same operation in asymptotically the same time frame . So I would like to know what makes B trees more useful for database and file systems </p>
","2988","","<p>RB trees are binary search trees. B trees can have more than two child nodes. In fact, the number of child nodes is variable.</p>

<p>So, you can vary the number of child nodes such that the size of a node is always a multiple of the filesystem block size. This reduces waste when reading: you cannot read less than one block anyway, you always have to read the full block, so you might just as well fill it up with useful data. Increasing the number of child nodes will also <em>decrease</em> the depth of the tree, thus decreasing the average number of ""hops"" (i.e. disk reads), which again increases performance.</p>

<p>Remember: B trees are usually used to store data structures which are orders of magnitude <em>larger</em> than memory, whereas RB trees are typically used to store data structures which are orders of magnitude <em>smaller</em> than memory. In fact, B trees are specifically designed as an on-disk data structure as opposed to an in-memory data structure.</p>

<p>This is the key sentence from the <a href=""http://Wikipedia.Org/wiki/B-tree"" rel=""nofollow"">Wikipedia article</a> (emphasis mine):</p>

<blockquote>
  <p>the B-tree is <em>optimized</em> for systems that read and write <em>large blocks of data</em></p>
</blockquote>
"
"<p>I'm working through the RoR tutorial by Michael Hartl. Here's some code from SessionsHelper:</p>

<pre><code>module SessionsHelper                                                       
  def sign_in(user)                                                         
    cookies.permanent[:remember_token] = user.remember_token                
    self.current_user = user                                                
  end                                                                       

  def current_user=(user)                                                   
    @current_user = user                                                    
  end                                                                       

  def current_user                                                          
    @current_user ||= User.find_by_remember_token(cookies[:remember_token]) 
  end                                                                       

  def current_user?(user)                                                   
    user == current_user                                                    
  end                                                                       

  def signed_in?                                                            
    !current_user.nil?                                                      
  end                                                                       

  def sign_out                                                              
    self.current_user = nil                                                 
    cookies.delete(:remember_token)                                         
  end                                                                       

end   
</code></pre>

<p>There are a number of things I don't understand from this code.</p>

<ul>
<li>In the method <code>current_user?</code>, is <code>current_user</code> a variable or is it an invocation of the method <code>current_user</code>?</li>
</ul>

<p>I don't understand how to determine the value of <code>current_user</code> in this context.</p>

<ul>
<li>In the method <code>current_user</code>, <code>@current_user</code> is an instance variable. What is it an instance variable of (i.e. what class?)?</li>
</ul>

<p>If you look under the <code>sign_in(user)</code> method, you can see that <code>self.current_user</code> is assigned the value of the object <code>user</code>. But (assuming self is of the class UsersController because <code>UsersController &lt; ApplicationController</code> and in the definition of <code>ApplicationController</code> there is a line that include <code>SessionsHelper</code>) there is no definition of an instance variable <code>current_user</code> for the <code>self</code> object.</p>

<ul>
<li>How come in <code>current_user=</code> we use the <code>@current_user</code> but in <code>current_user?</code> we just use <code>current_user</code>?</li>
</ul>

<p>I've done h the prerequisite searching on StackOverflow but haven't found a good explanation for all these differences. A big part of what I'm trying to learn is when to use <code>@current_user</code>, <code>current_user</code>, <code>:current_user</code>. I'm most familiar with C, C++, PHP, Java, JavaScript. If there are analogues to these languages, it would help me understand better what's going on.</p>
","2988","","<p>Just to complement the other answers:</p>

<blockquote>
  <p>In the method <code>current_user</code>, <code>@current_user</code> is an instance variable. What is it an instance variable <em>of</em> (i.e. what class?)?</p>
</blockquote>

<p>Instance variables don't belong to classes. They belong to instances, that's why they are called <em>instance variables</em>. They always belong to <code>self</code>, i.e. whichever object the receiver of the message is.</p>

<p>Instance variables spring into existence magically, the first time they are assigned, they aren't declared anywhere.</p>
"
"<p>Edit: Just to clarify, I didn't intend to suggest it might be impossible to write an IDE for dynamic languages. /edit</p>

<p>In my specific experience I'm thinking about years of conversations/comments about JavaScript, many of them on stack, but every now and then somebody says this, that the reason JS doesn't have a decent IDE is because dynamic types make it too hard to do.</p>

<p>I've thought about this in terms of writing a parser for JS and I don't understand where the types have anything to do with features like auto-complete or going straight to the definitions of stuff. If anything I would imagine scope and availability through passed params in a dynamic language would be considerably easier to establish without the type-checking concern. Especially in JS where the rules are actually pretty simple in most cases.</p>

<p>Until I started hearing people cite dynamic types as if it were a technical blocking issue, I just assumed that in most dynamic scripting languages you can run from a console, reduced verbosity and the ease of testing in a live execution environment makes debug easier, thereby reducing demand for IDEs.</p>

<p>So which is it? Something about static types that makes it easier to parse code for establishing scope/availability or am I right about reduced demand?</p>
","2988","","<p>IDEs were invented in dynamic languages. Refactoring was invented in dynamic languages. Automated Refactoring Tools were invented in dynamic languages.</p>

<p>Dynamic languages had graphical IDEs with builtin support for pair programming over the network when static languages didn't even have graphics. Or IDEs. Or networking support.</p>

<p>Smalltalk and Lisp IDEs still are ahead of what's available for Java or C#, for example. In fact, Eclipse <em>was</em> a Smalltalk IDE once!</p>

<p>The quality of an IDE is dependent on how much effort is spent making it good. The Smalltalk and Lisp communities spent decades of research, dozens of PhDs and truckloads of money building powerful IDEs. So did the Java community. (Actually, they spent truckloads of money buying Smalltalk companies …)</p>

<p>The JavaScript community didn't. That's the whole difference.</p>

<p>There are some things that need a different approach between the two. Take something like IntelliSense / Content Assist / Autocompletion, for example. Statically trying to determine what identifiers are in scope in a dynamic language is basically equivalent to solving the Halting Problem, so you can't do that. Your IDE needs to be dynamic as well, then it doesn't need to do static analysis, it can just look at the running code and <em>see</em> what identifiers are in scope.</p>
"
"<p>Although I've been writing Ruby for a while now, I'm always looking for ways to improve my style.</p>

<p>I've grown accustomed to a particularly short, succinct method of instantiating + appending to an array:</p>

<pre><code>ruby-1.9.3-p194 :001 &gt; (a ||= []) &lt;&lt; 1
 =&gt; [1] 
</code></pre>

<p>This particular syntax seems valid only when used in conjunction with Arrays, as my attempts to do this with other types return syntax errors.</p>

<pre><code>ruby-1.9.3-p194 :002 &gt; (i ||= 0) += 1
SyntaxError: (irb):2: syntax error, unexpected tOP_ASGN, expecting $end

(i ||= 0) += 1
            ^
from /usr/local/rvm/rubies/ruby-1.9.3-p194/bin/irb:16:in `&lt;main&gt;'
</code></pre>

<p>And, also with strings, although I pretty much expected this to not work given the prior experiment.</p>

<pre><code>ruby-1.9.3-p194 :003 &gt; (s ||= '') += 'TEST'
SyntaxError: (irb):3: syntax error, unexpected tOP_ASGN, expecting $end

(s ||= '') += 'TEST'
             ^
from /usr/local/rvm/rubies/ruby-1.9.3-p194/bin/irb:16:in `&lt;main&gt;'
</code></pre>

<p><strong>What is it here that differentiates an Array from other types when this syntax form is used?</strong></p>
","2988","","<p>In Ruby, like in most other languages as well, abbreviated assignments are simply syntactic sugar for the expanded form, i.e.</p>

<pre><code>a += b
</code></pre>

<p>is syntactic sugar for </p>

<pre><code>a = a + b
</code></pre>

<p>So, </p>

<pre><code>(i ||= 0) += 1
</code></pre>

<p>is syntactic sugar for </p>

<pre><code>(i ||= 0) = (i ||= 0) + 1
</code></pre>

<p>which is simply illegal.</p>

<p>This has absolutely nothing to do with arrays, as you can see here:</p>

<pre><code>(s ||= '') &lt;&lt; 'TEST' # works

(a ||= []) += [1]    # doesn't work
</code></pre>
"
"<p>I'm trying to create an internal DSL for Ruby, I haven't started coding it yet, and I'm wondering if this syntax is possible in Ruby:</p>

<pre><code>IF more_than: 1, :class smells to: ""god class"", sense: HIGH and has ""no temp attributes"", sense: 0.5
THEN problem ""some problem""
WITH ponderation percent: 10
</code></pre>

<p>And also:</p>

<pre><code>IF more_than: 1, :class
{
    smells to: 'god class', sense: 2
    and
    (
        has 'no temp attributes', sense: 0.5 or
        smells to: 'extensive coupling', sense: 1.5 or
        has 'refused parent Bequest', sense: HIGH or
        smells to: 'tradition breaker', sense: LOW
    )
    and
    (
        has :Method
        {
            smells to: 'extensive coupling', sense: 1.5
        }
    )
}
THEN
{ 
    problem ""abusive conceptualization""
}
WITH
{
    ponderation percent: 10
}
</code></pre>

<p><strong>UPDATE:</strong>
:D I'm still defining the DSL's requirements, such is my starting point, I'm considering either a custom parser or Ruby. What would you say is a better idea, to create a custom parser for it or use Ruby?</p>
","2988","","<p>This is not possible. The problem is with these constructs:</p>

<pre><code>:class to
</code></pre>

<p>You cannot pass arguments to a symbol, only to methods.</p>
"
"<p>I noticed some interesting use of <code>||=</code> as below -</p>

<h3>Code 1</h3>

<pre><code>array_1 ||= begin
    (1..5).to_a.map {|el| el*10}
end
puts array_1.to_s # [10,20,30,40,50]
</code></pre>

<p>So I executed its following modified version -</p>

<h3>Code 2</h3>

<pre><code>array_2 ||= def some_method
    (1..5).to_a.map {|el| el*10}
end
puts array_2 # prints nothing
puts array_2.class # NilClass
puts some_method.to_s # [10,20,30,40,50]
</code></pre>

<ol>
<li>Why does <code>array_2</code> gets initialised to <code>nil</code>?</li>
<li>Is it possible to invoke <code>some_method</code> using <code>array_2</code> object? how?</li>
</ol>

<h3>UPDATE</h3>

<p>This is what I did for question 2</p>

<pre><code>array_2 ||= ""We've got #{def some_method;(1..5).to_a.map {|el| el*10};end;array_2.send(:some_method)}""
puts array_2 # We've got [10, 20, 30, 40, 50]
</code></pre>
","2988","","<p>The return value of a method definition expression (<code>def</code>) is implementation-defined. Most Ruby implementations simply return <code>nil</code> from a <code>def</code> expression, but Rubinius, for example, returns the compiled code of the method wrapped up in a <code>CompiledMethod</code> object.</p>
"
"<p>I am using Ruby on Rails v3.2.2. In a module I am trying to ""dynamically"" open a class so to add to it a Ruby on Rails ""scope method"" that makes use of a local variable, this way:</p>

<pre><code>module MyModule
  extend ActiveSupport::Concern

  included do
    # Note: The `CLASS_NAME` is not the class where `MyModule` is included. That
    # is, for instance, if the including class of `MyModule` is `Article` then
    # the `CLASS_NAME` is `User`.
    CLASS_NAME           = self.get_class_name.constantize # =&gt; User
    counter_cache_column = self.get_counter_cache          # =&gt; ""counter_count""

    class CLASS_NAME
      def self.order_by_counter
        order(""#{counter_cache_column} DESC"")
      end
    end
  end
end
</code></pre>

<p>If I run the above code, I get the following error:</p>

<pre><code>NameError
undefined local variable or method `counter_cache_column' for #&lt;Class:0x0000010775c558&gt;
</code></pre>

<p>It happens because the <code>counter_cache_column</code> in not called in the context of the module. How should I properly state the <code>order_by_counter</code> scope method? </p>

<hr>

<p><em>Bonus</em>: What do you advice about the above ""so dynamic"" implementation?</p>
","2988","","<p><code>counter_cache_column</code> is a local variable. Local variable are local to the scope they are defined in (that's why they are called local variables).</p>

<p>In this case, the scope is the block passed to <code>included</code>.</p>

<p>The class definition and the method definition create a new empty scope. Only blocks create nested scopes, so, you need to use a block to defined your method. Thankfully, there is a way to do so: by passing a block to <code>define_method</code>:</p>

<pre><code>module MyModule
  extend ActiveSupport::Concern

  included do
    klass                = get_class_name.constantize # =&gt; User
    counter_cache_column = get_counter_cache          # =&gt; ""counter_count""

    klass.define_singleton_method(:order_by_counter) {
      order(""#{counter_cache_column} DESC"")
    }
  end
end
</code></pre>

<p>I made some other style improvements:</p>

<ul>
<li><code>self</code> is the implicit receiver in Ruby, there is no need to specify it</li>
<li><code>CLASS_NAME</code> is misleading: it doesn't contain the name of the class, it contains the class <em>itself</em></li>
<li>also, I don't see why it would need to be a constant</li>
</ul>
"
"<p>How would I loop over every instance variable ""@anything"" in a controller? I dont want to loop over one, I want to loop over them as a collection. Ideally scoped to the ones my controller method defines.</p>
","2988","","<p>You can use <code>instance_variables</code> and <code>instance_variable_get</code>, e.g. like so:</p>

<pre><code>@foo = 'Foo'
@bar = 'Bar'

instance_variables # =&gt; [:@foo, :@bar]

instance_variables.map(&amp;method(:instance_variable_get))
# =&gt; ['Foo, 'Bar']
</code></pre>

<blockquote>
  <p>Ideally scoped to the ones my controller method defines.</p>
</blockquote>

<p>Instance variables are scoped to instances, not methods. That's why they are called instance variables. And they aren't defined by methods, in fact, they aren't defined <em>at all</em>: they just spring into existence the first time they are assigned.</p>
"
"<p>What strings can be a method name for Ruby? I particularly want to know in what way a non word character can be part of a method name. Please give an exhaustive set of rules/lists.</p>

<p><strong>Edit</strong>
Phrogz' answers to the question that Josh Lee links has a link to the following page, but that is from several years ago, and is outdated. For example, <code>Proc#()</code> is missing. Does anyone know of an updated one?</p>

<p><img src=""http://i.stack.imgur.com/govqf.png"" alt=""enter image description here""></p>
","2988","","<p>Any sequence of Unicode characters is a valid method name. For example:</p>

<pre><code>class Test
  define_method :'    ???    _    µµµµ . . . ' do puts 'Hello' end
end

Test.instance_methods
# =&gt; [:'    ???    _    µµµµ . . . ']

Test.new.send :'    ???    _    µµµµ . . . '
# Hello
</code></pre>
"
"<p>Here's a simple example:</p>

<pre><code>def abc
    puts 'abc'
end

class Foo
    def self.bar
        abc
    end
end

Foo.bar
</code></pre>

<p>This breaks because <code>abc</code> is undefined inside <code>Foo.bar</code>. Is there a way to tell the class to ""inherit"" the local binding to make the above work? I'm basically trying to create a simple namespace for the ""bar"" method.</p>

<p>My first attempt was to subclass from the current eigenclass (<code>class Foo &lt; (class &lt;&lt; self; self; end)</code>) but you can't subclass a virtual class. Also, while I could explicitly pass in the binding and use eval inside, but that's not what I'm looking for.</p>
","2988","","<blockquote>
  <p>This breaks because <code>abc</code> is undefined inside <code>Foo.bar</code>.</p>
</blockquote>

<p>No, it doesn't. <code>abc</code> is implicitly defined as a private instance method of <code>Object</code> and since a class IS-A <code>Object</code>, you can call it just fine. The code you posted should work as-is, and indeed <em>does</em> work for me.</p>
"
"<p>I have a class that represents a collection. I included the <code>Enumerable</code> module into it and defined the method <code>#each</code>, so that I get all its methods.</p>

<p>But the problem is that <code>Enumerable</code>'s methods don't keep the same class. So, for example, if my class is named <code>Collection</code>, and if I do <code>Collection#select</code>, I would like that the result's class is also <code>Collection</code> (instead of <code>Array</code>). Is there a way how to achieve this?</p>
","2988","","<p>Unfortunately, Ruby's Collection Operations are not type-preserving. Every collection operation always returns an <code>Array</code>.</p>

<p>For collections like <code>Set</code>s or <code>Tree</code>s, this is merely annoying, because you need to always convert them back into the type you want to have. But for example for an infinite lazy stream of all prime numbers, this is catastrophic: your program will either hang or run out of memory trying to construct an infinitely large <code>Array</code>.</p>

<p>Most Collection APIs either eliminate duplicate code or are type-preserving, but not both. E.g. .NET's Collection API mostly eliminates duplicate code, but it always returns the same type: <code>IEnumerable</code> (equivalent to Ruby's <code>Enumerator</code>). Smalltalk's Collection API is type-preserving, but it achieves this by duplicating all Collection Operations in every Collection type.</p>

<p>The only Collection API which is type-preserving yet eliminates duplication is Scala's. It achieves this by introducing the new concept of <em>Collection Builders</em>, which know how to efficiently construct a Collection of a specific type. The Collection Operations are implemented in terms of Collection Builders, and only the Collection Builders need to be duplicated … but those are specific to every Collection anyway.</p>

<p>If you want type-preserving Collection Operations in Ruby, you need to either duplicate all Collection Operations in your own Collection (which would be limited to your own code), or redesign the entire Collection API to use Builders (which would require a major redesign of not only your own code but also the existing Collections including every third-party Collection ever written).</p>

<p>It's clear that the second approach is at least impractical if not impossible. The first approach also has its problems, though: Collection Operations are <em>expected</em> to return <code>Array</code>s, violating that expectation may break other people's code!</p>

<p>You can take an approach similar to Ruby 2.0's lazy collection operations: you could add a new method <code>preserve_type</code> to your API which returns a proxy object with type-preserving Collection Operations. That way, the departure from the standard API is clearly marked in the code:</p>

<pre><code>c.select …               # always returns an Array

c.preserve_type.select … # returns whatever the type of c is
</code></pre>

<p>Something like:</p>

<pre><code>class Hash
  def preserve_type
    TypePreservingHash.new(self)
  end
end

class TypePreservingHash
  def initialize(original)
    @original = original
  end

  def map(*args, &amp;block)
    Hash[@original.map(*args, &amp;block)
    # You may want to do something more efficient
  end
end
</code></pre>
"
"<p>I am wandering if it is OK to use ruby's implicit return value when using <code>[]=</code> method </p>

<p><code>[]=</code> uses <code>rb_hash_aset</code> and it is returning <code>val</code> - <a href=""http://www.ruby-doc.org/core-1.9.3/Hash.html#method-i-5B-5D-3D"" rel=""nofollow"">http://www.ruby-doc.org/core-1.9.3/Hash.html#method-i-5B-5D-3D</a></p>

<p>here is a little code to demonstrate what I mean:</p>

<pre><code>require 'benchmark'
CACHE = {}
def uncached_method(key)
    warn ""uncached""
    rand(100)
end
def cached(key)
  CACHE[key] || (CACHE[key] = uncached_method(key))
end
def longer_cached(key)
  return CACHE[key] if CACHE[key]
  CACHE[key] = uncached_method(key)
  CACHE[key]
end

Benchmark.bm(7) do |x|
    y = rand(10000)
    cached(y)
    x.report(""shorter:"") { 10000000.times do cached(y) end }
    x.report(""longer:"") { 10000000.times do longer_cached(y) end }
end
</code></pre>

<p>of course <code>longer_cached</code> is slower because it does two hash lookups to return cached value, but when you read it line by line it makes more sense then the <code>cached</code> method.</p>

<p>I think using implicit returns is one of the things that makes ruby awesome, but I have always questioned their use when setting values.</p>

<p>So my question is: would you use implicit return from <code>(hash[key] = val)</code>?</p>
","2988","","<p>Just because nobody mentioned it so far: you are not relying on the return value of <code>Hash#[]=</code>. That return value gets ignored anyway:</p>

<pre><code>class ReturnFortyTwo
  def []=(*)
    return 42
  end
end

r = ReturnFortyTwo.new

r[23] = 'This is the value that is going to be returned, not 42'
# =&gt; 'This is the value that is going to be returned, not 42'
</code></pre>

<p>In Ruby, assignment expressions <em>always</em> evaluate to the value that is being assigned. No exception. That is guaranteed by the Language Specification. So, I don't see anything wrong with relying on that.</p>
"
"<p>What command opens Ruby's REPL?</p>

<p>In Python, you simply open <code>python</code> without any arguments.</p>
","2988","","<p>There are several REPLs for Ruby.</p>

<p>The standard library ships with a REPL called <em>IRb</em> (for <em>Interactive Ruby</em>), which installs a program named <code>irb</code>, but since it is just a Ruby library, it can also be invoked from Ruby code and not just from the shell. On <a href=""http://Rubini.us/"">Rubinius</a>, IRb can also be invoked by just calling the <code>rbx</code> program without arguments, just like in CPython.</p>

<p>There is also a very nice REPL called <a href=""http://PryREPL.Org/""><em>Pry</em></a>, which installs a program named <code>pry</code>, but since it is just a Ruby library, it can also be invoked from Ruby code and not just from the shell.</p>

<p><a href=""http://JRuby.Org/"">JRuby</a> comes with an additional REPL called <em>JIRb Swing</em>, which is invoked by calling the <code>jirb_swing</code> program.</p>

<p>The <a href=""http://NetBeans.Org/"">NetBeans</a> Ruby Plugin also comes with a REPL.</p>
"
"<p>I tried the following:</p>

<pre><code>require ""socket""

class IRC
def initialize(server, port=6667, user='ruby-bot')
    @server = server
    @port = port
    @user = user
end

def connect!
    @s = TCPSocket.open(@server, @port) #connect
    raise ""Couldn't connect to #{@server}:#{@port}"" unless @s #error handling
    @s.puts ""USER #{@user} +B :IRC Ruby Bot"" #set modes etc
end 

def nick(nick=nil)
    @s.puts ""NICK #{@nick}""
end

def join(channel)
    @s.puts ""JOIN #{channel}""
end
end
</code></pre>

<p>And then:</p>

<pre><code>#!/usr/bin/ruby
require './irc.rb'

print 'Server: '
server = gets
print 'Port (6667): '
port = gets

if port.match(/^\n/)
port = '6667'
end

bot = IRC.new(server, port)
bot.nick 'fbot1830'
bot.join '#myowntestchannel'
</code></pre>

<p>And I get the following error:</p>

<pre><code>./irc.rb:17:in `nick': private method `puts' called for nil:NilClass (NoMethodError) from ./bot.rb:14
</code></pre>

<p>It's my first attempt to write a custom class in ruby, please be patient, I hope my error isn't too trivial ;)</p>
","2988","","<p><code>@s</code> is initialized in the <code>connect!</code> method, but that method is never called, therefore <code>@s</code> evaluates to <code>nil</code> in the <code>nick</code> method.</p>
"
"<p>I was reading about Singletons in Ruby. I never really had the need to use them before, but I got curious and decided to look them up, to see if I should've used them in the past, or maybe  I could use them in the future if I knew <em>what</em> they are used for.</p>

<p>The only times I can think of to use this is:</p>

<ul>
<li><strong>?</strong> When I need to have a special object. Example: ""smart"" <code>Hash</code> object, that acts like a normal Ruby hash with a few additional quirks.</li>
<li>When I want to make it so only one instance of a class can exist.</li>
</ul>

<p>However, I am not really sure I had the need for either of the above.</p>
","2988","","<p>You use singleton classes all the time in Ruby. In fact, every object has a singleton class. (Note: for performance reasons, singleton classes are actually only created when you first access them, but that's a performance optimization. Semantically, every time you try to look at a singleton class, it will be there.)</p>

<p>So called ""class methods"", for example, don't actually exist in Ruby. They are just regular instance methods of the class object's singleton class. (It's just so much easier to say ""class method"" instead.)</p>

<p>Everytime you define a method with the <code>def foo.bar</code> syntax, you are adding a method to the singleton class of <code>foo</code>.</p>
"
"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/569694/count-duplicate-elements-in-ruby-array"">count duplicate elements in ruby array</a>  </p>
</blockquote>



<p>I just started learning ruby and I wish to achieve something like this.
Let say I have an array </p>

<pre><code>[""student"", ""student"", ""teacher"", ""teacher"", ""teacher""]
</code></pre>

<p>What I'm trying to do is to count the number of student and teacher and store it into a hash, so that i can get </p>

<pre><code>{:student= &gt; 2, :teacher=&gt; 3}
</code></pre>

<p>Could someone give me some kind of direction on how to do this?</p>
","2988","","<p>This particular problem is a great example of how choosing the right algorithm, but even more importantly the right <em>data structure</em> can massively simplify the solution. In fact, in this particular case, choosing the right data structure will make the algorithm so trivial that it basically completely vanishes: the data structure already <em>is</em> the answer.</p>

<p>The data structure I am talking about is a <code>Multiset</code>: a <code>Multiset</code> is like a <code>Set</code>, except it doesn't store only unique items, instead it stores a count of how often each item is in the <code>Multiset</code>. Basically, a <code>Set</code> tells you whether a particular item is in the <code>Set</code> <em>at all</em>, a <code>Multiset</code> in addition also tells you <em>how often</em> that particular item is in the <code>Multiset</code>.</p>

<p>Unfortunately, there is no <code>Multiset</code> implementation in the Ruby core library or standard library, but there are a couple of implementations floating around the web.</p>

<p>You literally just have to construct a <code>Multiset</code> from your <code>Array</code>. Here's an example:</p>

<pre><code>require 'multiset'

ary = [""student"", ""student"", ""teacher"", ""teacher"", ""teacher""]

print Multiset[*ary]
</code></pre>

<p>Yes, that's all there is to it. This prints:</p>

<pre><code>#2 ""student""
#3 ""teacher""
</code></pre>

<p>And that's it. Example, using <a href=""https://GitHub.Com/Josh/Multimap/"" rel=""nofollow"">https://GitHub.Com/Josh/Multimap/</a>:</p>

<pre><code>require 'multiset'

histogram = Multiset.new(*ary)
# =&gt; #&lt;Multiset: {""student"", ""student"", ""teacher"", ""teacher"", ""teacher""}&gt;

histogram.multiplicity('teacher')
# =&gt; 3
</code></pre>

<p>Example, using <a href=""http://maraigue.hhiro.net/multiset/index-en.php"" rel=""nofollow"">http://maraigue.hhiro.net/multiset/index-en.php</a>:</p>

<pre><code>require 'multiset'

histogram = Multiset[*ary]
# =&gt; #&lt;Multiset:#2 'student', #3 'teacher'&gt;
</code></pre>

<p>Another possibility is to use a <code>Hash</code>, which basically just means that instead of the <code>Multiset</code> taking care of the element counting for you, you have to do it yourself:</p>

<pre><code>histogram = ary.inject(Hash.new(0)) {|hsh, item| hsh.tap { hsh[item] += 1 }}
print histogram
# { ""student"" =&gt; 2, ""teacher"" =&gt; 3 }
</code></pre>

<p>But you can have that easier if instead of counting yourself, you use <code>Enumerable#group_by</code> to group the elements by themselves and then map the groupings to their sizes. Lastly, convert back to a <code>Hash</code>:</p>

<pre><code>Identity = -&gt;x { x }

print Hash[[ary.group_by(&amp;Identity).map {|n, ns| [n, ns.size] }]
# { ""student"" =&gt; 2, ""teacher"" =&gt; 3 }
</code></pre>
"
"<p>I have a Rails app with several models with the same structure:</p>

<pre><code>class Item1 &lt; ActiveRecord::Base
  WIDTH = 100
  HEIGHT = 100
  has_attached_file :image, styles: {original: ""#{WIDTH}x#{HEIGHT}""}
  validates_attachment :image, :presence =&gt; true
end


class Item2 &lt; ActiveRecord::Base
  WIDTH = 200
  HEIGHT = 200
  has_attached_file :image, styles: {original: ""#{WIDTH}x#{HEIGHT}""}
  validates_attachment :image, :presence =&gt; true
end
</code></pre>

<p>The actual code is more complicated but that's enough for simplicity.</p>

<p>I think I can put the common part of the code in one place and then use it in all models.</p>

<p>Here is what comes to my mind:</p>

<pre><code>class Item1 &lt; ActiveRecord::Base
  WIDTH = 100
  HEIGHT = 100
  extend CommonItem
end

module CommonItem
  has_attached_file :image, styles: {original: ""#{WIDTH}x#{HEIGHT}""}
  validates_attachment :image, :presence =&gt; true
end
</code></pre>

<p>Obviously it doesn't work for two reasons:</p>

<ol>
<li><code>CommonItem</code> has no idea about class methods I invoke.</li>
<li><code>WIDTH</code> and <code>HEIGHT</code> constants are looked up in <code>CommonItem</code> instead of <code>Item1</code>.</li>
</ol>

<p>I tried to use <code>include</code> instead of <code>extend</code>, some ways of <code>class_eval</code> and class inheritance, but none work.</p>

<p>It seems I am missing something obvious. Please tell me what.</p>
","2988","","<p>In Ruby, the construct to use to extract repeated code into a single unit is a <em>method</em>:</p>

<pre><code>class Model
  def self.model_method
    p __method__
  end

  private

  def self.item
    p self::WIDTH, self::HEIGHT
    model_method
  end
end

class Item1 &lt; Model
  WIDTH = 100
  HEIGHT = 100
  item
end

class Item2 &lt; Model
  WIDTH = 200
  HEIGHT = 200
  item
end
</code></pre>
"
"<p>I have a class and a module which have the same names:</p>



<pre class=""lang-rb prettyprint-override""><code>module Pushover
  def configure
    ..
  end
end

module MyModule
  class Pushover
    def blah
      Pushover.configure
    end
  end
end
</code></pre>

<p>This doesn't work because the <code>Pushover.configure</code> call directs to the containing class. Now, an obvious fix would be to rename the class. However, the Module is from a gem and the class conforms to a naming convention required in a DSL. So ideally they should both stay the same. I could also create a second helper class and call via that, but that all seems a little hacky. My preferred solution would be to directly reference the module method. </p>

<p>All the existing questions around this area seem to be disambiguating in the opposite direction - i.e. they want to get the class reference not the module.</p>

<p>Is there any way for me to inform Ruby that I mean the module rather than the class when I specify <code>Pushover</code>?</p>
","2988","","<p>If you don't want to look up the constant relative to the current scope, just use an absolute path:</p>

<pre><code>::Pushover.configure
</code></pre>
"
"<p>I have this ruby script that generates a hash and saves it to a file.</p>

<p>Sometimes the file doesn't exist or is empty, so I always check the existence of it first. Then I load the old values into my hash and try to save again. I've been struggling with this for a long time now. This is a sample:</p>

<pre><code>newAppName = ARGV[0]
newApp = Hash.new
newApp[""url""] = ARGV[1]
newApp[""ports""] = ARGV[2].to_i

apps = Hash.new { |h, k| h[k] = Hash.new }
# apps[""test""] = {""url"" =&gt; ""www.test.com"", ""ports"" =&gt; 3 }

appsFile = '/home/test/data/apps'

if File.exists?(appsFile)
  apps = Marshal.load File.read(appsFile)
else
  puts ""Inserting first app into list...""
end

apps[newAppName] = newApp

serialisedApps = Marshal.dump(apps) # This line is where I get the error

File.open(appsFile, 'w') {|f| f.write(serialisedApps) }
</code></pre>

<p>Now I get this error:</p>

<pre><code>script.rb:53:in `dump': can't dump hash with default proc (TypeError)`
</code></pre>

<p>What does it mean? Is my hash wrong? How do I fix it?</p>

<p>I tried doing it manually with irb and it was working fine, though I tested on a Mac and this script is running in Linux. They should not behave different, right?</p>
","2988","","<p>Ruby doesn't have a <code>Marshal</code> format for code, only for data. You cannot marshal <code>Proc</code>s or lambdas.</p>

<p>Your <code>apps</code> hash has a <code>default_proc</code>, because </p>

<pre><code>hsh = Hash.new { some_block }
</code></pre>

<p>is more or less the same as </p>

<pre><code>hsh = {}
hsh.default_proc = -&gt;{ some_block }
</code></pre>

<p>IOW: your <code>apps</code> hash contains code, and code cannot marshalled.</p>
"
"<p>I just started learn Erlang, and really like their list comprehension syntax, for example:</p>

<pre><code>Weather = [{toronto, rain}, {montreal, storms}, {london, fog}, {paris, sun}, {boston, fog}, {vancounver, snow}].                          
FoggyPlaces = [X || {X, fog} &lt;- Weather].
</code></pre>

<p>In this case, FoggyPlaces will evaluate to london and boston.</p>

<p>What's the best way to do this in Ruby?</p>

<p>For example, an Array like (very common, I believe):</p>

<pre><code> weather = [{city: 'toronto', weather: :rain}, {city: 'montreal', weather: :storms}, {city: 'london', weather: :fog}, {city: 'paris', weather: :sun}, {city: 'boston', weather: :fog}, {city: 'vancounver', weather: :snow}]
</code></pre>

<p>The best I got 'til now is:</p>

<pre><code>weather.collect {|w| w[:city] if w[:weather] == :fog }.compact
</code></pre>

<p>But in this case, I have to call the compact to remove <code>nil</code> values, and the example itself is not that readable as erlang.</p>

<p>And even more: in erlang example, both <code>city</code> and <code>weather</code> are atoms. I don't even know how to get something that makes sense and looks good like this in ruby.</p>

<p>Thanks in advance.</p>
","2988","","<p>First off, your data structures aren't equivalent. The equivalent Ruby data structure to your Erlang example would be more like</p>

<pre><code>weather = [[:toronto, :rain], [:montreal, :storms], [:london, :fog], 
            [:paris, :sun], [:boston, :fog], [:vancouver, :snow]]
</code></pre>

<p>Secondly, yes, Ruby doesn't have list comprehensions nor pattern matching. So, the example <em>will</em> probably be more complex. Your list comprehension first filters all foggy cities, then projects the name. Let's do the same in Ruby:</p>

<pre><code>weather.select {|_, weather| weather == :fog }.map(&amp;:first)
# =&gt; [:london, :boston]
</code></pre>

<p>However, Ruby is centered around objects, but you are using abstract data types. With a more object-oriented data abstraction, the code would probably look more like</p>

<pre><code>weather.select(&amp;:foggy?).map(&amp;:city)
</code></pre>

<p>which isn't too bad, is it?</p>
"
"<p>I'd like to know how many <strong>return</strong> arguments method_missing is being called for in Ruby.  I would like to change the functions behaviour depending on how many return arguments it is supposed to produce. I'm looking for something equivalent to <code>nargout</code> in Matlab.  XXX in this example:</p>

<pre><code>class Test
  def method_missing(method_id, *args)
    n_return_arguments = XXX
    if n_return_arguments == 1
      return 5
    else
      return 10, 20
    end
  end
end

t = Test.new.missing_method # t should now be 5

t1, t2 = Test.new.missing_method # t1 should now be 10 and t2 should now be 20
</code></pre>
","2988","","<p>There's no such thing as multiple return values in Ruby. Methods always return exactly one value. Never more. Never less.</p>
"
"<p>In python there is a <code>pass</code> keyword for defining an empty function, condition, loop, ...
Is there something similar for Ruby?</p>

<p>Python Example:</p>

<pre><code>def some_function():
    # do nothing
    pass
</code></pre>
","2988","","<p>No, there is no such thing in Ruby. If you want an empty block, method, module, class etc., just write an empty block:</p>

<pre><code>def some_method
end
</code></pre>

<p>That's it.</p>

<p>In Python, every block is <em>required</em> to contain <em>at least</em> one statement, that's why you need a ""fake"" no-op statement. Ruby doesn't <em>have</em> statements, it only has expressions, and it is perfectly legal for a block to contain zero expressions.</p>
"
"<p>A bit confused about Ruby's <code>initialize</code> method.</p>

<p>Why does not it return my value, as other methods do?</p>

<pre><code>class SomeClass

  attr_reader :val

  def initialize a, b, c
    @val = a + b + c
    @val
  end

end

val = SomeClass.new 1, 2, 3
</code></pre>

<p>I need <code>val</code> to be <code>6</code> not initialized object.</p>

<p>Of course i can use <code>val.val</code> but that's another story.</p>
","2988","","<p><code>initialize</code> is a method just like any other method. <em>Of course</em>, it returns the return value, just like any other method.</p>

<p>What gave you the impression that it doesn't? You never call <code>initialize</code> in the code sample you provided, so how do you know what value it returns?</p>

<pre><code>class SomeClass
  attr_reader :val

  def initialize a, b, c
    @val = a + b + c
    @val
  end

end

obj = SomeClass.allocate
val = obj.send :initialize, 1, 2, 3
# =&gt; 6
</code></pre>
"
"<p>In Scala, arrays are always passed by reference, call-by-name, right?</p>

<p>So, </p>

<pre><code>def fun(ar: Array[Int]) = {}
</code></pre>

<p>is equal to</p>

<pre><code>def fun(ar: =&gt; Array[Int]) = {}
</code></pre>

<p>thanks.</p>
","2988","","<blockquote>
  <p>In Scala, arrays are always passed by reference, call-by-name, right?</p>
</blockquote>

<p>No. In Scala, just like in Java, C, C++ (by default), C# (by default), Smalltalk, Ruby, Python and pretty much every other object-oriented language ever created, arguments are passed by value.</p>

<p>You <em>can</em> explicitly declare a by-name-parameter, and then (but <em>only then</em>) the arguments corresponding to that parameter will be passed by name. Scala will <em>never</em> pass by reference.</p>

<blockquote>
  <p>So, </p>

<pre><code>def fun(ar: Array[Int]) = {}
</code></pre>
  
  <p>is equal to</p>

<pre><code>def fun(ar: =&gt; Array[Int]) = {}
</code></pre>
</blockquote>

<p>No, it is not. In the first case, the array (or rather the pointer to the array) will be passed by value, and in the second case by name. In neither case will it be passed by reference.</p>
"
"<p>I have a boolean value to check if it is true, then set a local variable. How do I refactor this so it is more Ruby-ish?</p>

<pre><code>if firm.inflection_point
  inflection_point = 1
else
  inflection_point = 0
end
</code></pre>
","2988","","<p>In Ruby, <code>if</code> is an expression. There's no need to assign to a variable inside the <code>then</code> and <code>else</code> branches, just return the value you want and assign the variable to the result of the <code>if expression</code>:</p>

<pre><code>inflection_point = if firm.inflection_point
  1
else
  0
end
</code></pre>

<p>In simple cases like this, it's more readable to write the entire expression on a single line:</p>

<pre><code>inflection_point = if firm.inflection_point then 1 else 0 end
</code></pre>

<p>You can also use the conditional operator, which I personally find to be much less readable:</p>

<pre><code>inflection_point = firm.inflection_point ? 1 : 0
</code></pre>
"
"<p>I've been working with Ruby and many of it's web frameworks for about a year now.</p>

<p>I am aware that rails is built largely using 'meta-programming'. And while I have tried to inspect the source, often not all of it makes sense.</p>

<p>I tried to publish a small gem, and used a few methods like <code>_send</code>, <code>instance_eval</code>, <code>class_eval</code> which was cool but as a general principle we are told to stay far away from <code>eval</code> in it's various forms.</p>

<p>Other programming constructs I know where I can use. Like data serialization in applications or where I can / should implement the Builder Pattern when making web apps.</p>

<p>My question is in two parts:</p>

<ol>
<li>What are the common or apt use cases / programming problems for which meta-programming is used?</li>
<li>When using the meta-programming bits of ruby, what are the best practices that I should follow?</li>
</ol>
","2988","","<p>Have you ever used <code>attr_accessor</code>? Then you have used metaprogramming: it is a method that generates methods.</p>
"
"<p>I have a backup script, which I take all the objects in a directory, and then with each slice of 30,000 I back them up to S3. 
My questions is now that I have over 100,000 objects, I would like to skip to slice number 2 but I am unsure how to do that. 
So the beginning of the loop looks like - </p>

<pre><code>directory.files.each_slice(30000) do |file_array|

directory.files.each_slice(30000).skip(1) 
</code></pre>

<p>Any thoughts? </p>

<p>Thanks! </p>
","2988","","<p>Your hypothetical <code>skip</code> method is called <a href=""http://Ruby-Doc.Org/core-1.9.3/Enumerable.html#method-i-drop"" rel=""nofollow""><code>drop</code></a>:</p>

<pre><code>directory.files.each_slice(30000).drop(1).each do |file_array|
</code></pre>

<p>Note that like <em>all</em> <code>Enumerable</code> methods, it is not type-preserving, it always returns an <code>Array</code>, even though you are calling it on an <code>Enumerator</code>. Since you only have about 4 slices at the moment, that's not going to be a problem, but if you had millions of slices, that would eat up your memory pretty quickly.</p>
"
"<p>Does anything special happen to objects when there are no variables pointing to them any more? Apart from being eligible for garbage collection, that is.</p>

<p>For example, currently, IO objects automatically close <a href=""http://www.ruby-doc.org/core-1.9.3/IO.html#method-i-close"" rel=""nofollow"">when they're garbage collected</a>, if they haven't done so already. Even if you wanted to change this behavior, there isn't any way of changing it so that automatic closing occurs when no more variables point at the object, is there?</p>

<p>(My question is a slight simplification: <a href=""http://www.ruby-doc.org/stdlib-1.9.3/libdoc/weakref/rdoc/WeakRef.html"" rel=""nofollow"">WeakRef</a> allows variables to point to objects and for them to be targets of garbage collection. Also, it's possible to access objects that don't have any variables pointing to them, for some implementations of Ruby, by using ObjectSpace. And regarding IO objects, there's things like <code>IO.open(&amp;block)</code> that automatically close IO objects after the block has been executed.)</p>
","2988","","<p>No, there's no hook or special method that gets executed when there are no more references to an object.</p>

<p>The specific cases you mention are:</p>

<ul>
<li><p>automatic closing of resources on garbage collection: this is achieved with a <em>finalizer</em></p></li>
<li><p>automatic closing of resources at the end of a block: no magic here</p>

<pre><code>class IO
  def self.open(*args)
    yield file_handle = new(*args)
  ensure
    file_handle.close
  end
end
</code></pre></li>
<li><p><code>WeakRef</code>: there <em>is</em> magic here :-) In YARV, <code>lib/weakref.rb</code> uses <code>::ObjectSpace::WeakMap</code>, which provides the weak reference semantics. JRuby implements <code>WeakMap</code> using Java's native weak reference semantics. IOW: this <em>cannot</em> actually be expressed in Ruby, it has to be provided by the runtime system.</p></li>
</ul>
"
"<p>In the code below, I have given a default value for the accountNumber for when it is not called with a particular value but that value is not recognized by the code, why is that?</p>

<pre><code>class BankAccount
   CONST=0100

   def interest_rate
        @@interest_rate = 0.2
   end

   def accountNumber
        @accountNumber
   end

   def accountNumber=(value = 10)
        puts value
        @accountNumber = value
   end
end
</code></pre>

<p>When I call the accountNumber= method as below with no arg, I expect it to puts ""10"" but it is not putting out the default value...</p>

<pre><code>account1 = BankAccount.new()
puts account1.accountNumber=()
</code></pre>
","2988","","<p>You are assigning an empty expression <code>()</code> to the setter method. In Ruby, empty expressions evaluate to <code>nil</code> (what else would they evaluate to anyway?), therefore you are assigning <code>nil</code>.</p>
"
"<p>I'm programming a computer graphics application in Scala which uses a RGB class to return the color at a point in the image. As you can imagine, the function which return the color RGB object is called many times.</p>

<pre><code>class RGB(val red: Int, val green: Int, val blue: Int) { }
</code></pre>

<p>There is a function getPixelRGB which is often used as follows</p>

<pre><code>val color:RGB = getPixelRGB(image, x, y)
</code></pre>

<p>The problem is that I may call this function a million times which will then, I believe, generate a million unique RGB object instances, thats a very unattractive situation. There are some thoughts I have about this:</p>

<ol>
<li><p>getPixelRGB could potentially create an infinite number of objects if it was called an infinite number of times, but it need not be an infinite number of objects as there are only a maximum of 255 * 255 * 255 possible combinations which can be produced for RGB. So the number of objects created ""should"" be finite. This function could be adjusted to use a object pool where if it is to return the same color as some time before it could return the same pooled object instance for that color.</p></li>
<li><p>I could encode this RGB as a Int. An Int would have less memory overhead than a normal Scala/Java object, Java objects have extra memory overhead. Since a Scala Int type is 4 bytes wide, the first 3 bytes could store the RGB value. Only returning an Int rather than a RGB from the getPixelRGB method would be less memory overhead I assume. However how to do this while still having the convince of the RGB class?</p></li>
<li><p>Supposedly, and they are, short lived objects and I have read that the garbage collector should re-claim them quickly. However I'm still worried about it. How does the GC know that I'm throwing it away quickly? So confusing.</p></li>
</ol>

<p>So in general, my question is how to make this getPixelRGB more memory friendly? also should I even be worried about it?</p>
","2988","","<blockquote>
  <p>Supposedly, and they are, short lived objects and I have read that the garbage collector should re-claim them quickly. However I'm still worried about it. How does the GC know that I'm throwing it away quickly? So confusing.</p>
</blockquote>

<p>It doesn't know it. It <em>assumes</em> it. This is called the <em>generational hypothesis</em> on which all generational garbage collectors are built:</p>

<ul>
<li>almost all objects die young</li>
<li>almost no old objects contain references to new objects</li>
</ul>

<p>Objects which satisfy this hypothesis are <em>very</em> cheap (even cheaper, in fact, than <code>malloc</code> and <code>free</code> in languages like C), only objects which violate one or both assumptions are expensive.</p>
"
"<p>In the initial drafting of a new gem I need to leave some method implementations empty ( to be implemented in the next )</p>

<p>Therefore, I would like to signal a ""not implemented yet"" exception</p>

<p>I'm wondering if there is a <em>best practice</em> or <em>standard conventions</em> specific to the Ruby language to code this kind of placeholder / exception. </p>

<p>i.e: something like: </p>

<ul>
<li><a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/UnsupportedOperationException.html"">UnsupportedOperationException</a> in Java</li>
<li><a href=""http://msdn.microsoft.com/en-us/library/system.notimplementedexception.aspx"">NotImplementedException</a> in .Net Framework (C#)</li>
</ul>
","2988","","<p>Ruby will raise a <code>NoMethodError</code> for you anyway, when calling a non-existent method. That should be good enough for most cases.</p>
"
"<p>In ruby you can do:</p>

<p><code>do_stuff if foo == bar</code></p>

<p>Technically speaking, is there a <code>&amp;block</code> to capture the block of code before <code>if</code>? how does this stuff work?</p>
","2988","","<p>They aren't methods, they are keywords. Their behavior is defined by the language specification and not restricted by the rules of the language. They can do anything they want.</p>
"
"<p>I have a simple calendar feed that shows when employees are on vacation and I can subscribe to the calendar and see who is off.  This works fine with apple products (Mac OS X and iOS) but no beans with outlook or Android.  I think I might need to use one of the iCal ruby library's but would prefer not to if not needed.  Microsoft Outlook 2007 says the feed is not a valid calendar file when using the link:       </p>

<pre><code>www.nameofwebsite.com/time_off_feed/#ofbranch/time_off_feed.ics
</code></pre>

<p>for example:</p>

<pre><code>www.nameofwebsite.com/time_off_feed/350/time_off_feed.ics
</code></pre>

<p>day_offs_controller.rb</p>

<pre><code>def time_off_feed
  @users=User.where(""current_branch=?"", params[:id])
  respond_to do |format|
    format.ics
  end
end
</code></pre>

<p>days_off.ics.erb</p>

<pre><code>BEGIN:VCALENDAR
METHOD:PUBLISH
VERSION:2.0
PRODID:-//Website Name/Time-Off//EN
X-WR-CALNAME:Website Name
CALSCALE:GERGORIAN
&lt;% @users.each do |user| %&gt;
&lt;% user.day_offs.each do |day_off| %&gt;
BEGIN:VEVENT
UID:&lt;%=day_off.id%&gt;
SUMMARY:&lt;%= day_off.user.name.titleize %&gt; | &lt;%= day_off.do_type %&gt;
DTSTART:&lt;%= day_off.start_date.strftime(""%Y%m%d"") %&gt;
&lt;% end_day=day_off.end_date + 1.day %&gt;
DTEND:&lt;%= end_day.strftime(""%Y%m%d"") %&gt;
END:VEVENT
&lt;%end%&gt;
&lt;% end %&gt;
END:VCALENDAR
</code></pre>

<p>I don't think there is an issue with routes but here it is in case.</p>

<p>routes.rb</p>

<pre><code>match '/time_off_feed/:id/time_off_feed', to: 'day_offs#time_off_feed', :as =&gt; 'time_off_feed_path'
</code></pre>

<p>I've looked at ri_cal and iCalendar gems but they seemed like a little much to generate a view but perhaps they are worth it.  Any help or pointers would be much appreciated.</p>

<p>Bonus points for simplifying the route :)</p>

<p>Thanks,</p>

<p>Jason</p>

<p>Update:  Added the following to the view to make it work, per the directions below.</p>

<pre><code>DTSTAMP:&lt;%=Time.now.strftime(""%Y%m%dT%H%M%SZ"")%&gt;
</code></pre>

<p>Works perfect on Outlook 2010, I'll double check tomorrow and make sure it works on Outlook 2007. </p>

<p>Update:  no go on outlook 2007.  Still searching for solution</p>
","2988","","<p>Outlook is right: your <code>VEVENT</code> component is missing the mandatory <code>DTSTAMP</code> property.</p>
"
"<pre><code>x = StandardError.new(:hello)
y = StandardError.new(:hello)
x == y # =&gt; true
x === y # =&gt; true

begin
  raise x
rescue x
  puts ""ok"" # gets printed
end

begin
  raise x
rescue y
  puts ""ok"" # doesn't get printed
end
</code></pre>

<p>Why isn't the second ""ok"" printed? I can't figure it out. I've read <a href=""http://www.amp.carboni.ca/blog/p/Ruby-Did-You-Know-That-2-Exception-Handling"" rel=""nofollow"">here</a> that ruby uses the <code>===</code> operator to match exceptions to rescue clauses, but that's ostensibly not the case.</p>

<p>I'm using Ruby 1.9.3</p>

<p>EDIT: So it seems like that after doing <code>raise x</code>, <code>x == y</code> and <code>x === y</code> no longer hold. It seems to because <code>x</code> and <code>y</code> <a href=""http://www.ruby-doc.org/core-1.9.3/Exception.html#method-i-3D-3D"" rel=""nofollow"">no longer have the same backtrace</a>.</p>
","2988","","<p>I think that's a bug, or rather an underspecification of Ruby 1.9. Note that Ruby 2.0 raises  a </p>

<pre><code>TypeError: class or module required for rescue clause
</code></pre>

<p>on lines 8 and 14.</p>

<p>Note that the <code>raise</code> doesn't necessarily do what you think it does, either. When you <code>raise</code> an object, you don't actually raise <em>that</em> object, you raise a <em>new</em> object which is constructed from the object you passed according to these simple rules:</p>

<ul>
<li>if the object responds to <code>exception</code>, call <code>exception</code> on the object and raise the return value</li>
<li>if the object is a subclass of <code>Exception</code>, call <code>new</code> and raise the return value</li>
<li>otherwise fail</li>
<li>also fail if the return value of any of the above methods is not an instance of <code>Exception</code></li>
</ul>

<p>So, you are <em>not</em> actually raising <code>x</code>, you are raising <code>x.exception</code>. According to the documentation of <code>Exception#exception</code> <code>x.exception</code> is <code>x</code>, though.</p>
"
"<p>I have an encrypted file <code>file = File.new(""encrypted.file"", ""r"")</code> that I would like to require in Ruby after decryption. I do not want to decrypt, save, require, and delete the file.</p>

<p>What I do now is:</p>

<pre><code>str=""""
file.each do |line|
     str+=line
end#do

str = doSomeDecryption(str)
</code></pre>

<p>I would like to <code>require str</code> in some way. Any ideas? <code>eval(str)</code> is not an option; it really has to be 'requireable'.</p>
","2988","","<p>There are various libraries which do this already:</p>

<ul>
<li>RubyGems patches <code>require</code> to automatically activate Gems</li>
<li>OCRA, Crate and friends patch <code>require</code> to load from a <code>TEXT</code> column in an encrypted SQLite database etc.</li>
</ul>

<p>You can look there for how they approach this problem.</p>

<p>Ruby 2.0 will have an API that allows you to register handlers to hook into the <code>require</code> process.</p>
"
"<p>I am trying to write a closure in Ruby. This is the code written in Python:</p>

<pre><code>def counter():
    x = 0
    def increment(y):
        nonlocal x
        x += y
        print(x)
    return increment
</code></pre>

<p>Is there a ""nonlocal"" equivalent in Ruby so I can access and make changes to the variable x from inside increment?</p>
","2988","","<p>The <code>nonlocal</code> keyword tells Python which variables to capture. In Ruby, you don't need such a keyword: all variables are captured unless explicitly mentioned otherwise.</p>

<p>So, the Ruby equivalent to your Python code translates almost directly:</p>

<pre><code>counter = -&gt; {
  x = 0
  -&gt;y {
    x += y
    puts x
  }
}

i = counter.()

i.(2)
# 2

i.(3)
# 5
</code></pre>

<p>It would probably be more idiomatic to use a method for <code>counter</code>, though:</p>

<pre><code>def counter
  x = 0
  -&gt;y {
    x += y
    puts x
  }
end

i = counter

i.(2)
# 2

i.(3)
# 5
</code></pre>
"
"<p>I'm not sure why this isn't working in rails, however it works in IRB. </p>

<p>I'm doing something like:  </p>

<pre><code>response = response.first
</code></pre>

<p><code>response</code> is an array with hashes.</p>

<p>In irb, when trying to simulate this, it works fine.</p>

<p>e.g:</p>

<pre><code>&gt;&gt; a = [{'a'=&gt;3}]
=&gt; [{""a""=&gt;3}]    
&gt;&gt; a = a.first   
=&gt; {""a""=&gt;3}      
</code></pre>

<p>However in debugger mode, in cucumber (in my step definition), i get this when doing the above statement: </p>

<p>e.g:</p>

<pre><code>(rdb:1) response = response.first
NoMethodError Exception: undefined method `first' for nil:NilClass
(rdb:1) response
nil
</code></pre>

<p>Then, <code>response</code> gets set to <code>nil</code>. </p>

<p>Why are the behaviors different?   </p>
","2988","","<p>Are you 100% sure that <code>response</code> is a <em>local variable</em>? If <code>response</code> were a <em>method</em> that would explain the behavior you are seeing: the <em>local variable</em> <code>response</code> shadows the <em>method</em> <code>response</code>. If you want to call the <code>response</code> method you need to explicitly tell Ruby that want the method by either supplying an argument list or a receiver:</p>

<pre><code>response = response().first
# or
response = self.response.first
</code></pre>
"
"<p>I have an app that includes modules into core Classes for adding client customizations.</p>

<p>I'm finding that class_eval is a good way to override methods in the core Class, but sometimes I would like to avoid re-writing the entire method, and just defer to the original method.</p>

<p>For example, if I have a method called <code>account_balance</code>, it would be nice to do something like this in my module (i.e. the module that gets included into the Class):</p>

<pre><code>module CustomClient
  def self.included base
    base.class_eval do
      def account_balance
        send_alert_email if balance &lt; min
        super # Then this would just defer the rest of the logic defined in the original class
      end
    end
  end
end
</code></pre>

<p>But using class_eval seems to take the <code>super</code> method out of the lookup path.</p>

<p>Does anyone know how to work around this?</p>

<p>Thanks!</p>
","2988","","<blockquote>
  <p>I'm finding that instance_eval is a good way to override methods in the core Class,</p>
</blockquote>

<p>You are not overriding. You are <em>overwriting</em> aka monkeypatching.</p>

<blockquote>
  <p>but sometimes I would like to avoid re-writing the entire method, and just defer to the original method.</p>
</blockquote>

<p>You can't defer to the original method. There is no original method. You overwrote it.</p>

<blockquote>
  <p>But using instance_eval seems to take the <code>super</code> method out of the lookup path.</p>
</blockquote>

<p>There is no inheritance in your example. <code>super</code> doesn't even come into play.</p>

<p>See this answer for possible solutions and alternatives: <a href=""http://stackoverflow.com/questions/4470108/when-monkey-patching-a-method-can-you-call-the-overridden-method-from-the-new-i/4471202#4471202"">When monkey patching a method, can you call the overridden method from the new implementation</a></p>
"
"<p>Considering that everything in Ruby is an object and we can open irb and type things like <code>4.class</code> and <code>""Text"".class</code> to see from which class an object is, why do <code>if.class</code> and <code>unless.class</code> give no return value?</p>
","2988","","<blockquote>
  <p>Considering that everything in Ruby is an object</p>
</blockquote>

<p>That depends on your definition of ""<em>object</em>"" and every-""<em>thing</em>"". ""<em>Object</em>"" can mean ""<em>entity that can be manipulated by the program</em>"" (which I will call <strong>object</strong> from now on), or ""<em>value that is a member of the object system</em>"" (which I will call <code>Object</code> from now on).</p>

<p>In Ruby, everything that can be manipulated by the program (i.e. every <strong>object</strong>) is also an <code>Object</code>, i.e. an instance of a class. This is unlike Java, for example, where <em>primitives</em> can be manipulated by the program (i.e. are <strong>objects</strong> in that sense of the word), but aren't <code>Objects</code>. In Ruby, this distinction doesn't exist: every <strong>object</strong> is an <code>Object</code> and every <code>Object</code> is also an <strong>object</strong>.</p>

<p>However, there are <em>things</em> in the language, which <em>cannot</em> be manipulated by the program and which aren't instances of a class, i.e. they are neither <strong>object</strong> s nor <code>Object</code>s. These are, for example, methods, variables, syntax, parameter lists, argument lists, keywords.</p>

<p>Note: you can use Ruby's reflection API to give you an object that <em>represents</em> a method or a parameter list, but that object is only a proxy, it is not the real thing.</p>

<p>So, when we say ""<em>everything is an object</em>"", what we really mean is that ""every <strong>object</strong> is an <code>Object</code>"", i.e. that everything which can be manipulated by the program is also a member of the object system, or in other words, there are no values outside of the object system (unlike primitives in Java). We do <em>not</em> mean that everything that exists in the language can also be manipulated at runtime by the program.</p>

<blockquote>
  <p>why do <code>if.class</code> and <code>unless.class</code> give no return value</p>
</blockquote>

<p>Well, first off, even <em>if</em> <code>if</code> <em>were</em> an object, those don't do what you think they do: when you say something like <code>foo</code> in Ruby, it means either ""dereference the local variable <code>foo</code>"" or ""call the method <code>foo</code> with <code>self</code> as the implicit receiver and no argument list"". So, </p>

<pre><code>if.class
</code></pre>

<p>would either give you the class of the object <em>referenced</em> by the local variable <code>if</code> or the class of the object <em>returned</em> by the method <code>if</code>, but <em>never</em> the class of <code>if</code> itself.</p>

<p>But the <code>if</code> control flow keyword isn't an object, anyway (neither an <strong>object</strong> nor an <code>Object</code>) because keywords and control flow aren't objects in Ruby.</p>

<p>In the book <a href=""http://rads.stackoverflow.com/amzn/click/0596516177""><em>The Ruby Programming Language</em> by Matz and David Flanagan</a> it says on page 2:</p>

<blockquote>
  <p>every value is an object</p>
</blockquote>

<p>Note, it doesn't say every-<em>thing</em>, only every <em>value</em>.</p>

<p>See also the question <a href=""http://StackOverflow.Com/a/8385471/2988/"">Is variable is object in ruby?</a></p>
"
"<p>I tried finding how <code>File.open()</code> was implemented but I couldn't find it while grepping around in the code I got from <a href=""https://github.com/ruby/ruby"" rel=""nofollow"">https://github.com/ruby/ruby</a></p>
","2988","","<p>There is no <code>File::open</code>, it is inherited from <code>IO</code>. So, you need to look for <code>IO::open</code>.</p>

<p>In general, I recommend using the Rubinius source code for this. It is much better organized and much better documented than YARV's source code, and most importantly: it is mostly written in Ruby, whereas in YARV the entire language, the entire core library and significant portions of the standard library are written in C.</p>

<p>That being said, <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/io.rb#L211-225"" rel=""nofollow"">the implementation of <code>IO::open</code> is completely and utterly boring</a>. It just does the obvious thing:</p>

<pre><code>def self.open(*args)
  io = new(*args)

  return io unless block_given?

  begin
    yield io
  ensure
    begin
      io.close unless io.closed?
    rescue StandardError
      # nothing, just swallow them.
    end
  end
end
</code></pre>
"
"<p>Let's suppose that we class SomeClass.</p>

<pre><code>class SomeClass &lt; SomeClassThatAssignAttributesOnInitialization
  attr_accessor :group
  attr_accessor :name
end
</code></pre>

<p>And array of it instances</p>

<pre><code>arr = [SomeClass.new(group:0, name:'one'),
       SomeClass.new(group:0, name:'two'),
       SomeClass.new(group:1, name:'three'),
       SomeClass.new(group:1, name:'four')]
</code></pre>

<p>I need to put first element of each group into array.</p>

<p>Now it works next way</p>

<pre><code>current_group = nil
first_elements = arr.map do |instance|
  if current_group != instance.group
    current_group = instance.group
    instance.name
  end
end
</code></pre>

<p>This works fine but i think that there is some kind of ""Ruby"" way to do it.</p>

<p>Can anybody help me?</p>

<p>Thanks</p>
","2988","","<pre><code>SomeClass = Struct.new(:group, :name)

arr = [
  SomeClass.new(0, 'one'),
  SomeClass.new(0, 'two'),
  SomeClass.new(1, 'three'),
  SomeClass.new(1, 'four')
]

arr.group_by(&amp;:group).values.map(&amp;:first)
# =&gt; [
#   #&lt;struct SomeClass group=0, name=""one""&gt;,
#   #&lt;struct SomeClass group=1, name=""three""&gt;
# ]
</code></pre>

<p>Or to get just the names:</p>

<pre><code>arr.group_by(&amp;:group).values.map(&amp;:first).map(&amp;:name)
</code></pre>
"
"<p>I have an rspec testsuite that I use to test our internal and public facing API. Usually all I have to do to test the service is setup my parameters (e.g test urls) and from there the tests connect to the required service and do their thing. </p>

<p>My question is, how to I get ruby to honor my host file entries? In this specific scenario I'm trying to hit our pre-live servers, which use the same urls as our live environment, but obviously are on an entirely different IP cluster. </p>
","2988","","<p>Unless you are doing some very low-level stuff, Ruby will <em>not</em> perform DNS name resolution by itself, it will simply call the appropriate OS API. So, you need to figure out how to configure your operating system to use a local hosts file.</p>
"
"<p>I have an instance variable <code>@foo</code> and I want to write some code so that I get string <code>'foo'</code></p>

<p>any hint?</p>
","2988","","<p>In Ruby, you can only manipulate objects. Variables (including instance variables) aren't objects.</p>

<p>Besides, what do you want your magic method to return in this case:</p>

<pre><code>foo = Object.new
bar = foo
@baz = bar
@qux = bar

magic_method(foo) # what should the return value be and how would it know?
</code></pre>
"
"<p>Following is the code I tried to run from the <code>Ruby Programming</code> Book
<a href=""http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_modules.html"" rel=""nofollow"">http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_modules.html</a></p>

<p>Why doesn't the <code>product</code> method give the right output?
I ran it with <code>irb test.rb</code>. And I am running <code>Ruby 1.9.3p194</code>. </p>

<pre class=""lang-ruby prettyprint-override""><code>module Inject
  def inject(n)
    each do |value|
      n = yield(n, value)
    end
    n
  end

  def sum(initial = 0)
    inject(initial) { |n, value| n + value }
  end

  def product(initial = 1)
    inject(initial) { |n, value| n * value }
  end
end

class Array
  include Inject
end

[1, 2, 3, 4, 5].sum            ## 15
[1, 2, 3, 4, 5].product        ## [[1], [2], [3], [4], [5]]
</code></pre>
","2988","","<p>By the way: in Ruby 2.0, there are two features which help you with both your problems.</p>

<p><code>Module#prepend</code> <em>prepends</em> a mixin to the inheritance chain, so that methods defined in the mixin <em>override</em> methods defined in the module/class it is being mixed into.</p>

<p><em>Refinements</em> allow lexically scoped monkeypatching.</p>

<p>Here they are in action (you can get a current build of YARV 2.0 via RVM or ruby-build easily):</p>

<pre><code>module Sum
  def sum(initial=0)
    inject(initial, :+)
  end
end

module ArrayWithSum
  refine Array do
    prepend Sum
  end
end

class Foo
  using ArrayWithSum

  p [1, 2, 3].sum
  # 6
end

p [1, 2, 3].sum
# NoMethodError: undefined method `sum' for [1, 2, 3]:Array

using ArrayWithSum
p [1, 2, 3].sum
# 6
</code></pre>
"
"<p>Is there a way to make all hashes that you deal with in Ruby On Rails a HashWithIndifferentAccess? There are so many times that I try to access a hash with a symbol instead of a string such as say for Model.attributes.</p>

<p>Thanks!</p>
","2988","","<pre><code>::Hash = HashWithIndifferentAccess
</code></pre>

<p>Very bad idea, though.</p>
"
"<p>I would like to use some sort of shorthand to express the following:</p>

<pre><code>stuff.map {|x| puts x}
</code></pre>

<p>to something like this:</p>

<pre><code>stuff.map {puts}
</code></pre>

<p>I cannot figure out the syntax. Can someone show me how to do this?</p>
","2988","","<p>First off: it doesn't make sense to use <code>map</code> here, since you are not doing a mapping operation, but a simple side-effecting iteration. That's <em>exactly</em> what <code>each</code> is for. Using <code>map</code> is only confusing to future maintainers (including yourself).</p>

<p><code>each</code> and <code>map</code> take a block. You can use the unary prefix <code>&amp;</code> operator to turn any object that responds to <code>to_proc</code> into a block. Thankfully, <code>Method</code>s <em>do</em> respond to <code>to_proc</code>, so you can pass the method you want to call directly:</p>

<pre><code>stuff.each(&amp;method(:puts))
</code></pre>

<p>However, if <code>stuff</code> is an <code>Array</code>, there is an even easier way, because <code>puts</code> special-cases <code>Array</code>s to do exactly what you are doing. So, your code is 100% equivalent to just </p>

<pre><code>puts stuff
</code></pre>
"
"<p>Suppose I want to have the following specs:</p>

<pre><code>it { should allow_value(""git://host.xz/path/to/repo.git/"").for(:url) }
it { should allow_value(""git://user@host.xz/path/to/repo.git/"").for(:url) }
it { should allow_value(""git://host.xz:123/path/to/repo.git/"").for(:url) }
it { should allow_value(""git://user@host.xz:123/path/to/repo.git/"").for(:url) }
...
</code></pre>

<p>It would be easier and more compact if I could write:</p>

<pre><code>""git://{user@,}host.xz{:123,}/path/to/repo.git"".expand.each do |p|
  it { should allow_value(p).for(:url) }
end
</code></pre>

<p>Or even better:</p>

<pre><code>""{git,ssh,http,https,rsync}://[user@]host.xz[:123]/path/to/repo.git[/]"".expand.each do |p|
  it { should allow_value(p).for(:url) }
end
</code></pre>

<p>What are some ways to achieve this in Ruby?</p>

<p><strong>Edit</strong>
The first thing I tried was <a href=""https://rubygems.org/gems/bracecomp"" rel=""nofollow"">bracecomp</a>, but I couldn't get it to work in 1.9.3.</p>

<pre><code>[1] pry(main)&gt; require 'bracecomp'
[2] pry(main)&gt; 'server-{a,b}-{07..10}'.expand
TypeError: scan() yielded Symbol (must be Array[2])
from bracecomp.y:66:in `scan'
</code></pre>
","2988","","<p>How about</p>

<pre><code>%w[git ssh http https rsync].product(['user@', nil], [':123', nil]).each do |protocol, user, port|
  it { should allow_value(""#{protocol}://#{user}host.xz#{port}/path/to/repo.git"").for(:url) }
end
</code></pre>

<p>No dependencies on external libraries and understandable to every Ruby developer.</p>

<p>Although this does scream for a spec helper or a custom matcher, I think.</p>
"
"<p>Can anyone please tell me which algorithm is internally used by ruby to remove duplicates from an ruby array using <code>Array#uniq</code> method?</p>
","2988","","<p>This depends on <em>which</em> ""internals"" you are talking about. There are 7 production-ready Ruby implementations in current use, and the Ruby Language Specification does not prescribe any particular algorithm. So, it really depends on the implementation.</p>

<p>E.g., this is <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/array19.rb#L625-L641"" rel=""nofollow"">the implementation Rubinius uses</a>:</p>

<pre><code>Rubinius.check_frozen

if block_given?
  im = Rubinius::IdentityMap.from(self, &amp;block)
else
  im = Rubinius::IdentityMap.from(self)
end
return if im.size == size

array = im.to_array
@tuple = array.tuple
@start = array.start
@total = array.total

self
</code></pre>

<p>And this is <a href=""https://GitHub.Com/JRuby/JRuby/blob/master/src/org/jruby/RubyArray.java#L3136-L3157"" rel=""nofollow"">the one from JRuby</a>:</p>

<pre><code>RubyHash hash = makeHash();
if (realLength == hash.size()) return makeShared();

RubyArray result = new RubyArray(context.runtime, getMetaClass(), hash.size()); 

int j = 0;
try {
    for (int i = 0; i &lt; realLength; i++) {
        IRubyObject v = elt(i);
        if (hash.fastDelete(v)) result.values[j++] = v;
    }
} catch (ArrayIndexOutOfBoundsException aioob) {
    concurrentModification();
}
result.realLength = j;
return result;
</code></pre>
"
"<p>I am parsing simple string inputs, like: ""Hello world! :-)"" and translate them to an array which splits the words and might do some modifications. I have produced the following code which is working, but it seems not be very Ruby idiomatic. How can I improve it?</p>

<pre><code>$mapping = Hash[
  ""X"" =&gt; ""CODE_X"",
  ""Y"" =&gt; ""CODE_Y"",
  ""Z"" =&gt; ""CODE_Z"",
]

def translate(input)
  result = []
  tmp = """"
  input.each_char do |c|
    if $mapping.has_key?(c)
      if result != """"
        result &lt;&lt; ""normal "" + tmp
        tmp = """"
      end
      result &lt;&lt; ""special "" + $mapping[c]
    else
      tmp += c
    end
  end
  if tmp != """"
    result &lt;&lt; ""normal "" + tmp
  end
  return result
end
</code></pre>

<p>It seems to contain unnecessary many lines making it hard to read. What does it do, maybe an example helps:</p>

<pre><code>translate(""HelloXworldYZ"") =&gt;
[""normal Hello"", ""special CODE_X"", ""normal world"", ""special CODE_Y"", ""special CODE_Z""]
</code></pre>

<p>Or in English: Parse the String characterwise and concatenate the characters again. Add them to the result array as ""normal "" + string until (1) there are no more characters or (2) there is a special character (mapping), them add the string to the array AND add the special character as ""special "" + mapping and continue with the rest of the string.</p>
","2988","","<p>How about</p>

<pre><code>$mapping = { 'X' =&gt; 'CODE_X', 'Y' =&gt; 'CODE_Y', 'Z' =&gt; 'CODE_Z' }

def translate(input)
  input.
    split(/([#{$mapping.keys.map(&amp;Regexp.method(:escape)).join}])/).
    each_slice(2).
    map {|normal, special| [unless normal.empty? then ""normal #{normal}"" end, ""special #{$mapping[special]}""] }.
    map(&amp;:compact).
    flatten
end

translate(""HelloXworldYZ"")
# =&gt; [""normal Hello"", ""special CODE_X"", ""normal world"", ""special CODE_Y"", ""special CODE_Z""]
</code></pre>

<p>Note that your plain English description and your test case don't match up. From your plain English description, the result should be <code>[""normal Hello"", ""special CODE_X"", ""normal world"", ""special CODE_Y"", ""normal"", ""special CODE_Z""]</code>. In that case, it's even simpler:</p>

<pre><code>$mapping = { 'X' =&gt; 'CODE_X', 'Y' =&gt; 'CODE_Y', 'Z' =&gt; 'CODE_Z' }

def translate(input)
  input.
    split(/([#{$mapping.keys.map(&amp;Regexp.method(:escape)).join}])/).
    each_slice(2).
    map {|normal, special| [['normal', unless normal.empty? then normal end].compact.join(' '), ""special #{$mapping[special]}""] }.
    flatten
end

translate(""HelloXworldYZ"")
# =&gt; [""normal Hello"", ""special CODE_X"", ""normal world"", ""special CODE_Y"", ""normal"", ""special CODE_Z""]
</code></pre>

<p>But the <code>strscan</code> library may be a better choice.</p>
"
"<p>In Ruby, a set can be initialized by Set[1,2,3]
So can an array: Array[1,2,3]</p>

<p>Is it possible to write some code to do the same thing to my own classes?
Or it's just a language feature for only a few built-in classes?</p>
","2988","","<p>In Ruby, <code>foo[bar, baz]</code> is just syntactic sugar for <code>foo.[](bar, baz)</code>. All you need is a method named <code>[]</code>.</p>

<p>By the way: you just need to look at the documentation, e.g. for <a href=""http://Ruby-Doc.Org/stdlib-2.0/libdoc/set/rdoc/Set.html#method-c-5B-5D""><code>Set</code></a>:</p>

<blockquote>
  <h1><code>[](*ary)</code></h1>
  
  <p>Creates a new set containing the given objects.</p>
</blockquote>

<p>That's the documentation right there.</p>

<p>Basically, all you need is</p>

<pre><code>class Foo
  def self.[](*args, &amp;block)
    new(*args, &amp;block)
  end
end
</code></pre>
"
"<p>How would I create a hash with numbers as keys under the new ruby syntax?  for example <code>{abc: 123}</code> creates a hash with the symbol <code>abc</code> as the key, but <code>{123: 'abc' }</code> throws an exception (as does <code>{123.to_sym: 'abc'}</code>.  The exception I see is <code>syntax error, unexpected '}', expecting $end</code>.  I can do  <code>hash[123] = 'abc'</code> or  <code>Hash[123, 200]</code>, and could do <code>{123 =&gt; 'abc'}</code> under the old syntax but don't see how to create <code>{123: 'abc'}</code> under the new JSON style syntax.</p>
","2988","","<p>You can't. The syntax is for keys which are <code>Symbol</code>s that are also valid Ruby identifiers. <code>123</code> is a <code>Fixnum</code>, not a <code>Symbol</code>, and even if it <em>were</em> a <code>Symbol</code>, it still wouldn't be a valid Ruby identifier.</p>
"
"<p>The following two lines produce the same output:</p>

<pre><code>1.9.3p327 :015 &gt; {:key=&gt;1234}.to_json
=&gt; ""{\""key\"":1234}"" 
1.9.3p327 :016 &gt; {""key""=&gt;1234}.to_json
=&gt; ""{\""key\"":1234}"" 
</code></pre>

<p>Which is the following json:</p>

<pre><code>{
  ""key"" : 1234
}
</code></pre>

<p>How can I get it to produce <code>""{key:1234}""</code>?</p>
","2988","","<p>The output you want to achieve is not JSON. It is illegal. It seems kind of obvious that the JSON library will produce JSON output not something which is not JSON.</p>

<p>If you want to output something which is not JSON you need to use a library which is not JSON. In this particular case, it looks like you made up the output format, so you'll probably have to write the library yourself.</p>
"
"<p>I'm new to Ruby and was reading <a href=""http://blog.bradcunningham.net/2012/04/ruby-for-c-developerthe-basics.html"" rel=""nofollow"">this post</a> comparing a mixin to a C# interface. What is unclear to me is whether or not a method from the mixin can be redefined in the class which implements it. </p>

<p>For example, if I put <code>include myMixin</code> — which has a method <code>toJSON</code> — in a class <code>MyClass</code>, can I redefine <code>toJSON</code> in <code>MyClass</code>, or am I stuck with the behavior defined in <code>myMixin</code>?</p>

<p>For anyone with further interest, is that blog post a good source of information? Is it reasonable to compare a Ruby mixin to a C# interface?</p>
","2988","","<p><code>include</code> makes the module the superclass of the class you are mixing it into. Obviously, you can override methods of a superclass in a subclass, that's just how subclassing works, not just in Ruby but in pretty much any other class-based OO language as well.</p>
"
"<p>So I really like this syntax in Lisp:</p>

<pre><code> (+ 1 1 2 3 5 8 13)
 =&gt; 33
</code></pre>

<p>I want to add a list of items in Ruby and would like to approximate this as best as possible.
Right now, my best solution involves an array and the collect/map method.</p>

<p>So:</p>

<pre><code>sum = 0; [1,1,2,3,5,8,13].collect { |n| sum += n }
</code></pre>

<p>BUT...</p>

<p>I would like to add methods to this which could return nil.</p>

<pre><code>sum = 0; [1, booking_fee, 8,13].collect { |n| n = 0 if n.nil?; sum += n }
</code></pre>

<p>And it would be really nice to do this, where all of the lines in the middle refer to methods that may return nil, but I can't exactly build an array in this manner. This is just an idea of what I want my syntax to look like.</p>

<pre><code>def total
  Array.new do
    booking_fee
    rental_charges
    internationalization_charges
    discounts
    wild_nights
  end.collect { |n| n = 0 if n.nil?; sum += n }
end
</code></pre>

<p>Any suggestions before I try to hack away and effectuate Greenspun's Rule? (Programming is indeed a compulsion.</p>
","2988","","<p>I really don't understand your question. If you want a method that works like <code>+</code> does in Lisp, i.e. takes an arbitrary number of arguments and is in prefix position rather than infix, that's trivial:</p>

<pre><code>def plus(*nums)
  nums.inject(:+)
end

plus 1, 1, 2, 3, 5, 8, 13 # =&gt; 33
</code></pre>

<p>If you want to get <em>really</em> fancy, you could override the unary prefix <code>+</code> operator for <code>Array</code>s:</p>

<pre><code>class Array
  def +@
    inject(:+)
  end
end

+[1, 1, 2, 3, 5, 8, 13] # =&gt; 33
</code></pre>

<p><strong>Please don't do that!</strong></p>

<p>I don't see how the rest of your question is related in any way to a Lisp-style addition operation.</p>

<p>If you want to remove <code>nil</code>s from an <code>Array</code>, there's <code>Array#compact</code> for that.</p>
"
"<p>Hello, I'd like to create new classes dynamically, using Java. I have 3 buttons with labels: 1, 2 and 3. Code is like:</p>

<pre><code>switch (button.getActionCommand()) {
  case 1:
    return new Listener1();
    break;
  case 2:
    return new Listener2();
    break;
  case 3;
    return new Listener3();
    break;
}
</code></pre>

<p>And it works but I'd like to make it shorter. Every new class will be different from the previous with last number, only. So is it possible to create classes dynamically like:</p>

<pre><code>return new Listener()+button.getActionListener();
</code></pre>

<p>I'm sure its possible, but how? Should I use one of Proxy classes or is there an easier way to achieve this?</p>
","2988","","<p>You didn't specify any language, so here is one way:</p>

<pre><code>const_get(""Listener#{button.action_command}"").new
</code></pre>

<p>However, I don't see why you would need to create classes dynamically for this. From what I understand, the <code>ListenerN</code> classes already exist and you just want to dynamically instantiate them?</p>

<p>If you <em>must</em> create classes dynamically, that's not a problem, either:</p>

<pre><code>const_set(""Listener#{button.action_command}"", Class.new)
</code></pre>
"
"<p>to write custom result of splat operator, one have to implement <code>to_a</code> method. Example for the String class:</p>

<pre><code>class String
  def to_a
    self.split //
  end
end

irb&gt; res = *'text'
=&gt; [""t"", ""e"", ""x"", ""t""]
</code></pre>

<p>But without the above monkeypatch, the String class does know nothing about <code>to_a</code> method:</p>

<pre><code>irb&gt; String.respond_to? :to_a
=&gt; false
</code></pre>

<p>So the question is, what method is called when applying splat operator on a standard ""unpatched"" String's object ?</p>

<pre><code>irb&gt; res = *'text'
=&gt; ['text']
</code></pre>
","2988","","<p>First off: calling <code>String.respond_to?(:to_a)</code> will <em>not</em> tell you whether a string <em>instance</em> responds to <code>to_a</code>, it will tell you whether the <code>String</code> <em>class</em> responds to <code>to_a</code>. If you want to know whether a string responds to <code>to_a</code>, you have to ask the string:</p>

<pre><code>'text'.respond_to?(:to_a) # =&gt; false
</code></pre>

<p>Or you can ask the <code>String</code> class whether it has a public instance method <code>to_a</code>:</p>

<pre><code>String.public_instance_methods.include?(:to_a) # =&gt; false
</code></pre>

<p>Now, the <em>reason</em> why <code>String</code>s don't respond to <code>to_a</code> is because it's not clear what you want: do you want an array of characters? Of glyphs? Of lines? Of codepoints? Of bytes?</p>

<pre><code>a = *'text'.chars      # =&gt; ['a', 'b', 'c']
a = *'text'.codepoints # =&gt; [116, 101, 120, 116]
a = *'text'.bytes      # =&gt; [116, 101, 120, 116]
a = *'text'.lines      # =&gt; ['text']
</code></pre>

<p>As to why the splat operator behaves the way you are seeing, that seems to be a corner case in the language specification. I am not even 100% sure that this is intended behavior. The specification for multiple assignments runs almost 4 pages, see section 11.4.2.4 of the Ruby Language Specification for details.</p>
"
"<p>So, I'm kind of wanting to do something similar to rspec / mocha's <code>mock</code>, but only for two objects, and not all of them.  This is what I have so far:</p>

<pre><code>def mock(obj, method_to_mock, value)
    obj.class &lt;&lt; obj do
        define_method(method_to_mock) do
            return value
        end
    end
end
</code></pre>

<p>I got the idea to write it like that from this post: <a href=""http://stackoverflow.com/a/185969/356849"">http://stackoverflow.com/a/185969/356849</a></p>

<p>So then I can do things like: </p>

<pre><code>mock(self.instantiated, :sections, sections)
</code></pre>

<p>and it would override the object I have stored in <code>self.instantiated</code>'s <code>sections</code> with my array of Section objects, <code>sections</code>. </p>

<p>The reason why I'm doing this, is because I'm storing a serialized and encrypted version of of an object, and I want to be able to unencrypt and unserialize the object, and then restore all the relationships such that I can view that object in my views, as if it were being read from the database. but that's not important, and most of it's done.</p>

<p>So, I want to be able to do this:</p>

<p><code>mock(&lt;Instance of object&gt;, :&lt;method of object that is going to be overridden, to avoid db access&gt;, &lt;the stuff to return when the overridden method is invoked)</code></p>

<p>CUrrently, I'm getting an error on the <code>obj.class &lt;&lt; obj do</code> line with this:</p>

<pre><code>NoMethodError: undefined method `obj' for #&lt;MyObject::Encrypted:0x7f190eebcd18&gt;
</code></pre>

<p>ideas?</p>

<hr>

<p>UPDATE</p>

<p>changed the second line to <code>class &lt;&lt; obj</code> which now infinite loops.</p>

<pre><code>from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/connection_adapters/abstract/connection_pool.rb:351:in `retrieve_connection_pool'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/connection_adapters/abstract/connection_pool.rb:351:in `retrieve_connection_pool'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/connection_adapters/abstract/connection_pool.rb:325:in `retrieve_connection'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/connection_adapters/abstract/connection_specification.rb:123:in `retrieve_connection'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/connection_adapters/abstract/connection_specification.rb:115:in `connection'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/base.rb:1305:in `columns'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/base.rb:1318:in `column_names'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/searchlogic-2.4.28/lib/searchlogic/named_scopes/ordering.rb:35:in `ordering_condition_details'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/searchlogic-2.4.28/lib/searchlogic/named_scopes/ordering.rb:26:in `method_missing'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/searchlogic-2.4.28/lib/searchlogic/named_scopes/or_conditions.rb:28:in `method_missing'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/activerecord-2.3.15/lib/active_record/base.rb:2002:in `method_missing_without_paginate'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/gems/will_paginate-2.3.16/lib/will_paginate/finder.rb:170:in `method_missing_without_attr_encrypted'
from /home/me/.rvm/gems/ruby-1.8.7-p371@project/bundler/gems/attr_encrypted-a4b25f01d137/lib/attr_encrypted/adapters/active_record.rb:50:in `method_missing'
from /home/me/Work/GravityLabs/project/app/models/proposal/encrypted.rb:119:in `mock'
from /home/me/Work/GravityLabs/project/app/models/proposal/encrypted.rb:79:in `instantiate'
from /home/me/Work/GravityLabs/project/app/models/proposal/encrypted.rb:58:in `each'
from /home/me/Work/GravityLabs/project/app/models/proposal/encrypted.rb:58:in `instantiate'
</code></pre>
","2988","","<pre><code>def mock(obj, method_to_mock, value=nil)
  obj.define_singleton_method(method_to_mock) do value end
end  
</code></pre>
"
"<p>Of course I realize all types <em>do</em> have a common ancestor, but what I mean is this:</p>

<p>In dynamically-typed languages, it is a common practice to have 'mixed' return types. A common case is a function which attempts to retrieve data from a database, then returns either an object (initialized with the found data) or FALSE (in the event no data was found).</p>

<p>A little pseudocode to demonstrate just such an anti-pattern:</p>

<pre><code>function getObjectFromDatabase(object_id) {
  if(result = db_fetch_object(""SELECT * FROM objects WHERE id = %d"", object_id) {
    return result
  } else {
    return FALSE
  }
}
</code></pre>

<p>If data is found for my object id, I get a DB record back as an object. If not, I get a boolean value. Then, of course, it is on me, the client, to handle multiple possible return types.</p>

<p>Is the only way to accomplish this in Scala to find a common ancestor for all possible return types and declare that as the return type in the signature?</p>

<pre><code>// Like so:
def getObjectFromDatabase(objectId: Int): Any = {
   val result = dbFetchObject(""SELECT * FROM objects WHERE id = %d"", object_id) 
   if(result) {
     return result
   } else {
     return false
  }
}
</code></pre>

<p>Or is it possible to annotate multiple possible return types? </p>

<p>(Note that I do not <em>hope</em> it is possible to do this, as I would prefer it to be enforced that function return types are as unambiguous as possible. It would come as a relief to me to learn that the language forbids ambiguous return types, which is more the reason I am asking.)</p>
","2988","","<p>What you are looking for is called a <em>tagged union</em>, <em>variant</em>, <em>variant record</em>, <em>discriminated union</em>, <em>disjoint union</em>, or <em>sum type</em>.</p>

<p>Combined with <em>product types</em>, they become <em>algebraic datatypes</em>.</p>

<p>Scala does not have direct support for algebraic datatypes, but it doesn't need to, because they can be easily modeled by inheritance. (Scala <em>does</em> have the <code>sealed</code> modifier to support <em>closed</em> ADTs.)</p>

<p>In your example, if you know that the return type is either <code>SomeType</code> or <code>SomeOtherType</code>, you can model it like this:</p>

<pre><code>sealed trait ReturnType

final case class SomeType extends ReturnType
final case class SomeOtherType extends ReturnType

def meth: ReturnType
</code></pre>

<p>If you don't know what the return types are, only that there are two of them, then you can model it similarly:</p>

<pre><code>sealed trait ReturnType[A, B]

final case class Type1[A, B](a: A) extends ReturnType[A, B]
final case class Type2[A, B](b: B) extends ReturnType[A, B]

def meth: ReturnType[A, B]
</code></pre>

<p>This is actually a well-known datatype called an <code>Either</code> (because it holds either an <code>A</code> or a <code>B</code>), and is present in Scala's standard library as <code>scala.util.Either</code>.</p>

<p>But in your specific case, there is a more specific type, called <code>Maybe</code> or <code>Option</code>, which encapsulates the idea that a value maybe exists or maybe not. It looks something like this:</p>

<pre><code>sealed trait Maybe[T]

case object None extends Maybe[Nothing]
final case class Just[T](value: T) extends Maybe[T]

def meth: Maybe[T]
</code></pre>

<p>Again, this is already provided by Scala as <code>scala.Option</code>.</p>

<p>The advantage of <code>Either</code> over <code>Option</code> is that it allows you to also return information in the failure case instead of only indicating that there is no value you can also say <em>why</em> there is no value. (By convention, the left side of the <code>Either</code> is the error, the right side is the ""useful"" value.)</p>

<p>The advantage of <code>Option</code> is that it is a monad. (Note: you can make <code>Either</code> a monad by biasing it either to the left or the right.)</p>
"
"<p>How can we achieve an ""in-place"" conversion to float of values of a hash? The motivation is not having to write bunch of code like this</p>

<pre><code>r['delivery_fee'] = r['delivery_fee'].to_f
r['delivery_free_over'] = r['delivery_free_over'].to_f
r['delivery_possible_over'] = r['delivery_possible_over'].to_f
r['delivery_range'] = r['delivery_range'].to_f
</code></pre>

<p>but rather</p>

<pre><code>to_f r['delivery_fee']
to_f r['delivery_free_over']
# ...
</code></pre>

<p>I did this, but it does not work the way intended.</p>

<pre><code>def to_f(s)
  s = s.to_f
end

data = ""1""
p data # =&gt; ""1""
to_f data
p data # =&gt; Still ""1"" and not float
</code></pre>
","2988","","<p>This is easy:</p>

<pre><code>h = { one: '1', two: '2' }

Hash[h.keys.zip(h.values.map(&amp;:to_f))]
# =&gt; { :one =&gt; 1.0, :two =&gt; 2.0 }

# or

Hash[h.map {|k, v| [k, v.to_f] }]
# =&gt; { :one =&gt; 1.0, :two =&gt; 2.0 }
</code></pre>

<p>Which one of the two to use is a matter of preference, really.</p>
"
"<p>I want to do this</p>

<pre><code>lol = Klass.new(values)

unless lol 
   print ""false""
end

lol.other_method  # it is not nil or false, it is a Klass instance!
</code></pre>

<p>But lol, in this case, is not nil or false, but an object who can act as a false based on some internal value. I have this alternative</p>

<pre><code>lol = Klass.new(values)

unless lol.to_bool
   print ""false""
end
</code></pre>

<p>But it is ugly IMHO.</p>

<p>I was thinking in extend the FalseClass or play with == but without success. Any Ideas?</p>
","2988","","<p>Unfortunately, this is not possible.</p>

<p>This is one of those annoying cases where Ruby is not object-oriented. In OO, it <em>must</em> be possible for one object to simulate another (in fact, depending on whom you ask, this is the very <em>definition</em> of OO – remember that OO came out of simulation), but it is not possible to build an object which simulates <code>false</code>.</p>

<p>This is because, in Ruby, conditional control structures are baked into the language and don't translate into message sends, whereas in other OO languages they are just regular message sends (or at least translate into message sends, just like <code>for</code> in Ruby translates into <code>each</code>). For example, in Smalltalk, Booleans are actually implemented using the Church encoding of Booleans you know from Lambda Calculus, and translated to Ruby they look a bit like this:</p>

<pre><code>class FalseClass
  def if(&amp;block)
    # do nothing
  end

  def if_then_else(then_lambda, else_lambda)
    else_lambda.()
  end

  def not
    true
  end

  def and(&amp;block)
    self
  end

  def or(&amp;block)
    block.()
  end
end
</code></pre>

<p>And <code>TrueClass</code> is just the mirror image:</p>

<pre><code>class TrueClass
  def if(&amp;block)
    block.()
  end

  def if_then_else(then_lambda, else_lambda)
    then_lambda.()
  end

  def not
    false
  end

  def and(&amp;block)
    block.()
  end

  def or(&amp;block)
    self
  end
end
</code></pre>

<p>And then, instead of something like</p>

<pre><code>if 2 &lt; 3 then foo end
if 2 &lt; 3 then bar else baz end
</code></pre>

<p>You would have</p>

<pre><code>(2 &lt; 3).if { foo }
(2 &lt; 3).if_then_else(-&gt; { bar }, -&gt; { baz })

# using the new keyword arguments in Ruby 2.0, it almost reads like Smalltalk:
class FalseClass
  def if(then: -&gt; {}, else: -&gt; {})
    else.()
  end
end

class TrueClass
  def if(then: -&gt; {}, else: -&gt; {})
    then.()
  end
end

(2 &lt; 3).if(then: -&gt; { bar }, else: { baz })
</code></pre>

<p>That way, you can easily create an object which simulates <code>false</code> simply by implementing the respective methods.</p>

<p>In other cases, where some object really absolutely <em>must</em> be an instance of a specific class and not just speak the correct protocol, Ruby provides an escape hatch. For example, if a method <em>really</em> requires an <code>Array</code> as an argument, then it will first try to call <code>to_ary</code> to at least give you a chance to convert your object into an <code>Array</code>. The same goes for <code>to_str</code>, <code>to_int</code>, <code>to_proc</code>, <code>to_float</code> etc. But there is no equivalent <code>to_bool</code> protocol.</p>
"
"<p>I'm trying to understand the method lookup chain for FalseClass. Since FalseClass has Object for an ancestor, shouldn't it also have access to the <code>new</code> method? </p>

<p>Has <code>new</code> been excluded from the lookup? Or do I misunderstand inheritance?</p>
","2988","","<p>See <a href=""http://Ruby-Doc.Org/core-1.9.3/Module.html#method-i-remove_method"" rel=""nofollow""><code>Module#remove_method</code></a> and <a href=""http://Ruby-Doc.Org/core-1.9.3/Module.html#method-i-undef_method"" rel=""nofollow""><code>Module#undef_method</code></a>. The C code in @Dave Newton's answer basically just calls the latter.</p>
"
"<p>I have such array in ruby (document language [even index] and number of words [odd index])</p>

<pre><code>words = [""en"",200,""ru"",""120"",""es"",140,""ru"",240]
</code></pre>

<p>Final result should look like:</p>

<pre><code>{""en""=&gt;200,""ru=&gt;360"",""es""=&gt;140}
</code></pre>
","2988","","<pre><code>words = ['en', 200, 'ru', 120, 'es', 140, 'ru', 240]

words.
 each_slice(2).
 each_with_object(Hash.new(0)) {|(lang, wordcount), acc| acc[lang] += wordcount }
</code></pre>
"
"<p>Hmm..can't yet read this yet..but does Ruby Array#assoc use linear search?</p>

<pre><code>rb_ary_assoc(VALUE ary, VALUE key)
{
    long i;
    VALUE v;

    for (i = 0; i &lt; RARRAY_LEN(ary); ++i) {
        v = rb_check_array_type(RARRAY_PTR(ary)[i]);
        if (!NIL_P(v) &amp;&amp; RARRAY_LEN(v) &gt; 0 &amp;&amp;
            rb_equal(RARRAY_PTR(v)[0], key))
            return v;
    }
    return Qnil;
}
</code></pre>
","2988","","<p>Personally, I find the Rubinius source code <em>much</em> easier to read than the YARV source code. (Actually, I find <em>all</em> other Ruby implementations' source code easier to read than YARV or MRI.)</p>

<p>This is <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/array.rb#L270-278"" rel=""nofollow"">the implementation of <code>Array#assoc</code> from Rubinius</a>:</p>

<pre><code>def assoc(obj)
  each do |x|
    if x.kind_of? Array and x.first == obj
      return x
    end
  end

  nil
end
</code></pre>

<p>So, yes it is easy to see that it indeed <em>does</em> use a linear search.</p>

<p>But you don't really need to look at the source code to figure that out. What else could it be? There is no structure or order that could be exploited to speed it up, unlike with a search tree or a sorted array.</p>
"
"<p>RSpec (2.12.2) is giving me a hard time. If I want to reference a class in one of my specs and that class is not in the root of my <code>/lib</code> directory, it throws an error:</p>

<pre><code>no such file to load -- test (LoadError)
</code></pre>

<p>It seems that my specs can be nested in a folder structure, but the moment I try and require a class that is in a nested folder (for example <code>lib/workers/conversion_worker.rb</code>), I get this error.</p>

<p>I am using require 'spec_helper' in all my specs, but even hard-coding the path the classes results in the same error.</p>

<p>With this structure: </p>

<pre><code>-lib/
  - class_found.rb
  - workers/
     - class_not_found.rb
</code></pre>

<p>The spec looks like this:</p>

<pre><code># spec/workers/class_not_found_spec.rb
require ""spec_helper""
require ""class_not_found""

describe ClassNotFound do    
  it ""Does something""
end
</code></pre>

<p>The following runs the spec successfully (the -I flag adds a path to the $LOAD_PATH):</p>

<pre><code>$ rspec spec/workers/class_not_found_spec.rb -I /Path/to/project/*
</code></pre>

<p>So it seems that RSpec isn't adding anything below lib to its path.</p>

<p>I can successfully require class_not_found.rb using require_relative:</p>

<pre><code>require_relative ""../../lib/workers/class_not_found.rb"" #Succeeds
</code></pre>

<p>But not using require:</p>

<pre><code>require ""lib/workers/class_not_found.rb"" # Fails
</code></pre>
","2988","","<p>According to your directory tree, the file <code>class_not_found.rb</code> is in a subdirectory <code>workers</code>. You forgot to add the path to your <code>require</code>:</p>

<pre><code>require 'workers/class_not_found'
</code></pre>

<p>would be correct.</p>

<p>By the way: you don't <code>require</code> classes, you <code>require</code> <em>files</em>.</p>
"
"<p>In the Chapter 7.3.5 ""Inheritance and Instance Variables"" of the book ""the ruby programing language"" says :</p>

<blockquote>
  <p>Because instance variables have nothing to do with
  inheritance, it follows that an instance variable used by a subclass cannot “shadow” an
  instance variable in the superclass. If a subclass uses an instance variable with the same
  name as a variable used by one of its ancestors, it will <strong>overwrite</strong> the value of its >ancestor’s
  variable. This can be done intentionally, to alter the behavior of the ancestor, or it can
  be done inadvertently. In the latter case, it is almost certain to cause bugs. As with the
  inheritance of private methods described earlier, this is another reason why it is only
  safe  to  extend  Ruby  classes  when  you  are  familiar  with  (and  in  control  of)  the
  implementation of the superclass.</p>
</blockquote>

<p>I had made my own test , but seems instance variables from subclass does NOT affect the superclass </p>

<p>my Ruby version</p>

<pre><code>bob@bob-ruby:~$ ruby --version
ruby 1.9.3p194 (2012-04-20 revision 35410) [i686-linux]
bob@bob-ruby:~$ 
</code></pre>

<p>Below is the code</p>

<pre><code>class Point
   attr_accessor :x,:y
   def initialize(x,y)
     @x,@y=x,y
   end
end

class Point3D &lt; Point
   attr_accessor :x,:y,:z
   def initialize(x,y,z)
     @x=x
     @y=y
     @z=z
   end
end

irb(main):052:0&gt; p=Point.new(1,2)
=&gt; #&lt;Point:0x87e8968 @x=1, @y=2&gt;
irb(main):053:0&gt; q=Point3D.new(4,5,6)
=&gt; #&lt;Point3D:0x87e423c @x=4, @y=5, @z=6&gt;
irb(main):054:0&gt; q.x
=&gt; 4
irb(main):055:0&gt; p.x
=&gt; 1
irb(main):056:0&gt; 
</code></pre>
","2988","","<p>Instance variables belong to instances, not to classes. The whole idea of ""inheritance"" doesn't even make sense there, inheritance only applies to classes.</p>
"
"<p>I have a standard system for performing calculations on varied datasets.  What would be great is I could just pass those calculations as a Proc to the perform method.  Here's what I want to accomplish:</p>

<pre><code>class Calculator
    include Sidekiq::Worker

    def perform rails_model , rails_model_id
         obj = Kernel.const_get( rails_model ).find( rails_model_id )
         yield( obj )
    end
end

Calculator.perform_asyc( ""User"" , 123 , { |u| u.do_something } )
</code></pre>

<p>Is this sort of thing possible or is it bad practice?  I know that it's bad practice to send objects directly, so I'm assuming that sending blocks is also a bad idea?  </p>
","2988","","<p>This is not possible. There is no serialization format for code in Ruby, only for data.</p>
"
"<p>I almost never see this in Ruby code, but it seems to be valid:</p>

<pre><code>class Foo
  @bar = ""bar""

  def self.print_bar
    puts @bar
  end
end
</code></pre>

<p>My interpretation of the above that <code>@bar</code> is an instance variable of <code>Foo</code>, which is a singleton (?) instance of a <code>Class</code>.</p>

<p>This appears to be different from <em>class variables</em> (e.g., <code>@@baz</code>), which are accessible at the class scope as well as the instance scope.</p>

<p>What, if any, are the downsides to code like the above snippet? Or is it perfectly reasonable code?</p>
","2988","","<p>Yes, this is perfectly valid. It is also very widely used and generally recommended over class variables which have a very big scope (the class, all instances of the class, all subclasses, all instances of all subclasses, …).</p>

<p>There are no downsides. Classes are objects. Objects can have instance variables. Nothing to it. Ruby's object model <em>really</em> is <em>much</em> simpler than people, even authors of Ruby tutorials, would make you want to believe.</p>
"
"<pre><code>Foo = Module.new

class MyClass
  include Foo
end
</code></pre>

<p>When a module is included in a class, an anonymous proxy class is created and set as MyClass's superclass.</p>

<pre><code>MyClass.ancestors =&gt; [MyClass, Foo, ...]
</code></pre>

<p>But what happens <strong>internally</strong> when a module is extended? How does Ruby handle this?</p>
","2988","","<blockquote>
  <p>Whats happens internally when a module in extended in Ruby?</p>
</blockquote>

<p>When a module <code>M</code> is included in a class <code>C</code>, an anonymous proxy class <code>⟦M′⟧</code> (called an <em>include class</em>) is created such that its method table pointer points to <code>M</code>'s method table. (Same for the constant table and module variables.) <code>⟦M′⟧</code>'s superclass is set to <code>C</code>'s superclass and <code>C</code>'s superclass is set to <code>⟦M′⟧</code>.</p>

<p>Also, if <code>M</code> includes other modules, the process is applied recursively.</p>

<p>Actually, that's just the default behavior. What <em>really</em> happens is that <code>include</code> calls <code>M.append_features(C)</code>, and you can customize all of that behavior by overriding that method.</p>

<p>I find <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/delta/module.rb#L89-174"" rel=""nofollow"">the source code of <code>Module#append_features</code> in Rubinius</a> quite readable.</p>
"
"<p>my question may be very basic n foolish but i m confused why the output is this way.</p>

<pre><code>MyClass = Class.new String
MyClass.ancestors
=&gt; [MyClass, String, ..]

AnotherClass = Class.new MyClass
=&gt; AnotherClass 
AnotherClass.ancestors
=&gt; [AnotherClass, MyClass, String, ..]
</code></pre>

<p>in the above code, i m creating a new instance of Class named MyClass and have passed the object(everything in ruby is an object) 'String' as the parameter. Why does 'String' occur in the ancestors list for MyClass. I haven't inherited MyClass from String but that's what ruby seems to be doing. It does work as copy constructor but why the inheritance? </p>
","2988","","<blockquote>
  <p>I haven't inherited <code>MyClass</code> from <code>String</code></p>
</blockquote>

<p>Yes you have. That's what <a href=""http://Ruby-Doc.Org/core-2.0/Class.html#method-c-new"" rel=""nofollow"">the argument to <code>Class::new</code></a> means:</p>

<blockquote>
  <h1><code>new(super_class=Object)</code> → <code>a_class</code></h1>
  
  <p>Creates a new anonymous (unnamed) class with the given superclass (or <code>Object</code> if no parameter is given).</p>
</blockquote>
"
"<p>What is going on here? Why does a position of sides in <code>==</code> comparison change the output?</p>

<pre><code>secret == BCrypt::Password.new(BCrypt::Password.create(secret)) 
# =&gt; false 
BCrypt::Password.new(BCrypt::Password.create(secret)) == secret
# =&gt; true 
</code></pre>
","2988","","<p>Ruby is an object-oriented language. In OO, the receiver of a message send gets to decide how to respond to that message. In your case, the two receivers are not only different objects, they are even different <em>types</em> of objects.</p>

<p>There are some standard double-dispatch protocols in Ruby which are intended to ensure that some operators are symmetric, but a) those protocols exist only for arithmetic operations on numbers not for equality, and b) there's no guarantee that an object follows those protocols.</p>

<p>In short, in OO, there is no way to ensure symmetry of operators. That's just a fundamental property of OO.</p>
"
"<p>Is it possible to add a key to hash without value? So I've created a hash(@j) and have a method:</p>

<pre><code>def add(hash)
@j.merge!(hash) 
end
</code></pre>

<p>How do I make it possible to add keys, without value, example</p>

<pre><code>@j.add('fish')
puts @j.entries
puts @j.keywords

=&gt; {'fish' =&gt; nil}
=&gt; fish
</code></pre>

<p>My current code allows me to add key and value like this:</p>

<pre><code> @j.add('fish' =&gt; 'animal') 
</code></pre>

<p>But not if it were like above.... only the key</p>
","2988","","<p>A hash is a mapping from keys to values. The idea of having a key without a value not only isn't possible, it doesn't even make sense.</p>
"
"<pre><code>class PassByValueScopeConfusion

  def does_not_modify(s)
    s = ""DIFFERENT""
  end

  def does_modify(s)
    s.upcase!
  end

end

obj = PassByValueScopeConfusion.new

some_string = ""abcdefg""

# does not change the value of some_string
obj.does_not_modify(some_string)

# changes the value of some_string
obj.does_modify(some_string)
</code></pre>

<p>I'm passing a string to a method that calls a destructive method on the passed in string and somehow, the original variable, ""some_string"" is modified. If I'm able to modify the ""some_string"" variable outside of scope with a destructive method, is there a way to do it with an assignment operator (other than calling the replace method)?</p>

<p><strong>EDIT</strong> Why would Ruby allow for modifying a variable outside of scope with the destructive operator if it doesn't allow it with an assignment operator?</p>
","2988","","<blockquote>
  <p>Why would Ruby allow for modifying a variable outside of scope</p>
</blockquote>

<p>It doesn't. You don't modify the variable, you are modifying the object the variable points to.</p>
"
"<p>I am trying to modify the Ruby String class, specifically the + method.  I want it to return a specific string, such that</p>

<pre><code> ""a"" + ""b"" =&gt; ""custom_result""
</code></pre>

<p>Here's what I have:</p>

<pre><code>class String

  def +(a)
    ""custom_result""
  end

end
</code></pre>

<p>When I try to require this file in irb, ""custom_result"" is in my prompt, and I can't execute anything.  Any ideas?</p>
","2988","","<p>Well, IRb uses the <code>String</code> class both to print the results and to parse what you type into it. If you mess with that, IRb breaks, that's not really surprising.</p>
"
"<p>The HotSpot compiler learns about your code as your process runs. Is there any way to configure it to persist what it's learned, so that the next time the process starts (assuming no jars or class files have changed), it doesn't need to start from scratch?</p>
","2988","","<p>No.</p>

<p>There are other JVMs which can do this, though. Oracle JRockit, for example, allows you to save profiling information and compiled code. Excelsior JET also does this.</p>
"
"<p>I am interested in defining multiple classes across multiple files that belong to the same module. Module CktCheck should have include the class Sdevv. Here is the code:</p>

<pre><code>module CktCheck
  require 'Sdevv.rb'
end
</code></pre>

<p>In the Sdevv.rb file, I have:</p>

<pre><code>class Sdevv
...
...
end
</code></pre>

<p>I want to instantiate an instance of class Sdevv, by using these lines</p>

<pre><code>require(""CktCheck.rb"")
cktcheck_file = CktCheck::Sdevv.new(""CktCheck.sdevv"")
</code></pre>

<p>However, the following exception is raised: </p>

<pre><code>./isBeginDevLine.rb:6:in `&lt;main&gt;': uninitialized constant CktCheck::Sdevv (NameError)`
</code></pre>

<p>Any Ideas?</p>
","2988","","<p>Inside <code>Sdevv.rb</code>, you forgot to define class <code>Sdevv</code> inside the <code>CktCheck</code> module. Therefore, it is defined at the top-level.</p>

<p>You need to either reference it from the top-level simply as <code>Sdevv</code> instead of <code>CktCheck::Sdevv</code> or, if you want it to be defined inside the <code>CktCheck</code> module, then you, well, have to define it inside the <code>CktCheck</code> module:</p>

<pre><code>module CktCheck
  class Sdevv
    # …
  end
end
</code></pre>
"
"<p>When I was reading Rails code, I found this</p>

<pre><code>def save(*)
  create_or_update || raise(RecordNotSaved)
end
</code></pre>

<p>What does the <code>*</code> do? :O
I know what happens when we use it like <code>*args</code>, but in this case, it's just plain <code>*</code>.</p>

<p>ref <a href=""https://github.com/rails/rails/blob/master/activerecord/lib/active_record/persistence.rb#L119"">https://github.com/rails/rails/blob/master/activerecord/lib/active_record/persistence.rb#L119</a></p>
","2988","","<p>It means the same thing as it does when used with a parameter name: gobble up all the remaining arguments. Except, since there is no name to bind them to, the arguments are inaccessible. In other words: it takes any number of arguments but ignores them all.</p>

<p>Note that there actually <em>is</em> one way to use the arguments: when you call <code>super</code> without an argument list, the arguments get forwarded as-is to the superclass method.</p>
"
"<p>I am having troubles getting a slice of an infinite sequence of <code>Enumerator</code> instance in a reasonable time. I first tried <code>drop</code> and <code>take</code> chain, but it hanged forever as <code>drop</code> tried to return an infinite <code>Array</code>. Next, I switched the order of these methods, but I still have to wait about ten minutes to get 100 values after ten-milionth sample:</p>

<pre><code>print exbioseq.drop(10**7).take(100)
</code></pre>

<p>Can anything be done to get a slice faster?</p>
","2988","","<p>An <code>Enumerator</code> is very general interface, it makes only very simple assumptions about the ""collection"" it is traversing. In particular, it really only supports two operations: get the current element and iterate to the next element.</p>

<p>Given those two operations, if you want to get the 10 millionth element, there is only one thing you can do: iterate 10 million times. Which takes time.</p>

<p>There is no such thing as ""slicing"" an <code>Enumerator</code>. An <code>Enumerator</code> enumerates. That's it.</p>

<p>Now, as you discovered, there is <em>another</em> problem: Ruby's collection operations are not type-preserving. No matter what type of collection you call <code>map</code> or <code>select</code> or <code>take</code> or whatever on, it will always return the same type: a fully realized, concrete, strict <code>Array</code>. That's how most collection frameworks in most languages work, e.g. in .NET all collection operations return <code>IEnumerable</code>. That's because most of these methods have only a single common implementation in the <code>Enumerable</code> mixin.</p>

<p>Smalltalk is an exception, but there is another problem: the collection operations are duplicated for every single collection type. Every collection type has its own nearly-indetical practically copy&amp;paste implementation of <code>collect:</code>, <code>select:</code> etc. This code duplication is hard to maintain and places a big burden on anyone who wants to integrate their <em>own</em> collection into the framework. In Ruby, it's easy: implement <code>each</code>, mixin <code>Enumerable</code> and you're done.</p>

<p>Note: as of Ruby 1.9, there is actually <em>some</em> of that duplication: <code>Hash</code> implements its own version of <code>select</code> which does actually return a <code>Hash</code> and not an <code>Array</code>. So, now, not only is there code duplication but also an asymmetry in the interface: all implementations of <code>select</code> return <code>Array</code>s except for the one in <code>Hash</code>.</p>

<p>The Scala 2.8 collection framework is the first time ever that someone has figured out how to provide type-preserving collection operations without code duplication. But Ruby's collection framework was designed 15 years before Scala 2.8, so it cannot take advantage of that knowledge.</p>

<p>In Ruby 2.0, there are lazy <code>Enumerator</code>s, where all collection operations return another lazy <code>Enumerator</code>. But that won't help you here: the only difference is that the lazy <code>Enumerator</code> will delay the 10 million iterations until you actually <code>print</code> the values. It still has to perform those 10 million iterations because there is simply no way to do otherwise.</p>

<p>If you want slicing, you need a sliceable data structure, such as an <code>Array</code>.</p>
"
"<p>based on my previous related <a href=""http://stackoverflow.com/questions/14978084/get-slice-of-an-enumerator-effectively"">question</a>, I've discovered huge performance gap when using <code>Enumerator</code> class to generate infinite sequences.
Before I did believed the hitch is with <code>Enumerable</code> methods <code>take</code> and <code>drop</code> but the following benchmark does not confirm this claim.</p>

<p>Example to create natural numbers generator and display numbers in interval (10e7-10, 10e7> :</p>

<pre><code>require 'benchmark'

nats_range = (1..Float::INFINITY)
nats_enum = Enumerator.new {|y| i=1; loop { y &lt;&lt; i; i+=1 }}

puts ""#{'_'*79+""\n""}Benchmarking Enumerable methods on Range ...""
puts Benchmark.measure { print nats_range.take(10**7).drop(10**7-10), ""\n"" }

puts ""#{'_'*79+""\n""}Benchmarking Enumerable methods on Enumerator ...""
puts Benchmark.measure { print nats_enum.take(10**7).drop(10**7-10), ""\n"" }


$ ruby a.rb 
_______________________________________________________________________________
Benchmarking Enumerable methods on Range ...
[9999991, 9999992, 9999993, 9999994, 9999995, 9999996, 9999997, 9999998, 9999999, 10000000]
  1.570000   0.010000   1.580000 (  1.576761)
_______________________________________________________________________________
Benchmarking Enumerable methods on Enumerator ...
[9999991, 9999992, 9999993, 9999994, 9999995, 9999996, 9999997, 9999998, 9999999, 10000000]
 15.620000   0.020000  15.640000 ( 15.665156)
</code></pre>

<p>The equivalent code using Enumerator is 10 times slower !</p>

<p>I'm asking here if anybody can explain this huge difference. Do I use the Enumerator improperly ? Is this a known regression in current Ruby implementation ?</p>

<p>MRI Ruby 1.9.3p385</p>
","2988","","<p><code>Enumerator</code>s are based on <code>Fiber</code>s, which you can think of as very lightweight threads. (Actually, they are coroutines.)</p>

<p><code>Range</code> uses <code>succ</code> for iteration and <code>&lt;=</code> for figuring out whether it has reached the end yet.</p>

<p>So, your <code>Range</code> example uses 20 million method calls to <code>Fixnum#succ</code> and <code>Fixnum#&lt;=</code>, both of which are heavily optimized and essentially map more or less directly to the correspondign assembly instructions.</p>

<p>Your <code>Enumerator</code> example uses 20 million calls to <code>Enumerator::Yielder#&lt;&lt;</code> (who knows how expensive that is) and <code>Fixnum#+</code> <em>as well as</em> 10 million <code>Fiber</code> context switches. I can easily imagine a <code>Fiber</code> context switch being 10 times more expensive than a simple <code>Fixnum</code> operation.</p>
"
"<p>Ruby use the functions from ""functional concept"" heavily, such as <strong>map, each</strong>.   They really depend on a  <strong>self-contained function</strong> which is so called <strong>block</strong> in Ruby.</p>

<p>It is very common to loop though a 2d array, make an string about the elements.</p>

<p>In java, it may looks like</p>

<pre><code>   public String toString(){
        String output = ""["";
        for (int i =0; i&lt;array.length; i++) {
            output+= ""Row ""+(i+1)+"" : "";
            for (int j=0; j&lt;array[0].length;j++ ) {
                output += array[i][j]+"", "";
            }
            output += ""\n"";
        }

        return output += ""]"";
    }
</code></pre>

<p>I tried to rewrite such a thing in ""Ruby functional Style"", but I think there are still some improvements. Eg. I want to remove the mutable variable <strong>output</strong> </p>

<pre><code>  def to_s
        output = ""[\n""
        @data.each_with_index do |row,i|
            output &lt;&lt; ""Row #{i+1} : ""
            row.each { |num| output &lt;&lt; ""#{num},"" }
            output &lt;&lt; ""\n""
        end

        output+""]""
    end
</code></pre>
","2988","","<p>Whenever you see the pattern:</p>

<ol>
<li>initialize an accumulator (in your case <code>output</code>)</li>
<li>on each iteration of some collection modify the accumulator (in your case append to it)</li>
<li>return the accumulator</li>
</ol>

<p>that's a <code>fold</code>, or in Ruby terms an <code>inject</code>.</p>

<p>Actually, that's a bit of a tautology. A <code>fold</code> is a universal method of iteration: <em>everything</em> that can be expressed by iterating over the elements of a collection can also be expressed as a <code>fold</code> over the collection. In other words: <em>all</em> methods on <code>Enumerable</code> (including <code>each</code>!) could also be defined in terms of <code>inject</code> as the primitive method instead of <code>each</code>.</p>

<p>Think about it this way: a collection can either be empty or there can be a current element.  There's no third option, if you cover those two cases, then you have covered everything. Well, <code>fold</code> takes two arguments: one which tells it what to do when the collection is empty, and one which tells it what to do with the current element. Or, put yet another way: you can see a collection as a series of instructions and <code>fold</code> is an interpreter for those instructions. There are only two kinds of instructions: the <code>END</code> instruction and a <code>VALUE(el)</code> instruction. And you can supply the interpreter code for both those instructions to the <code>fold</code>.</p>

<p>In Ruby, the second argument is not part of the argument list, it is the block.</p>

<p>So, what's it look like as a <code>fold</code>?</p>

<pre><code>def to_s
  @data.each_with_index.inject(""[\n"") do |acc, (row, i)|
    acc + ""Row #{i+1} : #{row.join(',')}\n""
  end + ']'
end
</code></pre>

<p>If you're curious about whether or not the <code>each_with_index</code> may infect your code with some non-functional impurity, rest assured that you can just as easily get rid of it by including the index in the accumulator:</p>

<pre><code>def to_s
  @data.inject([""[\n"", 1]) do |(s, i), row|
    [s + ""Row #{i} : #{row.join(',')}\n"", i+1]
  end.first + ']'
end
</code></pre>

<p>Also note that in the first case, <em>with</em> the <code>each_with_index</code>, we're not actually doing anything ""interesting"" with the accumulator, unlike the second case, where we are using it to keep count of the index. In fact, the first case is actually a restricted form of <code>fold</code>, it doesn't use all of its power. It really is just a <code>map</code>:</p>

<pre><code>def to_s
  ""[\n"" + @data.map.with_index(1) do |row, i|
    ""Row #{i} : #{row.join(',')}\n""
  end.join + ']'
end
</code></pre>

<p>In my personal opinion, it would actually be perfectly okay to use (mutable) string appending here instead of string concatenation:</p>

<pre><code>def to_s
  ""[\n"" &lt;&lt; @data.map.with_index(1) do |row, i|
    ""Row #{i} : #{row.join(',')}\n""
  end.join &lt;&lt; ']'
end
</code></pre>

<p>This saves us from creating a couple of unnecessary string objects, but more importantly: it is more idiomatic. The real problem is <em>shared</em> mutable state, but we're not sharing our mutable string here: when <code>to_s</code> returns its caller <em>does</em> get access to the string, but <code>to_s</code> itself has returned and thus no longer has access to it.</p>

<p>If you want to get real fancy, you could even use string interpolation:</p>

<pre><code>def to_s
  %Q&lt;[\n#{@data.map.with_index(1) do |row, i|
    ""Row #{i} : #{row.join(',')}\n""
  end.join}]&gt;
end
</code></pre>

<p>Unfortunately, this not only breaks IRb's syntax highlighting, but also my brain's ;-)</p>
"
"<p>How can I pass a lambda to <code>hash.each</code>, so I can re-use some code?</p>

<pre><code>&gt; h = { a: 'b' }
&gt; h.each do |key, value| end
 =&gt; {:a=&gt;""b""}
&gt; test = lambda do |key, value| puts ""#{key} = #{value}"" end 
&gt; test.call('a','b')
a = b
&gt; h.each &amp;test
ArgumentError: wrong number of arguments (1 for 2)
  from (irb):1:in `block in irb_binding'
  from (irb):5:in `each'
  from (irb):5
  from /Users/jstillwell/.rvm/rubies/ruby-1.9.3-p362/bin/irb:16:in `&lt;main&gt;'
&gt; h.each test
ArgumentError: wrong number of arguments(1 for 0)
  from (irb):8:in `each'
  from (irb):8
  from /Users/jstillwell/.rvm/rubies/ruby-1.9.3-p362/bin/irb:16:in `&lt;main&gt;'
</code></pre>
","2988","","<p><code>each</code> yields the current element to the block, ergo the lambda needs to take one argument, not two. In case of a <code>Hash</code> the element being yielded is a two-element <code>Array</code> with the first element being the key and the second element being the value. </p>

<pre><code>test = lambda do |el| puts ""#{el.first} = #{el.last}"" end
h.each &amp;test
# a = b
</code></pre>

<p>Alternatively, you can use Ruby's support for destructuring bind in parameter lists:</p>

<pre><code>test = lambda do |(k, v)| puts ""#{k} = #{v}"" end
h.each &amp;test
# a = b
</code></pre>

<p>Or, instead of using a <code>lambda</code> which has the same argument binding semantics as a method, you could use a <code>Proc</code>, which has the same argument binding semantics as a block, i.e. it will unpack a single <code>Array</code> argument into multiple parameter bindings:</p>

<pre><code>test = proc do |k, v| puts ""#{k} = #{v}"" end
h.each &amp;test
# a = b
</code></pre>
"
"<p>The problem is that I need an array of n elements, in which each element has 2 attributes (color and name).
I don't think that using another class and making each element an object would be the best way.</p>

<pre><code>class House
    def initialize
        @door=Array.new
        ...
    end
    ...
end

house=House.new
...
puts house.door[i].color
puts house.door[i].name
</code></pre>

<p>Another alternative is to use a bidimensional array in which:</p>

<pre><code>house.door[i][0] would be house.door[i].name
house.door[i][1] would be house.door[1].color
</code></pre>

<p>But I still think these are not the correct way.</p>
","2988","","<blockquote>
  <p>I don't think that […] making each element an object would be the best way.</p>
</blockquote>

<p>Why do you think that? It's called Object-Oriented Programming and not Array-Oriented Programming for a reason!</p>

<p>Ruby is an object-oriented language. Objects are what it does best.</p>
"
"<p>I made a small test today:</p>

<pre><code>&gt; false &amp;&amp; 1 || 2
&gt; 2
&gt; true &amp;&amp; 1 || 2
&gt; 1
</code></pre>

<p>So if we could already do with binary operators, why did we need a ternary ?</p>

<pre><code>&gt; false ? 1 : 2
&gt; 2
&gt; true ? 1 : 2
&gt; 1
</code></pre>

<p>As it is not simply an alias and complicates parsing. </p>
","2988","","<p>The conditional operator is needed in languages like C, because <code>if</code>/<code>else</code> is a <em>statement</em>, it doesn't evaluate to a return value. But in Ruby, <em>everything</em> is an expression, <em>everything</em> has a return value, there are no statements.</p>

<p>Therefore, you can <em>always</em> replace the conditional operator with a conditional expression:</p>

<pre><code>foo = bar ? baz : qux
</code></pre>

<p>is exactly equivalent to </p>

<pre><code>foo = if bar then baz else qux end
</code></pre>

<p>In C, you cannot write this, you'd have to write</p>

<pre><code>if bar then foo = baz else foo = aux end
</code></pre>

<p>leading to code duplication. That's why you need the conditional operator in C. In Ruby, it is unnecessary.</p>

<p>Actually, since Ruby is an object-oriented language, <em>all</em> conditionals are unnecessary. You can just use polymorphism instead.</p>
"
"<pre><code>p = Proc.new{ puts 'ok' }
</code></pre>

<p>Is is possible to see the ruby code in the proc?</p>

<p><code>inspect</code> returns the memory location:</p>

<pre><code>puts p.inspect
#&lt;Proc:0x007f9e42980b88@(irb):2&gt;
</code></pre>

<p>Ruby 1.9.3</p>
","2988","","<p>No, there is no way to do that in Ruby.</p>

<p>Some Ruby implementations may or may not have implementation-specific ways of getting the source code.</p>

<p>You can also try to use <code>Proc#source_location</code> to find the file that the <code>Proc</code> was defined in, and then parse that file to find the source code. But that won't work if the <code>Proc</code> wasn't defined in a file (e.g. if it was defined dynamically with <code>eval</code>) or if the source file no longer exists, e.g. because you are running an AOT-compiled version of your program.</p>

<p>So, the short answer is: no, there is no way.
The long answer is: there are some ways that may or may not sometimes work depending on way too many factors to even begin to make this work reliably.</p>

<p>That's not even taking into account <code>Proc</code>s which don't even <em>have</em> a Ruby source code because they were defined in native code.</p>
"
"<p>I am trying to make an instance of a class <code>MyClass</code> evaluate to a falsy value. So I tried to override all methods I could think of to make <code>MyClass</code> act as <code>nil</code>. I got:</p>

<pre><code>a = MyClass.new
a.nil? #=&gt; true
a.class #=&gt; NilClass
a == nil #=&gt; true
a.eql? nil #=&gt; true
a.equal? nil #=&gt; true
a.instance_of? NilClass #=&gt; true
a.kind_of? NilClass #=&gt; true
a.is_a? NilClass #=&gt; true
</code></pre>

<p>I even got</p>

<pre><code>nil == a #=&gt; true
nil.eql? a  #=&gt; true
nil.equal? a #=&gt; true
</code></pre>

<p>Finally I tried</p>

<pre><code>a.__id__ #=&gt; 4
nil.__id__ #=&gt; 4
a.object_id #=&gt; 4
nil.object_id #=&gt; 4
</code></pre>

<p>But still, <code>a</code> will always evaluate to <code>true</code>. So I was wondering how Ruby checks whether <code>a</code> is <code>nil</code> or <code>false</code>. I guess it's something not accessible to the developer.</p>

<p>This is not to solve an actual problem, I am just wondering if it cannot, indeed, be done. I know this would break the Ruby's ""everything-ist-true-except-false-and-nil""-idiom, and it would most probably be a purely evil hack.</p>
","2988","","<p>There are only two objects which evaluate falsy. Ruby simply checks whether the object is one of those two. Period.</p>

<p>Note that one of the foundations of OO is simulation: an object can simulate another object. This is not true here: it is impossible to simulate <code>nil</code> or <code>false</code>. This is one of those annoying cases where Ruby violates OO, very similar to <code>Object#equal?</code>.</p>
"
"<p>My understanding is that the <code>if</code> statements at the end of the line are evaluated before the code at the front of the line:</p>

<pre><code>'never shown' if (false)
</code></pre>

<p>And assignment is possible in an <code>if</code> statement.</p>

<pre><code>'shown' if (value = 'dave is king')
value #=&gt; ""dave is king""
</code></pre>

<p>And, when a variable that doesn't exist is assigned to, it is created. There is no need for it to exist beforehand. Is this true?</p>

<p>If all these assumptions are true, why does this fail?</p>

<pre><code>error_array &lt;&lt; error if (error = import_value(value))
#=&gt; undefined local variable or method `error' for
</code></pre>

<p>It assigned to error before the array push right? I want to understand when things are evaluated.</p>

<p>This one does work:</p>

<pre><code>if (error = import_value(value))
  error_array &lt;&lt; error
end
</code></pre>

<p>Now I'm really confused.</p>
","2988","","<p>In Ruby, local variables are defined by the parser when it first encounters an assignment, and are then in scope from that point on. Since Ruby is parsed like English, left-to-right, top-to-bottom, the local variable doesn't exist yet when you are using it, because the usage is further left from the assignment.</p>

<p>Here's a little demonstration:</p>

<pre><code>foo # NameError: undefined local variable or method `foo' for main:Object

if false
  foo = 42
end

foo # =&gt; nil
</code></pre>

<p>As you can see, the local variable <em>does</em> exist on line 7 even though the assignment on line 4 was never executed. It was, however, <em>parsed</em> and that's why the local variable <code>foo</code> exists. But because the assignment was never executed, the variable is uninitialized and thus evaluates to <code>nil</code> and not <code>42</code>.</p>

<p>Now let's get to simplest version of your case:</p>

<pre><code>bar if bar = true
# warning: found = in conditional, should be ==
# NameError: undefined local variable or method `bar' for main:Object

bar # =&gt; true
</code></pre>

<p>The variable is created when the assignment is parsed, which is here:</p>

<pre><code>bar if bar = true
       ^^^^^^^^^^
</code></pre>

<p>But it is used here:</p>

<pre><code>bar if bar = true
^^^
</code></pre>

<p>Which is <em>before</em> the assignment. The fact that the assignment is <em>executed</em> before the usage is irrelevant because the <em>parsing</em> is relevant here, and the assignment gets parsed <em>after</em> the usage which means that at the point of usage the parser still thinks it's a method call with no argument list and an implicit receiver (i.e. equivalent to <code>self.bar()</code>) and not a local variable.</p>
"
"<p>In the process of understanding ruby, I was trying to overide '+' with a default argument value. Something like this.</p>

<pre><code>class C
  def something(a = 5)
    puts ""Received: #{a}""
  end

  def +(b = 10)
    puts ""Received: #{b}""
  end
end
</code></pre>

<p>Now</p>

<pre><code>x = C.new
x.something #=&gt; Received: 5
x.something(88) #=&gt; Received: 88

x.+ #=&gt; IRB shows ? whereas I was expecting an output 'Received: 10'
</code></pre>

<p>Is this because of operator precedence?</p>
","2988","","<p>IRb uses a different parser than Ruby does. So, in some weird corner cases, IRb may parse code differently than Ruby. If you want to see whether something is valid Ruby or not, you should ask Ruby not IRb.</p>

<p>The reason for this is mainly that Ruby always parses the entire file at once, so it always knows when an expression ends. IRb on the other hand, has to ""guess"" every time when you press <kbd>ENTER</kbd> whether you simply want to continue the expression on a new line or whether you wanted to evaluate the expression as-is. As a result, IRb <em>cannot</em> just use the Ruby parser, it needs to have its own. And Ruby's grammar is so complex that writing your own parser is really really hard. That's why such bugs and corner cases pop up from time to time even in a piece of software as old and as widely used as IRb.</p>
"
"<p>I was playing with the last expression returned by the method,when it is being invoked via an object.</p>

<p>With the concept below code works.</p>

<pre><code>class Simple
  def foo
    2 + 2
  end
end
#=&gt; nil
simple = Simple.new
#=&gt; #&lt;Simple:0x11eb390&gt;
simple.foo
#=&gt; 4
</code></pre>

<p>But why the below code returns such encoded value rather than <code>15</code> and <code>20</code>?</p>

<pre><code>class Fixnum
  def to_s
    self + 5
  end
end
#=&gt; nil
puts 10
#&lt;Fixnum:0x000015&gt;
#=&gt; nil
puts 15
#&lt;Fixnum:0x00001f&gt;
#=&gt; nil
</code></pre>

<p>Can anyone help me here to understand the concept?</p>

<p><strong>Edit:</strong></p>

<pre><code>class Fixnum
  def to_s
    self + 5
  end
end
#=&gt; nil
10.to_s
#=&gt; #&lt;Fixnum:0x000029&gt;
</code></pre>

<p>Again the same result.</p>
","2988","","<p>The contract of <code>to_s</code> requires that you return a <code>String</code>. You are, however, returning a <code>Fixnum</code>. If you violate a contract, all sorts of weird things may happen.</p>

<p>If you correctly return a <code>String</code> from your <code>to_s</code> method, everything works as you might expect:</p>

<pre><code>class Fixnum
  def to_s
    ""#{self + 5}""
  end
end

puts 10
# SystemStackError: stack level too deep
</code></pre>

<p>Well, okay, ""everything works"" may have been a bit misleading. But, as you can see, everything <em>happens</em> as you might expect it: <code>puts</code> calls <code>to_s</code> on <code>10</code>, which adds <code>5</code> to <code>10</code> returning <code>15</code>, then it calls <code>to_s</code> on <code>15</code>, which adds <code>5</code> returning <code>20</code>, then calls <code>to_s</code> on <code>20</code> etc.</p>

<pre><code>class Fixnum
  orig_to_s = public_instance_method(:to_s)

  define_method(:to_s) do
    orig_to_s.bind(self + 5).()
  end
end

puts 10
# 15
</code></pre>

<p><em>Now</em>, everything works as expected.</p>
"
"<p>I have a custom defined class <code>Instruction</code>. Instances are initialized and collected in an array. There are some duplicate (all instance variables identical) instances and I want to filter them out.</p>

<pre><code>class Instruction
    attr_accessor :date, :group, :time
    def initialize(date, group, time)
        @date, @group, @time = date, group, time
    end
end

instructions = Array.new

instructions.push ( Instruction.new('2000-01-01', 'Big', '10am') )
instructions.push ( Instruction.new('2000-01-01', 'Small', '9am') )
instructions.push ( Instruction.new('1999-09-09', 'Small', '4pm') )
instructions.push ( Instruction.new('2000-01-01', 'Small', '9am') )

instructions.uniq.each {|e| puts ""date: #{e.date} \tgroup: #{e.group} \ttime: #{e.time}""}
</code></pre>

<p>I would expect one of the <code>'2000-01-01', 'Small', '9am'</code> entries removed by <code>.uniq</code>, however I still see the repeated entry in the output.</p>

<p>I have tried adding <code>==</code> and <code>eql?</code> methods to the class definition as follows:</p>

<pre><code>def ==(other)
    other.class == self.class &amp;&amp; other.date == self.date &amp;&amp; other.group == self.group &amp;&amp; other.time == self.time
end
alias :eql? :==
</code></pre>

<p>But that didn't work either... Help!</p>
","2988","","<p>You forgot to override <code>hash</code>. <code>eql?</code> only gets called for objects with the same <code>hash</code> value.</p>
"
"<p>A very simple question I hope... but deceptively difficult to get a straight answer from the documentation or playing around on the command line in GIT. Here is the scenario, I have a local repo and am in master. I create a branch called branch1, I checkout branch1. I then make some change, add / commit the changes (staging and commit). At this point I tag branch1 with ""git tag 1.0"".</p>

<p>My question is - does that tag automatically pick up the fact that I am in branch1 and therefore apply only to branch1. Or do I need to use the command ""git tag 1.0 branch1"" explicitly naming the branch to which it refers. I tried ""git branch --list"" etc from both within branch1 working directory and master working directory and they both list the tag in either case. If I rebased branch1 back into master then I would not be surprised by this outcome. But for time being, without merging changes back, how can I ask to see just the tag that refers to a given branch on the command line (if that is the case)?</p>
","2988","","<p>Tags don't refer to branches. They refer to commits. It's completely irrelevant what branch you're on. You might not even be on a branch <em>at all</em>.</p>

<pre><code>git tag foo branch1
</code></pre>

<p>Doesn't apply the tag to <code>branch1</code>. It's shorthand notation for applying it to the <code>HEAD</code> commit of <code>branch1</code>.</p>
"
"<p>I was playing with the assignment operation within the <code>if</code> block. And finally the below operation made me surprised:</p>

<pre><code>C:\&gt;irb --simple-prompt
if false
x = 10
end
#=&gt; nil
p x
nil
x.object_id
#=&gt; 4
#=&gt; nil
p y
NameError: undefined local variable or method `y' for main:Object
        from (irb):5
        from C:/Ruby193/bin/irb:12:in `&lt;main&gt;'
</code></pre>

<p>In the above code you can see that the <code>x</code> local variable has been created whereas the it is in fallacy <code>if</code> block. And tried to to see the content of <code>x</code> with <code>p x</code> which forced me to believe that assignment is not done,but the <code>x</code> is created. And <code>x.object_id</code> also proved that case.</p>

<p>Now my question is how that <code>x</code> local variable has been created where as the <code>if</code> block entry point is closed forever intentionally?</p>

<p>I expected the output as <code>p y</code> from the <code>p x</code>. But got such surprising answer from <code>p x</code>.</p>

<p>Anyone could explain me the concept works here?</p>

<p><em><strong>EDIT</em></strong></p>

<p>No, here is another test. This is not the case with only <code>local</code> variables. The same happened with <code>instance</code> and <code>class</code> variables also. See the below:</p>

<pre><code>class Foo
def show
@X = 10 if false
p @X,""hi"",@X.object_id
end
end
#=&gt; nil
Foo.new.show
nil
""hi""
4
#=&gt; [nil, ""hi"", 4]

class Foo
def self.show
@@X = 10 if false
p @@X,""hi"",@@X.object_id
end
end
#=&gt; nil
Foo.show
nil
""hi""
4
#=&gt; [nil, ""hi"", 4]
</code></pre>

<p>Suceessfull case :</p>

<pre><code>class Foo
def self.show
@@X = 10 if true
p @@X,""hi"",@@X.object_id
end
end
#=&gt; nil
Foo.show
10
""hi""
4
#=&gt; [10, ""hi"", 4]
</code></pre>
","2988","","<p>In Ruby, local variables are defined by the parser when it first encounters an assignment, and are then in scope from that point on.</p>

<p>Here's a little demonstration:</p>

<pre><code>foo # NameError: undefined local variable or method `foo' for main:Object

if false
  foo = 42
end

foo # =&gt; nil
</code></pre>

<p>As you can see, the local variable <em>does</em> exist on line 7 even though the assignment on line 4 was never executed. It was, however, <em>parsed</em> and that's why the local variable <code>foo</code> exists. But because the assignment was never executed, the variable is uninitialized and thus evaluates to <code>nil</code> and not <code>42</code>.</p>

<p>In Ruby, most uninitialized or even non-existing variables evaluate to <code>nil</code>. This is true for local variables, instance variables and global variables:</p>

<pre><code>defined? foo       #=&gt; nil
local_variables    #=&gt; []
if false
  foo = 42
end
defined? foo       #=&gt; 'local-variable'
local_variables    #=&gt; [:foo]
foo                #=&gt; nil
foo.nil?           #=&gt; true

defined? @bar      #=&gt; nil
instance_variables #=&gt; []
@bar               #=&gt; nil
@bar.nil?          #=&gt; true
# warning: instance variable @bar not initialized

defined? $baz      #=&gt; nil
$baz               #=&gt; nil
# warning: global variable `$baz' not initialized
$baz.nil?          #=&gt; true
# warning: global variable `$baz' not initialized
</code></pre>

<p>It is, however, not true for class hierarchy variables and constants:</p>

<pre><code>defined? @@wah     #=&gt; nil
@@wah
# NameError: uninitialized class variable @@wah in Object

defined? QUUX      #=&gt; nil
QUUX
# NameError: uninitialized constant Object::QUUX
</code></pre>

<p>This is a red herring:</p>

<pre><code>defined? fnord     #=&gt; nil
local_variables    #=&gt; []
fnord
# NameError: undefined local variable or method `fnord' for main:Object
</code></pre>

<p>The reason why you get an error here is <em>not</em> that unitialized local variables don't evaluate to <code>nil</code>, it is that <code>fnord</code> is ambiguous: it could be <em>either</em> an argument-less message send to the default receiver (i.e. equivalent to <code>self.fnord()</code>) <em>or</em> an access to the local variable <code>fnord</code>.</p>

<p>In order to disambiguate that, you need to add a receiver or an argument list (even if empty) to tell Ruby that it is a message send:</p>

<pre><code>self.fnord
# NoMethodError: undefined method `fnord' for main:Object
fnord()
# NoMethodError: undefined method `fnord' for main:Object
</code></pre>

<p>or make sure that the <em>parser</em> (<em>not</em> the evaluator) parses (<em>not</em> executes) an assignment before the usage, to tell Ruby that it is a local variable:</p>

<pre><code>if false
  fnord = 42
end
fnord              #=&gt; nil
</code></pre>

<p>And, of course, <code>nil</code> is an object (it is the only instance of class <code>NilClass</code>) and thus has an <code>object_id</code> method.</p>
"
"<p>I always thought that rubyists choose to make returns in ruby implicit because of a style preference (less words = more concise).  However, can someone confirm with me that in the following example you actually have to make the returns implicit or else the intended functionality won't work? (The intended functionality is to be able to split a sentence into words and return either ""Begins with a vowel"" or ""Begins with a consonant"" for each word)</p>

<pre><code># With Implicit Returns
def begins_with_vowel_or_consonant(words)
  words_array = words.split("" "").map do |word|
    if ""aeiou"".include?(word[0,1])
      ""Begins with a vowel"" # =&gt; This is an implicit return
    else
      ""Begins with a consonant"" # =&gt; This is another implicit return
    end
  end
end

# With Explicit Returns
def begins_with_vowel_or_consonant(words)
  words_array = words.split("" "").map do |word|
    if ""aeiou"".include?(word[0,1])
      return ""Begins with a vowel"" # =&gt; This is an explicit return
    else
      return ""Begins with a consonant"" # =&gt; This is another explicit return
    end
  end
end
</code></pre>

<p>Now, I know there are definitely many ways to make this code more efficient and better, but the reason I've laid it out like this is to illustrate the need for the implicit returns.  Can someone confirm with me that implicit returns are indeed needed and not just a stylistic choice?</p>

<p>EDIT:
Here's an example to illustrate what I'm trying to show:</p>

<pre><code># Implicit Return
begins_with_vowel_or_consonant(""hello world"") # =&gt; [""Begins with a consonant"", ""Begins with a consonant""] 

# Explicit Return
begins_with_vowel_or_consonant(""hello world"") # =&gt; ""Begins with a consonant"" 
</code></pre>
","2988","","<p>The implicit return value of a method is the last expression evaluated in the method.</p>

<p>In your case, <em>neither</em> of the two lines you annotated are the last expression. The last expression that gets evaluated is the assignment to <code>words_array</code> (which BTW is completely useless since because it is the last expression there is no way to use that variable afterwards).</p>

<p>Now, what is the value of an assignment expression? It is the value being assigned, in this particular case, the return value of the <code>map</code> method, which is an <code>Array</code>. So, that is what the method returns.</p>

<p>In the <em>second</em> example, at the very first iteration of the <code>map</code>, you will hit one of the two <code>return</code>s and thus immediately return from the method. In the first example, however, you will always iterate through the entire <code>words</code> array.</p>

<p>The problem is <em>not</em> that implicit and explicit returns are different, the problem is that the two lines you claim are implicit returns aren't.</p>
"
"<p>Ruby uses <code>===</code> operator on the <code>case/when</code> type execution style.Now It also known that Ruby depending on the type
of the thing present in the <code>when</code> clause, calls the respective <code>.===</code> method.</p>

<p>Say <code>when</code> statement contains the <code>class</code> names, then the rule is - <code>it will use Module#===, which will return true if the right side is an instance of,
or subclass of, the left side.</code> One example with this context is:</p>

<p>Here <code>instance of</code> test occurs</p>

<pre><code>obj = 'hello'
#=&gt; ""hello""
case obj
when String
print 'It is a string'
when Fixnum
print 'It is a number'
else
print 'It is not a string'
end
#It is a string
#=&gt; nil
</code></pre>

<p>Here <code>subclass of</code> test occurs</p>

<pre><code>num = 10
#=&gt; 10
case num
when Numeric
puts ""Right class""
else
puts ""Wrong class""
end
#Right class
#=&gt; nil
</code></pre>

<p>Now <code>when</code> contains <code>String</code> literals then String#=== is called, which in turn checks if left and right handside 
literal are same(same chracter in same sequence) or not.</p>

<pre><code>a = ""abc""
#=&gt; ""abc""
case a
when ""def"" then p ""Hi""
when ""abc"" then p ""found""
else ""not found""
end
#""found""
#=&gt; ""found""
</code></pre>

<p>The all logic is too cool. Now my query is with <code>case/when</code> structure - </p>

<ul>
<li><em><strong>How does ruby know if <code>when</code> holding <code>class</code>, or <code>String</code> literals or
anything valid at runtime?</em></strong></li>
</ul>

<p>or</p>

<ul>
<li><em><strong>What test does it perform before calling the respective <code>.===</code>
operator on the thing <code>when</code> holding currently.</em></strong></li>
</ul>

<p><em><strong>EDIT</em></strong></p>

<p>Before understanding the <code>Case/when</code> working principal,let me clear the below which <code>when</code> does while it gets its turn.</p>

<pre><code>String.===(""abc"") #=&gt; true
</code></pre>

<p>Because ""abc"" is an instance of <code>String</code> class. - Am I right?</p>

<p>Now I tried the below just to check who is whose super class.</p>

<pre><code>10.class #=&gt; Fixnum
Fixnum.superclass #=&gt; Integer
Integer.superclass #=&gt; Numeric
Numeric.superclass #=&gt; Object
</code></pre>

<p>Humm. That means the below returns <code>true</code> as Fixnum is also the indirect subclass of <code>Numeric</code>. - Am I right?</p>

<pre><code>Numeric.===(10) #=&gt; true
</code></pre>

<p>But why then the below outputs contradictory to the above?</p>

<pre><code>Numeric.===(Fixnum) #=&gt; false
</code></pre>

<p><em><strong>Trying to be more specific to my query as below :</em></strong></p>

<p>When we are calling <code>Numeric.===(10)</code> and <code>String.===(""abc"")</code> . I think we are sending not <code>""abc""</code> and <code>10</code> rather <code>""abc"".class</code> and <code>10.class</code>.</p>

<pre><code>10.===(10) #=&gt; true
Numeric.===(10) #=&gt; true
</code></pre>

<p>Now look at the above. Both return <code>true</code>. Does they output <code>true</code> on the same logic? I think <code>NO</code>. <code>10.===(10)</code> is just like
<code>10 ==(10)</code> comparison. But <code>Numeric.===(10)</code> outputs <code>true</code> as class of <code>10</code> is the subclass of <code>Numeric</code>.</p>

<pre><code>""abc"".===(""abc"") #=&gt; true
String.===(""abc"") #=&gt; true
</code></pre>

<p>Now look at the above. Both return <code>true</code>. Does they output <code>true</code> on the same logic? I think <code>NO</code>. <code>""abc"".===(""abc"")</code> is just like simple string literal comparison <code>""abc"" ==(""abc"")</code> comparison. But <code>String.===(""abc"")</code> outputs <code>true</code> as <code>""abc""</code> which is an instance of <code>String</code>.</p>

<p>Now my question is how ruby detects lefthand side operands types and apply the proper rule of comparisons ?</p>

<p>I might be 100% wrong, In that case please correct me.</p>
","2988","","<blockquote>
  <p>Now my question is how ruby detects lefthand side operands types and apply the proper rule of comparisons ?</p>
</blockquote>

<p>It doesn't. It simply calls the <code>===</code> method. That's it. That's just how object-orientation works, and it is nothing specific to Ruby, <em>every</em> OO language works the same way: you call a method on an object, and the object decides how to react. (Or, in a class-based language like Ruby, PHP, Java, C#, C++, Python etc. the <em>class</em> of the object decides.)</p>

<p>Different objects may react in different ways. Classes check whether the argument is an instance of themselves, Regexps check whether the argument is matched by them, Ranges check whether the argument is covered by them.</p>

<p>It's just basic method dispatch.</p>
"
"<p>There were so-called <a href=""https://www.google.com/search?q=ruby+refinements"" rel=""nofollow"">refinements</a> introduced in Ruby 2.0. I was playing with them and now I’m totally cajoled:</p>

<p>— The main declared advantage of <code>refine</code> is that they are not global scoped. Bah.</p>

<pre><code>module MyModule
  class ::String
    def my_locally_needed_func
      # do smth 
    end
  end
end

# here I need it
require 'mymodule'
"""".my_locally_needed_func
</code></pre>

<p>is isolated not worse.</p>

<p>— Refinements do not support class methods. Bah. Of course they are through a hack (remember, everything is an object):</p>

<pre><code>module VoidRefinements
  refine String do
    def self.singleton_method_for_string_class
      puts ""inside singleton_method_for_string_class""
    end 
  end 
end

module VoidRefinementsOK
  refine Class do
    def singleton_method_for_string_class
      err_msg = ""NoMethodError: undefined method ‘#{__method__}’ for ‘#{self}:#{self.class}’""
      raise NoMethodError.new(err_msg) unless String == self
      puts ""inside proper singleton_method_for_string_class""
    end 
  end 
end

using VoidRefinements
String.singleton_method_for_string_class rescue puts $!

using VoidRefinementsOK
String.singleton_method_for_string_class rescue puts $!

# undefined method `singleton_method_for_string_class' for String:Class
# inside proper singleton_method_for_string_class
</code></pre>

<p>The latter is not even resulting in performance penalties, since nobody would call <code>Fixnum.substr</code> on purpose.</p>

<p>— Refinements are executed through <code>eval</code>. <code>refine</code> is not a keyword. Bah. (well, “bah!” again.)</p>

<p>So, my question is: am I missing smth or everybody sees no advantages in the newly introduced feature?</p>
","2988","","<p>You completely dismiss the fact that Refinements aren't globally scoped, but that's the very reason for their introduction. Of course, if you simply ignore the reason for something's existence, then you obviously won't see any value in it.</p>

<p>But, see the isolation in action. Here is your example modified to use Refinements:</p>

<pre><code>module MyModule
  refine String do
    def my_locally_needed_func
      # do smth 
    end
  end
end

module MyOtherModule
  # The monkeypatch is invisible:
  """".my_locally_needed_func
  # NoMethodError: undefined method `my_locally_needed_func' for """":String

  # I first have to use the Refinement:
  using MyModule
  """".my_locally_needed_func
end

# The monkeypatch is scoped. Even though we were able to use 
# it in MyOtherModule, we still cannot use it at the top-level:
"""".my_locally_needed_func
# NoMethodError: undefined method `my_locally_needed_func' for """":String

# We have to call `using` again, for the top-level:
using MyModule
"""".my_locally_needed_func
</code></pre>

<p>Here is <em>your</em> example for comparison:</p>

<pre><code>module MyModule
  class ::String
    def my_locally_needed_func
      # do smth 
    end
  end
end

# here I need it
"""".my_locally_needed_func
</code></pre>

<p>Note: I removed the call to <code>using</code> which didn't make sense since you didn't use Refinements anyway.</p>

<p>In your case, the monkeypatch is available globally, because you simply modified the <code>String</code> class. This functionality is called an ""open class"", and it is precisely what Refinements are there to avoid.</p>
"
"<p>As far as I know, Ruby has some convention on letter capitalization. Does it have any convention about <code>:UPPERCASE_SELECTORS</code>?</p>
","2988","","<p>Are you talking about the language or the community?</p>

<p>In the language, there is nothing that prevents you from using any Unicode character you want in a method name and/or a message selector. It might not be possible to define them via <code>def</code> or call them via <code>.</code>, but it <em>is</em> possible using reflection.</p>

<p>If you want to define them via <code>def</code> or call them with <code>.</code>, then there is still a lot of room: the name needs to start with an underscore or a letter (Unicode letters are perfectly fine, i.e. <code>µ</code> is a perfectly valid method name), followed by an arbitrary number of letters, numbers and underscores and optionally ending with either a question mark, exclamation mark or equals sign.</p>

<p>Starting with an uppercase letter, containing uppercase letters or even being completely uppercase is perfectly valid.</p>

<p>It is, however, not idiomatic. Not usually, anyway. Idiomatic method names are <code>snake_case</code>, i.e. starting with a lowercase letter and consisting of lowercase words separated by underscores, containing only ASCII characters.</p>

<p>There are exceptions, however. In particular, methods that are intended as factory companions for specific classes may have the same name as the corresponding class. For example, the <code>Kernel#Array</code>, <code>Kernel#Hash</code>, <code>Kernel#String</code>, <code>Kernel#Float</code> and <code>Kernel#Integer</code> methods that turn their argument into, well, an array, hash, string, float or integer.</p>

<p>Another exception are methods that are intended to be used like parametric classes, like the <code>Object#DelegateClass</code> method from the <code>delegate</code> library in the stdlib which takes a class and returns a wrapper class for that class, so that it can be used like this:</p>

<pre><code>class MyArray &lt; DelegateClass(Array); end
</code></pre>
"
"<p>Why does this not work?</p>

<pre><code>module StringRefinement
  refine String do
    def bar
      length
    end
  end
end

using StringRefinement
""abcdefghijklmnopqrstuvwxyz"".send(:bar)
#NoMethodError: undefined method 'bar' for ""abcdefghijklmnopqrstuvwxyz"":String
</code></pre>

<p>Can someone explain why <code>send</code> doesn't work here?  And is there a way to dynamically call methods defined in a refinement?  I can't seem to find a good, full explanation of how refinements work in Ruby 2.0.</p>
","2988","","<p>Because <a href=""http://Bugs.Ruby-Lang.Org/projects/ruby-trunk/wiki/RefinementsSpec"">the specification</a> says so:</p>

<blockquote>
  <h1>Indirect method accesses</h1>
  
  <p>Any indirect method access such as <code>Kernel#send</code>, <code>Kernel#method</code>, and <code>Kernel#respond_to?</code> shall not honor refinements in the caller context during method lookup.</p>
</blockquote>
"
"<p>I was playing with method definition and calling to them in the <code>main</code> of IRB.</p>

<pre><code>def show
 p ""hi""
end
#=&gt; nil

show
#""hi""
#=&gt; ""hi""

self.show
#""hi""
#=&gt; ""hi""
</code></pre>

<p>The above are good and understood.</p>

<p>Now let's try something different:</p>

<pre><code>def Foo
 p ""hi""
end
#=&gt; nil

Foo
#NameError: uninitialized constant Foo
        #from (irb):4
        #from C:/Ruby193/bin/irb:12:in `&lt;main&gt;'
</code></pre>

<p>While the call to <code>Foo</code> has thrown an error as above,how does the below remove that?</p>

<pre><code>self.Foo
#""hi""
#=&gt; ""hi""
</code></pre>
","2988","","<p>In Ruby, you can call methods without a receiver and without an argument list. However, this means that there is an ambiguity: does <code>foo</code> mean ""call method <code>foo</code> on the implicit receiver <code>self</code> without arguments, i.e. equivalent to <code>self.foo()</code>"" or does it mean ""dereference the variable <code>foo</code>""? Ruby can't know which you mean, so there are some simple rules.</p>

<p>For a local variable, the rule is that <code>foo</code> is <em>always</em> a method call, unless <code>foo</code> is <em>statically known at parse time</em> to be a local variable. So, when is it statically known to be a variable? When there was an assignment to that variable which was <em>parsed</em> (but not necessarily executed!) before the use.</p>

<p>Example:</p>

<pre><code>foo        # method call

if false
  foo = 42 # will never be executed, but *will* be parsed
end

foo        # variable dereference, since the `foo` assignment was parsed
</code></pre>

<p>For constant variables, the rule is even simpler: <code>Foo</code> is <em>always</em> interpreted as a constant dereference. Period.</p>

<p>So, how do you call a method with such a name? Easy: like I said, the ambiguity arises only for method calls with no argument list and no explicit receiver. So, if we add either one or both of those, Ruby will know that we are trying to call a method and not dereference a variable:</p>

<pre><code>foo()
self.foo
self.foo()

Foo()
self.Foo
self.Foo()
</code></pre>

<p>Of course, in the example you gave above, only the first one will work. When you define a method at the top-level, it is added as a <code>private</code> method to <code>Object</code>, and <code>private</code> methods can only be called <em>without</em> an explicit receiver, even if that receiver is <code>self</code>. So, <code>self.Foo</code> won't work, because <code>Foo</code> is private. (Except in IRb, where, for convenience reasons, top-level methods are <code>public</code>.)</p>
"
"<p>When we try to redefine a constant, Ruby shows only a warning, but not any error. So one can always redefine a constant in Ruby?</p>

<p>Also a private method of a class can be invoked using the send method:</p>

<pre><code>Const = 12
puts Const
#only an warning: already initialized constant Const
Const = 14
puts Const #Displays 14
class MyClass
private
    def priv
        puts 'In private method'
    end
end
obj = MyClass.new
#Error: private method `priv' called for #&lt;MyClass:0x7f2cfda21738&gt; (NoMethodError)
#obj.priv
#but this is fine!
obj.send(:priv)
</code></pre>

<p>Are there any rationale behind such designs in Ruby? Do not these violate the basic idea of constants and access specifiers respectively?</p>

<p>Is there any real, practical use of these designs? Some examples would be great if there are!</p>

<p><strong>Note:</strong> I do see a lot of questions/discussions here regarding Ruby's constants and private methods, but I did not find anything related to the reason behind these.</p>
","2988","","<p>As for <code>send</code>, the answer is rather simple: once you use reflection, all bets are off. Note that this is no different than in most other languages as well, you can also circumvent access restrictions in Java using reflection, for example.</p>

<p>And for constants, well, you <em>do</em> get a warning. You <em>do</em> get told that you are doing something you shouldn't. But Ruby is a language which trusts you that you know what you are doing. It won't get in your way. If you want to shoot yourself in the foot, you should be allowed to do that. Or, a more cynical way to look at it: there are so many evil things you can do in Ruby, redefining constants really doesn't matter that much.</p>
"
"<p>Here is my rails code</p>

<pre><code>@swimming_classschedule = Swimming::Classschedule.find(params[:id])
</code></pre>

<p>It works but it looks tedious everytime i have use this module name <code>Swimming::</code></p>

<p>Is there a way like python </p>

<p>I can <code>import Classschedule from Swimming</code> So I can save typing the module name?</p>
","2988","","<p>Classes are objects just like any other. You can assign them to variables just like any other:</p>

<pre><code>CS = Swimming::Classschedule

@swimming_classschedule = CS.find(params[:id])
</code></pre>

<p>If you want to mix in <em>all</em> constants (and methods!) defined in a module, you can use <code>Module#include</code>:</p>

<pre><code>include Swimming

@swimming_classschedule = Classschedule.find(params[:id])
</code></pre>
"
"<p>im having trouble understanding the self keyword . I get how it's used to distinguish between Instance Methods and Class Methods but what about when it's used from inside a method.</p>

<p>Something like </p>

<pre><code>def self.name
 self.name = ""TEXT""
end
</code></pre>

<p>or</p>

<pre><code>def name2
 self.name = ""TEXT2""
end
</code></pre>

<p>or </p>

<pre><code>class Array
 def iterate!(&amp;code)
  self.each_with_index do |n, i|
   self[i] = code.call(n)
  end
 end
end
</code></pre>
","2988","","<p><code>self</code> has absolutely nothing whatsoever to do with the difference between instance methods and class methods. In fact, there <em>isn't</em> even a difference between them, because Ruby doesn't <em>have</em> class methods. Ruby only has instance methods.</p>

<p><code>self</code> in Ruby is <em>exactly</em> the same as <code>self</code> (or sometimes called <code>this</code>) in every other object-oriented language: it is a reference to the current object. That's all it is. It literally is just a pointer to ""myself"".</p>
"
"<pre><code>foo = { bar: false }
foo[:bar] ||= true
</code></pre>

<p>I expected that to function like <code>foo[:bar] = true unless foo.key? :bar</code> but it does not. Is there a shorter way to conditionally declare a hash value if it has not already been declared?</p>
","2988","","<blockquote>
  <p>Why does ||= on a hash reassign a false value?</p>
</blockquote>

<p>Because that's what it's there for: assign if false, otherwise leave alone. What else should it do?</p>
"
"<p>Have an external file, <code>wordlist.rb</code>, that contains</p>

<pre><code>code_words = { 'a' =&gt; 'is a', 'b' =&gt; 'is b' }
</code></pre>

<p>This file is stored in the same directory that contains my code
require '<code>wordlist</code>'</p>

<pre><code>code_word.each do | mykey, mysentence | puts mykey + ""=&gt; "" mysentence end
</code></pre>

<p>when I run this code, I get the following message</p>

<pre><code>&lt;main&gt;': undefined local variable or method code_words' for main:Object (NameError)
</code></pre>

<p>thanks for the help</p>
","2988","","<p>Yes, it's a local variable. Local variables are local to the scope they are defined in. That's why they are called <em>local</em> variables. You cannot access another scope's local variables, that's the whole point of local variables.</p>

<p>If you want the variable to be in global scope, you need to use a global variable.</p>

<p>However, in this case, it looks like you actually want a global constant, not a variable at all:</p>

<pre><code>CODE_WORDS = { 'a' =&gt; 'is a', 'b' =&gt; 'is b' }

puts CODE_WORDS.map {|mykey, mysentence| ""#{mykey} =&gt; #{mysentence}"" }.join(""\n"")
</code></pre>
"
"<pre><code>class Test
  attr_accessor :something
end

class Test
  alias :old_something= :something=
  def something=(a)
    a += 2              # do something with the argument
    old_something=(a)   # then pass it on
  end
end
</code></pre>

<p>I would expect that if I said</p>

<pre><code>t = Test.new
t.something = 3
puts t.something
</code></pre>

<p>It would print out <code>5</code>. But it prints <code>nil</code>. Why does this not work?</p>
","2988","","<p>The form </p>

<pre><code>foo = bar
</code></pre>

<p>assigns to a local variable. You need to make it explicit that you want to call a method:</p>

<pre><code>self.foo = bar
</code></pre>
"
"<p>I am new to Ruby and to this site.</p>

<p>The following two functions are different, one alters the variable outside the function and one does not.</p>

<pre><code>def m1 (x)
  x &lt;&lt; ""4""
end

def m2 (x)
  x = x + ""4""
end


str=""123""

m2(str)   #str remains unchanged 123

m1(str)   #str is changed to 1234
</code></pre>

<p>I would like to make sure I understand this correctly -</p>

<p>When m1 is called, the reference to str is copied and passed to the function which sees it as x.  Operator &lt;&lt; changes x which references the origial str so str is changed by this operation.</p>

<p>When m2 is called, the reference to str is copied and passed to the function which sees it as x.  Operator + creates a new string, and the assignment x = x + ""4"" simply redirects x to the new string leaving the original str variable untouched.</p>

<p>Right?</p>

<p>Thanks</p>

<p><img src=""http://i.stack.imgur.com/A6RoA.png"" alt=""method declarations and invokation""></p>
","2988","","<blockquote>
  <p>The following two functions are different, one alters the variable outside the function and one does not.</p>
</blockquote>

<p>This is wrong. <em>Neither</em> of the two methods (they are methods, BTW, not functions, Ruby doesn't have functions; there is a fundamental difference) alters the <code>str</code> variable. <code>m1</code> modifies the object the variable <em>points to</em>, but that is completely different from modifying the variable <em>itself</em>.</p>
"
"<p>Why is it assigning a name/constant to Class.new behaves this way?</p>

<pre><code>c = Class.new #=&gt; &lt;Class:0xnnnnnnn&gt;
puts c  #=&gt; &lt;Class:0xnnnnnnn&gt;

b = c
puts b #=&gt; &lt;Class:0xnnnnnnn&gt;

NewClass = c   #=&gt; NewClass  &lt;shouldn't it be same as above #=&gt; &lt;Class:0xnnnnnnn&gt;
puts c  #=&gt; NewClass  &lt;and now c has a name although it was not the left operand above&gt;
</code></pre>
","2988","","<p>That's just how <a href=""http://Ruby-Doc.Org/core-2.0/Module.html#method-i-name"" rel=""nofollow""><code>Module#name</code></a> and <a href=""http://Ruby-Doc.Org/core-2.0/Module.html#method-i-inspect"" rel=""nofollow""><code>Module#inspect</code></a>/<a href=""http://Ruby-Doc.Org/core-2.0/Module.html#method-i-to_s"" rel=""nofollow""><code>Module#to_s</code></a> are defined.</p>
"
"<p>How is it possible that if I define a method in the Object class (which is defined as private), I am able to call it from inside another class? I mean, when I call say_hello from inside the class Dog, how is it resolved if say_hello is a top-level defined method and therefore is private to the Object class? I know the Object class is in the method lookup of all the classes, but if the method is private it should not be accessible right?</p>

<pre><code>def say_hello
  p ""Hello""
end
class Dog
  def test_hello
    say_hello
  end
end

prova = Dog.new
prova.test_hello
</code></pre>

<p>I guess an easier explanation of my doubt would be: Why can I call a private method of a parent from a child?</p>

<pre><code>class Animal
  private
  def prova
    p ""hello""
  end
end
class Dog &lt; Animal
  def test_hello
    prova
  end
end

prova = Dog.new
prova.test_hello
</code></pre>
","2988","","<blockquote>
  <p>but if the method is private it should not be accessible right?</p>
</blockquote>

<p>What makes you think that?</p>

<p>Private methods can only be called with an implicit receiver. You <em>are</em> calling it with an implicit receiver. Ergo, it should work … and it does.</p>
"
"<p>Recently I have been tasked with working on a fairly high volume Rails api (5k requests a second at peak).</p>

<p>Prior to this I've spent most of my coding efforts on Java applications, I'm just new to the world of Ruby/Rails.</p>

<p>At home I've been using the latest versions of Ruby/Rails to develop some small applications and get a feel for the language and framework.</p>

<p>The Rails application at work is built on Ruby 1.8.7 and Rails 2.3.16 and to me it seems quite old and there are quite a few syntax and new features missing compared with the current versions I use at home.  I prefer the newer versions of ruby and rails.</p>

<p>I raised with my team about wanting to upgrade to newer/latest versions but I was told that newer versions of Ruby aren't 'production' ready.  Sadly due to my inexperience with Ruby I'm not really in a position to dispute this.</p>

<p>Any good articles/metrics showing either same or better performance with newer Ruby/Rails versions? Personally I would expect newer iterations of a language/framework to have better performance.</p>
","2988","","<p>It's not quite clear what you are asking. You start off about perfomance, then you switch to ""production-ready"", then back to performance. Since you asked about performance twice, I'll assume that's what you meant.</p>

<p>The Ruby version makes no difference on the performance. Some people claim otherwise, but there haven't been any benchmarks actually demonstrating any sort of impact of the Ruby version on performance.</p>

<p>What <em>does</em> have a great impact on performance is the Ruby implementation you are using and the version of the implementation, as well as the environment that you are running it in. For example, JRuby is faster than MRI, JRuby 1.7 is faster than JRuby 1.6, JRuby 1.7 running on HotSpot is faster than JRuby 1.7 running on J9, JRuby 1.7 running on HotSpot 1.7 is faster than JRuby 1.7 running on HotSpot 1.6, JRuby 1.7 running on HotSpot 1.7 with the C2 compiler is faster than JRuby 1.7 running on HotSpot 1.7 with the C1 compiler, and so on.</p>
"
"<p>In Ruby, I have a list of property names like the following:     </p>

<pre><code>names = [
  :foo,
  #...
]
</code></pre>

<p>I'd like to iterate through the list and, using reflection, perform conditional assignment on the property name. So, for example, rather than this, which doesn't use reflection:</p>

<p><code>self.foo ||= 0</code></p>

<p>I'd like something like something like this:</p>

<pre><code>for name in names
   #use local variable ""name"" to perform assignment using reflection 
end
</code></pre>

<p>How can I achieve this using Ruby reflection?</p>
","2988","","<pre><code>foo.bar ||= baz
</code></pre>

<p>is <em>roughly</em> equivalent to</p>

<pre><code>foo.bar || foo.bar = baz
</code></pre>

<p>It's not quite the same, but close enough for your purpose, I think. So, </p>

<pre><code>names.each do |name| send(name) || send(:""#{name}="", 0) end
</code></pre>

<p>should do what you want. That is of course equivalent to </p>

<pre><code>names.each do |name| send(:""#{name}="", 0) if send(name) end
</code></pre>

<p>which might be a little easier to understand.</p>
"
"<p>When I execute a script in IPython, by using <code>run myscript.py</code>, the names from the script are then available in the interactive interpreter for me to experiment with further.  </p>

<p>In <code>irb</code> this doesn't seem to happen when I run the script using <code>load 'myscript.rb'</code>.  </p>

<p>How do I keep the variables in scope in interactive ruby?</p>
","2988","","<p>Local variables are local to the scope they are defined in. That's why they are called <em>local</em> variables. If you define a local variable in the script <code>myscript.rb</code>, then it will be defined inside that scope and <em>nowhere else</em>. That's the whole point of local variables.</p>

<p>If you want a variable that is available globally, use a global variable. Or maybe an instance variable of the top-level <code>main</code> object.</p>
"
"<p>Now, This is the array,</p>

<pre><code>[1,2,3,4,5,6,7,8,9]
</code></pre>

<p>I want,</p>

<pre><code>[1,2],[2,3],[3,4] upto [8,9]
</code></pre>

<p>When I do, each_slice(2) I get,</p>

<pre><code>[[1,2],[3,4]..[8,9]]
</code></pre>

<p>Im currently doing this,</p>

<pre><code>arr.each_with_index do |i,j|
  p [i,arr[j+1]].compact #During your arr.size is a odd number, remove nil.
end
</code></pre>

<p>Is there a better way??</p>
","2988","","<p>Ruby reads your mind. You want <strong>cons</strong> ecutive elements?</p>

<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9].each_cons(2).to_a
# =&gt; [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9]]
</code></pre>
"
"<p>Is there a way to find out which part of my ri command that is not showing Ruby's documentation:</p>

<pre><code> $ ruby --version
 ruby 1.9.3p392 (2013-02-22 revision 39386) [i686-linux]

 $ ri --version
 ri 3.12.2     

 $ ri String
 Nothing known about String
</code></pre>

<p>When I use pry:</p>

<pre><code> $ pry --version
 Pry version 0.9.12 on Ruby 1.9.3

 $ pry 
 [1] pry(main)&gt; ri String
 # shows String documentation
 [2] pry(main)&gt; ri String.split
 error: 'String.split' not found
 [3] pry(main)&gt; ri String.strip
 String.strip not found, maybe you meant:
 String#strip_heredoc
</code></pre>

<p>What should I do to make the documentation appear?</p>
","2988","","<blockquote>
  <p>When I use pry:</p>

<pre><code>$ pry --version
Pry version 0.9.12 on Ruby 1.9.3

$ pry 
[1] pry(main)&gt; ri String
# shows String documentation
[2] pry(main)&gt; ri String.split
error: 'String.split' not found
[3] pry(main)&gt; ri String.strip
String.strip not found, maybe you meant:
String#strip_heredoc
</code></pre>
  
  <p>What should I do to make the documentation appear?</p>
</blockquote>

<p>Well, there are no methods <code>String.split</code> or <code>String.strip</code>. There are, however, methods <code>String#split</code> and <code>String#strip</code>. Try asking for those, and you'll probably get their documentation.</p>
"
"<p>I'm using the ruby version <code>1.9.3</code>, I like to get host name from the video url below,</p>

<p>I tried with code</p>

<pre><code>require 'uri'
url = ""https://ferrari-view.4me.it/view-share/playerp/?plContext=http://ferrari-%201363948628-stream.4mecloud.it/live/ferrari/ngrp:livegenita/manifest.f4m&amp;cartellaConfig=http://ferrari-4me.weebo.it/static/player/config/&amp;cartellaLingua=http://ferrari-4me.weebo.it/static/player/config/&amp;poster=http://pusher.newvision.it:8080/resources/img1.jpg&amp;urlSkin=http://ferrari-4me.weebo.it/static/player/swf/skin.swf?a=1363014732171&amp;method=GET&amp;target_url=http://ferrari-4me.weebo.it/static/player/swf/player.swf&amp;userLanguage=IT&amp;styleTextColor=#000000&amp;autoPlay=true&amp;bufferTime=2&amp;isLive=true&amp;highlightColor=#eb2323&amp;gaTrackerList=UA-23603234-4""  
puts URI.parse(url).host  
</code></pre>

<p>it throws an exception URI::InvalidURIError: bad URI(is not URI?):</p>

<p>I tried with encode the URL then parse like below </p>

<pre><code>puts URI.parse(URI.parse(url)).host
</code></pre>

<p>it throws an exception same <code>URI::InvalidURIError: bad URI(is not URI?)</code></p>

<p>But above code works for the below URL.</p>

<p>url = <a href=""http://www.youtube.com/v/GpQDa3PUAbU?version=3&amp;autohide=1&amp;autoplay=1"" rel=""nofollow"">http://www.youtube.com/v/GpQDa3PUAbU?version=3&amp;autohide=1&amp;autoplay=1</a></p>

<p>How to fix this? any suggestion please.
Thanks </p>
","2988","","<p><code>URI.parse</code> is right: that URI is illegal. Just because it accidentally happens to work in your browser doesn't make it legal. You cannot parse that URI, because it <em>isn't</em> a URI.</p>
"
"<p>Is there any difference between? </p>

<pre><code>def some_method
  some_instructions and return
end
</code></pre>

<p>and:</p>

<pre><code>def some_method
  return some_instructions
end
</code></pre>
","2988","","<p>Yes, there is: the first one returns <code>nil</code> if the return value of <code>some_instructions</code> is truthy and the return value of <code>some_instructions</code> if the return value of <code>some_instructions</code> is falsy. The second one always returns the return value of <code>some_instructions</code>.</p>
"
"<p>On rbenv (ruby-build), what's the difference between rbx-2.0.0-rc1 and rbx-2.0.0-dev?</p>

<p>I came across <a href=""https://twitter.com/veganstraightedge/status/315641493245267969"" rel=""nofollow"">https://twitter.com/veganstraightedge/status/315641493245267969</a> , but that made me more, rather than less, confused.</p>
","2988","","<p>rbx-2.0.0-rc1 is the Release Candidate 1 of Rubinius 2.0.0. rbx-2.0.0-dev is the development version of Rubinius 2.0.0, IOW whatever the HEAD of the Git repository happens to be when you run ruby-build.</p>
"
"<p>In Windows <code>LoadImage</code> API loads image to the memory.</p>

<p>FreeImage (<a href=""http://freeimage.sourceforge.net"" rel=""nofollow"">http://freeimage.sourceforge.net</a>)  is a cross-platform library for loading and saving images, but I want to use functions like <code>LoadImage</code> in Windows, that do not depend to any external libraries like FreeImage.</p>

<p>Is there any native functions in Linux that load and save images without using external libraries?</p>
","2988","","<p>No, there isn't. Loading and saving images is really not the job of an Operating System kernel like Linux. A kernel manages memory, IO and CPU resources, and that's it. Everything else should be done by user-level code.</p>
"
"<pre><code>module A

end

class D

  mix A

end  

c1 = D.new
</code></pre>

<p>Here is my output:</p>

<pre><code>archie@local$ruby mixins-traits.rb 
mixins-traits.rb:4:in `&lt;class:D&gt;': undefined method `mix' for D:Class (NoMethodError)
    from mixins-traits.rb:3:in `&lt;main&gt;'
</code></pre>
","2988","","<p>Traits didn't make it into Ruby 2.0. They are neither mentioned in the <a href=""http://Ruby-Lang.Org/en/news/2013/02/24/ruby-2-0-0-p0-is-released/"" rel=""nofollow"">Release Notes</a> nor in the <a href=""https://GitHub.Com/Ruby/Ruby/blob/ruby_2_0_0/NEWS"" rel=""nofollow"">NEWS</a>.</p>
"
"<p>Does polymorphism exist in Ruby? I've read that Ruby does not support polymorphism, and instead it supports method overloading and method overriding. Can someone clarify this for me with an example?</p>
","2988","","<p>Ruby doesn't support method overloading. The very <em>idea</em> of method overloading doesn't even make sense in a dynamically typed language.</p>

<p>Ruby <em>does</em> support ad-hoc polymorphism, just like pretty much every object-oriented language on the planet.</p>
"
"<p>Would someone care to explain why in older versions of Ruby, the result of the assignment was the value returned by the attribute-setting method, but after Ruby 1.8, the value of the assignment is always the value of the parameter; the return value of the method is discarded. In the code that follows, older versions of Ruby would set result to 99. Now result will be set to 2.</p>

<pre><code>class Test
  def val=(val)
    @val = val
    return 99
  end
end

t = Test.new
result = (t.val = 2)
result # =&gt; 2
</code></pre>

<p>What was the reasoning behind this change?</p>
","2988","","<p>Assignments <em>always</em> evaluate to the assigned value. That's a simple and consistent rule, both consistent <em>within</em> Ruby itself, as well as consistent with most other expression-based programming languages.</p>

<p>Everything else would be an inconsistent special case, and those are bad.</p>
"
"<p>Here's what I want to do, roughly:</p>

<pre><code>module Foo

  def self.included base
    base.extend ClassMethods
  end

end

module Bar
  extend Foo

  module ClassMethods
    def hi
      return ""hello!""
    end
  end
end

class Baz
  include Bar
end

Baz.hi #=&gt; ""hello!'
</code></pre>

<p>but instead I get</p>

<pre><code>NoMethodError: undefined method `hi' for Baz:Class
</code></pre>

<p>If it's not clear, more generally what I'm trying to do is create one module that contains logic for the <code>included</code> callback, which several other modules then extend, and I want them to use the <code>included</code> callback from the extended module (but if, e.g., <code>Bar</code> extends <code>Foo</code>, I'd like <code>self</code> to refer to <code>Bar</code> in the the closure for <code>included</code>, if possible).</p>

<p>Probably that's a bit confusing.</p>
","2988","","<p>You never <code>include Foo</code> anywhere, therefore the <code>included</code> hook is never called. You need to use the <code>extended</code> hook, since you <code>extend Foo</code>:</p>

<pre><code>module Foo
  def self.extended(base)
    base.define_singleton_method(:included) do |base|
      base.extend base::ClassMethods
    end
  end
end

module Bar
  extend Foo

  module ClassMethods; def hi; 'hello!' end end
end

class Baz; include Bar end

Baz.hi #=&gt; 'hello!'
</code></pre>
"
"<p>Dig this, here is a cool <code>Enumerator</code> (lazy sequence) from 1 to (the biggest <code>Float</code> Ruby can represent):</p>

<pre><code>1.9.3-p327 :014 &gt; e = (1..Float::INFINITY).each
</code></pre>

<p>Look at how we can grab the front of the sequence:</p>

<pre><code>1.9.3-p327 :015 &gt; e.first
 =&gt; 1 
1.9.3-p327 :016 &gt; e.take(2)
 =&gt; [1, 2] 
</code></pre>

<p>That's good stuff huh? I think so too. But then this:</p>

<pre><code>1.9.3-p327 :017 &gt; e.drop(2).first
</code></pre>

<p>Goes into lala land. And by that I mean it doesn't return in less than 5 seconds.</p>

<p>Oh here is a clue:</p>

<pre><code>1.9.3-p327 :020 &gt; p e.method(:drop)
#&lt;Method: Enumerator(Enumerable)#drop&gt;
</code></pre>

<p>It appears that the Enumerator (<code>e</code>) got its <code>#drop</code> method from the <code>Enumerable</code> (module) mixed in to the <code>Enumerator</code> (class). Now why in the world would Ruby go and mix <code>Enumerable</code> into <code>Enumerator</code> you ask? I do not know. But there it is, documented in both <a href=""http://ruby-doc.org/core-1.9.3/Enumerator.html"" rel=""nofollow""><code>Enumerator</code> in Ruby 1.9.3</a> and <a href=""http://ruby-doc.org/core-2.0/Enumerator.html"" rel=""nofollow""><code>Enumerator</code> in Ruby 2.0</a>.</p>

<p>The problem as I see it is that some methods defined in <code>Enumerable</code> work or kind of work on <code>Enumerator</code>. Examples include <code>#first</code> and <code>#take</code>. At least one other: <code>#drop</code> does not work.</p>

<p>It seems to me that <code>Enumerator</code> including <code>Enumerable</code> is a bug. What do you think?</p>

<p>PS notice that Ruby 2.0 defines <code>Enumerator::Lazy</code> (subclass of <code>Enumerator</code>) which defines a bunch of the <code>Enumerable</code> methods as always lazy. Something smells fishy here. Why mix in the non-lazy and in some cases broken methods (into <code>Enumerator</code>) only to turn around and provide lazy alternatives in a subclass (of <code>Enumerator</code>)?</p>

<p>See also:</p>

<pre><code>1.9.3-p327 :018 &gt; p e.method(:first)
#&lt;Method: Enumerator(Enumerable)#first&gt;
1.9.3-p327 :020 &gt; p e.method(:drop)
#&lt;Method: Enumerator(Enumerable)#drop&gt;
</code></pre>
","2988","","<p>That's a design choice that is common to many other collection frameworks as well.</p>

<p>Ruby's collection operations are not type-preserving. They <em>always</em> return an <code>Array</code>, regardless of what type of collection they were called on. That's also what, for example, .NET does, except there the type is always <code>IEnumerable</code>, which is both more useful (because more things can be represented as an <code>IEnumerable</code> than as an <code>Array</code>, e.g. infinite sequences) and at the same time less useful (because the interface of <code>IEnumerable</code> is much smaller than that of <code>Array</code>, so there are less operations you can do on it).</p>

<p>This allows Ruby's collection operations to be implemented <em>once</em>, without duplication.</p>

<p>It also means that it's very easy to integrate your own collections into Ruby's collection framework: just implement <code>each</code>, mixin <code>Enumerable</code> and you are done. If a future version of Ruby adds a new collection method (e.g. <code>flat_map</code> in Ruby 1.9), you don't have to do <em>anything</em>, it just works with your collection, too.</p>

<p>Another design choice would be to make all collection operations type-preserving. So, all collection operations return the type they were called on.</p>

<p>There are some languages which do this. It is, however, implemented by copy&amp;pasting all collection methods into all collection classes, i.e. with massive code duplication.</p>

<p>This means that if you want to add your own collection to the collection framework, you have to implement every single method of the collection protocol. And if a future version of the language adds new methods, then you have to release a new version of your collection.</p>

<p>Scala 2.8's collection framework was the first time that someone figured out how to do type-preserving collection operations without code duplication. But that was long after Ruby's collection framework was designed. When Ruby's collection framework was designed, it was simply not yet known how to do type-preserving collection operations without code duplication, and the designers of Ruby opted against duplication.</p>

<p>Starting with Ruby 1.9, there is actually some duplication. Some <code>Hash</code> methods were duplicated to return <code>Hash</code>es instead of <code>Array</code>s. And you already mentioned Ruby 2.0's <code>Enumerator::Lazy</code>, which duplicates many <code>Enumerable</code> methods to return <code>Enumerator::Lazy</code>.</p>

<p>It would be possible to use the same tricks Scala uses in Ruby, but it would require a complete rework of the collection framework, which would make every existing collection implementation obsolete. Scala was able to do this because at the time there was hardly any user base.</p>
"
"<p>I have a module called <em>WG</em> that all classes inside my application are inside, purely for the purposes of namespacing, so I don't have naming collisions with outside code.</p>

<p>My issue is that every class in my application then needs to be specified as being inside that module, and that's a pain, mainly because it adds one indent level to <em>all</em> code in my application.</p>

<p>In other words, here's a typical class, in a file called ""Thing.rb""</p>

<pre><code>module WG
  class Thing
    def do_things
    end
  end
end
</code></pre>

<p>In my mind, there should be some way of requiring that file <em>inside</em> the context of the <em>WG</em> module, so that I can forego the line at the top and at the end, and the mandatory one-level indentation.</p>

<p>Thanks!</p>
","2988","","<p>There isn't. <code>require</code>ing a file simply runs the file as-is.</p>

<p><code>load</code> allows you to run the code inside the context of an anonymous module, but not a specific one. Of course, you can still access the global namespace by using the <code>::</code> scope resolution operator.</p>
"
"<p>I have a DVB-T stick, I am able to use VLC to stream a channel and then access it on another computer on my LAN. Now I want that my VLC (on server) can stream different channels using same single DVB-T Stick on different ports of my server. On the client side when user change the port number, they would be able to access different channels. I tried many times to achieve this functionality (by running multiple instances of VLC and changing the frequency and port number on server) but it doesnt allow me to run two VLC same time using one DVB-Stick. Please guide me how can I implement this functionality?</p>
","2988","","<p>You need as many receivers as you want to view streams simultaneously. I know that some set-top boxes have two receivers, so that you can watch two streams picture-in-picture or record one stream while watching another, but I don't know about USB sticks. And even if there are USB sticks with multiple receivers, I highly doubt they will have more than two.</p>

<p>So, you will need one receiver for every stream, which probably means one USB stick for every stream.</p>
"
"<pre><code> module A
   def foo
     if super.respond_to? :foo
        puts 'super responded to :foo'
     end
   end
 end

 class Lab
   include A
 end

 puts Lab.ancestors.inspect #=&gt; Lab, A, Object, Kernel, BasicObject]
 Lab.new.foo
</code></pre>

<p><code>foo': super: no superclass method</code>foo' for # (NoMethodError)</p>

<p>I was assuming that in this case the call to super would go to <code>Object</code> and then to <code>BasicObject</code> and finally false would be returned.</p>

<p>Why I'm getting <code>no superclass method foo</code> ?</p>

<p>I'm using ruby 1.9.3 .</p>
","2988","","<p>Your code doesn't really make sense: you guard the call to <code>super</code> with a condition, but you are calling <code>super</code> in that condition anyway. In other words: you are calling <code>super</code> in order to determine whether it is safe to call <code>super</code>. Therefore, you will get an error if there is no method called <code>foo</code> in the ancestry chain.</p>
"
"<p>I can only find methods that look for specific elements of an array.</p>

<p>During my objects.each |a| loop, I want to know when I'm at the final element so I can have a loop like:</p>

<pre><code>objects.each |a|
   if objects.hasNext()
       puts a.name + "",""
   else
       puts a.name
</code></pre>

<p>Iterator's hasNext() determines if the Array's iterator has another element after the one currently being evaluated.</p>

<p>I want to emphasize that I'm looking to print out these values, not turn them in to an Array. .join is not what I'm looking for here.</p>
","2988","","<p>No, there isn't. However, note that <code>hasNext</code> is not an <code>Array</code> operation in Java, either. It's an <code>Iterator</code> operation, and Ruby's equivalent to Java's <code>Iterator</code> is <code>Enumerator</code>, not <code>Array</code>.</p>

<p>However, Ruby's <code>Enumerator</code> works a little bit different than Java's: instead of asking whether there is a next element, and then advancing the iterator, you simply try to look at the next element and it throws a <code>StopIteration</code> exception when there are no more elements.</p>

<p>So, the equivalent to Java's</p>

<pre><code>iter.hasNext);
</code></pre>

<p>would be roughly</p>

<pre><code>begin
  enum.peek
  true
rescue StopIteration
  false
end
</code></pre>

<p>However, you almost <em>never</em> iterate manually in Ruby. Instead, you use higher-level iteration methods such as <code>join</code>, <code>flat_map</code>, <code>group_by</code>, <code>uniq</code>, <code>sort</code>, <code>sort_by</code>, <code>inject</code>, <code>map</code>, <code>each_with_object</code>, <code>each</code> etc.</p>

<p>For example:</p>

<pre><code>%w(pretty ugly stupid).join(', ') # =&gt; 'pretty, ugly, stupid'
</code></pre>
"
"<p>The first point in the <a href=""http://semver.org/"" rel=""nofollow"">Semantic Versioning Specification</a> states that compatible software must declare a public API.</p>

<p>I'm wondering how gems establish this public API. It seems that it's typically done through the readme (see <a href=""https://github.com/rails/rails/tree/master/activerecord"" rel=""nofollow"">ActiveRecord</a>, for example), which doesn't feel like it draws a strict boundary between the public API code and the rest. An example of a gem that does this better is the <a href=""https://github.com/sferik/twitter"" rel=""nofollow"">Twitter API</a>, placing its public API code in an <a href=""https://github.com/sferik/twitter/tree/master/lib/twitter/api"" rel=""nofollow"">API directory</a>, but even there the line is grey, as the public API's configure method is defined in <a href=""https://github.com/sferik/twitter/blob/master/lib/twitter.rb"" rel=""nofollow"">twitter.rb</a>, outside the API directory.</p>

<p>As a potential contributor to a gem that attempts to stick to semantic versioning (which is most of them, given we have tools like bundler), I'd like to know which methods are part of the public API, and which aren't. Maybe I have to look through more source code, but are there guidelines somewhere for clearly defining your public API?</p>
","2988","","<p>There are some popular ways to define the public API. Which one you choose is mostly a matter of taste.</p>

<p>One way is <em>documentation</em>. You simply state in the documentation, which protocols are part of the public API, and what the contract of those protocols is. YARD even has predefined tags for this.</p>

<p>Another way is <em>testing</em>. I think Merb did this. The public API was described in its RSpec tests. The private parts were obviously also tested, but those tests lived in a different directory.</p>

<p>This is actually pretty cool, because it allows you to tie together code changes and semantic version changes: everytime you add a test to the public directory you need to bump the minor version. Everytime you delete or modify a test in the public directory you need to bump the major version.</p>

<p>Or the other way round: you are not allowed to change or delete tests during a minor revision.</p>
"
"<p>In Ruby, like many languages, a method's arguments are not automatically assigned as instance variables. </p>

<p>This works:</p>

<pre><code>def initialize(a)
  @a = a
end
</code></pre>

<p>This doesn't:</p>

<pre><code>def initialize(@a)
end
</code></pre>

<p>In CoffeeScript, for example, this works:</p>

<pre><code>constructor: (@name) -&gt;
</code></pre>

<p>There are a lot of other syntactic sugar in Ruby, such as the <code>||=</code> operator, the unary <code>&amp;</code> on symbols, etc. Is there any reason, technical or otherwise, why this sugar isn't part of the design? </p>

<p><strong>Edit</strong></p>

<p>The scope of the question is not limited to <code>initialize</code>. </p>

<p>In CoffeeScript you can also do</p>

<pre><code>class Foo
  baz: (@bar) -&gt;
</code></pre>
","2988","","<p>In Ruby 1.8 and earlier, block arguments use assignment semantics instead of argument binding semantics, so you can do this:</p>

<pre><code>define_method(:initialize) do |@a| end
</code></pre>
"
"<p>I am curious on what basis ruby and ror versions are named. For example, after ruby 1.9.3, its version is 2.0 instead of 1.10 or 1.9.4, and so in rails. There must be some convention or rule.</p>
","2988","","<p>Ruby and Rails, like many other projects follow <a href=""http://SemVer.Org/"" rel=""nofollow"">Semantic Versioning</a>.</p>

<p>They don't always follow it to the letter, though. For example, Ruby 1.9 is backwards-incompatible with Ruby 1.8, whereas Ruby 2.0 is mostly compatible with Ruby 1.9, so really Ruby 1.9 should have been Ruby 2.0 and Ruby 2.0 should have been Ruby 2.1.</p>

<p>In this particular case, there were historic ""marketing"" reasons for that: the term ""Ruby 2.0"" has been used in the Ruby community for over 10 years now to mark a specific ""mythical"" version with specific, often talked-about features like scoped monkey patching and traits. Releasing a version <em>without</em> those features but still calling it ""2.0"" would have been <em>more</em> confusing than breaking the rules of Semantic Versioning. (Actually, Ruby 2.0 <em>was</em> released without traits and <a href=""http://stackoverflow.com/q/15871618/2988"">it <em>has</em> led to confusion</a>!)</p>

<p>OTOH, it was impossible to call it ""1.10"", because the <code>RUBY_VERSION</code> constant returns the version as a <code>String</code>, and a lot of tools (incorrectly) do something like </p>

<pre><code>if RUBY_VERSION &lt;= '1.8'
  def foo
  end
end
</code></pre>

<p>which would break, because the <code>String</code> <code>'1.10'</code> is actually <em>less than</em> the <code>String</code> <code>'1.8'</code>.</p>

<p>Therefore, it was decided to settle on 1.9.</p>
"
"<p>I have a bunch of .txt's that Notepad++ says (in its drop-down ""Encoding"" menu) are ""ANSI"".</p>

<p>They have German characters in them, [äöüß], which display fine in Notepad++.</p>

<p>But they don't show up right in irb when I <code>File.read 'this is a German text example.txt'</code> them.</p>

<p>So does anyone know what argument I should give <code>Encoding.default_external=</code>?</p>

<p>(I'm assuming that'd be the solution, right?)</p>

<p>When <code>'utf-8'</code> or <code>'cp850'</code>, it reads the ""ANSI"" file with ""äöüß"" in it as ""\xE4\xF6\xFC\xDF""...</p>

<p>(Please don't hesitate to mention apparently ""obvious"" things in your answers; I'm pretty much as newbish as you can be and still know just enough to ask this question.)</p>
","2988","","<p>What they mean is probably ISO/IEC 8859-1 (aka Latin-1), ISO-8859-1, ISO/IEC 8859-15 (aka Latin-9) or Windows-1252 (aka CP 1252). All 4 of them have the <code>ä</code> at position <code>0xE4</code>.</p>
"
"<p>I have an application which needs to run Ruby code interfacing with the application itself as a kind of extension. The problem is, I need to be able to run separate instances of the Ruby interpreter because one extension cannot affect the other. </p>

<p>The other issue is that I require the interpreter to be fully included in my executable, so Rubinius is out of question. MRuby, although still in development, seems to be able to run like this, but is too limited. Is there any way to do it with MRI or any other implementation more capable than MRuby?</p>
","2988","","<p>Rubinius, JRuby and IronRuby are the only ones I know off-hand to be capable of having multiple Ruby Environments per process.</p>
"
"<p>I've seen code like this:</p>

<pre><code>def some_method
  # ...
end.another_method
</code></pre>

<p>What does the <code>end.another_method</code> part do?</p>
","2988","","<p>In Ruby, the <code>.</code> is the <em>message sending operator</em>. (In other languages, it would be called a <em>method calling operator</em> instead.) So, when you say </p>

<pre><code>foo.bar
</code></pre>

<p>it means ""evaluate <code>foo</code> and send the message <code>bar</code> to the result of evaluating <code>foo</code>"".</p>

<p>In this particular case, you are sending the message <code>another_method</code> to the result of evaluating </p>

<pre><code>def some_method; end
</code></pre>

<p>The Ruby Language Specification says that the value of a method definition expression is undefined and should be ignored; and on most Ruby implementations, method definition expressions simply evaluate to <code>nil</code>, which isn't terribly useful.</p>

<p>However, on some implementations, method definition expressions <em>do</em> evaluate to something more useful than <code>nil</code>. On Rubinius, for example, they evaluate to the <code>CompiledMethod</code> object for the method being defined. And <code>CompiledMethod</code> has a rich API, so sending messages to a <code>CompiledMethod</code> object definitely makes sense.</p>

<p>It has also been proposed that method definition expressions should return a <code>Symbol</code> corresponding to the name of the method being defined or a <code>Method</code> object.</p>

<p>Put simply: the dot in this particular case means the exact same thing it always means in Ruby: send a message, call a method, invoke a member function, whatever you want to call it.</p>
"
"<p>I want to design a software and I have a question</p>

<p>What should I see in the first phase (first look) ?</p>

<p>Define Entities(objects)?</p>

<p>or</p>

<p>Modules?</p>

<p>or</p>

<p>Relations</p>

<p>or </p>

<p>...</p>

<p>Thank you so much</p>
","2988","","<p>You are basically asking how to design programs. It turns out there is a book which teaches you that, and it is called … <a href=""http://HtDP.Org/"" rel=""nofollow""><em>How to Design Programs</em></a> (aka HtDP). It teaches you, well, how to design programs. And it does this by giving you recipes to follow for how to analyze problems, solve them, transform them into algorithms and further into working programs. </p>

<p>Note that ""recipe"" is basically another word for ""program"", so in other words, the book teaches you programs for humans to run in their heads in order to generate programs to be executed by computers. How cool is that? :-)</p>

<p>The authors are currently working on a <a href=""http://WWW.CCS.NEU.Edu/home/matthias/HtDP2e/Draft/"" rel=""nofollow"">draft for a second edition of HtDP</a>, which you might want to read instead of the first edition. The material about imperative programming has been removed, and is going to be covered in the as-of-yet unwritten second volume <em>How to Design Components</em>, but you can read those missing chapters from the first edition.</p>

<p>Note that HtDP assumes no programming knowledge and is targeted at high school students. But don't let that stop you: it just means that you'll probably be able to finish some early chapters faster, but I don't think you will be bored.</p>

<p><a href=""https://Gustavus.Edu/+max/concrete-abstractions.html"" rel=""nofollow"">Concrete Abstractions</a> is also a good read along similar veins. Like HtDP, it doesn't assume any programming knowledge.</p>

<p>Another book that you might hear mentioned is <a href=""http://MITPress.MIT.Edu/sicp/"" rel=""nofollow""><em>Structure and Interpretation of Computer Programs</em></a> aka SICP. It is one of the greatest programming books ever written, and again, it doesn't assume any programming knowledge. </p>

<p>It <em>is</em>, however, geared to complete newbies <em>who study at MIT</em>. And so, while it does not assume any programming knowledge, it <em>does</em> assume quite a bit of <em>domain</em> knowledge, e.g. in the fields of electrical engineering, physics and math. Note: these have nothing to do with the <em>concepts</em> being taught, they are just needed to understand the <em>exercises</em> and <em>examples</em>. So, it might be better to read HtDP or Concrete Abstractions first, and then read SICP.</p>
"
"<p>I'm going through Ruby Koans, and I hit #41 which I believe is this:</p>

<pre><code>def test_default_value_is_the_same_object
  hash = Hash.new([])

  hash[:one] &lt;&lt; ""uno""
  hash[:two] &lt;&lt; ""dos""

  assert_equal [""uno"",""dos""], hash[:one]
  assert_equal [""uno"",""dos""], hash[:two]
  assert_equal [""uno"",""dos""], hash[:three]

  assert_equal true, hash[:one].object_id == hash[:two].object_id
end
</code></pre>

<p>It could not understand the behavior so I Googled it and found a <a href=""http://stackoverflow.com/questions/2698460/strange-ruby-behavior-when-using-hash-new"">Stack Overflow post</a> that answered the question nicely.</p>

<p>So I understand how that works, my question is, why does a default value such as an integer that gets incremented not get changed during use?  For example:</p>

<pre><code>puts ""Text please: ""
text = gets.chomp

words = text.split("" "")
frequencies = Hash.new(0)
words.each { |word| frequencies[word] += 1 }
</code></pre>

<p>This will take user input and count the number of times each word is used, it works because the default value of 0 is always used.</p>

<p>I have a feeling it has to do with the <code>&lt;&lt;</code> operator but I'd love an explanation.</p>
","2988","","<p>The other answers seem to indicate that the difference in behavior is due to <code>Integer</code>s being immutable and <code>Array</code>s being mutable. But that is misleading. The difference is not that the <em>creator</em> of Ruby decided to make one immutable and the other mutable. The difference is that <em>you</em>, the <em>programmer</em> decided to mutate one but not the other.</p>

<p>The question is not whether <code>Array</code>s are mutable, the question is whether you <em>mutate</em> it.</p>

<p>You can get both the behaviors you see above, just by using <code>Array</code>s. Observe:</p>

<h2>One default <code>Array</code> with mutation</h2>

<pre><code>hsh = Hash.new([])

hsh[:one] &lt;&lt; 'one'
hsh[:two] &lt;&lt; 'two'

hsh[:nonexistent]
# =&gt; ['one', 'two']
# Because we mutated the default value, nonexistent keys return the changed value

hsh
# =&gt; {}
# But we never mutated the hash itself, therefore it is still empty!
</code></pre>

<h2>One default <code>Array</code> without mutation</h2>

<pre><code>hsh = Hash.new([])

hsh[:one] += ['one']
hsh[:two] += ['two']
# This is syntactic sugar for hsh[:two] = hsh[:two] + ['two']

hsh[:nonexistant]
# =&gt; []
# We didn't mutate the default value, it is still an empty array

hsh
# =&gt; { :one =&gt; ['one'], :two =&gt; ['two'] }
# This time, we *did* mutate the hash.
</code></pre>

<h2>A new, different <code>Array</code> every time with mutation</h2>

<pre><code>hsh = Hash.new { [] }
# This time, instead of a default *value*, we use a default *block*

hsh[:one] &lt;&lt; 'one'
hsh[:two] &lt;&lt; 'two'

hsh[:nonexistent]
# =&gt; []
# We *did* mutate the default value, but it was a fresh one every time.

hsh
# =&gt; {}
# But we never mutated the hash itself, therefore it is still empty!


hsh = Hash.new {|hsh, key| hsh[key] = [] }
# This time, instead of a default *value*, we use a default *block*
# And the block not only *returns* the default value, it also *assigns* it

hsh[:one] &lt;&lt; 'one'
hsh[:two] &lt;&lt; 'two'

hsh[:nonexistent]
# =&gt; []
# We *did* mutate the default value, but it was a fresh one every time.

hsh
# =&gt; { :one =&gt; ['one'], :two =&gt; ['two'], :nonexistent =&gt; [] }
</code></pre>
"
"<p>I've to ""compile"" compass files dynamically in my java soft'. So, following explications found on stackoverflow, I've done these steps :</p>

<ul>
<li>Get JRuby (1.7.3), configure PATH to jruby.jar and binaries (gem, rake ...) and learn to launch ruby script from Java</li>
<li><p>Get compass and dependancies gems into a local directory, using following command line</p>

<pre><code>gem install -i ./compass compass
</code></pre>

<p>=> So I get a directory <code>./compass/</code> containing <code>bin, cache,doc, gems &amp; specifications</code> directories.</p></li>
<li><p>Put gems in a jar using following command line (think to use a jar name which is not the same as the gems, to avoid JRuby ""require"" the jar instead of the gems)</p>

<pre><code>jar cf compass-lib.jar -C compass .
</code></pre></li>
<li><p>Write a test script <code>test.rb</code> in local directory to test my jar. It contains :</p>

<pre><code>require 'compass'

Compass.add_configuration(
    {
        :project_path =&gt; '.',
        :sass_path =&gt; 'styles/scss',
        :css_path =&gt; 'styles/css'
    },
    'custom' # A name for the configuration, can be anything you want
)
Compass.compiler.compile('test.scss', 'test.css')
</code></pre></li>
<li><p>Execute this script with JRuby, with following command line :</p>

<pre><code>jruby -I . -rcompass-lib.jar test.rb
</code></pre></li>
<li><p>And get this error ...</p>

<pre><code>Unable to load Sass. Please install it with one of the following commands:
  gem install sass --pre
LoadError: no such file to load -- jar:file:C:/jruby-1.7.3/lib/jruby.jar!/gems/s
ass-3.2.8/lib/sass/../sass
  require at org/jruby/RubyKernel.java:1027
  require at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:36
   (root) at jar:file:C:/jruby-1.7.3/lib/jruby.jar!/gems/sass-3.2.8/lib/sass/ver
sion.rb:5
  require at org/jruby/RubyKernel.java:1027
   (root) at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:1
  require at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:36
  require at org/jruby/RubyKernel.java:1027
   (root) at jar:file:C:/jruby-1.7.3/lib/jruby.jar!/gems/sass-3.2.8/lib/sass.rb:
9
   (root) at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:1
  require at org/jruby/RubyKernel.java:1027
  require at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:60
   (root) at jar:file:C:/jruby-1.7.3/lib/jruby.jar!/gems/compass-0.12.2/lib/comp
ass/dependencies.rb:6
     each at org/jruby/RubyArray.java:1613
   (root) at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:1
  require at org/jruby/RubyKernel.java:1027
  require at c:/jruby-1.7.3/lib/ruby/shared/rubygems/custom_require.rb:36
   (root) at test.rb:1
</code></pre></li>
</ul>

<p>An idea of the problem and, maybe, of solution ? ;) Thanks by advance.</p>

<p><strong>[UPDATE #1]</strong></p>

<p>After Jörg W Mittag obvious suggestion, the error disapear. Thanks ;) Now, it just don't find the scss file, so it's a ""normal problem"" ;)</p>

<p><strong>[UPDATE #2]</strong></p>

<p>Having used compass with success in IRB, it's time to transpose the test through Java. So, I wrote some lines in Java to execute my ruby script, using only absolute path to avoid problems in a first time.</p>

<pre><code>InputStream myFile = ISRessources.getFile(""C:/Path/To/My/test.rb"");
new ScriptingContainer().runScriptlet(myFile, ""test.rb"");
</code></pre>

<p>But ... how to ""load"" my <code>compass-lib.jar</code> ? What's the equivalent of the <code>-r</code> in JRuby ? I've tried to includ gems into jruby.jar, to add compass-lib.jar in externals jars in java build path, but both don't work, I still have :</p>

<pre><code>LoadError: no such file to load -- compass
  require at org/jruby/RubyKernel.java:1027
   (root) at test.rb:1
</code></pre>

<p>Any idea ?</p>
","2988","","<p>The error message says:</p>

<blockquote>
  <p>Unable to load Sass. Please install it with one of the following commands:</p>

<pre><code>gem install sass --pre
</code></pre>
</blockquote>
"
"<p>I'm playing around with some ruby code and doing something like:</p>

<pre><code>1.9.3-p392 :012 &gt; class Mx; self; end.object_id
 =&gt; 70263149976460 
1.9.3-p392 :013 &gt; class Mx; end.object_id
 =&gt; 4 
</code></pre>

<p>I think that the first example is returning a real reference to that class as the code is executed but what is happening in the second example? What is 4? It's interesting that it returns NilClass if </p>

<pre><code>1.9.3-p392 :017 &gt; class Mx; end.class
 =&gt; NilClass 
</code></pre>
","2988","","<p>Class definition expressions evaluate to the value of the last expression inside of the class definition. In the second case, there is <em>nothing</em> in the class definition, so the class definition evaluates to Ruby's representation of nothingness, which is <code>nil</code>.</p>

<p>In the first case, the last (and only) expression inside the class definition is <code>self</code>, which is a special pseudo-variable corresponding to the current object, and in a class definition that is the class object itself. (Remember, classes are objects just like any other object.)</p>
"
"<p>The code below is from comments controller. What is ""oh"" doing in line 3?</p>

<pre><code>@offer = Offer.find(params[:offer_id])
@offer_comment = @offer.offer_comments.build(params[:offer_comment])
@offer_comment.commenter oh = current_user
@offer_comment.save!
Notify::offer_comment_create(@offer_comment)
@offer.update_attribute(:read, false) if @offer.read? and current_user == @offer.offerer
</code></pre>
","2988","","<p>It is creating a new local variable named <code>oh</code> and assigning the result of <code>current_user</code> to it. However, the variable is never used anywhere else, so it's basically a no-op.</p>
"
"<p>I have this array</p>

<pre><code>a = [[1,2,3,4,5],[2,3,6],[2,8,9]]
</code></pre>

<p>How can I get the intersection of all the arrays in <code>a</code>? It should be the same as <code>a[0]&amp;a[1]&amp;a[2]</code>, which is:</p>

<pre><code>[2]
</code></pre>
","2988","","<pre><code>a = [[1 ,2, 3, 4, 5], [2, 3, 6], [2, 8, 9]]

a.inject(:&amp;)
# =&gt; [2]
</code></pre>
"
"<p>According to the ruby guide we have decided to use which can be found <a href=""https://github.com/bbatsov/ruby-style-guide#collections"" rel=""nofollow"">here</a> it seems like it's a very good idea to specify the encoding of a gem and the source files within the gem.  My question is does:</p>

<p><code># -<em>- encoding: utf-8 -</em>-</code></p>

<p>At the top of a gemspec filter through all the files in the gem or should it be specified in each file for completeness?</p>

<p>I would hope it filters throughout the files in the gem but would rather ask and be safe than sorry!!</p>

<p>I also looked at:</p>

<p><a href=""http://stackoverflow.com/questions/8879237/how-does-the-magic-comment-encoding-utf-8-in-ruby-works"">How does the magic comment ( # Encoding: utf-8 ) in ruby​​ works?</a></p>

<p>and</p>

<p><a href=""http://stackoverflow.com/questions/3291017/how-can-i-avoid-putting-the-magic-encoding-comment-on-top-of-every-utf-8-file-in"">How can I avoid putting the magic encoding comment on top of every UTF-8 file in Ruby 1.9?</a></p>

<p>According to the later link there is no way to ensure this short of putting it in every file but I wondered whether the gemspec declaration was special in some way??</p>

<p>Thanks in advance for any help.</p>
","2988","","<p>The file encoding header specifies the encoding for that file. It doesn't specify the encoding of other files. How could it?</p>
"
"<p>Do I need to explicitly initialize an object if an initialize method is included in class definition? </p>
","2988","","<p>No, Ruby does not call <code>initialize</code> automatically.</p>

<p>The default implementation of <code>Class#new</code> looks a bit like this:</p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate
    obj.initialize(*args, &amp;block)
    obj
  end
end
</code></pre>

<p>[Actually, <code>initialize</code> is <code>private</code> by default so you need to use <code>obj.send(:initialize, *args, &amp;block)</code>.]</p>

<p>So, the default implementation of <code>Class#new</code> <em>does</em> call <code>initialize</code>, but it would be perfectly possible (albeit extremely stupid) to override or overwrite it with an implementation that does not.</p>

<p>So, it's not <em>Ruby</em> that calls <code>initialize</code>, it's <code>Class#new</code>. You may think that's splitting hairs, because <code>Class#new</code> is an integral part of Ruby, but the important thing here is: it's not some kind of language magic. It's a method like any other, and like any other method it can be overridden or overwritten to do something completely different.</p>

<p>And, of course, if you don't use <code>new</code> to create an object but instead do it manually with <code>allocate</code>, then <code>initialize</code> wouldn't be called either.</p>

<p>There <em>are</em> some cases where objects are created without calling <code>initialize</code>. E.g. when <code>dup</code>ing or <code>clone</code>ing, <code>initialize_dup</code> and <code>initialize_clone</code> are called instead of <code>initialize</code> (both of which, in turn, call <code>initialize_copy</code>). And when deserializing an object via, say, <code>Marshal</code>, its internal state is reconstructed directly (i.e. the instance variables are set reflectively) instead of through <code>initialize</code>.</p>
"
"<p>I am trying to understand the javascript objects, but I am having a hard time with the different types of declarations.</p>

<p>As <a href=""http://www.phpied.com/3-ways-to-define-a-javascript-class/"" rel=""nofollow"">I read</a> there are two main way to define an object</p>

<p><strong>Method 1:</strong></p>

<pre><code>var student1 = {
    name: ""Peter Foti"",
    course: 'JavaScript',
    grade: 'A',
    dispInfo: function(){
         return this.name + ' has an ' + this.grade; 
    }
};
</code></pre>

<p><strong>Method 2:</strong> </p>

<pre><code>function student (a, b, c) {
    this.name = a;
    this.course= b;
    this.grade = c;
    this.dispInfo = function(){
         return this.name + ' has an ' + this.grade; 
    }
}
</code></pre>

<p>For the method 2 I understand the concept, if I want to create a variable of type student I simply need to call : </p>

<pre><code>student1 = new student(""Jean Dupont"", ""wine tasting"", ""A"");
console.log(student1.dispInfo);
</code></pre>

<p>However, with the method 1, how can I create a student2 without writing again all the inner function such as dispInfo?</p>

<p>I would like to do something like</p>

<pre><code>var student2 = {
    name: ""Olivier Perraut"",
    course: 'Pétanque',
    grade: 'F'
};

console.log(student2.getInfo);
</code></pre>
","2988","","<p>JavaScript is a so-called prototype-based object-oriented language. This means that objects don't get their behavior defined by classes, traits, mixins etc., but instead inherit it directly from other objects.</p>

<p>So, if you want to have a <code>student2</code> that behaves like a <code>student1</code> with only some minor differences, then you simply inherit from <code>student1</code> and override those properties that are different. In JavaScript, prototypal inheritance is set up using the <code>Object.create</code> function, which takes in the object to inherit from and an optional property descriptor map with the overridden properties.</p>

<pre><code>var student1 = {
    name: ""Peter Foti"",
    course: 'JavaScript',
    grade: 'A',
    dispInfo: function() { return this.name + ' has an ' + this.grade; }
},

    student2 = Object.create(student1, {
    name:   { value: 'Olivier Perraut' },
    course: { value: 'Pétanque' },
    grade:  { value: 'F' }
});

console.log(student2.dispInfo());
// Olivier Perraut has an F
</code></pre>

<p>Often times, you will see a pattern emerging, where instead of having ""business"" objects inherit directly from each other, you will set up a pristine ""template"" object and have all your business objects inherit from that, kind of like this:</p>

<pre><code>var studentTemplate = {
    dispInfo: function() { return this.name + ' has an ' + this.grade; }
},

    student1 = Object.create(studentTemplate, {
    name:   { value: 'Peter Foti' },
    course: { value: 'JavaScript' },
    grade:  { value: 'A' }
}),

    student2 = Object.create(studentTemplate, {
    name:   { value: 'Olivier Perraut' },
    course: { value: 'Pétanque' },
    grade:  { value: 'F' }
});

console.log(student1.dispInfo());
// PeterFoti has an A

console.log(student2.dispInfo());
// Olivier Perraut has an F
</code></pre>

<p>By the way, I think it would be a good idea to make <code>dispInfo</code> a getter property instead of a method:</p>

<pre><code>var studentTemplate = {};

Object.defineProperty(studentTemplate, 'info', {
    get: function() { return this.name + ' has an ' + this.grade; }
});

var student1 = Object.create(studentTemplate, {
    name:   { value: 'Peter Foti' },
    course: { value: 'JavaScript' },
    grade:  { value: 'A' }
});

console.log(student1.info);
// PeterFoti has an A
</code></pre>
"
"<p>I am working on iteration: time targeting section of <a href=""http://tutorials.jumpstartlab.com/projects/eventmanager.html#iteration%3a-clean-phone-numbers"" rel=""nofollow"">this</a> (the Event Manager exercise from Jumpstart Lab). I figured out how to iterate over the array and turn it into a hash from <a href=""http://stackoverflow.com/questions/9480852/array-to-hash-words-count"">this</a> thread. This is what I have:</p>

<pre><code>require ""date""

    time = [""11/12/08 10:47"",""11/12/08 13:23"",""11/12/08 13:30"",""11/12/08 14:04"",""11/12/08 14:46""]

    #makes array of all times
    time.each do |time|
        @array = Array(DateTime.strptime(time,'%m/%d/%Y %H:%M').hour)
    end


    #makes hash of :time =&gt; number of instances
     result = Hash.new(0)
      @array.each do |time|
        result[time] += 1  
      end
     puts result
</code></pre>

<p>The hash I get when I run it is <code>{ 14 =&gt; 1 }</code>, which is not what I'm looking for.  I suspect this happens because my array is made of integers, not strings like the example. Is there a way to accomplish the same effect on integers? Or do I have to convert my integers to strings? If I have to convert to strings, where do I put <code>to_s</code>?</p>
","2988","","<p>It is important to choose the right data structure for the job. In this case, the right data structure is not a <code>Hash</code>, it is a <code>Multiset</code>. [Unfortunately, there is no <code>Multiset</code> in the standard library or the core library, but there is a <code>multiset</code> gem.]</p>

<pre><code>require 'date'
require 'multiset'

time = [
  '11/12/08 10:47', 
  '11/12/08 13:23', 
  '11/12/08 13:30', 
  '11/12/08 14:04', 
  '11/12/08 14:46'
]

Multiset[*time.map {|t| DateTime.strptime(t, '%m/%d/%Y %H:%M').hour }]
# =&gt; #&lt;Multiset:#1 10, #2 13, #2 14&gt;
</code></pre>

<p>As you can see, there is one entry at the tenth hour, and two entries each at the 13th and 14th hour.</p>
"
"<p>I saw this piece of code somewhere on the web:</p>

<pre><code>ruby -pe 'gsub /^\s*|\s*$/, """"'
</code></pre>

<p>Evidently this piece of code removes leading and trailing whitespace from each line from STDIN.</p>

<p>I understand the regex and replacement, no problem, but what I don't get is how the method <code>gsub</code> is receiving an object to act upon. I understand that the <code>-p</code> flag wraps this whole thing in a <code>while gets; print; ... ; end</code> block, but <strong>how does <code>gsub</code> receive the string to act upon</strong>? At the very least, shouldn't it be a <code>$_.gsub(..)</code> instead? How does the current input line get ""magically"" passed to <code>gsub</code>?</p>

<p>Does the code in these Perl-like one-liners get interpreted in a somewhat different manner? I'm looking for a general idea of the differences from traditional, script-based Ruby code. Haven't found a comprehensive set of resources on this, I'm afraid.</p>
","2988","","<p>Easy:</p>

<pre><code>class Object
  def gsub(*args, &amp;block)
    $_.gsub(*args, &amp;block)
  end
end
</code></pre>

<p>Since every object is an instance of <code>Object</code> (well, almost every object), every object has a <code>gsub</code> method now. So, you can call</p>

<pre><code>some_object.gsub('foo', 'bar')
</code></pre>

<p>on <em>any</em> object, and it will just work. And since it doesn't matter <em>what</em> object you call it on, because it doesn't actually do anything with that object, you might just as well call it on <code>self</code>:</p>

<pre><code>self.gsub('foo', 'bar')
</code></pre>

<p>Of course, since <code>self</code> is the implicit receiver, this is the same as </p>

<pre><code>gsub('foo', 'bar')
</code></pre>

<p>For methods such as this, which don't actually depend on the receiver, and are only added to  the <code>Object</code> class for convenience reasons, it is a common convention to make them <code>private</code> so that you cannot accidentally call them with an explicit receiver and then somehow get confused into thinking that this method does something to the receiver.</p>

<p>Also, it is common to put such methods (which are actually intended to be used more like <em>procedures</em> than <em>methods</em>, i.e. completely independent of their receiver) into the <code>Kernel</code> mixin, which is mixed into <code>Object</code> instead of directly into the <code>Object</code> class to distinguish them from methods that are available to every object but actually <em>do</em> depend on its internal state, such as <code>Object#class</code>, <code>Object#to_s</code> etc.</p>

<pre><code>module Kernel
  private

  def gsub(*args, &amp;block)
    $_.gsub(*args, &amp;block)
  end
end
</code></pre>

<p>Other methods that are defined in this way, which you may have come across already are <code>require</code>, <code>load</code>, <code>puts</code>, <code>print</code>, <code>p</code>, <code>gets</code>, <code>loop</code>, <code>raise</code>, <code>rand</code>, <code>throw</code>, <code>catch</code>, <code>lambda</code>, <code>proc</code>, <code>eval</code>, <code>Array</code>, <code>Integer</code>, <code>Float</code> etc.</p>
"
"<p>Or rather, why aren't there better tools for profiling memory in ruby, specifically rails apps?</p>

<p>Recently our rails app (hosted on heroku) has started seeing lots of R14 errors in the worker dynos. This means we're running out of memory. Bumping the dynos to 2x (512mb -> 1GB) only alleviated the problem temporarily, leading me to believe there is a memory leak somewhere. Naturally, my next step was to find a good profiling gem that can help me discover the source of the leak.</p>

<p>Maybe I'm just ignorant of the tools available, or maybe I just don't know how to use the ones I have. My wish is that I could install a gem and then run reports on the memory usage statistics. Hitting an endpoint to get a report is not really viable as my memory issues are isolated to worker dynos running delayed jobs.</p>

<p>I've looked at <a href=""https://github.com/ice799/memprof"">memprof</a>, but it's 1.8 only.</p>

<p>I've looked at <a href=""https://github.com/ruby-prof/ruby-prof"">ruby-prof</a> (awesome), but the memory profiling requires a patched ruby intepreter.</p>

<p>I've looked at <a href=""http://ruby-doc.org/core-1.9.3/GC/Profiler.html"">GC::Profiler</a>, but I don't understand how to find memory leaks with it.</p>

<p>So, is it just plain difficult to find memory leaks in ruby? Or am I missing the point somehow?</p>
","2988","","<p>I disagree that memory profiling in Ruby is hard. The JVM has some of the best memory profiling tools on the planet, and you can run your Ruby programs on the JVM. Don't reinvent the wheel.</p>

<ul>
<li><a href=""http://Blog.Headius.Com/2010/07/browsing-memory-jruby-way.html"" rel=""nofollow"">Browsing Memory the JRuby Way</a></li>
<li><a href=""http://Blog.Headius.Com/2010/07/finding-leaks-in-ruby-apps-with-eclipse.html"" rel=""nofollow"">Finding Leaks in Ruby Apps with Eclipse Memory Analyzer</a></li>
<li><a href=""http://Blog.EngineYard.Com/2010/monitoring-memory-with-jruby-part-1-jhat-and-visualvm/"" rel=""nofollow"">Monitoring Memory with JRuby, Part 1: jhat and VisualVM</a></li>
<li><a href=""http://Blog.EngineYard.Com/2010/montoring-memory-with-jruby-part-2-eclipse-memory-analyzer/"" rel=""nofollow"">Monitoring Memory with JRuby, Part 2: Eclipse Memory Analyzer</a></li>
</ul>
"
"<p>I would like to create a function that has optional arguments with default values</p>

<pre><code>def my_function(a = nil, b=nil, c=500)

end
</code></pre>

<p>and call the function with the arguments I would like to specify only</p>

<pre><code>my_function(b=100)
</code></pre>

<p>How do I accomplish this in Ruby 1.9.2?</p>
","2988","","<p>Arguments are bound to parameters like this:</p>

<ol>
<li>As long as there are unbound mandatory parameters at the beginning of the parameter list, bind arguments left-to-right</li>
<li>As long as there are unbound mandatory parameters at the end of the parameter list, bind arguments right-to-left</li>
<li>Any leftover arguments are bound to optional parameters left-to-right</li>
<li>Any leftover arguments are collected into an array and bound to the splat argument</li>
<li>A block is wrapped up into a <code>Proc</code> and bound to the block argument</li>
<li>If there are any unbound parameters or leftover arguments, <code>raise</code> an <code>ArgumentError</code></li>
</ol>

<p>Here's an example:</p>

<pre><code>def foo(mand1, mand2, opt1=:opt1, opt2=:opt2, *splat, mand3, mand4, &amp;block)
  p local_variables.map {|v| ""#{v} = #{eval(v.to_s)}"" }
end

foo 1, 2, 3
# ArgumentError: wrong number of arguments (3 for 4+)

foo 1, 2, 3, 4
# mand1 = 1
# mand2 = 2
# opt1 = opt1
# opt2 = opt2
# splat = []
# mand3 = 3
# mand4 = 4
# block = 

foo 1, 2, 3, 4, 5
# mand1 = 1
# mand2 = 2
# opt1 = 3
# opt2 = opt2
# splat = []
# mand3 = 4
# mand4 = 5
# block = 

foo 1, 2, 3, 4, 5, 6
# mand1 = 1
# mand2 = 2
# opt1 = 3
# opt2 = 4
# splat = []
# mand3 = 5
# mand4 = 6
# block = 

foo 1, 2, 3, 4, 5, 6, 7
# mand1 = 1
# mand2 = 2
# opt1 = 3
# opt2 = 4
# splat = [5]
# mand3 = 6
# mand4 = 7
# block = 

foo 1, 2, 3, 4, 5, 6, 7, 8 do end
# mand1 = 1
# mand2 = 2
# opt1 = 3
# opt2 = 4
# splat = [5, 6]
# mand3 = 7
# mand4 = 8
# block = #&lt;Proc:0x007fdc732cb468@(pry):42&gt;
</code></pre>

<p>So, as you can see both from step 3 above and from the example, you cannot do this, because optional parameters are bound left-to-right, but you want to specify the middle argument.</p>

<p>Note that this has implications on API design: you should design your parameter lists in such a way that the most ""unstable"" optional parameters, i.e. the ones that a user most likely wants to supply themselves, are furthest to the left.</p>

<p>Ruby 2.0 now has keyword arguments, which is exactly what you are looking for:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *s, m3, m4, key1: :key1, key2: :key2, **keys, &amp;b)
  puts local_variables.map {|v| ""#{v} = #{eval(v.to_s)}"" }
end

foo 1, 2, 3
# ArgumentError: wrong number of arguments (3 for 4+)

foo 1, 2, 3, 4
# m1 = 1
# m2 = 2
# o1 = o1
# o2 = o2
# s = []
# m3 = 3
# m4 = 4
# key1 = key1
# key2 = key2
# b = 
# keys = {}

foo 1, 2, 3, 4, 5
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = o2
# s = []
# m3 = 4
# m4 = 5
# key1 = key1
# key2 = key2
# b = 
# keys = {}

foo 1, 2, 3, 4, 5, 6
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = []
# m3 = 5
# m4 = 6
# key1 = key1
# key2 = key2
# b = 
# keys = {}

foo 1, 2, 3, 4, 5, 6, 7
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = [5]
# m3 = 6
# m4 = 7
# key1 = key1
# key2 = key2
# b = 
# keys = {}

foo 1, 2, 3, 4, 5, 6, 7, 8
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = [5, 6]
# m3 = 7
# m4 = 8
# key1 = key1
# key2 = key2
# b = 
# keys = {}

foo 1, 2, 3, 4, 5, 6, 7, 8, key1: 9
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = [5, 6]
# m3 = 7
# m4 = 8
# key1 = 9
# key2 = key2
# b = 
# keys = {}

foo 1, 2, 3, 4, 5, 6, 7, 8, key1: 9, key2: 10
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = [5, 6]
# m3 = 7
# m4 = 8
# key1 = 9
# key2 = 10
# b = 
# keys = {}

foo 1, 2, 3, 4, 5, 6, 7, 8, key1: 9, key2: 10, key3: 11
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = [5, 6]
# m3 = 7
# m4 = 8
# key1 = 9
# key2 = 10
# b = 
# keys = {:key3=&gt;11}

foo 1, 2, 3, 4, 5, 6, 7, 8, key1: 9, key2: 10, key3: 11, key4: 12 do end
# m1 = 1
# m2 = 2
# o1 = 3
# o2 = 4
# s = [5, 6]
# m3 = 7
# m4 = 8
# key1 = 9
# key2 = 10
# b = #&lt;Proc:0x007fdc75135a48@(pry):77&gt;
# keys = {:key3=&gt;11, key4=&gt;12}
</code></pre>
"
"<p>Here is some code demonstrating the behavior I'm talking about:</p>

<pre><code>module A
  def foo; end
end

# initialize B with no methods
module B; end

class C
  include B
end

# add methods to B
module B
  def foo; end
  include A
end

C.new.foo
C.new.bar # error: instance method bar is not defined for C
</code></pre>

<p>So <code>def</code>s added to B are reflected in C, whereas added <code>include</code>s are not (unless B is re-included afterwards). Why is this, and is there a clean way around it?</p>
","2988","","<p>When you <code>include</code> a module <code>M</code> in a class <code>C</code>, this is what happens:</p>

<ol>
<li>Ruby creates a class (let's call it <code>⟦M′⟧</code>) whose method table pointer, constant table pointer and class variable table pointer point to <code>M</code>'s method table, constant table and class variable table.</li>
<li><code>⟦M′⟧</code>'s superclass pointer is set to <code>C</code>'s superclass.</li>
<li><code>C</code>'s superclass pointer is set to <code>⟦M′⟧</code>.</li>
</ol>

<p>If there are modules <code>include</code>ed in <code>M</code>, this process is applied recursively.</p>

<p>Note that the recursive flattening of mixins is applied <em>once</em>, when you call <code>include</code>. Any changes in the inheritance hierarchy that are made afterwards will <em>not</em> be reflected.</p>

<p>However, when you add a method to <code>M</code>'s method table, that change will be reflected, because there is only <em>one</em> method table, to which both <code>M</code> and <code>⟦M′⟧</code> refer.</p>
"
"<p>I was looking at this code and was trying to figure what <code>def status=(status)</code> means. I have never seen that before.</p>

<pre><code>class Tweet
attr_accessor :status

def initialize(options={})
self.status = options[:status]
end

def public?
self.status &amp;&amp; self.status[0] != ""@""
end

def status=(status)
@status = status ? status[0...140] : status
end
end
</code></pre>
","2988","","<p>It means exactly the same thing that <code>def foo</code> <em>always</em> means: define a method named <code>foo</code>.</p>

<pre><code>def initialize
</code></pre>

<p>Defines a method named <code>initialize</code>.</p>

<pre><code>def public?
</code></pre>

<p>Defines a method named <code>public?</code></p>

<pre><code>def status=
</code></pre>

<p>Defines a method named <code>status=</code></p>

<p>That's it. There's absolutely nothing special going on here. There is no magic when defining a method whose name ends in an <code>=</code> sign.</p>

<p>The magic happens when <em>calling</em> a method whose name ends in an <code>=</code> sign. Basically, you are allowed to insert whitespace in between the <code>=</code> sign and the rest of the method name. So, instead of having to call the method like this</p>

<pre><code>foo.status= 42
</code></pre>

<p>You can call it like this:</p>

<pre><code>foo.status = 42
</code></pre>

<p>Which makes it look like an assignment. Note: it is also treated like an assignment in another way; just like with all other forms of assignments, assignment expressions evaluate to the value that is being assigned, which means that the return value of the method is <em>ignored</em> in this case.</p>
"
"<p>I am currently in </p>

<pre><code>Dropbox/96_2013/work/ror/dmc/dmStaffing/QA/selenium_server_wyatt/spec/2day/units/
</code></pre>

<p>I can go into irb and requyire a file but it's a really long require...</p>

<p>require '/home/durrantm/Dropbox/96_2013/work/ror/dmc/dmStaffing/QA/selenium_server_wyatt/spec/2day/units/login_as_admin_spec.rb'
=> true</p>

<p>I want to use require_relative, as in</p>

<pre><code>$ cd /home/durrantm/Dropbox/96_2013/work/ror/dmc/dmStaffing/QA/selenium_server_wyatt/spec/2day/
$ pwd
</code></pre>

<p>/home/durrantm/Dropbox/96_2013/work/ror/dmc/dmStaffing/QA/selenium_server_wyatt/spec/2day
    irb(main):001:0> require_relative 'units/login_as_admin_spec.rb' </p>

<p>but I get:</p>

<pre><code>LoadError: cannot infer basepath
</code></pre>
","2988","","<p><code>require_relative</code> requires a file relative to the file the call to <code>require_relative</code> is in. Your call to <code>require_relative</code> isn't in any file, it's in the interactive interpreter, therefore it doesn't work.</p>

<p>You can use the long form of <code>require</code> by explicitly passing the full path:</p>

<pre><code>require './units/login_as_admin_spec.rb'
</code></pre>

<p>Or you add the current directory to the <code>$LOAD_PATH</code> and just <code>require</code> as usual:</p>

<pre><code>$LOAD_PATH &lt;&lt; '.'
require 'units/login_as_admin_spec'
</code></pre>
"
"<p>I have been playing around with Strings a bit (in irb), and found myself in trouble understanding the meaning of the following code:</p>

<pre><code>String.methods
=&gt; [:try_convert, :allocate, :new, :superclass, :freeze, :===, :==, :&lt;=&gt;, :&lt;, :&lt;=, :&gt;,
:&gt;=, :to_s, :included_modules, :include?, :name, :ancestors, :instance_methods, 
:public_instance_methods, :protected_instance_methods, :private_instance_methods, 
:constants, :const_get, :const_set, :const_defined?, :const_missing, :class_variables, 
:remove_class_variable, :class_variable_get, :class_variable_set, 
:class_variable_defined?, :public_constant, :private_constant, :module_exec, :class_exec, 
:module_eval, :class_eval, :method_defined?, :public_method_defined?, 
:private_method_defined?, :protected_method_defined?, :public_class_method, 
:private_class_method, :autoload, :autoload?, :instance_method, :public_instance_method, 
:nil?, :=~, :!~, :eql?, :hash, :class, :singleton_class, :clone, :dup, :initialize_dup, 
:initialize_clone, :taint, :tainted?, :untaint, :untrust, :untrusted?, :trust, :frozen?, 
:inspect, :methods, :singleton_methods, :protected_methods, :private_methods, 
:public_methods, :instance_variables, :instance_variable_get, :instance_variable_set, 
:instance_variable_defined?, :instance_of?, :kind_of?, :is_a?, :tap, :send, :public_send, 
:respond_to?, :respond_to_missing?, :extend, :display, :method, :public_method, 
:define_singleton_method, :object_id, :to_enum, :enum_for, :equal?, :!, :!=, 
:instance_eval, :instance_exec, :__send__, :__id__] 
</code></pre>

<p>Hence the well-known method 'upcase' was not included in the output, i tried to receive it this way:</p>

<pre><code>String.methods.include?(:upcase)
=&gt; false                          # mother of god, I am shocked!
</code></pre>

<p>But <a href=""http://ruby-doc.org/core-2.0/String.html#method-i-upcase"" rel=""nofollow"">http://ruby-doc.org/core-2.0/String.html#method-i-upcase</a> lists the .upcase method as a method of the Class String.</p>

<p>And of course, in my irb-sessions or the Editor, ruby understands perfectly to execute </p>

<pre><code>""whatdoiknow"".upcase
=&gt; ""WHATDOIKNOW""
</code></pre>

<p>My Questions are:</p>

<ol>
<li>What kind of methods is this output from String.methods</li>
<li>Why is the .upcase method not listed in this output</li>
<li>How can i literally list all methods for String (eg. when I am searching for something)</li>
</ol>
","2988","","<p>Strings have an <code>upcase</code> method. But <code>String</code> is not a string, it is a <em>class</em>, and classes don't have an <code>upcase</code> method.</p>

<p>If you want to know whether a particular string object has an <code>upcase</code> method, you should ask that string:</p>

<pre><code>'foo'.methods.include?(:upcase) # =&gt; true
</code></pre>

<p>Or you should ask the <code>String</code> class whether it has an instance method <code>include</code> defined for all strings:</p>

<pre><code>String.instance_methods.include?(:upcase) # =&gt; true
</code></pre>

<p>Remember: classes are objects just like any other. They have methods, they have instance variables, they have a class.</p>
"
"<p>I'm trying to understand implementation of object-private variables in Scala. Scala compiles this class</p>

<pre><code>class Counter{
    private[this] var age = 0
}
</code></pre>

<p>into the following java byte code:</p>

<pre><code>public class Counter implements scala.ScalaObject {
  private int age;
  public Counter();
}
</code></pre>

<p>But still, because JVM doesn't support object-private fields, we have good-old private field, which can be accessed from other instances of the class. So for me the difference between previous class and the following in terms of hiding private field is not clear.</p>

<pre><code>class Counter2{
    private var age = 0
}

public class Counter2 implements scala.ScalaObject {
  private int age;
  private int age();
  private void age_$eq(int);
  public Counter2();
}
</code></pre>
","2988","","<p>The JVM is irrelevant. The semantics of Scala are implemented by the Scala compiler, not the JVM. After all, the JVM isn't even the only platform Scala runs on, there are production-ready implementations of Scala on the CLI, and experimental ones on ECMAScript as well as a native one.</p>
"
"<p>I am basically a java developer. I am working in ruby for about an year. Unlike java, Ruby is a pure object oriented programming language. Here comes a doubt. Is it pass-by-value or pass-by-reference? Java works as pass-by-value: ""When passing primitives, I see that the value is duplicated and passed to the method. But incase of Objects, the reference is duplicated and passed to the method. The reference contains the location of the object in the heap. During the method call, only the location of the object is passed. So no duplicate objects are created. The same object is modified."" </p>

<p>But when I tried the below ruby code snippet, I got the same results as I got in Java: ""The numbers work like a primitive (like in java) during a method call whereas the array works as perfect references like in java"". Now, I am confused. If everything in ruby are objects, then why the number objects are duplicated during the method call?</p>

<pre><code>class A
def meth1(a)
a = a+5
puts ""a inside meth1---#{a}""
end

def meth2(array)
array.pop
puts ""array inside meth2---#{array}""
end
end


obj1 = A.new
aa=5
obj1.meth1(aa)
puts ""aa-----#{aa}""

arr = [3,4,5]
obj1.meth2(arr)
puts ""arr---#{arr}""
</code></pre>

<p>Results:</p>

<p>a inside meth1---10</p>

<p>aa-----5</p>

<p>array inside meth2---34</p>

<p>arr---34</p>
","2988","","<p>Ruby uses pass-by-value, or more precisely, a special case of pass-by-value where the value being passed is <em>always</em> a pointer. This special case is also sometimes known as call-by-sharing, call-by-object-sharing or call-by-object.</p>

<p>It's the same convention that is used by Java (for objects), C# (by default for reference types), Smalltalk, Python, ECMAScript/JavaScript and more or less every object-oriented language ever created.</p>

<p>Note: on all existing Ruby implementations <code>Symbol</code>s, <code>Fixnum</code>s and <code>Float</code>s are actually passed <em>directly</em> by value and <em>not</em> with an intermediary pointer. However, since those three are immutable, there is no observable behavioral difference between pass-by-value and call-by-object-sharing in this case, so you can greatly simplify your mental model by simply treating <em>everything</em> as call-by-object-sharing. Just interpret these three special cases as internal compiler optimizations that you don't need to worry about.</p>

<p>Here's a simple example you can run to determine the argument passing convention of Ruby (or any other language, after you translate it):</p>

<pre><code>def is_ruby_pass_by_value?(foo)
  foo.replace('More precisely, it is call-by-object-sharing!')
  foo = 'No, Ruby is pass-by-reference.'
  return nil
end

bar = 'Yes, of course, Ruby *is* pass-by-value!'

is_ruby_pass_by_value?(bar)

p bar
# 'More precisely, it is call-by-object-sharing!'
</code></pre>
"
"<p>Is there a keyword I can use to explicitly tell the map function what the result of that particular iteration should be?</p>

<p>Consider:</p>

<pre><code>a = [1,2,3,4,5]
a.map do |element|
  element.to_s
end
</code></pre>

<p>In the above example element.to_s is implicitly the result of each iteration.</p>

<p>There are some situations where I don't want to rely on using the last executed line as the result, I would prefer to explicitly say what the result is in code.</p>

<p>For example,</p>

<pre><code>a = [1,2,3,4,5]
a.map do |element|
  if some_condition
    element.to_s
  else
    element.to_f
  end
end
</code></pre>

<p>Might be easier for me to read if it was written like:</p>

<pre><code>a = [1,2,3,4,5]
a.map do |element|
  if some_condition
    result_is element.to_s
  else
    result_is element.to_f
  end
end
</code></pre>

<p>So is there a keyword I can use in place of <code>result_is</code>?</p>

<p><code>return</code> will return from the calling function, and <code>break</code> will stop the iteration early, so neither of those is what I'm looking for.</p>
","2988","","<p>Yes, there is, it's called <code>next</code>. However, using <code>next</code> in this particular case will <em>not</em> improve readability. On the contrary, it will a) confuse the reader and b) give him the impression that the author of that code doesn't understand Ruby.</p>

<p>The fact that <em>everything</em> is an expression in Ruby (there are <em>no</em> statements) and that every expression evaluates to the value of the last sub-expression in that expression are <em>fundamental</em> Ruby knowledge.</p>

<p>Just like <code>return</code>, <code>next</code> should only be used when you want to ""return"" from the <em>middle</em> of a block. Usually, you only use it as a guard clause.</p>
"
"<p>I am writing a module with method <code>foo</code>, which calls a class method <code>bar</code> on the receiver's class. My current approach is to use <code>self.class.bar</code>, which works fine unless the class method is defined in an instance class instead of a ""real"" one:</p>

<pre><code>module M
  def foo
    self.class.bar
  end
end

obj = Object.new
class &lt;&lt; obj
  include M
  def self.bar
    42
  end
end

obj.foo # =&gt; NoMethodError: undefined method `bar' for Object:Class
</code></pre>

<p>This makes sense because <code>obj.class</code> does not return singleton classes. I <strong>could</strong> use <code>obj.singleton_class</code> instead, and everything would run smoothly:</p>

<pre><code>module M
  def foo
    self.singleton_class.bar
  end
end

obj = Object.new
class &lt;&lt; obj
  include M
  def self.bar
    42
  end
end

obj.foo # =&gt; 42
</code></pre>

<p>only if the method is defined on a singleton class for the same reason as above. Worse still, it creates a new singleton class for every receiver, something I want to avoid as these might be a fair amount of objects. So instead, I want some way to retrieve an object's singleton class <strong>if and only if</strong> it is already defined, i.e. something of the type <code>obj.has_singleton_class ? obj.singleton_class : obj.class</code>. I couldn't find any way to perform this check though.</p>
","2988","","<p>Every object always has a singleton class in Ruby. The specific implementation you use (MRI, YARV, Rubinius, JRuby, IronRuby, MacRuby, MagLev, MRuby, etc.) may or may not optimize memory usage by not allocating memory for a singleton class that isn't used, but that's a private internal implementation detail, an invisible transparent compiler optimization. Whenever you go looking for a singleton class, it'll be there.</p>

<p>Well, actually, that's not <em>quite</em> true. Immediate values, i.e. <code>Fixnum</code>s, <code>Symbol</code>s and <code>Float</code>s <em>cannot</em> have singleton classes.</p>

<p>So, those three will <em>never</em> have a singleton class, all others <em>always</em> have a singleton class.</p>
"
"<p>I'm looking into blocks at the moment, and they have stumped me.</p>

<p>I used this as an example:</p>

<pre><code>class ProcExample
  attr_reader :proc_class
  def initialize(&amp;block)
    @stored_proc = block
    @proc_class = @stored_proc.class
  end
  def use_proc(arg)
    @stored_proc.call(arg)
  end
end

eg = ProcExample.new {|t| puts t}
p eg.proc_class
p eg.use_proc(""Whoooooooo"")
</code></pre>

<p>Now I kind of (not really( understand how the block is passed into @stored_proc. I used @proc_class because I was curious what class the block object was actually stored as.</p>

<p>But what if I wanted to store a block in a regular variable?</p>

<p>E.g.:</p>

<pre><code>block_object = {|param| puts param**2}
</code></pre>

<p>But I found that this is treated as a Hash and not a block/proc. Naturally an error arises. I've tried assigning it with an ampersand in the variable name, and at the beginning of the block but that doesn't work.</p>

<p>Eventually I was wondering if it was possible to call a function and replace the block with a variable containing the block. </p>

<p>Like so:</p>

<pre><code>(1..10).each block_object
</code></pre>

<p>Is this possible in Ruby?</p>
","2988","","<p>You cannot assign blocks to a variable.</p>

<p>Blocks aren't really objects. They are special syntax for passing code to a higher-order method. If you want a piece of executable code that you can assign to a variable, pass around and manipulate, you need to use a <code>Proc</code> object.</p>

<p>There are two kinds of <code>Proc</code>s: lambdas and regular procs. They behave differently in two aspects: argument binding semantics and <code>return</code> semantics. lambdas bind arguments like methods and <code>return</code> returns from the lambda, just like <code>return</code> in a method returns from the method. Regular procs bind arguments like blocks and <code>return</code> returns from the enclosing method, not the proc, just like <code>return</code> in a block.</p>

<p>Regular procs can be created by passing a block to <code>Proc.new</code> or alternatively to <code>Kernel#proc</code>. Lambdas can be created by passing a block to <code>Kernel#lambda</code> or with the ""stabby lambda"" literal syntax:</p>

<pre><code>lambda_object = -&gt;param { puts param**2 }
</code></pre>

<p>In order to convert <code>Proc</code>s to blocks and the other way around, Ruby has the unary prefix <code>&amp;</code> modifier. This modifier is only valid in parameter lists and argument lists. When used in a <em>parameter</em> list, it means ""wrap the block in a proc and bind it to this variable"". When used in an <em>argument</em> list. it means ""unwrap this proc into a block (and if it's not a proc already, call <code>to_proc</code> on it first) and pass it as a block argument"".</p>

<pre><code>(1..10).each(&amp;lambda_object)
</code></pre>

<p>I'm surprised that you haven't already seen the unary prefix <code>&amp;</code> modifier used in this way, it is actually fairly common, e.g. in something like <code>['1', '2'].map(&amp;:to_s)</code>.</p>

<p><em>Another</em> kind of object that also represents a piece of executable code is a <code>Method</code> object. It supports some of the same interface as <code>Proc</code>s do, in particular <code>#call</code>, <code>#to_proc</code>, <code>#arguments</code>, <code>#arity</code> etc. There are two ways to get a <code>Method</code> object: either grab a method that is bound to a receiver from that receiver using the <code>Object#method</code> method or grab an <code>UnboundMethod</code> object from a class or module (e.g. using <code>Module#instance_method</code>) and bind it to a receiver using <code>UnboundMethod#bind</code> which will return a <code>Method</code> object.</p>

<p>Since <code>Method</code> implements <code>to_proc</code>, you can pass it to a method as a block using the unary prefix <code>&amp;</code> modifier, e.g.:</p>

<pre><code># Warning: extremely silly example :-)

ary = []

(1..10).each(&amp;ary.method(:&lt;&lt;))

ary
# =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

ary = []

(1..10).each(&amp;Array.instance_method(:&lt;&lt;).bind(ary))

ary
# =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
"
"<p>I assigned a class to a constant <code>Foo</code>, and reassigned <code>Foo</code> to something else:</p>

<pre><code>class Foo; end
Foo = nil
</code></pre>

<p>In the <code>main</code> environment, <code>Foo</code> refers to the newly assigned object:</p>

<pre><code>p Foo # =&gt; nil
</code></pre>

<p>But, within an iteration of some kind, (I am not sure which), <code>Foo</code> refers to the previous object:</p>

<pre><code>ObjectSpace.each_object(Class).select{|c| c.name == ""Foo""}
.each{|c| p c, c.instance_of?(Class)}
# =&gt; Foo
     true
</code></pre>

<p>Why is this?</p>
","2988","","<p><code>Foo</code> is bound to <code>nil</code>, both inside and outside of the block. What makes you think it isn't? You aren't even referring to <code>Foo</code> inside of the block.</p>
"
"<p>When I use UTF-8 characters (most of the time Turkish characters) in controllers, I have to add <code>#encoding: utf-8</code> on the top of each controller file.
Why doesn't Rails use this as a default?</p>

<p>edit: I have learnt that it is not about Rails, it is about Ruby.</p>
","2988","","<p>Rails is not a programming language. It is just library written in Ruby. It cannot change the fundamental syntax of Ruby. Ruby 1.8 doesn't know anything about encodings, in Ruby 1.9 the default is ASCII and in Ruby 2.0 the default is UTF-8. There's nothing Rails can do about it.</p>
"
"<p>like in C and C++</p>

<pre><code>double x
</code></pre>

<p>How to do it in ruby ?</p>

<p>Or to be in the type float?</p>

<p>I want to run </p>

<pre><code>x=5/2
</code></pre>

<p>then </p>

<pre><code>x=2.5
</code></pre>

<p>instead of </p>

<pre><code>x=2
</code></pre>
","2988","","<p>Variables don't have types in Ruby, only objects do. (And the concept of ""type"" is latent, it is not manifest in the program. The ""type"" of an object is the protocol it speaks, i.e. the messages it responds to and how it responds to those messages. In particular, the type of an object is <em>not</em> its class.)</p>
"
"<p>I've just started to read about Ruby, and I was wondering if it can be embedded in a C++ application like Lua which provides a library to parse a given script file: <a href=""http://stackoverflow.com/a/5127294/399107"">http://stackoverflow.com/a/5127294/399107</a></p>
","2988","","<p>Yes, you can. You just need to embed a Ruby engine in your application.</p>

<p>Note that, unlike the main Lua engine, some Ruby engines aren't really that well suited to being embedded into other programs. But, for example, <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a>, <a href=""http://IronRuby.Net/"" rel=""nofollow"">IronRuby</a> and <a href=""http://JRuby.Org/"" rel=""nofollow"">JRuby</a> have been specifically designed with embedding in mind, and even though it isn't pretty, you <em>can</em> embed YARV or MRI as well, even though they are not designed for it.</p>

<p>There's also <a href=""https://GitHub.Com/MRuby/MRuby/"" rel=""nofollow"">MRuby</a>, but unlike the others, it doesn't implement the full Ruby Language Specification, it only implements a subset of the ISO Ruby Specification which itself is only a small subset of the intersection of Ruby 1.8 and Ruby 1.9. Plus, it hasn't been released yet, as is evidenced by the fact that not even <a href=""http://MRuby.Org/"" rel=""nofollow"">its homepage</a> exists yet. It is, however, specifically designed for embedding, in both senses of the word: being embedded into other programs, and being useful on an embedded device with very little RAM.</p>

<p>As you may have noticed, it is <em>much</em> easier to embed Ruby into your app if the app is running on the Java platform or the CLI. There <em>are</em> C++ compilers for both the Java platform and the CLI, so that option is not entirely out of the question. Otherwise, I'd say that Rubinius is easier to embed, but more people have tried embedding YARV, so there are more blog posts about how to do that. (Or maybe, embedding Rubinius is so trivial nobody needs to write blog posts about it.)</p>

<p>A long time ago, someone was working on an implementation of Ruby for the Lua VM, but that implementation never went anywhere. Would solve all your problems, though :-)</p>
"
"<p>Is there a way to create a scala dsl which enables me to write code similar to this pseudo-code</p>

<p><strong>edited: changed to scala pseudo code</strong></p>

<pre><code>object AccessProtectedClass extends App{
   def protectedMethod(param:String)
     permit_if (param.startsWith(""asdf"") and RAM &lt;= 10) : Int = {
         var result = 10
         //do something
         return result;
   } 
}
</code></pre>

<p>If the access is not granted due to the 'permit if' statement a exception should be thrown.
Which scala concepts do I need? </p>
","2988","","<p>Scala DSLs are valid Scala code. What you posted isn't. Therefore, it's not possible.</p>
"
"<p>From Ruby Koans <code>about_hashes.rb</code>:</p>

<p>Why might you want to use <code>#fetch</code> instead of <code>#[]</code> when accessing hash keys?</p>
","2988","","<p>With <code>[]</code>, the creator of the hash controls what happens when a key does not exist, with <code>fetch</code> you do.</p>
"
"<p>So this morning I decided to play around with Benchmarking for the first time. </p>

<p>I was curious about the speed different between code with ""do-end"" block formatting vs. ""{ }"" formatting. </p>

<p>So I stored the Benchmark code in a Proc so I could call it multiple times consecutively: </p>

<pre><code>n = 100_000_000
bmp = Proc.new do
  Benchmark.bm do |x|
    x.report {n.times {a = ""1""}}
    x.report {n.times do; a = ""1""; end}
  end
end
</code></pre>

<p>My results we're expected when I ran it once.</p>

<pre><code>&gt;&gt; bmp.call
  user     system      total        real
1.840000   0.030000   1.870000 (  1.874507)
1.860000   0.050000   1.910000 (  1.926101)
=&gt; true
</code></pre>

<p>But then ran it again.</p>

<pre><code>&gt;&gt; bmp.call
  user     system      total        real
1.870000   0.050000   1.920000 (  1.922810)
1.840000   0.000000   1.840000 (  1.850615)
</code></pre>

<p>To me this looks like the exact opposite of what I'm expecting. I am familiar with the concept of Branch Prediction. Is this a classic example of Branch Prediction? If not, what? Is there anyway to prevent any inaccuracies like this (if this is even considered one)?</p>

<p>EDIT: I did run this code over 30 times, after some suggestions. Frequently it would alternate between the two results. The sample of the data is found here:</p>

<p>gist.github.com/TheLarkInn/5599676 </p>
","2988","","<p>First of all, your benchmark is utterly pointless. The difference between the <code>do</code> / <code>end</code> syntax and the <code>{</code> / <code>}</code> syntax is just that: syntax. There is no semantic difference. Ergo, there <em>cannot possibly</em> be any runtime performance difference whatsoever between the two. It's just not logically possible. You don't need to benchmark it.</p>

<p>The only performance difference that <em>could</em> exist, is that one takes longer to parse than the other. However, none of the two is harder to parse than the other. The only difference is precedence. Therefore, there very likely isn't any performance difference in parsing, either.</p>

<p>And even if there <em>were</em> a performance difference in parsing, your benchmark wouldn't show it. You are using a benchmark written in Ruby, but in order to run Ruby code, the Ruby execution engine has to parse it first, which means that parsing will already have happened, before your benchmark even starts. So, even if your benchmark <em>weren't</em> pointless, it would still be <em>useless</em>, since it <em>cannot possibly</em> measure the performance difference in parsing.</p>

<p>As to your question about Branch Prediction: there are no branches in your code, there is nothing to predict.</p>

<p>BTW: even if your benchmark was intended for a different purpose, it still wouldn't be measuring anything, since at least the more advanced Ruby implementations would recognize that your blocks are essentially no-ops and simply optimize them away. And even if they <em>aren't</em> optimized away, all they are measuring is memory allocator performance (allocating a couple hundred megabytes of tiny <code>String</code> objects), not the performance of blocks.</p>
"
"<p>I have experienced some ODD behavior from the code below:</p>

<pre><code>require 'CSV'

$DEBUG = ARGV.empty? ? false : ARGV[0] #Global debug flag.

class PhoneBook
  #class code here etc etc
end

PhoneBook.start_dir = ""file-io-samples/phonebooks/""
puts ""Enter a phonebook!""
name = gets #This is the problem.
puts ""Using #{name}..""
</code></pre>

<p>When I pass true to have <code>$DEBUG</code> set to true on execution I get an error from <code>name = gets</code> and I have no idea why. If I don't pass parameters via the command line everything works fine. </p>

<p>This is the error output:</p>

<pre><code>C:\Pickaxe&gt;ruby PhoneBook.rb
Enter a phonebook!
Hurrah! Works
Using Hurrah! Works
..

C:\Pickaxe&gt;ruby PhoneBook.rb true
Enter a phonebook!
Exception `Errno::ENOENT' at PhoneBook.rb:62 - No such file or directory - true
PhoneBook.rb:62:in `gets': No such file or directory - true (Errno::ENOENT)
        from PhoneBook.rb:62:in `gets'
        from PhoneBook.rb:62:in `&lt;main&gt;'

C:\Pickaxe&gt;
</code></pre>

<p>If I need to I can post the class definition, but I don't think it's part of the problem.</p>
","2988","","<p><code>gets</code> reads from stdin if no arguments are passed, and from the file that was passed as an argument otherwise. You are passing an argument <code>true</code>, ergo <code>gets</code> tries to read from a file named <code>true</code>, which apparently doesn't exist.</p>

<p>This is the very first sentence of the documentation of <code>gets</code>:</p>

<blockquote>
  <p>Returns (and assigns to <code>$_</code>) the next line from the list of files in <code>ARGV</code> (or <code>$*</code>)</p>
</blockquote>
"
"<p>I saw this operator in HAML code. I wonder what it is for.</p>

<p>I see the following works:</p>

<pre><code>&gt; ?{
=&gt; ""{"" 
&gt; ?\s
=&gt; "" "" 
&gt; ?a
=&gt; ""a"" 
</code></pre>

<p>And this doesn't work:</p>

<pre><code>&gt; ?ab
SyntaxError: (irb):4: syntax error, unexpected '?'
</code></pre>

<p>So I suppose that it takes a character a argument and returns a string with that character.</p>

<p>questions:</p>

<ol>
<li>What does this operator do?</li>
<li>When should one use it?</li>
<li>If it really only creates a one-character string, why was it included in the language? Doesn't it break the language orthogonality? What is the benefit?</li>
</ol>
","2988","","<p>It's not an operator, it's a character literal. However, there is no character type in Ruby, so instead of an instance of a character type the character literal evaluates to the ""default representation of a character"". In Ruby 1.9+, that's a <code>String</code> of length 1, in Ruby 1.8, it's a <code>Fixnum</code> denoting the Unicode codepoint of the character.</p>
"
"<p>Beginner Scala question, but I couldn't find the answer on here.</p>

<p>Similar to overloading in C++, I would expect the compiler can tell the difference between a method called <code>-</code> which takes one parameter (with the same type as the class) and the unary version of <code>-</code> which takes no parameters, so why is <code>unary_</code> needed?</p>
","2988","","<p>The <code>unary_</code> prefix for <em>unary prefix operators</em> is a bit misleading: it's more about the <em>prefix</em> part than the <em>unary</em> part. You need some way to distinguish</p>

<pre><code>!foo // unary prefix !
</code></pre>

<p>from </p>

<pre><code>foo! // unary postfix !
</code></pre>

<p>Remember: Scala doesn't actually have operators. There are two ways to call a method, either with a <code>.</code> or with whitespace:</p>

<pre><code>foo.bar(1, ""two"")
foo bar(1, ""two"")
</code></pre>

<p>And when you have a single argument, you can leave off the parentheses:</p>

<pre><code>foo plus(1)
foo plus 1
</code></pre>

<p>Lastly, (almost) <em>any</em> character is legal in an identifier:</p>

<pre><code>foo plus 1
foo + 1
</code></pre>

<p>Now it <em>looks</em> like Scala has a binary infix <code>+</code> operator, but it actually doesn't. It's just a normal method called with normal method calling syntax.</p>

<p>What I said above isn't <em>fully</em> true, however. If Scala didn't have support for operators and it all was just normal method calling, then </p>

<pre><code>2 + 3 * 4
</code></pre>

<p>would evaluate to 20 (like it does in Smalltalk, Self and Newspeak for example) instead of 14. So, there is a <em>little</em> bit of support for operators in Scala (two little bits, actually). When a method is called with whitespace (so-called ""operator syntax"") instead of the <code>.</code>, and that method starts with an operator character, then Scala will respect operator precedence.</p>

<p>And the other little bit of operator support is that there are some operators that you would <em>like</em> to have, but that cannot be easily expressed as a method call. It works fine for binary infix operators and unary postfix operators:</p>

<pre><code>foo op bar // same as:
foo.op(bar)

foo op     // same as:
foo.op
</code></pre>

<p>But not for prefix or ""around-fix"" operators:</p>

<pre><code>!foo
foo(bar)
</code></pre>

<p>So, there are a couple of special syntactic sugar translation rules:</p>

<pre><code>!foo
foo.unary_!
// same for +, - and ~

foo(bar)
foo.apply(bar)

foo(bar) = 1
foo.update(bar, 1)

foo += 1
foo.+=(1) // but if this doesn't compile, then the compiler will also try
foo = foo.+(1)
</code></pre>

<p>And the reason why there needs to be an underscore between the alphanumeric and the ""operator"" part in a method name is because you wouldn't know whether</p>

<pre><code>foo!
</code></pre>

<p>means </p>

<pre><code>foo.!
</code></pre>

<p>or </p>

<pre><code>this.foo!
</code></pre>

<p>Thus, <code>foo!</code> as a method name is illegal, it needs to be called <code>foo_!</code>.</p>
"
"<p>I want to open a new window using the openWindow() method that I can see in the <a href=""https://selenium.googlecode.com/svn/trunk/docs/api/rb/Selenium/Client/GeneratedDriver.html#open_window-instance_method"" rel=""nofollow"">rdoc</a>, but whenever I attempt to run my code, I am told that the method does not exist.</p>

<pre><code>require 'rubygems'
require 'selenium-webdriver'
$browser = Selenium::WebDriver.for :firefox #I've tried chrome too to the same effect
$browser.navigate.to(""http://google.com"")
$browser.openWindow(""http://cnet.com"",""ASDF"") #This doesn't work.
$browser.open_window(""http://cnet.com"",""ASDF"") #This doesn't work either.
</code></pre>

<p>It would be greatly appreciated if someone could set the record straight on how to use this.</p>
","2988","","<p>I don't know Selenium, but according to your own question the name of the method is <a href=""http://Selenium.GoogleCode.Com/svn/trunk/docs/api/rb/Selenium/Client/GeneratedDriver.html#open_window-instance_method"" rel=""nofollow""><code>open_window</code></a> not <code>openWindow</code>.</p>
"
"<p>I'm using Ruby enumerable to create an array of from another model. The method ""companiesattending""</p>

<pre><code>class Conference &lt; ActiveRecord::Base
  has_many :accountconferences
  has_many :accounts, :through =&gt; :accountconferences
  accepts_nested_attributes_for :accounts

  def companiesattending
    accounts.collect {|f| f.name }
  end

end
</code></pre>

<p>What's strange is when I put this into a view I get a list of items as expected and then some of of the members of the array at the end of the list still in an array:</p>

<p>The View Results</p>

<pre><code>    &lt;ul style=""list-style-type: none;""&gt;
        &lt;li&gt;Company 1&lt;/li&gt;
    &lt;/ul&gt;

    &lt;ul style=""list-style-type: none;""&gt;
        &lt;li&gt;Company 2&lt;/li&gt;
    &lt;/ul&gt;
[&amp;quot;3point5.com&amp;quot;, &amp;quot;Company&amp;quot;, &amp;quot;5.1&amp;quot;, &amp;quot;A O Coolers&amp;quot;, &amp;quot;Abo Gear&amp;quot;, &amp;quot;Access Fund&amp;quot;, &amp;quot;AceCamp.com&amp;quot;, &amp;quot;ACORN&amp;quot;
</code></pre>

<p>/app/views/conferences/_accounts.html.erb</p>

<pre><code>&lt;div class=""span5""&gt;
&lt;h3 class=""pull-left""&gt;Companies That Are Attending&lt;/h3&gt;&lt;/br&gt;&lt;/br&gt;&lt;/br&gt;
 &lt;%= @accounts.each do |f|%&gt;
    &lt;ul style=""list-style-type: none;""&gt;
        &lt;li&gt;&lt;%= f %&gt;&lt;/li&gt;
    &lt;/ul&gt;
 &lt;% end %&gt;
&lt;/div&gt;
</code></pre>

<p>/app/models/conferences.rb (Show Action)</p>

<pre><code>  def show
    @conference = Conference.find(params[:id])
    @accounts = @conference.companiesattending  
  end
</code></pre>

<p>What am I missing?</p>
","2988","","<p><code>each</code> returns <code>self</code>, i.e. the object it was called on, and <code>&lt;%=</code> displays whatever the expression inside of it evaluates to. The expression inside of <code>&lt;%=</code> is <code>@accounts.each</code> which returns <code>@accounts</code>, ergo, <code>@accounts</code> is displayed.</p>

<p>If you don't want the array displayed, use <code>&lt;%</code> which only <em>executes</em> but doesn't <em>display</em> code.</p>
"
"<p>Is there any difference between the two following statements. They achieve the same end, correct? Do they compile to the same Java code? Is there any performance difference between them or is it just a matter of preference/readability?</p>

<pre><code>for (thing &lt;- things) {
    doSome(thing)
}

things.foreach(
  thing =&gt;
    doSome(thing)
)
</code></pre>
","2988","","<p><code>for</code> comprehensions are defined as simple syntactic translations. That's extremely important, because that allows <em>any</em> object to work with <code>for</code> comprehensions, it just has to implement the right methods.</p>

<p>IOW: the Scala Language Specification says that the first snippet gets translated into the second. So, if there were <em>any</em> difference whatsoever between the two snippets, that would be a violation of the spec and thus a very serious compiler bug.</p>

<p>Some people have asked for, and even implemented, special treatment of certain objects (e.g. <code>Range</code>s), but those patches were always rejected with the argument that special treatment for special types would only benefit those special types, whereas making Scala faster <em>in general</em> will benefit everybody.</p>

<p>Note that with Macros, it's probably possible to detect, say, iteration over a <code>Range</code> purely as a simple C style <code>for</code> loop and transform that into a <code>while</code> loop or a direct tailrecursive inner function, without having to change the spec or add special casing to the compiler.</p>
"
"<pre><code>var a = [3, 4, 5];
var b = [6, 7, 8];

function why() {
    b = a;
    b[0] = 1;
    alert(a[0] + '    ' + b[0]);
}
why();
</code></pre>

<p>The result is <code>a[0]=1, b[0]=1;</code>. It seem likes JavaScript is passing by reference?</p>

<p>But in this case:</p>

<pre><code>var a = [3, 4, 5];
var b = [6, 7, 8];

function why() {
    b = a;
    b = [1, 2, 3];
    alert(a + '    ' + b);
}
why();
</code></pre>

<p>The result is <code>a=[3,4,5]</code> and <code>b = [1,2,3]</code>. Why is it passing by value?
How to avoid passing by reference?</p>
","2988","","<p>Both cases are pass-by-value. JavaScript is <em>always</em> pass-by-value, there is no way to pass by reference. In particular, the value being passed is always a pointer to an object. (Actually, primitives are passed by value directly, but the difference can only be observed for mutable values and primitives are immutable, so it doesn't make a difference.)</p>

<p>In the first case you are mutating the object the pointer points to. But the reference doesn't get changed, only the object the reference points to. The reference still points to the same object, the object just looks different than it did before.</p>

<p>This specific case of pass-by-value-where-the-value-is-a-pointer is sometimes called call-by-object-sharing, call-by-object or call-by-sharing, and is the way argument passing works in pretty much all object-oriented languages: Smalltalk, Python, Ruby, Java, C# (by default, you can pass-by-reference by explicitly specifying the <code>ref</code> modifier) etc.</p>
"
"<p>I have an object <code>PersistentObject</code> which you can think of as plucked out of an ORM, it's an object which you can use natively in your programming language (agnostic to the backend), and it has methods <code>load</code> and <code>save</code> for committing changes to a database.</p>

<p>I want my <code>PersistentObject</code> to be faultable, i.e. I want to be able to initialize it as a lightweight pointer which server only to reference the object in the database. And when (if) the moment comes then I can fault it into memory by actually going to the database and fetching it. The point here is to be able to add this object to collections as a reference without ever needing to fetch the object. I also want to be able to initialize the object the old fashioned way with classic constructor and then commit it to the database (this is handy when you need to create a new object from scratch, rather than manipulating an existing one).</p>

<p>So I have an object which has multiple constructors: a classic one, and one that creates a fault based on the object GUID in the database. And when the object is initialized as a fault, I want instance methods to be able to access that state as an instance variable because operations on a fault are different to those on a fully loaded object. But for obvious reasons, I don't want clients messing with my inner state so I don't want to create an accessor for the ivar. So my question is, how do I init/set an ivar from a class method in an object instance in such a way that outside clients of my class can't mess with it (i.e. set its value to something else)?</p>

<p>Sorry for all the words, the code should make it a lot clearer. I've tried something which obviously doesn't work but illustrates the point nicely. Apologies if this is an elementary question, I'm quite new to Ruby.</p>

<pre><code>class PersistentObject
    def initialize(opts={})
        @id = opts[:id] || new_id
        @data = opts[:data] || nil
    end

    def self.new_fault(id)
        new_object = PersistentObject.new
        new_object.@fault = true            #&lt;----- How do you achieve this?
        new_object
    end

    def new_id
        #returns a new globally unique id
    end

    def fault?
        @fault
    end

    def load
        if fault?
            #fault in the object from the database by fetching the record corresponding to the id
            @fault = false
        end
    end

    def save
        #save the object to the database
    end
end

#I create a new object as a fault, I can add it to collections, refer to it all I want, etc., but I can't access it's data, I just have a lightweight pointer which can be created without ever hitting the database
o = PersistentObject.new_fault(""123"")

#Now let's suppose I need the object's data, so I'll load it
o.load

#Now I can use the object, change it's data, etc.
p o.data
o.data = ""foo""

#And when I'm ready I can save it back to the database
o.save
</code></pre>

<p><strong>EDIT</strong>:
I should say that my heart isn't set on accessing that instance's ivar from the class method, I'd be more than happy to hear of an idiomatic Ruby pattern for solving this problem.</p>
","2988","","<p>This is not possible. And I am not talking about ""not possible in Ruby"", I am talking about mathematically, logically impossible. You have two requirements:</p>

<ol>
<li>Another object should not be allowed to set <code>@fault</code>.</li>
<li>Another object should be allowed to set <code>@fault</code>. (Remember, <code>PersistentObject</code> is just yet another object.)</li>
</ol>

<p>It should be immediately obvious that those two requirements contradict each other and thus what you want simply <em>cannot</em> be done. Period.</p>

<p>You can create an <code>attr_writer</code> for <code>@fault</code>, then <code>PersistentObject</code> can write to it … but so can everybody else. You can make that writer <code>private</code>, then <code>PersistentObject</code> needs to use metaprogramming (i.e. <code>send</code>) to circumvent that access protection … but so can everybody else. You can use <code>instance_variable_set</code> to have <code>PersistentObject</code> set <code>@fault</code> directly … but so can everybody else.</p>
"
"<p>Is it possible to substitute </p>

<pre><code>@m1 = MyModule.method1
@m2 = MyModule.method2
@m3 = MyModule.method3
@m4 = MyModule.method4
</code></pre>

<p>with something like this</p>

<pre><code>with MyModule do

  @m1 = method1
  @m2 = method2
  @m3 = method3
  @m4 = method4

end
</code></pre>

<p>in Ruby?</p>
","2988","","<p>No, this is not possible. Method calls without an explicit receiver have an implicit receiver of <code>self</code>, so in order to make <code>method1</code> a call to <code>MyModule.method1</code>, <code>self</code> needs to be changed to <code>MyModule</code>. That's easy enough, after all, that's what <code>instance_eval</code> and <code>instance_exec</code> are for.</p>

<p>However, instance variables also belong to <code>self</code>, that's why they are called <em>instance</em> variables, after all. So, if you change <code>self</code> to <code>MyModule</code>, then <code>@m1</code>, <code>@m2</code> etc. will also belong to <code>MyModule</code> and no longer to whatever object they belong to in your code example.</p>

<p>In other words, you need <code>self</code> to change but you also need <code>self</code> not to change. That's a contradiction, ergo, what you want isn't possible.</p>
"
"<p>I am still trying to figure out the difference between each and select after reading the documentation.</p>

<p>Can someone explain to me why each and select are replaceable in the below code? 
I don't understand why select is used and then the code-writer places it an array??
Also, what is a good way to understand their differences.</p>

<pre><code>def word_unscrambler(str, words)
  str_letters = str.split("""").sort

  anagrams = []
  words.select do |word|
    word_letters = word.split("""").sort
    anagrams &lt;&lt; word if str_letters == word_letters
  end

  anagrams
end
</code></pre>
","2988","","<blockquote>
  <p>I don't understand why <code>select</code> is used</p>
</blockquote>

<p>Because the author of that code doesn't understand <code>select</code>.</p>
"
"<p>I have come across the following code :</p>

<pre><code>  class MethodLogger
    def log_method((klass,method_name)
      klass.class_eval do
        alias_method ""#{method_name}_original"" method_name
        define_method method_name do
          puts ""#{Time.now}: Called #{method_name}""
          send ""#{method_name}_original""
        end
      end
    end
  end


class Tweet
 def say_hi
  puts ""Hi""
 end
end

logger =MethodLogger.new
logger.log_method(Tweet,:say_hi)
</code></pre>

<p>This gives output <pre>2012-09-11 12:54:09 -400: Called say_hi</pre></p>

<p>So, how does the define_method :say_hi override the original method :say_hi ? Or does define_method change the original method definition ?</p>
","2988","","<p>If you define a method multiple times, all latter definitions will simply overwrite the older ones. There can only be one method with the same name.</p>
"
"<p>I have only minimal knowledge of Ruby, but I am working on a Vagrant VM for my office. I have the settings configured in variables to allow for easy customizing by each of our developers, but I am running into problems when I try to include the variables from an outside file.</p>

<p>Here is the basic gist of what I am doing (this works):</p>

<pre><code># Local (host) system info
host_os = ""Windows""
nfs_enabled = false

# IP and Port Configuration
vm_ip_address = ""33.33.33.10""
vm_http_port = 80
host_http_port = 8888
vm_mysql_port = 3306
host_mysql_port = 3306   # Warning, mysql port configuration using 3306 will interfere with any locally run MySQL server.
local_sites_path = ""D:\\Web""
vm_sites_path = ENV[""HOME""] + ""/Sites""

# VM Configuration
vm_memory = ""1024""

Vagrant.configure(""2"") do |config|
  ... do vagrant stuff here
</code></pre>

<p>However, this does not work (the contents of config.local.rb match the variable declarations above):</p>

<pre><code>if(File.file?(""config.local.rb""))
  require_relative 'config.local.rb'
else
  # Local (host) system info
  host_os = ""Mac""
  nfs_enabled = true

  # IP and Port Configuration
  vm_ip_address = ""33.33.33.10""
  vm_http_port = 80
  host_http_port = 8888
  vm_mysql_port = 3306
  host_mysql_port = 3306   # Warning, mysql port configuration using 3306 will interfere with any locally run MySQL server.
  local_sites_path = ENV[""HOME""] + ""/Sites""
  vm_sites_path = ENV[""HOME""] + ""/Sites""

  # VM Configuration
  vm_memory = ""512""
end

Vagrant.configure(""2"") do |config|
  ... do vagrant stuff here
</code></pre>

<p>Any ideas what is happening here? In both cases, the variable declarations are at the top of the file, so my understanding is that they should be in the global scope.</p>

<p>Here is the contents of config.local.rb:</p>

<pre><code># Duplicate to config.local.rb to activate. Override the variables set in the Vagrantfile to tweak your local VM.

# Local (host) system info
host_os = ""Windows""
nfs_enabled = false

# IP and Port Configuration
vm_ip_address = ""33.33.33.10""
vm_http_port = 80
host_http_port = 8888
vm_mysql_port = 3306
host_mysql_port = 3306   # Warning, mysql port configuration using 3306 will interfere with any locally run MySQL server.
local_sites_path = ""D:\\Web""
vm_sites_path = ENV[""HOME""] + ""/Sites""

# VM Configuration
vm_memory = ""1024""
</code></pre>

<p>As I said, I haven't really used Ruby before, but everything I know about programming and scope says that this should be working fine. I have checked (using <code>print</code> statements) that the file is being detected and included by the script, but for some reason it doesn't work unless I hard code the config settings directly in the Vagrantfile.</p>

<p>Thanks in advance.</p>
","2988","","<p>Variables starting with a lowercase letter are <em>local variables</em>. They are called ""local"" variables, because they are local to the scope they are defined in. In your case, they are local to the script body of <code>config.local.rb</code>. They cannot be accessed from anywhere else except the script body of <code>config.local.rb</code>. That's what makes them ""local"".</p>

<p>If you want a global variable, you need to use a global variable. Global variables start with a <code>$</code> sign.</p>
"
"<p>I have this code:</p>

<pre><code>class Note &lt; Struct.new :value
  def to_s
    value.to_s
  end
  def self.use_new(arg)
    Note.new arg
  end
end

class Chord
  def initialize(arr)
    @arr = arr
  end

  def play
    @arr.join('-')
  end
end
new_method = Note.singleton_method(:use_new)
chords = %w{ G Bb Dd E }
c = Chord.new(chords.map(:new_method))
puts c.play
</code></pre>

<p>Now I know I don't have to do this with map, I can simply use <code>map {|n| Note.new n}</code></p>

<p>But I want to know how to do this. The following says Note doesn't have a method called singleton_method. When I try and use instance method (without the self in the definition) it says the method doesn't exist. Please advise.</p>
","2988","","<p>Why do you want an <code>UnboundMethod</code>? There's not much you can sensibly do with an <code>UnboundMethod</code>. In particular, you cannot <code>call</code> it. The only thing you can do is <code>bind</code> it to an instance of the <code>module</code> you got it from in order to obtain a bound <code>Method</code>. In this case, however, the <code>module</code> in question is <code>Note</code>'s singleton class which has only one instance anyway, so you can only <code>bind</code> it to <code>Note</code>. So, you might just as well get a bound <code>Method</code> in the first place:</p>

<pre><code>new_method = Note.method(:use_new)
chords = %w{ G Bb Dd E }
c = Chord.new(chords.map(&amp;new_method)) # BTW: you had a typo here
puts c.play
</code></pre>

<p>I also don't understand what the purpose of your <code>Note::use_new</code> is. It is simply a no-op wrapper around <code>Note::new</code>, so it might just as well be an <code>alias_method</code> instead. Or, even better, just remove it, it doesn't server any purpose:</p>

<pre><code>new_method = Note.method(:new)
chords = %w{ G Bb Dd E }
c = Chord.new(chords.map(&amp;new_method)) # BTW: you had a typo here
puts c.play
</code></pre>

<p>You can use <code>singleton_method</code> as well, if you want to make sure to <em>only</em> get singleton methods:</p>

<pre><code>new_method = Note.singleton_method(:use_new)
chords = %w{ G Bb Dd E }
c = Chord.new(chords.map(&amp;new_method)) # BTW: you had a typo here
puts c.play
</code></pre>

<p>If you <em>really</em> insist on getting an <code>UnboundMethod</code>, then you will have to <code>bind</code> it first, before you can use it, and you have to get it from the singleton class, since <code>singleton_method</code> returns a <code>Method</code> not an <code>UnboundMethod</code>:</p>

<pre><code>new_method = Note.singleton_class.instance_method(:use_new)
chords = %w{ G Bb Dd E }
c = Chord.new(chords.map(&amp;new_method.bind(Note)))
puts c.play
</code></pre>
"
"<p>I want to write a function to count the occurrences of all the letters in a str, sounded easy enough and I came up with this</p>

<pre><code>def letter_count(str)

     hash = {}
     letters = str.gsub(' ','').split('')
     letters.each do |letter|
        if hash.include?(letter)
          hash[letter] += 1 
        else
          hash[letter] = 1
        end

     end
  hash

end

letter_count('moon') =&gt; {""m""=&gt;1, ""o""=&gt;2, ""n""=&gt;1}
</code></pre>

<p>when I tried to shorten it to</p>

<pre><code>def letter_count(str)

     hash = {}
     letters = str.gsub(' ','').split('')
     letters.each do |letter|
        hash[letter] += 1 if hash.include?(letter)
        hash[letter] = 1

     end
  hash

end
</code></pre>

<p>The answer became: </p>

<pre><code>letter_count('moon') =&gt; {""m""=&gt;1, ""o""=&gt;1, ""n""=&gt;1}
</code></pre>

<p>Can you please tell me what I went wrong??? Thank you!!!!!!!</p>
","2988","","<p>This particular problem is a great example of how choosing the right algorithm, but even more importantly the right <em>data structure</em> can massively simplify the solution. In fact, in this particular case, choosing the right data structure will make the algorithm so trivial that it basically completely vanishes: the data structure already <em>is</em> the answer.</p>

<p>The data structure I am talking about is a <code>Multiset</code>: a <code>Multiset</code> is like a <code>Set</code>, except it doesn't store only unique items, instead an item can be added multiple times and the <code>MultiSet</code> will keep count of how often an item was added – which is exactly what you want. Basically, a <code>Set</code> tells you whether a particular item is in the <code>Set</code> <em>at all</em>, a <code>Multiset</code> in addition also tells you <em>how often</em> that particular item is in the <code>Multiset</code>.</p>

<p>Unfortunately, there is no <code>Multiset</code> implementation in the Ruby core library or standard library, but there <a href=""https://RubyGems.Org/gems/multiset/"" rel=""nofollow"">is a gem</a>.</p>

<p>The whole code is literally just:</p>

<pre><code>def letter_count(str)
  Multiset[*str.chars]
end

letter_count('moon')
# =&gt; #&lt;Multiset:#1 ""m"", #2 ""o"", #1 ""n""&gt;
</code></pre>

<p>Yes, that's it. That's the entire code. As you can see, there is one occurrence of the letter <code>'m'</code>, two occurrences of the letter <code>'o'</code> and one occurrence of the letter <code>'n'</code>.</p>
"
"<p>Some times when I write unit tests I need to instantiate a class without the <code>initialize</code> method being invoked. For instance when the constructor instantiates other classes that I will replace with stubs anyway. For instance:</p>

<pre><code>class SomeClassThatIWillTest
  def initialize
    @client = GoogleAnalyticsClient.new
    @cache = SuperAdvancedCacheSystem.new
  end

  # ...
end
</code></pre>

<p>In a test I will probably replace both <code>@client</code> and <code>@cache</code> with stubs, so I'd rather the constructor was never invoked. Is there any black magic that can help me out with that?</p>
","2988","","<p>Sure you can. <code>Class#new</code> is nothing more than a convenience method that saves you from having to allocate and initialize an object manually. Its implementation looks roughly like this:</p>

<pre><code>class Class
  def new(*args, **kwargs, &amp;blk)
    obj = allocate
    obj.send(:initialize, *args, **kwargs, &amp;blk)
    obj
  end
end
</code></pre>

<p>You can just call <code>Class#allocate</code> manually instead, and not call <code>initialize</code>.</p>
"
"<p>The following describes what seems to be a bug in Ruby 1.8 (and REE) but has been fixed in 1.9. </p>

<p>I'd like to know:</p>

<ol>
<li>Why calling <code>==</code> on <code>String</code> or <code>Fixnum</code> triggers calling <code>==</code> on <code>other</code> object at all?</li>
<li>Why calling <code>==</code> on <code>String</code> works differently depending on the <code>other</code> object class? </li>
</ol>

<p>Now the code:</p>

<pre><code>class A
  def ==(other)
    puts ""In A: calling == against #{other}""
    super
  end
end

class E &lt; Exception
  def ==(other)
    puts ""In E: calling == against #{other}""
    super
  end
end
</code></pre>

<h3>Example 1</h3>

<pre><code>""foo"" == A.new
=&gt; false
</code></pre>

<p>Nothing interesting here, move along.</p>

<h3>Example 2</h3>

<pre><code>""foo"" == E.new
In E: calling == against foo
=&gt; false
</code></pre>

<p>Calling <code>==</code> on <code>String</code> triggers <code>==</code> on <code>other</code> object of <code>Exception</code> class.</p>

<h3>Example 3</h3>

<pre><code>42 == A.new
In A: calling == against 42
=&gt; false
</code></pre>

<p>Calling <code>==</code> on <code>Fixnum</code> triggers <code>==</code> on <code>other</code> object.</p>

<h3>Example 4</h3>

<pre><code>42 == E.new
In E: calling == against 42
=&gt; false
</code></pre>

<p>Calling <code>==</code> on <code>String</code> triggers <code>==</code> on <code>other</code> object of <code>Exception</code> class.</p>
","2988","","<p>Ruby is an object-oriented language. In an object-oriented language, you send messages to objects and those objects then respond to those messages however they see fit.</p>

<p>This means that the receiver of the message, and <em>only</em> the receiver(!) is in <em>total</em> control of what a message means.</p>

<p>With some operators, however, there are certain expectations of symmetry: for example, <code>a == b</code> is expected to be the same as <code>b == a</code>. But in an OO language that is <em>impossible</em>! Either <code>a</code> or <code>b</code> <em>must</em> be the receiver of the message, so in one case <code>a</code> gets to decide whether <code>a</code> and <code>b</code> are equal and in the other case <code>b</code> gets to decide. They might decide differently, and then the expectation of symmetry would be broken.</p>

<p>So, in some classes equality is actually implemented something like this:</p>

<blockquote>
  <p>If I know who you are, <em>I</em> decide whether we are equal. But if I don't know who you are, I will let <em>you</em> decide, because maybe <em>you</em> know who <em>I</em> am!</p>
</blockquote>

<p>Here's an example: if you write your own <code>Numeric</code> class (say, a <code>Quaternion</code> class), then the system builtin <code>Fixnum</code> class doesn't know anything about <code>Quaternion</code>s. So, when you ask the <code>Fixnum</code> <code>0</code> whether it is equal to the <code>Quaternion</code> <code>(0, 0, 0, 0)</code>, it will responds <code>false</code>, even though that's <em>wrong</em>.</p>

<p>So, instead the <code>Fixnum</code> will first check: do I know how to compare myself to a <code>Quaternion</code>? No, I don't, but maybe a <code>Quaternion</code> knows how to compare itself to a <code>Fixnum</code>! After all, the <code>Quaternion</code> class didn't exist when the <code>Fixnum</code> class was written, so the <code>Fixnum</code> class <em>cannot</em> know about <code>Quaternion</code>s. But when the <code>Quaternion</code> class was written, maybe the author was so thoughtful to make it possible to compare <code>Quaternion</code>s with <code>Fixnum</code>s.</p>

<p><em>That's</em> why <code>Fixnum#==</code> reverses the arguments and tries again.</p>

<p>With <code>String</code>, it's the same but somewhat more complicated. In Ruby, <em>classes</em> aren't <em>types</em> and <em>subtyping</em> and <em>subclassing</em> are different. Ruby itself doesn't have a concept of <em>type</em> at all! The <em>type</em> of an object is its <em>protocol</em>, i.e. the messages it understands and how it responds to them. But that concept is not recorded in Ruby (unlike Objective-C, for example, which <em>does</em> have an explicit notion of <em>protocol</em>).</p>

<p>There, however, some cases, where you <em>want</em> to break OO encapsulation, and <em>know</em> the specific type and even more: the specific <em>representation</em> of the type. (Note: this violates OO, but it is sometimes necessary for performance.)</p>

<p>In cases, where Ruby needs an object to be of a <em>specific</em> class instead of just responding to a specific protocol, you would lose a lot of flexibility. You <em>have</em> to use, say, a <code>String</code>, even though you would much rather use a <code>Rope</code> instead. In order to give you back some flexibility, Ruby allows you to pass in something which is not exactly a <code>String</code> but which is equivalent to one and can be converted to one with a <code>to_str</code> method. So, unlike other languages, where <code>A IS-A String</code> is represented by <code>A</code> being a subclass of <code>String</code>, in Ruby, the relationship <code>A IS-A String</code> is represented by <code>A</code> having a <code>to_str</code> method.</p>

<p>That's what you are seeing above. If the argument to <code>String#==</code> isn't a <code>String</code>, then <code>String#==</code> doesn't know what to do with it. But if it is ""string-like"", i.e. it implements <code>to_str</code>, then maybe <em>it</em> does know how to compare itself to a <code>String</code>?</p>

<p>Note that equality is <em>very</em> hard to get right. People cannot even agree on what it means in a purely functional language, and that's the <em>easy</em> case! In Ruby, there are two additional complications: mutable state and OO. Mutable state means that two objects that were equal a moment ago may not be equal anymore a couple of moments later. Or should they be? Or shouldn't they be? And OO means that equality <em>cannot</em> be symmetric.</p>

<p>That's why the implementations of <code>==</code> for various core and stdlib classes are constantly improved. That's also why you may see weird behavior now and again. Sometimes it may just be an artifact of trying to get equality right, and sometimes it might just simply be a bug.</p>

<p>By the way: for the <em>arithmetic</em> operators, subclasses of <code>Numeric</code> actually have a more formal double-dispatch protocol using the <code>coerce</code> method. If a <code>Numeric</code> object doesn't know what to do with another <code>Numeric</code>, it will ask that other object to <code>coerce</code> the two objects to a type that <em>does</em> know that. For example, if you try to add a <code>Quaternion</code> to a <code>Fixnum</code>, the <code>Fixnum</code> won't know what to do:</p>

<pre><code>2 + Quaternion.new(1, 0, 0, 0)
</code></pre>

<p>The <code>+</code> method of <code>Fixnum</code> will then call:</p>

<pre><code>a, b = other.coerce(self)
</code></pre>

<p>IOW: it will call <code>Quaternion#coerce</code> with the equivalent of</p>

<pre><code>Quaternion.new(1, 0, 0, 0).coerce(2)
</code></pre>

<p>to which <code>Quaternion</code> will respond with an <code>Array</code> of <code>[Quaternion.new(2, 0, 0, 0), Quaternion.new(1, 0, 0, 0)]</code></p>

<p>Then, <code>Fixnum#+</code> will try again by simply calling </p>

<pre><code>a + b
</code></pre>

<p>Which will now work because <code>a</code> is a <code>Quaternion</code> also and knows how to add two <code>Quaternion</code>s.</p>

<p>A very common implementation of <code>coerce</code> is simply to swap the arguments, i.e. </p>

<pre><code>def coerce(other)
  return other, self
end
</code></pre>

<p>That's equivalent to the behavior you are seeing with <code>Fixnum#==</code>.</p>

<p>Again: this kind of dispatch is hard to get right, and there are improvements being made to the <code>coerce</code> protocol.</p>
"
"<p>Trying to give permissions to /public/uploads with deploy hook,  during cloud66 deploy to digitalocean, to get carrierwave file uploads working.
I'm receiving the following error:</p>

<pre><code>Error during deployment: Error during after_rails hook: Execution of sudo 
/tmp/open_folder_permissions.sh returned a non-zero exit code. Output was: 
/tmp/open_folder_permissions.sh:5: syntax error, unexpected tGVAR, expecting keyword_do or 
'{' or '(' sudo chmod 0775 -R $RAILS_STACK_PATH/public/uploads ^ 
</code></pre>

<p>open_folder_permissions.sh</p>

<pre><code>#! /usr/bin/env ruby
#load environment variables
source /var/.cloud66_env
#assign desired permissions
sudo chmod 0775 -R $RAILS_STACK_PATH/public/uploads
</code></pre>

<p>deploy_hooks.yml</p>

<pre><code>production:
  after_rails:
    - source: /.cloud66/files/open_folder_permissions.sh
      destination: /tmp/open_folder_permissions.sh
      target: rails                
      execute: true
      run_on: all_servers
      apply_during: all
      sudo: true
</code></pre>

<p>What could cause the error?</p>
","2988","","<p>Your <code>open_folder_permissions.sh</code> doesn't contain valid Ruby code. From the looks of it, it's supposed to be a shell script, not a Ruby script, so you should change the shebang line to a shell interpreter instead of a Ruby interpreter.</p>

<p><code>#! bin/bash</code> is the right interpreter.</p>
"
"<p>In scala what is the difference between these two import strategies</p>

<p><strong>Option 1</strong></p>

<pre><code>import com.somepackage

class MyClass {
  //further code
}
</code></pre>

<p><strong>Option 2</strong></p>

<pre><code>class MyClass {
  import com.somepackage
  //further code
}
</code></pre>
","2988","","<p>In Scala, <code>import</code>s are lexically scoped. <code>import</code>ed identifiers are only visible within the scope they were <code>import</code>ed in.</p>

<p>In the first case, the scope is the file, so, <code>import</code>s will be visible in the entire file, but not in other files. In the second case, the scope is the class, so <code>import</code>s will be visible in the entire class, but not in other classes <em>even</em> in the same file (except of course classes nested within <code>MyClass</code>).</p>

<p>You can also limit the scope of an <code>import</code> just to a single method an even a single block(!)</p>

<pre><code>class Foo {
  def bar {
    // do something
    {
      import baz.quux.Frotz
      // use Frotz
    }
    // Frotz not visible here
  }
}
</code></pre>

<p>This is a nice example of Scala's regularity, orthogonality and simplicity. E.g. in Java, blocks create scopes for local variables but not for <code>import</code>s (or methods or anything else). In Scala, blocks create scopes. Period. No exceptions, no corner cases.</p>

<p>The <code>import</code> sits in between the curly braces, ergo it is only visible between the curly braces. It just does what you expect.</p>
"
"<p>I have URI that contains <code>##</code> (e.g. <code>http://foo.com/bar##baz</code>) . Ruby's <code>URI.parse</code> function throws an error when I try to parse it.</p>

<p>Are double hash marks forbidden in URIs? Or is the Ruby Parser too strict?</p>
","2988","","<p><a href=""http://Tools.IETF.Org/html/rfc3986#section-3.5"">Fragment Identifiers</a> may not contain a hash sign. The parser is correct.</p>

<p>The syntax for a fragment identifier is defined as follows:</p>

<pre><code>fragment = *( pchar / ""/"" / ""?"" )
</code></pre>

<p><a href=""http://Tools.IETF.Org/html/rfc3986#section-3.3""><code>pchar</code> is defined as</a>:</p>

<pre><code>pchar = unreserved / pct-encoded / sub-delims / "":"" / ""@""
</code></pre>

<p><a href=""http://Tools.IETF.Org/html/rfc3986#section-2.3""><code>unreserved</code></a>, <a href=""http://Tools.IETF.Org/html/rfc3986#section-2.1""><code>pct-encoded</code></a> and <a href=""http://Tools.IETF.Org/html/rfc3986#section-2.2""><code>sub-delims</code></a> are defined as:</p>

<pre><code>unreserved  = ALPHA / DIGIT / ""-"" / ""."" / ""_"" / ""~""

pct-encoded = ""%"" HEXDIG HEXDIG

sub-delims  = ""!"" / ""$"" / ""&amp;"" / ""'"" / ""("" / "")"" / ""*"" / ""+"" / "","" / "";"" / ""=""
</code></pre>
"
"<p>Am I missing out something?</p>

<pre><code>class Circus
  private
  def start
    puts 'And now for something completely different..'
  end
end
</code></pre>

<p>And for my disillusion:</p>

<pre><code>c=Circus.new
c.start               #NoMethodError: private method `start' called
c.method(:start).call #no problem at all
c.send :start        #neither this fails
</code></pre>

<p>Can anybody give me a reason why private methods exist in Ruby?</p>
","2988","","<p>Once you start using reflection, all bets are off. That's not unique to Ruby, by the way, almost every language that has reflection has this problem.</p>

<p>You can mitigate this by using coding standards and code reviews, e.g. always use <code>public_send</code> etc. But if you don't like this, you will need to use a language with a properly stratified reflection system such as Newspeak.</p>
"
"<p>Is there a way in ruby to store the present (runtime ) environment in Ruby so that I can load from another program and ""pick up where I left off?""</p>
","2988","","<p>This depends on which Ruby environment you use. It works in SmallRuby, for example, but AFAIK SmallRuby was never finished. It might also work in MagLev. I don't know of any other Ruby environment where it works.</p>
"
"<p>I've got something like this:</p>

<pre><code>array = [
  hash1 = {""marco""=&gt;""polo"", ""girth""=&gt;""skinny"", ""onion""=&gt;true},
  hash2 = {""darco""=&gt;""johnson"", ""girth""=&gt;""wide"", ""onion""=&gt;false},
  hash3 = {""flarco""=&gt;""kiwi"", ""birth""=&gt;""noble"", ""onion""=&gt;false}
]
</code></pre>

<p>where one and only one <code>onion</code> is <code>true</code> at any given time. </p>

<p>I want an expression or function to return the name of the variable (i.e. <code>hash1</code>, <code>hash2</code>) that holds the hash whose <code>onion</code> is currently <code>true</code>. How can I do that?</p>
","2988","","<p>This is impossible. An object doesn't know about variables which reference it.</p>
"
"<p>I wrote a quite big ruby module, it loads in about 3-4 secs. Most of the times I need only one function from it. To speed up things, is it possible to load / require only that particular function form the module?</p>
","2988","","<p><code>load</code> and <code>require</code> have nothing to do with ""functions"" (BTW Ruby doesn't have functions, only methods) or classes or modules. They simply run a file. If the file takes a long time to run, then <code>load</code> / <code>require</code> will take a long time.</p>
"
"<p>Here is my program -</p>

<pre><code>def calculate(*numbers, options = {})
  add(numbers)      if options[:add]
  subtract(numbers) if options[:add] == false
end

def add(*numbers)
  numbers.reduce(:+)
end

def subtract(*numbers)
  numbers.reduce(:-)
end

p calculate(1,2)
</code></pre>

<p>On line 1, it is complaining</p>

<blockquote>
  <p>tests.rb:1: syntax error, unexpected '=', expecting ')'<br>
  def calculate(*numbers, options = {})<br>
  <strong><em>_</em>__<em>_</em>__<em>_</em>__<em>_</em>__<em>_</em>__<em>_</em>__<em>_</em>__<em>_</em>__<em>_</em>_</strong>^<br>
  [Finished in 0.1s with exit code 1]</p>
</blockquote>

<p>I thought it might have been a problem with default values in Ruby, because before v1.9, you were required to have all default values in order - but this shouldn't be the issue because my version is    </p>

<p><code>ruby 2.0.0p195 (2013-05-14) [i386-mingw32]</code></p>

<p>I've tried transposing the spaces all over, because ruby seems to be particular with those things when it comes to methods, but no dice.  </p>

<p>Could it be my splat variable <code>*numbers</code> ?</p>
","2988","","<p>You can only have mandatory arguments after the splat argument. Optional arguments must come before the splat.</p>

<p>A pseudo-regex for parameter lists in Ruby is something like this:</p>

<pre><code>mand* opt* splat? mand* (mand_kw | opt_kw)* kwsplat? block?
</code></pre>

<p>Here's an example:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
          ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk)
  Hash[local_variables.map {|var| [var, eval(var.to_s)] }]
end

method(:foo).arity
# =&gt; -5

method(:foo).parameters
# =&gt; [[:req, :m1], [:req, :m2], [:opt, :o1], [:opt, :o2], [:rest, :splat], 
#     [:req, :m3], [:req, :m4], [:keyreq, :mk1], [:keyreq, :mk2], 
#     [:key, :ok1], [:key, :ok2], [:keyrest, :ksplat], [:block, :blk]]

foo(1, 2, 3, 4)
# ArgumentError: missing keywords: mk1, mk2

foo(1, 2, 3, mk1: 4, mk2: 5)
# ArgumentError: wrong number of arguments (3 for 4+)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], m3: 3, m4: 4, 
#      ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: :o2, splat: [], m3: 4, m4: 5, 
#      ok1: :ok1, mk1: 6, mk2: 7, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [], m3: 5, m4: 6, 
#      ok1: :ok1, mk1: 7, mk2: 8, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5], m3: 6, m4: 7, 
#      ok1: :ok1, mk1: 8, mk2: 9, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: :ok1, mk1: 9, mk2: 10, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: #&lt;Proc:0xdeadbeefc00l42@(irb):15&gt; }
</code></pre>
"
"<p>As a little hobby project, I'm trying to build up my own object system. I was wondering if there is a way of changing the default inheritance of all classes from <code>Object</code> to my base class <code>Entity</code>, so that whenever I create a new class I don't have to explicitly say <code>class Thing &lt; Entity</code>; ideally, I would just be able to say <code>class Thing</code> and have its default superclass be my <code>Entity</code> class.</p>
","2988","","<p>No, unfortunately this is not possible in Ruby. Ruby does not have a Meta-Object Protocol like e.g. CLOS that would allow you to manipulate the core semantics of the Object Model. It would be nice, though!</p>
"
"<p>I'm new to both Ruby and Rails, and as I go over various tutorials, I occasionally hit on a bit of Ruby syntax that I just can't grok.</p>

<p>For instance, what does this actually do?</p>

<pre><code>root to: ""welcome#index""
</code></pre>

<p>I can gather that this is probably a method named ""root"", but I'm lost after that.  ""To"" isn't a symbol, is it?  The colon would be before, as in "":to"" if it were.   Is this some form of keyword argument utilizing hashes?  I can't make this syntax work when trying it in irb with ruby1.9.3.</p>

<p>I know this might be a RTFM question, but I can't even think of what to google for this.</p>

<p>Thanks!</p>

<p>I'm still playing around with this syntax,</p>

<pre><code>def func(h)
    puts h[:to]
end

x = { :to =&gt; ""welcome#index"" }
y = :to =&gt; ""welcome#index""
z = to: ""welcome#index"" 

func to: ""welcome#index""
</code></pre>

<p>I see that this example only works with the lines defining ""y"" and ""z"" commented out.  So the braceless and the ""colon-after"" syntax are only valid in the context of calling a method?</p>
","2988","","<p>As you correctly gathered, <code>root</code> is a method call. Or rather, it's a <em>message send</em>. Ruby, like Smalltalk, builds upon a messaging metaphor, where objects send messages to other objects, and those objects (called the <em>receiver</em>) respond to those messages.</p>

<p>In this case, you pass an argument to <code>root</code>, that's how you know it's a message send. Message sends are the only thing that can take arguments, if you see an argument, then it must be a message send. There are no functions, no static methods, no constructors, no procedures, only methods and message sends.</p>

<p>So, what <em>is</em> the argument? Well, in Ruby, a lot of things that are syntactically required in other languages are optional. For example, parenthesis around the argument list:</p>

<pre><code>foo.bar(baz)
# can also be written as
foo.bar baz
</code></pre>

<p>If the very last argument to the message send is a <code>Hash</code> literal, you can leave off the curly braces:</p>

<pre><code>foo.bar({ :baz =&gt; 23, :quux =&gt; 42 })
# can also be written as
foo.bar(:baz =&gt; 23, :quux =&gt; 42)
</code></pre>

<p>Put the two together, and you get:</p>

<pre><code>foo.bar({ :baz =&gt; 23, :quux =&gt; 42 })
# can also be written as
foo.bar :baz =&gt; 23, :quux =&gt; 42
</code></pre>

<p>In Ruby 1.9, a new alternative <code>Hash</code> literal syntax was introduced. This literal syntax is very limited compared to the original one, because it can only express <code>Hash</code>es whose keys are <code>Symbol</code>s which are also valid Ruby identifiers, whereas with the original syntax, you can write down a <code>Hash</code> with any arbitrary object as key. But, for <em>that</em> limited use case, it is very readable:</p>

<pre><code>{ :baz =&gt; 23, :quux =&gt; 42 }
# can also be written as
{ baz: 23, quux: 42 }
</code></pre>

<p>If we put that feature together with the other two, we get the message send syntax you are asking about:</p>

<pre><code>foo.bar baz: 23, quux: 42
</code></pre>

<p>If we have method declared with a single argument like this:</p>

<pre><code>def foo.bar(opts) p opts end
</code></pre>

<p><code>opts</code> will be bound to a single <code>Hash</code> with two key-value pairs.</p>

<p>These features were often used to emulate keyword arguments as found in other languages. And it has long been a desire of the Ruby community to get support for <em>real</em> keyword arguments. This support was implemented in two steps: first, the new <code>Hash</code> literal syntax was introduced in Ruby 1.9, which allows you to make message sends which <em>look like</em> they are using keyword arguments, even though they are really just a <code>Hash</code>. And then in a second step, in Ruby 2.0 <em>real</em> keyword arguments were introduced. The modified method signature would look like this:</p>

<pre><code>def foo.bar(baz: nil, quux: nil) p baz, quux end
</code></pre>

<p>Note that at the moment, it is not possible to have <em>required</em> keyword arguments, they <em>always</em> need to have a default value and are thus always optional. You can, however, use the fact that default values can be arbitrary expressions and do something like this:</p>

<pre><code>def foo.bar(baz: raise ArgumentError '`baz` must be supplied!', 
  quux: raise ArgumentError '`quux` must be supplied!') p baz, quux end
</code></pre>

<p>In a future version of Ruby (it was actually already implemented in February and will likely be in 2.1), required keyword arguments can be specified by omitting the default value: </p>

<pre><code>def foo.bar(baz:, quux:) p baz, quux end
</code></pre>

<p>Note that there is a syntactic ambiguity now:</p>

<pre><code>foo.bar baz: 23, quux: 42
# is this sending the message `bar` to `foo` with *one* `Hash` or *two* keywords?
</code></pre>

<p>This ambiguity is actually intentional, because it allows old client code written against APIs which use a <code>Hash</code> argument to work unchanged with new APIs that use keyword arguments. There are some semi-complex rules which determine whether that syntax will be interpreted as a <code>Hash</code> or as keywords, but mostly those rules work out the way you would expect them to.</p>
"
"<p>Hi I am trying to implement this Common Lisp Macro in Ruby 2.0.0-p247:</p>

<pre class=""lang-lisp prettyprint-override""><code>(defmacro binary-cmp (a b &amp;key (test-func '&gt;))
  `(funcall #',test-func ,a ,b))
</code></pre>

<p>A binary test function that takes 2 arguments and 1 keyword argument <code>test_func</code>, and the <code>test_func</code> defaults to <code>gt</code> proc.</p>

<pre class=""lang-rb prettyprint-override""><code>gt    = -&gt; (a, b) { a &gt; b }
lt    = -&gt; (a, b) { a &lt; b }
equal = -&gt; (a, b) { a == b }

def binary_cmp (a, b, test_func: gt)
  test_func.(a, b)
end
</code></pre>

<p>But this won't work, because in <code>binary_cmp</code> cannot see the outside: <code>gt</code> .</p>

<p>How should I do to accomplish this? Is it possible? Or there is a common practice to do it? Thank you very much.</p>

<p><strong>EDIT:</strong></p>

<p>The reason why I need keyword argument is that my parameter list has 5 parameters and maybe the user only need the default test function (say <code>lt</code>), or maybe someone wanna use (<code>gt</code>) as default.</p>
","2988","","<p>This has absolutely nothing to do with functions or keyword arguments or macros. <code>gt</code> is a local variable. Local variables are local to the scope they are defined in, in this case the script body. If you want a global variable, you need to use a global variable:</p>

<pre><code>$gt    = -&gt; (a, b) { a &gt; b }
$lt    = -&gt; (a, b) { a &lt; b }
$equal = -&gt; (a, b) { a == b }

def binary_cmp (a, b, test_func: $gt)
  test_func.(a, b)
end
</code></pre>

<p>Alternatively, you can use a nested scope. The only thing in Ruby that creates a nested scope is a block, so you need to use a block:</p>

<pre><code>gt    = -&gt; (a, b) { a &gt; b }
lt    = -&gt; (a, b) { a &lt; b }
equal = -&gt; (a, b) { a == b }

define_method(:binary_cmp) do |a, b, test_func: gt|
  test_func.(a, b)
end
</code></pre>
"
"<p>Suppose I want to write a method in ruby whose last line is a method call but I do not want to return its return value.  Is there a more elegant way to accomplish this other than adding a <code>nil</code> after the call?</p>

<pre><code>def f(param)
    # some extra logic with param
    g(param) # I don't want to return the return of g
end
</code></pre>
","2988","","<p>No, there is no other way than to either explicitly return <code>nil</code> or evaluate some <em>other</em> expression which implicitly evaluates to <code>nil</code> (e.g. <code>()</code>).</p>

<p>If you want to add some kind of semantic marker that shows that you explicitly want to ignore the return value, you could invent some convention for that, e.g.:</p>

<pre><code>def f(param)
  # some extra logic with param
  g(param) # I don't want to return the return of g

  ()
end
</code></pre>

<p>or </p>

<pre><code>def f(param)
  # some extra logic with param
  g(param) # I don't want to return the return of g

  _=_
end
</code></pre>

<p>which will make those cases easily <code>grep</code>able but probably won't aid much in understanding.</p>

<p>This is a design choice of Ruby which it shares with many other expression-based languages: the value of a block/subroutine/procedure/function/method is the value of the last expression evaluated inside the block. That's how it works in Lisp, for example.</p>

<p>Note that there are other choices as well. E.g. in Smalltalk, the return value of a method must be explicitly returned using the <code>↑</code> operator, otherwise the return value is <code>nil</code>. In E, which is heavily focused on security, this is even a conscious design choice: automatically returning the value of the last expression is considered a potential information leak.</p>
"
"<p>I am writing a TFIDF program - all of which should be okay, but I'm having a small (or large..) problem with the hashes working as intended. </p>

<p>To keep this short, the code at hand is:</p>

<pre><code>#Word matrix is an array that contains hashes (obviously)
#i've done some stuff before this and these are working as expected
puts word_matrix[3][:yahoo] # =&gt; 2
puts word_matrix[100][:yahoo] # =&gt; 0
puts $total_words_hash[:yahoo] #=&gt; 0 

#Essentially, this block is taking a hash of all the words (values = 0) and trying
#to run through them adding the only the values of the other hash to the temporary
#and then setting the temp to the old hash position (so that there are 0 values
#and the values occurring in that document.. yet, it assigns the same values to
#ALL of the hashes of word_matrix[]

#now we run this block and everything breaks down for some reason..
for i in 0...word_matrix.size
  tmp_complete_words_hash = $total_words_hash #all values should be zero...
  word_matrix[i].each do |key,val| #for each key in the hash we do this..
    tmp_complete_words_hash[key] = val
  end
  word_matrix[i] = tmp_complete_words_hash
end
puts word_matrix[3][:yahoo] # =&gt; 2
puts word_matrix[100][:yahoo] # =&gt; 2 -- THIS SHOULD BE 0 Still...
</code></pre>

<p>Could anyone shed any light as to why this is assigning the same values to ALL the hashes of the array? It is as if <code>tmp_complete_words_hash</code> is not being reset everytime.</p>
","2988","","<blockquote>
  <p>why this is assigning the same values to ALL the hashes of the array? </p>
</blockquote>

<p>There is only one hash. You are assigning the same hash (the one pointed to by <code>$total_words_hash</code>) to every element in the array:</p>

<pre><code>tmp_complete_words_hash = $total_words_hash
</code></pre>

<p>Here, you make <code>tmp_complete_words_hash</code> point to the same object as <code>$total_words_hash</code></p>

<pre><code>word_matrix[i] = tmp_complete_words_hash
</code></pre>

<p>And here you assign that hash to every element of the array.</p>
"
"<p>I saw this line of code.</p>

<pre><code>class ClassName &lt; ::TestUnit::Test::Etc
</code></pre>

<p>What does it mean when the nested-constant marker follows the inheritance symbol, like so: <code>&lt; ::SuperClass</code>?</p>

<p>Also, is there a technical name for the <code>::</code> symbol? </p>
","2988","","<p><code>::</code> is the scope resolution operator. It means ""look up the following constant name inside this module"". If you omit the module, it is assumed to be <code>Object</code>. So, <code>::Foo</code> is basically the same as <code>Object::Foo</code> except of course that the enclosing module may define its <em>own</em> <code>Object</code> constant, in which case the second form would look up <code>Foo</code> inside <em>that</em> <code>Object</code> instead of the one you expect it to.</p>

<p>Note that <code>::</code> can <em>also</em> be used as the message sending operator, i.e. the same way as <code>.</code>: <code>foo::bar</code> is the same as <code>foo.bar</code>. This usage is <em>highly</em> discouraged, though.</p>
"
"<p>Is the scope in Ruby similar or the same to the scope in Javascript i.e. functional scope (a new scope is only created when a function is created) or block scope? If they are different, what are some of the major differences?</p>
","2988","","<p>The complete (I think) list is:</p>

<ul>
<li>scripts, </li>
<li>module definitions, </li>
<li>class definitions and </li>
<li>method definitions </li>
</ul>

<p>create <em>new</em> scopes, </p>

<ul>
<li>blocks and </li>
<li>stabby lambda literals </li>
</ul>

<p>create <em>nested</em> scopes (and are the <em>only</em> thing that creates nested scopes).</p>

<p>""Block"" here means ""the special syntactic construct that allows you to pass a single anonymous procedure as the last argument to any method""; it does <em>not</em> mean ""the parts of an <code>if</code> expression"" (or similar).</p>
"
"<p>I'd like to use the <a href=""https://github.com/stripe/stripe-ruby"" rel=""nofollow"">ruby Stripe library</a> in a Rails app. It uses the module <code>Stripe</code> as its namespace.</p>

<p>I want to use <code>Stripe</code> as the namespace for my ActiveRecord models, and rename the library module to something like StripeApi, so that e.g. <code>StripeApi::Charge</code> refers to the Stripe library, but <code>Stripe::Charge</code> refers to my <code>Stripe</code>-namespaced ActiveRecord model (so that e.g. <code>Stripe::Charge.create(...)</code> creates a database record, rather than just making API calls).</p>

<p>Is there a good way to do this?</p>

<p>(Sure, I could rename my namespace, or try to use differently named models, but I find that kinda ugly.)</p>
","2988","","<p>There is no such thing as ""namespace"" in Ruby. It's just a variable (well, constant):</p>

<pre><code>StripeApi = Stripe
</code></pre>

<p>Boom. You're done.</p>

<p>Make sure to set <code>Stripe</code> to a new module, so that you don't accidentally reopen the module when you think you are creating a new one:</p>

<pre><code>Stripe = Module.new
</code></pre>

<p>Now you can do</p>

<pre><code>class Stripe::Charge; end
</code></pre>
"
"<p>I have html like below and I want to get the element by ""sku-code""(there is a hyphen in it)</p>

<pre><code>&lt;div class=""leavemessagebox"" style=""position: relative;"" sku-code=""m_showcase""&gt;
</code></pre>

<p>when I used</p>

<pre><code>browser.div(:sku-code=&gt;'m_showcase')
</code></pre>

<p>ruby reported an error</p>

<pre><code>ERROR:undefined local variable or method `code' for #&lt;AUT::WebClient:0x2c59650&gt;
</code></pre>

<p>It sames ruby can't recognize ""sku-code"" as a name, anyone can give me any suggestion about how to get the element by ""sku-code""? thanks.
Sorry for not explain myself clearly. there are many elements that have sku-code selector and I want to collect them all in a list, so the class name and tag name isn't stable. how can i do that </p>
","2988","","<p><code>:sku-code</code> is not a valid symbol literal. It <em>is</em> however valid Ruby code, it is parsed as:</p>

<pre><code>:sku - code
</code></pre>

<p>So, you are trying to call a method named <code>code</code> and subtracting its return value from the symbol <code>:sku</code>, which obviously doesn't make sense.</p>

<p>But you can quote the symbol literal, of course:</p>

<pre><code>:'sku-code'
</code></pre>
"
"<p>When attempting to add my own behavior to the <code>Object</code> class, I get undesired effects that don't occur when mixing the module into a user-defined class.</p>

<pre><code>module Entity
  def some_instance_method
    puts 'foo'
  end

  def self.secret_class_method
    puts 'secret'
  end

  module ClassMethods
    def some_class_method
      puts 'bar'
    end
  end

  def self.included( other_mod )
    other_mod.extend( ClassMethods )
  end
end
</code></pre>

<p>Now, I create class <code>Bob</code> such that it includes <code>Entity</code>.</p>

<pre><code>class Bob; include Entity; end;
</code></pre>

<p>This yields the desired and expected output:</p>

<pre><code>Bob.secret_class_method       #=&gt; NoMethodError
Bob.some_instance_method      #=&gt; NoMethodError
Bob.some_class_method         #=&gt; bar
Bob.new.secret_class_method   #=&gt; NoMethodError
Bob.new.some_instance_method  #=&gt; foo
Bob.new.some_class_method     #=&gt; NoMethodError
</code></pre>

<p>But if instead of defining class <code>Bob</code> I were to open up class <code>Object</code> and include <code>Entity</code> like so:</p>

<pre><code>class Object; include Entity; end
</code></pre>

<p>Then the output I see is this:</p>

<pre><code>Object.secret_class_method        #=&gt; NoMethodError
Object.some_instance_method       #=&gt; foo
Object.some_class_method          #=&gt; bar
Object.new.secret_class_method    #=&gt; NoMethodError
Object.new.some_instance_method   #=&gt; foo
Object.new.some_class_method      #=&gt; NoMethodError
</code></pre>

<p>If I then define class <code>Bob</code>, it behaves in the same way: <code>some_instance_method</code> can be called on class <code>Bob</code>. It seems as though something about the <code>Object</code> class itself is messing with the behavior of this pattern, or else I'm just doing something wrong here. Can someone please explain this odd behavior? I don't want all my <code>Object</code>s to inherit instance methods as singleton methods as well!</p>
","2988","","<p><code>Bob</code> ia an object (more precisely: <code>Bob</code> is an instance of <code>Class</code>, which is a subclass of <code>Module</code> which is a subclass of <code>Object</code>, which is a subclass of <code>Entity</code>), therefore it has <code>Entity</code>'s methods. That's just how inheritance works.</p>
"
"<p>I found this interesting answer :</p>

<p><a href=""http://stackoverflow.com/a/2348854/169277"">http://stackoverflow.com/a/2348854/169277</a></p>

<p>This is ok when you're trying to set instance variables it works really great.</p>

<p>Is there a way to apply the same logic or better one to create generic constructor like :</p>

<pre class=""lang-ruby prettyprint-override""><code>def initialize(obj)
  obj.each do |k,v|
   #find the setter for each k and set the value v to and return newly created object
  end
end
</code></pre>

<p>If I had object <code>TestObject</code>:</p>

<pre><code>class TestObject
attr_accessor :name, :surname, :sex
end
</code></pre>

<p>I was thinking to create it something like this:</p>

<pre><code>TestObject.new({:name =&gt; 'Joe', :surname =&gt; 'Satriani'})
</code></pre>

<p>How would one achieve this?</p>

<p>So doing this would be a shorthand of :</p>

<pre><code>t = TestObject.new
t.name = 'Joe'
t.surname = 'Satriani'
</code></pre>
","2988","","<p>I think it would be better to use keyword arguments for this. After all, the <code>Hash</code> keys are guaranteed to be valid Ruby identifier <code>Symbol</code>s since they need to match up with method names. You don't need the capability to pass in arbitrary Ruby objects as keys of the <code>Hash</code>.</p>

<pre><code>def initialize(**attrs)
  attrs.each do |attr, value| send(:""#{attr}="", value) end
end

TestObject.new(name: 'Joe', surname: 'Satriani')
</code></pre>
"
"<p>I'm extending <code>BasicObject</code>, and I'd like to implement <code>Object#class</code> method. I'm not sure how to do this other than hard-coding the return value like this:</p>

<pre><code>class MyObject &lt; BasicObject
  def class
    ::Kernel::eval ""::MyObject""
  end
end

MyObject.new.class
#=&gt; MyObject
</code></pre>

<p>With this solution, any class that inherits from <code>MyObject</code> would have to overwrite this method in order to keep it accurate. Is there a better way?</p>
","2988","","<p>It's not possible to implement this method in Ruby. You need access to three things that you cannot access from Ruby:</p>

<ul>
<li>the class pointer</li>
<li>the superclass pointer</li>
<li>the virtual class flag (include classes and singleton classes are virtual classes)</li>
</ul>

<p><code>Object#class</code> works something like this:</p>

<pre><code>class Object
  def class
    c = self.__class__
    c = c.__superclass__ while c.__virtual__?
    c
  end
end
</code></pre>

<p>There's also <code>Class#superclass</code>:</p>

<pre><code>class Class
  def superclass
    c = self.__superclass__
    c = c.__superclass__ while c.__virtual__?
    c
  end
end
</code></pre>

<p>And since there is no way to get the class pointer (remember: the <code>class</code> method does <em>not</em> return it) and there is no way to get the superclass pointer (remember: the <code>superclass</code> method doesn't return it either) and there is no way for you to check whether a class is virtual, it is impossible to write this method in Ruby.</p>

<p>You need some sort of privileged access to the runtime internals to do that.</p>
"
"<p>The quiz problem:</p>

<blockquote>
  <p>Which of the following statements about classes in Ruby are true?</p>
  
  <ol>
  <li><code>Array</code> is an instance of <code>Class</code>.</li>
  <li>When <code>self</code> is used within the definition of an instance method, it refers to the current instance of the class.</li>
  <li>Ruby supports multiple inheritance.</li>
  <li>Public methods of a class cannot be redefined after an instance of that class is instantiated.</li>
  </ol>
</blockquote>

<p>More than one answer could be correct.</p>

<p>I know that (3) is incorrect because Ruby does not support multiple inheritance. I chose (1) but got the question wrong. Are other statements about the classes in Ruby also true?</p>
","2988","","<p>1, 2, and 3 are true. <code>Array</code> is an instance of <code>Class</code>, <code>self</code> is always the receiver, and Ruby does support multiple mixin inheritance. 4 is false, methods can be added, removed, and modified at any point in time.</p>
"
"<p>Does java_import always execute before initialize in JRuby?</p>

<p>I need the following code to execute</p>

<pre><code>def initialize vlc_path
    @vlc_path = vlc_path || get_vlc_path
    NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName,""/Applications/VLC .app/Contents/MacOS/lib"")
end
</code></pre>

<p>before I can use:</p>

<pre><code>java_import 'uk.co.caprica.vlcj.binding.LibVlc'
</code></pre>

<p>The java_import always executes first and fails. How to go about it?</p>
","2988","","<p>Methods get called when they get … well … called. If you call <code>initialize</code> before you call <code>java_import</code> it will execute first, if you call it after <code>java_import</code> it will execute after <code>java_import</code>.</p>

<p>If you want to call <code>initialize</code> before you call <code>java_import</code>, you need to call <code>initialize</code> before you call <code>java_import</code>.</p>
"
"<p>Can I yield a block inside a Proc? Consider this example:</p>

<pre><code>a = Proc.new do
  yield
end

a.call do
  puts ""x""
end
</code></pre>

<p>What I'm trying to achieve is to print <code>x</code>, but interpreting this with ruby 2.0 raises <code>LocalJumpError: no block given (yield)</code>. </p>
","2988","","<p>@Rebitzele has explained why your code doesn't work: the <code>yield</code> keyword is shorthand notation for calling an anonymous block that has been passed to a method, and in this case there <em>isn't</em> even a method.</p>

<p>But you can of course give the block a name and then call it like you would call any other callable object:</p>

<pre><code>a = -&gt;&amp;block { block.() }

a.() do puts 'x' end
# x
</code></pre>
"
"<p>I wonder, is it possible to do something similar in Ruby to what I can do in Scala or other languages:</p>

<pre><code>someCollection.foreach(x =&gt; println(x)) // a full version
someCollection.foreach(println) // a short version
</code></pre>

<p>In Ruby I can do:</p>

<pre><code>some_array.each { |x| puts x }
</code></pre>

<p>So how can I do this?</p>

<pre><code>some_array.each { puts }
</code></pre>

<p><strong>UPDATE</strong>:</p>

<p>I'm not talking about puts in particular, it just picked it for example. There might be <code>some_other_method</code> <strong>which takes one parameter</strong>.</p>

<pre><code>some_array.map { some_other_method }
some_array.map(some_other_method) # ???

def some_other_method a
   # ... doing something with a
end
</code></pre>
","2988","","<p>If you look up the rules for implicit η-expansion in the SLS (§6.26.5), it should be immediately obvious that it relies crucially on static type information and thus cannot possibly work in Ruby.</p>

<p>You <em>can</em>, however, <em>explicitly</em> obtain a <code>Method</code> object via reflection. <code>Method</code> objects respond to <code>to_proc</code> and like any object that responds to <code>to_proc</code> can thus be passed as if they were blocks using the unary prefix <code>&amp;</code> operator:</p>

<pre><code>some_array.each(&amp;method(:puts))
</code></pre>
"
"<p>I wont write some script in Ruby on Linux server. I need statistic from server and I'm a beginner in Ruby.</p>

<p>I have problem with Linux commands, because if I use exec to use Linux command, my program is fallen without error. </p>

<pre><code>disks = [""sda"", ""sdb""]
</code></pre>

<p>Code:</p>

<pre><code>disks.each do |disk|
  puts ""disk test start""
  exec ""smartctl -a /dev/#{disk} &gt; /tmp/sestavy/#{disk}""
  puts ""disk test end""
end
</code></pre>

<p>Output:</p>

<pre><code>[root@banan sestavy]# ruby test.rb
disk test start
[root@banan sestavy]#
</code></pre>

<p>Thanks
Honza</p>
","2988","","<p>That's just what <code>exec</code> does: it replaces the currently running program with a new one. This is not specific to Ruby, it works the same way in the shell, in C, in pretty much any other environment.</p>
"
"<p>After implementing <a href=""http://en.wikipedia.org/wiki/Null_Object_pattern#Ruby"" rel=""nofollow"">Null Object Pattern</a> in a Rails application (also described in RubyTapas episode 112) I refactored out some code, but there's a syntax construct that seems to not work anymore.</p>

<p>I used to write statements like <code>current_user || redirect_out</code>, where, if current_user was set it would return it, and if it was <code>nil</code> it redirects out, but now <code>current_user</code> may be an instance of <code>Null::User</code> and thus ""truthy"", and that snippet would never redirect out.</p>

<p>I tried defining the <code>||</code> operator, but didn't work. Is there any way this syntax can still be used with null (but ""truthy"") objects?</p>
","2988","","<p>There are exactly two objects which are falsy in Ruby: <code>nil</code> and <code>false</code>. Period.</p>

<p>Unfortunately, it is not possible to define your own falsy objects, nor is it possible to override the Boolean operators (except for <code>not</code>/<code>!</code>). This is a shame, really: it is one of the basic pillars of OO that an object can simulate another object, but in Ruby it is not possible to simulate <code>false</code> or <code>nil</code>, therefore breaking one of the fundamental properties of OO in a language with an otherwise pretty good OO model.</p>
"
"<p>The methods in <code>Math</code> can be invoked like a class method:</p>

<pre><code>Math.cos(0)
</code></pre>

<p>but also can be <code>include</code>-d like instance method:</p>

<pre><code>include Math
cos(0)
</code></pre>

<p>In contrast, the following modules can be invoked in one way but not the other:</p>

<pre><code>module Foo
  def bar
  end
end

Foo.bar() # NoMethodError for this call
include Foo
bar()     # but this call is fine
</code></pre>

<p>Singleton method:</p>

<pre><code>module Foo
  def self.bar
  end
end

Foo.bar() # this call is fine
include Foo
bar()     # but not this one
</code></pre>

<p>Any idea how to write a module like <code>Math</code>?</p>
","2988","","<p>That's what <a href=""http://ruby-doc.org/core-2.0/Module.html#method-i-module_function"" rel=""nofollow""><code>Module#module_function</code></a> is for.</p>
"
"<p>In CoffeeScript:</p>

<pre><code>f = -&gt;
  v = 5
  g = -&gt;
    v
  g()

f() # returns 5 as expected
</code></pre>

<p>In Ruby:</p>

<pre><code>def f
  v = 5
  def g
    v # undefined local variable or method `v' for main:Object (NameError)
  end
  g
end
f
</code></pre>

<p>Okay, so apparently JavaScript functions are set up to capture variables in the scope they are created in, but Ruby's methods are not. Is there a way to make Ruby methods behave like JavaScript functions in this regard?</p>
","2988","","<p>Ruby has script scope, module/class/method definition scope and block scope. Only blocks create nested scopes. So, you need to use a block to define your method. Thankfully, there is a method for defining methods that takes a block:</p>

<pre><code>def f
  v = 5
  define_method :g do
    v
  end
  g
end
f
# =&gt; 5
</code></pre>

<p>However, note that this does <em>not</em> do what you think it does (and neither does your original code). It does <em>not</em> define a method <code>g</code> nested in method <code>f</code>. Ruby doesn't have nested methods. Methods always belong to modules (classes are modules), they cannot belong to methods.</p>

<p>What this does is define a method <code>f</code>, which when you run it defines a method <code>g</code> and then calls that method.</p>

<p>Observe:</p>

<pre><code>methods.include?(:g)
# =&gt; true
</code></pre>

<p>You have now defined a new top-level method (actually a private instance method of <code>Object</code>) called <code>g</code>, and you will define it over and over and over again, everytime <code>f</code> gets called.</p>

<p>What you probably want is a lambda:</p>

<pre><code>def f
  v = 5
  g = -&gt; { v }
  g.()
end
f
# =&gt; 5
</code></pre>

<p>In a comment to another answer you wrote:</p>

<blockquote>
  <p>Okay, so I'm messing around with lambdas, and I noticed that anything I do to <code>v</code> inside of <code>g</code> is not reflected in <code>v</code> once <code>g</code> returns. Is there a way I can make my changes to <code>v</code> stick?</p>
</blockquote>

<pre><code>def f
  v = 5
  g = -&gt; { v = 'Hello' }
  g.()
  v
end
f
# =&gt; 'Hello'
</code></pre>

<p>As you can see, the change to <code>v</code> <em>does</em> ""stick"" after <code>g</code> returns.</p>
"
"<p>In short: I want to define the algorithm in the superclass which inherits into all subclasses, but I want to define the data (on which the algorithm operates) in the subclasses as instance variables, which come into being when I call the ""new"" method of the given classes. What is the standard way for doing this in Ruby?</p>

<p>My solution is (but I am not exactly sure this is the right way):</p>

<pre><code>class A
   attr_accessor :var
   def initialize
     @var=nil #I dont know the actual value, it will be defined only in the more specific subclasses.
   end

   def process_data
      puts @var #simply puts it out
   end
end

#in my program all further classes are inherited form class A, the processing facility is inherited, only the data varies.

class B &lt; A
   attr_accessor :var
   def initialize
     @var=10 #specific value for class B which is always 10, no need for example b=B.new(20)
   end
end

class C &lt; A
   attr_accessor :var
   def initialize
     @var=20 #specific value for class C which is always 20, no need for example c=C.new(20)
   end
end

b=B.new
b.process_data #needs to print 10

c=C.new
c.process_data #needs to print 20
</code></pre>
","2988","","<p>What you have works. There's just some unneeded stuff in there:</p>

<p>Instance variables evaluate to <code>nil</code> if they are uninitialized and they spring into existence as soon as they are used, so your <code>A#initialize</code> method is unnecessary.</p>

<p>You override the <code>A#var</code> and <code>A#var=</code> methods in <code>B</code> and <code>C</code> with methods that do the exact same thing. There is no need for that, just get rid of the calls to <code>attr_accessor</code> in the definition of <code>B</code> and <code>C</code>.</p>

<p>You create <code>var</code> and <code>var=</code> accessor methods but you never use them. Either get rid of the call to <code>attr_accessor</code> or (preferably) use the accessor methods, i.e. use <code>self.var =</code> in <code>initialize</code> and <code>puts var</code> in <code>process_data</code>.</p>

<pre><code>class A
  attr_accessor :var

  def process_data
    puts var #simply puts it out
  end
end

#in my program all further classes are inherited form class A, the processing facility is inherited, only the data varies.

class B &lt; A
  def initialize
    self.var = 10 #specific value for class B which is always 10, no need for example b=B.new(20)
  end
end

class C &lt; A
  def initialize
    self.var = 20 #specific value for class C which is always 20, no need for example c=C.new(20)
  end
end

b = B.new
b.process_data #needs to print 10

c = C.new
c.process_data #needs to print 20
</code></pre>

<p>[Note: your coding style was also off. Indentation is 2 spaces in Ruby, not 3.]</p>

<p>However, if the value of <code>@var</code> is always the same for all instances of <code>B</code>, then why do you need multiple instances of <code>B</code>?</p>

<p>Why not something like this:</p>

<pre><code>class A
  attr_accessor :var

  def initialize(val)
    self.var = val
  end

  def process_data
    puts var #simply puts it out
  end
end

b = A.new(10)
b.process_data #needs to print 10

c = A.new(20)
c.process_data #needs to print 20
</code></pre>
"
"<p>is there any inbuilt function in the Ruby <code>String</code> class that can give me all the prefixes of a string in Ruby. Something like:</p>

<pre><code>""ruby"".all_prefixes =&gt; [""ruby"", ""rub"", ""ru"", ""r""]
</code></pre>

<p>Currently I have made a custom function for this:</p>

<pre><code>def all_prefixes search_string
  dup_string = search_string.dup
  return_list = []
  while(dup_string.length != 0)
    return_list &lt;&lt; dup_string.dup
    dup_string.chop!
  end 
 return_list 
end
</code></pre>

<p>But I am looking for something more rubylike, less code and something magical.
Note: of course it goes without saying <code>original_string</code> should remain as it is.</p>
","2988","","<pre><code>def all_prefixes(str)
  str.chars.inject([[], '']) {|(res, memo), c| [res &lt;&lt; memo += c, memo] }.first
end
</code></pre>
"
"<p>is there any inbuilt function in the Ruby <code>String</code> class that can give me all the prefixes of a string in Ruby. Something like:</p>

<pre><code>""ruby"".all_prefixes =&gt; [""ruby"", ""rub"", ""ru"", ""r""]
</code></pre>

<p>Currently I have made a custom function for this:</p>

<pre><code>def all_prefixes search_string
  dup_string = search_string.dup
  return_list = []
  while(dup_string.length != 0)
    return_list &lt;&lt; dup_string.dup
    dup_string.chop!
  end 
 return_list 
end
</code></pre>

<p>But I am looking for something more rubylike, less code and something magical.
Note: of course it goes without saying <code>original_string</code> should remain as it is.</p>
","2988","","<pre><code>def all_prefixes(str)
  acc = ''
  str.chars.map {|c| acc += c }
end
</code></pre>
"
"<p>Why does the second one not return the same value as the first?</p>

<pre><code>puts (3..5).map{|n| n**3}.inject{|sum,n| sum + n}
puts (3..5).inject{|sum,n| sum + n**3}
</code></pre>

<p>216
192</p>
","2988","","<p>Because in the first case <a href=""http://ruby-doc.org/core-2.0/Enumerable.html#method-i-inject"" rel=""nofollow"">the starting value of the accumulator</a> is <code>27</code>, in the second case it is <code>3</code>.</p>

<p>If you use <code>0</code> as an explicit starting value, both will evaluate to the same number:</p>

<pre><code>(3..5).map {|n| n**3 }.inject(0) {|sum,n| sum + n }
# =&gt; 216
# or just
(3..5).map {|n| n**3 }.inject(0, :+)

(3..5).inject(0) {|sum,n| sum + n**3 }
# =&gt; 216
</code></pre>
"
"<p>I came across this code in Rails app using mongodb:</p>

<pre><code>  """"""
 Folder format:
{
  name: &lt;folder name&gt;,
  stocks: [
    {
      name: &lt;stock name&gt;,
      id: &lt;stock id&gt;,
      qty: &lt;stock quantity&gt;
    }
  ]
}
 """"""

  def format_with_folders(stocks)
   fmap = stock_folder_map
   res = stocks.group_by {|s| fmap[s[""id""]] }.collect {|fname, ss|
    {
     ""name"" =&gt; fname,
     ""stocks"" =&gt; ss
    }
  }
  new(folders: res)
 end


   def stock_folder_map
     res = {}
     folders.each { |ff|
       ff.stocks.each { |s|
         res[s[""id""]] = ff[""name""]
       }
     }
    return res
   end
 end
</code></pre>

<p>The doubts are:
1) What does the code inside triple quote signify? Is is a commented code?
2)What would be the right format to use this code inside a ruby script?</p>
","2988","","<p>In Ruby, if you have multiple string literals next to each other, they get concatenated at parse time:</p>

<pre><code>'foo' ""bar""
# =&gt; 'foobar'
</code></pre>

<p>This is a feature inspired by C.</p>

<p>So, what you have there is three string literals next to each other. The first string literal is the empty string:</p>

<pre><code>""""
</code></pre>

<p>Then comes another string literal:</p>

<pre><code>""
Folder format:
 {
   name: &lt;folder name&gt;,
    stocks: [
     {
      name: &lt;stock name&gt;,
      id: &lt;stock id&gt;,
      qty: &lt;stock quantity&gt;
     }
            ]
 }
""
</code></pre>

<p>And lastly, there is a third string literal which is again empty:</p>

<pre><code>""""
</code></pre>

<p>At parse time, this will be concatenated into a single string literal:</p>

<pre><code>""
Folder format:
 {
   name: &lt;folder name&gt;,
    stocks: [
     {
      name: &lt;stock name&gt;,
      id: &lt;stock id&gt;,
      qty: &lt;stock quantity&gt;
     }
            ]
 }
""
</code></pre>

<p>And since this string object isn't referenced by anything, isn't assigned to any variable, isn't returned from any method or block, it will just get immediately garbage collected.</p>

<p>In other words: the entire thing is a no-op, it's dead code. A sufficiently smart Ruby compiler (such as JRuby or Rubinius) will probably completely eliminate it, compile it into nothing.</p>
"
"<p>I'd like to write something like that :</p>

<pre><code>class Test
  def initialize(a,b,c)
  end

  def print()
    puts @a
    puts @b
    puts @c
  end
end

Test.new({a=&gt;1, b=&gt;2, c=&gt;3}).print()
=&gt;1
=&gt;2
=&gt;3
</code></pre>

<p>Is there a way to instanciate an object and map its parameters with an hash table?</p>

<p>Thanks in advance.</p>
","2988","","<p>In a <em>current</em> version of Ruby, you can use keyword arguments:</p>

<pre><code>def initialize(a: nil, b: nil, c: nil)
  @a, @b, @c = a, b, c
end
</code></pre>

<p>Note that currently, keyword parameters always have a default value and are thus always optional. If you want to make keyword arguments mandatory, you can use the simple trick that the default value can be <em>any</em> Ruby expression:</p>

<pre><code>def mand(name) raise ArgumentError, ""#{name} is mandatory!"" end

def initialize(a: mand 'a', b: mand 'b', c: mand 'c')
  @a, @b, @c = a, b, c
end
</code></pre>

<p>In the next version of Ruby it is possible to have mandatory keyword arguments by just omitting the default value:</p>

<pre><code>def initialize(a:, b:, c:)
  @a, @b, @c = a, b, c
end
</code></pre>

<p>See here:</p>

<pre><code>class Test
  def initialize(a:, b:, c:)
    @a, @b, @c = a, b, c
  end

  def to_s
    instance_variables.map {|v| ""#{v} = #{instance_variable_get(v)}"" }.join(""\n"")
  end
end

puts Test.new(a: 1, b: 2, c: 3)
# @a = 1
# @b = 2
# @c = 3
</code></pre>
"
"<p>In the <a href=""http://www.mozart-oz.org/documentation/tutorial/node6.html"" rel=""nofollow"">chapter about function in the Oz tutorial</a>, it says that:</p>

<blockquote>
  <p>similar to lazy functional languages
  Oz allows certain forms of
  tail-recursion optimizations that are
  not found in certain strict functional
  languages including Standard ML,
  Scheme, and the concurrent functional
  language Erlang. However, standard
  function definitions in Oz are not
  lazy.</p>
</blockquote>

<p>It then goes on to show the following function which is tail-recursive in <a href=""http://en.wikipedia.org/wiki/Oz_%28programming_language%29"" rel=""nofollow"">Oz</a>:</p>

<pre><code>fun {Map Xs F}
   case Xs
   of nil then nil
   [] X|Xr then {F X}|{Map Xr F}
   end 
end 
</code></pre>

<p>What this does is, it maps the empty list to the empty list and non-empty list, to the result of applying the function <code>F</code> to its head and then prepending that to the result of calling <code>Map</code> on the tail. In other languages this would not be tail recursive, because the last operation is the prepend, not the recursive call to <code>Map</code>.</p>

<p>So my question is: If ""standard function definitions in Oz are not lazy"", what does Oz do that languages like Scheme or Erlang can't (or won't?) to be able to perform tail-recursion optimization for this function? And exactly when is a function tail-recursive in Oz?</p>
","2988","","<p>This is called <a href=""https://EN.Wikipedia.Org/wiki/Tail_call#Tail_recursion_modulo_cons"" rel=""nofollow""><em>Tail Recursion Modulo <code>Cons</code></em></a>. Basically, <em>prepending</em> to the list directly <em>after</em> the recursive call is the same as <em>appending</em> to the list directly <em>before</em> the recursive call (and thus building the list as a ""side-effect"" of the purely functional ""loop""). This is a generalization of tail recursion that works not just with <code>cons</code> lists but any data constructor with constant operations.</p>

<p>It was first described (but not named) as a LISP compilation technique in 1974 by Daniel P. Friedman and David S. Wise in <a href=""http://www.cs.indiana.edu/cgi-bin/techreports/TRNNN.cgi?trnum=TR19"" rel=""nofollow""><em>Technical Report TR19: Unwinding Structured Recursions into Iterations</em></a> and it was formally named and introduced by David H. D. Warren in 1980 in the context of writing the first-ever Prolog compiler.</p>

<p>The interesting thing about Oz, though, is that TRMC is neither a language feature nor an explicit compiler optimization, it's just a side-effect of the language's execution semantics. Specifically, the fact that Oz is a declarative concurrent constraint language, which means that every variable is a dataflow variable (or ""everything is a promise"", including every storage location). Since everything is a promise, we can model returning from a function as <em>first</em> setting up the return value as a promise, and then <em>later on</em> fulfilling it.</p>

<p>Peter van Roy, co-author of the book <a href=""http://WWW.Info.UCL.Ac.Be/~pvr/book"" rel=""nofollow""><em>Concepts, Techniques, and Models of Computer Programming</em> by Peter Van Roy and Seif Haridi</a>, also one of the designers of Oz, and one of its implementators, explains how exactly TRMC works in a comment thread on Lambda the Ultimate: <a href=""http://lambda-the-ultimate.org/node/2273#comment-40235"" rel=""nofollow""><em>Tail-recursive map and declarative agents</em></a>:</p>

<blockquote>
  <p>The above example of bad Scheme code turns into good tail-recursive Oz code when translated directly into Oz syntax. This gives:</p>

<pre><code>fun {Map F Xs}
   if Xs==nil then nil
   else {F Xs.1}|{Map F Xs.2} end
end
</code></pre>
  
  <p>This is because Oz has single-assignment variables. To understand the execution, we translate this example into the Oz kernel language (I give just a partial translation for clarity):</p>

<pre><code>proc {Map F Xs Ys}
   if Xs==nil then Ys=nil
   else local Y Yr in
      Ys=Y|Yr
      {F Xs.1 Y}
      {Map F Xs.2 Yr}
   end end
end
</code></pre>
  
  <p>That is, <code>Map</code> is tail-recursive because <code>Yr</code> is initially unbound. This is not just a clever trick; it is profound because it allows declarative concurrency and declarative multi-agent systems.</p>
</blockquote>
"
"<p>As far as I can tell, there are essentially three different kinds of closure in Ruby; methods, procs and lambdas. I know that there are differences between them, but could we not just get away having one type that accommodates all possible use-cases?  </p>

<p>Methods can already be passed around like procs and lambdas by calling <code>self.method(method_name)</code>, and the only significant differences that I'm aware of between procs and lambdas is that lambdas check arity and procs do crazy things when you try to use <code>return</code>. So couldn't we just merge them all into one and be done with it?</p>
","2988","","<blockquote>
  <p>As far as I can tell, there are essentially three different kinds of closure in Ruby; methods, procs and lambdas.</p>
</blockquote>

<p>No, there are two: methods aren't closures, only procs and lambdas are. (Or at least <em>can</em> be, most of them aren't.)</p>

<p>There are two ways of packaging up a piece of executable code for reuse in Ruby: methods and blocks. Strictly speaking, blocks aren't necessary, you can get by with just methods. But blocks are meant to be extremely light-weight, conceptually, semantically and syntactically. That's not true for methods.</p>

<p>Because they are meant to be light-weight and easy to use, blocks behave different from methods in some respects, e.g. how arguments are bound to parameters. Block parameters are bound more like the left-hand side of an assignment than like method parameters.</p>

<p>Examples:</p>

<p>Passing a single array to multiple parameters:</p>

<pre><code>def foo(a, b) end
foo([1, 2, 3]) # ArgumentError: wrong number of arguments (1 for 2)

a, b = [1, 2, 3]
# a == 1; b == 2

[[1, 2, 3]].each {|a, b| puts ""a == #{a}; b == #{b}"" }
# a == 1; b ==2
</code></pre>

<p>Passing less arguments than parameters:</p>

<pre><code>def foo(a, b, c) end
foo(1, 2) # ArgumentError

a, b, c = 1, 2
# a == 1; b == 2; c == nil

[[1, 2]].each {|a, b, c| puts ""a == #{a}; b == #{b}; c == #{c}"" }
# a == 1; b == 2; c == 
</code></pre>

<p>Passing more arguments than parameters:</p>

<pre><code>def foo(a, b) end
foo(1, 2, 3) # ArgumentError: wrong number of arguments (3 for 2)

a, b = 1, 2, 3
# a == 1; b == 2

[[1, 2, 3]].each {|a, b| puts ""a == #{a}; b == #{b}"" }
# a == 1; b == 2
</code></pre>

<p>[By the way: none of the blocks above are closures.]</p>

<p>This allows, for example, the <code>Enumerable</code> protocol which always yields a <em>single</em> element to the block to work with <code>Hash</code>es: you just make the <em>single</em> element an <code>Array</code> of <code>[key, value]</code> and rely on the implicit array destructuring of the block:</p>

<pre><code>{one: 1, two: 2}.each {|k, v| puts ""#{key} is assigned to #{value}"" }
</code></pre>

<p>is much easier to understand than what you would have to otherwise write:</p>

<pre><code>{one: 1, two: 2}.each {|el| puts ""#{el.first} is assigned to #{el.last}"" }
</code></pre>

<p>Another difference between blocks and methods is that methods use the <code>return</code> keyword to return a value whereas blocks use the <code>next</code> keyword.</p>

<p>If you agree that it makes sense to have both methods and blocks in the language, then it is just a small step to also accept the existence of both procs and lambdas, because they behave like blocks and methods, respectively:</p>

<ul>
<li>procs <code>return</code> from the enclosing method (just like blocks) and they bind arguments exactly like blocks do</li>
<li>lambdas <code>return</code> from themselves (just like methods) and they bind arguments exactly like methods do.</li>
</ul>

<p>IOW: the proc/lambda dichotomy just mirrors the block/method dichotomy.</p>

<p>Note that there are actually quite a lot more cases to consider. For example, what does <code>self</code> mean? Does it mean</p>

<ul>
<li>whatever <code>self</code> was at the point the block was written</li>
<li>whatever <code>self</code> is at the point the block is run</li>
<li>the block itself</li>
</ul>

<p>And what about <code>return</code>? Does it mean</p>

<ul>
<li>return from the method the block is written in</li>
<li>return from the method the block is run in</li>
<li>return from the block itself?</li>
</ul>

<p>This <em>already</em> gives you <em>nine</em> possibilities, even <em>without</em> taking into account the Ruby-specific peculiarities of parameter binding.</p>

<p>Now, for reasons of encapsulation, #2 above are really bad ideas, so that reduces our choices somewhat.</p>

<p>As always, it's a matter of taste of the language designer. There are other such redundancies in Ruby as well: why do you need both instance variables and local variables? If lexical scopes were objects, then local variables would just be instance variables of the lexical scope and you wouldn't need local variables. And why do you need both instance variables and methods? One of them is enough: a getter/setter pair of methods can replace an instance variable (see Newspeak for an example of such a language) and first-class procedures assigned to instance variables can replace methods (see Self, Python, JavaScript). Why do you need both classes and modules? If you allow classes to be mixed-in, then you can get rid of modules and use classes both as classes and mixins. And why do you need mixins at all? If everything is a method call, classes automatically become mixins anyway (again, see Newspeak for an example). And of course, if you allow inheritance directly between objects you don't need classes at all (see Self, Io, Ioke, Seph, JavaScript)</p>
"
"<p>There's a nice idiom for adding to lists stored in a hash table:</p>

<pre><code>(hash[key] ||= []) &lt;&lt; new_value
</code></pre>

<p>Now, suppose I write a derivative hash class, like the ones found in Hashie, which does a deep-convert of any hash I store in it. Then what I store will not be the same object I passed to the = operator; Hash may be converted to Mash or Clash, and arrays may be copied.</p>

<p>Here's the problem. Ruby apparently returns, from the var= method, the value passed in, not the value that's stored. It doesn't matter what the var= method returns. The code below demonstrates this:</p>

<pre><code>class C
  attr_reader :foo
  def foo=(value)
    @foo = (value.is_a? Array) ? (value.clone) : value
  end
end

c=C.new
puts ""assignment: #{(c.foo ||= []) &lt;&lt; 5}""
puts ""c.foo is #{c.foo}""
puts ""assignment: #{(c.foo ||= []) &lt;&lt; 6}""
puts ""c.foo is #{c.foo}""
</code></pre>

<p>output is</p>

<pre><code>assignment: [5]
c.foo is []
assignment: [6]
c.foo is [6]
</code></pre>

<p>When I posted this as a bug to Hashie, Danielle Sucher explained what was happening and pointed out that ""foo.send :bar=, 1"" returns the value returned by the bar= method. (Hat tip for the research!) So I guess I could do:</p>

<pre><code>c=C.new
puts ""clunky assignment: #{(c.foo || c.send(:foo=, [])) &lt;&lt; 5}""
puts ""c.foo is #{c.foo}""
puts ""assignment: #{(c.foo || c.send(:foo=, [])) &lt;&lt; 6}""
puts ""c.foo is #{c.foo}""
</code></pre>

<p>which prints</p>

<pre><code>clunky assignment: [5]
c.foo is [5]
assignment: [5, 6]
c.foo is [5, 6]
</code></pre>

<p>Is there any more elegant way to do this?</p>
","2988","","<p>Assignments evaluate to the value that is being assigned. Period.</p>

<p>In some other languages, assignments are statements, so they don't evaluate to anything. Those are really the only two sensible choices. Either don't evaluate to anything, or evaluate to the value being assigned. Everything else would be too surprising.</p>

<p>Since Ruby doesn't have statements, there is really only one choice.</p>

<p>The only ""workaround"" for this is: don't use assignment.</p>
"
"<p>I'm getting familiar with ruby send method, but for some reason, I can't do something like this</p>

<pre><code>a = 4
a.send(:+=, 1)
</code></pre>

<p>For some reason this doesn't work. Then I tried something like </p>

<pre><code>a.send(:=, a.send(:+, 1))
</code></pre>

<p>But this doesn't work too. What is the proper way to fire plus equals through 'send'?</p>
","2988","","<p>You can't call a method on <code>a</code>, because <code>a</code> is not an object, it's a variable, and variables aren't objects in Ruby. You are calling a method on <code>4</code>, but <code>4</code> is not the thing you want to modify, <code>a</code> is. It's just not possible.</p>

<p>Note: it is certainly possible to define a method named <code>=</code> or <code>+=</code> and call it, but of course those methods will only exist on objects, not variables.</p>

<pre><code>class Fixnum
  define_method(:'+=') do |n| self + n end
end

a = 4

a.send(:'+=', 1)
# =&gt; 5

a
# =&gt; 4
</code></pre>
"
"<p>I'm trying to understand lambda calculus with procs and ruby. Here is some code:</p>

<pre><code>puts -&gt; x { -&gt; y {x.call(y) } }
# =&gt; #&lt;Proc:0x2a3beb0@C:/first-ruby.rb:1 (lambda)&gt;

puts -&gt; x { x + 2}.call(1)
# =&gt; 3
</code></pre>

<p>What does <code>-&gt;</code> signify in above example? Is the <code>call</code> method passing the value to the caller, so in the first example, value <code>y</code> is passed to <code>y</code> and in the second example, <code>1</code> is passed to <code>x</code>? In the second example, why is <code>1</code> evaluated to <code>x</code>?</p>
","2988","","<blockquote>
  <p>What does <code>-&gt;</code> signify in above example?</p>
</blockquote>

<p><code>-&gt;</code> is part of the literal syntax for lambdas, just like, say, <code>'</code> is part of the literal syntax for strings.</p>

<blockquote>
  <p>Is the <code>.call</code> method just passing the value from to caller,</p>
</blockquote>

<p>The <code>call</code> method is the method, which, well, calls (or executes) the lambda. The arguments to the <code>call</code> method are bound to the parameters of the lambda.</p>

<blockquote>
  <p>so in first example value <code>y</code> is passed to <code>y</code> and in second example <code>1</code> is passed to <code>x</code>.</p>
</blockquote>

<p>No, in the first example, <code>y</code> is passed to the outer lambda and bound to its <code>x</code> parameter. In the second example, <code>1</code> is passed to the lambda and bound to its <code>x</code> parameter.</p>

<blockquote>
  <p>In second example why how is <code>1</code> evaluated to <code>x</code>?</p>
</blockquote>

<p><code>1</code> does not evalute to <code>x</code>. <code>1</code> is an immediate value, and in Ruby, immediate values <em>always</em> evaluate to themselves. <code>1</code> will <em>always</em> evaluate to <code>1</code>, <em>never</em> to <code>x</code> or anything else.</p>
"
"<p>I understand that there are different situations in which Procs and lambdas should be used (lambda checks number of arguments, etc.), but do they take up different amounts of memory? If so, which one is more efficient?</p>
","2988","","<p>The Ruby Language Specification does not prescribe any particular implementation strategy for procs and lambdas, therefore any implementation is free to choose any strategy it wants, ergo any implementation may (or may not) take up completely different amounts of memory. Actually, this isn't just true for lambdas and procs, but for <em>every</em> kind of object. The Ruby Language Specification <em>only</em> prescribes the <em>behavior</em> of the objects, it <em>does not</em> prescribe any particular implementation or representation.</p>

<p>However, since there is only <em>one</em> class to represent <em>both</em> lambdas and procs, it is very likely that they take up the exact same amount of memory, regardless of how they are implemented and represented.</p>
"
"<p>i want to keep the value of a variable static during recursive calls, for example if <code>foo</code> is a function that takes <code>name</code> as a parameter, i want to save the value of <code>name</code>  from the first call to <code>foo</code> in a variable and the variable will retain the value in every recursive call to foo.</p>

<pre><code>def run_app (name, startr)
  if startr==1
    constant_var=name
  end

  some_name = modify name
  diff = compare some_name, constant_var

  # recursive call
  run_app some_name, 0
end
</code></pre>

<p>First call will be like, <code>run_app ""john"", 1</code> I want the value of constant_var to be retained during the calls. How can I achieve that?</p>
","2988","","<p>First off, there's some redundancy in your code. <code>diff</code> is assigned but never used. You can just get rid of it:</p>

<pre><code>def run_app(name, startr)
  constant_var = name if startr == 1

  some_name = modify name
  compare(some_name, constant_var)

  # recursive call
  run_app(some_name, 0)
end
</code></pre>

<p>The standard way of solving this would be to add an extra parameter for passing along that extra information:</p>

<pre><code>def run_app(name, startr, constant_var)
  some_name = modify name
  compare(some_name, constant_var)

  # recursive call
  run_app(some_name, 0, constant_var)
end
</code></pre>

<p>Then you need to call the method like this:</p>

<pre><code>run_app(tmp = 'john', 1, tmp)

# or

run_app('john', 2, nil)
</code></pre>

<p>However, this leaks a <em>ton</em> of internal implementation details out to the caller and places a heavy burden on them. For example, they need to know that the first and third argument need to be the same object. But only if they pass <code>1</code> as the second argument. If they pass something other than <code>1</code>, then they need to pass <code>nil</code> as the third argument.</p>

<p>What's to stop someone from calling </p>

<pre><code>run_app('john', 1, 'ringo')

# or 

run_app(tmp = 'john', 2, tmp)
</code></pre>

<p>You can slightly improve that by using an optional parameter with a default argument:</p>

<pre><code>def run_app(name, startr, constant_var = name if startr == 1)
  some_name = modify name
  compare(some_name, constant_var)

  # recursive call
  run_app(some_name, 0, constant_var)
end
</code></pre>

<p>Now you can call it like you want to:</p>

<pre><code>run_app('john', 1)

# or

run_app('john', 2)
</code></pre>

<p>However, you can <em>still</em> call it like this:</p>

<pre><code>run_app('john', 1, 'ringo')

# or 

run_app(tmp = 'john', 2, tmp)
</code></pre>

<p>So, what we do is to move that logic into a <code>private</code> helper method and give the public method the API we want:</p>

<pre><code>def run_app(name, startr)
  constant_var = name if startr == 1

  run_app_r(name, startr, constant_var)
end

private

def run_app_r(name, startr, constant_var)
  some_name = modify name
  compare(some_name, constant_var)

  # recursive call
  run_app_r(some_name, 0, constant_var)
end
</code></pre>

<p>Call it like this:</p>

<pre><code>run_app('john', 1)

# or

run_app('john', 2)
</code></pre>

<p>Of course, you can now <em>still</em> call </p>

<pre><code>run_app_r('john', 1, 'ringo')

# or 

run_app_r(tmp = 'john', 2, tmp)
</code></pre>

<p>But at least you now have a <em>separate</em> method which you can clearly document as <code>private</code>, e.g. by using YARD's <code>@private</code> tag or just use RDoc's <code>:nodoc:</code> tag to leave it out of the docs completely.</p>

<p>The fact that the <code>run_app_r</code> method can be called from everywhere even though it is only meant to be called inside <code>run_app</code> is pretty annoying. In a language like Scala which supports nested methods you would just put the <code>run_app_r</code> method inside of the <code>run_app</code> method, but Ruby doesn't support nested methods, so we have to find another way: <code>Proc</code>s can be nested inside methods!</p>

<pre><code>def run_app(name, startr)
  constant_var = name if startr == 1

  (run_app_r = -&gt;(name, startr, constant_var; some_name) {
    some_name = modify name
    compare(some_name, constant_var)

    # recursive call
    run_app_r.(some_name, 0, constant_var)
  }).(name, startr, constant_var)
end
</code></pre>

<p>Call it like this:</p>

<pre><code>run_app('john', 1)

# or

run_app('john', 2)
</code></pre>

<p>And since blocks are closures, we don't even need to explicitly pass <code>constant_var</code> along:</p>

<pre><code>def run_app(name, startr)
  constant_var = name if startr == 1

  (run_app_r = -&gt;(name, startr; some_name) {
    some_name = modify name
    compare(some_name, constant_var)

    # recursive call
    run_app_r.(some_name, 0)
  }).(name, startr)
end
</code></pre>

<p>Call it like this:</p>

<pre><code>run_app('john', 1)

# or

run_app('john', 2)
</code></pre>

<p>But all of this is moot, because your recursion doesn't have a base case and thus will loop infinitely. Or rather, you will get a stack overflow because Ruby doesn't guarantee proper tail calls.</p>
"
"<p>I have written a gem that <em>uses</em> a <a href=""http://code.jjb.cc/2012/09/15/sane_timeout-a-replacement-for-rubys-standard-library-timeout/"" rel=""nofollow"" title=""gem"">gem</a> in one of its classes to overwrite <code>Timeout</code>. I only want to overwrite <code>Timeout</code> in this single instance, not globally in my gem and certainly not globally in anyone's project that uses my gem.</p>

<p>The problem I'm running into is when I include <em>my</em> gem in a rails project. It seems that the timeout gem gets instantiated from the get-go (at rails app load) and affects other parts of my Rails app that rely on the standard <code>Timeout</code>.</p>

<p>My question is this: how can I limit the timeout gem's influence to only the single class that I wish to use it in. I've already placed the <code>require</code> statement within the class definition and this didn't seem to help.</p>
","2988","","<p>This is not possible without cooperation of the gem author.</p>

<p>When you <code>require</code> a file, the code in the file gets run. Period. If the code in the file monkeypatches a class or modifies the global namespace or whatever, that will happen. Period.</p>

<p>You can use <code>load</code> instead of <code>require</code> which allows you to evaluate the file within the context of an anonymous module. But, of course, using the namespace operator <code>::</code> the code in the file can <em>still</em> get access to the global namespace and every module and class in it, by just doing something like <code>class ::String; def length; 42 end end</code>.</p>

<p>Now, if the gem author published his gem as a <code>refine</code>ment, then you would <em>at least</em> be able to limit the effects to a single script body:</p>

<p><code>string_with_upper_reverse.rb</code>:</p>

<pre><code>module UpperReverse
  def reverse
    super.upcase
  end
end

module StringWithUpperReverse
  refine String do
    prepend UpperReverse
  end
end

puts 'Hello'.reverse
# olleH

using StringWithUpperReverse

puts 'Hello'.reverse
# OLLEH
</code></pre>

<p><code>test.rb</code>:</p>

<pre><code>puts 'Hello'.reverse
# olleH

require_relative 'string_with_upper_reverse'

puts 'Hello'.reverse
# olleH

using StringWithUpperReverse

puts 'Hello'.reverse
# OLLEH

require_relative 'required'
</code></pre>

<p><code>required.rb</code>:</p>

<pre><code>puts 'Hello'.reverse
# olleH

using StringWithUpperReverse

puts 'Hello'.reverse
# OLLEH
</code></pre>

<p>As you can see, neither <code>require</code>ing nor being <code>require</code>d by a script which is <code>using</code> the <code>refine</code>ment will mean that the <code>refine</code>ment is visible inside your script. <em>Only</em> explicitly <code>using</code> the <code>refine</code>ment inside a script body will make the <code>refine</code>ment visible <em>only</em> from that point on and <em>only</em> within that <em>one</em> script body.</p>

<p>Note, however, that <code>refine</code>ments are an experimental feature: their API may change without notice in future versions of Ruby, they may even be removed altogether.</p>

<p>Note also that the version of <code>refine</code>ments that ships with Ruby 2.0.0 (and also current development versions of Ruby 2.1) can <em>only</em> be scoped to script bodies. The ability to be scoped to <code>module</code> and <code>class</code> bodies was removed shortly prior to the release of Ruby 2.0.0, together with the <code>Module#using</code> method.</p>

<p>And lastly, note that <code>Object#send</code> ignores <code>refine</code>ments:</p>

<pre><code>require_relative 'string_with_upper_reverse'

using StringWithUpperReverse

puts 'Hello'.reverse
# OLLEH

puts 'Hello'.send(:reverse)
# olleH
</code></pre>
"
"<p>Do Eigenclasses exist prior to a singleton method being defined
on a Object or Class. ie Do they always exist or come in existence
when a singleton method or class method in defined?</p>
","2988","","<p><em>Every</em> object <em>always</em> has a singleton class. Period. No ifs, no buts, no exceptions.</p>

<p>Depending on how clever the compiler or interpreter is, it may or may not perform some performance optimizations. But like all performance optimizations, those are not allowed to change the result of the program, so even if those performance optimizations <em>do</em> lead to certain states where a particular singleton class does <em>not actually</em> exist, the program still <em>must</em> behave as if it <em>did</em> exist, so you wouldn't be able to tell anyway. After all, that's pretty much the <em>definition</em> of ""performance optimization"".</p>

<p>Some Ruby implementations may do some optimizations, others may do other optimizations, some may even not do any optimizations <em>at all</em>. You can't tell from the result of your program, and you shouldn't care, you <em>mustn't</em> care.</p>

<p>For example, YARV performs the following optimizations:</p>

<ul>
<li><p>Since almost no object has singleton methods, creating a singleton class for <em>every</em> object would be a waste of memory, therefore singleton classes are created lazily: when you create a singleton method (<code>def foo.bar</code> or <code>Object#define_singleton_method</code>), when you open up the singleton class (<code>class &lt;&lt; foo</code>), and when you ask for an object's singleton class (<code>Object#singleton_class</code>).</p></li>
<li><p>Since almost every class has some sort of class method, the overhead of lazily creating a singleton class doesn't make sense, so for classes, the singleton class is always created eagerly.</p></li>
</ul>

<p>But this is a private internal implementation detail of YARV. JRuby may do it differently. IronRuby may do it differently. MacRuby may do it differently. MRuby may do it differently. Topaz may do it differently. Rubinius may do it differently. MagLev may do it differently. Even the next patchlevel of YARV may do it differently.</p>

<p>If you look at the singleton class it's there. If you <em>don't</em> look at it, it doesn't matter whether it's there. So, semantically, it's always there.</p>
"
"<p>I'm getting NameError uninitialized constant like below:</p>

<pre><code>Failures:

  1) Direction turn right faced south rotates to west
     Failure/Error: expect(Move.right(Direction::South)).to eq(Direction::West)
     NameError:
       uninitialized constant Move
     # ./spec/unit_tests/direction_spec.rb:11:in `block (4 levels) in &lt;top (required)&gt;'

  2) Direction turn right faced west rotates to north
     Failure/Error: expect(Move.right(Direction::West)).to eq(Direction::North)
     NameError:
       uninitialized constant Move
     # ./spec/unit_tests/direction_spec.rb:16:in `block (4 levels) in &lt;top (required)&gt;'

  3) Direction turn right faced north rotates to east
     Failure/Error: expect(Move.right(Direction::North)).to eq(Direction::East)
     NameError:
       uninitialized constant Move
     # ./spec/unit_tests/direction_spec.rb:21:in `block (4 levels) in &lt;top (required)&gt;'

  4) Direction turn right faced east rotates to south
     Failure/Error: expect(Move.right(Direction::East)).to eq(Direction::South)
     NameError:
       uninitialized constant Move
     # ./spec/unit_tests/direction_spec.rb:26:in `block (4 levels) in &lt;top (required)&gt;'

Finished in 0.02345 seconds
14 examples, 4 failures
</code></pre>

<p>This is the code I have:</p>

<pre><code>require_relative '../spec_helper'
require 'direction'

describe Direction do

    subject(:Move) { Direction::Move.new }

    describe 'turn right' do
        context 'faced south' do
            it 'rotates to west' do
                expect(Move.right(Direction::South)).to eq(Direction::West)
            end
        end
        context 'faced west' do
            it 'rotates to north' do
                expect(Move.right(Direction::West)).to eq(Direction::North)
            end
        end
        context 'faced north' do
            it 'rotates to east' do
                expect(Move.right(Direction::North)).to eq(Direction::East)
            end
        end
        context 'faced east' do
            it 'rotates to south' do
                expect(Move.right(Direction::East)).to eq(Direction::South)
            end
        end
    end
end
</code></pre>

<p>Is there a reason why subject is not working? I've also tried <code>let</code> but that doesn't work either</p>
","2988","","<p>If you want <code>Move</code> to be interpreted as a method call, you need to add either a receiver or an argument list. I.e. you need to use either</p>

<pre><code>expect(self.Move.right(Direction::South)).to eq(Direction::West)
</code></pre>

<p>or </p>

<pre><code>expect(Move().right(Direction::South)).to eq(Direction::West)
</code></pre>

<p>Otherwise it will be interpreted as dereferencing a constant.</p>
"
"<p>I am working on ruby, and the following is my code snippet. I tried mixing required arguments and option arguments. But it gives me an error:</p>

<pre><code>def my_method(a, b, *p, d)
    puts a
    puts b
    puts ""content of p is :"" + p.to_s
    puts d
end

my_method(10, 20, 34, 45)
</code></pre>

<p>Error snippet:</p>

<pre><code>syntax error def my_method(a, b, *p, d)
                                     ^
</code></pre>

<p>What is the cause of this error?</p>

<p>Note: Im using ""ruby 1.8.5"" ruby version</p>
","2988","","<p>The code you have works just fine in any recent version of Ruby. It won't work in <em>really old</em> versions of Ruby, though, since required positional arguments after splat arguments were only introduced in Ruby 1.9.0.</p>

<p>A pseudo-regex for parameter lists in Ruby is something like this:</p>

<pre><code>mand* opt* splat? mand* (mand_kw | opt_kw)* kwsplat? block?
</code></pre>

<p>Here's an example:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
          ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk)
  Hash[local_variables.map {|var| [var, eval(var.to_s)] }]
end

method(:foo).arity
# =&gt; -5

method(:foo).parameters
# =&gt; [[:req, :m1], [:req, :m2], [:opt, :o1], [:opt, :o2], [:rest, :splat], 
#     [:req, :m3], [:req, :m4], [:keyreq, :mk1], [:keyreq, :mk2], 
#     [:key, :ok1], [:key, :ok2], [:keyrest, :ksplat], [:block, :blk]]

foo(1, 2, 3, 4)
# ArgumentError: missing keywords: mk1, mk2

foo(1, 2, 3, mk1: 4, mk2: 5)
# ArgumentError: wrong number of arguments (3 for 4+)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], m3: 3, m4: 4, 
#      ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: :o2, splat: [], m3: 4, m4: 5, 
#      ok1: :ok1, mk1: 6, mk2: 7, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [], m3: 5, m4: 6, 
#      ok1: :ok1, mk1: 7, mk2: 8, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5], m3: 6, m4: 7, 
#      ok1: :ok1, mk1: 8, mk2: 9, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: :ok1, mk1: 9, mk2: 10, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: #&lt;Proc:0xdeadbeefc00l42@(irb):15&gt; }
</code></pre>
"
"<p>I am getting the error when trying to execute the below code from Eclipse because I can't reassign Val, right?</p>

<pre><code>object Test {
    def main(args: Array[String]){
      val tempVal = 100;

      val checkval = if (tempVal &gt; 50) 1 else 0

      println(""The new value is: "" + checkval);

      //Getting Error Below
      checkval1 = if (tempVal &gt; 200) 0

    }
}
</code></pre>

<p>Now when I am trying to do the same thing from command line, why I am not getting the same error?</p>

<p><img src=""http://i.stack.imgur.com/aYFFc.jpg"" alt=""enter image description here""></p>
","2988","","<p>In the REPL, every statement you type will be wrapped inside of an object which is nested inside the object of the previous statement. This is done specifically so that you can ""change"" the value of <code>val</code>s or <code>class</code>es or <code>trait</code>s later. Otherwise you would have to restart the REPL and retype every statement everytime you make a typo.</p>

<p>So, your REPL session is (roughly) compiled to something like this:</p>

<pre><code>object Line1 {
  val x = 100
  println(x)

  object Line2 {
    val y = if (x &lt; 50) 1 else 0
    println(y)

    object Line3 {
      val y = if (x &lt; 50) 0 else 1
      println(y)
    }
    val _ = Line3 // force creating the Line3 object
  }
  val _ = Line2 // force creating the Line2 object
}
val _ = Line1 // force creating the Line1 object
</code></pre>

<p>Since Scala has nested scopes, <code>Line3</code>'s <code>y</code> can shadow <code>Line2</code>'s <code>y</code>.</p>
"
"<p>I have a hash table:</p>

<pre><code>hash = Hash.new(0)

hash[:key] = hash[:key] + 1   # Line 1
hash[:key] += 1               # Line 2
</code></pre>

<p>Line 1 and Line 2 do the same thing. Looks like line 1 needs to query hash by key two times while line 2 only once. Is that true? Or they are actually same?</p>
","2988","","<p>The Ruby Language Specification spells out the algorithm for evaluating abbreviated indexing assignment expressions quite clearly. It is something like this:</p>

<pre><code>primary_expression[indexing_argument_list] ω= expression
# ω can be any operator, in this example, it is +
</code></pre>

<p>is (roughly) evaluated like</p>

<pre><code>o = primary_expression
*l = indexing_argument_list
v = o.[](*l)
w = expression
l &lt;&lt; (v ω w)
o.[]=(*l)
</code></pre>

<p>In particular, you can see that both the getter and the setter are called exactly once.</p>

<p>You can also see that by looking at the informal desugaring:</p>

<pre><code>hash[:key] += 1

# is syntactic sugar for 

hash[:key] = hash[:key] + 1

# which is syntactic sugar for 

hash.[]=(:key, hash.[](:key).+(1))
</code></pre>

<p>Again, you see that both the setter and the getter are called exactly once.</p>
"
"<p>I have a method <code>calculate(data)</code> that returns two values. One is a grade (<code>Float</code>) and another is details <code>(Hash</code>). Comparing the following two options, is there a preferred way?</p>

<pre><code>def calculate(data)
  ...
  [grade, details]
end

grade, details = calculate(data)
</code></pre>

<p>vs.</p>

<pre><code>def calculate(data)
  ...
  Result.new(grade, details)
end

result = calculate(data)
grade = result.grade
details = result.details
</code></pre>

<p>What is more idiomatic in Ruby?</p>
","2988","","<p>The best of both worlds:</p>

<pre><code>Result = Struct.new(:grade, :details) do
  def to_ary; [grade, details] end
end

def calculate(data)
  Result.new(1, 'Two')
end

grade, details = calculate(:ignore)
# =&gt; #&lt;struct Result grade=1, details=""Two""&gt;

grade
# =&gt; 1

details
# =&gt; 'Two'
</code></pre>

<p>As an experiment, I once monkeypatched <code>Hash#each</code> to <code>yield</code> a <code>Struct.new(:key, :value)</code> instead of a two-element <code>Array</code> and pretty much all I had to do to get most of the RubySpecs passing again was to implement <code>to_ary</code>.</p>
"
"<p>Why is this function invalid?</p>

<pre><code>def request(method='get',resource, meta={}, strip=true)

end
</code></pre>

<p>unexcpected ')' expecting keyword_end</p>

<p>Thank you!</p>
","2988","","<p>You can only have one group of optional parameters in a parameter list.</p>

<p>A pseudo-regex for parameter lists in Ruby is something like this:</p>

<pre><code>mand* opt* splat? mand* (mand_kw | opt_kw)* kwsplat? block?
</code></pre>

<p>Here's an example:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
          ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk)
  Hash[local_variables.map {|var| [var, eval(var.to_s)] }]
end

method(:foo).arity
# =&gt; -5

method(:foo).parameters
# =&gt; [[:req, :m1], [:req, :m2], [:opt, :o1], [:opt, :o2], [:rest, :splat], 
#     [:req, :m3], [:req, :m4], [:keyreq, :mk1], [:keyreq, :mk2], 
#     [:key, :ok1], [:key, :ok2], [:keyrest, :ksplat], [:block, :blk]]

foo(1, 2, 3, 4)
# ArgumentError: missing keywords: mk1, mk2

foo(1, 2, 3, mk1: 4, mk2: 5)
# ArgumentError: wrong number of arguments (3 for 4+)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], m3: 3, m4: 4, 
#      ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: :o2, splat: [], m3: 4, m4: 5, 
#      ok1: :ok1, mk1: 6, mk2: 7, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [], m3: 5, m4: 6, 
#      ok1: :ok1, mk1: 7, mk2: 8, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5], m3: 6, m4: 7, 
#      ok1: :ok1, mk1: 8, mk2: 9, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: :ok1, mk1: 9, mk2: 10, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: #&lt;Proc:0xdeadbeefc00l42@(irb):15&gt; }
</code></pre>

<p>[Note: mandatory keyword arguments will be introduced in Ruby 2.1, all the rest already works.]</p>
"
"<p>I want to retrieve the names of the parameters in a constructor. Given the following code:</p>

<pre><code>class Something
  def self.do_something(a, b); end
  def initialize(a, b); end
end
</code></pre>

<p>I get:</p>

<pre><code>Something.method(:do_something).parameters
# =&gt; [[:req, :a], [:req, :b]] 
Something.method(:new).parameters
# =&gt; [[:rest]] 
</code></pre>

<p>Why is <code>Method#parameters</code> returning <code>[[:rest]]</code> in the case of <code>new</code>, and how can I get the constructor parameters?</p>
","2988","","<p>If you ask about the parameters of <code>Something::new</code>, you will get the parameters of <code>Something::new</code>. If you want to know the parameters of <code>Something#initialize</code>, you need to ask for <code>Something#initialize</code>:</p>

<pre><code>Something.instance_method(:initialize).parameters
# =&gt; [[:req, :a], [:req, :b]]
</code></pre>
"
"<p>Suppose I have this function</p>

<pre><code>&gt;&gt;&gt;a=3
&gt;&gt;&gt;def num(a):
       a=5
       return a
&gt;&gt;&gt;num(a)
5
&gt;&gt;&gt;a
3
</code></pre>

<p><em>Value of a doesnt change.</em></p>

<p>Now consider this code :</p>

<pre><code>&gt;&gt;&gt; index = [1]
&gt;&gt;&gt; def change(a):
       a.append(2)
       return a
&gt;&gt;&gt; change(index)
&gt;&gt;&gt; index
&gt;&gt;&gt; [1,2] 
</code></pre>

<p>In this code the value of index changes. 
Could somebody please explain what is happening in these two codes. As per first code, the value of index shouldnt change(ie should remain index=[1]).</p>
","2988","","<p>The value of <code>index</code> <em>doesn't</em> change. <code>index</code> still points to the same object it did before. However, the state of the object <code>index</code> points to has changed. That's just how mutable state works.</p>
"
"<p>In some situations, one generally uses a large enough integer value to represent infinity. I usually use the largest representable positive/negative integer. That usually yields more code, since you need to check if one of the operands is infinity before virtually all arithmetic operations in order to avoid overflows. Sometimes it would be desirable to have saturated integer arithmetic. For that reason, some people use smaller values for infinity, that can be added or multiplied several times without overflow. What intrigues me is the fact that it's extremely common to see (specially in programming competitions):</p>

<pre><code>const int INF = 0x3f3f3f3f;
</code></pre>

<p>Why is that number special? It's binary representation is:</p>

<pre><code>00111111001111110011111100111111
</code></pre>

<p>I don't see any specially interesting property here. I see it's easy to type, but if that was the reason, almost anything would do (0x3e3e3e3e, 0x2f2f2f2f, etc). It can be added once without overflow, which allows for:</p>

<pre><code>a = min(INF, b + c);
</code></pre>

<p>But all the other constants would do, then. Googling only shows me a lot of code snippets that use that constant, but no explanations or comments.</p>

<p>Can anyone spot it?</p>
","2988","","<p><code>0x3f3f3f3f</code> is the ASCII representation of the string <code>????</code>.</p>

<p>Krugle finds 48 instances of that constant in its entire database. 46 of those instances are in a Java project, where it is used as a bitmask for some graphics manipulation.</p>

<p>1 project is an operating system, where it is used to represent an unknown ACPI device.</p>

<p>1 project is again a bitmask for Java graphics.</p>

<p>So, in all of the projects indexed by Krugle, it is used 47 times because of its bitpattern, once because of its ASCII interpretation, and not a single time as a representation of infinity.</p>
"
"<p>I'd like to know why the following code apparently doesn't garbage collect anonymous modules that are supposedly not referenced anywhere anymore (not extended/included, not named, containing array set to nil). </p>

<p>I'd appreciate if anyone could clarify what's going on under the hood with relatively simple/general programming words. Is there a special ruby way to achieve this ? Can't anonymous modules/classes be garbage collected no matter what ? Or was i simply mislead by the memory stats i got ?</p>

<p>NOTE : i'm using ruby 1.9.3 ; don't know if ruby 2.x would change anything at all...
NOTE 2 : the result is the same whether or not the module defines the foo method</p>

<p>Thanks in advance.</p>

<pre><code>puts(""INITIAL OBJECT SPACE OBJECTS : #{ObjectSpace.count_objects}"")


i = 100000
ms = []

i.times do
    ms &lt;&lt; Module.new do
        def foo()
             puts('foo method called')
        end
    end
end

puts(""#{i} MODULES CREATED"")
puts(""OBJECT SPACE OBJECTS : #{ObjectSpace.count_objects}"")

ms = nil
ObjectSpace.garbage_collect

puts(""#{i} MODULES GARBAGE COLLECTED"")
puts(""WAITING TO END PROGRAM"")

stop = gets
puts(""FINAL OBJECT SPACE OBJECTS : #{ObjectSpace.count_objects}"")
</code></pre>

<p>I say ""apparently doesn't garbage collect"" because my OS task manager doesn't show any reduction in memory usage from the process, and calling ObjectSpace.count_objects yields the following, which i read (wrongly so ?) as : no the memory used by your modules has not been freed.</p>

<blockquote>
  <p>INITIAL OBJECT SPACE OBJECTS : {:TOTAL=>14730, :FREE=>251, :T_OBJECT=>8, :T_CLASS=>542, :T_MODULE=>21, :T_FLOAT=>7, :T_STRING=>6349, :T_REGEXP=>24, :T_ARRAY=>1009, :T_HASH=>14, :T_BIGNUM=>3, :T_FILE=>10, :T_DATA=>408, :T_MATCH=>108, :T_COMPLEX=>1, :T_NODE=>5956, :T_ICLASS=>19}</p>
  
  <p>100000 MODULES CREATED</p>
  
  <p>OBJECT SPACE OBJECTS : {:TOTAL=>311794, :FREE=>59829, :T_OBJECT=>6, :T_CLASS=>542, :T_MODULE=>100021, :T_FLOAT=>7, :T_STRING=>3332, :T_REGEXP=>22, :T_ARRAY=>23868, :T_HASH=>10, :T_BIGNUM=>3, :T_FILE=>3, :T_DATA=>100324, :T_COMPLEX=>1, :T_NODE=>23807, :T_ICLASS=>19}</p>
  
  <p>100000 MODULES GARBAGE COLLECTED
  WAITING TO END PROGRAM</p>
  
  <p>FINAL OBJECT SPACE OBJECTS : {:TOTAL=>311794, :FREE=>107155, :T_OBJECT=>6, :T_CLASS=>542, :T_MODULE=>100021, :T_FLOAT=>7, :T_STRING=>3335, :T_REGEXP=>22, :T_ARRAY=>203, :T_HASH=>10, :T_BIGNUM=>3, :T_FILE=>3, :T_DATA=>100324, :T_COMPLEX=>1, :T_NODE=>143, :T_ICLASS=>19}</p>
</blockquote>
","2988","","<p>Calling <code>GC.start</code> or <code>ObjectSpace.garbage_collect</code> <em>does not</em> mean that a garbage collection will be performed. It's only a hint to the Ruby runtime.</p>

<p>On some platforms it isn't even <em>possible</em> for the Ruby runtime to initiate a garbage collection, because the garbage collector isn't even part of the Ruby runtime, e.g on JRuby or IronRuby.</p>

<p>In general, the Ruby runtime will decide on its own when it will perform a garbage collection. Usually, that's when it runs out of memory. 100000 modules aren't <em>that</em> big, so there's simply no need to perform a GC cycle.</p>

<p>Also, most Ruby implementations will <em>never</em> release memory back to the OS, even after a GC cycle.</p>

<p>So, just the fact that the <code>ObjectSpace</code> doesn't shrink doesn't necessarily mean that you have memory leak. It could simply mean that the Ruby runtime didn't yet deem it necessary to run a GC cycle.</p>

<p>Also note that if you run this code from IRb, Pry, an IDE console or some other non-standard environment, then it may be the case that <em>those</em> hold on to some of those modules. For example, Pry stores the results of the last 100 commands in a history array. (Try evaluating <code>_out_[5]</code> in Pry, after entering your example program.)</p>
"
"<p>I've just recently started programming scala, and in the book ""Programming in Scala""(www.artima.com/pins1ed) the following method of executing scala scripts in linux is presented:</p>

<pre><code>#!/bin/sh
exec scala ""$0"" ""$@""
!#
// Say hello to the first argument
println(""Hello, ""+ args(0) +""!"")
</code></pre>

<p>Now I've been using linux for a long time, but bash scripting is not my speciality. Now I can guess how this type of scrpt works(and it works beautifully), but I was wondering what do the !# and $@ do <em>exactly</em>.</p>

<p>Thanks in advance for all the help!</p>
","2988","","<p><code>!#</code> doesn't have anything to do with Bash. It's part of the Scala Language. It separates a non-Scala header from Scala Code in Script Mode.</p>
"
"<p>I can't understand behavior of value returning by initialize function when i call super inside it (initialize method is from a class which inherit from String class ), this is an example </p>

<pre><code>class Myclass &lt; String
   def initialize(arg)
       super(arg.to_s)
       ""something""
   end
end
</code></pre>

<p>in ruby methods, returned value will be the value of the last statement, if we take this rule: this means when we call <code>Myclass.new</code> it will return <strong>""something""</strong>, but here if i do :</p>

<pre><code>Myclass.new(""test"")
=&gt; ""test""
</code></pre>

<p>as you can see it return <strong>""test</strong>"" instead of ""something"". why ?</p>
","2988","","<p>If you want to get the return value of your <code>initialize</code> method, you need to call your <code>initialize</code> method. If you call a completely different method, it is only normal that you would get a completely different return value.</p>
"
"<p>I have some experience in Java and I am learning Ruby. I encountered a ruby program as below:</p>

<pre><code>class Tree
  attr_accessor :children, :node_name
  def initialize(name, children=[])
    @children = children
    @node_name = name
  end
  def visit_all(&amp;block)
    visit &amp;block
    children.each {|c| c.visit_all &amp;block}
  end
  def visit(&amp;block)
    block.call self
  end
end
ruby_tree = Tree.new( ""Ruby"" ,
                      [Tree.new(""Reia"" ),
                       Tree.new(""MacRuby"" )] )
puts ""Visiting a node""
ruby_tree.visit {|node| puts node.node_name}
puts
puts ""visiting entire tree""
ruby_tree.visit_all {|node| puts node.node_name}
</code></pre>

<p>When I looked at the power of ruby language, I thought to write similar code in Java as below:</p>

<pre><code>public class Tree {

    private String name;
    private Tree[] children;

    Tree(String name, Tree[] children) {
        this.name = name;
        this.children = children;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Tree[] getChildren() {
        return children;
    }

    public void setChildren(Tree[] children) {
        this.children = children;
    }

    public static void main(String[] args) {
        Tree myTree = new Tree(""Ruby"", new Tree[] {
                new Tree(""Reia"", new Tree[] {}),
                new Tree(""MacRuby"", new Tree[] {}) });
        myTree.visit();
        myTree.visit_all();
    }

    public void visit() {
        System.out.println(getName());
    }

    public void visit_all() {
        visit();
        for (Tree tree : children) {
            tree.visit();
        }
    }
}
</code></pre>

<p>Question:
I know that the java version here is not much flexible as Ruby.Is there anything similar in Java that I can do to achieve the level of flexibility like ruby does provides?</p>
","2988","","<p>First, a word of caution: that code is absolutely horrible. It provides almost no encapsulation, it leaks implementation details left and right, there's no way that a <code>Tree</code> object can maintain its own invariants or state. Secondly, it doesn't integrate <em>at all</em> with Ruby's collection framework.</p>

<p>As a consequence, my Java translation is <em>also</em> equally horrible, and it <em>also</em> doesn't integrate with Java's collection framework.</p>

<p>The two biggest drawbacks that your Java code has compared to your Ruby are</p>

<ul>
<li>in the Java version, the element type is hard-coded to <code>String</code>, whereas in the Ruby version, it can be <em>any</em> object, and even a mixture of objects within the same tree, and </li>
<li>in the Java version, the iterators are hard-coded to printing the name(s), whereas in the Ruby version, the iterators take a block argument with the code to execute.</li>
</ul>

<p>The first problem cannot be easily solved in Java. You can make the collection generic, so that it can hold elements of any type, but making it heterogeneous (i.e. being able to hold elements of different types in the same collection) is going to be <em>a lot of</em> work. So, I stuck with the partial solution: making the <code>Tree</code> generic.</p>

<p>The second problem can be solved by having the iterators take an object which contains the code. After all, a first-class subroutine is basically the same as an object with only one method. (Java 8 is going to take some of that pain away, I included examples in the code.)</p>

<pre><code>import java.util.Collection;
import java.util.ArrayList;

interface Consumer&lt;T&gt; {
    void accept(T e);
}
// In Java 8, this interface is already part of the JRE.
// Just replace the 3 lines above with this import:
//import java.util.function.Consumer;

class Tree&lt;T&gt; {
    private String nodeName;
    private Collection&lt;Tree&lt;T&gt;&gt; children = new ArrayList&lt;&gt;();

    Tree(String name, Collection&lt;Tree&lt;T&gt;&gt; children) {
        nodeName = name;
        this.children = children;
    }

    Tree(String name) {
        nodeName = name;
    }

    public String getNodeName() { return nodeName; }
    public void setNodeName(String name) { nodeName = name; }

    public Collection&lt;Tree&lt;T&gt;&gt; getChildren() { return children; }
    public void setChildren(Collection&lt;Tree&lt;T&gt;&gt; children) { this.children = children; }

    void visitAll(Consumer&lt;Tree&lt;T&gt;&gt; block) {
        visit(block);
        for (Tree&lt;T&gt; tree : children) tree.visitAll(block);
    }

    void visit(Consumer&lt;Tree&lt;T&gt;&gt; block) {
        block.accept(this);
    }

    public static void main(String... args) {
        ArrayList&lt;Tree&lt;String&gt;&gt; children = new ArrayList&lt;&gt;();
        children.add(new Tree&lt;String&gt;(""Reia""));
        children.add(new Tree&lt;String&gt;(""MacRuby""));
        Tree&lt;String&gt; rubyTree = new Tree&lt;&gt;(""Ruby"", children);

        System.out.println(""Visiting a node"");
        rubyTree.visit(new Consumer&lt;Tree&lt;String&gt;&gt;() {
            public void accept(Tree&lt;String&gt; node) {
                System.out.println(node.getNodeName());
            }
        });
        // In Java 8, you can use a lambda.
        // Just replace the 5 lines above with this line:
        //rubyTree.visit(node -&gt; System.out.println(node.getNodeName()));

        System.out.println();

        System.out.println(""Visiting entire tree"");
        rubyTree.visitAll(new Consumer&lt;Tree&lt;String&gt;&gt;() {
            public void accept(Tree&lt;String&gt; node) {
                System.out.println(node.getNodeName());
            }
        });
        // In Java 8, you can use a lambda.
        // Just replace the 5 lines above with this line:
        //rubyTree.visitAll(node -&gt; System.out.println(node.getNodeName()));
    }
}
</code></pre>
"
"<p>I was looking through the ruby Kernel doc and saw this method:</p>

<pre><code>a = 2
local_variables # =&gt; [:a, :_]
</code></pre>

<p>Why does it return :a and not a?
I thought the "":"" was reserved for symbols, but the symbol :a doesn't point to the variable a nor to it's assigned value, 2. </p>

<p>Furthermore, how would I go about accessing the actual variables through this method? As in b=local_variables.first (would be 2, but is :a).</p>

<p>Is there a reason behind this behavior, what is it?</p>

<p>Thanks/</p>
","2988","","<blockquote>
  <p>Why does it return :a and not a?</p>
</blockquote>

<p>It can't return <code>a</code>, because <code>a</code> is a variable and variables aren't objects in Ruby. Methods can only take, return, and manipulate objects.</p>
"
"<p>I am trying to install rbenv without the internet. Unlike RVM which has a whole page dedicated to offline installation, I could not find anything similar to that for rbenv.</p>

<p>Is there any way to install it offline? Also a way to add different versions of Ruby to it without going online (like RVM , you add the tar.bz2 of the Ruby version to $rvm_path/archives)</p>

<p>Thanks</p>
","2988","","<blockquote>
  <p>Is there any way to install it offline?</p>
</blockquote>

<p>Installation simply consists of unpacking the <code>rbenv</code> distribution into a directory and editing a few files. Neither of the two tasks requires you to go online.</p>

<blockquote>
  <p>Also a way to add different versions of Ruby to it without going online (like RVM , you add the tar.bz2 of the Ruby version to $rvm_path/archives)</p>
</blockquote>

<p><code>rbenv</code> only manages Rubies that have already been installed, and all it needs to know for that is the directory they are installed in. Again, no need to go online.</p>
"
"<p>When writing big classes with loads of instance variables, writing ==, eql? and hash methods is a big hassle. Is there a way to make a ""template class"" to automate this process? Or with any other ways.</p>

<p>Example:</p>

<pre><code>class Template
    def ==(other)
      //Some way of comparing all of self's instance variables to other's.
    end

    def eql?(other)
      self == other
    end

    def hash
      //Some way of XORing the instance variables of self
    end
end

class Test &lt; Example
    attr_reader :foo
    attr_reader :bar

    def initialize(foo, bar)
      @foo = foo
      @bar = bar
    end
end

a = Test.new ""123"", ""456""
b = Test.new ""123"", ""456""
a == b
&gt; true
</code></pre>
","2988","","<pre><code>Test = Struct.new(:foo, :bar)

a = Test.new ""123"", ""456""
b = Test.new ""123"", ""456""

a == b
# =&gt; true
</code></pre>
"
"<p>Are there some set of reasons that make it impossible for dynamic languages ​​such as Python or Ruby to be compiled instead of interpreted without losing any of his dynamics characteristics?</p>

<p>Of course one the requirements to that hypothetical compiler is that those languages doesn't lose any of his characteristics like metaprogramming, extend objects, add code or modify type system in runtime.</p>

<p>Summarizing, it is possible to create a Ruby or Python compiler without losing any of his characteristics as dynamic programming languages?</p>
","2988","","<p>Yes, it is definitely possible to create compilers for dynamic languages. There are a myriad of examples of compilers for dynamic languages in the wild:</p>

<ul>
<li>CPython is an implementation of the Python programming language which has a Python compiler.</li>
<li>PyPy is an implementation of the Python programming language which has a Python compiler.</li>
<li>Jython is an implementation of the Python programming language which has a Python compiler.</li>
<li>IronPython is an implementation of the Python programming language which has a Python compiler.</li>
<li>Pynie is an implementation of the Python programming language which has a Python compiler.</li>
<li>YARV is an implementation of the Ruby programming language which has a Ruby compiler.</li>
<li>Rubinius is an implementation of the Ruby programming language which has a Ruby compiler.</li>
<li>MacRuby is an implementation of the Ruby programming language which has a Ruby compiler.</li>
<li>JRuby is an implementation of the Ruby programming language which has a Ruby compiler.</li>
<li>IronRuby is an implementation of the Ruby programming language which has a Ruby compiler.</li>
<li>MagLev is an implementation of the Ruby programming language which has a Ruby compiler.</li>
<li>Quercus is an implementation of the PHP programming language which has a PHP compiler.</li>
<li>P8 is an implementation of the PHP programming language which has a PHP compiler.</li>
<li>V8 is an implementation of the ECMAScript programming language which has an ECMAScript compiler.</li>
</ul>

<p>In general, <em>every</em> language can be implemented by a compiler, and <em>every</em> language can be implemented by an interpreter. It is also possible to <em>automatically</em> derive a compiler from an interpreter and vice-versa.</p>

<p>Most modern language implementations use both interpretation and compilation, sometimes even several compilers. Take Rubinius, for example: first Ruby code is compiled to Rubinius bytecode. Rubinius bytecode is then interpreted by the Rubinius VM. Code which has been interpreted several times is then compiled to Rubinius Compiler IR, which is then compiled to LLVM IR, which is then compiled to ""native code"" (whatever that is). So, Rubinius has one interpreter and three compilers.</p>

<p>V8 is a different example. It actually has <em>no</em> interpreter, but two different compilers: one very fast, very memory-efficient compiler which produces unoptimized, somewhat slow code. Code which has been run multiple times is then thrown away, and compiled again with the second compiler, which produces aggressively optimized code but takes more time and uses more memory during compilation.</p>

<p>However, in the end, you <em>cannot</em> run code without an interpreter. A compiler cannot run code. A compiler translates a program from one language into a different language. That's it. You can translate all you want, in the end, <em>something</em> has to run the code, and that thing is an interpreter. It might be implemented in software or in silicon, but it still is an interpreter.</p>
"
"<p>I have a method called <code>$muffinize</code> and I would like to find where it can be found in my code. In other words, given the following code:</p>

<pre><code>class A
    def foo
        $muffinize(1)
    end
    def bar
        ...
    end
end

class B
    def shoop
        $muffinize(2)
    end
    def woop
        ...
    end
end

class C
    def nope
        ...
    end
end
</code></pre>

<p>I would like to the result to be (written to a file):</p>

<pre><code>A:foo
B:shoop
</code></pre>

<p>I was thinking of accomplishing this with a Regex, but I was wondering if there would be some way of accomplishing this with Ruby meta-programming (which I might be accidentally using as a buzz-word)?</p>
","2988","","<p>Ignoring the fact that your code isn't even syntactically valid, this is simply not possible.</p>

<p>Here's a simple example:</p>

<pre><code>class A
  def foo
    bar
    muffinize(1)
  end
end
</code></pre>

<p><code>A#foo</code> will call <code>Object#muffinize</code> if and only if <code>bar</code> terminates. Which means that figuring out whether or not <code>A#foo</code> calls <code>Object#muffinize</code> requires to solve the Halting Problem.</p>
"
"<p>I want to avoid passing true as an argument to a method because it does not make sense to anybody who is reading the code for the first time:</p>

<p>e.g.</p>

<pre><code>result = MyQuery.match ""aa"", user, true
</code></pre>

<p>You can see that it is passing a string to match on and a user but the true is anybody's guess.</p>

<p>How can I make this more explicit?</p>
","2988","","<p>A method should only do one thing. If it takes a boolean argument, it pretty much by definition does <em>two</em> things: one if the argument is true, another if the argument is false. (Either that, or the argument is useless.)</p>

<p>It is almost always better to provide two methods with sensible names.</p>
"
"<p>If there is a function that you don't want to do anything with you simple do something like this in Python:</p>

<pre><code>def f():
    pass
</code></pre>

<p>My question is, is there something similar to <code>pass</code> in Scala?</p>
","2988","","<p><code>pass</code> is a syntactic quirk of Python. There are some cases where the grammar <em>requires</em> you to write a statement, but sometimes you don't want a statement there. That's what <code>pass</code> is for: it's a statement that does nothing.</p>

<p>Scala never requires you to write a statement, therefore the way to not write a statement is simply to not write a statement.</p>
"
"<p>Treetop seems to ignore turther rules after the first and fails to parse anything that doesn't match the first rule on the grammar file.
I already tried to swap the order of the rules, but still, only the first one is considered.</p>

<pre><code># grammar_pov.treetop
grammar Pov
    rule numeric
        '-'? [0-9]+ ('.' [0-9]+)? &lt;::PovFabric::Nodes::NumericLiteral&gt;
    end
    rule comma
        ','
    end
    rule space
        [\s]+
    end
end
</code></pre>

<p>This grammar file matches all integer and floats, but doesn't match '123, 456' or '123,456'
The parser failure_reason property says this 'Expected - at line 1, column 1 (byte 1) after '</p>

<p>Am i missing something?</p>
","2988","","<p>Your <code>comma</code> and <code>space</code> rules aren't used anywhere. So, they are just dead code.</p>
"
"<p>I'm trying to install GitLab on a Ubuntu PowerPC (mac mini) using <code>sudo -u git -H bundle install --deployment --without development test postgres aws libv8</code> but installation fails on libv8 (3.11.8.17). Output is shown below. </p>

<p>I am totally new on Ruby, but i guess it's trying to install from binaries for a different architecture? How can i install from sources? Any help appreciated!</p>

<p>Bundler version 1.3.5</p>

<p>gem version
2.0.3</p>

<p>ruby version 2.0.0p247 (2013-06-27) [powerpc-linux]</p>

<p>uname 
Linux ubumini 3.2.0-53-powerpc-smp #81-Ubuntu SMP Thu Aug 22 21:09:31 UTC 2013 ppc ppc ppc GNU/Linux</p>

<pre><code>Installing libv8 (3.11.8.17) 
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

    /usr/local/bin/ruby extconf.rb 
creating Makefile
Compiling v8 for ia32
Using python 2.7.3
Using compiler: /usr/bin/g++
In file included from ../src/allocation.h:31:0,
                 from ../src/allocation.cc:28:
../src/globals.h:90:2: error: #error Host architecture was not detected as supported by v8
../src/globals.h:113:2: error: #error Target architecture ia32 is only supported on ia32 host
make[1]: *** [/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/vendor/v8/out/ia32.release/obj.target/preparser_lib/src/allocation.o] Error 1
make: *** [ia32.release] Error 2
/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/ext/libv8/location.rb:36:in `block in verify_installation!': libv8 did not install properly, expected binary v8 archive '/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/vendor/v8/out/ia32.release/obj.target/tools/gyp/libv8_base.a'to exist, but it was not found (Libv8::Location::Vendor::ArchiveNotFound)
    from /home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/ext/libv8/location.rb:35:in `each'
    from /home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/ext/libv8/location.rb:35:in `verify_installation!'
    from /home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/ext/libv8/location.rb:26:in `install!'
    from extconf.rb:7:in `&lt;main&gt;'
GYP_GENERATORS=make \
    build/gyp/gyp --generator-output=""out"" build/all.gyp \
                  -Ibuild/standalone.gypi --depth=. \
                  -Dv8_target_arch=ia32 \
                  -S.ia32  -Dv8_can_use_vfp_instructions=true
make[1]: Entering directory `/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/vendor/v8/out'
  CXX(target) /home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/vendor/v8/out/ia32.release/obj.target/preparser_lib/src/allocation.o
make[1]: Leaving directory `/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/vendor/v8/out'


Gem files will remain installed in /home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17 for inspection.
Results logged to /home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/libv8-3.11.8.17/ext/libv8/gem_make.out
An error occurred while installing libv8 (3.11.8.17), and Bundler cannot continue.
Make sure that `gem install libv8 -v '3.11.8.17'` succeeds before bundling.
</code></pre>
","2988","","<p>The V8 compiler only has backends for x86, AMD64 and ARM.</p>
"
"<p>I just ran through an example from the 1.9 pickaxe book and I'm confused why the following program runs successfully without using <code>attr_accessor</code> in the <code>csv_reader.rb</code> file.</p>

<p>book_in_stock.rb</p>

<pre><code>class BookInStock
  attr_accessor :price, :isbn

  def initialize(price, isbn)
    @price = Float(price)
    @isbn = isbn
  end
end
</code></pre>

<p>Aren't we writing to the instance variable of the csv_reader object by appending new BookInStock objects to it?</p>

<p>csv_reader.rb</p>

<pre><code>require 'csv'
require_relative 'book_in_stock'

class CsvReader
  def initialize
    @book_in_stock = []
  end

  def read_in_csv_data(csv_file)
    CSV.foreach(csv_file, headers: true) do |row|
      @book_in_stock &lt;&lt; BookInStock.new(row[""price""], row[""isbn""])
    end
  end

  def total_value_in_stock
    sum = 0
    @book_in_stock.each {|book| sum += book.price}
    sum
  end
end
</code></pre>

<p>test_data.csv</p>

<pre><code>""price"",""isbn""
""44.12"",'asdf34r13'
""74.12"",'asdf34r13'
""14.12"",'asdf34r13'
""42.12"",'asdf34r13'
""4774.12"",'asdf34r13'
""04.19"",'asdf34r13'
</code></pre>

<p>Program Driver</p>

<pre><code>require_relative 'csv_reader'

reader = CsvReader.new

ARGV.each do |csv_file_name|
  STDERR.puts ""Processing the thing""
  reader.read_in_csv_data(csv_file_name)
end

puts ""Total Value = #{reader.total_value_in_stock}""
</code></pre>

<p>Is the <code>read_in_csv_data</code> method doing the same job as an accessor method?</p>
","2988","","<p><code>attr_accessor</code> creates two methods that would look roughly like this if you were to write them by hand:</p>

<pre><code>def price
  @price
end

def price=(new_price)
  @price = new_price
end
</code></pre>

<p>You are never calling any of those methods, so it is irrelevant whether they exist or not.</p>
"
"<p>Recently I had to add a method to Redmine's core class. I was unable to use inheritance, so I've done something like this:</p>

<pre><code>require_dependency 'time_entry_query'
class TimeEntryQuery &lt; Query
    def my_new_method(foo, bar)
    end
end
</code></pre>

<p>and it works perfectly - my method is added to all new objects. However, I've seen someone declaring the new method in their own module instead and then sending :include to class, so it become a mixin. Here's an example:</p>

<pre><code>module Patches
  module SomeClassPatch
    def my_new_method
    end
end
</code></pre>

<p>and somewhere in app's initialization:</p>

<pre><code>SomeClass.send(:include, Patches::SomeClassPatch) unless SomeClass.include? (Patches::SomeClassPatch)
</code></pre>

<p>What's difference between these two methods and which one should I use?</p>
","2988","","<p>There are two differences:</p>

<ol>
<li><p>When you use a mixin, there is a clear place where your ""patch"" methods can live. If I wonder ""Hmm, where's this <code>my_new_method</code>"" coming from, and I look at, say, <code>TimeEntryQuery.ancestors</code> or <code>TimeEntryQuery.instance_method(:my_new_method).owner</code>, that will return <code>Patches::SomeClassPatch</code>. So I know I have to look for a file named <code>lib/patches/some_class_patch.rb</code> somewhere to find where it is probably defined. (I could try <code>source_location</code> as well, but that is not always reliable.)</p></li>
<li><p>Mixing in a module into a class makes the module the superclass of the class it is being mixed into. So, if there already is a <code>my_new_method</code> defined in <code>TimeEntryQuery</code>, your first option will overwrite it, whereas in your second option, your method will become the <code>super</code> method of that method. IOW: with your second option, your new method won't be called unless the already existing method calls <code>super</code>.</p></li>
</ol>
"
"<p>I'm currently creating a my own plugin for Redmine. I found the following method in its core (not exact code, but the idea is preserved):</p>

<pre><code>def method(foo, bar, array)
    # Do some complex stuff with foo and bar

    @array = array
    @array.uniq!
    @array = @array[0:3]

    # Do some complex weird stuff with @array
end
</code></pre>

<p>I have to change this '3' to '6', because three elements in array is not enough for my plugin's purposes. I can change it manually and nothing crashes, but I don't want to patch Redmine's core. So, I'm writing a plugin which replaces this method with my own implementation, which does the same thing, but three is changed to six.</p>

<p>Here's the problem: if this file updates, outdated method will be used. Is there any way to check what's written inside method in runtime (for example, when server starts)?</p>

<p>By the way, is there any method to directly modify this constant without overriding the whole method?</p>
","2988","","<p>No, there is no way to get a method's source code at runtime in Ruby. On some Ruby implementations there may be a way to get the source code which works some of the time, but that will be neither reliable nor portable. After all, there isn't even a guarantee that the source code will even be Ruby, since most implementations allow you to write methods in languages other than Ruby (e.g. C in YARV, Java in JRuby etc.)</p>
"
"<p>Short version:</p>

<p>Is there something similar to <a href=""http://php.net/manual/en/tokens.php"" rel=""nofollow"">PHP parser tokens</a> in other interpreted languages (Python, Ruby, etc.) and compiled languages (the C family, Java, etc.)?</p>

<p>Long Version:</p>

<p>On <a href=""http://cpprocks.com/"" rel=""nofollow"">the CPP Rocks website</a> there is <a href=""http://cpprocks.com/cpp-ruby-coffeescript-language-complexity/"" rel=""nofollow"">an article showing a visual comparison of language complexity</a> by means of a graph that breaks down the various building blocks of a language into categories. The graph for Coffeescript looks like this:</p>

<p><img src=""http://i.stack.imgur.com/4M9PN.png"" alt=""enter image description here""></p>

<p>I wanted to make such a graph for PHP using <a href=""http://php.net/manual/en/tokens.php"" rel=""nofollow"">the parser tokens</a> as a starting point (to make sure I don't miss anything and because I'm lazy). I was wondering if there is something similar to these tokens in other in other interpreted languages (Python, Ruby, etc.) and compiled languages (the C family, Java, etc.).</p>

<p>Findings thus far:</p>

<ul>
<li>Java: the Chapters of the Language Specification describing <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-18.html"" rel=""nofollow"">Syntax</a> and  <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html"" rel=""nofollow"">Lexical Structure</a> seem a good place to start.</li>
<li>Python: Chapter 2 of the manual does describe <a href=""http://docs.python.org/3/reference/lexical_analysis.html"" rel=""nofollow"">Python's lexical structure</a>. </li>
<li>Ruby: <a href=""https://github.com/ruby/ruby/blob/trunk/lib/irb/ruby-token.rb"" rel=""nofollow"">the token list for Ruby</a>. </li>
</ul>
","2988","","<p>There is no such thing as a list of tokens for a language. Tokens are a property of the parser (more precisely: they are a property of the interface between the lexer and the parser), not the language. A different parser parsing the same language may use a completely different set of tokens. Many modern parsers are lexerless which means they don't have tokens <em>at all</em>.</p>

<p>In Ruby, for example, Melbourne (the parser used by Rubinius) uses a very different set of tokens than RedParse/RubyLexer (used by all sorts of projects) which again uses a very different set of tokens than the ANTLR-based parser used by XRuby and Sapphire in Steel.</p>
"
"<p>I'm including several modules in a Ruby class (in Ruby 2.0.0p247), some that define the same instance method and are all included in the same class. I'd like some code to generate a hash of each method name symbol to the list of classes in the inheritance hierarchy that implement that method, in order that they would be executed. How would I do that?</p>

<p>(That way I know when I call each <code>x</code> method, if each were to do <code>super if defined?(super)</code>, I know the order of method execution.)</p>

<p>E.g. given class C that implements instance method x, where C includes modules A and B that both implement instance method x, then I could use some code to inspect C to result in something like:</p>

<pre><code>=&gt; {:x=&gt;[C, A, B], ...}
</code></pre>

<p><em>To clarify, I want to know all of the methods that are inherited through modules and class inheritance, not just those that were defined on C.</em></p>

<p><em>Another example to show what I'm looking for:</em></p>

<pre><code>module A
  def v
  end
  def x
  end
end

module B
  def x
  end
  def y
  end
end

module D
  def a
  end
end

class E
  include A, B
  def x
  end
  def y
  end
  def z
  end
end

class C &lt; E
  include D
end
</code></pre>

<p><em>For that the result for C should be:</em></p>

<pre><code> =&gt; {:a=&gt;[D], :x=&gt;[E, A, B], :y=&gt;[E, B], :z=&gt;[E], :v=&gt;[A], :nil?=&gt;[Kernel], :====&gt;[Kernel], :=~=&gt;[Kernel], :!~=&gt;[Kernel], :eql?=&gt;[Kernel], :hash=&gt;[Kernel], :&lt;=&gt;=&gt;[Kernel], :class=&gt;[Kernel], :singleton_class=&gt;[Kernel], :clone=&gt;[Kernel], :dup=&gt;[Kernel], :taint=&gt;[Kernel], :tainted?=&gt;[Kernel], :untaint=&gt;[Kernel], :untrust=&gt;[Kernel], :untrusted?=&gt;[Kernel], :trust=&gt;[Kernel], :freeze=&gt;[Kernel], :frozen?=&gt;[Kernel], :to_s=&gt;[Kernel], :inspect=&gt;[Kernel], :methods=&gt;[Kernel], :singleton_methods=&gt;[Kernel], :protected_methods=&gt;[Kernel], :private_methods=&gt;[Kernel], :public_methods=&gt;[Kernel], :instance_variables=&gt;[Kernel], :instance_variable_get=&gt;[Kernel], :instance_variable_set=&gt;[Kernel], :instance_variable_defined?=&gt;[Kernel], :remove_instance_variable=&gt;[Kernel], :instance_of?=&gt;[Kernel], :kind_of?=&gt;[Kernel], :is_a?=&gt;[Kernel], :tap=&gt;[Kernel], :send=&gt;[Kernel], :public_send=&gt;[Kernel], :respond_to?=&gt;[Kernel], :extend=&gt;[Kernel], :display=&gt;[Kernel], :method=&gt;[Kernel], :public_method=&gt;[Kernel], :define_singleton_method=&gt;[Kernel], :object_id=&gt;[Kernel], :to_enum=&gt;[Kernel], :enum_for=&gt;[Kernel], :===&gt;[BasicObject], :equal?=&gt;[BasicObject], :!=&gt;[BasicObject], :!==&gt;[BasicObject], :instance_eval=&gt;[BasicObject], :instance_exec=&gt;[BasicObject], :__send__=&gt;[BasicObject], :__id__=&gt;[BasicObject]} 
</code></pre>
","2988","","<pre><code>Hash[
  C.instance_methods.map {|m|
    [m, C.ancestors.select {|a| a.instance_methods(false).include?(m)}]}]
# =&gt; { x: [C, A, B] }
</code></pre>
"
"<p>As far as I understand the Array class already mixes in the Enumerable module.</p>

<p>If that's so, why isn't there <code>[:example].next</code>? </p>

<p>Why do I need to make it <code>[:example].to_enum.next</code>?</p>
","2988","","<p><code>to_enum</code> has nothing to do with <code>Enumerable</code>, it returns an <code>Enumerator</code>. <code>Array</code> doesn't have a <code>next</code> method because <code>next</code> is an <code>Enumerator</code> method, not an <code>Enumerable</code> method.</p>
"
"<p>Much is written about the advantages of immutable state, but are there common cases in Scala where it makes sense to prefer mutable classes?  (This is a Scala newbie question from someone with a background in ""classic"" OOP design using mutable classes.)</p>

<p>For something trivial like a 3-dimensional Point class, I get the advantages of immutability.  But what about something like a Motor class, which exposes a variety of control variables and/or sensor readings?  Would a seasoned Scala developer typically write such a class to be immutable?  In that case, would 'speed' be represented internally as a 'val' instead of a 'var', and the 'setSpeed' method return a new instance of the class?  Similarly, would every new reading from a sensor describing the motor's internal state cause a new instance of Motor to be instantiated?</p>

<p>The ""old way"" of doing OOP in Java or C# using classes to encapsulate mutable state seems to fit the Motor example very well.  So I'm curious to know if once you gain experience using the immutable-state paradigm, you would even design a class like Motor to be immutable.</p>
","2988","","<p>I'll use a different, classic, OO modeling example: bank accounts.</p>

<p>These are used in practically every OO course on the planet, and the design you usually end up with is something like this:</p>

<pre><code>class Account(var balance: BigDecimal) {
  def transfer(amount: BigDecimal, to: Account): Unit = { 
    balance -= amount
    to.balance += amount
  }
}
</code></pre>

<p>IOW: the balance is <em>data</em>, and the transfer is an <em>operation</em>. (Note also that the transfer is a <em>complex</em> operation involving multiple mutable objects, which however should be <em>atomic</em>, not complex … so you need locking etc.)</p>

<p>However, that is <em>wrong</em>. That's not how banking systems are actually designed. In fact, that's not how actual <em>real-world</em> (physical) banking works, either. Actual physical banking and actual banking systems work like this:</p>

<pre><code>class Account(implicit transactionLog: TransactionLog) {
  def balance = transactionLog.foldLeft(_ + _)
}

class TransactionSlip(from: Account, to: Account, amount: BigDecimal)
</code></pre>

<p>IOW: the balance is an <em>operation</em> and the transfer is <em>data</em>. Note that everything here is immutable. The balance is just a left fold of the transaction log.</p>

<p>Note also that we didn't even end up with a purely functional, immutable design as an explicit design goal. We just wanted to model the banking system correctly and ended up with a purely functional, immutable design by coincidence. (Well, it's actually not by coincidence. There's a reason why real-world banking works that way, and it has the same benefits as it has in programming: mutable state and side-effects make systems complex and confusing … and in banking that means money disappearing.)</p>

<p>The point here is that the exact same problem can be modeled in very different ways, and depending on the model, you might up with something which is trivial to make purely immutable or very hard.</p>
"
"<p>I know you can't do nested methods in ruby, what I Want to know can I do something like:</p>

<pre><code>attr_reader :dimensions

def dimensions.seprate
  [self.dimensions[0],self.dimensions[1]]
end
</code></pre>

<p>and then I can use it like</p>

<pre><code>x,y = bar.dimensions.seprate
</code></pre>

<p>just as a way to semantically refer to helper methods that are related to one another.</p>

<p>would that work? </p>

<p>ff not is there away to do that or something like that?</p>
","2988","","<p>That's a perfectly valid name for a method. It is however not a valid Ruby identifier.</p>

<pre><code>define_method(:'dimensions.separate') do
  [dimensions[0], dimensions[1]]
end

x, y = bar.send(:'dimensions.separate')
</code></pre>
"
"<p>I recently came across <a href=""http://sporto.github.io/blog/2012/11/15/a-pattern-for-service-objects-in-rails/"">some code</a> using a method call consisting of the format <code>object.(arg1, arg2)</code>  without seeing a good explanation of how it works. See this sample code:</p>

<pre><code>class TestServiceObject
  def call
    'method'
  end
end

TestServiceObject.new.()
# =&gt; 'method'
</code></pre>

<p>What's the term for this kind of shorthand?</p>
","2988","","<pre><code>foo.(bar, baz)
</code></pre>

<p>is interpreted as </p>

<pre><code>foo.call(bar, baz)
</code></pre>

<p>just like </p>

<pre><code>foo + bar
</code></pre>

<p>is interpreted as </p>

<pre><code>foo.+(bar)
</code></pre>

<p>or </p>

<pre><code>foo[bar, baz] = quux
</code></pre>

<p>is interpreted as </p>

<pre><code>foo.[]=(bar, baz, quux)
</code></pre>

<p>The intention is to make calling function-like objects look similar to calling methods:</p>

<pre><code>foo.(bar, baz) # function
foo(bar, baz)  # method
</code></pre>

<p>Despite claims in other answers to this question, it has nothing to do with an ""implicit <code>call</code> method"" (Ruby doesn't even <em>have</em> implicit methods, only Scala does) or the indexing operator.</p>

<p>The indexing operator is translated into a different method call (<code>[]</code>) and <em>not</em> into a call to <code>call</code>:</p>

<pre><code>o = Object.new

def o.call(*args); ""`call` called with #{args.join(', ')}"" end

o.(42)
# =&gt; ""`call` called with 42""

o[42]
# NoMethodError: undefined method `[]' for #&lt;Object:0xdeadbeefc0ffee&gt;

def o.[](*args);   ""`[]` called with #{args.join(', ')}""   end

o[42]
# =&gt; ""`[]` called with 42""
</code></pre>
"
"<p>I believe i've seen a template engine that uses ruby-like syntax, such as:</p>

<pre><code>some_variable = 'bla bla'
res = div id:'yay' {
  button onclick: 'test()', class: 'btn btn-primary btn-xs'
  p some_variable
}
# generates: 
# &lt;div id='yay'&gt;
#   &lt;button onclick='test()' class='btn btn-primary btn-xs'&gt;&lt;/button&gt;
#   &lt;p&gt;bla bla&lt;/p&gt;
# &lt;/div&gt;
</code></pre>

<p>but i forgot the name of this template engine, anyone know the name of this template engine?</p>
","2988","","<p>This is just a standard implementation of the <em>Builder</em> design pattern in a language with first-class and higher-order subroutines. There are many such implementations in Ruby, including <code>XML::Builder</code>, Markaby, Erector and countless others.</p>
"
"<p>I'm trying to create a function that checks if two numbers within an array have a sum of zero.</p>

<pre><code>[1,2,3,4,5] =&gt; false
[1,2,3,-2,5] =&gt; true
</code></pre>

<p>This is what I have so far but I can't figure it out:</p>

<pre><code>def zero_sum?(arr)

  arr.each do |num|
    arr.each do |num2|
      if (num.to_i + num2.to_i) == 0
        true
      else
        false
      end
    end
  end

end
</code></pre>
","2988","","<p>You want to know whether any combination of 2 elements adds up to zero. You can pretty much write that down verbatim:</p>

<pre><code>arr.combination(2).any? {|a, b| (a + b).zero? }
</code></pre>
"
"<p>I have been counting occurences with a mutable map:</p>

<pre><code>var bar = collection.mutable.Map[Int, Int]().withDefaultValue(0)
</code></pre>

<p>Now <code>bar(a) += b</code> works just fine, no matter if the key <code>a</code> is present in <code>bar</code> already or not (in which case it will then be added).</p>

<p>I tried the same thing with a mutable map of mutable maps:</p>

<pre><code>var foo = collection.mutable.Map[Int, collection.mutable.Map[Int, Int]]().
          withDefaultValue(collection.mutable.Map().withDefaultValue(0))
</code></pre>

<p>How does <code>foo(a)(b) += x</code> look without syntactic sugar?</p>

<p>Using <a href=""http://stackoverflow.com/questions/2662984/what-are-all-the-instances-of-syntactic-sugar-in-scala"">What are all the instances of syntactic sugar in Scala?</a> I would assume it expands to:</p>

<pre><code>foo.apply(a).put(b, foo.apply(a).apply(b) + x)
</code></pre>

<p>But why does this not update <code>foo</code> itself accordingly like in the introductory example (i.e. <code>foo</code> will not have a dedicated value for key <code>a</code> if it wasn't present before)?</p>

<p><strong>Edit:</strong> As <a href=""http://stackoverflow.com/questions/19260564/how-does-fooab-x-work-in-scala#comment28548572_19260729"">Perseids pointed out</a>, <code>foo(a)(b) += x</code> will change the mutable default value. Is this a desired feature?
Using <code>getOrElseUpdate</code> as suggested by <a href=""http://stackoverflow.com/a/19260729/2860570"">DaoWen</a> seems to be the best way to overcome both problems. But while that works well for functions of type <code>Int =&gt; Int =&gt; Int</code> it becomes really cumbersome for functions of type <code>Int =&gt; Int =&gt; Int =&gt; Int =&gt; Int</code>. So I'm still happy for any suggestions!</p>
","2988","","<blockquote>
  <p>How does <code>foo(a)(b) += x</code> look without syntactic sugar?</p>
</blockquote>

<p>It depends on whether or not the object returned by <code>foo(a)(b)</code> has a method named <code>+=</code> or not. If it does, then it's equivalent to:</p>

<pre><code>foo.apply(a).apply(b).+=(x)
</code></pre>

<p>If it doesn't, then it's equivalent to:</p>

<pre><code>foo.apply(a).update(b, foo.apply(a).apply(b).+(x))
</code></pre>

<p>Except without the duplicate evaluation of <code>foo.apply(a)</code> (I think.)</p>
"
"<pre><code>class Something
  @b = [4432]
  def screen
    puts @b.class
  end
end
s = Something.new
s.screen
</code></pre>

<p>outputs 'Nilclass'. Was wondering, why does an instance variable which is defined inside a class always part of NilClass?</p>
","2988","","<p>Instance variables belong to an object (aka an instance), that's why they are called instance variables. Every instance has its own instance variables.</p>

<p>In your case, there are two objects: <code>Something</code> (which is an instance of <code>Class</code>) and <code>s</code> (which is an instance of <code>Something</code>). Each of those two objects has its own set of instance variables. <code>Something</code> has an instance variable called <code>@b</code> which points to <code>[4432]</code>. <code>s</code> has no instance variable named <code>@b</code> because you never assign to it, and uninitialized instance variables evaluate to <code>nil</code>.</p>
"
"<p>Here is a spec I am supposed to make happen by creating a new method in <code>Fixnum</code>:</p>

<pre><code>it ""reads trillions"" do
    1_000_000_000_000.in_words.should == 'one trillion'
    1_000_000_000_001.in_words.should == 'one trillion one'
    1_888_259_040_036.in_words.should == 'one trillion eight hundred eighty eight billion two hundred fifty nine million forty thousand thirty six'
  end
</code></pre>

<p>The problem is, <code>1_000_000_000_000</code> is not considered a <code>Fixnum</code>, but a <code>Bignum</code>.</p>

<p>My first thought is to go ahead and add the new method to <code>Bignum</code> as well.</p>

<p>Am I missing the point of the assignment or is there a way to force <code>Fixnum</code> to deal with numbers this large?</p>

<p><img src=""http://i.stack.imgur.com/Kkxyg.jpg"" alt=""enter image description here""></p>
","2988","","<p>This is just not possible. There is nothing in the Ruby Language Specification which guarantees that a certain integer does or does not fit within a <code>Fixnum</code>. That is entirely implementation-dependent. On YARV, <code>Fixnum</code>s are 31 bit or 63 bit, depending on the processor ISA. On JRuby, they are 64 bit, always. On other implementations they may be bigger or smaller or even both, depending on the environment.</p>

<p>In my personal opinion: <code>Fixnum</code>s are a performance-optimization. They should not be exposed to the programmer <em>at all</em>.</p>

<p>There is an abstract base class for both <code>Fixnum</code> and <code>Bignum</code> called <code>Integer</code> which you should (almost) always use.</p>
"
"<p>I'm using ruby-head and Debian wheezy x64. When I run a multithreaded ruby script, htop shows that it's using multiple cores visually with the bars at the top, and that it's using 100% CPU on the process list but it's only using 100% of the capacity of one core. I assume it's possible to have multiple cores running at 100% and this number seems too convenient to be bottle-necked by either the program logic or another hardware aspect. Is the OS limiting the amount of available instructions I'm using, if so how do I stop this?</p>

<p>EDIT more info:</p>

<p>When I mean visually using multiple cores e.g.: 47% core 1, 29% core 2, and 24% core 3. These percentages are constantly shifting up and down and to different sets of cores, but always collectively add up to 100%-102%. More than 3(/8 total) cores are being used, but any cores other than the three most burdened only utilize 2% or less capacity. I guess I should also mention this is a linode VPS.</p>

<p>EDIT:</p>

<p>Well it looks like I was reading promises that 2.0 would feature true parallel threads, and not actual release information. Time to switch to Jruby...</p>
","2988","","<p>You failed to mention which Ruby implementation you are using. Not all Ruby implementations are capable of scheduling Ruby threads to multiple CPUs.</p>

<p>In particular: </p>

<ul>
<li>MRI implements Ruby threads as green threads inside the interpreter and schedules them itself; it cannot schedule more than one thread at a time and it cannot schedule them to multiple CPUs</li>
<li>YARV implements Ruby threads as native OS threads (POSIX threads or Windows threads) and lets the OS schedule them, however it puts a Giant VM Lock (GVL) around them, so that only one Ruby thread can be running at any given time</li>
<li>Rubinius implements Ruby threads as native OS threads (POSIX threads or Windows threads) and lets the OS schedule them, however it puts a Global Interpreter Lock (GIL) around them, so that only one Ruby thread can be running at any given time; Rubinius 2.0 is going to have fine-grained locks so that multiple Ruby threads can run at any given time</li>
<li>JRuby implements Ruby threads as JVM threads and uses fine-grained locking so that multiple threads can be running; however, whether or not those threads are scheduled to multiple CPUs depends on the JVM being used, some allow this, some don't</li>
<li>IronRuby implements Ruby threads as CLI threads and uses fine-grained locking so that multiple threads can be running; however, whether or not those threads are scheduled to multiple CPUs depends on the VES being used, some allow this, some don't</li>
<li>MacRuby implements Ruby threads as native OS threads and uses fine-grained locking so that multiple threads can be running on multiple CPUs at the same time</li>
</ul>

<p>I don't know enough about Topaz, Cardinal, MagLev, MRuby and all the others.</p>
"
"<p>Referring to the answer of the following question:</p>

<p><a href=""http://stackoverflow.com/questions/9686213/list-empty-vs-list-vs-new-list"">List.empty vs. List() vs. new List()</a></p>

<p>How did the developers of Scala map the method <code>apply[A](xs: A*)</code> defined in the <code>List</code> <strong>object</strong>, to be usable as <code>List[A](cs: A*)</code>?</p>

<p>Also how did they translate <code>aListInstance(n: Int)</code> to the method <code>apply(n: Int)</code> (which returns the n'th element of the list) defined in the <code>List</code> <strong>class</strong>?</p>

<p>In both cases I'm calling the <code>apply()</code> methods without writing <code>.apply()</code> in my code. How does that work?</p>
","2988","","<p>It works because the Scala Language Specification says so.</p>

<pre><code>foo(bar)
</code></pre>

<p>is translated to </p>

<pre><code>foo.apply(bar)
</code></pre>

<p>just like </p>

<pre><code>foo.bar = baz
</code></pre>

<p>is translated to </p>

<pre><code>foo.bar_=(baz)
</code></pre>

<p>and </p>

<pre><code>foo(bar) = baz
</code></pre>

<p>is translated to</p>

<pre><code>foo.update(bar, baz)
</code></pre>

<p>and </p>

<pre><code>foo bar baz
</code></pre>

<p>is translated to </p>

<pre><code>foo.bar(baz)
</code></pre>

<p>and </p>

<pre><code>foo bar_: baz
</code></pre>

<p>is translated to </p>

<pre><code>baz.bar_:(foo)
</code></pre>

<p>and so on and so forth.</p>
"
"<p>I have an example in F#:</p>

<pre><code>let a n = Convert.ToString(n:int32)
</code></pre>

<p>And I can say:</p>

<pre><code>3 |&gt; a
</code></pre>

<p>which evaluates to <code>""3""</code>. Is there a similar construct in Ruby?  </p>

<p>This is F#'s (and other FP languages') method chaining, which is not function composition, nor is it method chaining in Ruby, i.e., objects that return self so that other methods on the object can be called as in <code>a.b.c.d</code>.</p>
","2988","","<p>This is pretty easy to implement in Ruby. Taken directly from the F# Reference Documentation:</p>

<pre><code>let function1 x = x + 1
let function2 x = x * 2

let result = 100 |&gt; function1 |&gt; function2
//&gt; val result : int = 202
</code></pre>

<p>This can be written in Ruby as follows:</p>

<pre><code>function1 = -&gt; x { x + 1 }
function2 = -&gt; x { x * 2 }

result = 100.pipe(function1).pipe(function2)
# =&gt; 202
</code></pre>

<p>With the following implementation of <code>Object#pipe</code>:</p>

<pre><code>class Object
  def pipe(callable)
    callable.(self)
  end
end
</code></pre>

<p>Or with your example:</p>

<pre><code>a = -&gt; n { String(n) }

3.pipe(a)
# =&gt; '3'
</code></pre>

<p>And </p>

<pre><code>let f x y = x * y

3 |&gt; f(2)
// &gt; 6
</code></pre>

<p>becomes </p>

<pre><code>f = -&gt; (x, y) { x * y }

3.pipe(f.curry.(2))
# =&gt; 6
</code></pre>
"
"<p>I'm trying to understand the purpose of a Ruby module from a design pattern perspective.</p>

<p>Is a Ruby module essentially just a class that is only initialized once?</p>

<p><code>include MyModule</code></p>
","2988","","<p>Modules have two uses in Ruby: namespacing of constants and as mixins.</p>

<p>Namespacing of constants simply means that in </p>

<pre><code>FOO = 1

module Bar
  FOO = 2
end

module Baz
  FOO = 3
end
</code></pre>

<p>there are three different <code>FOO</code>s in three different namespaces: one in the global namespace (which is actually <code>Object</code>), one in <code>Bar</code> and one in <code>Baz</code>.</p>

<p>The more interesting use case is mixins: a mixin is basically a class which is parameterized over its superclass. Or, to put it another way: a mixin is a class that can appear multiple times in the inheritance graph, each time with a different superclass.</p>

<p>Contrast this with multiple inheritance: in multiple inheritance, a class can only appear <em>once</em> in the inheritance graph, but it may have <em>multiple</em> superclasses. A mixin may appear <em>multiple</em> times in the inheritance graph, but each occurrence has only <em>one</em> superclass.</p>

<p>In particular, what happens in Ruby when you mix a module <code>M</code> into a class <code>C</code> is that an <em>actual</em> class (a so-called <em>include class</em>) is created (let's call it <code>M′</code>) whose method table, constant table and variable table pointers point to <code>M</code>'s method table, constant table and variable table, and that class <code>M′</code> becomes <code>C</code>'s superclass with the old superclass becoming <code>M′</code>'s superclass.</p>
"
"<p>I have this software from another programmer who has left the project. Now I have a problem, some of the URLs with GET variables wont work i think it's because of the # so this URL looks like this.</p>

<p>www.domain.com/myvariable1/myvariable-#2</p>

<p>so as you can see the GET variable only parses 'myvariable-' so the #2 is cutted off. I need to have the full 'myvariable-#2'</p>

<p>I have searched google and spent hours to get this resolved. Please help me. Thank you!</p>

<hr>

<p>EDIT:</p>

<p>So I found a solution in doing this. I parse the whole URL using javascript, and from there I can now get the remaining string after the #</p>

<p>Thank you for all the answers. Thanks a lot!</p>
","2988","Jörg W Mittag","<p>The <code>#</code> starts a fragment identifier. Fragments are handled client-side, that part of the URI isn't even sent to the server in the first place, so you simply <em>cannot</em> handle it there.</p>
"
"<p>Is it possible to monkey-patch a method with a bang at the end?</p>

<p>I want to monkey-patch <code>String.upcase!</code>, but I don't know how to achieve that.</p>

<p>The problem is that I want to change the original string object.</p>

<p>Here's an example:</p>

<pre><code>class String
  def upcase!
    self.mb_chars.upcase.to_s
  end
end
</code></pre>

<p>Now if I type that in console and try it out, it doesn't work:</p>

<pre><code>[1] pry(main)&gt; asd=""asd""
=&gt; ""asd""
[2] pry(main)&gt; asd.upcase
=&gt; ""ASD""
[3] pry(main)&gt; asd
=&gt; ""asd""
[4] pry(main)&gt; asd.upcase!
=&gt; ""ASD""
[5] pry(main)&gt; asd
=&gt; ""asd""
</code></pre>
","2988","","<p>The bang is just part of the method name. It has absolutely no special meaning whatsoever. You write a method with a bang at the end the exact same way you write a method with an 'o' or a 'z' at the end.</p>
"
"<p>I'm in the process of learning Ruby, taking a Berkeley's MOOC, and, in some of these MOOC's homework we have an exercise that says:</p>

<blockquote>
  <p>Define a method sum_to_n? which takes an array of integers and an
  additional integer, n, as arguments and returns true if any two
  elements in the array of integers sum to n. An empty array should sum
  to zero by definition.</p>
</blockquote>

<p>I already created two methods that can do the job, but I'm not comfortable with any of them because I think they are not written in the Ruby Way. I hope some of you can help me to learn which would be the right way!</p>

<p>The first method I made uses the <code>each</code> method for both iterations, but what I don't like about this method is that every number is summed with every other number, even with the same number, doing something like this:</p>

<pre><code>arr[1, 2, 3, 4] =&gt; 1+1, 1+2, 1+3, 1+4, 2+1, 2+2, 2+3, 2+4, 3+1, 3+2... 4+3, 4+4
</code></pre>

<p>As you can see, there's a lot of repeated sums, and I don't want that.</p>

<p>This is the code:</p>

<pre><code>def sum_to_n?(arr, n)
  arr.each {|x| arr.each {|y| return true if x + y == n &amp;&amp; x != y}}
  return true if n == 0 &amp;&amp; arr.length == 0
  return false
end
</code></pre>

<p>With the other method I got what I wanted, just a few sums without repeating any of them or even summing the same numbers, but it looks HORRIBLE, and I'm pretty sure someone would love to kill me for doing it this way, but the method does a great job as you can see:</p>

<pre><code>arr[1, 2, 3, 4] =&gt; 1+2, 1+3, 1+4, 2+3, 2+4, 3+4
</code></pre>

<p>This is the code:</p>

<pre><code>def sum_to_n?(arr, n)
  for i in 0..arr.length - 1
    k = i + 1
    for k in k..arr.length - 1
      sum = arr[i] + arr[k]
      if sum == n
        return true
      end
    end
  end
  return true if n == 0 &amp;&amp; arr.length == 0
  return false
end
</code></pre>

<p>Well, I hope you guys have fun doing a better and prettier method as I did trying.</p>

<p>Thank you for your help. </p>
","2988","","<p>I'd write it like this:</p>

<pre><code>def sum_to_n?(arr, n)
  return true if arr.empty? &amp;&amp; n.zero?
  arr.combination(2).any? {|a, b| a + b == n }
end
</code></pre>

<p>That seems to be a pretty Rubyish solution.</p>
"
"<p>I'm monkey-patching Array to add my own method <code>Array#left_outer_join</code>. Since I'm new to Ruby, I want to do pretty things and have a method that'll return a new array and a bang method that will replace my current one. However, I ended up writing the same code twice with the only difference between non-bang and bang method being a call to map or map! respectively.</p>

<p>I've read a bit on blocks and metaprogramming and ended up with the following:</p>

<pre><code>class Array
  def left_outer_join_proc(method, ary, &amp;block)
    self.send(method) do |obj1|
      ary.each do |obj2|
        if yield obj1, obj2
          obj2.keys.each do |key|
            obj1[key] = obj2[key]
          end
          break
        end
      end
      obj1
    end
  end

  def left_outer_join(ary, &amp;block)
    left_outer_join_proc(:map, ary, &amp;block)
  end

  def left_outer_join!(ary, &amp;block)
    left_outer_join_proc(:map!, ary, &amp;block)
  end
end

events.left_outer_join!(users) {|event, user| event['user_id'] == user['user_id'] }
</code></pre>

<p>So far this works just fine, <code>Object.send</code> is (according to SO) the best use to dynamically call a method and I kinda like this approach (though the purist in me loathes polluting the <code>Array</code> class with a third method).</p>

<p>The question now: what are the best practices to define both a non-bang and a bang method and keep it DRY?</p>

<p>EDIT: This question is not about ""does bang method mean destructive method?"" but really about ""If I were to write <code>Array#add_two</code> and <code>Array#add_two!</code>, how could ensure I don't have to define a method with <code>map{|x| x +2 }</code> and another with <code>map!{|x| x + 2 }</code>.</p>

<p>I know I could use </p>

<pre><code>def add_two!(x)
  self = add_two(x)
end 
</code></pre>

<p>but I'm asking for a ""best performance, best readability"" type of answer (Look at <a href=""http://ruby-doc.org/core-2.0.0/Array.html#method-i-map-21"" rel=""nofollow"">the sources</a> for <code>Array#map</code> and <code>Array#map!</code> to see the 'subtle' performance difference) .</p>
","2988","","<p>Some objects (e.g. <code>Array</code>s or <code>String</code>s) have a method that allows you to replace the entire internal state of the object with the state of another object of the same type. This method is typically aptly named <code>replace</code>. For objects which have such a method, you can simply implement the destructive method in terms of <code>replace</code> and the non-destructive method:</p>

<pre><code>def foo
  # return new instance
end

def foo!
  replace(foo)
  nil # or self
end
</code></pre>

<p>Conversely, all objects have a method which creates a duplicate copy with identical internal state, called <code>dup</code>. You can implement the non-destructive version in terms of <code>dup</code> and the destructive version:</p>

<pre><code>def foo!
  # modify internal state
  nil # or self
end

def foo
  dup.foo!
end
</code></pre>

<p>There may be cases, however, where the destructive and non-destructive versions can be made more efficient by implementing them differently. In that case, some duplication probably can't be avoided.</p>

<p>Note that </p>

<pre><code>self = add_two(x)
</code></pre>

<p>doesn't work. It isn't even syntactically valid. And even if it <em>were</em> syntactically valid, it would simply assign to a local variable named <code>self</code> and not change the special keyword <code>self</code>.</p>
"
"<p>I often create small lambdas inside my functions to handle repeated tasks, for instance (contrived example):</p>

<pre><code>def some_method(foo)
  match = SOME_REGEX.match foo

  has_component = lambda { |name|
    match.names.include? name and not match[name].nil?
  }

  if has_component.call(""street_name"")
    # ...
  end

  if has_component.call(""house_number"")
    # ...
  end

  if has_component.call(""entrance"")
    # ...
  end

  # ...
end
</code></pre>

<p>Now I don't know about you, but I would much rather write:</p>

<pre><code>  if has_component ""street_name""
    # ...
  end

  if has_component ""house_number""
    # ...
  end

  if has_component ""entrance""
    # ...
  end
</code></pre>

<p>I'm not familiar with the inner workings of Ruby, but is there anything I can do with my lambda/proc to make it callable as if it was a <code>def</code>ined function?</p>

<p>There are multiple reasons why I don't want to define the lambda/proc on a class level as a method. Among other things, it won't have access to the scope of the caller.</p>
","2988","","<p>Starting with Ruby 1.9.0, there is syntactic sugar for <code>call</code>:</p>

<pre><code>b.call(1, 2, 3)
b.(1, 2, 3)
</code></pre>

<p>This one is the preferred way, since it works with <em>everything</em> that responds to <code>call</code>, not just <code>Proc</code>s.</p>

<p>Alternatively, you could just define a shorter method name:</p>

<pre><code>class Proc
  alias_method :c, :call
end

b.c(1, 2, 3)
</code></pre>

<p>Or an even shorter method name:</p>

<pre><code>class Proc
  alias_method :[], :call
end

c[1, 2, 3]
</code></pre>

<p>And in fact, the latter one is already defined in the Ruby core library.</p>

<p>It is not possible to make calling <code>Proc</code>s look like calling methods, because there is an ambiguity: does <code>b(1, 2, 3)</code> mean ""call method <code>b</code> with arguments <code>1, 2, 3</code>"" or does it mean ""call method <code>b</code> without arguments (or dereference local variable <code>b</code>) and call the <code>Proc</code> returned by <code>b</code> with arguments <code>1, 2, 3</code>""? In ECMAScript and Python, this works because they simply don't allow calling methods without parentheses, so this ambiguity never arises.</p>
"
"<p>Is there a way to do something like this:</p>

<pre><code>&gt;Location.get_info 
......
&gt;Location.get_info --help
outputs info on the location; lazily loads hours 
</code></pre>

<p>where the output is embedded as maybe an rdoc style comment? I am looking to be able to have quick documentation for a set of seed commands for our rails app</p>

<p>thx</p>
","2988","","<p>Methods aren't objects, therefore you cannot store anything in them.</p>

<p>You <em>can</em> obtain a proxy object for a bound method using the <code>Object#method</code> method and for an unbound method using the <code>Module#instance_method</code> method, but that proxy object is, well, just a proxy object. In particular, it is not guaranteed that you will always get the same proxy object when you ask for one.</p>

<p>So, if you obtain a proxy object for a method, then store some documentation in it, then later obtain another proxy object for the same method, this might be a different proxy object which doesn't have your documentation in it.</p>

<p>Example:</p>

<pre><code>class UnboundMethod
  attr_accessor :doc
end

map = Array.instance_method(:map)

map.doc = '`map` maps a block over all elements'

map_again = Array.instance_method(:map)

map_again.doc
# =&gt; nil

map.doc
# =&gt; '`map` maps a block over all elements'

map.object_id == map_again.object_id
# =&gt; false
</code></pre>

<p>So, you cannot store your documentation in the method, because methods aren't objects and you cannot store it in the proxy object, because Ruby doesn't guarantee the identity of those proxy objects.</p>

<p>You need to store it somewhere else. Maybe in the <code>Module</code> the method is defined in, indexed by the method name.</p>
"
"<p>Here is the pseudo-code of what I want to do:</p>

<pre><code>if @current_user is defined then puts @current_user.name
</code></pre>
","2988","","<p>Do you <em>really</em> need to know whether the variable is defined or is it enough to know whether it contains a valid <code>User</code> object?</p>

<p>Instance variables will never raise a <code>NameError</code>, even when they are not defined. They just evaluate to <code>nil</code>, so you can just check for that:</p>

<pre><code>puts @current_user.name unless @current_user.nil?
</code></pre>

<p>Since your question is tagged <a href=""/questions/tagged/ruby-on-rails"" class=""post-tag"" title=""show questions tagged 'ruby-on-rails'"" rel=""tag"">ruby-on-rails</a>, I'll assume that you have <code>ActiveSupport</code> loaded anyway, so you can also use the <code>Object#try</code> extension method:</p>

<pre><code>puts @current_user.try(:name)
</code></pre>
"
"<p>What does it mean to write this:</p>

<pre><code>abstract class Parser[+T] extends (Input =&gt; ParseResult[T]) { ... }
</code></pre>

<p>what does it extend from?</p>
","2988","","<p>It extends from <code>Input =&gt; ParseResult[T]</code>, which is syntactic sugar for <code>Function1[Input, ParseResult[T]]</code>.</p>
"
"<p>I'd like to write a quick method that can help me initialize a few fields in one of my ruby tables. This is what I have so far but it does not work. I would like to be able to feed an array of field names into this function so that I can get the whole initialization done in one loop. </p>

<pre><code>fields =[""field1"",""field2"",""field3"",""field4""]
tasks = Task.all

tasks.each do |task|
    fields.each do |field|
        if task.field.nil?
            task.update_attribute :field =&gt; true
        end
    end
end
</code></pre>
","2988","","<p>Maybe this is what you mean:</p>

<pre><code>fields = %w[field1 field2 field3 field4]
tasks = Task.all

tasks.each do |task|
  fields.each do |field|
    task.update_attribute :""#{field}"" =&gt; true if task.send(field).nil?
  end
end
</code></pre>
"
"<p>I am having a very strange question, although I am learning OOPS through C++ since last few months. That why there is a need of a construct like class?</p>
","2988","","<p>There is no need for classes in object-oriented programming. There are lots of languages which do just fine without them: Self, Io, Ioke, Seph, Slate, NewtonScript and ECMAScript have only objects, no classes. Other languages have mixins. Yet other languages have traits. Some languages have classes and mixins, some classes and traits.</p>

<p>The only thing you <em>really</em> need for object-orientation is some way to perform procedural abstraction. That's it. Lambda Calculus is a perfectly fine OO language, in fact, since it has <em>only</em> procedural (well, actually functional) abstraction and <em>nothing</em> else, one might argue that Lambda Calculus is the purest OO language of all.</p>
"
"<p>If I have the following method in Ruby:</p>

<pre><code>def foo(arg1, arg2 = ""bar"")
  puts arg1
  puts arg2
end
</code></pre>

<p>Is there a way of determining if a user passed a value in for <code>arg2</code> within the method? Obviously I could just add <code>if arg2 == ""bar""</code> to the method, but this doesn't catch the case where the user manually passed in <code>""bar""</code> herself. Of course, I could set the default to be something that no user would ever pass in, but then that gets pretty ugly pretty quickly.</p>

<p>Is there anything elegant out there?</p>
","2988","","<pre><code>def foo(arg1, arg2 = (arg2_was_passed = false; ""bar""))
  puts arg1
  puts arg2
  puts 'arg2 was passed' if arg2_was_passed
end
</code></pre>
"
"<p>What is the <code>| |</code> around <code>profile</code> below called, what does it mean, and why it is after <code>do</code>? I thought <code>do</code> is followed by a loop block or so.</p>

<pre><code>ticks = get_all[0...MAX].map do |profile|
</code></pre>
","2988","","<p>The pipe characters delimit the parameter list of a block definition just like parentheses delimit the parameter list of a method definition. So, in this code snippet:</p>

<pre><code>def foo(bar, baz) end

some_method_that_takes_a_block do |bar, baz| end
</code></pre>

<p>The parentheses and the pipes have the exact same purpose.</p>
"
"<p>If I have this in my main program:</p>

<pre><code>def hi
  puts 'hi'
end
self.hi
</code></pre>

<p>it won't work because <code>hi</code> is private. </p>

<p>I've learned that all methods in Ruby are public by default, but this doesn't seem to be the case, why?</p>
","2988","","<p>Methods are public by default, <em>except</em> for ""top-level procedures"". If you define something which <em>looks</em> like a top-level procedure, it will <em>actually</em> be defined as a <code>private</code> instance method of <code>Object</code>.</p>
"
"<p>I want to create both A.txt and a.txt</p>

<pre><code>f = codecs.open('A.txt', 'w', 'utf-8')
f = codecs.open('a.txt', 'w', 'utf-8')
</code></pre>

<p>But turned out it just created A.txt on windows.</p>

<p>Can it be forced to create case-sensitive file? If not on *nix.</p>
","2988","","<p>NTFS is case-insensitive. <code>A.txt</code> and <code>a.txt</code> are the same filename.</p>
"
"<p>I've been studying ruby and have been taking some exercises to see how much I have learned and I've come across this:</p>

<p>Q: Write a method, sum which takes an array of numbers and returns the sum of the numbers.</p>

<p>The answer was provided for the problem but I don't understand why or how. I would like some help from anyone to explain them for me in simple terms so that I can understand this. Please keep in mind that I'm new to programming.  Thank you.</p>

<p>A: </p>

<pre><code>def sum(nums)
  total = 0

  i = 0
  while i &lt; nums.count
    total += nums[i]

    i += 1
  end

  # return total
  total
end
</code></pre>
","2988","","<p>This is <em>horrible</em>. Whoever wrote doesn't understand the first thing about Ruby. He doesn't even understand much of programming, apparently. Just forget about it.</p>

<p>This is how a Rubyist or pretty much any other programmer would solve that problem:</p>

<pre><code>def sum(nums)
  nums.inject(0, :+)
end
</code></pre>

<p>Unlike the code that was provided to you, this doesn't use any concepts outside of some basic math. (Fold and Addition.)</p>
"
"<p>Is there a way to pass objects by value and not by reference in Ruby? For Example,</p>

<pre><code>class Person
  attr_accessor :name
end
def get_name(obj)
  obj.name = ""Bob""
  puts obj.name
end
jack = Person.new
jack.name = ""Jack""
puts jack.name
get_name(jack)
puts jack.name
</code></pre>

<p>the output should be</p>

<pre><code>Jack
Bob
Jack
</code></pre>

<p>instead of</p>

<pre><code>Jack
Bob
Bob
</code></pre>

<p>Any help would be appreciated.</p>
","2988","","<p>Ruby <em>is</em> pass-by-value. Always. Here's a simple program which demonstrates that fact:</p>

<pre><code>def foo(bar)
  bar = 'reference'
end

baz = 'value'

foo(baz)

puts ""Ruby is pass-by-#{baz}""
# Ruby is pass-by-value
</code></pre>

<p>What you are seeing is simply shared mutable state: if an object is mutable, it can be mutated, and if that object is visible through multiple references, then that mutation will be visible through multiple references. Simple as that. It doesn't matter if you call me ""Jörg"" like my friends do or ""son"" like my mom does, if I cut my hair, <em>both</em> of you will see that.</p>

<p>If you don't want your objects to be mutated, you need to make them immutable. For example:</p>

<pre><code>class Person
  attr_reader :name

  private

  attr_writer :name

  def initialize(name)
    self.name = name
  end
end

def get_name(obj)
  obj.name = ""Bob""
  puts obj.name
end

jack = Person.new('Jack')

puts jack.name
# Jack

get_name(jack)
# NoMethodError: private method `name=' called for #&lt;Person:0xdeadbeef081542 @name='Jack'&gt;

puts jack.name
# Jack
</code></pre>

<p>Now, your <code>Person</code> objects can no longer be changed by other objects. However, note that objects referenced by your <code>Person</code> objects obviously can <em>still</em> be changed:</p>

<pre><code>jack.name &lt;&lt; ' the Ripper'

puts jack.name
# Jack the Ripper

jack.name.replace('Bob')

puts jack.name
# Bob
</code></pre>

<p>If you want to protect against <em>that</em>, you need to make sure that all the objects referenced by your <code>Person</code> objects are <em>also</em> immutable. For example like this:</p>

<pre><code>class Person
  def initialize(name)
    self.name = name.freeze
  end
end

jack = Person.new('Jack)

jack.name &lt;&lt; 'the Ripper'
# RuntimeError: can't modify frozen String
</code></pre>

<p>Now, your <code>Person</code> objects are <em>truly</em> immutable. (At least as ""truly"" as can be in a language with such powerful reflection capabilities as Ruby.)</p>

<p>Unfortunately, we have now done to someone else the very same thing we are trying to protect ourselves against: we are mutating <em>their</em> objects! In <code>Person#initialize</code>, we mutate the <code>String</code> that is passed in by <code>freeze</code>ing it. If the method that created the <code>Person</code> wants to do something else with the <code>String</code>, they are in for a nasty surprise:</p>

<pre><code>name = 'Jack'

jack = Person.new(name)

name &lt;&lt; ' the Ripper'
# RuntimeError: can't modify frozen String
</code></pre>

<p>We can fix that by making a copy of the <code>String</code> first, before <code>freeze</code>ing it:</p>

<pre><code>class Person
  def initialize(name)
    self.name = name.dup.freeze
  end
end

name = 'Jack'

jack = Person.new(name)

name &lt;&lt; ' the Ripper'
# =&gt; 'Jack the Ripper'
</code></pre>
"
"<p>In order to understand the functional programming part of ruby I want to write a function that takes 2 functions f(x,y),g(x) as arguments and returns a new function h(x,y)=f(g(x),g(y)).  </p>

<pre><code>def foo(x, y)
    return x+y
end

def bar(x)
    return 2*x
end

def comp(f,g)

end

f=comp(f,g)
f(1,2) #=&gt; 6
</code></pre>

<p>I tried things like</p>

<pre><code>def comp(f,g)
    mylambda = lambda {|x,y| return f(g(x),g(y))}
    return mylambda
end
f=comp(foo, bar)
f.call(1,2)
</code></pre>

<p>I thought f would be a Proc now, and I could just call it. But apparently ""in `foo': wrong number of arguments (0 for 2) (ArgumentError)""</p>

<p>What syntax would I have to use? And is it possible to return a ""real"" function instead of a Proc, so that instead of f.call(1,2) I could just writhe f(1,2) like if I had just defined f myself normaly?</p>
","2988","","<p>What you have there aren't functions, they are methods. Functions (more precisely: procedures) are defined like this: </p>

<pre><code>foo = -&gt; (x, y) { x + y }

bar = -&gt; x { 2 * x }

comp = -&gt; (f, g) { -&gt; (x, y) { f.(g.(x), g.(y)) } }

f = comp.(foo, bar)

f.(1, 2) #=&gt; 6
</code></pre>
"
"<p>I would like to ask Ruby experts for explaination.</p>

<p>I can't use something like <code>""foo-bar"": true</code>, but <code>foobar: true</code> works. Did anyone notice this? </p>

<h2>This works:</h2>

<p>In new Ruby syntax we can replace this hash rocket:</p>

<pre><code>&lt;%= f.submit ""Save"", :class =&gt; ""btn"" %&gt;
                     ^-------------^
</code></pre>

<p>with this</p>

<pre><code>&lt;%= f.submit ""Save"", class: ""btn"" %&gt;
                     ^----------^
</code></pre>

<h2>This doesn't:</h2>

<p>Now, how about symbols with two words? This doesn't work - syntax error!</p>

<pre><code>&lt;%= f.submit ""Save"", ""data-disable-with"": ""Saving..."" %&gt;
                     ^------------------------------^
</code></pre>
","2988","","<p>The JSON style <code>Hash</code> syntax is for <code>Hash</code>es whose keys are <code>Symbol</code>s which are valid Ruby identifiers. Your key is neither a <code>Symbol</code> (it's a <code>String</code>) nor a valid Ruby identifier (Ruby identifiers cannot contain a hyphen, because that creates an ambiguity with the binary infix <code>-</code> operator: does <code>a-b</code> mean the identifier <code>a-b</code> or does it mean ""subtract <code>b</code> from <code>a</code>, i.e. <code>a.-(b)</code>?)</p>
"
"<p>This is home work so I would prefer not to put up my code. I have 2 parallel arrays, 1.names 2. ages. The idea is to puts all ages less than 21. I can do this. The problem is that when I puts ""#{count}. #{names[count]}, #{ages[count]}"" &lt;---The beginning count prints out the index number or position of element in array. Obviously what I want is for it to start at 1. if there are three names...</p>

<ol>
<li>name, age</li>
<li>name, age</li>
<li>name, age</li>
</ol>

<p>NOT</p>

<p>5, name, age</p>

<p>6, name, age</p>

<p>I am using a while loop with an if statement. I don't need code, just would like some feedback to trigger more ideas. Thanks for your time, much appreciated. </p>

<pre><code>names[name1, name2, name3]
ages[age1, age2, age3]

#view all younger than 21
    count = 0
    while count &lt; names.length
      if ages[count] &lt; 21
        puts ""#{count}. #{names[count]}, #{ages[count]}"" #works
      end
      count += 1
    end
    pause
</code></pre>
","2988","","<p>You shouldn't have ""parallel arrays"" in the first place! Data that belongs together should be manipulated together, not separately.</p>

<p>Instead of something like</p>

<pre><code>names = %w[john bob alice liz]
ages  =   [16,  22, 18,   23 ]
</code></pre>

<p>You could, for example, have a map (called <code>Hash</code> in Ruby):</p>

<pre><code>people = { 'john' =&gt; 16, 'bob' =&gt; 22, 'alice' =&gt; 18, 'liz' =&gt; 23 }
</code></pre>

<p>Then you would have something like:</p>

<pre><code>puts people.select {|_name, age| age &gt; 21 }.map.
  with_index(1) {|(name, age), i| ""#{i}. #{name}, #{age}"" }
# 1. bob, 22
# 2. liz, 23
</code></pre>

<p>If you have no control over the creation of those parallel arrays, then it is still better to convert them to a sensible data structure <em>first</em>, and avoid the pain of having to juggle them in your algorithm:</p>

<pre><code>people = Hash[names.zip(ages)]
</code></pre>

<p>Even better yet: you should have <code>Person</code> objects. After all, Ruby is object-oriented, not array-oriented or hash-oriented:</p>

<pre><code>class Person &lt; Struct.new(:name, :age)
  def to_s
    ""#{name}, #{age}""
  end

  def adult?
    age &gt; 21
  end
end

people = [
  Person.new('john',  16), 
  Person.new('bob',   22), 
  Person.new('alice', 18), 
  Person.new('liz',   23)]

puts people.select(&amp;:adult?).map.with_index(1) {|p, i| ""#{i}. #{p}"" }
</code></pre>

<p>Again, if you don't have control of the creation of those two parallel arrays, you can still convert them <em>first</em>:</p>

<pre><code>people = names.zip(ages).map {|name, age| Person.new(name, age) }
</code></pre>
"
"<p>Just for cosmetic reasons, I'd like to provide a syntax for object instantiation from some of my classes, without the keyword 'new'. I never tried that, but I know it possible : for instance Matrix gem provides a syntax like :</p>

<pre><code>Matrix [ [1,2], [3,4] ] 
</code></pre>

<p>How could I do the same ?</p>
","2988","","<blockquote>
  <p>Just for cosmetic reasons, I'd like to provide a syntax for object instantiation from some of my classes, without the keyword 'new'.</p>
</blockquote>

<p><code>new</code> isn't a keyword. It's a method just like any other method. And you don't have to call it <code>new</code>, you can call it anything you like. For example, you can call it <code>call</code>:</p>

<pre><code>class Foo
  def initialize(val)
    puts ""Initialized with #{val}!""
  end

  class &lt;&lt; self; alias_method :call, :new end
end

foo = Foo.(42)
# Initialized with 42!
</code></pre>

<p>In Ruby, implementing <code>call</code> is equivalent to saying ""this is a function"". Anything which implements <code>call</code> is basically a function or can be treated as one. And if you think of <code>Class</code>es as factory functions for objects, then it even makes sense to do this.</p>

<p>If you think of <code>Class</code>es as functions, then you should also implement <code>to_proc</code> so that you can use them in place of blocks:</p>

<pre><code>class &lt;&lt; Foo
  def to_proc
    -&gt; var { new(var) }
  end
end

[23, 42].map(&amp;Foo)
# Initialized with 23!
# Initialized with 42!
# =&gt; [#&lt;Foo:0xdeadbeef081523&gt;, #&lt;Foo:0xdeadbeef081542&gt;]
</code></pre>

<p>In fact, you could do it globally:</p>

<pre><code>class Class
  alias_method :call, :new

  def to_proc
    -&gt; (*args, &amp;block) { new(*args, &amp;block) }
  end
end
</code></pre>

<p>Or you can call your factory method <code>[]</code>:</p>

<pre><code>class &lt;&lt; Foo; alias_method :[], :new end

foo = Foo[42]
# Initialized with 42!
</code></pre>

<p>In fact, this latter one is common practice for anything collection-like: <code>Array</code> and <code>Hash</code> from the core library, <code>Set</code>, <code>SortedSet</code> and <code>Matrix</code> from the standard library have such factory methods.</p>

<p>Another possibility is to define a method on <code>Kernel</code> with the same name as your class:</p>

<pre><code>module Kernel
  private

  def Foo(obj)
    Foo.new(obj)
  end
end

Foo(42)
# Initialized with 42!
</code></pre>

<p>Note, however, that this pattern is usually reserved for conversion methods that convert an object to an object of a different class unless that object is already of that class (see <code>Kernel#Array</code>, <code>Kernel#Integer</code> etc. for examples).</p>

<p>So, you would rather implement it like this (if at all):</p>

<pre><code>module Kernel
  private

  def Foo(obj)
    return obj if obj.is_a?(Foo)

    begin
      return obj.to_foo
    rescue NoMethodError =&gt; e
      return Foo.new(obj) if e.name == 'to_foo'
      raise
    end
  end
end

Foo(42)
# Initialized with 42!
</code></pre>
"
"<p>I want to get list of all installed packages on my machine using ruby gem or plugin. Functionality is similar to dpkg -l command on ubuntu. Is  there any appropriate ruby gem or plugin available to get the same?</p>
","2988","","<p>There is a Debian package called <code>ruby-debian</code> (in older Debian releases it is called <code>dpkg-ruby</code>) which contains Ruby bindings to <code>dkpg</code>.</p>

<p>Note: it relies on a C extension, so it will not work on Ruby implementations that don't support them, such as IronRuby.</p>
"
"<p>I'm looking into Ruby a little, and trying to set up a method that takes a block as a parameter. I know you do this by giving the last parameter an &amp; prefix, but once it's been passed, how can I verify it?</p>

<p>If I want to verify that an argument is a string, I could use <code>is_a?(String)</code>, for example.  But how do I verify that what I've received is a block that accepts 1 parameter? Or 2?</p>
","2988","","<p>Blocks aren't objects, so you can't do anything useful with them (except <code>yield</code> to them, of course).</p>

<p>I mean, there's no way to refer to them, they aren't even bound to a name:</p>

<pre><code>def foo
  yield 'foo'
end

foo do |bar| puts bar end
# foo
</code></pre>

<p>Inside <code>foo</code>, the block isn't bound to any variable, you cannot even refer to it, so you obviously cannot query it about its parameters either.</p>

<p>You <em>can</em> however ask Ruby to convert the block to a <code>Proc</code> and bind it to a parameter. Then, you can refer to it by name, <em>and</em> you have the full <code>Proc</code> API at your disposal, including <code>Proc#parameters</code>:</p>

<pre><code>def foo(&amp;blk)
  blk.parameters
end

foo do |m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
      ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk| end
# =&gt; [[:opt, :m1],
#     [:opt, :m2],
#     [:opt, :o1],
#     [:opt, :o2],
#     [:rest, :splat],
#     [:opt, :m3],
#     [:opt, :m4],
#     [:keyreq, :mk1],
#     [:keyreq, :mk2],
#     [:key, :ok1],
#     [:key, :ok2],
#     [:keyrest, :ksplat],
#     [:block, :blk]]
</code></pre>

<p>However, note that the idea of ""arity of a block"" is a hairy concept in Ruby, because of the loose parameter binding semantics of blocks. Parameter binding semantics of blocks are different than the parameter binding semantics of methods, in particular when it comes to arity:</p>

<ul>
<li>If the block only takes a single parameter, but multiple arguments are passed, that's not an error, instead the arguments are passed as a single <code>Array</code> bound to the parameter (as if the parameter had been declared as a <code>*splat</code> parameter).</li>
<li>If the block takes multiple parameters, but only a single argument is passed, that argument is converted to an <code>Array</code> and its individual elements are passed as arguments instead (as if they had been passed as a <code>*splat</code> argument).</li>
<li>If more arguments are passed than the block takes parameters, the extra arguments are ignored.</li>
<li>If fewer arguments are passed than the block takes parameters, the extra parameters are bound to <code>nil</code>.</li>
</ul>

<p>All in all, the semantics are closer to that of assignments than method calls.</p>

<p>For example, you will note that even though <code>m1</code> and <code>m2</code> are declared as mandatory positional parameters in the block, <code>Proc#parameters</code> lists their type as <code>:opt</code>, i.e. optional parameters.</p>

<p>In other words: even a block that declares only one parameter still takes two arguments, and a block that declares two parameters can be invoked with just one argument.</p>

<p>One example where this is useful: the entire <code>Enumerable</code> mixin is based on methods that <code>yield</code> a <em>single</em> element. However, for <code>Hash</code>, you <em>really</em> want to deal with <em>two</em> arguments, <code>key, value</code>. And you <em>can</em>, because <code>Hash#each</code> <code>yield</code>s an <code>Array</code> of two elements, and a block that declares two parameters but only receives one argument will ""splat"" that argument across its parameters, so that you end up with the key bound to <code>key</code> and the value bound to <code>value</code> without having to copy&amp;paste two-argument versions of all of <code>Enumerable</code>s methods.</p>
"
"<p>Okay, so Ruby is 'pass by value'. But how do you exactly define 'pass by reference' and 'pass by value' in Ruby? I've used this answer <a href=""http://stackoverflow.com/questions/373419/whats-the-difference-between-passing-by-reference-vs-passing-by-value"">What&#39;s the difference between passing by reference vs. passing by value?</a> and according to it, Ruby seems to be, well, a hybrid...</p>

<p>Technically, Ruby seems to be 'pass by value' with the difference that the value doesn't get COPIED when you pass it to a method. If we define ""value"" = the object, and ""reference"" = the reference variable that points to that object, will ""pass by reference"" makes sense if it's equivalent to ""pass the reference variable that points to a specific object""? And then, once the ""reference"" is passed, the method doesn't make a COPY of the object, but actually has the ORIGINAL object itself (referenced by the variable) which can manipulate directly. Correct me if I'm wrong.</p>

<p>EDIT: I am AWARE of this question <a href=""http://stackoverflow.com/questions/1872110/is-ruby-pass-by-reference-or-by-value"">Is Ruby pass by reference or by value?</a> but different people seem to have different definitions of pass by reference/value there.</p>
","2988","","<p>Ruby is pass-by-value, just like C, Java, Python, Smalltalk, ECMAScript and many others. C++ and C# are also pass-by-value by default, you have to use special annotations (<code>&amp;</code> in C++, <code>ref</code> in C#), to use pass-by-reference.</p>

<p>The distinction is actually rather simple: if the the reference is passed, then the callee can modify it, otherwise it can't. In Ruby, the callee <em>cannot</em> modify the reference, ergo it is pass-by-value:</p>

<pre><code>def is_ruby_pass_by_value?(foo)
  foo = 'No, Ruby is pass-by-reference.'
  return nil
end

bar = 'Yes, of course, Ruby *is* pass-by-value!'

is_ruby_pass_by_value?(bar)

p bar
# 'Yes, of course, Ruby *is* pass-by-value!'
</code></pre>

<p>As you can see, within the method <code>is_ruby_pass_by_value?</code>, the reference <code>bar</code>/<code>foo</code> is <em>not</em> being passed, otherwise the modification would be visible afterwards. <code>bar</code> is being passed by-value, i.e. the <em>content</em> of <code>bar</code> (the <em>value</em> contained in it) is being passed and <em>not</em> the reference itself.</p>

<p>Now, what <em>is</em> the value that is being passed? It is <em>not</em> the <code>String</code> object. Rather it is a <em>pointer</em> to that <code>String</code> object. More precisely: a <em>copy</em> of that pointer.</p>

<p>Now, there are <em>two</em> pointers to that <code>String</code> object. And that <code>String</code> object is mutable! So, if I follow one pointer (<code>foo</code>) and tell that <code>String</code> object to change itself, and then I follow the other pointer (<code>bar</code>) and ask it about its contents, then I will obviously see the <em>changed</em> contents. That's just the nature of shared mutable state, Ruby is not a purely functional, referentially transparent language:</p>

<pre><code>def is_ruby_pass_by_value?(foo)
  foo.replace('More precisely, it is call-by-object-sharing!')
  foo = 'No, Ruby is pass-by-reference.'
  return nil
end

bar = 'Yes, of course, Ruby *is* pass-by-value!'

is_ruby_pass_by_value?(bar)

p bar
# 'More precisely, it is call-by-object-sharing!'
</code></pre>

<p>In fact, in Ruby, the value being held by variables and being passed as arguments is <em>always</em> a pointer. That's how almost all object-oriented languages work. Barbara Liskov called this special case of pass-by-value ""call-by-object-sharing"", it is also sometimes called ""call-by-sharing"" or ""call-by-object"".</p>

<p>Note, however, that the fact that the value being passed is a pointer, is <em>completely</em> irrelevant. Pass-by-value vs. pass-by-reference is about <em>how</em> arguments are being passed, not <em>what</em> the argument is. C is always pass-by-value, regardless of whether you are passing an <code>int</code> or a pointer. Pointers are still being passed by value. Likewise in Ruby, pointers are being passed by value. The differences between Ruby and C are a) that you can <em>only</em> pass pointers in Ruby, and b) that there is no special syntax indicating that you are passing a pointer.</p>

<p>[Note: most Ruby implementations will actually have optimizations in place for passing objects which are smaller than a pointer directly instead of passing a pointer to that object. However, they only do that for objects which are guaranteed by the language specification to be deeply immutable, so that it is impossible to observe the difference between passing a pointer to the value and passing the value directly. This is done, for example, for <code>Fixnum</code>s, <code>Symbol</code>s, <code>Float</code>s, <code>nil</code>, <code>true</code> and <code>false</code>.]</p>

<p>Here is an example in C#, that demonstrates the difference between pass-by-value (even if that value is a reference) and pass-by-reference:</p>

<pre><code>class Program
{
    static void IsCSharpPassByValue(string[] foo, ref string baz)
    {
        foo[0] = ""More precisely, for reference types it is call-by-object-sharing, which is a special case of pass-by-value."";
        foo = new string[] { ""C# is not pass-by-reference."" };

        baz = ""It also supports pass-by-reference if explicitly requested."";
    }

    static void Main(string[] args)
    {
        var quux = new string[] { ""Yes, of course, C# *is* pass-by-value!"" };

        var grault = ""This string will vanish because of pass-by-reference."";

        IsCSharpPassByValue(quux, ref grault);

        Console.WriteLine(quux[0]);
        // More precisely, for reference types it is call-by-object-sharing, which is a special case of pass-by-value.

        Console.WriteLine(grault);
        // It also supports pass-by-reference if explicitly requested.
    }
}
</code></pre>
"
"<p>I am trying to play with the <code>Hash</code> class. Here is my approach on downcasing the keys of a hash:</p>

<pre><code>myhash.map { |k, v| k.downcase, v }
</code></pre>

<p>but I get:</p>

<pre><code>SyntaxError: (irb):11: syntax error, unexpected '}', expecting '='
</code></pre>

<p>However, if I do:</p>

<pre><code>myhash.map { |k, v| [k.downcase, v] }
</code></pre>

<p>It gets correctly downcased, even though it is inside an array. Why doesn't it let me just do</p>

<pre><code>myhash.map { |k, v| k.downcase, v }
</code></pre>
","2988","","<p>Please read the error message. You have a <code>SyntaxError</code>. Your code isn't even syntactically valid. It won't even compile, let alone run. <code>downcase</code> doesn't even enter into the picture.</p>

<pre><code>foo, bar
</code></pre>

<p>is not a valid Ruby expression, this has nothing to do with <code>Hash</code> or <code>downcase</code>. You will also get a <code>SyntaxError</code> if you just try something like the following:</p>

<pre><code>1, 1
</code></pre>
"
"<p>When I run a ruby program, I assume the variables are stored in RAM. Other than when we have to page due to lack of RAM, would they ever be stored on the hard drive? I think stacks and heaps are relevant, and I couldn't find any definitive information on where ruby stores variables.</p>
","2988","","<p>The Ruby Language Specification does not mandate or forbid any particular storage strategy. Any implementation is free to store values anywhere they want in any way. The Specification only says what the result of running a Ruby program should be, not <em>how</em> the program is being run. (Just like any other language specification.)</p>

<p>In <a href=""https://swing.fit.cvut.cz/projects/smallruby"" rel=""nofollow"">SmallRuby</a>, for example, objects may under some circumstances be stored on the disk. And the whole <em>purpose</em> of <a href=""http://MagLev.GitHub.IO/"" rel=""nofollow"">MagLev</a> is to have a Ruby implementation which can deal with heaps that are orders of magnitude larger than RAM, by storing them in a distributed cluster on disk.</p>
"
"<p>I'm trying to learn Scala and the Play Framework at the same time.  Scala looks to me like it has a lot of really cool ideas, but one of my frustrations is trying to understand all of the different syntaxes for methods/functions/lambdas/anonymous functions/etc.</p>

<p>So I have my main application controller like so:</p>

<pre><code>object Application extends Controller {
  def index = Action {
    Ok(views.html.index(""Your new application is ready.""))
  }
}
</code></pre>

<p>This tells me I have a singleton <code>Application</code> that has one method, <code>index</code>, that returns what type??  I was expecting <code>index</code> to have a definition more like:</p>

<pre><code>def index(req: Request) : Result = { ... }
</code></pre>

<p>Looking at Play Framework's documentation, it looks as though <code>Action</code> is a trait, that transforms a request to a result, by I'm having a hard time understanding what this line is saying:</p>

<pre><code>def index = Action { ... }
</code></pre>

<p>I come from a Java background, so I don't know what this is saying?  (this statement <em>feels</em> like it's saying ""method index = [some interface Action]"", which doesn't make sense to me; it seems something beautiful is happening, but it is magic to me, and I feel uneasy with magic in my code ;))</p>
","2988","","<p>When you invoke an object as if it were a function, that's translated into a call to <code>apply</code>. I.e.:</p>

<pre><code>foo(bar)
</code></pre>

<p>is translated into </p>

<pre><code>foo.apply(bar)
</code></pre>

<p>So, inside <code>index</code> you are calling the <code>Action</code> object as if it were a function, which means you are <em>actually</em> calling <code>Action.apply</code>.</p>

<p>The return type of <code>index</code> is omitted because the compiler can infer it to be the return type of <code>Action.apply</code> (which I guess from the name is <code>Unit</code>).</p>
"
"<p>I have the following code:</p>

<pre><code>class Dog
  def initialize(attributes = {})
    attributes.each do |attr, value|
      send(""#{attr}"", value)
    end
  end
end


dog = Dog.new({:talk =&gt; 'bruuuf'})
</code></pre>

<p>And I get an  block in initialize': undefined method `talk' for # (NoMethodError)</p>

<p>Isn't send supposed to be doing something like:</p>

<p><code>dog.talk = bruuuf</code> Why is not letting me do so? Also, this would not set an instance variable, but it would create an instance method. Right?</p>
","2988","","<p>First off: you cannot set instance variables with <a href=""http://Ruby-Doc.Org/core-2.1.0/Object.html#method-i-send"" rel=""nofollow""><code>Object#send</code></a>. <code>Object#send</code> sends messages, it doesn't set instance variables. Of course, you can send a message which may or may not then in turn invoke a method which may or may not in turn then set an instance variable, but that's not the doing of <code>Object#send</code>, it's the doing of whatever method was invoked in response to the message you sent.</p>

<p>If you want to dynamically set instance variables, use <a href=""http://Ruby-Doc.Org/core-2.1.0/Object.html#method-i-instance_variable_set"" rel=""nofollow""><code>Object#instance_variable_set</code></a>:</p>

<pre><code>class Dog
  def initialize(**attrs)
    attrs.each do |attr, value|
      instance_variable_set(:""@#{attr}"", value)
    end
  end
end

dog = Dog.new(talk: 'bruuuf')
</code></pre>

<p>In this case, however, it looks like you don't actually want to set an instance variable but rather call a setter method. Setter methods have names that end with an <code>=</code> sign, e.g. <code>Dog#talk=</code>:</p>

<pre><code>class Dog
  def initialize(**attrs)
    attrs.each do |attr, value|
      send(:""#{attr}="", value)
    end
  end
end

dog = Dog.new(talk: 'bruuuf')
</code></pre>

<p>Note, of course, that this assumes that the method <code>Dog#talk=</code> actually exists. If it doesn't, you will get a <code>NoMethodError</code>.</p>
"
"<p>I'm interested in comparing code to find matches, i.e. to see if two different pieces of code are equivalent. For example, here are 4 matches for a method that returns the sum of two numbers (in Java). </p>

<pre><code>int sum(int a, int b){
  return a + b;
}

int sum(int a, int b){
  return b + a;
}

int sum(int a, int b){
  int sum = a + b;
  return sum; 
}

int sum(int a, int b){
  int total = a + b;
  return total; 
}
</code></pre>

<p>While it's easy to do a text comparison of two pieces of source code, its difficult to write code that will recognize the above matches. This seems to be a job for a Parser or Compiler,  but it doesn't need to be 'perfect', since it's just looking for matches. </p>

<p>This is for a Rails website, so ideally it should be able to work within Ruby, but I can also run a separate service. <a href=""http://treetop.rubyforge.org/index.html"" rel=""nofollow"">Treetop</a> is a language for describing grammars, but describing the grammars is difficult too. Is there an existing tool to compare source code for multiple languages (such as Java, C++, Ruby and Python)?</p>

<p>It just needs to find matches between source code in one language at a time, though it would be cool if it could find matches between source codes in different languages too.</p>

<p><strong>Update</strong>: A match isn't any code that produces the same result, it's code that uses the same process and steps to get the same result. The tool doesn't need to find every possible match, but it should be able to recognize code that is identical except for small differences, like variable names or order (as in above examples).  </p>
","2988","","<p>This problem is known as the Function Problem: figuring out whether two programs compute the same function. It is known to be undecidable, i.e. such a tool cannot possibly exist.</p>

<p>Basically, if you had such a tool, then you could ask: is some program <code>P</code> equivalent to this program:</p>

<pre><code>while (true);
</code></pre>

<p>and you would have solved the Halting Problem. (That's not <em>actually</em> how the proof goes, it's much more complicated than that, but that's the basic idea.)</p>
"
"<p>I'm trying to figure out how I can create a method in Ruby where I can retrieve values from the method's parameters such as strings/integers.</p>

<p>For example, if this were a function coded in C, it might be done similar to this:</p>

<pre><code>main()
{
    int value;
    GetAnIntegerValue(value);
    printf(""The value is %d"", value);
}

// The ""value"" integer variable is passed to it, and updated accordingly because of the use of the ampersand prior to the parameter
GetAnIntegerValue(&amp;int value)
{
    value = 5;
}

// The output would be ""The value is 5""
</code></pre>

<p>I think the term for this is pass by value but I'm not sure. My mind is a little vague on this area and I couldn't find many decent results.</p>

<p>Here's my example Ruby function, the array that the parameters are being assigned to is only local to the class which is the reason for this usage:</p>

<pre><code>    def getRandomWordAndHint(&amp;RandomWord, &amp;RandomHint)
    randIndex = rand(7)
    RandomWord = EnglishLevel1Word[randIndex]
    RandomHint = EnglishLevel1Hint[randIndex]
end
</code></pre>

<p>Cheers!i</p>
","2988","","<p>Ruby is pass-by-value. Always. No exceptions. You cannot do pass-by-reference in Ruby.</p>

<p>What you <em>can</em> do, is put the object you want to change into some sort of mutable container:</p>

<pre><code>class MutableCell
  attr_accessor :val

  def initialize(val)
    self.val = val
  end
end

def change_the_value(cell)
  cell.val = 5
end

value = MutableCell.new(42)

change_the_value(value)

value.val
# =&gt; 5
</code></pre>

<p>Of course, you can just use an <code>Array</code> instead of writing your own <code>MutableCell</code> class, this is just for demonstration.</p>

<p>However, mutable state is a bad idea in general, and mutating arguments passed to methods is a <em>really</em> bad idea especially. Methods know about their own object (i.e. <code>self</code>) and thus can safely modify it, but for <em>other</em> objects, that's generally a no-go.</p>
"
"<p>So why would we do this in Ruby:</p>

<pre><code>attr_accessor :price
</code></pre>

<p>Instead of:</p>

<pre><code>attr_accessor 'price'
</code></pre>

<p>I have read that Symbols are similar to Strings, but they are immutable. But I fail to see why would we use that when doing attr_accessor, attr_reader. I mean, what are the advantages?</p>
","2988","","<p>It's just the right thing to do. <code>Symbol</code> is a data type whose purpose is specifically to represent the concept of a ""name"" or ""label"". Here, you are using it to pass the name of a pair of methods to generate. <code>Symbol</code> is just the correct data type in this case. The methods also take <code>String</code>s for convenience reasons.</p>
"
"<p>I thought that when calling a private method it was unacceptable to place a explicit receiver. Well I did this in Ruby 2.0 and I can get results:</p>

<pre><code>class Test
  def public_method
    self.set_size=10
  end

  def return_size
    @size
  end

  private

  def set_size=(size)
    @size = size
  end

 end

test = Test.new
test.public_method
p test.return_size
</code></pre>

<p>Why is this?</p>
","2988","","<p>Private setters <em>can</em> be called with an explicit receiver of <code>self</code>. In fact, they <em>have</em> to be called with an explicit receiver, because otherwise they couldn't be called at <em>all</em>, since </p>

<pre><code>foo = bar
</code></pre>

<p>is an assignment to a local variable, not a method call.</p>
"
"<p>could anyone please tell me the difference (if there are any) between</p>

<pre><code>class Car
  attr_accessor :engine
  def initialize(engine)
    self.engine = engine
  end
end
</code></pre>

<p>and</p>

<pre><code>class Car
  attr_reader :engine
  def initialize(engine)
    @engine = engine
  end
end
</code></pre>

<p>Or are they practically the same?</p>
","2988","","<p>No, they are not the same.</p>

<p>In the first example, you defined a method <code>engine=</code> and you call that method inside <code>initialize</code>. This would, for example, allow a subclass of <code>Car</code> to override the <code>engine=</code> to do something specific, and when you then call <code>initialize</code>, the method call would be dispatched to <em>that</em> overridden method. This allows subclasses to extend the behavior of <code>Car</code> without having to know about its internal representation.</p>
"
"<p>Is there are way to pass a method as a parameter without using a <code>Proc</code> object or block? The answers I've seen to similar questions rely on creating a <code>Proc</code> object.</p>

<pre><code>def call_a_method_via_a_parameter( &amp;some_method )
  # ?? call some_method and pass it a parameter ??
end
def my_method( param )
  puts param
end

call_a_method_via_a_parameter( &amp;:my_method )
</code></pre>
","2988","","<p>Ruby is an object-oriented language. You can only pass around and manipulate objects, but methods aren't objects, ergo, you cannot pass them around.</p>

<p>You <em>can</em>, however, ask Ruby to give you a proxy object for a method via the <code>Object#method</code> method, which will return a <code>Method</code> object (which duck-types <code>Proc</code>):</p>

<pre><code>def call_a_method_via_a_parameter(some_method)
  some_method.('Hi')
end

def my_method(param)
  puts param
end

call_a_method_via_a_parameter(method(:my_method))
# Hi
</code></pre>

<p>An alternative would be to pass the <em>name</em> of the method as a <code>Symbol</code>:</p>

<pre><code>def call_a_method_via_a_parameter(some_method)
  public_send(:some_method, 'Hi')
end

def my_method(param)
  puts param
end

call_a_method_via_a_parameter(:my_method)
# Hi
</code></pre>

<p>So, in short: no, you cannot pass the method, but you <em>can</em> pass either the <em>name</em> of the method or a proxy object for the method.</p>

<p>However, the <em>idiomatic</em> way would be to use a block:</p>

<pre><code>def call_a_method_via_a_parameter
  yield 'Hi'
end

def my_method(param)
  puts param
end

call_a_method_via_a_parameter(&amp;method(:my_method))
# Hi
</code></pre>
"
"<p>I try to made a little hack with the refine feature (i use ruby 2.1.0)</p>

<p>The purpose is to redirect the implicit conversion (to_hash) to the explicit conversion and avoid this error :</p>

<pre><code>data = {test: :t}.merge!(nil) 
# Return TypeError: no implicit conversion of nil into Hash
</code></pre>

<p>When i reopen the NilClass all is ok  :</p>

<pre><code>class NilClass
 def to_hash
   to_h
 end
end
data = {test: :t}.merge!(nil) 
# { :test =&gt; :t }
</code></pre>

<p>When i use refine feature, i get a no method error.</p>

<pre><code>module MyRefine
  module NilClass
    refine ::NilClass do
      def to_hash
        selt.to_h
      end
    end
  end
end

module Aer
  using MyRefine::NilClass 
  data = {test: :t}.merge!(nil)
  puts data
end
# NoMethodError: super: no superclass method `to_hash' for nil:NilClass
</code></pre>

<p>How can i solve this problem?</p>
","2988","","<p>Refinements are lexically scoped. They are only visible inside of the script, module declaration or class declaration that you activate them in. That's the whole <em>purpose</em> of them.</p>

<p>In your case, you use the refinement inside of the <code>Aer</code> module declaration, which means that inside of that module declaration, <code>NilClass</code> will have a <code>to_hash</code> method. But <em>only</em> inside of that module. And <em>not</em> inside any other module or class, <em>including</em> <code>Hash</code>, where <code>merge!</code> is defined.</p>
"
"<p>I am trying to call a proc on a class but access instance methods from it with an inherited class.  I think some mock code will make more sense :)</p>

<pre><code>class Bar
  def self.foo &amp;block
    @foo ||= block
  end
  def foo; self.class.foo.call(); end
  def bar; 'bar'; end
end

class Foo &lt; Bar
  foo do
    bar
  end
end

Foo.new.foo
# NameError: undefined local variable or method `bar' for Foo:Class
</code></pre>

<p>I want to be able to access the <code>bar</code> instance method on the Bar class.  The reason for calling the foo class method with a block from the inherited class is part of the DSL requirement, but any suggestions for a better design would be appreciated.</p>
","2988","","<p>Blocks are lexically scoped, including the value of <code>self</code>. At the point where the block is defined, <code>self</code> is <code>Bar</code> and <code>Bar</code> doesn't respond to <code>bar</code>. You need to evaluate the block in the context of the object (in this case an <em>instance</em> of <code>Bar</code> and not <code>Bar</code> itself) whose methods you want to call. That's what <code>instance_eval</code> does:</p>

<pre><code>class Bar
  def self.foo(&amp;block) @foo ||= block end
  def foo; instance_eval(&amp;self.class.foo) end
  def bar; 'bar' end
end

class Foo &lt; Bar; foo do bar end end

Foo.new.foo
# =&gt; 'bar'
</code></pre>

<p>Note that all the usual disclaimers about <code>instance_eval</code> apply: since you change the value of <code>self</code> methods and instance variables that the block author may expect to be available won't be.</p>
"
"<p>I have two arrays of some class.  I want to find the difference between them.  But I want it to be based on the value of a specific method call to each instance of this class, instead of the entire instance.  Here is some example code where I use Hash for the class.</p>

<pre><code>#!/usr/bin/ruby

require 'awesome_print'

class Hash
  def &lt;=&gt; other
    puts 'space ship'
    self[:a] &lt;=&gt; other[:a]
  end
  def == other
    puts 'double equal'
    self[:a] == other[:a]
  end
  def &gt; other
    puts 'greater than'
    self[:a] &gt; other[:a]
  end
  def &lt; other
    puts 'less than'
    self[:a] &lt; other[:a]
  end
  def &gt;= other
    puts 'greater equal'
    self[:a] &gt;= other[:a]
  end
  def &lt;= other
    puts 'less equal'
    self[:a] &lt;= other[:a]
  end
  def eql? other
    puts 'eql?'
    self[:a].eql? other[:a]
  end
  def equal? other
    puts 'equal?'
    self[:a].equal? other[:a]
  end
end

c  = { a: 1, b: 2, c: 3}
d  = { a: 2, b: 3, c: 4}
e1 = { a: 3, b: 4, c: 5}
e2 = { a: 3, b: 4, c: 5}
e3 = { a: 3, b: 5, c: 4}
f1 = { a: 4, b: 5, c: 6}
f2 = { a: 4, b: 5, c: 6}
f3 = { a: 4, b: 6, c: 5}
g  = { a: 5, b: 6, c: 7}
h  = { a: 6, b: 7, c: 8}

a = [c, d, e1, f1]
b = [e3, f3, g, h]

ap (a - b)
</code></pre>

<p>I expect to see 2 elements in the final array, but still seeing 4.  Tried overriding all the various comparison operators for the class of each element, Hash in this case, and I can see some calls to the 'double equal', but it still doesn't have the proper effect. What am I doing wrong?</p>
","2988","","<p><code>Array#-</code> uses the <code>eql?</code> / <code>hash</code> protocol, just like <code>Hash</code>, <code>Set</code> and <code>Array#uniq</code>:</p>

<pre><code>class Hash
  def eql? other
    puts 'eql?'
    self[:a].eql? other[:a]
  end
  def hash
    puts 'hash'
    self[:a].hash
  end
end

c  = { a: 1, b: 2, c: 3}
d  = { a: 2, b: 3, c: 4}
e1 = { a: 3, b: 4, c: 5}
e2 = { a: 3, b: 4, c: 5}
e3 = { a: 3, b: 5, c: 4}
f1 = { a: 4, b: 5, c: 6}
f2 = { a: 4, b: 5, c: 6}
f3 = { a: 4, b: 6, c: 5}
g  = { a: 5, b: 6, c: 7}
h  = { a: 6, b: 7, c: 8}

a = [c, d, e1, f1]
b = [e3, f3, g, h]

a - b
# =&gt; [{a: 1, b: 2, c: 3}, {a: 2, b: 3, c: 4}]
</code></pre>
"
"<p>This code:</p>

<pre><code>/ell/ === 'Hello' 
</code></pre>

<p>evalutes to 'true' in IRB.</p>

<p>I don't understand why this makes sense logically. Integer === 30 makes sense because 30 is a PART OF the Integer class, but in what way is the string 'Hello' a PART OF /ell/? I don't get it.</p>
","2988","","<p>A regular expression describes a language, i.e. a set of strings. The <code>===</code> checks whether the string is a member of that set.</p>

<p>See <a href=""http://stackoverflow.com/a/4467823/2988"">my answer</a> to a similar question for details.</p>
"
"<p>Say I have an array, [1,2,3,4] and want to use parallel assignment to assign a to 1 and b to 3. I figured I could do something like:</p>

<pre><code>a, _, b, _ = [1,2,3,4] 
</code></pre>

<p>or even omit the last _ and it will work but Ruby will produce warnings for this for unused variables. Is there some other way to do this? Is this way of using underscores recommended?</p>
","2988","","<p>There should not be any warning about unused variables, provided of course that you actually <em>use</em> <code>a</code> and <code>b</code> somewhere. Using <code>_</code> in this way is recommended and idiomatic, and even officially supported by the interpreter in that it actually <em>does not</em> generate warnings for unused variables if the name of the variable is <code>_</code> or starts with <code>_</code>.</p>
"
"<p>I want to alter an array in ruby. Usually I'd do </p>

<pre><code>[1,2,3].map{|i| i*3}
</code></pre>

<p>However I want to use send like I'd use <code>to_s</code>:</p>

<pre><code>[1,2,3].map &amp;:to_s
</code></pre>

<p>And I try this:</p>

<pre><code>[1,2,3].map &amp;:send(:*, 3)
</code></pre>

<p>but it returns an error </p>

<pre><code>SyntaxError: unexpected '(', expecting $end
[1, 2, 3].map &amp;:send(:*, 3)
</code></pre>

<p>How would I go about sending this block to map without using <code>{}</code></p>
","2988","","<p>In this particular case, you can exploit the fact that multiplication is (or at least should be) symmetric, i.e. that <code>a*b == b*a</code>:</p>

<pre><code>[1, 2, 3].map(&amp;3.method(:*))
</code></pre>
"
"<p>I've recently encountered this example of the splat operator:</p>

<pre><code>first, *, last = 1, 2, *[3,4,5]
</code></pre>

<p>and it worked.</p>

<p>so I was wondering, can you use the splat operator more than once on either the left or the right side? I get unexpected star error each time I do that, but was just wondering for the heck of it.</p>
","2988","","<p>You can't have more than one splat on the left side. (At least not on the same level of nesting.) After all, it means ""gobble up all values"", so what would two splats even <em>mean</em>? It just doesn't make sense.</p>

<p>Note: something like this is of course possible:</p>

<pre><code>a, *b, (c, *d) = [1, 2, 3, [4, 5, 6]]
</code></pre>

<p>The two splats are on different levels of nesting, they don't interfere with each other.</p>

<p>And on the right hand side, there's no problem either:</p>

<pre><code>a = 1, 2, *[3, 4], *[5, 6]
</code></pre>

<p>It just means <em>expansion</em>, and there's no problem expanding multiple arrays on the right hand side.</p>
"
"<p>I seem to be getting an error for this block, and I'm not quite sure why. If I remove the <code>break</code> and the counter it works, but if I add them I get this error:</p>

<p>Error:</p>

<pre><code>/home/rails_apps/Twitter_App/app/controllers/dashboard_controller.rb:133: syntax error, unexpected keyword_end
/home/rails_apps/Twitter_App/app/controllers/dashboard_controller.rb:145: syntax error, unexpected end-of-input, expecting keyword_end
</code></pre>

<p>Code:</p>

<pre><code>@followers2.each do |follow| 
  @followers3 &lt;&lt; Twitter.user(follow)
  break if i &gt;10
  i++
end
</code></pre>
","2988","","<p>On the last line you are using the binary infix <code>+</code> operator but you never provide the second operand. Ruby is expecting the operand on the next line (whitespace is allowed between an operator and its operands) but instead it hits the <code>end</code> keyword. You need to provide the second operand.</p>
"
"<p>when looking to some Ruby code I found the following method:</p>

<pre><code>def connection
    unless @_mc_connection &amp;&amp; valid? &amp;&amp; @_ns_version == get_version
      @_mc_connection = ::Dalli::Client.new(self.dalli_servers, self.dalli_options.merge(namespace: namespace))
    end
    @_mc_connection
  end
</code></pre>

<p>My question is about the use of <code>dalli_options.merge(namespace: namespace)</code>. What is the purpose of the colon here? Is an hash member?</p>
","2988","","<p>Depending on the Ruby version, this is either a <code>Hash</code> literal (1.9) or a keyword argument (2.0+).</p>
"
"<p>I have a class called <strong>ProductImage</strong> which have an attribute called <code>'src'</code>. That attribute stores the URL of the <strong>ProductImage</strong>.</p>

<p>So, I want to create a module used to manipulate images, so I can manipulate <strong>ProductImages</strong>, <strong>LogoImages</strong> and so on.</p>

<p>Here is what I have so far, but I am confused:</p>

<pre><code>module ImageManipulation
  # Crop method
  def crop
    # First we need to have a MiniMagick instance so we can crop.
    @minimagick = MiniMagick::Image.open(self.src) # Is this correct? 
  end
end
</code></pre>

<p>What confuses me is that if we rely on <code>self.src</code>, which is an attribute of the Class that is mixing the module, what if this module is mixed in a class which objects don't respond to <code>self.src</code>? How should I approach this?</p>
","2988","","<blockquote>
  <p>What confuses me is that if we rely on <code>self.src</code>, which is an attribute of the Class that is mixing the module, what if this module is mixed in a class which objects don't respond to <code>self.src</code>?</p>
</blockquote>

<p>Then you will get a <code>NoMethodError</code> which tells the user of your module exactly what is going wrong.</p>

<blockquote>
  <p>How should I approach this?</p>
</blockquote>

<p>You don't. The language will take care of this for you by raising a <code>NoMethodError</code>.</p>

<p>Well, okay, you shouldn't take care of this <em>in code</em>. But you <em>should</em> document your mixin's <em>protocol</em>, something like this:</p>

<blockquote>
  <p>Objects that mix in <code>ImageManipulation</code> must respond to <code>src</code> with an instance of <code>URI</code> representing the source of the image to be manipulated.</p>
</blockquote>

<p>Note: <code>self</code> is the implied receiver in Ruby, you don't need to explicitly specify it.</p>
"
"<p>Ruby <code>Module</code> has a method <code>instance_methods</code> that can return a list of methods of that class. But how to retrieve class methods list of a class?</p>
","2988","","<p>The first thing you need to know is that there is no such thing as a class method in Ruby. What we colloquially call a ""class method"" is actually nothing more than a normal singleton method. <em>All</em> objects can have singleton methods, there's nothing special about classes.</p>

<p>Actually, there is no thing as a singleton method, either! What we colloquially call a ""singleton method"" is really just a regular boring instance method of the object's singleton class.</p>

<p>So, since you already know how to list instance methods, and you now know that class methods are actually instance methods, you already know how to answer your own question:</p>

<pre><code>class Foo; def self.bar; end end

class &lt;&lt; Foo
  instance_methods(false)
end
# =&gt; [:bar]

Foo.singleton_class.instance_methods(false)
# =&gt; [:bar]
</code></pre>

<p>However, even if singleton methods don't actually exist, it is still useful to talk about them, and the above constructs are <em>just</em> inconvenient enough that there are actually specialized methods which perform the equivalent of the above:</p>

<pre><code>Foo.singleton_methods(false)
# =&gt; [:bar]
</code></pre>
"
"<pre><code>class MyClass
  def one
    def two
    end
  end
end

obj = MyClass.new
obj.one
puts obj.method(:two).owner  #==&gt; MyClass
</code></pre>

<p>Here i define method two inside another method one. Method one is called by the instance of MyClass (obj) . So the self is obj when the method two is defined. when i check the owner of method two it's MyClass</p>

<pre><code>obj.instance_eval do
  def three
  end
end

puts obj.method(:three).owner  #==&gt; #&lt;Class:#&lt;MyClass:0x007f85db109010&gt;&gt;
</code></pre>

<p>In this snippet i do instance_eval on obj , so the self is again obj when the method three is defined . But when i check the owner of three , it's the singleton class of obj</p>

<p>why is this? is there anything else besides self which determines where the method definition goes ??</p>
","2988","","<p>This is explained in a nice article by ruby-core contributor yugui: <a href=""http://yugui.jp/articles/846"" rel=""nofollow""><em>Three implicit contexts in Ruby</em></a>. Basically, there is a default definition context, which is <em>not</em> the same as <code>self</code>. Methods that are not explicitly defined as singleton methods end up as instance methods of the default definition context. <code>module</code> and <code>class</code> definition bodies change the default definition context whereas <code>def</code> doesn't. <code>instance_eval</code> OTOH <em>does</em> change it.</p>
"
"<p>In Python, after you run a program, there are caches saved in the folders named <code>__pycache__</code>. For futher explanation of the functionality of these folders, please see <a href=""http://stackoverflow.com/questions/16869024/what-is-pycache"">this question</a>. Does Ruby have an equivalent of this? If not, why?</p>
","2988","","<p>Ruby doesn't haven an equivalent. It just wouldn't make sense: Ruby is a programming language. A programming language is an abstract mathematical concept, a specification. Putting such detailed things as the name of the directory of the byte code cache in a language would be way too restrictive: what if somebody wants to implement Ruby on a platform which doesn't have files? What if someone wants to implement Ruby on a platform where underscores are illegal in directory names? What if someone wants to implement Ruby with an interpreter instead of a compiler?</p>

<p>There <em>are</em>, however, some Ruby <em>implementations</em> which <em>do</em> compile to byte code. YARV and Rubinius are two examples of those. YARV only compiles in memory, whereas Rubinius caches the compiled byte code on disk. In fact, it <em>must</em> have the ability to save and read the compiled byte code because the compiler <em>itself</em> is written in Ruby, and otherwise it would have to compile itself in order to be able to compile any code, but in order to compile itself it would first have to compile itself and in order to that it would first have to …</p>

<p>But that is a private internal implementation detail of Rubinius. It is <em>not</em> part of Ruby nor <em>should</em> it be.</p>
"
"<p>I want to use Neo4J in my Ruby On Rails 4 application. Neoid looks promising. It is an Active Record Extension for Neo4J using neography.</p>

<p>I do not understand why I would mirror the data from a relational database to a graph database. I want to have the data in Neo4j to query much faster, but for what reason should I put the data into the relational database as well?</p>

<p>Besides that, do you know any similar solutions for Neo4J in rails which do not store the data in a relational database?</p>

<p>Elad Ossadon, the author of Neoid, recommended to use neology for accessing Neo4J without RDBMS, but this repository is very outdated and poorly documented.</p>
","2988","","<p>You don't mirror the database. Neoid only stores the object ids in Neo4J for easier traversal, the data is stored only in the RDBMS. That's the whole point of Neoid: allow for graph queries on your relational data that would otherwise be very slow to do via SQL.</p>
"
"<p>If I have a function <code>factors_of(number)</code>, and I'm looking for the fastest way to find all of the factors of that number.</p>

<p>The fastest I have tried so far is</p>

<pre><code>def factors_of(number)
  factors = 0
  n = 1
  while n &lt;= number
    if number % n == 0
      factors += 1
    end
    n += 1
  end
  factors
end
</code></pre>

<p>but it gets sluggish as the numbers get larger. Do I need to iterate over n every time from <code>n..number</code> or is there a shortcut?</p>
","2988","","<p>It's not quite clear to me whether you are looking for the factors (as the question title and question text say) or the number of distinct factors (which is what your code seems to compute). Depending on what <em>exactly</em> you mean, one of these might give you the answer you want:</p>

<pre><code>require 'prime'

# prime factors
def factors_of(number)
  number.prime_division.map(&amp;:first)
end

factors_of(12)
# =&gt; [2, 3]

# number of prime factors
def factors_of(number)
  number.prime_division.map(&amp;:last).inject(:+)
end

factors_of(12)
# =&gt; 3

# number of distinct prime factors
def factors_of(number)
  number.prime_division.size
end

factors_of(12)
# =&gt; 2
</code></pre>
"
"<p>In the Ruby Array Class documentation, I often find:</p>

<blockquote>
  <p>If no block is given, an enumerator is returned instead.</p>
</blockquote>

<p>Why would I not pass a block to <code>#map</code>? What would be the use of my doing just:</p>

<pre><code>[1,2,3,4].map
</code></pre>

<p>instead of doing:</p>

<pre><code>[1,2,3,4].map{ |e| e * 10 } # =&gt; [10, 20, 30, 40]
</code></pre>

<p>Can someone show me a very practical example of using this enumerator?</p>
","2988","","<p>The main distinction between an <code>Enumerator</code> and all other data structures in the Ruby core library (<code>Array</code>, <code>Hash</code>) and standard library (<code>Set</code>, <code>SortedSet</code>) is that an <code>Enumerator</code> can be <em>infinite</em>. You cannot have an <code>Array</code> of all even numbers or a stream of zeroes or all prime numbers, but you can definitely have such an <code>Enumerator</code>:</p>

<pre><code>evens = Enumerator.new do |y|
  i = -2
  y &lt;&lt; i += 2 while true
end

evens.take(10)
# =&gt; [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]

zeroes = [0].cycle

zeroes.take(10)
# =&gt; [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
</code></pre>

<p>So, what can you do with such an <code>Enumerator</code>? Well, three things, basically.</p>

<ol>
<li><p><code>Enumerator</code> mixes in <code>Enumerable</code>. Therefore, you can use all <code>Enumerable</code> methods such as <code>map</code>, <code>inject</code>, <code>all?</code>, <code>any?</code>, <code>none?</code>, <code>select</code>, <code>reject</code> and so forth. Just be aware that an <code>Enumerator</code> may be infinite whereas <code>map</code> returns an <code>Array</code>, so trying to <code>map</code> an infinite <code>Enumerator</code> may create an infinitely large <code>Array</code> and take an infinite amount of time.</p></li>
<li><p>There are wrapping methods which somehow ""enrich"" an <code>Enumerator</code> and return a new <code>Enumerator</code>. For example, <code>Enumerator#with_index</code> adds a ""loop counter"" to the block and <code>Enumerator#with_object</code> adds a memo object.</p></li>
<li><p>You can use an <code>Enumerator</code> just like you would use it in other languages for external iteration by using the <code>Enumerator#next</code> method which will give you either the next value (and move the <code>Enumerator</code> forward) or <code>raise</code> a <code>StopIteration</code> exception if the <code>Enumerator</code> is finite and you have reached the end.</p></li>
</ol>
"
"<p>Can someone tell me the name of </p>

<pre><code>&lt;&lt;-MAP 
STRING HERE
MAP
</code></pre>

<p>operator <code>(&lt;&lt;-)</code> in ruby? I tried search for 'double less than' but it didn't turn up anything. I want to learn more about it but don't even know what it's called!</p>

<p>Thanks</p>
","2988","","<p>It's not an operator, it's a <em>here document</em> (aka <em>heredoc</em>) <code>String</code> literal. It works more or less like heredocs in other languages.</p>

<p>It is specified in section 8.7.6.3.6 of the ISO Ruby Language Specification.</p>
"
"<p>I tried to run this simple code in an IRB session, but I got this error:</p>

<pre><code>[9] pry(main)&gt; puts {x: 1}
SyntaxError: unexpected ':', expecting '}'
puts {x: 1}
        ^
</code></pre>

<p>I know that I can run the same code like this:</p>

<pre><code>[12] pry(main)&gt; y = {x: 1}
=&gt; {:x=&gt;1}
[13] pry(main)&gt; puts y
{:x=&gt;1}
</code></pre>

<p>or:</p>

<pre><code>[14] pry(main)&gt; puts """",{x: 1}
{:x=&gt;1}
</code></pre>

<p>What is that the problem in the first case?</p>
","2988","","<p>Curly braces can denote either a block literal or a <code>Hash</code> literal. In this case, it is interpreted as a block literal, and <code>x: 1</code> is not a syntactically valid Ruby expression.</p>

<p>You can provide the argument list with parentheses to resolve this ambiguity:</p>

<pre><code>puts({x: 1})
</code></pre>

<p>Or alternatively, Ruby allows you to leave out the curly braces if the last argument to a method is a <code>Hash</code>:</p>

<pre><code>puts(x: 1)
</code></pre>

<p>And in that case, you can again leave out the parentheses, because there is no confusion with a block:</p>

<pre><code>puts x: 1
</code></pre>

<p>Your last example works, because the comma tells the parser that the argument list isn't finished yet and what follows couldn't possibly be a block.</p>
"
"<p>Recently I've been reading ""Practical Object Oriented Design in Ruby"", and I noticed one of the best practices was to use accessor methods instead of directly grabbing the <code>@instance_variable</code>. For example:</p>

<pre><code>class Foo
  attr_accessor :bar

  def initialize(my_argument)
    @bar = my_argument
  end

  # bad
  # def lorem_ipsum
  #     @bar * 999
  # end

  # good
  def lorem_ipsum
    bar * 999
  end

end
</code></pre>

<p>It makes sense to keep things DRY, and, in case I need to process <code>@bar</code> somehow before actually grabbing its value. However, I noticed that the <code>initialize</code> method sets the value of the <code>@bar</code> instance variable directly:</p>

<pre><code>class Foo
  attr_accessor :bar

  def initialize(my_argument)
    @bar = my_argument #&lt;-- why isn't self.bar = my_argument used here?
  end
</code></pre>

<p>Is there a reason for this? Shouldn't the setter method be used instead of directly using the <code>=</code> operator to set the value of the instance variable?</p>
","2988","","<p>You're right, it would make much more sense to do </p>

<pre><code>class Foo
  attr_accessor :bar

  def initialize(my_argument)
    self.bar = my_argument
  end
end
</code></pre>

<p>Arguments differ as to whether you should respect encapsulation <em>within</em> the object itself or not, but if you believe in that, then, yes, you should do this.</p>
"
"<p>I was wondering if there is something similar to the <strong>Range</strong> but not with integers but with ordered couples <strong>(x, y)</strong>. I am wondering if there is an easy way to do something like this:</p>

<pre><code>((1,2)..(5,6)).each {|tmp| puts tmp} #=&gt; (1,2) (3,4) (5,6)
</code></pre>

<p><strong>EDIT</strong>: Maybe I was not 100% clear in my question :) I'll try to ask it in a different way.</p>

<p>If I had these couples: <strong>(3,4) and (5,6)</strong> I am looking for a way to help me generate:</p>

<pre><code>(3,4), (4,5), (5,6)
</code></pre>

<p>if I had to exlpain it better : if the couples are (x,y)-> </p>

<pre><code>(x0,y0), ((x0+1),(y0+1)), ((x0+2), (y0+2))  and so on .
</code></pre>
","2988","","<p>Ruby is an object-oriented language. So, if you want to do something with an ""ordered couple object"", then you need … well … an <code>OrderedCouple</code> object.</p>

<pre><code>class OrderedCouple &lt; Struct.new(:x, :y)
end

OrderedCouple.new(3, 4)
# =&gt; #&lt;struct OrderedCouple x=3, y=4&gt;
</code></pre>

<p>Uh, that looks ugly:</p>

<pre><code>class OrderedCouple
  def to_s; ""(#{x}, #{y})"" end

  alias_method :inspect, :to_s

  class &lt;&lt; self; alias_method :[], :new end
end

OrderedCouple[3, 4]
# =&gt; (3, 4)
</code></pre>

<p><code>Range</code>s are used for two things: checking inclusion and iterating. In order for an object to be used as the start and end point of a <code>Range</code>, it has to respond to <code>&lt;=&gt;</code>. If you want to iterate over the <code>Range</code> as well, then the start object has to respond to <code>succ</code>:</p>

<pre><code>class OrderedCouple
  include Comparable

  def &lt;=&gt;(other)
    to_a &lt;=&gt; other.to_a
  end

  def to_a; [x, y] end

  def succ
    self.class[x.succ, y.succ]
  end
end

puts *OrderedCouple[1, 2]..OrderedCouple[5, 6]
# (1, 2)
# (2, 3)
# (3, 4)
# (4, 5)
# (5, 6)
</code></pre>
"
"<p>Ruby 2.0 supports keyword arguments. I was wondering, what are the 'rules' for mixing regular with keyword arguments? Something like this would not work:</p>

<pre><code>def some_method(a: 'first', b: 'second', c)
  [a, b, c]
end
</code></pre>

<p>but this will:</p>

<pre><code>def some_method(c, a: 'first', b: 'second')
  [a, b, c]
end
</code></pre>

<p>So why does putting a regular argument before the keyword arguments (and not after) works?</p>

<p>Is there some reference on the web on this (mixing keyword and regular arguments)? I can't seem to find any.</p>
","2988","","<p>A pseudo-regex for parameter lists in Ruby (this applies equally to methods, blocks and lambda literals) is something like this:</p>

<pre><code>mand* opt* splat? mand* (mand_kw | opt_kw)* ksplat? block?
</code></pre>

<p>Here's an example:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
          ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk)
  Hash[local_variables.map {|var| [var, eval(var.to_s)] }]
end

method(:foo).arity
# =&gt; -5

method(:foo).parameters
# =&gt; [[:req, :m1], [:req, :m2], [:opt, :o1], [:opt, :o2], [:rest, :splat], 
#     [:req, :m3], [:req, :m4], [:keyreq, :mk1], [:keyreq, :mk2], 
#     [:key, :ok1], [:key, :ok2], [:keyrest, :ksplat], [:block, :blk]]

foo(1, 2, 3, 4)
# ArgumentError: missing keywords: mk1, mk2

foo(1, 2, 3, mk1: 4, mk2: 5)
# ArgumentError: wrong number of arguments (3 for 4+)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], m3: 3, m4: 4, 
#      ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: :o2, splat: [], m3: 4, m4: 5, 
#      ok1: :ok1, mk1: 6, mk2: 7, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [], m3: 5, m4: 6, 
#      ok1: :ok1, mk1: 7, mk2: 8, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5], m3: 6, m4: 7, 
#      ok1: :ok1, mk1: 8, mk2: 9, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: :ok1, mk1: 9, mk2: 10, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: #&lt;Proc:0xdeadbeefc00l42@(irb):15&gt; }
</code></pre>

<p>[Note: mandatory keyword arguments will be introduced in Ruby 2.1, all the rest already works.]</p>
"
"<p>I have built a subclass of Hash, and whenever I call <code>puts</code> with an instance of my class as an argument, I get the following:</p>

<pre><code>&gt; puts data
TypeError: can't convert Reporting::Search::Data to Array (Reporting::Search::Data#to_ary gives Reporting::Search::Data)
</code></pre>

<p>Does anyone have any idea what to do? I'd like it to output a string representation of a Hash, just like calling <code>puts</code> with an ordinary Hash would do.</p>

<p>My class is really simple:</p>

<pre><code>  class Data &lt; HashWithIndifferentAccess
    def method_missing meth, *args, &amp;block
      if meth.to_s =~ /=$/
        send :[]=, meth.slice(0...-1), *args
      elsif args.empty?
        fetch meth, Data.new
      else
        super meth, *args, &amp;block
      end
    end

    def compact!
      delete_if do |k,v|
        v.compact! if v.is_a?(Data)
        v.blank?
      end
    end
  end
</code></pre>
","2988","","<p>You are violating Ruby's type conversion protocols in various ways.</p>

<p>First off, your object responds to <code>to_int</code>, <code>to_float</code>, <code>to_str</code>, <code>to_ary</code> etc. without actually <em>being</em> an integer, a float, a string or an array. The three letter (<em>ahem</em> f-l-o-a-t <em>ahem</em>) versions of those type conversion methods are supposed to be used <em>only</em> in the case where the object in question really absolutely positively <em>is</em> an integer, float, string or array and is just not represented as an instance of <code>Integer</code>, <code>Float</code>, <code>String</code> or <code>Array</code>.</p>

<p>However, your object isn't an <code>Array</code>, it's a map. So, it should only respond to <code>to_hash</code>, if at all.</p>

<p>And secondly, the return value of <code>to_int</code>, <code>to_float</code>, <code>to_str</code>, <code>to_ary</code> etc. should be an instance of the <code>Integer</code>, <code>Float</code>, <code>String</code> or <code>Array</code> class.</p>

<p>So, you are implementing methods that you shouldn't even be implementing in the first place <em>and</em> you are returning the wrong value from them. Doing that for something as deeply ingrained in the core of Ruby as its type conversion protocols is bound to wreak all sorts of havoc of which you are only seeing the beginning.</p>
"
"<p>In Ruby, when you create a new scope, a variable will be captured the first time it is assigned if it already exists in the outer scope, or it will be created locally. How to prevent a variable from being captured?</p>
","2988","","<p>There are different kinds of local scopes in Ruby: script bodies, class bodies, module bodies, method bodies, and lambda literals and block bodies. Script, class, module and method scopes don't nest anyway, so there is nothing you need to do.</p>

<p>Only blocks and lambda literals can nest, and there you can explicitly declare variables as local by appending them to the parameter list separated by a semicolon:</p>

<pre><code>x, y, z = %i[x y z]

-&gt; (m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
      ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk; x, y) {
     Hash[local_variables.map {|var| [var, eval(var.to_s)] }]
}.(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { x: nil, y: nil, z: :z, m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], 
#      m3: 3, m4: 4, ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }
</code></pre>
"
"<p>What is difference between <code>class</code> and <code>Class.new</code> &amp; <code>module</code> and <code>Module.new</code>?</p>

<p>I know that:</p>

<ol>
<li><p><code>Class.new</code>/<code>Module.new</code> create an anonymous <code>class</code>/<code>module</code>. When we assign it to constant for the first time it becomes name of that <code>class</code>/<code>module</code>. <code>class</code>/<code>module</code> do this automatically. </p></li>
<li><p>When we want to inherit, we can pass an argument: <code>Class.new(ancestor)</code>. When we don't specify an ancestor, it is set to the <code>Object</code>. <code>class</code> use this syntax: <code>class A &lt; Ancestor</code></p></li>
<li><p><code>Class.new</code> returns an <code>object</code>. <code>class A</code> returns <code>nil</code>. Same goes for <code>module</code>s. </p></li>
</ol>

<p>Did I miss something?</p>
","2988","","<blockquote>
  <p><code>Class.new</code> returns an <code>object</code>. <code>class A</code> returns <code>nil</code>. Same goes for <code>module</code>s.</p>
</blockquote>

<p>That's wrong. A class/module definition returns the value of the last expression evaluated inside of the class/module body:</p>

<pre><code>class Foo
  42
end
# =&gt; 42
</code></pre>

<p>Typically, the last expression evaluated inside of a class/module body will be a method definition expression, which in current versions of Ruby returns a <code>Symbol</code> denoting the name of the method:</p>

<pre><code>class Foo
  def bar; end
end
# =&gt; :bar
</code></pre>

<p>In older versions of Ruby, the return value of a method definition expression was implementation-defined. Rubinius returned a <code>CompiledMethod</code> object for the method in question, whereas YARV and most others simply returned <code>nil</code>.</p>
"
"<p>How can I auto-increment a variable so each time it is used, it is incremented by one, starting with 0?</p>

<p>For example: </p>

<pre><code>i = i+1 || 0 

arr[i] = ""foo""
arr[i] = ""bar""
arr[i] = ""foobar""

arr #=&gt; [""foo"",""bar"",""foobar""]
</code></pre>

<p>I'm getting a <code>NoMethodError</code> <strong>undefined method '+' for nil:NilClass</strong></p>
","2988","","<p>A variable is just a name. It doesn't have behavior. If you want behavior, use a method:</p>

<pre><code>def i
  @i ||= -1
  @i += 1
end

arr = []

arr[i] = 'foo'
arr[i] = 'bar'
arr[i] = 'foobar'

arr #=&gt; ['foo', 'bar', 'foobar']
</code></pre>

<p>Alternatively:</p>

<pre><code>_i = -1

define_method(:i) do
  _i += 1
end

arr = []

arr[i] = 'foo'
arr[i] = 'bar'
arr[i] = 'foobar'

arr #=&gt; ['foo', 'bar', 'foobar']
</code></pre>

<p>But really, what you have is just a very convoluted way of saying </p>

<pre><code>arr = %w[foo bar foobar]
</code></pre>

<p>which is much clearer.</p>
"
"<p>I'm trying to write an internal DSL in Ruby and am running into trouble with implementing a particular syntax. Specifically, if I have an array (or hash) in a class, I'd like to access and edit it with parentheses. For example:</p>

<pre><code>class MyData
  attr_accessor :things
  def initialize
    @things = ['right', 'right', 'wrong']
  end
end

test = MyData.new

# This obviously won't work, but it's the syntax that I want.
test.things(2) = 'right'
</code></pre>

<p>I know I can read an element with this syntax by doing:</p>

<pre><code>class MyData
  def things(index)
    @things[index]
  end
end

test = MyData.new
test.things(2) # =&gt; 'wrong' 
</code></pre>

<p>but actually changing the element is another thing entirely because Ruby just doesn't know what to do with that assignment operator.</p>

<p>The reason I want this strange syntax is because I hope I can use this language to easily convert some Fortran namelist files into a friendly Ruby environment, and Fortran unfortunately indexes arrays with parentheses.</p>

<p>My fear is that this is just one of those situations where I'm trying too hard to make Ruby go against its core syntax and I'll need to actually write a parser. Any thoughts?</p>
","2988","","<p>The syntax isn't valid Ruby, ergo you cannot do that in Ruby. Period.</p>

<p>You have several options:</p>

<ol>
<li><p>Change your syntax to something that <em>is</em> valid Ruby:</p>

<pre><code>class MyData
  attr_reader :things

  private

  attr_writer :things

  def initialize
    self.things = %w[right right wrong]
  end
end

test = MyData.new

test.things[2] = 'right'

test.things
# =&gt; ['right', 'right', 'right']
</code></pre></li>
<li><p>Use a language that supports that syntax, like Scala:</p>

<pre><code>class MyData {
  var things = scala.collection.mutable.Seq(""right"", ""right"", ""wrong"")
}

val test = new MyData

test.things(2) = ""right""

test.things
// =&gt; scala.collection.mutable.Seq[String] = ArrayBuffer(right, right, right)
</code></pre></li>
<li><p>Create an external DSL, i.e. one that isn't valid Ruby.</p>

<p>In fact, it looks like what you have already <em>is</em> a well-defined external DSL, specifically a subset of Fortran. Depending on whether or not you have control over those namelist files, you may even be able to restrict the syntax further to something that is quite trivially parseable with some <code>Regexp</code>s and a bit of text munging.</p></li>
</ol>
"
"<p>I have the method :</p>

<pre><code>def mov destination_register, source
  if source == :ax then send(""#{destination_register}="", @ax) end
end
</code></pre>

<p>where <strong>destination_register</strong> is a symbol(:ax, :bxm :cx, :dx). I also have properties : @ax, @bx, @cx, @dx. if source is always a symbol among :ax, :bx, :cx, :dx how could I assign the value of destination_register property with the value of source ? I tried with send but I still don't know if it will work. Any suggestions ?</p>
","2988","","<p>It's not clear to me what you want to do, but something like this might work:</p>

<pre><code>def mov(destination_register, source)
  send(:""#{destination_register}="", instance_variable_get(:""@{source}""))
end
</code></pre>

<p>However, if you have a getter method for your instance variable, it would be much better to use that instead of getting the instance variable directly:</p>

<pre><code>def mov(destination_register, source)
  send(:""#{destination_register}="", send(:""{source}""))
end
</code></pre>

<p>And if you want to violate encapsulation <em>anyway</em>, then why not go the whole nine yards:</p>

<pre><code>def mov(destination_register, source)
  instance_variable_set(:""#@{destination_register}"", instance_variable_get(:""@{source}""))
end
</code></pre>
"
"<p>Rather than have my Ruby object's constructor complain about the number of arguments given (in the event of bad args), I'd like the message to list what was expected, exactly.</p>

<pre><code>def initialize a, b, c
  begin
    @a = a
    @b = b
    @c = c
  rescue ArgumentError
    raise ArgumentError, ""my custom error message""
  end
end
</code></pre>

<p>Obviously this won't work, but hopefully this gets the idea across. I just want to override the default ArgumentError message for this class.</p>
","2988","","<pre><code>def initialze(*args)
  raise ArgumentError, 'my message' unless valid_according_to_my_rules(args)

  @a, @b, @c = args
end
</code></pre>
"
"<p>My doubt is pretty much a matter of misunderstanding...</p>

<p>From what I read, a <code>block</code> is a group of code enclosed by <code>{}</code> or <code>do</code> and <code>end</code>. </p>

<p>From my understanding, what a <code>Proc</code> or <code>Lambda</code> does is: </p>

<ol>
<li>Get this <code>block</code></li>
<li>Assign the <code>block</code> to a <code>variable</code></li>
</ol>

<p>Which means; we don't need to repeat the whole <code>block</code> all the time.</p>

<p>But, what is the difference among a <code>Proc</code>, <code>Lambda</code> and a standard <code>Method</code>? From my understanding, they all work the same way.</p>
","2988","","<p>There is one crucial difference between <code>Proc</code>s (and lambdas) and methods. <code>Proc</code>s are objects, methods aren't. And since Ruby is an object-oriented language, where you can only do things with and to objects, that is <em>very</em> important.</p>

<p>So, if you want to pass a piece of code to a method, you need to have an object, and that's what <code>Proc</code>s provide.</p>

<p>You <em>can</em> get a proxy object that represents a method via the <code>Object#method</code> method, which will return an instance of the <code>Method</code> class (which duck-types <code>Proc</code>).</p>
"
"<p>I know Ruby is dynamically and strongly typed, but AFAIK, current syntax doesn't allow checking the type of arguments at compile time due to lack of explicit type notation (or contract) for each argument.</p>

<p>If I want to perform compile-time type check, what (practically matured) options do I have?</p>

<p><strong>Update</strong></p>

<p>What I mean <em>type-check</em> is something like typical statically typed language. Such as C.
For example, C function denotes type of each argument and compiler checks passing-in argument is correct or not.</p>

<pre><code>void func1(struct AAA aaa)
{
    struct BBB bbb;
    func1(bbb);  // Wrong type. Compile time error.
}
</code></pre>

<p>As an another example, Objective-C does that by putting explicit type information.</p>

<pre><code>- (id)method1:(AAA*)aaa
{
    BBB* bbb = [[AAA alloc] init];  // Though we actually use correctly typed object...
    [self method1:bbb];             // Compile time warning or error due to type contract mismatch.
}
</code></pre>

<p>I want something like that.</p>

<p><strong>Update 2</strong></p>

<p>Also, I mean <em>compile-time = before running the script</em>. I don't have better word to describe it…</p>
","2988","","<p>There was a project for developing a type system, a type inferencer, a type checker and a syntax for type annotations for (a subset of) Ruby, called <a href=""http://www.cs.umd.edu/projects/PL/druby/"" rel=""nofollow"">Diamondback Ruby</a>. It was abandoned 4 years ago, you can find <a href=""https://github.com/mfurr/Diamondback-Ruby/"" rel=""nofollow"">its source on GitHub</a>.</p>

<p>But, basically, that language would no longer be Ruby. If static types are so important to you, you should probably just use a statically typed language such as Haskell, Scala, ML, Agda, Coq, ATS etc. That's what they're here for, after all.</p>
"
"<p>In Ruby, is it OK to place a <code>require</code> statement outside of a module definition? Will the <code>require</code>'d module still be available inside classes nested in the module?</p>

<p>For example, is this:</p>

<pre><code>require 'baz'
module Foo
  class Bar
    # some code using Baz
  end
end 
</code></pre>

<p>the same as this?</p>

<pre><code>module Foo
  require 'baz'
  class Bar
    # some code using Baz
  end
end 
</code></pre>

<p>and the same as this?</p>

<pre><code>module Foo
  class Bar
    require 'baz'
    # some code using Baz
  end
end 
</code></pre>
","2988","","<p><code>require</code> simply runs the code in the file. It is completely irrelevant where you put it. It depends on the code in the file, what happens, not where <code>require</code> is called.</p>
"
"<p>I am a newbie to ruby and trying to implement Quick sort in ruby but stuck in how to call recursively after the first partition of pivot. Please help me to understand on how to proceed and also let me know whether my style of coding is good so far .</p>

<pre><code>class QuickSort
    $array= Array.new()
    $count=0

    def add(val) #adding values to sort
        i=0
        while val != '000'.to_i
            $array[i]= val.to_i
            i=i+1
            val = gets.to_i
        end
    end

    def firstsort_aka_divide(val1,val2,val3) #first partition
        $count = $count+1
        @pivot = val1
        @left = val2
        @right =val3
        while @left!=@right do # first divide/ partition logic

            if $array[@right] &gt; $array[@pivot] then
                @right= @right-1
            elsif $array[@right] &lt; $array[@pivot] then
                @var = $array[@right]
                $array[@right] = $array[@pivot]
                $array[@pivot] = @var
                @pivot = @right
                @left = @left+1
            end 
            if $array[@left] &lt; $array[@pivot]
                @left= @left+1
            elsif $array[@left] &gt; $array[@pivot]
                @var = $array[@left]
                $array[@left] = $array[@pivot]
                $array[@pivot] = @var
                @pivot =@left
            end

        end
        puts ""\n""                   # printing after the first partition i.e divide 
        print "" Array for for divide ---&gt; #{$array}""
        puts ""\n""
        puts "" pivot,left,right after first divide --&gt; #{@pivot},#{@left},#{@right}""

        firstsort_aka_divide()  # Have to call left side of partition recursively -- need help
        firstsort_aka_divide()  # Have to call right side of partition recursively -- need help

    end
end

ob= QuickSort.new

puts "" Enter the numbers you want to sort. \n Press '000' once you are done entering the values"" 
val = gets.to_i
ob.add(val)
puts "" Sorting your list ...""
sleep(2)
ob.firstsort_aka_divide(0,0,($array.size-1)) # base condition for partitioning
</code></pre>
","2988","","<p>This is how I would implement quick sort in Ruby:</p>

<pre><code>def quicksort(*ary)
  return [] if ary.empty?

  pivot = ary.delete_at(rand(ary.size))
  left, right = ary.partition(&amp;pivot.method(:&gt;))

  return *quicksort(*left), pivot, *quicksort(*right)
end
</code></pre>

<p>Actually, I would probably make it an instance method of <code>Array</code> instead:</p>

<pre><code>class Array
  def quicksort
    return [] if empty?

    pivot = delete_at(rand(size))
    left, right = partition(&amp;pivot.method(:&gt;))

    return *left.quicksort, pivot, *right.quicksort
  end
end
</code></pre>
"
"<p>I know that the <code>Fixnum</code> class inherits from the <code>Integer</code> class. But what is the actual difference between them? Are there any use cases where we sometimes use <code>Fixnum</code>, and sometimes use <code>Integer</code> instead?</p>
","2988","","<p>This is somewhat confusing. <code>Integer</code> is the <em>real</em> class that you should think about. <code>Fixnum</code> is basically a performance optimization that should never have been made visible to the programmer in the first place. (Compare this with flonums in YARV, which are implemented entirely as an optimization inside the VM, and never exposed to the programmer.)</p>

<p>Basically, <code>Fixnum</code>s are fast and <code>Bignum</code>s are slow(er), and the implementation automatically switches back and forth between them. You never ask for one of those directly, you will just get one or the other, depending on whether your integer fits into the restricted size of a <code>Fixnum</code> or not.</p>
"
"<p>I often use <code>.group_by{ |x| x }</code> and <code>.find{ |x| x }</code>  </p>

<p>The latter is to find the first item in an array which is true.<br>
Currently I'm just using <code>.compact.first</code> but I feel like there must be an elegant way to use find here, like <code>find(&amp;:to_bool)</code> or <code>.find(true)</code> that I'm missing.<br>
Using <code>.find(&amp;:nil?)</code> works but is the opposite of what I want, and I couldn't find a method that was the opposite of #find or #detect, or a method like #true?</p>

<p>So is there a more elegant way to write <code>.find{ |x| x }</code>? If not, I'll stick with <code>.compact.first</code><br>
(I know compact won't remove <code>false</code> but that's not a problem for me, also please avoid rails methods for this)</p>

<p>Edit: For my exact case it is used on arrays of only strings and nils e.g.<br>
<code>[nil, ""x"", nil, nil, nil, nil, ""y"", nil, nil, nil, nil]</code> => <code>""x""</code></p>
","2988","","<p>No, there is not. I personally have a utility library I include in all my projects which has something like </p>

<pre><code>IDENTITIY = -&gt; x { x }
</code></pre>

<p>Then you would have </p>

<pre><code>.group_by(&amp;IDENTITY)
</code></pre>

<p>There is a longstanding bug report for adding a method to <code>Object</code> that simply returns <code>self</code>, however, nobody has been able to come up with a name for that method that matz is satisfied with. Suppose that method were called <code>self</code>, then you could also say </p>

<pre><code>.group_by(&amp;:self)
</code></pre>
"
"<p>Until just recently, I thought that all standard modules (those one can see on <a href=""http://ruby-doc.org/stdlib/"" rel=""nofollow"">http://ruby-doc.org/stdlib/</a>) aren't loaded by default. That is, you must require each and every one you're going to use. But it turns out some of them are indeed loaded, judging from contents of <code>$LOADED_FEATURES</code>:</p>

<pre><code>$ ruby -rpp -e 'p $LOADED_FEATURES'
[""enumerator.so"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux/enc/encdb.so"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux/enc/trans/transdb.so"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux/rbconfig.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/compatibility.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/defaults.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/deprecate.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/errors.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/version.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/requirement.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/platform.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/specification.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/exceptions.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/core_ext/kernel_gem.rb"",                                                                                          
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/prettyprint.rb"",
 ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/pp.rb""]
</code></pre>

<p>So I wonder what is the reason and can I influence this in any way?</p>

<p><strong>UPD</strong> output without requiring <code>pp</code></p>

<pre><code>$ ruby -e 'p $LOADED_FEATURES'
[""enumerator.so"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux/enc/encdb.so"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux/enc/trans/transdb.so"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux/rbconfig.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/compatibility.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/defaults.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/deprecate.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/errors.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/version.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/requirement.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/platform.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/specification.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/exceptions.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/core_ext/kernel_gem.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb"", ""/home/yuri/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/rubygems.rb""]
</code></pre>
","2988","","<p>The only library I see loaded there is RubyGems, and that was indeed added to Ruby in 1.9.0.</p>

<p>BTW: you don't <code>require</code> <code>module</code>s, you <code>require</code> files.</p>
"
"<p>Whenever I try to run the program, an error pops up saying ""string literal in condition (on line 10)"". What am I doing wrong?</p>

<pre><code>puts ""Welcome to the best calculator there is. Would you like to (a) calculate the area of a geometric shape or (b) calculate the equation of a parabola? Please enter an 'a' or a 'b' to get started.""
response = gets.chomp

if response == ""a"" or ""A""

       puts ""ok.""

elsif response == ""b"" or ""B""

       puts ""awesome.""

else

       puts ""I'm sorry. I did not get that. Please try again.""

end
</code></pre>
","2988","","<p>That's not an error, it's a warning.</p>

<p>You have the condition</p>

<pre><code>response == ""a"" or ""A""
</code></pre>

<p>Well, <code>response == ""a""</code> is either <code>true</code> or <code>false</code>. If it is <code>true</code>, the condition reduces to </p>

<pre><code>true or ""A""
</code></pre>

<p>which is </p>

<pre><code>true
</code></pre>

<p>If it is <code>false</code>, the condition reduces to </p>

<pre><code>false or ""A""
</code></pre>

<p>which is </p>

<pre><code>""A""
</code></pre>

<p>which is <em>truthy</em>, since everything except <code>false</code> and <code>nil</code> is truthy.</p>

<p>So, regardless of the contents of <code>response</code>, the condition will <em>always</em> be true.</p>

<p>And that's what the warning is warning you about: string literals are always truthy, it just doesn't make sense to use them in a condition.</p>
"
"<p>I'm wondering if there is a way for me to configure a global variable from a method, for example:</p>

<pre><code>Class myExample
  $my_global_variable = 0

  def initialize
    change_my_global_variable
  end

  def change_my_global_variable
     $my_global_variable = 2
  end
end


Class myExample2 &lt; myExample

 @this_value = $my_global_variable
 #I want @this_value to be set to 2
end

#Updated:
#Currently when I tried what i have above I get the following:
#@this_value = 0 instead of 2
</code></pre>

<p>I'm working with really old code and I need to change the value of the global variable after it loads since it needs to pull the value from the function.  Is there a way that i can initialize a global variable that will be changed?  Currently ""$my_global_variable"" never changes, it keeps the value 0</p>
","2988","","<p>Yes, of course, you can change global variables from within methods. However, you never call the method which changes the global variable, so it will never get changed. You need to call the method somewhere.</p>
"
"<p>I know there have been other questions about the syntax <code>class &lt;&lt; self</code>. Still, I did not find those answers clear enough. I have a background in Java/C#, C, so Ruby is kinda strange to me. I read that <code>class &lt;&lt; self</code> refers to the singleton class. <strong>I find this kinda complex so I would like to understand what does the operator <code>&lt;&lt;</code> do in this context and what is possible to put on both ends.</strong> I tried to write a simple code to help me understand this syntax (my questions are in the code):</p>

<pre><code>class Self

def Self.selfTest
end

def onSelf
    class &lt;&lt; Self   #I know this might be strange. 
        self
    end

end

def onself
    class &lt;&lt; self
        self
    end
end

end

s = Self.new
onSelf = s.onSelf
onself = s.onself

#Here, i wanna know what kind of references are returned. 

puts ""onSelf responds to onSelf:#{onSelf.respond_to?(:onSelf)}""
puts ""onSelf responds to selfTest:#{onSelf.respond_to?(:selfTest)}""
puts ""onself responds to onSelf:#{onself.respond_to?(:onSelf)}""
puts ""onself responds to selfTest:#{onself.respond_to?(:selfTest)}""

#Output:
#onSelf responds to onSelf:false
#onSelf responds to selfTest:false
#onself responds to onSelf:false
#onself responds to selfTest:true

#So, i conclude that the second one is a reference to a class. What is the first one???????


puts onSelf
puts onself

#Output
#&lt;Class:Self&gt;
#&lt;Class:#&lt;Self:0x007f93640509e8&gt;&gt;

#What does this outputs mean???????

def onSelf.SelfMet
    puts 'This is a method defined on base class'
end


def onself.selfMet
    puts 'This is a method defined on metaclass'
end



puts ""Does Self Class respond to SelfMet? : #{Self.respond_to?(:SelfMet)}""
puts ""Does Self Class respond to selfMet? : #{Self.respond_to?(:selfMet)}""
puts ""Does Self instance respond to SelfMet? : #{s.respond_to?(:SelfMet)}""
puts ""Does Self instance respond to selfMet? : #{s.respond_to?(:selfMet)}""

#Output
#Does Self Class respond to SelfMet? : false
#Does Self Class respond to selfMet? : false
#Does Self instance respond to SelfMet? : false
#Does Self instance respond to selfMet? : false

#Why won't they respond to defined methods???? 
</code></pre>

<p>Thanks</p>

<p><strong>UPDATED:</strong>
Thank you all very much. I have read and tested a lot, so will leave a few considerations. I leave this for future reference and as so, i hope the Ruby experts can correct me if i am wrong. I realised that class &lt;&lt;  Self refers to the Self singleton class. So, the idiomatic class &lt;&lt; abcd, starts the abcd singleton class context. I realised also that the hierarchy of a class singleton class is different from an object singleton class. The hierarchy of a class singleton class follows all singleton classes on a hierarchy. In this case:</p>

<p>singleton Self->singleton Object->Singleton basicobject ->class->module->object->kernel->basicObject </p>

<p>The object singleton class lies in a different kind of hierarchy:</p>

<p>Object singleton->Self->Object->kernel->basicObject</p>

<p>This explains this outputs.</p>
","2988","","<p>In Ruby, every object has a singleton class. This singleton class has only one instance: the object it belongs to.</p>

<p>Since the singleton class has only ever one instance, and every object has its own singleton class, methods that are defined in this class can only be called on <em>that</em> specific object. Those methods are typically called <em>singleton methods</em>, although that is misleading: there's nothing special about those methods, they are just normal standard instance methods.</p>

<p>Here's an example:</p>

<pre><code>foo, bar, baz = Object.new, Object.new, Object.new

class &lt;&lt; foo; def quux; :foo end end
class &lt;&lt; bar; def quux; :bar end end

foo.quux # =&gt; :foo
bar.quux # =&gt; :bar
baz.quux # NoMethodError
</code></pre>

<p>Classes are just objects like any other object. So, just like any other object, they have singleton classes. Methods defined in the singleton class of an object that happens to be a class are typically called <em>class methods</em>, although again, there's nothing special about them, they are just singleton methods of an object which happens to be a class, which in turn means they are just regular instance methods of a singleton class which belongs to an object which happens to be a class.</p>

<p>So, if you compare this to something like Java, you can see a duality: in Java, there is only one kind of class but there are two kinds of methods (instance and static). In Ruby, there is only one kind of method (instance) but it can be defined in different kinds of classes (regular and singleton).</p>

<blockquote>
  <p>I find this kinda complex so I would like to understand what does the operator &lt;&lt; do in this context</p>
</blockquote>

<p>That's just the syntax for opening up a singleton class as opposed to opening up a class.</p>

<blockquote>
  <p>and what is possible to put on both ends.</p>
</blockquote>

<p>Well, on the left has to be the keyword <code>class</code> and on the right any expression that returns an object.</p>
"
"<pre><code>module Mod
  var = 2 
end

class Person
  include Mod
  puts var
end
</code></pre>

<p>Simple question. Why can't i access a local variable imported from a module?</p>
","2988","","<p>Because it's a local variable. That's what they're there for. Local variables are local to the lexical scope they are defined in. That's why they are called local variables.</p>
"
"<p>I ran across an unexpected result when passing an array to a function and the behavior of &lt;&lt; vs +=</p>

<p>Can anyone explain why the following 2 programs have different output?</p>

<pre><code>def build_results
  result = []

  [1, 2, 3].each { |value| concat_to_array(value, result) }

  result
end

def concat_to_array(value, arr)
  arr &lt;&lt; value
end

build_results() # Will return [1,2,3].  As I would expect.
</code></pre>

<p>vs</p>

<pre><code>def build_results
  result = []

  [1, 2, 3].each { |value| add_to_array(value, result) }

  result
end

def add_to_array(value, arr)
  arr += [value]
end

build_results() # Will return [], not what I expected!
</code></pre>

<p>My understanding is that in Ruby all function arguments are passed by reference, so arr += [value] should still be operating on the passed array and append the value.</p>

<p>This is not the case, which tells me I don't understand the difference between += and &lt;&lt; in this context.</p>

<p>Please enlighten me!</p>

<p>Thanks so much.</p>
","2988","","<blockquote>
  <p>My understanding is that in Ruby all function arguments are passed by reference</p>
</blockquote>

<p>No, as you have discovered yourself, Ruby is pass-by-value, not pass-by-reference. That's why you are seeing the result you are seeing.</p>
"
"<p>I wrote this script to find the first 100 primes that are also palindromes. For some reason some primes are not being printed (13, 17, etc.), and the palindromic function does not seem to work. Any tips? </p>

<pre><code>#palindrome checker
def is_palindrome?(number)
    number == number.to_s.reverse.to_i
end


#primes will consists of all primes starting with 2
#i will be incrememented and each i will be checked for being prime
primes = [2]
i = 3

#we only want the first 100 palindromic primes
while primes.length &lt; 100
    #test is false for a prime
    test = false
    #checks if i is divisible by any of the elements in the array
    primes.each { |n| 
        if i % n == 0
            test = true
        end
    }
    #if i is prime that it is added to the primes array
    if test == false
        primes.push(i)
    end
    i += 1
end

#remove all non palindromic primes 
primes.each { |n|
    if is_palindrome?(n) == false
        primes.delete(n)
    end
}

#puts palindromic primes
puts primes
</code></pre>
","2988","","<p>Here's how I'd write it:</p>

<pre><code>require 'prime'

is_palindrome = -&gt; i { i.to_s == i.to_s.reverse }
puts Prime.lazy.select(&amp;is_palindrome).take(100).to_a
</code></pre>

<p>Simple, clear, concise.</p>

<p>The output is:</p>

<pre><code># 2
# 3
# 5
# 7
# 11
# 101
# 131
# 151
# 181
# 191
# 313
# 353
# 373
# 383
# 727
# 757
# 787
# 797
# 919
# 929
# 10301
# 10501
# 10601
# 11311
# 11411
# 12421
# 12721
# 12821
# 13331
# 13831
# 13931
# 14341
# 14741
# 15451
# 15551
# 16061
# 16361
# 16561
# 16661
# 17471
# 17971
# 18181
# 18481
# 19391
# 19891
# 19991
# 30103
# 30203
# 30403
# 30703
# 30803
# 31013
# 31513
# 32323
# 32423
# 33533
# 34543
# 34843
# 35053
# 35153
# 35353
# 35753
# 36263
# 36563
# 37273
# 37573
# 38083
# 38183
# 38783
# 39293
# 70207
# 70507
# 70607
# 71317
# 71917
# 72227
# 72727
# 73037
# 73237
# 73637
# 74047
# 74747
# 75557
# 76367
# 76667
# 77377
# 77477
# 77977
# 78487
# 78787
# 78887
# 79397
# 79697
# 79997
# 90709
# 91019
# 93139
# 93239
# 93739
# 94049
</code></pre>
"
"<p>In typescript, I have the following:</p>

<pre><code>self.newId = 0;

self.GetNewId = () =&gt; {
                return --self.newId;
                };
</code></pre>

<p>My guess is that <code>return --self.newId;</code> does two things:</p>

<ol>
<li>it returns the current value of <code>self.newId</code></li>
<li>it then decreases the value of <code>self.newId</code> by 1. (To -1)</li>
</ol>

<p>I assume that the next time that <code>GetNewId</code> is called, it will return <code>-1</code> and then decrease the value to <code>-2</code>, etc.</p>

<p>Can anyone confirm</p>
","2988","Jörg W Mittag","<p>No. What you are describing is the <em>post-decrement</em> operator, which is written like this:</p>

<pre><code>foo--
</code></pre>

<p>It will indeed, <em>first</em> evaluate the expression and <em>then</em> decrement the value.</p>

<p>This is the <em>pre-decrement</em> operator, which is written like this:</p>

<pre><code>--foo
</code></pre>

<p>It will <em>first</em> decrement, <em>then</em> evaluate.</p>

<p>So, what this snippet will do is </p>

<ol>
<li>it decreases the value of <code>self.newId</code> by <code>1</code>. (To <code>-1</code>)</li>
<li>it then returns the current value of <code>self.newId</code></li>
</ol>

<p>As a mnemonic, you can just think about reading the expression left-to-right: does the operator come first or last?</p>
"
"<p>I have a bunch of modules I'd like to define in a namespace, I put them in an initializer, but I'm getting a 'wrong constant name' exception:</p>

<pre><code># this is a self-contained example
require 'active_support/all'
# ==&gt; true

[:baz, :qux].each do |name|
  Object.const_set(""FooBar::#{name.to_s.camelize}"", Module.new {
    define_singleton_method :my_awesome_static_method do |amount|
      DoSomething.calculate(amount)
    end
  })
end
# =NameError: wrong constant name FooBar::Baz
# = from (irb):4:in `const_set'
# = from (irb):4:in `block in irb_binding'
# = from (irb):3:in `each'
# = from (irb):3
# = from /usr/local/var/rbenv/versions/2.0.0-p353/bin/irb:12:in `&lt;main&gt;'
</code></pre>

<p>I think that I am getting this because the initializer runs before <code>FooBar</code> is defined, but the problem is that if I define it in this initializer, <code>FooBar.constants</code> is empty, I'm not sure what's wrong.</p>
","2988","","<p>Your constant name contains colons. That's not allowed in a constant name.</p>
"
"<p>In the following, variable <code>_</code> (underscore) is an <code>Array</code>, <code>foo == ""foo""</code>, and <code>bar == ""bar""</code>.</p>

<pre><code>_, foo, bar = ["""", ""foo"", ""bar""]
_ # =&gt; ["""", ""foo"", ""bar""]
</code></pre>

<p>Can someone explain what the underscore does and where it is useful to use?</p>
","2988","","<p>It's just a variable like any other. You could have used <code>quux</code> or whatever other name you like.</p>

<p>Except … you would get a warning about an unused local variable named <code>quux</code>, whereas variables whose names start with <code>_</code> don't get a warning. This is an encoding of a convention to use <code>_</code> as the name of a variable that you want to ignore.</p>
"
"<p>I'm trying to match files from a directory to other files in an other directory, and its sub directories using ruby.</p>

<p>I tried to make a small test using this file architecture:</p>

<pre><code>tree .
.
├── src
│   ├── lol
│   │   └── toto
│   └── lolilolpouet
│       └── tutu
│           └── tata
├── test
│   ├── tata
│   └── toto
└── test.rb
</code></pre>

<p>My ruby code is:</p>

<pre><code>require 'find'

src_dir_files = []
Find.find('./src') do |file|
  src_dir_files &lt;&lt; file
  puts ""found #{file}""
end


Dir.foreach('./test') do |file|
  next if file == '.' or file == '..'
  puts ""search for /#{file}""
  res = src_dir_files.bsearch{|s| s.end_with? ""/#{file}""}
  puts ""Found :#{res}""
end
</code></pre>

<p>The output is:</p>

<pre><code>found ./src
found ./src/lol
found ./src/lol/toto
found ./src/lolilolpouet
found ./src/lolilolpouet/tutu
found ./src/lolilolpouet/tutu/tata
search for /tata
Found :./src/lolilolpouet/tutu/tata
search for /toto
Found :
</code></pre>

<p>The search for toto returns no result.
Any idea why, and how to fix it ?</p>

<p>Edit: the code above behave as intended if I replace bsearch by find.
Can any one explain to me the difference between theses two methods ?</p>

<p>I uploaded a tgz if you want to try it:</p>

<p><a href=""http://cl.ly/331J0C2e2D0Y"" rel=""nofollow"">http://cl.ly/331J0C2e2D0Y</a></p>
","2988","","<p>I'm guessing that <code>src_dir_files</code> isn't sorted.</p>
"
"<p>Given a Ruby class:</p>

<pre><code>class Foo
  def initialize(options={})
    @sensitive = options.delete :sensitive
  end
end
</code></pre>

<p>If I create an instance of that class in IRB, I get to see instance vars and memory address.</p>

<pre><code>irb(main):002:0&gt; Foo.new(sensitive: 'foo')
=&gt; #&lt;Foo:0x007fe766134a98 @sensitive=""foo""&gt;
</code></pre>

<p>If I create an instance of AWS::S3, I don't:</p>

<pre><code>irb(main):003:0&gt; require 'aws-sdk'
=&gt; true
irb(main):004:0&gt; AWS::S3.new(access_key_id: 'aki', secret_access_key: 'sak')
=&gt; &lt;AWS::S3&gt;
</code></pre>

<p>Note that <code>AWS::S3</code> is not a singleton (at least not in the sense of <a href=""http://ruby-doc.org/stdlib-2.0.0/libdoc/singleton/rdoc/Singleton.html"" rel=""nofollow"">explicitly including the Singleton module</a>).</p>

<p>Is there anything I can do to tell IRB not to output instance vars and/or memory address?</p>

<p>(I've already tried <code>.to_s</code> but I get a string containing the memory address for instances of both classes without any instance vars.)</p>
","2988","","<p>The standard method being used to render human-readable debugging output (not just in IRb but in general, e.g. on Rails error pages etc.) is <code>#inspect</code>. Depending on which extensions you loaded, your command line options or whether you are using Pry instead of IRb, it may also look for a <code>#pretty_inspect</code> first.</p>
"
"<p>Given the following code:</p>

<pre><code>params = {:async =&gt; true, :contact_id =&gt; ""101""}
puts ""async is #{params['async']}""

if params['async'] == true
  puts ""Do async stuff""
  # TODO Launch background task
  return [204, {}, ['']]
end
</code></pre>

<p>why do I never get the line <code>""Do async stuff""</code> when I do see the output <code>""async is true""</code>?</p>
","2988","","<p>There is no key <code>'async'</code> in your <code>params</code> hash, therefore it will return <code>nil</code> which is not equal to <code>true</code>. There <em>is</em> a key <code>:async</code> in your hash, but you are not asking for that key.</p>
"
"<p>I understand that Ruby arrays are both dynamically allocated <em>and</em> dynamically resized; however, I can't seem to find any clear information on whether they are <em>true</em> arrays; i.e. they are contiguous in memory (more specifically, the references they hold are contiguous in memory).</p>

<p>My assumption would be that increasing the size of a Ruby array entails reallocation of the entire array to a larger contiguous memory block where required.</p>

<p>Is this correct, or is ""array"" a misnomer in this instance?</p>
","2988","","<p>The Ruby Language Specification does not prescribe any particular memory representation for <code>Array</code> objects (or <em>any</em> object, actually). That would be too restricting for the implementors. In fact, it doesn't even prescribe that objects have to live in memory <em>at all</em>, which makes possible implementations like MagLev where the Object Memory is a distributed on-disk OO database instead of RAM.</p>

<p>The Ruby Language Specification also does not prescribe any particular performance characteristics for any methods of the <code>Array</code> class.</p>

<p><em>However</em>, Ruby programmers have come to expect certain performance guarantees from certain <code>Array</code> methods (and any implementation that doesn't meet those guarantees will simply be ignored by the community), e.g. </p>

<ul>
<li><code>Array#[]</code> shall have a worst-case step complexity of O(#of items sliced)</li>
<li><code>Array#&lt;&lt;</code> shall have a worst-case step complexity of O(n) and an amortized worst-case step complexity of O(1)</li>
<li>… and so on.</li>
</ul>

<p>Basically, the typical performance guarantees you would expect from a dynamic array.</p>

<p>This more or less means that the only way to meet those performance guarantees is that the implementation must use contiguous storage and exponential resizing.</p>
"
"<p>I have method <code>current_user</code>.</p>

<p>This method returns <code>#&lt;User id: 8, ... &gt;</code></p>

<p>Also I have two inherited classes from <code>User</code>: <code>Trainer</code> and <code>Client</code></p>

<p>I added methods to my <code>User.rb</code>:</p>

<pre><code>def client?
  self.class.name == ""Client""
end

def trainer?
  self.class.name == ""Trainer""
end
</code></pre>

<p>But <code>current_user.client?</code> and <code>current_user.trainer?</code> always return false.</p>

<p>Why is this happening? What I'm doing wrong?</p>
","2988","","<p>Others have already answered the probably reasons why your code might fail. Let me just add that this is <em>terrible</em> OO code! An object should <em>never ever</em> need to check its own class! Never! Just let the method dispatcher do its job, that's what it's there for!</p>

<pre><code>class Client &lt; User
  def client?;  true  end
  def trainer?; false end
end

class Trainer &lt; User
  def client?;  false end
  def trainer?; true  end
end
</code></pre>
"
"<p>I'm currently running a project where we program in both Java, JavasSript and PHP.
Is it possible to write tests for the different pieces of the program/different langauges in the same language/framework? So that you can simply press Run on the tests once instead of installing three frameworks and running each of the frameworks once (once for Java, once for PHP and once for JavaScript)?</p>
","2988","","<p>Yes, that is possible.</p>

<p>One way would be to write a custom test driver for your testing framework of choice, which generates tests in the target language and runs them. I know of one company which did that for an embedded project. They wrote their tests in Ruby using the RSpec testing framework, but they actually replaced most of the RSpec machinery so that instead of running the tests <em>as-is</em> in Ruby, it would actually generate tests in C and run them against a mocked up version of their hardware, or even automatically upload them to the robot and run them there.</p>

<p>Another way would be to run all three languages on the same platform and use a testing framework for that platform. For example, you could run your PHP code on the JVM (using Quercus or P8) and your JavaScript code on the JVM (using dyn.js, Rhino or Nashorn) and then test all three using JUnit.</p>
"
"<p>In .NET, we have the types <code>interface</code> and <code>class</code>. There are a few relationships between these two types. In this example, we have all the relationships in .NET:</p>

<pre><code>class Vehicle
{
}

interface IMovable
{
   void Move();
}

class Engine
{
}

class Car : Vehicle, IMovable
{
   private readonly Engine _engine;
   public Car(Engine engine) { _engine = engine; }

   public void Move() {}
}
</code></pre>

<ul>
<li><code>Car</code> extends <code>Vehicle</code> - a <code>Car is-a Vehicle</code></li>
<li><code>Car</code> implements <code>IMovable</code> - a <code>Car can-do IMovable</code></li>
<li><code>Car</code> needs an <code>Engine</code> to create itself - a <code>Car has-a Engine</code></li>
</ul>

<p>But I don't understand Ruby's modules because they have functionality but they aren't interfaces (in that they define method bodies, so they are more akin to subclassing), but they aren't superclasses (because multiple inheritance is not done in Ruby).</p>

<p>Can someone help me understand the usage of modules in Ruby and possibly give an analogy to .NET?</p>

<p>EDIT: Seeing the 3 votes to close due to duplicate, I must clarify.
<strong>I am asking what is the relationship between classes and modules (given that classes implementing interfaces is <code>can-do</code> in .NET)</strong>. The 'duplicate' answer does NOT address that question.</p>
","2988","","<p>Modules can be used for two things in Ruby: as namespaces for constants and as mixins.</p>

<p>The namespace usage is quite similar to C# namespaces: a module can contain constants (and all constants are contained in modules, even if you don't explicitly see it, in which case they belong to <code>Object</code>) which are namespaced to that module. So, <code>Foo::BAR</code> and <code>Baz::BAR</code> are two different constants even though they have the same name.</p>

<p>Mixins are a bit trickier. One way to look at a mixin, is that <em>a mixin is a class which doesn't know its superclass</em> (or a class that is parameterized by its superclass). Okay, this sounds a bit convoluted. Let's look at an example.</p>

<p>Imagine, something like this were possible in C#:</p>

<pre><code>interface IEachable&lt;E&gt; {
  IEachable&lt;E&gt; Each(Action&lt;E&gt; block);
}

class Enumerable&lt;S, E&gt; : S where S : IEachable&lt;E&gt; {
  List&lt;T&gt; Map(Func&lt;E, T&gt; block) {
    var res = new List&lt;T&gt;();
    this.Each(e =&gt; {†res.Add(block(e));});
    return res;
  }
}
</code></pre>

<p>So, you have a generic class <code>Enumerable</code> which inherits from its type parameter <code>S</code> (the superclass). This is actually a pretty accurate description of the <code>Enumerable</code> mixin in Ruby. Everytime you instantiate the generic class into a concrete type, it ends with a different superclass.</p>

<p>So, the <em>same</em> class appears <em>multiple</em> times in the inheritance hierarchy, each time with a <em>different</em> superclass, but always just <em>one</em>.</p>

<p>This is different from multiple inheritance, where the <em>same</em> class appears <em>once</em> in the inheritance hierarchy, with <em>multiple</em> superclasses.</p>

<p>This property, that the class always has just one superclass, is called <em>linearization</em> and it solves a lot of the problems that traditional multiple inheritance has, which are usually related to the fact that there are multiple possible paths between two classes in the inheritance DAG, whereas with mixin linearization, there is just an inheritance <em>tree</em>, so there is always just one possible path.</p>

<p>In particular, this is what happens, when you mix a module <code>M</code> into a class <code>C</code> with superclass <code>S</code>:</p>

<pre><code>module M; end

class C &lt; S
  include M
end
</code></pre>

<p>When you call <code>include</code>, Ruby will</p>

<ol>
<li>create a new class <code>M'</code> whose method table pointer, constant table pointer, class variable table pointer and instance variable table pointer point to <code>M</code>'s method table, constant table, class variable table and instance variable table</li>
<li>set <code>M'</code>'s superclass to <code>C</code>'s current superclass (i.e. <code>S</code>)</li>
<li>set <code>C</code>'s superclass to <code>M'</code></li>
</ol>

<p>So that the inheritance hierarchy now looks like this:</p>

<pre><code>C &lt; M' &lt; S
</code></pre>

<p>[Note: <em>Actually</em> <code>include</code> delegates to <code>append_features</code>, which really does the above work, and just like almost everything else in Ruby, you can actually alter this behavior by overriding <code>append_features</code>, but that is advanced meta-magic.]</p>

<p>So, what are the practical implications of having a class that can be used in multiple places in the inheritance hierarchy? Well, you can use it to implement common behavior for unrelated classes.</p>

<p>Again, look at the <code>Enumerable</code> mixin: it provides common behavior for any object that conforms to the following protocol: it must have an <code>each</code> method that <code>yield</code>s all elements one-by-one and returns <code>self</code>. That's it. There doesn't need to be any sort of inheritance relationship between the classes of those objects. All that is required is that they respond to <code>each</code> in an appropriate manner.</p>

<p>Which leads us to your question about interfaces: <em>that's</em> an interface. Although in Ruby, we usually call it <em>protocol</em>. Protocols in Ruby are very much like interfaces in C#, however, there is one crucial difference: there is no such thing as a protocol in Ruby. Protocols are <em>latent</em>, not <em>manifest</em>, they only exist in the programmer's head, in documentation, but <em>not</em> in the source code, and thus they cannot be checked by the language.</p>
"
"<p>Imagine a class including comparable like this:</p>

<pre><code>class Element
  include Comparable
  attr_accessor :name, :pos_x, :pos_y

  def initialize(name, pos_x, pos_y)
    @name = name
    @pos_x = pos_x
    @pos_y = pos_y
  end

  def &lt;=&gt;(other)
    if (@pos_x == other.pos_x) and (@pos_y == other.pos_y)
      return 0
    else 
      return @name &lt;=&gt; other.name
    end
  end

  def eql?(other)
    self == other
  end
end
</code></pre>

<p>How would you implement the <code>hash</code> function such that <code>a.hash == b.hash</code> in this case? In general I'd do:</p>

<pre><code>def hash
  @name.hash
end
</code></pre>

<p>But this does not include <code>pos_x</code> and <code>pos_y</code>.</p>
","2988","","<p>There is nothing you can do beyond what you are already doing. Note that your <code>hash</code> function is a really bad one because it has poor distribution and will lead to a lot of collisions, which will probably destroy the O(1) amortized worst-case step complexity guarantees of <code>Hash</code>, but there really is nothing you can do about that.</p>

<p>Note, however, that there is a much bigger problem with your definitions of equality and ordering: they <em>aren't</em> equality or ordering!</p>

<p>Equality and ordering relationships need to be </p>

<ul>
<li>reflexive: a ~ a</li>
<li>symmetric: a ~ b &lt;=> b ~ a</li>
<li>transitive: a ~ b &amp;&amp; b ~ c => a ~ c</li>
</ul>

<p>Both your equality and ordering relations violate transitivity:</p>

<pre><code>one   = Element.new('Z', 1, 1)
two   = Element.new('A', 1, 1)
three = Element.new('A', 2, 2)

one == two   # =&gt; true
two == three # =&gt; true
one == three # =&gt; false # Huh?

one &lt;= two   # =&gt; true
two &lt;= three # =&gt; true
one &lt;= three # =&gt; false # Huh?
</code></pre>

<p>All methods that use the spaceship operator (e.g. <code>Enumerable#sort</code>) rely on those laws. So, your <code>&lt;=&gt;</code> and <code>eql?</code> implementations are fundamentally broken.</p>
"
"<p>Is there a simpler way to do this in ruby?</p>

<pre><code>ops_schema_name = ""ops""
tables.each do |table|
  table.schema_name = ops_schema_name
end
</code></pre>

<p>When reading properties, is it as simple as <code>tables.collect(&amp;:schema_name)</code>?
I am assuming there is a shortcut for setters.</p>
","2988","","<p>You could do </p>

<pre><code>schema_name_updater = -&gt; table { table.schema_name = 'ops' }
tables.each(&amp;schema_name_updater)
</code></pre>
"
"<p>I have a module (cgi_helper.rb), a cgi that calls that module, and an html template. I get the following error:</p>

<blockquote>
  <p>/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:45:in <code>require': cannot load such file -- cgi_helper (LoadError)
          from     &gt;/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:45:in</code>require'
          from lab4.cgi:8:in `'</p>
</blockquote>

<p>The Module: <a href=""http://pastebin.com/YFj0rC8p"" rel=""nofollow"">http://pastebin.com/YFj0rC8p</a></p>

<p>The CGI: <a href=""http://pastebin.com/xs5LiV2a"" rel=""nofollow"">http://pastebin.com/xs5LiV2a</a></p>

<p>I can't figure out why it can't find the module. It's executable and in the same dir as the cgi. Here is the erb template. </p>

<pre><code>&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Number&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;Passwd&lt;/th&gt;
&lt;th&gt;UID&lt;/th&gt;
&lt;th&gt;GID&lt;/th&gt;
&lt;th&gt;Home Dir&lt;/th&gt;
&lt;th&gt;Shell&lt;/th&gt;
&lt;% students.each do |x| %&gt;
&lt;% next if eachname[x].nil? %&gt;
&lt;% s = Student.new(eachname[x].split(':')) %&gt;
&lt;tr&gt;
&lt;% columns.each do |c| %&gt;
&lt;td&gt;&lt;%= s.send(c).to_s %&gt;&lt;/td&gt;
&lt;% end %&gt;
&lt;/tr&gt;
&lt;% end %&gt;
&lt;/table&gt;
&lt;% finish = Time.now %&gt;
&lt;h2&gt; Total Elapsed Time:&lt;%= (finish.to_f - start.to_f).to_s %&gt;&lt;/h2&gt;
</code></pre>
","2988","","<p>First off: <code>require</code> doesn't load modules, it loads files.</p>

<p><code>require</code> loads a file from the <code>$LOAD_PATH</code>, if the directory your <code>cgi_helper.rb</code> file is in isn't on the <code>$LOAD_PATH</code>, then it won't be found. It should be the job of the package management system (e.g. RubyGems) to adjust the <code>$LOAD_PATH</code> so that your files can be found.</p>

<p>If you want to load a file relative to the location of the file that is doing the loading, then you should use <code>require_relative</code>:</p>

<pre><code>require_relative 'cgi_helper'
</code></pre>

<p>Manually fiddling with the <code>$LOAD_PATH</code> hasn't been necessary for ages.</p>
"
"<p>I want to return the utf-8 tick character <code>&amp;#10004;</code> &#10004; in my ruby method.</p>

<p>I reason I am doing it in my method is because I need that character in an excel column generated by rails axlsx.</p>

<p>I know we can use the content_tag to return html block tag, but not sure how I can use it to return the utf-8 character. If there is an alternative can someone please suggest me one.</p>
","2988","","<p>That's easy:</p>

<pre><code>def my_method
  '✔'
end
</code></pre>
"
"<p>My code is supposed to read a file on the server, store its content in an Array, then read the array elements (eventually each element is a line) and split each line into 7 parts by (:)</p>

<p>I wrote this code and it works 100% fine.</p>

<pre><code>lines = File.readlines('/etc/passwd')

lines.each do |line|
line = line.chomp! #I removed the \n
line_arr = line.split(/:/)
puts line_arr.inspect
puts ""*************""
end
</code></pre>

<p>I just want to know if there is a shortcut to do this since each element of the array ends with \n.
Maybe I am a bit confused between a an array elements ending with \n and a string that contains \n</p>

<p>the content of the file looks like this</p>

<pre><code>root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
</code></pre>

<p>As for the output, there's no specific format, because I am going to use this part and extend my code later. As long as I can access those 7 parts that I extracted from the line_arr, i should be fine.</p>

<p>thank you</p>
","2988","","<pre><code>require 'etc'

[].tap {|ary| Etc.passwd {|u| 
  ary &lt;&lt; [u.name, u.passwd, u.uid, u.gid, u.gecos, u.dir, u.shell, u.change, 
          u.uclass, u.expire]
}}
</code></pre>

<p>Rule of thumb: never try to reimplement behavior that <a href=""http://ruby-doc.org/stdlib-2.1.1/libdoc/etc/rdoc/Etc.html#method-c-passwd"" rel=""nofollow"">someone else has already written for you</a>. Unless you are really, <em>really</em>, <strong>really</strong>, <strong>REALLY</strong> smart.</p>

<p>Actually, now that you have edited your question, I don't even see why you need those arrays in the first place and cannot just use the <code>Etc.passwd</code> iterator and <code>Struct::Passwd</code> directly.</p>
"
"<p>I have been using <a href=""http://mislav.uniqpath.com/poignant-guide/book/chapter-4.html"" rel=""nofollow"">Why's Poignant Guide to Ruby</a> and am stuck on a particular example. The code asks to create two files, with one being linked to the other using <code>require 'wordlist'</code> (which did not originally work, but after getting an error and searching around I found adding <code>./</code> <i>before</i> <code>wordlist</code> as a solution). </p>

<p>After retyping a couple of times, and then just copying-pasting, the <code>Enter your idea:</code> prompt appears, but after that I get an error saying:</p>

<pre><code>test.rb:6:in '&lt;main&gt;': undefined local variable or method 'code_words' for main:Object     (NameError)
</code></pre>

<p>What I get from this is that the main file is still not recognizing the variable declared in <code>wordlist.rb</code>? Thanks, I'm really new to this!</p>

<p><b>wordlist.rb:</b></p>

<pre><code>code_words = {
  'starmonkeys' =&gt; 'Phil and Pete, those prickly chancellors of the New Reich',
  'catapult' =&gt; 'chucky go-go', 
  'firebomb' =&gt; 'Heat-Assisted Living',
  'Nigeria' =&gt; ""Ny and Jerry's Dry Cleaning (with Donuts)"",
  'Put the kabosh on' =&gt; 'Put the cable box on'
}
</code></pre>

<p><b>test.rb:</b></p>

<pre><code>require './wordlist'

print ""Enter your new idea: "" 
idea = gets
code_words.each do |real, code| 
idea.gsub!( real, code )
end

print ""File encoded.  Please enter a name for this idea: "" 
idea_name = gets.strip
File::open( ""idea-"" + idea_name + "".txt"", ""w"" ) do |f|
  f &lt;&lt; idea
end
</code></pre>
","2988","","<p><code>code_words</code> is a local variable. Local variables are local to the scope they are defined in, that's why they are called <em>local</em> variables. <code>code_words</code> is defined in the scope of the <code>wordlist.rb</code> script. It is <em>not</em> defined anywhere else.</p>
"
"<p>In the following example, module <code>M</code> is included in class <code>A</code> and, afterwards, re-opened to add a submodule <code>MM</code>, and a method. Then, it is included in class <code>B</code>:</p>

<pre><code>module M
  def foo; ""foo"" end 
end

class A
  include M
end

module MM
  def baz; ""baz"" end 
end

module M
  include MM
  def bar; ""bar"" end 
end

class B
  include M
end
</code></pre>

<p>Instances of both <code>A</code> and <code>B</code> can access <code>M</code>'s method regardless of when they were added, but only <code>B</code> has the method of submodule <code>MM</code>:</p>

<pre><code>a = A.new
a.foo
a.bar
a.baz # =&gt; Error: not defined

b = B.new
b.foo
b.bar
b.baz
</code></pre>

<p>I think this is inconsistent behaviour and would like to understand why this happens. </p>
","2988","","<p>When you <code>include</code> a module <code>M</code> into a class <code>C</code> with superclass <code>S</code>, this is what happens:</p>

<ol>
<li>a class <code>M'</code> is created whose method table pointer, constant table pointer, instance variable table pointer and class variable table pointer point to <code>M</code>'s method table, constant table, instance variable table and class variable table.</li>
<li><code>M'</code>s superclass pointer is set to <code>C</code>'s superclass (i.e. <code>S</code>)</li>
<li><code>C</code>'s superclass pointer is set to <code>M'</code></li>
</ol>

<p>This process is repeated recursively for any modules mixed into <code>M</code> (and modules mixed into modules mixed into <code>M</code> and so forth).</p>

<p>This way, the linearization of the mixin hierarchy needs to only happen <em>once</em>, when you call <code>include</code>. The alternative (and this is what you seem to be expecting to happen) would be to perform this pretty expensive process for <em>every single method call</em>.</p>
"
"<p>Is there a simple way to initialize a class variable through a class method in Ruby? I'm trying this:</p>

<pre><code>class MyClass
    @@product_families = MyClass.load_pgrollups(File.join(File.dirname(__FILE__), ASSETS_FOLDER_NAME, PGROLLUP_CSV_FILENAME))

    def self.load_pgrollups(csv_file)                                                                                                                                        
       ....

       return product_families
    end
</code></pre>

<p>I'm getting an exception: <strong>undefined method `load_pgrollups' for ModuleName::myClass:Class</strong></p>

<p>I don't necessarily want to initialize a class variable. I also tried to initialized a constant in a module through a module function</p>

<pre><code>module ModuleName
    PRODUCT_FAMILIES = load_pgrollups(File.join(File.dirname(__FILE__), ASSETS_FOLDER_NAME, PGROLLUP_CSV_FILENAME))

    def load_pgrollups(csv_file)                                                                                                                                        
       ....

       return product_families
    end
</code></pre>

<p>but I got <strong>undefined method `load_pgrollups' for MyModule:Module</strong></p>
","2988","","<p>You define the method in line 4, but you are already calling it in line 2, where it hasn't been defined yet. So, yes, the method is undefined at the point you are calling it.</p>
"
"<p>I've been practicing machine learning on the task of restoring spaces in a joined text. Since I decided to use the dictionary feature, I searched the web for some ideas of splitting the text based on the dictionary, and I stumbled upon <a href=""http://stackoverflow.com/a/11642687/1709795"">this idea</a>. Based on it, I've written a <a href=""http://pastebin.com/3uEX2c85"" rel=""nofollow"">script</a> that converts the text without spaces to a vertical form needed by the ML tool:</p>

<pre class=""lang-python prettyprint-override""><code>#!/usr/bin/python
# -*- coding: UTF-8 -*-
from math import log
import string
import fileinput

words = open(""dictionary.txt"", encoding=""utf8"").read().split()
wordcost = dict((k, log((i+1)*log(len(words)))) for i,k in enumerate(words))
maxword = max(len(x) for x in words)

def infer_spaces(s):
    # Find the best match for the i first characters, assuming cost has
    # been built for the i-1 first characters.
    # Returns a pair (match_cost, match_length).
    def best_match(i):
        candidates = enumerate(reversed(cost[max(0, i-maxword):i]))
        return min((c + wordcost.get(s[i-k-1:i], 9e999), k+1) for k,c in candidates)

    # Build the cost array.
    cost = [0]
    for i in range(1,len(s)+1):
        #original script was pretty basic, so symbols\words not in dictionary
        #broke the processing completely. This fixed the problem.
        if s[i-1] not in wordcost:
            wordcost[s[i-1]] = log((len(words) + 1)*log(len(words)))
        c,k = best_match(i)
        cost.append(c)
        print(cost)

    # Backtrack to recover the minimal-cost string.
    out = []
    i = len(s)
    while i&gt;0:
        c,k = best_match(i)
        assert c == cost[i]
        out.append(s[i-k:i])
        i -= k

    return "" "".join(reversed(out))

def char_type(s):
    """""" Character type function """"""
    if s in string.punctuation:
        return ""P""
    elif s in string.digits:
        return ""D""
    elif s in string.ascii_letters:
        return ""F""
    elif s.isupper():
        return ""U""
    else:
        return ""R""


def test_to_vert(s):
    """"""
   Transforms regular text into a vertical form.
   """"""
    s = s.rstrip('\n')
    orig_sent = s
    a = s.lower().replace(""ё"", ""е"")
    a = infer_spaces(a)
    space_indices = []
    a = list(a)
    for i,k in enumerate(a):
        if k == "" "":
            space_indices.append(i)

    orig_sent = list(orig_sent)
    for i in space_indices:
        orig_sent.insert(i, "" "")

    orig_sent = """".join(orig_sent)
    orig_sent = orig_sent.split("" "")

    answer = []

    for word in orig_sent:
        i = 0
        for letter in word:
            answer.append(letter + ""\t"" + letter.lower() + ""\t"" + \
                  char_type(letter) + ""\t"" + str(i) + ""|"" + str(len(word)))                                                    
            i += 1
    return '\n'.join(answer)

testfile = open(""head.txt"", encoding=""utf8"")
output = open(""test_python.txt"", 'w', newline=""\n"", encoding=""utf8"")



for line in testfile:
    if line in ['\n', '\r\n']:
        output.write('\n')
    else:
        output.write(test_to_vert(line))
        output.write('\n\n')

output.write('\n\n\n')
testfile.close()
output.close()
</code></pre>

<p>So far so good, it works. After that I decided to practice my Ruby (I'm relatively new to coding), so I tried to re-write the script (<a href=""http://pastebin.com/YnfNrCdT"" rel=""nofollow"">Ruby version</a>):</p>

<pre class=""lang-ruby prettyprint-override""><code>#!/usr/bin/ruby
#encoding: UTF-8
Encoding::default_internal = ""UTF-8""
Encoding::default_external = ""UTF-8""

require 'active_support/core_ext'

@wordcost = Hash.new
@count = %x{wc -l dictionary.txt}.split.first.to_i

i = 0

File.readlines(""dictionary.txt"").each do |line|
  line.chomp!

  @wordcost[line.mb_chars.downcase.to_s] ||= Math.log((i+1) * Math.log(@count))
  i += 1
end

def infer_spaces(s)

  @sent = s.chomp

  def best_match(i)
    result = []
    candidates = @cost[0, i].reverse
    candidates.each_index do |index|
      if @wordcost.has_key?(@sent[i-index-1...i].mb_chars.downcase.to_s)
        result &lt;&lt; [(candidates[index] + @wordcost[@sent[i-index-1...i].mb_chars.downcase.to_s]), (index + 1)]
      else
        result &lt;&lt; [(candidates[index] + Float::INFINITY), (index + 1)]
      end
    end
    result.sort!
    return result[0][0], result[0][1]
  end

  @cost = [0]
  for i in (1..@sent.length)
    @wordcost[@sent[i-1].mb_chars.downcase.to_s] ||= Math.log(@count * Math.log(@count))
    c, k = best_match(i)
    @cost &lt;&lt; c
  end

  out = []
  i = @sent.length
  while i&gt;0
    c, k = best_match(i)
    if c != @cost[i]
      raise ""Something went wrong""
    end
    out &lt;&lt; @sent[i-k...i]
    i -= k
  end

  return out.reverse.join("" "")

end

def char_type(string)
  case string
  when /[[:punct:]]/
    return ""P""
  when /[[:digit:]]/
    return ""D""
  when /[A-z]/
    return ""F""
  when /[[:upper:]]/
    return ""U""
  else
    return ""R""
  end
end

def test_to_vert(s)
  s.chomp!
  orig_sent = s
  a = s.mb_chars.downcase.to_s
  a = infer_spaces(a)
  space_indices = []
  a = a.split("""")
  a.each_index do |i|
    if a[i] == "" ""
      space_indices &lt;&lt; i
    end
  end
  orig_sent = orig_sent.split("""")
  space_indices.each do |x|
    orig_sent.insert(x, "" "")
  end
  orig_sent = orig_sent.join
  orig_sent = orig_sent.split

  answer = []

  orig_sent.each do |word|
    letters = word.split("""")
    letters.each_index do |i|
      answer &lt;&lt; letters[i] + ""\t"" + letters[i].mb_chars.downcase.to_s + \
      ""\t"" + char_type(letters[i]) + ""\t"" + i.to_s + ""|"" + word.length.to_s
    end
  end

  return answer.join(""\n"")
end

file = File.open('test_ruby_vert.txt', 'w')

File.readlines(""test.txt"").each do |line|
  if line.chomp.empty?
    file.write(""\n"")
  else
    file.write(test_to_vert(line))
    file.write(""\n\n"")
  end
end

file.close
</code></pre>

<p>The rewritten script works, however, it is really slow compared to the Python version (a ~40000-line text is processed in like not more than an hour, a Ruby script worked for hours for now, and it only processed like 15% of the text).</p>

<p>I wonder what could slow it down so much? Could it be that is because of the fact that i need to use ""active_support/core_ext"" to downcase Cyrillic text in Ruby? Could it be because I don't limit the processing in best_match using maxword? Maybe some other rewrite really messed the script up? Any insight will be really helpful for me.</p>
","2988","","<p>I didn't take a close look (there's just way too much code in your question to do a detailed examination, you really need to wittle it down to an <a href=""http://SSCCE.Org/"" rel=""nofollow"">SSCCE</a>), but a few things jumped out at me.</p>

<p>The most important one is that Language Implementations are designed to make idiomatic, well-factored, well-designed code run fast. Your code, however, looks more like Fortran than Ruby, it is definitely neither idiomatic Ruby nor well-factored.</p>

<p>Some smaller observations:</p>

<p>Here you are needlessly creating lots of string objects:</p>

<pre><code>answer &lt;&lt; letters[i] + ""\t"" + letters[i].mb_chars.downcase.to_s + \
  ""\t"" + char_type(letters[i]) + ""\t"" + i.to_s + ""|"" + word.length.to_s
</code></pre>

<p>You should prefer mutating a single string using <code>&lt;&lt;</code> over creating many temporary strings using <code>+</code>:</p>

<pre><code>answer &lt;&lt; ('' &lt;&lt; letters[i] &lt;&lt; ""\t"" &lt;&lt; letters[i].mb_chars.downcase.to_s &lt;&lt;
  ""\t"" &lt;&lt; char_type(letters[i]) &lt;&lt; ""\t"" &lt;&lt; i.to_s &lt;&lt; ""|"" &lt;&lt; word.length.to_s)
</code></pre>

<p>But really, string interpolation is much more idiomatic (and incidentally much faster):</p>

<pre><code>answer &lt;&lt; ""#{letters[i]}\t#{letters[i].mb_chars.downcase}\t#{char_type(letters[i])}\t#{i}|#{word.length}""
</code></pre>

<p>You have a lot of unnecessary <code>return</code>s in your code. Again, that is non-idiomatic, and also slower. For example here:</p>

<pre><code>def char_type(string)
  case string
  when /[[:punct:]]/
    return ""P""
  when /[[:digit:]]/
    return ""D""
  when /[A-z]/
    return ""F""
  when /[[:upper:]]/
    return ""U""
  else
    return ""R""
  end
end
</code></pre>

<p>This should be written just</p>

<pre><code>def char_type(string)
  case string
  when /[[:punct:]]/
    ""P""
  when /[[:digit:]]/
    ""D""
  when /[A-z]/
    ""F""
  when /[[:upper:]]/
    ""U""
  else
    ""R""
  end
end
</code></pre>

<p>There are other place with unnecessary <code>return</code>s as well.</p>

<p>Within your <code>infer_spaces</code> method you define another global method named <code>best_match</code>. Since <code>infer_spaces</code> is called by <code>test_to_vert</code>, which is called inside your <code>readlines</code> loop, the method will be defined over and over and over again for every line in the file, which means that (since most Ruby implementations nowadays are compiled), it will have to be compiled over and over and over and over again. Each redefinition will also invalidate all previous optimizations such as speculative inlining. Just move the method definition outside of the loop.</p>

<p><code>IO::readlines</code> reads the <em>entire</em> file into memory as an array. Then you iterate over the array. You might just as well iterate over the lines of the file directly, using <code>IO::foreach</code> instead:</p>

<pre><code>File.foreach(""test.txt"") do |line|
</code></pre>

<p>This will avoid loading the entire file into memory at once.</p>

<p>You didn't say which Ruby Implementation you are using. Since you have a fairly hot and tight loop, using an implementation with some sort of hotspot optimizations, polymorphic inline caching, speculative inlining, adaptive optimizations and so on, might make a big difference, especially if you fix the recompilation problem for <code>best_match</code>. Rubinius and JRuby are good candidates here. Rubinius, for example, has been demonstrated to be faster than hand-optimized C in certain cases!</p>

<p>Note: these are all just micro-optimizations. I didn't actually take a look at your algorithm. You can probably get much more performance by tweaking the algorithm rather than micro-optimize the implementation.</p>

<p>For example: in the Python implementation of <code>best_match</code>, you use <code>min</code> to find the minimum element, which is O(n), whereas in Ruby, you <code>sort</code> and then return the first element, which is O(n * log n).</p>
"
"<p>(If you're impatient, just skip to the Summary section at the bottom)</p>

<p>It is <a href=""http://stackoverflow.com/a/1732454/456814"">commonly expressed here on Stack Overflow</a> and in the developer
community that trying to parse HTML with regular expressions (""regexes"") is a
bad idea. To quote <a href=""http://blog.codinghorror.com/parsing-html-the-cthulhu-way/"" rel=""nofollow"">Jeff Atwood of Coding Horror</a>:</p>

<blockquote>
  <p>So, while I may <em>attempt</em> to parse HTML using regular expressions <a href=""http://blog.codinghorror.com/programming-is-hard-lets-go-shopping/"" rel=""nofollow"">in certain
  situations</a>, I go in knowing that:</p>
  
  <ul>
  <li>It's generally a bad idea.</li>
  <li>Unless you have discipline and put very strict conditions on what you're
  doing, matching HTML with regular expressions rapidly devolves into madness,
  <em>just how Cthulhu likes it</em>.</li>
  <li>I had what I thought to be good, rational, (semi) defensible reasons for
  choosing regular expressions in this specific scenario.</li>
  </ul>
</blockquote>

<h2>Reasons Why Regexes Are Bad for HTML Parsing</h2>

<p>Some of the reasons why seem to fall into these categories:</p>

<ol>
<li><p><a href=""http://stackoverflow.com/a/1733489/456814"">You can't use it to parse arbitrary HTML</a>, because there are
known <a href=""http://stackoverflow.com/a/702222/456814"">cases where a regular expression wouldn't work</a>.</p></li>
<li><p>Regexes don't handle invalid HTML properly (is this just an example of point
#1 above?).</p></li>
<li><p><a href=""http://stackoverflow.com/a/1758162/456814"">HTML is a ""Chomsky Type 2 grammar (context free grammar)""</a>, while
regular expressions are a ""Chomsky Type 3 grammar (regular grammar)"".</p></li>
</ol>

<h2>Somestimes Regexes Are OK for HTML Parsing?</h2>

<p>However, people have also mentioned that in some cases, <a href=""http://stackoverflow.com/a/1733489/456814"">it's okay to parse a
limited set of known HTML</a>:</p>

<blockquote>
  <p>[I]t's sometimes appropriate to parse a limited, known set of HTML.</p>
</blockquote>

<p><a href=""http://blog.codinghorror.com/parsing-html-the-cthulhu-way/"" rel=""nofollow"">Jeff Atwood argues</a>:</p>

<blockquote>
  <p>I think that's just as
  wrongheaded as demanding <strong>every trivial HTML processing task be handled by a
  full-blown parsing engine</strong>. It's more important to understand the tools, and
  their strengths and weaknesses, than it is to knuckle under to knee-jerk
  dogmatism.</p>
</blockquote>

<h2>I Don't Get It :(</h2>

<p>I've never understood in which circumstances it's ""appropriate"" to parse HTML
using a regex, as the two quotes above suggest. I guess it's because I don't
really understand the situations where regexes don't really work:</p>

<ol>
<li><p>So apparently regexes don't work when the HTML isn't even valid, is that
right?</p></li>
<li><p>What if you can expect your input HTML to always be valid? Is it ok to parse
it with regexes then?</p></li>
</ol>

<p>Yes, I've seen <a href=""http://stackoverflow.com/q/701166/456814"">this Stack Overflow question with examples already</a>.
No, the answers don't really help...<a href=""http://stackoverflow.com/a/702222/456814"">this one, in particular, lacks
explanation</a>.</p>

<p>I'm bringing this question up now because I've been reading some of the source
code for <a href=""http://ruby-doc.org/stdlib-2.1.1/libdoc/erb/rdoc/ERB.html"" rel=""nofollow"">Ruby ERB</a> and <a href=""http://jquery.com/"" rel=""nofollow"">jQuery</a>, and they use regexes to parse
HTML strings! <strong>So why do they use regexes instead of an HTML parser? Why do
regexes not lead to some kind incorrect behavior in these cases?</strong></p>

<h2>Ruby ERB Source Code</h2>

<p>So here's <a href=""https://github.com/ruby/ruby/blob/v2_1_1/lib/erb.rb#L421-L428"" rel=""nofollow"">the source code from ERB that's using regex to parse templates</a>:</p>

<pre class=""lang-ruby prettyprint-override""><code>def scan_line(line)
  line.scan(/(.*?)(&lt;%%|%%&gt;|&lt;%=|&lt;%#|&lt;%|%&gt;|\n|\z)/m) do |tokens|
    tokens.each do |token|
      next if token.empty?
      yield(token)
    end
  end
end
</code></pre>

<p>I've tested this out using the code below, and sure enough, <code>scan_line</code>
correctly tokenizes the template, parsing out HTML and ERB tags:</p>

<pre class=""lang-ruby prettyprint-override""><code>t = &lt;&lt;TEMPLATE
&lt;div&gt;
  &lt;% cupcakes.each do |c| %&gt;
    &lt;p&gt;Oh boy, another cupcake!&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Flavor: &lt;%= c.flavor %&gt;&lt;/li&gt;
      &lt;li&gt;Price: &lt;%= c.price %&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;% end %&gt;
&lt;/div&gt;
TEMPLATE

t.split(""\n"").each do |line|
  scan_line(line) { |token| puts token }
end
</code></pre>

<p>This produces the following output:</p>

<pre class=""lang-none prettyprint-override""><code>&lt;div&gt;

&lt;%
 cupcakes.each do |c|
%&gt;
    &lt;p&gt;Oh boy, another cupcake!&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Flavor:
&lt;%=
 c.flavor
%&gt;
&lt;/li&gt;
      &lt;li&gt;Price:
&lt;%=
 c.price
%&gt;
&lt;/li&gt;
    &lt;/ul&gt;

&lt;%
 end
%&gt;
&lt;/div&gt;
</code></pre>

<h2>jQuery Source Code</h2>

<p>Here's <a href=""https://github.com/jquery/jquery/blob/2.1.0/src/core/var/rsingleTag.js"" rel=""nofollow"">the regex in jQuery's source code</a>:</p>

<pre class=""lang-javascript prettyprint-override""><code>define(function() {
  // Match a standalone tag
  return (/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/);
});
</code></pre>

<p>I've tested this out in my browser console, and it seems that it will only match
plain HTML tags, i.e. tags without attributes and text content. For example:</p>

<pre class=""lang-javascript prettyprint-override""><code>/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/.exec('&lt;p&gt;Hello!&lt;/p&gt;');
// null

/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/.exec('&lt;img src=""foo.jpg""/&gt;');
// null

/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/.exec('&lt;img/&gt;');
// [""&lt;img/&gt;"", ""img""]

/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/.exec('&lt;img&gt;');
// [""&lt;img/&gt;"", ""img""]

/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/.exec('&lt;div&gt;&lt;/div&gt;')
// [""&lt;div&gt;&lt;/div&gt;"", ""div""]
</code></pre>

<h2>TL;DR Summary</h2>

<p>The Ruby ERB and jQuery source code above use regexes to parse HTML strings! <strong>So why do they use regexes instead of an HTML parser? Why do
regexes not lead to some kind incorrect behavior in these cases?</strong></p>

<p>If you can expect your input HTML to always be valid, is it then ok to parse it
with regexes?</p>
","2988","","<p>ERb has absolutely nothing whatsoever to do with HTML. The ERb library parses ERb, not HTML. ERb has been specifically designed to be trivial to parse with Ruby's <code>Regexp</code>s.</p>

<p>If ERb were using an HTML parser, then how could it parse <code>database.yml</code>, which is YAML, not HTML? How could it parse <code>.js.erb</code>, which is ECMAScript, not HTML?</p>
"
"<p>Recently, I observed a very interesting result in Ruby while making use of &amp;&amp; and &amp; for the input combination of 0 &amp; 1. </p>

<p>Can someone please explain the below output with respect to the above mentioned two operators? The below is implemented using Ruby 2.0.0-p451</p>

<pre><code>2.0.0-p451 :006 &gt; 0 &amp;&amp; 1
 =&gt; 1 


2.0.0-p451 :008 &gt; 0 &amp; 1
 =&gt; 0 
</code></pre>

<p>Thank you</p>
","2988","","<p><code>&amp;&amp;</code> is the logical AND operator. It will be truthy, IFF both operands are truthy. And it is lazy (aka short-circuiting), which means it will stop evaluating as soon as the result has been fully determined. (So, since both operands need to be truthy, if the first operand is falsy, you already know that the result is going to be falsy, without even evaluating the second operand.) It will also not just return <code>true</code> or <code>false</code>, but rather return the operand which determines the outcome. IOW: if <code>a</code> is falsy, it'll return <code>a</code>, otherwise it'll return <code>b</code>:</p>

<pre><code>nil &amp;&amp; (loop {})
# =&gt; nil
# Note: the infinite loop is *not* evaluated
# Note: the return value is nil, not false

true &amp;&amp; nil
# =&gt; nil

true &amp;&amp; 'Hello'
# =&gt; 'Hello'
</code></pre>

<p><code>&amp;</code> simply calls the method <code>&amp;</code>. It will do whatever the object wants it to do:</p>

<pre><code>def (weirdo = Object.new).&amp;(other)
  puts 'Whoah, weird!'
  'Hello, ' + other
end

weirdo &amp; 'World'
# Whoah, weird!
# =&gt; 'Hello, World'
</code></pre>

<p>In general, <code>&amp;</code> and its brother <code>|</code> are expected to perform conjunction and disjunction. So, for booleans, they are perform AND and OR (<a href=""http://ruby-doc.org/core-2.1.1/TrueClass.html#method-i-26"" rel=""nofollow""><code>TrueClass#&amp;</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/FalseClass.html#method-i-26"" rel=""nofollow""><code>FalseClass#&amp;</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/NilClass.html#method-i-26"" rel=""nofollow""><code>NilClass#&amp;</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/TrueClass.html#method-i-7C"" rel=""nofollow""><code>TrueClass#|</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/FalseClass.html#method-i-7C"" rel=""nofollow""><code>FalseClass#|</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/NilClass.html#method-i-7C"" rel=""nofollow""><code>NilClass#|</code></a>) with the exception that <code>&amp;</code> and <code>|</code> are standard method calls and thus always evaluate their argument and that they always return <code>true</code> or <code>false</code> and not their arguments.</p>

<p>For <a href=""http://ruby-doc.org/stdlib-2.1.1/libdoc/set/rdoc/"" rel=""nofollow""><code>Set</code></a>s, they perform set intersection and set union: <a href=""http://ruby-doc.org/stdlib-2.1.1/libdoc/set/rdoc/Set.html#method-i-26"" rel=""nofollow""><code>Set#&amp;</code></a>, <a href=""http://ruby-doc.org/stdlib-2.1.1/libdoc/set/rdoc/Set.html#method-i-7C"" rel=""nofollow""><code>Set#|</code></a>. For other collections (specifically <code>Array</code>s), they also perform set operations: <a href=""http://ruby-doc.org/core-2.1.1/Array.html#method-i-26"" rel=""nofollow""><code>Array#&amp;</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/Array.html#method-i-7C"" rel=""nofollow""><code>Array#|</code></a>. </p>

<p>For <a href=""http://ruby-doc.org/core-2.1.1/Integer.html"" rel=""nofollow""><code>Integer</code></a>s, they perform BITWISE-AND of the two-complement's binary representation: <a href=""http://ruby-doc.org/core-2.1.1/Fixnum.html#method-i-26"" rel=""nofollow""><code>Fixnum#&amp;</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/Bignum.html#method-i-26"" rel=""nofollow""><code>Bignum#&amp;</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/Fixnum.html#method-i-7C"" rel=""nofollow""><code>Fixnum#|</code></a>, <a href=""http://ruby-doc.org/core-2.1.1/Bignum.html#method-i-7C"" rel=""nofollow""><code>Bignum#|</code></a>.</p>
"
"<p>Assume the string argument might include integers:</p>

<pre><code>def turn_string_into_integer_array(string)
    array = string.split("" "").collect { |i| i.to_i }
end
</code></pre>

<p>If in the same line I wanted to use the inject method to sum the integers how would I do that given that I have a block at the end of the statement? </p>
","2988","","<p>Why don't you just call the method?</p>

<pre><code>string.split("" "").collect { |i| i.to_i }.inject(0) {|acc, el| acc + el }
</code></pre>

<p>However, this would be more idiomatically written as</p>

<pre><code>string.split("" "").map(&amp;:to_i).inject(0, :+)
</code></pre>
"
"<p>The design philosophy of ruby is just amazing. So I did <code>1 + 2</code> and got <code>3</code>. I managed to make this: <code>1.+(2) # =&gt; 3</code>.</p>

<p>As cool as this was, I also wanted to test out the <code>class</code> method on the <code>+</code> method.</p>

<pre><code>+.class
=&gt; SyntaxError: (irb):14: syntax error, unexpected '.'
   +.class
     ^
</code></pre>

<p>And then:</p>

<pre><code>+().class
=&gt; NoMethodError: undefined method `+@' for NilClass:Class
</code></pre>

<p>While:</p>

<pre><code>+(2).class
NoMethodError: undefined method `+@' for Fixnum:Class
</code></pre>

<p>Why was <code>+(2).class</code> a fixnum and not an integer? I try it again with <code>+(2.to_i).class</code> and the same error appears for <code>+(2).class</code>.</p>

<p>But back to the key question: How do I find the class of the <code>+</code> method?</p>
","2988","","<p>Methods aren't objects in Ruby, therefore they don't have a class. You can use reflection to obtain a proxy object that represents a method, though, in which case the class will either be <code>Method</code> or <code>UnboundMethod</code>, depending on whether the method is bound to a receiver object or not.</p>
"
"<p>I run a simple function:</p>

<pre><code>def test 
   a = 10
   yield a
   puts a
end

test { |x| x += 10 }
</code></pre>

<p>and get an unexpected answer</p>

<pre><code>&gt; 10
</code></pre>

<p>Next, I tried to reuse the function this way:</p>

<pre><code>def test 
   a = 10
   a = yield a
   puts a
end
</code></pre>

<p>the result is</p>

<pre><code> &gt; 20
</code></pre>

<p>But I find this code ugly and not in ruby-style, how can i improve it?</p>
","2988","","<p>Ruby, like almost all modern languages, is pass-by-value. You cannot mutate variable bindings from the caller's scope.</p>
"
"<p>Based on below examples of defining functions what is the best use of 2 and 3 in different scenarios?</p>

<ol>
<li><p><code>def sum(x: Int, y: Int): Int = { x+y }</code>
This is a function definition with arguments, return type and function body</p></li>
<li><p><code>val sum = (x: Int, y: Int) =&gt; { x+y }</code>
This seems like an assignment of lambda function to a variable, why return type is never defined here?</p></li>
<li><p><code>val sum: (Int, Int) =&gt; Int = (x,y) =&gt; { x+y }</code>
This is defining a function as a type?
<strong>I don't understand how this works!</strong></p></li>
</ol>

<p>All 3 functions when invoked will yield the same result:</p>

<p><code>scala&gt; sum(1,2)</code>
<code>Int = 3</code></p>
","2988","","<blockquote>
  <ol>
  <li><code>def sum(x: Int, y: Int): Int = { x+y }</code>
  This is a function definition with arguments, return type and function body</li>
  </ol>
</blockquote>

<p>This is <em>not</em> a function definition. This is a <em>method</em> definition. Functions and methods are <em>fundamentally</em> different. Functions are objects, methods are not. (Methods <em>belong</em> to objects.) Methods can be polymorphic, functions can't.</p>

<blockquote>
  <ol>
  <li><code>val sum = (x: Int, y: Int) =&gt; { x+y }</code>
  This seems like an assignment of lambda function to a variable, why return type is never defined here?</li>
  </ol>
</blockquote>

<p>Are you asking why the type of <code>sum</code> isn't declared or why the return type of the function literal isn't declared? The return type of the function literal isn't declared because there is no way in the syntax to do so. You simply <em>cannot</em> declare the return type of a function literal, it is always inferred. The type of <code>sum</code> isn't declared because it is not necessary: it can be inferred to be the same as the type of the function literal, i.e. <code>Function2[Int, Int, Int]</code>.</p>

<p>Think <code>val foo = ""Hello""</code>.</p>

<blockquote>
  <ol>
  <li><code>val sum: (Int, Int) =&gt; Int = (x,y) =&gt; { x+y }</code>
  This is defining a function as a type?</li>
  </ol>
</blockquote>

<p>No. This is the exact same thing as 2., except that here the type of <code>sum</code> is explicitly declared (as <code>(Int, Int) =&gt; Int</code> which is syntactic sugar for <code>Function[Int, Int, Int]</code>) instead of inferred. Since the type of <code>sum</code> is known, you can leave off the types of the function parameters, because they can be inferred from the context.</p>

<p>Think <code>val foo: String = ""Hello""</code>.</p>
"
"<p>In this <a href=""http://functionaltalks.org/2014/03/31/runar-oli-bjarnason-functional-programming-is-terrible/"" rel=""nofollow"">talk</a>, in the first 8 minutes, Runar explains that Scala has problems with tail call elimination, this makes me wonder whether F# has similar problems ? If not, why not ?</p>
","2988","","<p>The problem with Proper Tail Calls in Scala is one of engineering trade-offs. It would be easily possible to add PTCs to Scala: just add a sentence to the SLS. Voilà: PTCs in Scala. From a Language Design perspective, we are done.</p>

<p>Now the poor compiler writers need to <em>implement</em> that spec. Well, compiling <em>into</em> a language with PTCs is easy … but unfortunately, the JVM byte code isn't such a language. Okay, so what about <code>GOTO</code>? Nope. Continuations? Nope. Exceptions (which are known to be equivalent to Continuations)? Ah, now we are getting somewhere! So, we <em>could</em> use exceptions to implement PTCs. Or, alternatively, we could just not use the JVM call stack at all and implement our own stack.</p>

<p>After all, there are multiple Scheme implementations on the JVM, all of them support PTCs just fine. It's a myth that you cannot have PTCs on the JVM, just because the JVM doesn't support them. After all, x86 doesn't have them either, but nonetheless, there are languages running on x86 that have them.</p>

<p>So, if implementing PTCs on the JVM is possible, then why doesn't Scala have them? Like I said above, you could use exceptions or your own stack to implement them. But using exceptions for control flow or implementing your own stack means that everything which expects the JVM call stack to look a certain way would no longer work.</p>

<p>In particular, you would lose pretty much all interoperability with the Java tooling ecosystem (debuggers, visualizers, static analyzers). You would also have to build bridges to interoperate with Java libraries, which would be slow, so you lose interop with the Java library ecosystem as well.</p>

<p>But that is a major design goal of Scala! And that's why Scala doesn't have PTCs.</p>

<p>I call this ""Hickey's Theorem"", after Rich Hickey, the designer of Clojure who once said in a talk ""Tail Calls, Interop, Performance – Pick Two.""</p>

<p>You would also present the JIT compiler with some very unusual byte code patterns that it may not know how to optimize well.</p>

<p>If you were to port F# to the JVM, you would basically have to make exactly that choice: do you give up Tail Calls (you can't, because they are required by the Language Spec), do you give up Interop or do you give up Performance? On .NET, you can have all three, because Tail Calls in F# can simply be compiled into Tail Calls in MSIL. (Although the actual translation is more complex than that, and the implementation of Tail Calls in MSIL is buggy in some corner cases.)</p>

<p>This poses the question: why not add Tail Calls to the JVM? Well, this is very hard, due to a design flaw in the JVM byte code. The designers wanted the JVM byte code to have certain safety properties. But instead of designing the JVM byte code language in such a way that you cannot write an unsafe program in the first place (like, say, in Java, for example, where you cannot write a program that violates pointer safety, because the language just doesn't give you access to pointers in the first place), JVM byte code in itself is unsafe and needs a separate byte code verifier to make it safe.</p>

<p>That byte code verifier is based on stack inspection, and Tail Calls change the stack. So, the two are <em>very</em> hard to reconcile, but the JVM simply doesn't work without the byte code verifier. It took a long time and some very smart people to finally figure out how to implement Tail Calls on the JVM without losing the byte code verifier, so we have now moved from the stage where it was an open research problem to the stage where it is ""just"" an open engineering problem.</p>
"
"<p>I have a simple method to build a tree: </p>

<pre><code>    @tailrec final def buildTree (X:DenseMatrix[Double], Y:DenseVector[Double], minBucket:Int):Node = {
        // Get the split variable, split point and data 
        val (splitVar, splitPoint, leftX, leftY, rightX, rightY) = chooseSplit(X, Y, minBucket);
        // If we couldn't find a split, then we have a leaf
        if(splitVar == Double.NegativeInfinity){
            new Node(Y)
        }else{
            // Otherwise recursively build the children and create yourself as a vertex
            val left = buildTree(leftX, leftY, minBucket)
            val right = buildTree(rightX, rightY, minBucket)
            new Node(Y, splitVar, splitPoint, left, right)
        }
</code></pre>

<p>However, when I go to compile, I get: 
<code>could not optimize @tailrec annotated method buildTree: it contains a recursive call not in tail position</code></p>

<p>I've done things like this in OCaml without any problem at all. Is there a work-around for this? </p>
","2988","","<p>I think the error message is pretty clear: your method is neither <code>private</code> nor <code>final</code>, therefore it can be overridden, therefore it is not guaranteed that the calls to <code>buildTree</code> will go to the same method. The method needs to be either <code>private</code> or <code>final</code>.</p>

<p>But even if it <em>were</em> <code>private</code> or <code>final</code>, the recursive calls are not in tail position.</p>

<p>Basically, your tail recursive call is neither a tail call nor even guaranteed to be recursive.</p>
"
"<p>Simple question:</p>

<p>What module do the class <code>Hash</code>, <code>Array</code>, <code>File</code> belong to ?</p>

<p>Would you just say that they are part of the ruby core?</p>
","2988","","<p>Classes don't ""belong to modules"". They are just objects like any other object. If you are asking about the <em>constants</em> <code>Hash</code>, <code>Array</code>, <code>File</code>, etc., those belong to the <code>Object</code> class. All constants that are not explicitly defined in some specific module belong to <code>Object</code>.</p>
"
"<p>In C, C++, and Java, an integer has a certain range. One thing I realized in Python is that I can calculate really large integers such as <code>pow(2, 100)</code>. The same equivalent code, in C, <code>pow(2, 100)</code> would clearly cause an overflow since in 32-bit architecture, the unsigned integer type ranges from 0 to 2^32-1. How is it possible for Python to calculate these large numbers?</p>
","2988","","<blockquote>
  <p>How is it possible for Python to calculate these large numbers?</p>
</blockquote>

<p>How is it possible for you to calculate these large numbers if you only have the 10 digits 0-9? Well, you use more than one digit!</p>

<p>Bignum arithmetic works the same way, except the individual ""digits"" are not 0-9 but 0-4294967296 or 0-18446744073709551616.</p>
"
"<p>I'm learning Scala at the moment and I came across this statement in Odersky's Programming Scala 2nd edition:</p>

<blockquote>
  <p>one way in which Scala is more object-orientated than Java is that classes in Scala  cannot have static members.</p>
</blockquote>

<p>I'm not sufficiently experienced in either Java or Scala to understand that comparison. Why does having static members make a language less OO?</p>
","2988","","<p>There are several competing definitions of what <em>exactly</em> object-orientation means. However, there is one thing they all can agree on: dynamic dispatch is a fundamental part of the definition of OO.</p>

<p>Static methods are static (duh), not dynamic, ergo they are <em>by definition</em> not object-oriented.</p>

<p>And logically, a language that has a feature which isn't object-oriented is in some sense ""less OO"" than a language which doesn't have said feature.</p>
"
"<p>Let's say I have following block of code:</p>

<pre><code>arr = ['a','b','c']
arr.map {|item| item &lt;&lt;'1'} #=&gt; ['a1','b1','c1']
arr #=&gt; ['a1','b1','c1']
</code></pre>

<p>Why does <code>Array#map</code> change the array? It should only create a new one. When I'm using <code>+</code> in the block instead of <code>&lt;&lt;</code>, it works as expected. Does <code>Array#each</code> change the array itself, or does it only iterate over it and return itself?</p>
","2988","","<blockquote>
  <p>My question is: Why does <code>map</code> change array? it should only create new.</p>
</blockquote>

<p><code>map</code> doesn't change the <code>Array</code>. But <code>&lt;&lt;</code> changes the <code>String</code>s in the <code>Array</code>.</p>

<p>See <a href=""http://ruby-doc.org/core-2.1.1/String.html#method-i-3C-3C"" rel=""nofollow"">the documentation for <code>String#&lt;&lt;</code></a>:</p>

<blockquote>
<pre><code>str &lt;&lt; obj → str
</code></pre>
  
  <p>Append—Concatenates the given object to <code>str</code>.</p>
</blockquote>

<p>Although it isn't mentioned explicitly, the code example clearly shows that <code>&lt;&lt;</code> mutates its receiver:</p>

<pre><code>a = ""hello ""
a &lt;&lt; ""world""   #=&gt; ""hello world""
a.concat(33)   #=&gt; ""hello world!""
</code></pre>

<blockquote>
  <p>It's strange, because when I'm using <code>+</code> operator in the block insted of <code>&lt;&lt;</code> it works as expected.</p>
</blockquote>

<p><code>+</code> doesn't change the <code>String</code>s in the <code>Array</code>.</p>

<p>See <a href=""http://ruby-doc.org/core-2.1.1/String.html#method-i-2B"" rel=""nofollow"">the documentation for <code>String#+</code></a>:</p>

<blockquote>
<pre><code>str + other_str → new_str
</code></pre>
  
  <p>Concatenation—Returns a new <code>String</code> containing <code>other_str</code> concatenated to <code>str</code>.</p>
</blockquote>

<p>Note how it says ""new <code>String</code>"" and also the return value is given as <code>new_str</code>.</p>

<blockquote>
  <p>And my second question: Does <code>Array#each</code> change array itself or it only iterate over array and return itself?</p>
</blockquote>

<p><code>Array#each</code> does not change the <code>Array</code>. But of course, the <em>block</em> passed to <code>Array#each</code> may or may not change individual <em>elements</em> of the <code>Array</code>:</p>

<pre><code>arr = %w[a b c]
arr.map(&amp;:object_id)          #=&gt; an array of three large numbers
arr.each {|item| item &lt;&lt;'1' } #=&gt; ['a1', 'b1', 'c1']
arr.map(&amp;:object_id)          #=&gt; an array of the same three large numbers
</code></pre>

<p>As you can see, <code>Array#each</code> did not change the <code>Array</code>: it is still the same <code>Array</code> with the same three elements.</p>
"
"<p>Im very new to ruby and cant determin if i am using the ruby language correctly.  I want find out if any one of an array of numbers is divisible by another number.  If so return that number otherwise, return 0.</p>

<pre><code>  def is_divisible(nums, n)
    nums.each do |m|
      if n % m == 0
        return n
      end
    end
    0
  end
</code></pre>

<p>The function works correctly but there are a few aspects to it which i think are not idiomatic of ruby:</p>

<ol>
<li><p>Should i check if <code>nums</code> is of a type that can be looped first or catch an exception (coming from php and python I know these think differently but cant tell with ruby yet)</p></li>
<li><p>Is there a more concise way to structure the loop and the 2 separate return values</p></li>
<li><p>Anything else that isnt correct with this code?</p></li>
</ol>
","2988","","<p>Here are my thoughts:</p>

<p><strong>Naming</strong>: Predicate methods in Ruby are named <code>predicate?</code> and not <code>is_predicate</code>, so the name of your method should be <code>divisible?</code> … except that it <em>isn't</em> actually a predicate. It doesn't test whether a number is divisible by another number, rather it finds the first number in an <code>Enumerable</code> which is divisible by another number. That sentence almost sounds like a descriptive method name, doesn't it?</p>

<pre><code>def find_first_divisible(nums, n)
  nums.each do |m|
    if n % m == 0
      return n
    end
  end
  0
end
</code></pre>

<p><strong>Naming cont'd</strong>: We don't charge you for your characters. You can use more of them if you want ;-) <code>nums</code> is probably okay, <code>n</code> is on the fence, but what the heck is <code>m</code>? In fact, you have a bug there, which is caused precisely by you confusing <code>n</code> and <code>m</code>.</p>

<pre><code>def find_first_divisible(numbers, divisor)
  numbers.each do |n|
    if n % divisor == 0
      return n
    end
  end
  0
end
</code></pre>

<p><strong>Guard clauses</strong>: For cases like this, where you want to use <code>return</code> (or <code>next</code>) to break out early, I prefer to use a guard clause style of the form ""do this if that"":</p>

<pre><code>def find_first_divisible(numbers, divisor)
  numbers.each do |n|
    return n if n % divisor == 0
  end
  0
end
</code></pre>

<p><strong>One line blocks</strong>: In this case, the contents of the block are short enough to fit on one line, so I would do that. Note that there are two competing styles for block formatting: one says to always use <code>do</code>/<code>end</code> for multiline blocks and always use <code>{</code>/<code>}</code> for single line blocks. The other says to always use <code>do</code>/<code>end</code> for blocks which are used primarily for their side-effects (""imperative blocks"") and <code>{</code>/<code>}</code> for blocks which are used primarily for their return value (""functional blocks""). I prefer the latter style.</p>

<pre><code>def find_first_divisible(numbers, divisor)
  numbers.each do |n| return n if n % divisor == 0 end
  0
end
</code></pre>

<p><strong>Descriptive methods</strong>:</p>

<pre><code>def find_first_divisible(numbers, divisor)
  numbers.each do |n| return n if (n % divisor).zero? end
  0
end
</code></pre>

<p><strong>Know the core and standard libraries</strong>: This is very important, you don't want to reinvent the wheel!</p>

<pre><code>def find_first_divisible(numbers, divisor)
  numbers.find {|n| (n % divisor).zero? } || 0
end
</code></pre>

<p>Note how I changed the block style: now we are interested in the return value, there are no side-effects.</p>

<p><strong>Extract methods with meaningful names</strong>:</p>

<pre><code>class Integer
  def divisible_by?(n) (self % n).zero? end
end

def find_first_divisible(numbers, divisor)
  numbers.find {|n| n.divisible_by?(divisor) } || 0
end
</code></pre>

<p>Now, the method reads <em>exactly</em> like your description in the question: ""within <code>numbers</code>, find the first <code>n</code> which is <code>divisible_by</code> the <code>divisor</code>, and if there is none, the result is <code>0</code>"".</p>

<p><strong>Respect conventions</strong>: Last but not least, you should respect the conventions of the community. Methods that search for something should return <code>nil</code> to indicate the absence of a result:</p>

<pre><code>def find_first_divisible(numbers, divisor)
  numbers.find {|n| n.divisible_by?(divisor) }
end
</code></pre>
"
"<p>What is the difference between size and length of a Seq? When to use one and when the other?</p>

<pre><code>scala&gt; var a :Seq[String] = Seq(""one"", ""two"")
a: Seq[String] = List(one, two)

scala&gt; a.size
res6: Int = 2

scala&gt; a.length
res7: Int = 2
</code></pre>

<p>It's the same?</p>

<p>Thanks</p>
","2988","","<p><code>size</code> is defined in <code>GenTraversableOnce</code>, whereas <code>length</code> is defined in <code>GenSeqLike</code>, so <code>length</code> only exists for <code>Seq</code>s, whereas <code>size</code> exists for all <code>Traversable</code>s. For <code>Seq</code>s, however, as was already pointed out, <code>size</code> simply delegates to <code>length</code> (which probably means that, after inlining, you will get identical bytecode).</p>
"
"<p>Is there a way to specify that you want the latest version of gem within semantic versioning constraints?  For instance, if I wanted the most recent version of the <code>foo</code> gem within the 2.x.x set of available gems, is there a way to have RubyGems install whatever the latest version before 3.0.0?  Hypothetically something along the lines of: <code>gem install foo --semantic-version 2</code> might make sense.</p>
","2988","","<p>That's what pessimistic version constraints are for:</p>

<pre><code>gem install --version '~&gt; 2.0'
</code></pre>
"
"<p>I've been writing a DSL, and I'm trying to get a dynamically defined method to be accessible from a lambda. This works fine unless you try to do a setter <code>something=</code> in which case the lambda invocation just sets a local variable instead.</p>

<p>A simplified example:</p>

<pre><code>class Caller
  attr_accessor :cmd
  def callme
    self.class.send(:define_method, ""something"") { puts ""Retrieve Something"" }
    self.class.send(:define_method, ""something="") {|val| puts ""Set Something = #{val}"" }
    instance_exec &amp;cmd
  end
end

c = Caller.new
c.cmd = lambda { something = 1 }
c.callme
</code></pre>

<p>This also works fine if I use <code>self.something=</code>. However that's less than ideal in the case of a DSL.</p>

<p>Is it possible to get this to work without <code>self.</code> in front of the method?</p>
","2988","","<p>This has absolutely nothing to do with blocks or dynamically defined methods. It's just simple basic Ruby syntax:</p>

<pre><code>foo = bar
</code></pre>

<p>is local variable assignment. Always.</p>

<pre><code>self.foo = bar
</code></pre>

<p>is a method call.</p>

<blockquote>
  <p>Is it possible to get this to work without <code>self.</code> in front of the method?</p>
</blockquote>

<p>No.</p>

<p>This is just basic Ruby syntax. The <code>define_method</code> metaprogramming, the <code>instance_exec</code>, the blocks in your code sample are just a red herring, the problem can be demonstrated with a <em>much</em> simpler example:</p>

<pre><code>def foo=(*)
  puts 'I was called!'
end

foo=('bar') # even removing spaces and adding parentheses won't help!

self.foo = 'bar'
# I was called!
</code></pre>

<p>Note also that <code>foo=</code> is <code>private</code> but was actually called with an explicit receiver (which is illegal for <code>private</code> methods). That's a special exception for setter methods in the rule for <code>private</code> methods, because they otherwise couldn't be called at all, precisely because they would <em>always</em> be interpreted as a local variable assignment.</p>
"
"<p>I have a Ruby script and I am calling this ruby script from a
Powershell script. I want Ruby to return the result as an array back to
Powershell..So i will be able to use the array in Powershell. I am a
very beginner in Ruby, so need help on constructing the array in Ruby.</p>
","2988","","<p>The vast majority of Ruby implementations are built on the Unix model: every input and output is an (unstructured) character stream. So, you will have to have additional PowerShell code to parse that unstructured character stream into a PowerShell array. This can ben made easier if you emit some well-known format as your character stream such as JSON, YAML, XML, XAML, CSV.</p>

<p>Alernatively, you could try an approach with IronRuby, and write a PowerShell cmdlet in Ruby.</p>
"
"<p>I want to ""zip"" two arrays into hash</p>

<p>From:</p>

<pre><code>['BO','BR']
['BOLIVIA','BRAZIL']
</code></pre>

<p>To:</p>

<pre><code>{BO: 'BOLIVIA', BR:'BRAZIL'}
</code></pre>

<p>How to do it?</p>
","2988","","<p>Ironically, if you just sprinkle some dots and underscores into your question, it just works:</p>

<blockquote>
  <p>I want to ""<code>zip</code>"" two arrays in<code>to_h</code>ash</p>
</blockquote>

<pre><code>ary1.zip(ary2).to_h
# =&gt; { 'BO' =&gt; 'BOLIVIA', 'BR' =&gt; 'BRAZIL' }
</code></pre>

<p>Actually, you specified in your output hash that the keys should be <code>Symbol</code>s not <code>String</code>s, so we need to convert them first:</p>

<pre><code>ary1.map(&amp;:to_sym).zip(ary2).to_h
# =&gt; { BO: 'BOLIVIA', BR: 'BRAZIL' }
</code></pre>
"
"<p>The bang method doesn't substitute in-place as I'd expect:</p>

<pre><code>2.0.0p247 :010 &gt; string = ""abc""
 =&gt; ""abc"" 
2.0.0p247 :011 &gt; string[2]
 =&gt; ""c"" 
2.0.0p247 :012 &gt; string[2].upcase!
 =&gt; ""C"" # so far so good...
2.0.0p247 :013 &gt; string
 =&gt; ""abc"" # expected ""abC""
2.0.0p247 :014 &gt; string[2]
 =&gt; ""c"" # expected ""C""
</code></pre>

<p>Why is this, and how should I up-case a character in a string by index in the most efficient way possible?</p>
","2988","","<p><code>string[2]</code> returns a string. That string is <code>upcase!</code>d in-place. However, since that string is not referenced anywhere, you will never notice.</p>

<pre><code>tmp = ObjectSpace.each_object(String).to_a

string = 'abc'
string[2].upcase!

ObjectSpace.each_object(String).to_a - tmp
# =&gt; ['C']
</code></pre>

<p>As you can see, the string <em>was</em> in fact allocated somewhere within the garbage collector, it just isn't accessible from anywhere, because there is no reference to it.</p>
"
"<p>I give you an function exemple:</p>

<pre><code>def debug(var)
    raise var.inspect
end
</code></pre>

<p>in PHP its simple, I put </p>

<pre><code>function debug($var)
{
    var_dump($var);
}
</code></pre>

<p>and I just have to include the file where is define this function and it is aviable in all my code where and when I want.</p>

<p>How can I do the same in rails app? I want a function, not a method in class and i want to be able to call it evrywhere in my code.</p>
","2988","","<p>There are no functions in Ruby, what you want is not possible.</p>
"
"<p>Okay, so I was wondering if I could create an array of Boolean values from an integer by using its bits. For example, if I wanted to use 5, which is 101 in binary, is there any reasonably easy way that I could get this in something of the form:</p>

<pre><code>[true, false, true]
</code></pre>

<p>The idea is that a one would be a true and zero would be a false. It would be adequate to get it as an array of zeros and ones but true and false would be much more preferable.</p>

<p>Thanks in advance for any help.</p>
","2988","","<p>See this answer of mine to a similar question: <a href=""http://stackoverflow.com/a/10916848/2988"">Looping through bits in an integer</a>.</p>

<p>Here's the gist of it:</p>

<blockquote>
  <p>In Ruby, <code>Integer</code>s (i.e. both <code>Bignum</code>s and <code>Fixnum</code>s) can already be indexed as if they were bit arrays. They are, however, not <code>Enumerable</code>.</p>
  
  <p>But you can fix that, of course:</p>

<pre><code>class Integer
  include Enumerable

  def each
    return to_enum unless block_given?      
    (size*8).times {|i| yield self[i] }
  end
end
</code></pre>
  
  <p>A slightly less intrusive way might be to represent the <code>Integer</code> as an array:</p>

<pre><code>class Integer
  def to_a
    Array.new(size*8, &amp;method(:[]))
  end
end
</code></pre>
  
  <p>Then you can use Ruby's nifty <code>Enumerable</code> methods:</p>
</blockquote>

<pre><code>5.to_a.map {|b| !b.zero? }
# =&gt; [true, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
</code></pre>
"
"<p>How can I yield two diferent blocks in the same method</p>

<p>the example code:</p>

<pre><code>def by_two(n,a)
    yield n
    yield a
end

proc1 = proc {|x| p x * 2}
proc2 = proc {|x| x + 100}

by_two(10, 300, &amp;proc1, &amp;proc2)
</code></pre>

<p>the error is such -</p>

<pre><code>main.rb:7: syntax error, unexpected ',', expecting ')'
by_two(10, 300, &amp;proc1, &amp;proc2)
</code></pre>

<p>Any suggestions where and what is wrong? Thanks</p>
","2988","","<p>Blocks are a lightweight way of passing a single anonymous procedure to a method. So, <em>by definition</em>, there cannot be two blocks passed to a method. It's not just semantically impossible, it isn't even possible <em>syntactically</em>.</p>

<p>Ruby <em>does</em> support first-class procedures in the form of <code>Proc</code>s, however, and since those are just objects like any other object, you can pass as many of them as you want:</p>

<pre><code>def by_two(n, a, proc1, proc2)
  proc1.(n)
  proc2.(a)
end

proc1 = proc {|x| p x * 2}
proc2 = proc {|x| x + 100}

by_two(10, 300, proc1, proc2)
# 20
# =&gt; 400
</code></pre>

<p>Since the introduction of lambda literals in Ruby 1.9, <code>Proc</code>s are almost as syntactically lightweight as blocks, so there is not a big difference anymore:</p>

<pre><code>by_two(10, 300, -&gt; x { p x * 2 }, -&gt; x { x + 100 })
# 20
# =&gt; 400
</code></pre>
"
"<p>This is a very simple question, but I cannot figure out what is happening here. Here's my simple model:</p>

<pre><code>class User
  attr_accessor :first_name, :last_name

end
</code></pre>

<p>I can write the <code>first_name</code> and <code>last_name</code> fields for a new <code>User</code>, and when I call that user through the variable I assigned it to, I get this:</p>

<pre><code>&gt; u
=&gt; #&lt;User&gt;
</code></pre>

<p>It doesn't show the fields I wrote. But when I do this (for last &amp; first name):</p>

<pre><code>&gt; u.first_name
=&gt; ""John""
</code></pre>

<p>Why isn't the full object showing up when I call <code>u</code>? Such as <code>=&gt; #&lt;User first_name: 'John' last_name: 'Smith'&gt;</code>. What do I have to add to my model to get that output? Thanks in advance.</p>
","2988","","<p>The method that is used for converting an object to a <code>String</code> is <code>to_s</code>, the method that is used for human-readable debugging output is <code>inspect</code>. Some environments also use other methods, e.g. <code>pry</code> (or some plugin) uses <code>pretty_inspect</code> for ""pretty"" human-readable debugging output. You need to implement those methods.</p>

<p>Example:</p>

<pre><code>class User
  def inspect
    ""#&lt;#{self.class} first_name: '#{first_name}', last_name: '#{last_name}'&gt;""
  end
end
</code></pre>
"
"<p>I cannot figure this out as someone who has primarily worked in C.</p>

<p>How is the following code plausible?</p>

<pre><code>if true
    hi = ""hello""
end

puts hi
</code></pre>

<p>I'm used to <code>hi</code> not being in the scope of the <code>puts</code>, so it would error. How does scope in Ruby work. I can't seem to find a clear tutorial explaining it.</p>

<p>And even though that's valid, is it good practice?</p>
","2988","","<p>In Ruby, there are 5 scopes:</p>

<ul>
<li>script scope</li>
<li>module scope</li>
<li>class scope</li>
<li>method scope</li>
<li>block scope</li>
</ul>

<p>Block scopes nest, the other ones don't. Blocks can close over their lexical environment, the other ones can't. (IOW: not only do they nest inside their lexically surrounding environment, i.e. can access variables from their lexically surrounding environment, they can even continue to do so after that surrounding environment ceases to exist.)</p>

<p>Unlike some other languages, Ruby doesn't have a top-level or global scope for local variables. The ""biggest"" scope is script scope, but that isn't global, it is confined to a single script. (Usually, a script is the same as a file, but there are Ruby implementations that don't use files, so a term like ""file scope"" would be misleading.)</p>

<p>Local variables are defined from the point on where their definition is <em>parsed</em>, and initialized from the point on that their definition is <em>executed</em>. In between, when they are defined but not initialized, they evaluate to <code>nil</code>.</p>

<p>Consider this slightly modified example:</p>

<pre><code>if false
  hi = 'hello'
end

hi
# =&gt; nil
# hi is defined here, because its definition was parsed

if true
  hi = 'olleh'
end

hi
# =&gt; 'olleh'
# hi is initialized here, because its definition was executed
</code></pre>
"
"<p><code>This is kind of an odd question, but I don't .......</code></p>

<p>I overcomplicated the original question. If you want to see the original question, look through the previous edits. Here's my revised question by combining my two previous questions, as simple as I can explain it:</p>

<p>I have an object. The object can have (x) amount of fields and all of the fields and values can be different. Example: </p>

<p><code>#&lt;User name=""John"", height=75&gt;</code> or <code>#&lt;Comment title=""First!""&gt;</code></p>

<p>I'm using a gem/db requires a specific format for queries. This is the format that the query MUST have: <code>CREATE (u:User{attribute: ""Some att."", another_att: 32})</code> and so on and so forth. Notice the JavaScript-like hash it uses for its values. </p>

<p>I'm trying to interpolate an object's attributes into the query. But I don't know how to map the correct fields and values into the query. Here's an example of what I start with and what I want to end with:</p>

<p><code>object = #&lt;User name=""John"", height=75&gt;</code> => </p>

<p><code>""CREATE (u:User{name: ""John"", height: 75})""</code></p>

<p>What's the simplest way to achieve this? Thanks to everyone who's helped so far.</p>

<p>Note that it is possible to convert the attributes to a Ruby hash: <code>{:name =&gt; ""John"", :height =&gt; 75}</code>, (as explained in the original question) but it was too confusing to change that hash to the syntax in the query, so I've backtracked and simplified my question.</p>
","2988","","<p>This doesn't make sense. There has to be something else going on here.</p>

<p>A hash is a hash is a hash, it doesn't matter what syntax you used to create it, it's still the <em>exact</em> same hash. Those four are 100% equivalent (and if they aren't, that's a bug in your Ruby implementation):</p>

<pre><code>hash = { name: 'John' }

hash = { :name =&gt; 'John' }

hash = {}
hash[:name] = 'John'

hash = Hash.new
hash[%Q|name|.to_sym] = %w@John@.first
</code></pre>

<p>There is absolutely no difference between them. There is no such thing as a ""Hashrocket <code>Hash</code>"" or ""JSON-style <code>Hash</code>"". There <em>is</em> a difference between the literals used to construct those hashes, but that difference only exists at parse time. At runtime, they are just as identical as <code>16</code>, <code>0x10</code> and <code>020</code> are.</p>
"
"<p>I am trying to write a small program that goes through an array's values outputting each individual value. When it reaches 15 it stops and outputs ""too big"". </p>

<p>Why is my logic below wrong, it makes sense to me..</p>

<pre><code>x = [10,11,12,13,14,15,16,17,18]

def counting
    for x[y]
    while y &lt; 15
        puts y
    else
        puts ""too big""  
end

puts counting
</code></pre>

<p>I'm just learning sorry if this is a really simple solution.</p>
","2988","","<blockquote>
  <p>Why is my logic below wrong, it makes sense to me..</p>
</blockquote>

<p>Given that you program isn't even syntactically legal, it's impossible to tell what its semantics would be if it were syntactically legal, let alone why those semantics were wrong. However, here's an idiomatic Ruby solution (you will almost never use nor see <code>while</code> in any Ruby code, and you will certainly never see <code>for</code>):</p>

<pre><code>puts x.take_while {|n| n &lt; 15 }
puts 'too big'
</code></pre>

<p>I prefer writing in point-free style, however in this case the only way to do that is to make use of the symmetry of the condition and invert the order of operands, which will lead to awkward logic:</p>

<pre><code>x.take_while(&amp;15.method(:&gt;))
</code></pre>

<p>Ao, in this case I would rather avoid point-free style, because it no longer matches the original specification literally. Instead of ""take all numbers less than 15"", we now have ""take all numbers such that 15 is greater than those numbers"", which reads awkward.</p>
"
"<p>Example</p>

<pre><code> class Persion
    attr_accessor :name, :age
 end
</code></pre>

<p>Can I write in this format?</p>

<pre><code> class Persion
    attr_accessor name, age
 end
</code></pre>
","2988","","<p>Yes, of course you can. <code>Module#attr_accessor</code> is a method just like any other method, there is nothing special about how you pass arguments to it. You don't <em>have</em> to pass in a <code>Symbol</code> literal, you can pass in any expression that evaluates to a <code>Symbol</code>:</p>

<pre><code>class Persion
  class &lt;&lt; self
    private
    def name; :name end
    def age; :age end
  end

  attr_accessor name, age
end

Persion.new.tap do |p| p.name = 'Foo'; p.age = 42 end
# =&gt; #&lt;Persion:0x007f7f70fc5160 @age=42, @name=""Foo""&gt;
</code></pre>
"
"<p>Quoting the documentation of Scala:</p>

<blockquote>
  <p>A sealed class may not be directly inherited, except if the inheriting template is defined in the same source file as the inherited class. However, subclasses of a sealed class can inherited anywhere.</p>
</blockquote>

<p>If I create a hierarchy of sealed classes in my project it's all fine, e.g.:</p>

<pre><code>sealed abstract class Base {}
sealed class Derived extends Base {}
</code></pre>

<p>But what if I compile the project and distribute it as a, say, JAR in Maven.</p>

<p>What if I write a Java class in a 2nd project that has that JAR on classpath:</p>

<pre><code>public class Breaker extends Derived {}
</code></pre>

<p>Will it compile aka will the constrait still hold? What if I wrote <code>Breaker</code> in Scala? </p>

<p>If <em>sealing</em> works in the abouve situations, how is it implmented?</p>
","2988","","<p>Java doesn't have a concept of <code>sealed</code> templates, therefore it is simply impossible for the Java compiler to enforce <code>sealed</code> constraints, because it doesn't even know they exist.</p>

<p>This is not specific to <code>sealed</code> and not even specific to Scala/Java. This kind of thing <em>only</em> works if both languages know about each other (i.e. the Scala compiler needs to know about every programming language that could conceivably be used to interoperate with it, <em>including</em> ones that don't even exist yet, and vice-versa, every compiler and interpreter for a language that could conceivably be used to interoperate with Scala needs to know about Scala, even compilers that were written before Scala existed) and they can agree on a a way to communicate those semantics between each other.</p>

<p>Of course, having all languages know about all other languages is O(n²) and doesn't scale, and obviously having languages know about languages that don't exist yet is just impossible. So, what we do instead is to define a common language that all languages know about. On Unix, that's C structs + C function calls, on the CLI, that's CIL byte code and on the Java platform, that's JVM byte code.</p>

<p>This means that Scala and Java can communicate with each other via a detour through JVM byte code, but obviously they can only communicate semantics which can be expressed in JVM byte code. And <code>sealed</code> is not one of those.</p>

<p><strong>Scala uses an annotation to encode <code>sealed</code> in the byte code, but Java doesn't understand that annotation, and even if it did, it doesn't actually cleanly map to any concept in Java anyway! (Unlike, say, Java interfaces which cleanly map to fully abstract Scala traits).</strong></p>
"
"<p>Google didn't help me with this question, I hope that doesn't mean it is not possible:</p>

<p>In my class I want to have a method that has a signature defined, but the body is not defined (method1)</p>

<p>There will be many defined methods that satisfy this signature (impl1, impl2, impl3)</p>

<p>When I initialise the object, I will then choose (based on some criteria) which method implementation  impl1, impl2, impl3 to assign to the function pointer method1</p>

<p>Basically I'm asking how I can have a function pointer that can point to any function satisfying its signature.</p>

<p>EDIT:</p>

<p>So, it turns out it is actually very straight forward:</p>

<pre><code>var method: Int =&gt; Int = (x =&gt; x+1)

method = (x =&gt; x-1)
method = (x =&gt; x*2)
etc...
</code></pre>

<p>My problem before was that I was using ""val"" or ""def"" to define ""method""</p>

<p>Not sure why this wasn't suggested directly. Many people favoured the way of having the function as a parameter to some secondary class then initialise that class with a specific implementation. Maybe there is something that I'm missing.</p>
","2988","","<p>I would not use a method at all in this case. Just have a field that can be initialized to the specific function you want. Something like:</p>

<pre><code>class Foo(val method1: Int =&gt; Int)

val doubler     = new Foo(2*)
val incrementer = new Foo(1+)
val absolute    = new Foo(_.abs)
val parity      = new Foo(_ % 2)
val doesNothing = new Foo(identity)

doubler.method1(-3)     // =&gt; -6
incrementer.method1(-3) // =&gt; -2
absolute.method1(-3)    // =&gt;  3
parity.method1(-3)      // =&gt; -1
doesNothing.method1(-3) // =&gt; -3
</code></pre>
"
"<p>In one of my algorithms I use Ruby's <a href=""http://www.ruby-doc.org/core-2.1.1/Array.html#method-i-combination"" rel=""nofollow"" title=""combination"">combination</a> and <a href=""http://www.ruby-doc.org/core-2.1.1/Array.html#method-i-permutation"" rel=""nofollow"" title=""permutation"">permutation</a> methods. I have to discuss this algorithms complexity. Where could I find information about their complexity/implementation?</p>

<p>I've tried implementing a simple 'hand made' function but the Ruby ones seem to run in near constant time!</p>

<p>Any information about where to look would be much appreciated.</p>
","2988","","<p>There is nothing in the Ruby Language Specification that requires implementors to guarantee a certain algorithmic complexity, and there is most certainly nothing that forces a particular implementation.</p>

<p>Every Ruby Execution Engine has their own implementation, and they may or may not have the same algorithmic complexity.</p>

<p>For example, here is <a href=""http://Rubini.us/"" rel=""nofollow"">Rubinius</a>'s implementation of <code>Array#combination</code>, located in <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/array.rb#L360-394"" rel=""nofollow""><code>kernel/common/array.rb#L360-394</code></a>:</p>

<pre><code>def combination(num)
  num = Rubinius::Type.coerce_to num, Fixnum, :to_int
  return to_enum(:combination, num) unless block_given?

  if num == 0
    yield []
  elsif num == 1
    each do |i|
      yield [i]
    end
  elsif num == size
    yield self.dup
  elsif num &gt;= 0 &amp;&amp; num &lt; size
    stack = Rubinius::Tuple.pattern num + 1, 0
    chosen = Rubinius::Tuple.new num
    lev = 0
    done = false
    stack[0] = -1
    until done
      chosen[lev] = self.at(stack[lev+1])
      while lev &lt; num - 1
        lev += 1
        chosen[lev] = self.at(stack[lev+1] = stack[lev] + 1)
      end
      yield chosen.to_a
      lev += 1
      begin
        done = lev == 0
        stack[lev] += 1
        lev -= 1
      end while stack[lev+1] + num == size + lev + 1
    end
  end
  self
end
</code></pre>

<p>And <code>Array#permutation</code>, located in <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/array.rb#L935-969"" rel=""nofollow""><code>kernel/common/array.rb#L935-969</code></a>:</p>

<pre><code>def permutation(num=undefined, &amp;block)
  return to_enum(:permutation, num) unless block_given?

  if undefined.equal? num
    num = @total
  else
    num = Rubinius::Type.coerce_to num, Fixnum, :to_int
  end

  if num &lt; 0 || @total &lt; num
    # no permutations, yield nothing
  elsif num == 0
    # exactly one permutation: the zero-length array
    yield []
  elsif num == 1
    # this is a special, easy case
    each { |val| yield [val] }
  else
    # this is the general case
    perm = Array.new(num)
    used = Array.new(@total, false)

    if block
      # offensive (both definitions) copy.
      offensive = dup
      Rubinius.privately do
        offensive.__permute__(num, perm, 0, used, &amp;block)
      end
    else
      __permute__(num, perm, 0, used, &amp;block)
    end
  end

  self
end
</code></pre>

<p>As you can see, it delegates to a <code>private</code> helper method named <code>Array#__permute__</code>, defined in <a href=""https://GitHub.Com/Rubinius/Rubinius/blob/master/kernel/common/array.rb#L971-994"" rel=""nofollow""><code>kernel/common/array.rb#L971-994</code></a>:</p>

<pre><code>def __permute__(num, perm, index, used, &amp;block)
  # Recursively compute permutations of r elements of the set [0..n-1].
  # When we have a complete permutation of array indexes, copy the values
  # at those indexes into a new array and yield that array.
  #
  # num: the number of elements in each permutation
  # perm: the array (of size num) that we're filling in
  # index: what index we're filling in now
  # used: an array of booleans: whether a given index is already used
  #
  # Note: not as efficient as could be for big num.
  @total.times do |i|
    unless used[i]
      perm[index] = i
      if index &lt; num-1
        used[i] = true
        __permute__(num, perm, index+1, used, &amp;block)
        used[i] = false
      else
        yield values_at(*perm)
      end
    end
  end
end
</code></pre>
"
"<p>When experimenting in irb, I frequently call upon the tab completion to show a list of available methods for the target objects.</p>

<p>Could the function that outputs this list of method names be one that is defined in either Object or BasicObject, or is it a function implemented by irb itself?</p>

<p>I assumed this list would be the formatted result of an Array returned by a call to public_methods, the  but the lists seem to differ somewhat:</p>

<pre><code>1.9.3-p448 :026 &gt; 1.
Display all 115 possibilities? (y or n)
                              1.divmod                      1.inspect                     
1.numerator                   1.respond_to?                 1.to_enum
1.__id__                      1.downto                      1.instance_eval
1.object_id                   1.respond_to_missing?         1.to_f                   
1.__send__                    1.dup                         1.instance_exec
1.odd?                        1.round                       1.to_i               
1.abs                         1.enum_for                    1.instance_of?                                         

1.9.3-p448 :027 &gt; 1.public_methods.sort
 =&gt; [:!, :!=, :!~, :%, :&amp;, :*, :**, :+, :+@, :-, :-@, :/, :&lt;, :&lt;&lt;, :&lt;=, :&lt;=&gt;, :==, :===,
     :=~, :&gt;, :&gt;=, :&gt;&gt;, :[], :^, :__id__, :__send__, :abs, :abs2, :angle, :arg,
     :as_null_object,     :between?, :ceil, :chr, :class, :clone, :coerce, :conj,
     :conjugate, :define_singleton_method,     :denominator, :display, :div
</code></pre>

<p>None of the operator methods are displayed in the tab list, for example. so, where does the tab list come from?</p>
","2988","","<p>Completion in IRb is provided by the <code>irb/completion</code> standard library, which is unfortunately undocumented. You can find the source for the case you are interested in here: <a href=""https://GitHub.Com/Ruby/Ruby/blob/trunk/lib/irb/completion.rb#L149-195"" rel=""nofollow"">https://GitHub.Com/Ruby/Ruby/blob/trunk/lib/irb/completion.rb#L149-195</a></p>
"
"<p>For example, </p>

<p>input = <code>['a','b','b','b','a','a','b','c','c']</code></p>

<p>output = <code>['a',['b','b','b'],['a','a'],'b',['c','c']]</code></p>

<p>Here, if there are more than one same elements then those are put into sub-array.</p>

<p>Can you please help me out?</p>
","2988","","<p>Ruby 1.9+ has <a href=""http://Ruby-Doc.Org/core-2.1.1/Enumerable.html#method-i-chunk"" rel=""nofollow""><code>Enumerable#chunk</code></a>, which will almost do what you want:</p>

<pre><code>input.
  chunk {|e| e }.
  map(&amp;:last).
  map {|e| if e.size == 1 then e.first else e end }
</code></pre>

<p>For older versions of Ruby, <code>Enumerable#chunk</code> is available in Marc-André Lafortunes <a href=""https://RubyGems.Org/gems/backports/"" rel=""nofollow""><code>backports</code></a> gem. Just add </p>

<pre><code>require 'backports/1.9.2/enumerable/chunk'
</code></pre>

<p>on top.</p>
"
"<p>Here's some code:</p>

<pre><code>$ cat 1.rb
#!/usr/bin/env ruby
def f p1 = nil
    unless p1   # TODO
        puts 'no parameters passed'
    end
end
f
f nil
$ ./1.rb
no parameters passed
no parameters passed
</code></pre>

<p>The question is, is there a way to distinguish between no arguments and one <code>nil</code> argument passed?</p>

<p><strong>UPD</strong></p>

<p>I decided to add a use case in <code>javascript</code> to make things hopefully clearer:</p>

<pre><code>someProp: function(value) {
    if (arguments.length) {
        this._someProp = value;
    }
    return this._someProp;
}
</code></pre>
","2988","","<p>There are three ways in general use. One way is to use the default value to set another variable indicating whether or not the default value was evaluated:</p>

<pre><code>def f(p1 = (no_argument_passed = true; nil))
  'no arguments passed' if no_argument_passed
end

f      # =&gt; 'no arguments passed'
f(nil) # =&gt; nil
</code></pre>

<p>The second way is to use some object that is only known inside the method as default value, so that it is impossible for an outsider to pass that object in:</p>

<pre><code>-&gt; {
  undefined = BasicObject.new
  define_method(:f) do |p1 = undefined|
    'no arguments passed' if undefined.equal?(p1)
  end
}.()

f      # =&gt; 'no arguments passed'
f(nil) # =&gt; nil
</code></pre>

<p>Of these two, the first one is more idiomatic. The second one (actually, a variation of it) is used inside Rubinius, but I have never encountered it anywhere else.</p>

<p>A third solution would be to take a variable number of arguments using a splat:</p>

<pre><code>def f(*ps)
  num_args = ps.size
  raise ArgumentError, ""wrong number of arguments (#{num_args} for 0..1)"" if num_args &gt; 1
  'no arguments passed' if num_args.zero?
end

f      # =&gt; 'no arguments passed'
f(nil) # =&gt; nil
</code></pre>

<p>Note that this requires you to re-implement Ruby's arity checking by hand. (And we still haven't gotten it right, because this raises the exception <em>inside</em> the method, whereas Ruby would raise it at the <em>call site</em>.) It also requires you to manually document your method signature because automated documentation generators such as RDoc or YARD will infer an arbitrary number of parameters instead of a single optional one.</p>
"
"<p>I have a method <code>gcd</code> that takes two arguments. When I do this:</p>

<pre><code>gcd (20,40)
</code></pre>

<p>I get this error</p>

<pre><code>syntax error, unexpected ',', expecting ')'
</code></pre>

<p>Removing the parentheses fixes the problem, but is there some way to use parentheses and still get this code to work?</p>
","2988","","<p>There are two ways to pass arguments to a method:</p>

<ul>
<li>in parentheses directly after the method name</li>
<li>without parentheses with whitespace after the method name</li>
</ul>

<p>You have white space after the method, ergo you are using option #2 and are passing a <em>single</em> argument <code>(20, 40)</code> to the method, but <code>(20, 40)</code> is not legal syntax.</p>
"
"<p>Disclaimer: I'm much more experienced in Java than in Scala (which I'm learning). </p>

<p>In Java, I have read several times that switch could be harmful to object orientation, especially when used against types (this kind of problems also led to this: <a href=""http://www.antiifcampaign.com/"" rel=""nofollow"">http://www.antiifcampaign.com/</a>).</p>

<p>In Scala, one of the introduction video lessons of Martin Odersky shows how pattern matching is a better alternative to multiple ""low-level"" <code>isInstanceOf</code> checks. </p>

<p>Although, pattern matching catches more flexible patterns than a simple Java switch, I still see the first as a generalization of the latter. </p>

<p>Don't pattern matching and ""switch on types"" roughly share the same fundamental approach?
Isn't pattern matching just some syntactic sugar hiding lots of <code>isInstanceOf</code>/<code>asInstanceOf</code>?</p>

<p>If not, how would pattern matching be more flexible (as in: resilient to change) than writing those low level checks ourselves (apart from the error-prone nature of this tedious task)?</p>
","2988","","<p>In Scala, pattern matching is done via extractors. Extractors are themselves objects and only have access to the public API of the object that is being pattern matched against.</p>

<p>Thus, pattern matching does not break object encapsulation.</p>

<p>Theoretically, all conditionals (including pattern matching) can be replaced by polymorphism. See Smalltalk as an example of a language which has no conditionals, no loops, no switches, no control structures of any kind except polymorphic message dispatch. And see Newspeak as an example of a Smalltalk-inspired language which has powerful pattern matching inspired by Scala and F# implemented as a library completely on top of polymorphic message dispatch.</p>

<p>When done this way, pattern matching is as object-oriented as can be.</p>
"
"<p>Follow two similar functions, <code>a</code> and <code>b</code>, declared differently:</p>

<pre><code>scala&gt; val a = { x:Int =&gt; x+x }
a: Int =&gt; Int = &lt;function1&gt;

scala&gt; def b(x:Int) = x+x
b: (x: Int)Int
</code></pre>

<p>The only difference I can find between the two is that only with the <code>def</code> function I can specify the parameter's name as I pass it (e.g. <code>b(x=1)</code>). How are these functions different in other regards? Which should be used when?</p>

<p>Edit:</p>

<p>I also was not able to use the <code>@tailrec</code> annotation with the <code>val</code> method.</p>
","2988","","<p>The short answer is: the second <em>isn't</em> a function, it's a method. The two are fundamentally different. Functions are objects, methods aren't (methods <em>belong</em> to objects).</p>
"
"<p>for some reason I'm getting</p>

<pre><code>NameError: undefined local variable or method `states' for main:Object
</code></pre>

<p>though states is clearly defined. What is going on here? </p>

<p>In irb I added states in and accessed it fine using states[:CA] but when I put it in a method I got that error. </p>

<pre><code>states = {
  CA: 'California',
  FL: 'Florida',
  MI: 'Michigan',
  NY: 'New York',
  OR: 'Oregon',
}

states[:CO] = 'Colorado'
states[:HI] = 'Hawaii'

cities = {
  CA: ['Alameda', 'Apple Valley', 'Exeter'],
  FL: ['Exeter', 'Amelia Island', 'Bunnell'],
  MI: ['Ann Arbor', 'East China', 'Elberta'],
  NY: ['Angelica', 'Apalachin', 'Canadice'],
  OR: ['Amity', 'Boring', 'Camas Valley'],
  CO: ['Blanca', 'Crestone', 'Dillon', 'Fairplay'],
  HI: ['Kailua', 'Hoopili', 'Honolulu'],
}

def describe_state state
  puts state
  description = ""#{state.to_s} is for #{states[state]}.""
  description &lt;&lt; "" It has #{citites[state].length} major cities:""
  cities[state].each do |x| ' ' &lt;&lt; description end
end

puts describe_state :CA
</code></pre>
","2988","","<p><code>states</code> is a local variable (because it starts with a lowercase letter). Local variables are local to the scope they are defined in (that's why they are called <em>local</em> variables, after all). So, <code>states</code> is defined in the scope of the script, but not in the scope of the method <code>describe_state</code>.</p>

<p>Method scopes don't nest, the only scopes that <em>do</em> nest are block scopes, so you would need to use a block. Thankfully, there is a method called <code>define_method</code> which creates a method from a block:</p>

<pre><code>states = {
  CA: 'California',
  FL: 'Florida',
  MI: 'Michigan',
  NY: 'New York',
  OR: 'Oregon',
}

states[:CO] = 'Colorado'
states[:HI] = 'Hawaii'

cities = {
  CA: ['Alameda', 'Apple Valley', 'Exeter'],
  FL: ['Exeter', 'Amelia Island', 'Bunnell'],
  MI: ['Ann Arbor', 'East China', 'Elberta'],
  NY: ['Angelica', 'Apalachin', 'Canadice'],
  OR: ['Amity', 'Boring', 'Camas Valley'],
  CO: ['Blanca', 'Crestone', 'Dillon', 'Fairplay'],
  HI: ['Kailua', 'Hoopili', 'Honolulu'],
}

define_method(:describe_state) do |state|
  ""#{state} is for #{states[state]}. "" \
  ""It has #{cities[state].length} major cities: #{cities[state].join(', ')}""
end

puts describe_state :CA
#=&gt; CA is for California. It has 3 major cities: Alameda, Apple Valley, Exeter
</code></pre>
"
"<p>I am going through previous exams for Information Security.</p>

<p>I am looking at Salting with regards to Password encryption.
My question is this - If SHA 256 is a one way encryption, how can it be decrypted?</p>

<p>I am just thinking that when messages are sent via email, they are encrypted and decrypted so that the message or files can be accessed.</p>

<p>How does SHA 256 work? How can you see your message or files if the encryption cannot be decrypted?
Or does it just protect the password itself?</p>

<p>I am currently researching this (at university) and would appreciate any assistance.
Please forgive any silly errors in my question as I am still attempting to learn about this subject.</p>

<p>Thanks.</p>
","2988","","<p>SHA-256 ist not encryption, ergo it cannot be decrypted. It's a hash function, and <em>by definition</em> hashes cannot be reversed.</p>
"
"<p>From the code below, it appears the <code>||=</code> operator is being evaluated from outside of the class.</p>

<pre><code>class Foo
  attr_reader :bar

  def baz
    self.bar ||= 'baz'
  end

  private

  attr_writer :bar
end

puts Foo.new.baz
# =&gt; in `baz': private method `bar=' called for #&lt;Foo:0x007fd9720829a8&gt; (NoMethodError)
</code></pre>

<p>Quoting from the accepted answer on <a href=""http://stackoverflow.com/questions/12287341/ruby-official-expansion-of-conditional-assignment-operator"">Ruby: Official expansion of ||= conditional assignment operator</a>:</p>

<pre><code>In other words, the expansion c = c || 3 is (excluding bugs like in pre-1.9) correct.
</code></pre>

<p>Rewriting the <code>baz</code> method as <code>self.bar = self.bar || 'baz'</code> does not raise the error.</p>

<p>I am looking for a definitive answer on <em>how</em> and <em>why</em> Ruby is behaving in this way, since it seems counter-intuitive.</p>

<p>This behaviour is present on Ruby versions 1.9.3, 2.0.0 and 2.1.2, which leads me to believe this is not a bug.</p>
","2988","","<p>That looks like a <a href=""https://bugs.ruby-lang.org/issues/9907"" rel=""nofollow"">bug</a>.</p>

<p>UPDATE: The <a href=""https://bugs.ruby-lang.org/issues/9907"" rel=""nofollow"">bug</a> was <a href=""https://github.com/ruby/ruby/commit/199f814f32e97b2fed528801c0ad2c84c1e5f8a6"" rel=""nofollow"">fixed</a> in trunk, and is <a href=""https://bugs.ruby-lang.org/issues/9907#note-1"" rel=""nofollow"">slated for back porting to 2.1 and 2.0</a>.</p>

<p>Note that the problem is more general than that, it is broken for <em>all</em> abbreviated assignments, not just conditional abbreviated assignments:</p>

<pre><code>private def foo=(*) end
public  def foo; 0  end

self.foo =  42

self.foo += 42
# private method `foo=' called for main:Object (NoMethodError)

private :foo

self.foo += 42
# private method `foo' called for main:Object (NoMethodError)
</code></pre>
"
"<p>Standard ruby on rails project has README.rdoc.
Many github rails projects have README.md.</p>

<p>What is the difference?</p>
","2988","","<p>RDoc is a markup language. Markdown is a different markup language. HTML is yet another markup language. Any of those can be used to markup text, and all of those are supported by various code-browsing tools including but not limited to GitHub.</p>
"
"<p>this is my first entry to StackOverflow and I'm a newbie coder.</p>

<p>So I'm making a simple addition calc and I added commas in the last 2 lines to print out integers ... </p>

<p>What am I missing?  The error says </p>

<blockquote>
  <p>C:/Ruby193/rubystuff/ex1.rb:13: syntax error, unexpected ',' print
  (""The result of the addition is "" +,result)</p>
</blockquote>

<p>I thought this was the right thing to do ... i must have missed something simple. </p>

<pre><code>print (""Please enter your name: "")
name = gets
puts (""Hello, "" + name)
print (""Enter a number to add: "")
num1 = gets
print (""Enter a second number to add: "")
num2 = gets
result = Integer(num1) + Integer(num2)

print result


print (""The result of the addition is "",result)
print (""So the result of adding "" + num1.chomp + "" plus "" + num2.chomp + "" equals: "",result)
</code></pre>
","2988","","<p>There are two ways to pass arguments to a method:</p>

<ul>
<li>in parentheses directly after the method name</li>
<li>without parentheses with whitespace after the method name</li>
</ul>

<p>You have white space after the method, ergo you are using option #2 and are passing a <em>single</em> argument <code>(""The result of the addition is "",result)</code> to the method, but <code>(""The result of the addition is "",result)</code> is not legal syntax.</p>
"
"<p>I want to pass array in argument in such a way suppose process.rb is my script and the argument will be like:</p>

<p>i/p</p>

<pre><code>process.rb server{1..4} 
process.rb prodserver{2..3} 
process.rb devserver3
</code></pre>

<p>The process.rb should accept all the inputs and parse it in such a way that when I print the variable which holds the arguments give me below result.</p>

<pre><code>o/p
    puts arguments

    server1
    server2
    server3
    server4
    or
    prodserver2
    prodserver3
    or
    devserver3
</code></pre>

<p>I have a shell script which does the same:</p>

<pre><code>for i in ""$@""
do
echo $i
done

i/p
server{1..4} 
o/p
server1server2server3server4
</code></pre>

<p>I wanted to have the same logic in the ruby.
Since I am a new bie in ruby I am not able to find the same on google.
Please let me know how I can get this output or any article about the related to my question</p>
","2988","","<p>The list is expanded by the shell before it ever hits your script. In other words, both your shell script and your Ruby script <em>do not</em> receive a single argument <code>server{1..4}</code> but rather they receive <em>four</em> arguments <code>server1 server2 server3 server4</code>, <em>before</em> they even start interpreting the arguments themselves.</p>

<p>You can simply just iterate over those, there is no need to parse the <code>{1..4}</code> shell expansion syntax yourself because you will <em>never</em> see it! It is already parsed and expanded by the shell <em>before</em> the shell passes off the arguments to your script.</p>

<pre><code>ruby -e 'p ARGV' -- server{1..4}
# [""server1"", ""server2"", ""server3"", ""server4""]
</code></pre>
"
"<p>I'm working with the <a href=""https://github.com/wkhtmltopdf/wkhtmltopdf"" rel=""nofollow"">wkhtmltoimage</a> utility which does not support protocol relative URLs such as this: <code>&lt;script src=""//cdnjs.cloudflare.com/ajax/libs/numeral.js/1.4.5/numeral.min.js""&gt;&lt;/script&gt;</code></p>

<p>I need to convert it to: <code>&lt;script src=""http://cdnjs.cloudflare.com/ajax/libs/numeral.js/1.4.5/numeral.min.js""&gt;&lt;/script&gt;</code> in Ruby. I'm wondering what the most efficient way of finding these type of URLs as I can't figure out how to write a regex for them and then prepend <code>http:</code> to it.</p>

<p>Thanks in advance.</p>
","2988","","<p>There's no need to use <code>Regexp</code>s here, just use an HTML parser for the HTML and a URI parser for the URI:</p>

<pre><code>require 'nokogiri'
require 'uri'

doc = Nokogiri.HTML(&lt;&lt;-EOHTML)
  &lt;script 
    src=""//cdnjs.cloudflare.com/ajax/libs/numeral.js/1.4.5/numeral.min.js""&gt;
  &lt;/script&gt;
EOHTML

doc.xpath('//script[@src]').each do |script|
  uri = URI.parse(script['src'])  
  uri.scheme = 'http' if uri.scheme.nil?  
  script['src'] = uri.to_s
end
</code></pre>
"
"<p>I'm fairly new to Ruby (coming from C#), so I'm wondering why this is valid:</p>

<pre><code>x = 2
x #why is this valid?
</code></pre>

<p>Does ruby interpret it as x.inspect or something internally?</p>
","2988","","<blockquote>
  <p>Why is a variable a valid statement?</p>
</blockquote>

<p>Because it isn't a statement, it's an expression. There are no statements in Ruby, everything is an expression.</p>

<blockquote>
  <p>Does ruby interpret it as <code>x.inspect</code> or something internally?</p>
</blockquote>

<p>No. <code>x</code> is interpreted as <code>x</code>, nothing else.</p>

<p>In a REPL, like IRb or Pry, the REPL may or may not call some methods on the object which is the result of evaluating <code>x</code> in order to display some human-readable text representation of the object, but that is a) a feature of the REPL, not Ruby and b) applies to all expressions, not just local variable dereferences.</p>
"
"<p>My question why does not ruby support symbols that includes operators(what is the idea behind it)?</p>

<p>example like</p>

<pre><code>attr_accessor :active?
</code></pre>

<p>on the contrary</p>

<p>it supports</p>

<pre><code>  :@user
</code></pre>

<p>but not</p>

<pre><code>  :user@ 
</code></pre>
","2988","","<p>I don't understand what you mean by ""operator"", but all of your examples are clearly valid <code>Symbol</code>s:</p>

<pre><code>:active?
'active?'.to_sym
:'active?'
</code></pre>

<p>and </p>

<pre><code>'user@'.to_sym
:'user@'
</code></pre>

<p>are perfectly valid <code>Symbol</code>s. <code>Symbol</code>s can even contain whitespace as well as any Unicode character imaginable:</p>

<pre><code>'    🎈    '.to_sym
:'    🎈    '
</code></pre>
"
"<p>I know what a singleton class is. Singleton classes are used to hold the singleton method defined for an object. Are meta class and singleton class the same? Can anyone explain what meta class is? Some information on meta class gives examples of singleton class. Are both the same thing or somehow related to each other?</p>
","2988","","<p>For a long, there was no official name for what is now known as the ""singleton class"". People called it all sorts of different things, including but not limited to:</p>

<ul>
<li>singleton class</li>
<li>eigenclass</li>
<li>metaclass</li>
<li>virtual class</li>
<li>ghost class</li>
<li>shadow class</li>
</ul>

<p>Those all refer to the same thing.</p>

<p>However, some of those already have established meanings. ""Metaclass"" for example already has a meaning in OO in general and in Smalltalk specifically, and it means something different from how it was once used in Ruby, which lead to confusion, especially given Ruby's close relation to Smalltalk.</p>

<p>Likewise, ""virtual class"" means something different. (Plus, the term is also used inside the YARV source code for a third concept.)</p>
"
"<pre><code>a = [2,2,4,8,9]
ind = 1

a.each do |x|

if a[ind] &lt; a[x]
puts x
end

end
</code></pre>

<p>How can I use ""each"" on an array to iterate over and return the index of all values greater than a certain value in Ruby?</p>

<p>I would like to iterate over the given array <code>a = [2,2,4,8,9]</code>. I want to iterate over the entire array and, using a conditional, put out all values where <code>a[ind] &lt; a[x]</code>.</p>

<p>I receive the error <code>comparison of fixnum nil failed</code>. - How can I resolve this?</p>

<p>I did try this as well, seting a range for the process:</p>

<pre><code>    a = [ 2,2,3,4,5]

x = 0
while x &gt;= 0 &amp;&amp; x &lt;= 4

a.each do |x|
    if a[1] &lt; a[x]
        puts x
    end

end
x += 1 
end
</code></pre>
","2988","","<p>You want to select all elements whose index is less than themselves. You can just say exactly that in Ruby:</p>

<pre><code>a.select.with_index {|el, idx| idx &lt; el }
</code></pre>

<p>or even </p>

<pre><code>a.select.with_index(&amp;:&gt;)
</code></pre>
"
"<p>If I define an operator,</p>

<pre><code>class Object
  def ~@
    self || ErrorlessNil.new
  end
end
</code></pre>

<p>how can I make it so that the <code>~</code> is evaluated first, instead of last? Right now, something like</p>

<pre><code>~[1][100].undefined_method
</code></pre>

<p>will throw an error, while</p>

<pre><code>(~[0][22]).randomsadfldsf
</code></pre>

<p>works fine. The goal is to define a tool that works like coffeescript's question mark. I could make a <code>??</code> method but I can't start with a <code>?</code>, and <code>_?</code> works ok, but that is not fun.</p>
","2988","","<p>You can't.</p>

<p>In Ruby, you can only override the behavior of existing operators. You cannot define new operators nor can you change their precedence, arity, associativity or fixity.</p>

<p>This is unlike, for example, Haskell or Fortress, which allow you to define your own operators with your own fixity (prefix, postfix, infix), associativity (left, right, none) and precedence. Ruby is like Python, C# and C++ in this regard.</p>
"
"<p>Operations involving the plus operator (e.g. string concatenation or arithmetic) would be so much more convenient if Ruby knew that:</p>

<pre><code>'a' + nil 
# =&gt; 'a'
</code></pre>

<p>and</p>

<pre><code>nil + 'a' 
# =&gt; 'a'
</code></pre>

<p>These statements are unambiguous, but they return errors:</p>

<blockquote>
  <p>TypeError: no implicit conversion of nil into String</p>
</blockquote>

<p>and</p>

<blockquote>
  <p>NoMethodError: undefined method '+' for nil:NilClass</p>
</blockquote>

<p>When programming to process databases, e.g. parsing XML and JSON from human-input data, one encounters empty fields all the time, frequently resulting in variables set to nil.</p>

<p><strong>Specific Example</strong></p>

<p>Using the JSON gem, </p>

<pre><code>json('firstname')
</code></pre>

<p>will return <code>nil</code> if <code>firstname</code> is not defined. Then wishing to process the result as a string, I'd normally have to write some logic to handle the case that it is <code>nil</code> rather than an empty string. To do this for many fields in a database is very tedious. It would be very convenient if I could handle these by implicitly converting <code>nil</code> to a string. </p>

<p>What is the Ruby way to solve this problem?</p>
","2988","","<p><code>nil</code> <em>does</em> define <em>explicit</em> conversions to <code>String</code>, <code>Integer</code>, <code>Float</code>, <code>Array</code>, <code>Hash</code>, <code>Rational</code> and <code>Complex</code>, so you could just do </p>

<pre><code>'a' + nil.to_s
nil.to_s + 'a'

1 + nil.to_i
nil.to_i + 1

1.0 + nil.to_f
nil.to_f + 1.0

[] + nil.to_a
nil.to_a + []

{}.merge(nil.to_h)
nil.to_h.merge({})

Rational(1) + nil.to_r
nil.to_r + Rational(1)

Complex(1, 1) + nil.to_c
nil.to_c + Complex(1, 1)
</code></pre>

<p>It <em>does not</em> define <em>implicit</em> conversions, because getting a <code>nil</code> where you didn't expect it is usually either a bug or bad design. (And if you <em>do</em> expect it, then you can test for it or explicitly convert it.)</p>

<p>You <em>could</em>, of course, add the necessary operators (<code>+</code>, …), implicit conversions (<code>to_str</code>, <code>to_int</code>, <code>to_float</code>, <code>to_ary</code>, <code>to_hash</code>, …) and numeric coercions (<code>coerce</code>) to <code>NilClass</code>, but I would consider that a mistake. The implicit conversions are meant to implement an IS-A relationship but saying that ""<code>nil</code> IS-A <code>String</code>"" is just wrong.</p>
"
"<p>Is there a way in <code>ruby</code> to distinguish between static, public and private inner class ?
I am thinking about <code>java</code> or other <code>OOP</code> language which provides this kind of stuffs</p>

<pre><code>public class Outer {
    ....
    public/private (static) class Inner {
    ...
    }
}
</code></pre>
","2988","","<p>Ruby doesn't have inner classes, therefore it obviously doesn't have access modifiers for them.</p>

<p>You <em>can</em>, however, simulate inner classes using methods (and methods can be made <code>private</code>):</p>

<pre><code>class Outer
  private def Inner
    @__inner_class__ ||= Class.new do
      …
    end
  end
end
</code></pre>
"
"<p>What is the language construct that corresponds to python <code>del</code> statement in Ruby. By what other means I can explicitly release memory in Ruby. </p>
","2988","","<blockquote>
  <p>Is there any corresponding method of del in Python for Ruby?</p>
</blockquote>

<p><code>del</code> does many different things in <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a>. In <a href=""/questions/tagged/ruby"" class=""post-tag"" title=""show questions tagged &#39;ruby&#39;"" rel=""tag"">ruby</a>, it is generally preferred that a method do only one thing, so there are many methods that provide different aspects of what <code>del</code> does in Python.</p>

<p>Unfortunately, it is rather hard to tell, what <em>exactly</em> <code>del</code> does in Python. Here's a pretty telling <a href=""https://Docs.Python.Org/3.5/reference/simple_stmts.html#the-del-statement"" rel=""nofollow"">quote from the Language Reference</a>:</p>

<blockquote>
  <p>Rather than spelling it out in full details, here are some hints.</p>
</blockquote>

<ul>
<li>For deleting an entry from an <a href=""http://Ruby-Doc.Org/core-2.1.2/Array.html"" rel=""nofollow""><code>Array</code></a>, use <a href=""http://Ruby-Doc.Org/core-2.1.2/Array.html#method-i-delete_at"" rel=""nofollow""><code>Array#delete_at</code></a></li>
<li>For deleting a slice from an <code>Array</code>, use <a href=""http://Ruby-Doc.Org/core-2.1.2/Array.html#method-i-slice-21"" rel=""nofollow""><code>Array#slice!</code></a></li>
<li>For removing an entry from a <a href=""http://Ruby-Doc.Org/core-2.1.2/Hash.html"" rel=""nofollow""><code>Hash</code></a>, use <a href=""http://Ruby-Doc.Org/core-2.1.2/Hash.html#method-i-delete"" rel=""nofollow""><code>Hash#delete</code></a></li>
<li>For removing an instance variable, use <a href=""http://Ruby-Doc.Org/core-2.1.2/Object.html#method-i-remove_instance_variable"" rel=""nofollow""><code>Object#remove_instance_variable</code></a></li>
<li>For removing a class variable, use <a href=""http://Ruby-Doc.Org/core-2.1.2/Module.html#method-i-remove_class_variable"" rel=""nofollow""><code>Module#remove_class_variable</code></a></li>
<li>For removing a constant, use <a href=""http://Ruby-Doc.Org/core-2.1.2/Module.html#method-i-remove_const"" rel=""nofollow""><code>Module#remove_const</code></a></li>
<li><p>For removing a local variable, there is no method in Ruby. Local variables go out of scope at the end of a block, method, class, module or script body, and those should be small anyway, so in general, you shouldn't need to explicitly remove local variables. If you need to limit the scope of a local variable, you can always wrap it in a block:</p>

<pre><code># some code here
-&gt; {
  some_local_var = 'blah'
  # code using some_local_var
}.()
# more code here, some_local_var is no longer in scope
</code></pre></li>
<li><p>There's also no method for removing a global variable. Global variables should only be used in quick, short, throwaway scripts, where it doesn't matter.</p></li>
</ul>

<blockquote>
  <p>Or, how should I release the memory space in Ruby?</p>
</blockquote>

<p>Ruby has automatic memory management (just like Python, BTW). It will release the memory for you.</p>
"
"<p>Two <code>groupBy</code> method in Spark's RDD are declared as:</p>

<pre><code>def groupBy[K](f: T =&gt; K)(implicit kt: ClassTag[K]): RDD[(K, Iterable[T])]
def groupBy[K](f: T =&gt; K, numPartitions: Int)(implicit kt: ClassTag[K]): RDD[(K, Iterable[T])]
</code></pre>

<p>I define a function f as:</p>

<pre><code>def f(x: Int): Int = x % 2
</code></pre>

<p>I could just pass f to the first <code>groupBy</code> as <code>rdd.groupBy(f)</code>. Why I could not just pass f to the second <code>groupBy</code> as <code>rdd.groupBy(f, 10)</code> ? I have to use <code>rdd.groupBy(f(_), 10)</code> or <code>rdd.groupBy(x =&gt; f(x), 10)</code>.</p>
","2988","","<blockquote>
  <p>I define a function f as:</p>

<pre><code>def f(x: Int): Int = x % 2
</code></pre>
</blockquote>

<p>That's not a function, that's a <em>method</em>. The two are <em>fundamentally</em> different:</p>

<ul>
<li>Methods can be generic, functions can't.</li>
<li>Methods can have optional parameters with default arguments, functions can't.</li>
<li>Methods can have varargs, functions can't.</li>
<li>Methods can have implicit arguments, functions can't.</li>
</ul>

<p>These are 4 restrictions that functions have compared to methods. Now, if they are so restricted, why do we use them? Well, there is one major advantage functions have:</p>

<ul>
<li>Functions are objects, methods aren't (they belong to objects.)</li>
</ul>

<p>This means: functions can be assigned to <code>val</code>s/<code>var</code>s, they can be passed as arguments to functions, methods and constructors, they can be returned from functions and methods. Methods cannot do any of that: Scala is an object-oriented language, all entities that can be manipulated by the program are objects … and methods aren't.</p>

<p>So, why does </p>

<blockquote>
<pre><code>rdd.groupBy(f)
</code></pre>
</blockquote>

<p>work?</p>

<p>Well, you can convert a method into a partially applied function (here ""partially applied"" means ""partially applied to <code>this</code>"", not to a subset of the arguments) via &eta;-expansion:</p>

<pre><code>val fn = f _
// =&gt; fn: Int =&gt; Int = &lt;function1&gt;
</code></pre>

<p>Here, as is so often the case in Scala, the underscore is used as a placeholder (in this case for the yet to be supplied arguments). We have fixed the <code>this</code> of the method and left the arguments open, and created a function corresponding to that method.</p>

<p>In <em>some</em> cases, Scala will know that you want to perform &eta;-expansion even <em>without</em> explicitly providing the underscore. That's why </p>

<pre><code>rdd.groupBy(f)
</code></pre>

<p>works. This is called <em>implicit &eta;-expansion</em> (§6.26.2 case 3 of the Scala Language Specification) and, because of ambiguities, works only in a limited amount of cases.</p>

<p>However, after having explained all this, I must admit, that I don't see why your second example doesn't work. According to my reading of the spec, it should.</p>

<p>IOW: the <em>fundamental</em> problem you seem to be having is that you confuse functions and methods, but in <em>this particular case</em>, it should actually work (at least according to my interpretation of the spec, although clearly not according to the compiler writers' interpretation).</p>
"
"<p>In Ruby 2.1.2p95 I wanted to check if a class method was being called using the same class it was defined in or using a child class. That's to say, which of these is happening:</p>

<pre><code>Parent.my_method
</code></pre>

<p>or</p>

<pre><code>Child.my_method
</code></pre>

<p>I tried this:</p>

<pre><code>def self.my_method
  if self == self.method(__method__).owner
    puts ""called in Parent""
  end
end
</code></pre>

<p>But while <code>self</code> returns the name of the class, e.g. <code>'Parent'</code>,  <code>Method#owner</code> returns something that looks like this:</p>

<pre><code>#&lt;Class:Parent&gt;
</code></pre>

<p>So, um, what's that? </p>

<p>And is there a slick way of testing whether something's being called from the parent or the child?</p>

<hr>

<p>Update for clarity: I'm only defining a class method in the parent. I'm not overriding anything. I'm merely calling the parent class method either directly (Parent.my_method) or via a child (Child.my_method) and I want to be able to tell the difference.</p>
","2988","","<p>You should <em>never</em> ever ever have to check what <code>self</code> is. That's just <em>wrong</em>. <code>self</code> knows about itself, it shouldn't have to check. Do you get up in the morning and look in the mirror to check who you are?</p>

<p>That's what polymorphism is for:</p>

<pre><code>class Parent; end
class Child &lt; Parent; end

def Parent.my_method; 'Called in Parent' end
def Child.my_method;  'Called in Child'  end
</code></pre>

<p>Simple as that.</p>
"
"<p>I come from a C# background, and that's probably the reason for my hesitation, but imagine we have the following scenario. We have a class that takes in some raw data, and then pushes it up to some external API. In the process of doing so, we need to process the data according to some business rules. The catch is, these business rules aren't always the same. In C#, I would use an interface for the ""data processing"" business rules, and then use different implementations at different times:</p>

<pre><code>public interface IDataProcessor
{
    object Process(object data);
}

public class SomeBuilder
{
    private object _data;
    private IDataProcessor _dataProcessor;
    public SomeBuilder(object data, IDataProcessor dataProcessor)
    {
        _data = data;
        _dataProcessor = dataProcessor;
    }

    public void Build()
    {
        var processedData = _dataProcessor.Process(_data);
        //do the fun building stuff with processedData
    }
}
</code></pre>

<p>In the above example, I would have different implementations of my <code>IDataProcessor</code> that process the data differently.</p>

<p>Now, in the Ruby world, my first inkling was to do something similar:</p>

<pre><code>class SomeBuilder
    def initialize(some_data, data_processor)
        @some_date = some_date
        @data_processor = data_processor
    end

    def build
        processed_data = @data_processor.process(@some_data)
        #do build logic
    end
end
</code></pre>

<p>My issue is twofold: First, this somehow doesn't ""feel"" quite right in the Ruby ecosystem. e.g. is this the Ruby way? Second of all, if I were to go down this path, what would the data_processor look like? It feels like it should be a module, since it's just some behavior, but if it <strong>is</strong> just a module, how do I interchangeably use different modules in my SomeBuilder class?</p>

<p>Thanks in advance!</p>
","2988","","<p>Your interface has only a single method. An object with only a single method is isomorphic to a function/procedure. (And an object with some fields and a single method is isomorphic to a closure). Therefore, you would actually use a first-class procedure.</p>

<pre><code>class SomeBuilder
  def initialize(some_data, &amp;data_processor)
    @some_data, @data_processor = some_data, data_processor
  end

  def build
    processed_data = @data_processor.(@some_data)
    #do build logic
  end
end

# e.g. a stringifier-builder:
builder = SomeBuilder.new(42) do |data| data.to_s end
# which in this case is equivalent to:
builder = SomeBuilder.new(42, &amp;:to_s)
</code></pre>

<p>Actually, you would probably do the same thing in C# as well. (Plus, you probably should make it generic.)</p>

<pre><code>public class SomeBuilder&lt;I, O&gt;
{
    private I _data;
    private Func&lt;I, O&gt; _dataProcessor;
    public SomeBuilder(I data, Func&lt;I, O&gt; dataProcessor)
    {
        _data = data;
        _dataProcessor = dataProcessor;
    }

    public void Build()
    {
        var processedData = _dataProcessor(_data);
        //do the fun building stuff with processedData
    }
}

// untested

// e.g. a stringifier-builder
var builder = new SomeBuilder(42, data =&gt; data.ToString());
</code></pre>
"
"<p>What are the differences between:</p>

<pre><code>module Mod   
   def here
     puts 'child'
   end    
end

class A
  prepend Mod
  def here
    puts 'parent'
  end
end
</code></pre>

<p>and</p>

<pre><code>class A
   def here
     puts 'parent'
   end
end

class B &lt; A
  def here
    puts 'child'
  end
end
</code></pre>

<p>Or another way to put it: is derivating a class the same as prepending a module of the child's code?</p>
","2988","","<p>No, it is not. <code>B</code> can only inherit from one class, but <code>Mod</code> can be prepended to many classes. If you were to call <code>super</code> inside <code>B#here</code>, it would always refer to <code>A#here</code>, but inside of <code>Mod#here</code>, it will refer to the <code>#here</code> instance method of whatever class <code>Mod</code> was prepended to:</p>

<pre><code>module Mod   
  def here
    super + ' Mod'
  end    
end

class A
  prepend Mod
  def here
    'A'
  end
end

class B
  prepend Mod
  def here
    'B'
  end
end

A.new.here
# =&gt; 'A Mod'

B.new.here
# =&gt; 'B Mod'
</code></pre>

<p>and</p>

<pre><code>class A
  def here
    'A'
  end
end

class B
  def here
    'B'
  end
end

class C &lt; A
  def here
    super + ' C'
  end
end

C.new.here
# =&gt; 'A C'

class C &lt; B
  def here
    super + ' C'
  end
end
# TypeError: superclass mismatch for class C
</code></pre>
"
"<p>I wrote a wrapper for the Ruby OpenStruct library. Using this wrapper, a user declares a variable like so:</p>

<pre><code>example = RStruct.new()
</code></pre>

<p>I would like to access the variable's name like so:</p>

<pre><code>example.name # =&gt; ""example""
</code></pre>

<p>This would prove useful when operating from within a class and calling <code>self.name</code></p>

<p>I built the <code>RStruct</code> class, so adding the name method wouldn't be hard. I'm looking to find the user's variable from <code>self</code>.</p>

<p>If any language can do it, it's Ruby, right?</p>
","2988","","<p>Variables aren't objects. You can't do anything with them except assign to them and dereference them.</p>

<pre><code>example.name
</code></pre>

<p>will <em>always</em> mean ""dereference <code>example</code> and send the message <code>name</code> to the result of dereferencing <code>example</code>"", it will <em>never</em> mean ""send the message <code>name</code> to the variable <code>example</code>"", because a) that would lead to an ambiguity, and b) variables aren't objects, so you <em>can't</em> send messages to them.</p>
"
"<p>I'm building a simple factory in Ruby that returns a <code>Callable</code> (a <code>Lambda</code> in this case) that knows how to cast to the passed type's name (e.g. <code>String.name # =&gt; 'String'</code>).</p>

<p>To attempt to cast <code>Fixnum</code>s I'm using <code>Integer</code> which will fail if the passed value is not convertable. Likewise I'm using <code>Float</code>, <code>Time.zone.parse(x).to_time</code>, etc...</p>

<p>For <code>String</code>s, however, I find myself simply using <code>#to_s</code> which, I believe, makes my <code>Lambda</code>s somewhat inconsistent because all but the <code>String</code> converter can fail (raise an <code>Exception</code>).</p>

<p>Assuming no malicious monkey patching, other than that provided by Rails, is it true that <code>#to_s</code> will never raise an exception?</p>
","2988","","<p>The <code>#to_X</code> methods (<code>to_a</code>, <code>to_h</code>, <code>to_s</code>, <code>to_f</code>, <code>to_i</code>, <code>to_c</code>, <code>to_r</code>) and the <code>to_XYZ</code> (<code>to_ary</code>, <code>to_hash</code>, <code>to_str</code>, <code>to_float</code>, <code>to_int</code>, <code>to_sym</code>, <code>to_proc</code>, <code>to_io</code>, <code>to_enum</code>, <code>to_path</code>) methods are not supposed to fail. An object may not respond to some or any of them, but if it <em>does</em> respond, then it shouldn't fail, it should not raise an exception and it should return an instance of the correct class.</p>

<p>I'm not sure if this is actually explicitly spelled out in the documentation, but that's how they are treated by the Ruby community.</p>

<p>The <code>Kernel#XYZ</code> methods (<code>Kernel#Array</code>, <code>Kernel#Complex</code>, <code>Kernel#Float</code>, <code>Kernel#Hash</code>, <code>Kernel#Integer</code>, <code>Kernel#Rational</code>, <code>Kernel#String</code>) OTOH will raise an exception if the argument is not convertible.</p>

<p>So, in short: <em>iff</em> an object responds to <code>to_s</code>, then it <em>shouldn't</em> fail, however, it may elect to simply not respond to <code>to_s</code> (which is highly unusual, though).</p>
"
"<p>This function is supposed to pull names from a Comma Separated Values file, and place them into an array.</p>

<pre><code>def xprt_csv_to_ary(csv_file)
    namecatcher_regex = ""/^[\.{1}]([A-Z]+)\.{3}/"" # Matches up to char before next name
    current_word = 0
    names_array = []
    while current_word &lt; 5000
        if current_word == 0
            name = csv_file.readline.match(namecatched_regex)
        else
            name = csv_file.past_match.match(namecatcher_regex)
        end
        names_array[current_word] = name
        current_word ++
    end
    return names_array
end
</code></pre>

<p>I'm getting the following error:</p>

<pre><code>syntax error, unexpected keyword_end
</code></pre>

<p>I would be as happy to be referred to an existing question that solves my problem as to have someone answer me directly.</p>
","2988","","<p>On this line:</p>

<pre><code>current_word ++
</code></pre>

<p>You are telling Ruby to add something to <code>current_word</code>, but you never tell it <em>what</em> to add, instead there's an <code>end</code> directly on the next line. You are missing the operand to the unary <code>+</code>. It should be something like</p>

<pre><code>current_word + something_else
</code></pre>

<p>or </p>

<pre><code>current_word + +something_else
</code></pre>

<p>In Ruby, whitespace is allowed around operators, so </p>

<pre><code>a + 
b
# equivalent to a + b, which is equivalent to a.+(b)
</code></pre>

<p>and even </p>

<pre><code>+ 
a
# equivalent to +a, which is equivalent to a.+@()
</code></pre>

<p>is perfectly fine, so if you combine the two, you get that </p>

<pre><code>a + + 
b
# equivalent to a + +b, which is equivalent to a.+(b.+@())
</code></pre>

<p>is also perfectly fine, and since whitespace around operands is perfectly fine but optional, </p>

<pre><code>a+b
</code></pre>

<p>and </p>

<pre><code>a ++ 
b
# equivalent to a + +b as above
</code></pre>

<p>is also perfectly fine.</p>

<p>That's why you only get the error on the <em>next</em> line with the <code>end</code>, because only there can Ruby tell that you are missing the operand to the unary prefix <code>+</code> operator.</p>
"
"<p>I need some help with the following code since I don't understand why it doesn't print out the correct @difference in the final puts.</p>

<pre><code>       @generated_numbers = Array.new(4) { rand(0..9) }
       puts @generated_numbers
       puts ""Enter Number:""
       @entered_number=gets.chomp
       @entered_number=@entered_number.split(//)
       @entered_number.each do |convert|
        convert=convert.to_i
       end
       @difference=@generated_numbers-@entered_number
       puts @difference
       @difference=4-@difference.length
       puts ""Numbers found: #{@difference}""
</code></pre>

<p>Also I have run the code:</p>

<pre><code>      @generated_numbers = [1,2,3,4]
      @entered_number=[2,4,6,7]
      @difference=@generated_numbers-@entered_number
      puts @difference
      @difference=4-@difference.length
      puts ""Numbers found: #{@difference}""
</code></pre>

<p>And it seems to work just fine. Any suggestions? </p>

<p>UPDATE:</p>

<p>These is what I was trying to achive and is the right question:</p>

<pre><code>      @difference=(@generated_numbers-@entered_number) | (@entered_number-@generated_numbers)
</code></pre>
","2988","","<p>Your <code>@generated_numbers</code> array contains, well, numbers (<code>Integer</code>s) whereas your <code>@entered_numbers</code> array contains text (<code>String</code>s). A string is obviously never equal (and certainly not <code>eql?</code>) to a number, therefore your two arrays will never have any elements in common.</p>

<p>You need to convert the texts in your second array to numbers first.</p>
"
"<p>I read that the code snippet below implements what is called <em>partial class</em>:</p>

<pre><code>class A
  def a
    puts 'a'
  end
end

class B &lt; A
  def ba1
    puts 'ba1'
  end
end

class A
  def b
    puts 'b'
  end
end

class B &lt; A
  def ba2
    puts 'ba2'
  end
end

ob = B.new
ob.a
ob.b
ob.ba1
ob.ba2
</code></pre>

<p>There are two classes <code>B</code> extended from two classes <code>A</code>. I don't understand how ruby could know which <code>A</code> the <code>B</code> is extend from. When creating an instance of <code>B</code>, how does ruby know which <code>B</code> it is? The execution result is:</p>

<pre><code>a
b
ba1
ba2
</code></pre>

<p>The initialized <code>B</code> is an instance of two <code>B</code> classes. Can someone explain this?</p>
","2988","","<p>There is no such thing as ""partial classes"" in Ruby. Partial classes are a feature of C#, not Ruby.</p>

<p>In Ruby, a class definition expression will execute whatever is inside of it in the context of the class. You can have as many class declaration expressions as you want, it doesn't matter. This does allow you to define your class piecewise, even in different files, even in different libraries. It also allows someone <em>else</em> to (re-)define your class later on.</p>

<p>In Python, this is called ""monkey patching"" and is often frowned upon, the Ruby community has adopted this term but with a neutral meaning, because, well, in Ruby actually <em>all</em> class definition is monkey patching!</p>

<p>So, what you have above will</p>

<ol>
<li>Amend the class definition of <code>A</code> if <code>A</code> already exists or create a new class if it doesn't.</li>
<li>Amend the class definition of <code>B</code> if <code>B</code> already exists or create a new class if it doesn't. (Should <code>B</code> already exist but have a different superclass that is not <code>A</code>, this would raise a <code>TypeError ""superclass mismatch""</code>.)</li>
<li>Amend the class definition of <code>A</code> (since <code>A</code> is already defined).</li>
<li>Amend the class definition of <code>B</code> (since <code>B</code> is already defined). We could have left out the superclass, in which case the existing superclass of <code>B</code> (i.e. <code>A</code>) would have been assumed.</li>
</ol>

<p>By the way: technically speaking, <code>A</code> and <code>B</code> are not classes. They are variables (more precisely, constants) that <em>refer</em> to classes. Classes are objects just like any other, they can be referenced by variables, passed as arguments to methods, returned from methods etc.</p>

<p>Also, the superclass declaration doesn't have to be a constant, it can be any arbitrary Ruby expression:</p>

<pre><code>class Foo &lt; if rand &lt; 0.5 then String else Array end
end
</code></pre>

<p>is perfectly valid (and completely useless ;-) )</p>

<pre><code>class Foo &lt; Bar; end

def qux(sym); const_get(sym) end

class Foo &lt; qux(:Bar); end
</code></pre>

<p>is also perfectly valid and will not generate a superclass mismatch, because the constant <code>Bar</code> and the method call <code>qux(:Bar)</code> both return the same object (which is a class).</p>
"
"<p>my idea is to create a community wiki for people that come from a <code>java</code> background because reading a lot of explanations, I couldn't comprehend anything until I actually tried a couple of things and the pieces of the puzzle started to find their places. But I first need to make sure I'm getting it right. Coming from such background it was very confusing for me to find out that <code>@variable</code> may mean 2 very different things.
Here is an example:</p>

<pre><code>class Test
  @ins = ""gah""
  def self.ins
    puts @ins
  end

  def initialize()
    @ins = ""wtf?""
  end
  def ins2
    puts @ins
  end
end
</code></pre>

<p>As far as I understand, the first <code>@ins</code> is an instance variable of the object representing the class <code>Test</code>. The second <code>@ins</code> is an instance variable in an object of class <code>Test</code>.</p>

<p>Now things start to make some sense to me. Here a couple of examples:</p>

<pre><code>[14] pry(main)&gt; test.ins2
wtf?
</code></pre>

<p>We are calling a method of an object and it returns the object's instance variable.</p>

<pre><code>[15] pry(main)&gt; test.ins
NoMethodError: undefined method `ins' for #&lt;Test:0x000000017d9348 @ins=""wtf?""&gt;
</code></pre>

<p>We are trying to call a class method through an object, this method is of the class so we are getting <code>NoMethodError</code></p>

<pre><code>[16] pry(main)&gt; Test.ins
gah
</code></pre>

<p>We are calling a class method so it properly sees the instance variable of the class object.</p>

<pre><code>[17] pry(main)&gt; Test.ins2
NoMethodError: undefined method `ins2' for Test:Class
</code></pre>

<p>We are calling an object method through the class which is incorrect so throwing <code>NoMethodError</code>.</p>

<p>All of the above was performed with ruby 2.0. So what am I asking?</p>

<ul>
<li>Am I getting it right?</li>
<li>Am I getting the ruby terminology correct?</li>
<li>Any real usage of class instance variables that <strong>make sense</strong> in a properly designed app? Or are these simply the better @@class variables?</li>
</ul>
","2988","","<blockquote>
  <p>it was very confusing for me to find out that <code>@variable</code> may mean 2 very different things.</p>
</blockquote>

<p>No, it doesn't. Classes are objects just like any other object. They can have instance variables just like any other object. They can have instance methods just like any other object. In fact, unlike Java, which has three different kinds of ""methods"" (instance methods, static methods and constructors), in Ruby, there is exactly one kind of method: instance methods.</p>

<p>The beauty of having classes being objects is precisely that <code>@variable</code> always means <em>exactly the same thing</em>.</p>

<p>There is no such thing as a class instance variable: it's just a normal instance variable like any other. The object happens to be an instance of <code>Class</code>, but that doesn't change the nature of the instance variable. An instance variable of an object of class <code>String</code> is not a string instance variable, it's just an instance variable. Likewise, an instance variable of an object of class <code>Class</code> is just an instance variable.</p>

<p>There is no such thing as a class method: it's just a normal singleton method of an object which happens to be an instance of <code>Class</code>. (Acually, there's no such thing as a singleton method either: it's just a normal instance method of the object's singleton class.)</p>

<p>Note: Rubyists may use the term ""class method"" in casual conversation. But that doesn't mean that class methods actually exist, it only means that ""instance method of the class object's singleton class"" is a mouthful. The important thing is: because classes are objects, they work <em>exactly</em> like all other objects. They can have instance methods (defined in class <code>Class</code> or inherited from <code>Module</code>, <code>Object</code>, <code>Kernel</code> or <code>BasicObject</code>), they can have ""singleton methods"" (which really are instance methods of their respective singleton classes), they can have instance variables.</p>

<p>They can <em>also</em> have class variables (<code>@@variables</code>) … those are weird. Ignore them :-)</p>
"
"<p>I want to take any truthy value from two expressions, for example <code>2</code>, or take nothing. It can be done as:</p>

<pre><code>if exp1
  a = exp1
elsif exp2
  a = exp2
end
</code></pre>

<p>I tried to make it short, and have the following:</p>

<pre><code>a = 1 if exp1|| 2 if exp2
</code></pre>

<p>However ruby returns <code>1</code> in this case. What is the correct syntax in ruby to do this?</p>
","2988","","<pre><code>if exp1
  a = exp1
elsif exp2
  a = exp2
end
</code></pre>

<p>Can be shortened to </p>

<pre><code>a = if exp1
  exp1
elsif exp2
  exp2
end
</code></pre>

<p>Or, if you prefer one-liners:</p>

<pre><code>a = if exp1 then exp1 elsif exp2 then exp2 end
</code></pre>

<p>Any attempt to shorten it even further will change the semantics. For example: </p>

<pre><code>a = exp1 || exp2 || nil
</code></pre>

<p>will evaluate <code>exp1</code> exactly once and <code>exp2</code> at most once, whereas the original snippet will evaluate <code>exp1</code> once or twice and <code>exp2</code> either twice or never.</p>

<p>(To be fair: my example will also change the meaning IFF <code>a</code> appears in <code>exp1</code>. In the OP's original code, an occurrence of <code>a</code> in <code>exp1</code> will be interpreted as a method call, in my example as a local variable dereference which will evaluate to <code>nil</code>.)</p>
"
"<p>I have some weird compilation errors in my implementation of hash set. This code</p>

<pre><code>class HashSet[A] extends scala.collection.mutable.Set[A] {
  override def +=(elem: A): HashSet[A] = {
    /* doing stuff */
    this
  }
}
</code></pre>

<p>produces the following errors</p>

<pre><code>Error:(15, 16) overriding method += in trait SetLike of type (elem: A)HashSet.this.type;
 method += has incompatible type
  override def +=(elem: A): HashSet[A] = {
               ^
Error:(15, 16) overriding method += in trait Builder of type (elem: A)HashSet.this.type;
 method += has incompatible type
  override def +=(elem: A): HashSet[A] = {
               ^
Error:(15, 16) overriding method += in trait Growable of type (elem: A)HashSet.this.type;
 method += has incompatible type
  override def +=(elem: A): HashSet[A] = {
               ^
</code></pre>

<p>How can I fix them?</p>
","2988","","<p>The method you are overriding is <a href=""http://www.scala-lang.org/api/current/index.html#scala.collection.mutable.HashSet@+=(elem:A):HashSet.this.type"" rel=""nofollow""><code>HashSet.+=</code></a>, which has the following definition:</p>

<pre><code>def +=(elem: A): HashSet.this.type
</code></pre>

<p>The return type is <code>HashSet.this.type</code>. You are overriding it with a method which returns a <em>different</em> type, <code>HashSet[A]</code>. That's not allowed.</p>

<p>In other words: mutating a mutable collection should not just return <em>any</em> collection of the same type, it should return the <em>exact same</em> collection (i.e. <code>this</code>). You are correctly returning <code>this</code> in your method, but you can make your return type more precise to explicitly state that you are not just returning <em>any</em> <code>HashSet</code>, you are returning <em>this</em> <code>HashSet</code>:</p>

<pre><code>class HashSet[A] extends scala.collection.mutable.Set[A] {
  override def +=(elem: A):       this.type   = ???
  override def iterator:          Iterator[A] = ???
  override def -=(elem: A):       this.type   = ???
  override def contains(elem: A): Boolean     = ???
}
</code></pre>

<p>Since you are overriding a method with return type <code>this.type</code>, simply letting Scala infer the return type would have worked, too:</p>

<pre><code>class HashSet[A] extends scala.collection.mutable.Set[A] {
  override def +=(elem: A)                    = ???
  override def iterator                       = ???
  override def -=(elem: A)                    = ???
  override def contains(elem: A)              = ???
}
</code></pre>
"
"<p>So, pattern matching in functional languages is pretty awesome. I wondering why most imperative languages haven't implemented this feature? To my understanding, Scala is the only ""mainstream"" imperative language that has pattern matching. The case/switch structure is just so much less powerful.</p>

<p>In particular, I am interested in whether the lack of pattern matching is because of technical reasons or historical reasons?</p>
","2988","","<p>Until recently (more precisely: until Scala), it was believed that pattern matching was incompatible with representation ignorance (i.e. <em>the</em> defining characteristic of OO). Since OO is a major paradigm in mainstream languages, having a seemingly irreconcilable feature in a mainstream language seemingly didn't make sense.</p>

<p>In Scala, pattern matching is reconciled with OO, simply by having the match operations be method calls on an object. (Rather simple in hindsight, no?) In particular, matches are performed by calling methods on <em>extractor objects</em>, which, just like any other object, only have access to the public API of the object being examined, thus not breaking encapsulation.</p>

<p>A pattern matching library inspired by Scala, in which patterns are first-class objects themselves (inspired by F#'s Active Patterns) was added to Newspeak, a <em>very</em> dynamic language that takes OO <em>very</em> seriously. (Newspeak doesn't even have variables, just methods.)</p>

<p>Note that regular expressions are an example of a limited form of pattern matching. Polymorphic method dispatch can also be seen as an example of a limited form of pattern matching (without the extraction features). In fact, method dispatch is powerful enough to <em>implement</em> full pattern matching as evidenced by Scala and especially Newspeak (in the latter, pattern matching is even implemented as a library, completely separate from the language).</p>
"
"<pre><code>Fixnum.methods.sort
=&gt; [:!, :!=, :!~, :&lt;, :&lt;=, :&lt;=&gt;, ..., :trust, :untaint, :untrust, :untrusted?]
</code></pre>

<p>Why doesn't it display <code>:*</code>, <code>:/</code>, <code>:+</code>, <code>:-</code>, <code>:%</code> (or <code>:""*""</code>, <code>"":/""</code>, etc.) as methods?</p>

<p><a href=""http://www.ruby-doc.org/core-2.1.2/Fixnum.html#method-i-2A"" rel=""nofollow"">I see</a> that they are considered methods.</p>
","2988","","<p><code>Fixnum</code> is an instance of <code>Class</code>. <code>Class</code> doesn't define a <code>*</code> instance method (what would that even do), nor do <code>Class</code>'s ancestors (<code>Module</code>, <code>Object</code>, <code>Kernel</code>, <code>BasicObject</code>).</p>

<p>Now, <code>1</code> on the other hand is an instance of <code>Fixnum</code>, and since <code>Fixnum</code> defines a <code>*</code> instance method, that instance method shows up when you ask <code>1</code> about its methods:</p>

<pre><code>1.methods.sort
# =&gt; [:!, :!=, :!~, :%, :&amp;, :*, :**, :+, :+@, :-, :-@, :/, :&lt;, :&lt;&lt;, :&lt;=, … ]
</code></pre>

<p>You can see that <code>Fixnum</code> defines an instance method named <code>*</code>:</p>

<pre><code>Fixnum.instance_methods.sort
# =&gt; [:!, :!=, :!~, :%, :&amp;, :*, :**, :+, :+@, :-, :-@, :/, :&lt;, :&lt;&lt;, :&lt;=, … ]
</code></pre>
"
"<p>I have a coding challenge to reverse a an array with 5 elements in it. How would I do this without using the reverse method? </p>

<p>Code:</p>

<pre><code>def reverse(array)
 array
end

p reverse([""a"", 1, ""apple"", 8, 90])
</code></pre>
","2988","","<p>The obvious solution is to use recursion:</p>

<pre><code>def reverse(array)
  return array if array.size &lt; 2
  reverse(array.drop(1)) + array.first(1)
end
</code></pre>

<p>We can make this tail-recursive using the standard accumulator trick:</p>

<pre><code>def reverse(array, accum=[])
  return accum if array.empty?
  reverse(array.drop(1), array.first(1) + accum)
end
</code></pre>

<p>But of course, tail recursion is isomorphic to looping.</p>

<p>We could use a fold:</p>

<pre><code>def reverse(array)
  array.reduce([]) {|accum, el| [el] + accum }
end
</code></pre>

<p>But fold is equivalent to a loop.</p>

<pre><code>def reverse(array)
  array.each_with_object([]) {|el, accum| accum.unshift(el) }
end
</code></pre>

<p>Really, <code>each_with_object</code> is an iterator and it is the side-effectful cousin of fold, so there's actually <em>two</em> reasons why this is equivalent to a loop.</p>
"
"<p>I'm preparing for a technical interview and will be asked to write the algorithm for a linked list in ruby. I understand linked lists completely, but have struggled writing the code. Can someone show me how this is done? I started it below..</p>

<pre><code>class Node
  def initialize(item)
    @item = item
    @next = nil 
  end
end
</code></pre>
","2988","","<p>This is the standard Church Encoding of Lists (and Booleans):</p>

<pre><code>True   = -&gt;(iff, _) { iff }
False  = -&gt;(_, els) { els }

Pair   = -&gt;(first, rest) { -&gt; x { x.(first, rest) }}
First  = -&gt; list { list.(True ) }
Rest   = -&gt; list { list.(False) }

List   = Pair.(1, Pair.(2, nil))

First.(Rest.(List))
# =&gt; 2
</code></pre>

<p>It's not what you would actually write in Ruby, of course, but it is very simple and demonstrates an understanding of one of the most important principles of programming: code is data and data is code.</p>

<p>Here's a more realistic object-oriented encoding of lists:</p>

<pre><code>class List
  include Enumerable

  def self.[](*els) els.reverse_each.inject(Empty, &amp;:cons) end

  def cons(el) Pair[el, self] end

  def prepend(prefix)
    case
    when        empty? then prefix
    when prefix.empty? then self
    else prepend(prefix.rest).cons(prefix.first)
    end
  end

  def to_s; ""List[#{map(&amp;:to_s).join(', ')}]"" end
  def inspect; ""List[#{map(&amp;:inspect).join(', ')}]"" end

  def each; return enum_for(__method__) unless block_given? end

  class &lt;&lt; Empty = new
    def empty?; true end
    alias_method :inspect, def to_s; 'Empty' end

    freeze
  end
  Empty.freeze

  class Pair &lt; self
    def initialize(first, rest=Empty)
      self.first, self.rest = first, rest
      freeze
    end

    def empty?; false end

    def each(&amp;blk)
      return super unless block_given?
      yield first
      rest.each(&amp;blk)
    end

    private
    attr_writer :first, :rest

    protected
    attr_reader :first, :rest

    class &lt;&lt; self; alias_method :[], :new end

    freeze
  end

  freeze
end
</code></pre>

<p>Note that there are absolutely no conditionals and no loops in the code. That is always a good sign for object-oriented code: polymorphic method calls are more powerful than conditionals anyway, oftentimes, there simply is no need for conditionals.</p>

<p>Some examples:</p>

<pre><code>list1 = List::Pair[1, List::Pair[2, List::Pair[3, List::Empty]]]
# =&gt; List[1, 2, 3]

list2 = List::Empty.cons(6).cons(5).cons(4)
# =&gt; List[4, 5, 6]

list3 = List[7, 8, 9]
# =&gt; List[7, 8, 9]

list4 = list3.prepend(list2).prepend(list1)
# =&gt; List[1, 2, 3, 4, 5, 6, 7, 8, 9]

list4.partition(&amp;:odd?)
# =&gt; [[1, 3, 5, 7, 9], [2, 4, 6, 8]]
</code></pre>

<p>Unfortunately, this object-oriented encoding will blow the stack for larger lists (on my system <code>List[*(1..9338)].each {}</code> still works, but <code>9339</code> doesn't), even though <code>each</code> is tail-calling itself and thus <em>should</em> run in O(1) stack space. As Guy L. Steele pointed out multiple times, OO languages <em>must</em> support proper tail calls, otherwise you are required to break OO in order to avoid blowing the stack. (<code>prepend</code> is not coded for tail-calls, but it can be rewritten that way.)</p>
"
"<p>how to merge array items become single item in ruby ?</p>

<p>if i have case like this :</p>

<pre><code>a = [1, 2, 3]
</code></pre>

<p>how to get result like this :</p>

<pre><code>a = 123
</code></pre>

<p>thanks before</p>
","2988","","<p>Combining the elements of a collection into a new value, is called ""folding"" or ""reducing"", in Ruby, the method that is used for folding is called <code>Enumerable#inject</code>. This is a perfect usecase for it:</p>

<pre><code>[1, 2, 3].reverse.each_with_index.inject(0) {|acc, (el, i)| acc + el * 10**i }
# =&gt; 123
</code></pre>
"
"<p>Following is my code:</p>

<pre><code>md5 = Digest::MD5.new
md5 &lt;&lt; ""!@#$""
</code></pre>

<p>Then comes the error:</p>

<pre><code>SyntaxError: (irb):46: unterminated string meets end of file
</code></pre>

<p>What is wrong? And how can I calculate the md5 hash of the string <code>""!@#$""</code>?</p>
","2988","","<p>The hash <code>#</code> sign in double quoted strings is used for variable and expression substitution. In this case, you are substituting the value of the global variable <code>$""</code> into the string, but you are not closing the string. The syntactically correct way of expressing that would be </p>

<pre><code>""!@#$"""" # Note the extra closing quotes
</code></pre>

<p>However, it seems that you actually don't want to do variable substitution anyway, in which case you should always use single quoted strings:</p>

<pre><code>'!@#$'
</code></pre>
"
"<p>I'm working with ruby and I'm just learning lambdas. I have an array of objects and I want to select certain objects from the array based of different conditions like so:</p>

<pre><code>result = array.select{|ar| ar.number &gt; 4}
</code></pre>

<p>I want to put the arguments of the select into a lambda expression i.e. I want to put <code>|ar| ar.number &gt; 4</code> into a lambda expression. I've tried a few things including:</p>

<pre><code>result = array.select{lambda{|g| g.number &gt; 4}}
</code></pre>

<p>But this doesn't work.</p>

<p>I've also tried this:</p>

<pre><code>l = lambda {g.number &gt; 4}
result = array.select{|g| l}
</code></pre>

<p>and that also doesn't work. Also I need to pass my lambda express to a function so I don't think the first way I did it would have worked. How would I do this?</p>
","2988","","<p><code>Enumerable#select</code> takes a block, not a lambda. So, you need to pass it a block.</p>

<p>Thankfully, there is an operator which will convert a lambda or proc (and in fact anything which responds to <code>to_proc</code>) to a block: the unary prefix <code>&amp;</code> operator, which is only valid in argument lists (where it converts a proc to a block) and in parameter lists (where it converts a block to a proc).</p>

<p>So, if you have a lambda <code>l</code>, you can pass it as a block to method <code>foo</code> like so:</p>

<pre><code>foo(&amp;l)
</code></pre>

<p>Your second problem is that your lambda doesn't take any arguments, but the block passed to <code>select</code> takes one argument, so you need to create your lambda with one argument:</p>

<pre><code>l = lambda {|el| el.number &gt; 4 }

# I prefer this syntax, though:
l = -&gt; el { el.number &gt; 4 }
</code></pre>

<p>Putting all that together, we have:</p>

<pre><code>result = array.select(&amp;l)
</code></pre>
"
"<p>My understanding is that method calls on a Ruby object are sending messages to the object (which could be done manually using the <code>send</code> method).</p>

<p>When I use Python, I don't think about how a method/function call is processed; if it's defined or available then it executes, otherwise I get an error.  </p>

<p>1) Is Ruby's use of messages unique (i.e. is Python also using messages under the hood)?</p>

<p>2) Is Ruby's use of messages just an implementation detail or is it fundamental to how you're supposed to use Ruby (i.e. will I be missing out on something if I ignore it and go on calling my methods like in Python)?</p>
","2988","","<p>Messages are fundamental, not just in Ruby, but in OO in general.</p>

<p>The term ""Object-Orientation"" was invented by Alan Kay, and he defines it <a href=""http://www.purl.org/stefan_ram/pub/doc_kay_oop_en"">this way</a>:</p>

<blockquote>
  <p>OOP to me means only messaging, local retention and protection and hiding of state-process, and extreme late-binding of all things.</p>
</blockquote>

<p>In more modern terms:</p>

<ul>
<li>messaging</li>
<li>encapsulation</li>
<li>late-binding</li>
</ul>

<p>Implementation-wise, messaging is a late-bound procedure call, and if procedure calls are late-bound, then you cannot know at design time <em>what</em> you are going to call, so you cannot make any assumptions about the concrete representation of state. So, really it is about messaging, late-binding is an implementation of messaging and encapsulation is a consequence of it.</p>

<p>He later on clarified that ""<a href=""http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html"">The big idea is 'messaging'</a>"", and regrets having called it ""object-oriented"" instead of ""message-oriented"", because the term ""object-oriented"" puts the focus on the unimportant thing (objects) and distracts from what is really important (messaging):</p>

<blockquote>
  <p>Just a gentle reminder that I took some pains at the last OOPSLA to try to remind everyone that Smalltalk is not only NOT its syntax or the class library, it is not even about classes. I'm sorry that I long ago coined the term ""objects"" for this topic because it gets many people to focus on the lesser idea.</p>
  
  <p>The big idea is ""messaging"" -- that is what the kernal of Smalltalk/Squeak is all about (and it's something that was never quite completed in our Xerox PARC phase). The Japanese have a small word -- ma -- for ""that which is in between"" -- perhaps the nearest English equivalent is ""interstitial"". The key in making great and growable systems is much more to design how its modules communicate rather than what their internal properties and behaviors should be. Think of the internet -- to live, it (a) has to allow many different kinds of ideas and realizations that are beyond any single standard and (b) to allow varying degrees of safe interoperability between these ideas.</p>
</blockquote>

<p>(Of course, today, most people don't even focus on objects but on classes, which is even more wrong.)</p>

<p>Messaging is <em>fundamental</em> to OO, both as metaphor and as a mechanism.</p>

<p>If you send someone a message, you don't know what they do with it. The <em>only</em> thing you can observe, is their response. You don't know whether they processed the message themselves (i.e. if the object has a method), if they forwarded the message to someone else (delegation / proxying), if they even understood it. That's what encapsulation is all about, that's what OO is all about. You cannot even distinguish a proxy from the real thing, as long as it responds how you expect it to.</p>

<p>A more ""modern"" term for ""messaging"" is ""dynamic method dispatch"" or ""virtual method call"", but that loses the metaphor and focuses on the mechanism.</p>

<p>Similar points are also made in <a href=""http://CS.UTexas.Edu/~wcook/Drafts/2009/essay.pdf""><em>On Understanding Data Abstraction, Revisited</em></a> by <a href=""http://WCook.BlogSpot.Com/"">William R. Cook</a> and also his <a href=""http://WCook.BlogSpot.Com/2012/07/proposal-for-simplified-modern.html""><em>Proposal for Simplified, Modern Definitions of ""Object"" and ""Object Oriented""</em></a>.</p>

<blockquote>
  <p>Dynamic dispatch of operations is the essential characteristic of objects. It means that the operation to be invoked is a dynamic property of the object itself. Operations cannot be identified statically, and there is no way in general to exactly what operation will executed in response to a given request, except by running it. This is exactly the same as with first-class functions, which are always dynamically dispatched.</p>
</blockquote>

<p>In Smalltalk-72, there weren't even any objects! There were <em>only</em> message streams that got parsed, rewritten and rerouted. First came methods (standard ways to parse and reroute the message streams), later came objects (groupings of methods that share some private state). Inheritance came much later, and classes were only introduced as a way to support inheritance. Had Kay's research group already known about prototypes, they probably would have never introduced classes in the first place.</p>
"
"<p>I need to use the <a href=""http://ruby-doc.org/core-2.0/Module.html#method-i-prepend"" rel=""nofollow""><code>prepend</code></a> method, introduced in ruby 2.0, in ruby 1.9.3, where this method is not supported. Is there an equivalent method in ruby 1.9.3?</p>

<p><strong>UPDATE</strong></p>

<p>I need this working with ruby 1.9.3</p>

<pre><code>module ActiveAdmin::Views::Pages::BaseExtension
  def add_classes_to_body
    super
    @body.set_attribute ""ng-app"", ""MyApp"" #I need to add this line
  end
end
class ActiveAdmin::Views::Pages::Base
  prepend ActiveAdmin::Views::Pages::BaseExtension
end
</code></pre>
","2988","","<p><code>prepend</code> changes the core Ruby object model, specifically the way messages are dispatched, there is no way to do this in pure Ruby, therefore, there is no way to backport the <code>prepend</code> functionality.</p>

<p>In the bad old days before <code>prepend</code> we used to do this instead:</p>

<pre><code>class ActiveAdmin::Views::Pages::Base
  orig = instance_method(:add_classes_to_body)

  define_method(:add_classes_to_body) do
    orig.bind(self).()
    @body.set_attribute ""ng-app"", ""MyApp""
  end
end
</code></pre>
"
"<p>If an <strong>html.erb</strong> file is rendered <strong>without</strong> variables assigned in a controller (e.g. <code>@user = params[""user_name""] )</code> then why does it view <code>@user</code> as <code>nil</code> instead of throwing a <code>NameError: undefined local variable</code>.</p>

<p>For Example:</p>

<pre><code>&lt;%= render partial: ""greeting"", locals: { user: @user } if @user %&gt;
</code></pre>

<p>This will render the greeting if a controller passes it a <code>@user</code>, but if the page is rendered for the first time and the user hasn't entered their username yet the greeting will simply not be there, instead of causing an error.  It seems to me that <code>@user</code> would never be declared in the local scope the <strong>html.erb</strong> is executing in, so it should cause the error.</p>

<p>What's happening here?  Perhaps the <code>@</code> is somehow preprocessed to mean treat the variable as a symbol and use that as the key in a <code>params</code> hash and return the result?</p>
","2988","","<blockquote>
  <p>then why does it view <code>@user</code> as <code>nil</code> instead of throwing a <code>NameError: undefined local variable</code>.</p>
</blockquote>

<p>Well, it's not a local variable, it's an instance variable.</p>

<p>But even local variables behave the same way:</p>

<pre><code>if false
  local_var = 42 # needed so Ruby knows `local_var` isn't a method call
end

local_var
# =&gt; nil

@instance_variable
# =&gt; nil

$global_variable
# =&gt; nil
</code></pre>

<p>But strangely:</p>

<pre><code>Constant
# NameError: uninitialized constant Constant

@@class_variable
# NameError: uninitialized class variable @@class_variable in Object
</code></pre>
"
"<p>I know that if I want to sort an array in descending order I have to do the following:</p>

<pre><code>array.sort!{|a,b| b &lt;=&gt; a}
</code></pre>

<p>However, if I want to avoid using the ""spaceship"" (&lt;=>) operator, I would intuitively think that I can do the following, but I receive an error when I run it on repl.it:</p>

<pre><code>array.sort!{|a, b| 
    if b &lt; a 
        return -1
    elsif b &gt; a
        return 1
    else
        return 0 
    end
}
</code></pre>

<p>The error is this:</p>

<pre><code>(eval):4: (eval):4: unexpected return (LocalJumpError)
from (eval):0:in `sort!'
from (eval):0
</code></pre>

<p>Someone please help me!</p>

<p>P.S. I am very new to Ruby. I am just going through the lessons on Codecademy.</p>
","2988","","<p><code>return</code> returns from a method. It can only be used inside a method. There is no method in your code, therefore you get an error … and even if there <em>were</em> a method, the code wouldn't do what you want, because <code>return</code> returns from the method, not the block.</p>

<p>To return a value from a block, use <code>next</code>:</p>

<pre><code>array.sort! {|a, b| 
  if b &lt; a 
    next -1
  elsif b &gt; a
    next 1
  else
    next 0 
  end
}
</code></pre>

<p>However, unlike in C, <code>if</code>/<code>then</code>/<code>else</code> is an expression in Ruby, not a statement. (Actually, <em>everything</em> is an expression in Ruby, there are <em>no</em> statements.) This means that everything, including a conditional expression, returns a value. For <code>if</code>/<code>then</code>/<code>else</code> the value being returned is the one from the branch that was taken.</p>

<p>So, instead of returning from each of the branches separately, we can just return the vlue of the whole <code>if</code> expression:</p>

<pre><code>array.sort! {|a, b| 
  next if b &lt; a 
    -1
  elsif b &gt; a
    1
  else
    0 
  end
}
</code></pre>

<p>And since the return value of a block (just like the return value of a method) is implicitly the last value evaluated inside the block, we can just say:</p>

<pre><code>array.sort! {|a, b| 
  if b &lt; a 
    -1
  elsif b &gt; a
    1
  else
    0 
  end
}
</code></pre>

<p><code>next</code> is mostly useful to break out early of a block in a guard-clause style or to flatten a deeply nested conditional:</p>

<pre><code>array.sort! {|a, b| 
  next -1 if b &lt; a 
  next  1 if b &gt; a
        0 
}
</code></pre>

<p>Note that <code>case</code> would probably more appropriate than <code>if</code> here:</p>

<pre><code>array.sort! {|a, b| 
  case
  when b &lt; a 
    -1
  when b &gt; a
    1
  else
    0 
  end
}
</code></pre>
"
"<p>Want to know how scala arranges the data in set.</p>

<pre><code>scala&gt; val imm = Set(1, 2, 3, ""four"")                  //immutable variable
imm  : scala.collection.immutable.Set[Any] = Set(1, 2, 3, four)

scala&gt; var mu = Set(1, 2, 3, ""four"", 9)  
mu: scala.collection.immutable.Set[Any] = Set(four, 1, 9, 2, 3)

scala&gt; mu += ""five""

scala&gt; mu.toString 
res1: String = Set(four, 1, 9, 2, 3, five)
</code></pre>

<p>Order remains as we insert in case of immutable Set but not in mutable Set.
Also no matter how many times I create a new set with var <code>xyz = Set(1, 2, 3, ""four"", 9)</code> the order of getting stored remains same <code>Set(four, 1, 9, 2, 3)</code>. So it's not storing in random, there is some logic behind it which I want to know. Moreover, is there any advantage of such behavior?</p>
","2988","","<p>Sets don't have an order. An item is in the set or it isn't. That's all you can know about a set.</p>

<p>If you require a certain ordering, you need to use an ordered set or possibly a sorted set.</p>

<p>Of course, any particular implementation of a set may or may not incidentally have an ordering which may or may not be stable across multiple calls, but that would be a purely accidental implementation detail that may change at any time, during an update of Scala or even between two calls.</p>
"
"<p>Arrow functions in ES6 do not have an <code>arguments</code> property and therefore <code>arguments.callee</code> will not work and would anyway not work in strict mode even if just an anonymous function was being used.</p>

<p>Arrow functions cannot be named, so the named functional expression trick can not be used.</p>

<p>So... How does one write a recursive arrow function? That is an arrow function that recursively calls itself based on certain conditions and so on of-course?</p>
","2988","","<p>Writing a recursive function without naming it is a problem that is as old as computer science itself (even older, actually, since &lambda;-calculus predates computer science), since in &lambda;-calculus <em>all</em> functions are anonymous, and yet you still need recursion.</p>

<p>The solution is to use a fixpoint combinator, usually the Y combinator. This looks something like this:</p>

<pre><code>(y =&gt; 
  y(
    givenFact =&gt; 
      n =&gt; 
        n &lt; 2 ? 1 : n * givenFact(n-1)
  )(5)
)(le =&gt; 
  (f =&gt; 
    f(f)
  )(f =&gt; 
    le(x =&gt; (f(f))(x))
  )
);
</code></pre>

<p>This will compute the factorial of <code>5</code> recursively.</p>

<p>Note: the code is heavily based on this: <a href=""http://kestas.kuliukas.com/YCombinatorExplained/"" rel=""nofollow"">The Y Combinator explained with JavaScript</a>. All credit should go to the original author. I mostly just ""harmonized"" (is that what you call refactoring old code with new features from ES/Harmony?) it.</p>
"
"<p>I am trying to parse a JSON String like this: </p>

<pre><code>JSON.parse(""{'foo' : 42 }"")
</code></pre>

<p>However, this yields a JSON::ParseError:</p>

<pre><code>JSON::ParserError: 757: unexpected token at '{'foo' : 42 }'
    from /Users/nils/.rvm/rubies/ruby-2.1.2/lib/ruby/2.1.0/json/common.rb:155:in `parse'
    from /Users/nils/.rvm/rubies/ruby-2.1.2/lib/ruby/2.1.0/json/common.rb:155:in `parse'
    from (irb):2
    from /Users/nils/.rvm/rubies/ruby-2.1.2/bin/irb:11:in `&lt;main&gt;'
</code></pre>

<p>I think it expects the <code>'</code> character to be a <code>""</code> character. Since I have multiple gigabytes of such files I would like to make the parser work with this. Since some of the values may also include <code>'</code> characters I can't simply run search and replace over them because that may destroy the original content.</p>

<p>Any suggestions on how to make the JSON parser parse this?</p>
","2988","","<blockquote>
  <p>I am trying to parse a JSON String like this: </p>

<pre><code>JSON.parse(""{'foo' : 42 }"")
</code></pre>
</blockquote>

<p>That's not a JSON string.</p>

<blockquote>
  <p>However, this yields a <code>JSON::ParseError</code>:</p>
</blockquote>

<p>Which is correct, since the string is not JSON.</p>

<blockquote>
  <p>Any suggestions on how to make the JSON parser parse this?</p>
</blockquote>

<p>You cannot parse this with a JSON parser because it's not JSON.</p>

<p>You need to figure out what language it is, and then use a parser for that language.</p>

<p>The snippet you posted looks like <a href=""http://YAML.Org/"" rel=""nofollow"">YAML</a>, but of course that could just be accidental.</p>

<pre><code>require 'yaml'

YAML.load(""{'foo' : 42 }"")
# =&gt; { ""foo"" =&gt; 42 }
</code></pre>

<p>But note that trying to guess the language from one single, short example is highly error-prone. You should confer with the producer of that serialization and ask them what language it is.</p>
"
"<p>I am moving from Ruby to Java. I want to know about any substitute of Lambda, Proc or Block in Java</p>
","2988","","<p>Java has lambdas. The <code>Proc</code> class is roughly equivalent to the interfaces in the <a href=""http://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html"" rel=""nofollow""><code>java.util.function</code></a> package. There is no equivalent to blocks, but lambdas are similarly syntactically lightweight.</p>
"
"<p>I have only a basic understanding that the Kernel is the central part of the operating system.</p>

<p>How close are you to that Kernel when you open up cmd (Run -> cmd)? </p>

<p>I'm learning Ruby right now and I read the following statement:</p>

<p>""When printing to output using the Kernel methods puts and p, they call to_s and inspect on their argument for you."" </p>

<p>What I am assuming from this is that they are talking about when you run p or puts in cmd.</p>

<p>Please clarify in semi-layman's terms.</p>
","2988","","<p>Kernel is a normal English word. Ruby's <code>Kernel</code> module has about as much to do with the Windows kernel as an apple at your local fruit stand has to do with an iPhone.</p>

<p>The Windows kernel and Ruby's <code>Kernel</code> module are both called ""kernel"", because that's the English word that best describes them, not because they are in any way related.</p>
"
"<p>For example, <code>array.pop</code> doesn't need a bang to permanently alter the array. Why is this so and what was the reasoning behind developing these certain Ruby methods without this conformity?</p>
","2988","","<p>The bang is used to distinguish between a dangerous and less dangerous version of the same method. There is only one <code>pop</code> method, so there is nothing to distinguish.</p>

<p>Note: the name of the method has absolutely nothing whatsoever to do with what it does. Whether a method is destructive or not depends on what code it executes, not what name it has.</p>
"
"<p>I was reading ruby-docs on #send and saw that it took :symbols.</p>

<p>Does that mean that this code (assuming attr_accessors are set for attributes keys):</p>

<pre><code>def initialize(attributes = {})
  attributes.each do |k,v|
    self.send(""#{k}="", value)
  end
end
</code></pre>

<p>could be re-written as:</p>

<pre><code>def initialize(attributes = {})
  attributes.each do |k,v|
    self.send(:k, value)
  end
end
</code></pre>

<p>or is that not equivalent?  And just curious - if it's not the same, is there cleaner way to do the original code using symbols?</p>
","2988","","<p>Obviously, the two versions are not equivalent. The first one will call a method whose name is based on the content of the variable <code>k</code>. In the second version, the variable <code>k</code> is never used, it will simply call the method <code>k</code> over and over and over again.</p>

<p>IOW: the first version will call a <em>different</em> method on each iteration of the loop, the second one will call the <em>same</em> method on every iteration of the loop.</p>

<p>You can, of course, use symbols in exactly the same way you use strings here:</p>

<pre><code>def initialize(attributes = {})
  attributes.each do |k,v|
    self.send(:""#{k}="", value)
  end
end
</code></pre>
"
"<p>I am getting <code>NameError: undefined local variable or method</code> with ruby 2.1.2</p>

<p>As observed in <a href=""http://stackoverflow.com/questions/15102804/ruby-variable-scope-and-order-of-parsing-vs-operations-assignment-in-an-if"">this question</a>, expressions like:</p>

<pre><code>bar if bar = true
</code></pre>

<p>raises an undefined local variable error (provided that <code>bar</code> is not defined prior) because <code>bar</code> is read by the parser before it is assigned. And I believe that there used to be no difference with that with this expression:</p>

<pre><code>bar if bar = false
</code></pre>

<p>The difference between the two is whether the main body is evaluated or not, but that should not matter if encountering an undefined local variable immediately raises an error before evaluating the condition.</p>

<p>But when I run the second code on Ruby 2.1.2, it does not raise an error. Has it been like that from before? If so, then what was the parsing discussion all about? If not, has Ruby specification changed? Is there any reference to that?  What did it do in 1.8.7, 1.9.3, etc. ?</p>
","2988","","<p>There is no difference with regards to whether <code>bar</code> is defined or not. In both cases, <code>bar</code> is undefined in the body. However, in the latter case, the body is never evaluated, therefore it doesn't matter. You never resolve the name <code>bar</code>, therefore you never get an error during name resolution.</p>

<p>Local variables are <em>defined</em> when an assignment is <em>parsed</em>.
They are <em>initialized</em> when an assignment is <em>executed</em>.</p>

<p>It's perfectly fine for a variable to be unitialized. It will just evaluate to <code>nil</code> in that case:</p>

<pre><code>if false
  bar = 42
end

bar
# =&gt; nil
</code></pre>

<p>However, if the variable is <em>undefined</em>, then Ruby doesn't know whether a bare word is a local variable or a receiverless argumentless message send:</p>

<pre><code>foo
# NameError: undefined local variable or method `foo'
#                                     ^^^^^^^^^
# Ruby doesn't know whether it's a variable or a message send
</code></pre>

<p>Compare with:</p>

<pre><code>foo()
# NoMethodError: undefined method `foo'
# ^^^^^^^^^^^^^

self.foo
# NoMethodError: undefined method `foo'
# ^^^^^^^^^^^^^
</code></pre>

<p>All together now:</p>

<pre><code>foo()
# NoMethodError: undefined method `foo'

self.foo
# NoMethodError: undefined method `foo'

foo
# NameError: undefined local variable or method `foo'

if false
  foo = 42
end

foo
# =&gt; nil

foo = :fortytwo

foo
# =&gt; :fortytwo
</code></pre>

<p>The trouble in this particular case is that the order in which the expressions are <em>parsed</em> (and thus the order in which variables are defined) <em>does not</em> match with the order in which the expressions are <em>executed</em>.</p>

<p>The assignment is executed <em>first</em>, which would make you assume that <code>bar</code> would be defined in the body. But it isn't, because the body was <em>parsed</em> first and thus an <strong>I don't know whether this is a method or a variable</strong> node was inserted into the syntax tree <em>before</em> the assignment was ever seen.</p>

<p>However, if that node is never interpreted, i.e. the condition is false, then nothing bad will happen.</p>
"
"<p>Are Ruby regular expressions PCREs and/or POSIX-compatible basic/extended regexes?</p>
","2988","","<blockquote>
  <p>Are Ruby regular expressions PCREs and/or POSIX basic/extended regexes?</p>
</blockquote>

<p>No, they are Ruby <a href=""http://Ruby-Doc.Org/core-2.1.2/Regexp.html"" rel=""nofollow""><code>Regexp</code>s</a>.</p>
"
"<p>I'm using <code>Fog</code> to access a cloud environment at Terremark. When I pull down our organizational data it returns a data structure that, while I know it should be straight forward, confuses me.</p>

<p>Using <code>irb</code> I initialize the connection and then request the data using <code>conn.organizations</code> and display it with <code>awesome_print</code>. It returns:</p>

<pre><code>[
    [0]   &lt;Fog::Compute::Ecloud::Organization
    href=""/cloudapi/ecloud/organizations/#######"",
    name=""****************************** (***-###-###)"",
    type=""application/vnd.tmrk.cloud.organization"",
    other_links=[{:href=&gt;""/cloudapi/ecloud/admin/organizations/#######"", :name=&gt;""****************************** (***-###-###)"", :type=&gt;""application/vnd.tmrk.cloud.admin.organization"", :rel=&gt;""alternate""}, {:href=&gt;""/cloudapi/ecloud/environments/organizations/#######"", :type=&gt;""application/vnd.tmrk.cloud.environment; type=collection"", :rel=&gt;""down""}, {:href=&gt;""/cloudapi/ecloud/devicetags/organizations/#######"", :type=&gt;""application/vnd.tmrk.cloud.deviceTag; type=collection"", :rel=&gt;""down""}, {:href=&gt;""/cloudapi/ecloud/alerts/organizations/#######"", :type=&gt;""application/vnd.tmrk.cloud.alertLog"", :rel=&gt;""down""}]
  &gt;
]
</code></pre>

<p>So it is returning an array with a singular element. That element is comprised of another data structure surrounded by <code>&lt;</code> and <code>&gt;</code>. But I'm not certain if that's accurate because there also appears to be another array containing a hash embedded within that structure.</p>

<p>My issue is that I need to extract the value represented by the <code>#######</code> but I don't know how to access any of the sections of the output which contain that value.</p>

<p>What am I looking at as far as the data structure is concerned and how do I go about access the data contained within?</p>
","2988","","<p>It's a <code>Fog::Compute::Ecloud::Organization</code> object and the documentation of that class should tell you what methods are available. Or you can just ask the object itself, by calling <code>Object#methods</code>.</p>
"
"<p>The docs for the <a href=""http://www.ruby-doc.org/core-2.1.2/Class.html"" rel=""nofollow"">Class</a> class have an incredibly confusing diagram involving ""metaclasses"". I'm trying to demystify what's actually going on here. Are all three terms...</p>

<ul>
<li>metaclass</li>
<li>eigenclass</li>
<li>singleton class</li>
</ul>

<p><em>Synonymous</em> <strong>in Ruby</strong>? I know that metaclass means something specific and different in Python, for example, but what about in Ruby?</p>
","2988","","<p>tl;dr: Yes.</p>

<p>In the past, nobody knew what to call them, so everybody called them something else. Here is just a small sample of the names different authors have used or proposed over time:</p>

<ul>
<li>singleton class</li>
<li>eigenclass</li>
<li>metaclass</li>
<li>ghost class</li>
<li>own class</li>
<li>virtual class</li>
<li>shadow class</li>
<li>myclass</li>
<li>selfclass</li>
<li>overclass</li>
<li>underclass</li>
<li>anchorclass</li>
<li>embedded class</li>
<li>intrinsic class</li>
<li>innate class</li>
<li>nameless class</li>
<li>unit class</li>
<li>atom class</li>
<li>singular class</li>
<li>singularity</li>
<li>bongo class</li>
<li>inner class</li>
</ul>

<p>Originally, matz didn't want to choose a name, rather he wanted the community to settle on one. Unfortunately, it didn't. When matz and David Flanagan wrote <a href=""http://shop.oreilly.com/product/9780596516178.do"" rel=""nofollow""><em>The Ruby Programming Language</em></a>, they had to choose, and they chose <em>eigenclass</em> (but <em>singleton method</em>). Eigenclass was also used in the first drafts for the ISO Ruby Language Specification (but mainly <a href=""https://www.ruby-forum.com/topic/199952#871048"" rel=""nofollow"">because it was very easy to run a search&amp;replace on that name once an ""official"" one had been found</a>).</p>

<p>However, in the <a href=""https://www.ipa.go.jp/osc/english/ruby/"" rel=""nofollow"">later drafts</a> and the <a href=""http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=59579"" rel=""nofollow"">final version of the ISO Ruby Language Specification</a>, <em>singleton class</em> is used. That name was also chosen, when the <a href=""http://www.ruby-doc.org/core-2.1.2/Object.html#method-i-singleton_class"" rel=""nofollow""><code>Object#singleton_class</code></a> accessor method was finally formally introduced in Ruby 1.9.2 and <a href=""http://www.ruby-doc.org/core-2.1.2/Module.html#method-i-singleton_class-3F"" rel=""nofollow""><code>Module#singleton_class?</code></a> was introduced in Ruby 2.1.</p>

<p><em>Metaclass</em> was the term used by <a href=""https://wikipedia.org/wiki/Why_the_lucky_stiff"" rel=""nofollow"">_why the lucky stiff</a> in <a href=""http://mislav.uniqpath.com/poignant-guide/"" rel=""nofollow""><em>Why's (Poignant) Guide to Ruby</em></a> (and other writings and libraries), which was highly influential on a whole generation of non-Japanese-speaking Ruby developers, and for a long time the best introduction to Ruby metaprogramming (and the only English one).</p>

<p>Nowadays, the terms singleton class and eigenclass seem to predominantly used (with singleton class taking over, thanks to the method names in the core library), with the occasional mention of metaclass.</p>

<p>Personally, I never liked metaclass, because it actually already has a different meaning: the metaclass is the class of a class. In Ruby, classes have <em>two</em> classes that define their behavior: their singleton class and the <code>Class</code> class, either one of which could be considered their metaclass. (Although neither of those classes can do what metaclasses in other languages can do, e.g. change the rules the method lookup or inheritance.)</p>

<p>Virtual class is even more problematic, because not only does it have a different meaning in programming in general (a nested class that can be overridden in a subclass, as in e.g. Beta or Newspeak, and proposed but abandoned for Scala), it even already has a <em>third</em> different meaning <em>within the Ruby community</em>: virtual class is the name given inside the MRI and YARV source code to singleton classes and include classes.</p>

<p>Inner class also already has a meaning as synonym to nested class (a class which is a member of an outer class, just like a method).</p>

<p>Personally, I always liked eigenclass, in symmetry to already established technical terms such as eigenvalue, eigenvector, eigenspace, eigenfunction, eigenface, eigenwave, eigenplane, eigenstate, eigenproblem etc. However, I have now adopted the term singleton class, simply because it's easier to talk about the <code>singleton_class</code> method as returning the singleton class.</p>
"
"<p>Assuming I defined a class</p>

<pre><code>class A
  attr_accessor :alpha, :beta, :gamma

  def initialize
    alpha = 1
  end
end
</code></pre>

<p>can I call a method that gives the list of method names passed to an <code>attr_accessor</code> call? Or do I have to define a constant with the symbols, and pass it to <code>attr_accessor</code>?</p>
","2988","","<p>No, that's not possible. Methods generated by <code>attr_accessor</code>, <code>attr_reader</code> and <code>attr_writer</code> are indistinguishable from ones written by hand. In fact, they <em>must</em> be indistinguishable from ones written by hand!</p>

<p>Say, you have a simple <code>attr_accessor</code>, but you later want to refactor it to do something more intelligent (e.g. caching). This is a purely internal change, a client <em>must not</em> be able to observe the difference, otherwise it would be a breach of encapsulation!</p>

<p>If you simply want a list of setters, that's easy enough: setters are methods whose name ends with an <code>=</code> sign:</p>

<pre><code>A.public_instance_methods(false).grep(/=$/)
# =&gt; [:alpha=, :beta=, :gamma=]
</code></pre>

<p>For getters, it's trickier: any method that doesn't take an argument <em>could</em> be a getter, but it could also be a side-effecting method (e.g. <a href=""http://Ruby-Doc.Org/core-2.1.2/Array.html#method-i-clear"" rel=""nofollow""><code>Array#clear</code></a>):</p>

<pre><code>A.public_instance_methods(false).select {|m| 
  A.public_instance_method(m).arity.zero? 
}
# =&gt; [:alpha, :beta, :gamma]
</code></pre>
"
"<p>I want to know the difference between <code>Tempfile</code>  and <code>File</code>.</p>

<p>I found that :</p>

<pre><code>require 'open-uri'

open('c:/boot.ini'){|file|
  puts file.class  #File 
}

open('http://coderlee.cnblogs.com'){|file|
  puts file.class #Tempfile
}
</code></pre>

<p>and when I save the stream to a remote storage server,the <code>Tempfile</code> will cause an error,It seems that the reason is the encoding is not <code>ASCII-8BIT</code> why?</p>
","2988","","<p>The encoding of the document you retrieved is controlled by the server. If you want to retrieve the document in a different encoding, you need to change the encoding on the server.</p>
"
"<p>I have this method:</p>

<pre><code>def change_value(obj)
  puts obj.object_id #70275832194460
  obj = nil
  puts obj.object_id #8
end

obj = ""hi there""
puts obj.object_id #70275832194460
change_value(obj)
puts obj.object_id #70275832194460
puts obj #still 'hi there', while I would expect nil.
</code></pre>

<p>Why if we are passing the object, and changing its value the new value doesn't get maintained outside of the method?</p>
","2988","","<p>Your method is named badly. It is named <code>change_value</code>, but it doesn't actually change the value, it changes the <em>reference</em>. And since Ruby is pass-by-value, not pass-by-reference, changing the reference won't do anything to the caller. If you actually <em>did</em> change the value, you would be able to observe the difference:</p>

<pre><code>def change_value(obj)
  puts obj.object_id #70275832194460

  obj.replace('hi back!')
  puts obj.object_id #70275832194460

  obj = nil
  puts obj.object_id #8
end

obj = 'hi there'
puts obj.object_id #70275832194460

change_value(obj)
puts obj.object_id #70275832194460

puts obj # 'hi back!'
</code></pre>
"
"<p>Specifically, why does the following code output <code>nil</code> instead of <code>1</code>?</p>

<pre><code>class Foo
  class &lt;&lt; self
    @bar = 1
    def bar
      @bar
    end
  end
end
p Foo.bar
</code></pre>
","2988","","<p>This is in no way different from:</p>

<pre><code>class Foo
  @bar = 1

  def bar; @bar end
end
</code></pre>

<p>Instance variables belong to objects and are always looked up on <code>self</code>. <code>bar</code> is an instance method, so the <code>@bar</code> inside <code>bar</code> belongs to some instance of <code>Foo</code> (<code>self</code> is the receiver of <code>bar</code> at that point). The <code>@bar</code> at the beginning belongs to the class itself (<code>self</code> is <code>Foo</code> at that point).</p>

<p>Those are simply two completely different objects. The two ´@bar`s are completely unrelated.</p>

<p>In <em>your</em> example: the first <code>@bar</code> belongs to the singleton class of <code>Foo</code>, the second <code>@bar</code> belongs to the instance of the singleton class of <code>Foo</code> (i.e. <code>Foo</code>).</p>

<p>Here's how you could make it work:</p>

<pre><code>class Foo
  @bar = 1

  def self.bar; @bar end
end
</code></pre>
"
"<p>I just create a definition in scala for Naturals, and also a PLUS operation:</p>

<pre><code>abstract class Nat {

  def +(other:Nat):Nat = this match {
    case Zero =&gt; other
    case Succ(x) =&gt; x + Succ(other)
  }

}

object Zero extends Nat {
  override def toString = ""Zero""
}
</code></pre>

<p>And for the definition of Succ, i tryit not to use a Case class, for learning purposes. My first approach was:</p>

<pre><code>class Succ(x: Nat) extends Nat {
  override def toString = ""Succ("" + x.toString + "")""
}

object Succ {
  def apply(x: Nat) = new Succ(x)

  def unapply(s: Succ) = Some(s.x)
}
</code></pre>

<p>But the compiler throws me an error</p>

<pre><code>Error:(  , ) value x is not a member of Succ
  def unapply(s: Succ) = Some(s.x)
                              ^
</code></pre>

<p>I make an explicit method for get X, and it works</p>

<pre><code>class Succ(x: Nat) extends Nat {

  def getX = x

  override def toString = ""Succ("" + x.toString + "")""
}

object Succ {
  def apply(x: Nat) = new Succ(x)

  def unapply(s: Succ) = Some(s.getX)

}
</code></pre>

<p>Why?</p>
","2988","","<p>Constructor arguments are only visible inside the class. If you want to make it a field, you'll have to say so:</p>

<pre><code>class Succ(val x: Nat) extends Nat { … }
//         ^^^
</code></pre>
"
"<p>I'm using Ruby / Rails to parse data from a MySQLDump file.. which very nicely includes all the data from all tables of a database, but not in Ruby array [] format.</p>

<p>e.g.  the MySQLDUMP might reference a table admins</p>

<pre><code>INSERT INTO `admins` VALUES (1,'Superuser'),(2,'Normaluser')
</code></pre>

<p>It's easy for me extract from that the string:</p>

<pre><code>""(1,'Superuser'),(2,'Normaluser')""
</code></pre>

<p>but I want to treat that as an array of arrays.. in other words get it to be:</p>

<pre><code>[[1,'Superuser'],[2,'Normaluser']]
</code></pre>

<p>what I'm doing right now is:</p>

<pre><code>vars = ""(1,'Superuser'),(2,'Normaluser')""
vars = '[[' + vars[1..-3] + ']]'
vars = vars.gsub('),(','],[') #UGH!
array = YAML.load(vars)
</code></pre>

<p>which works, but any text content in the data that happens to be ""),("" is going to break it.</p>

<p>So.. is there any way that I can instead do a YAML.load(vars) or similar where I specify that the the data is an array bounded with ( and )?</p>

<p>.. in other words,</p>

<pre><code>vars = ""("" + ""(1,'Superuser'),(2,'Normaluser')"" + "")""
array = YAML.load(vars).in_some_funky_way_where_array_boundaries_respecified
</code></pre>

<p>Thanks in advance.</p>

<p>K</p>
","2988","","<p>Instead of trying to load SQL as YAML, you should probably load SQL as SQL. I don't know if there are any SQL parsers for Ruby, though, which means that you will have to write your own. You can find the specification of SQL in <a href=""http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=53681"" rel=""nofollow"">ISO/IEC 9075-1:2011
Information technology -- Database languages -- SQL -- Part 1: Framework (SQL/Framework)</a> and <a href=""http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=53682"" rel=""nofollow"">ISO/IEC 9075-2:2011 Information technology -- Database languages -- SQL -- Part 2: Foundation (SQL/Foundation)</a>.</p>

<p>Or, you could let a SQL database do the SQL parsing for you and get the results back out of the database.</p>
"
"<p>I do this a lot:</p>

<pre><code>m51.items.map(&amp;:id)
</code></pre>

<p>but would like to do two elements for my symbol-to-proc. What would be the syntax? I tried</p>

<pre><code>m51.items.map(&amp;[:instore_image_url, :id])
</code></pre>

<p>but not working. It's a RoR app so if rails specific, thats ok</p>

<p>thx</p>
","2988","","<p>Well, the obvious reason why <code>Symbol#to_proc</code> isn't working, is because you are trying to convert an <code>Array</code> to a <code>Proc</code>, not a <code>Symbol</code>. So, you need a suitable <code>Array#to_proc</code>. Something like this:</p>

<pre><code>class Array
  def to_proc
    -&gt; el { map(&amp;el.method(:public_send)) }
  end
end

Item = Struct.new(:instore_image_url, :id, :doesnt_matter)

items = [Item.new('foo.jpg', 23, :bla), Item.new('bar.gif', 42, :blub)]

items.map(&amp;[:instore_image_url, :id])
# =&gt; [['foo.jpg', 23], ['bar.gif', 42]]
</code></pre>

<p>However, that's a really bad idea. It's not clear exactly, what <code>Array#to_proc</code> is supposed to mean. There are a few implementations of <code>Array#to_proc</code> in the wild, but most of them interpret <code>&amp;[:one, :two]</code> as <code>_.one.two</code>, and not <code>[_.one, _.two]</code>. Mathematically speaking, an <code>Array</code> is isomorphic to a function from <code>Integer</code>s to elements, so the only obvious implementation that makes sense is this:</p>

<pre><code>class Array
  def to_proc
    method(:[]).to_proc
  end
end

[2, 2, -1, 0, 0].map(&amp;[:one, :two, :three])
# =&gt; [:three, :three, :three, :one, :one]
</code></pre>
"
"<p>Let me preface this by saying I'm a newbie to Ruby (pretty obvious). I'm learning Ruby on Codecademy and I'm confused by the sort function. To use as an example:</p>

<pre><code>list = [3,2,1,4]
list.sort { |a,b| b &lt;=&gt; a }
</code></pre>

<p>I know that this will return the array in descending order - [4, 3, 2, 1]. What I don't understand is why, exactly. I know that when the sort function is called, the numbers from the array are passed into the function and compared, which then returns either -1, 0, or 1 - but then what? For instance, I'm guessing this is what would be compared first:</p>

<pre><code>[3 &lt;=&gt; 2] = 1
</code></pre>

<p>But what does it do with the 1 that is returned? And what would the array look like after it gets the 1?</p>

<p>I'm confused because I don't understand how reversing the comparison (a &lt;=> b vs. b &lt;=> a) changes the direction in which the array is sorted. Unless I'm mistaken, doesn't ""1 &lt;=> 2"" essentially return ""1 comes before 2"", whereas ""2 &lt;=> 1"" returns ""2 comes after 1""? Which is more or less the same thing, yet the results are obviously different.</p>
","2988","","<blockquote>
  <p>Unless I'm mistaken, doesn't ""1 &lt;=> 2"" essentially return ""1 comes before 2"", whereas ""2 &lt;=> 1"" returns ""2 comes after 1""? Which is more or less the same thing, yet the results are obviously different.</p>
</blockquote>

<p>No and yes. The question that is asked of the block is: ""does the left element come before or after the right?"" And by swapping left and right, you swap the order.</p>

<p>So, the answer is: you aren't reversing the comparison per se, but you are reversing the <code>sort</code> method's idea of which is left and which is right.</p>

<p>The return value of the block is interpreted by <code>sort</code> like this:</p>

<ul>
<li><code>0</code>: order doesn't matter</li>
<li><code>1</code>: the elements are already in the right order</li>
<li><code>-1</code>: the elements are in the wrong order</li>
</ul>

<p>By swapping left and right, you swap whether the block tells <code>sort</code> that the elements are in the right or wrong order.</p>

<p>Note that Quicksort is completely irrelevant here. What matters is the contract of the comparator block. Whether that block is then used by Quicksort, Shellsort, Insertion Sort, Bubblesort, Bogosort, Timsort or whatever other comparison-based sort doesn't really matter.</p>
"
"<p>I'm developing a ruby gem, and part of it is a CLI which is installed on the user's system. Is there a way to create a man page for this executable and package it with the gem to be installed?</p>
","2988","","<p>You would write a manpage for a Ruby executable the same way that you would write a manpage for any other program: write it in some markup language and translate to ROFF or just write it directly in ROFF. There is no way to install manpages from RubyGems (what would it do with that on Windows, for example?) but if you want to ship a manpage, you are presumably on some Unix system anyway, pretty much all of which have package management systems that can take care of that for you. So, for Debian or Debian-derived systems, you would distribute it as a <code>.deb</code>, for RedHat, SuSE or derivatives thereof, you would use an <code>.rpm</code> and so on.</p>
"
"<p>I have a function that checks a software buffer for data, however if that data has not changed it is still added and sent.</p>

<p>So I end up getting data sent multiple times.
I'm trying to check to see if my variable has changed, and if it has not I want to prevent it from sending that data again.</p>

<p>Here is what I've tried.</p>

<pre><code>$buffer = fldigi.add_to_buffer(msg)

if $buffer
   fldigi.send_buffer()
 else
   puts ""Debug(buffer): Data has not changed""
end
</code></pre>
","2988","","<p>There's no way to know whether a variable has changed without tracing the execution of the program. Variables aren't objects in Ruby, you can't tell them to do something, you can't ask them questions, you can't pass them as arguments, you can't return them as values, you can't assign them to variables, you can't call methods on them.</p>

<p>There's only two things you can do with a variable: dereference it and assign to it.</p>

<p>Assignment is the only way to change the variable, therefore you need to trace assignments to the variable to figure out whether or not it was changed. Note, however, that the standard Ruby <a href=""http://www.ruby-doc.org/core-2.1.2/TracePoint.html"" rel=""nofollow""><code>TracePoint</code></a> API does not offer the necessary information (probably because variables might get optimized away by the compiler).</p>

<p>It is probably going to be much easier to just check whether some object has changed rather than whether some variable has changed.</p>
"
"<p>Forgive me for my english.
I am a php programmer and now i want to learn Ruby.
In php if you want to call function ""foo"" within a class, you simply call foo(), and if you want to call method ""foo"" you call this->foo().
The question is, is it possible to call function and method with the same name in Ruby?</p>

<p>For example:</p>

<pre><code>def foo
  puts ""In foo function""
end

class A
  def call_foo
    foo
    #How can i call foo function, not a method?
  end

  def foo
    puts ""In foo method""
  end
end

a = A.new

a.call_foo #Prints ""In foo method""
</code></pre>
","2988","","<p>There is no such thing as a function in Ruby, only methods.</p>

<p>If you define a method at the top-level it is an instance method of <code>Object</code>.</p>

<p>If you define a class without a superclass, it's superclass is <code>Object</code>.</p>

<p>So, your <code>A#foo</code> simply overrides <code>Object#foo</code>. And if it overrides <code>Object#foo</code>, it should respect its contract. You should never need to call <code>Object#foo</code> on an <code>A</code>, if <code>A#foo</code> implements <code>Object#foo</code>'s contract correctly (and it should, otherwise it would be a violation of the Liskov Substitution Principle). If you want to reuse <code>Object#foo</code>'s implementation within <code>A#foo</code>, you can defer to the superclass implementation using <code>super</code>.</p>

<p>Note: what you want <em>is</em> possible using reflection, but the correct solution would be to fix your design:</p>

<pre><code>def foo
  puts ""In foo function""
end

class A
  def call_foo
    self.class.superclass.public_instance_method(:foo).bind(self).()
  end

  def foo
    puts ""In foo method""
  end
end

a = A.new

a.call_foo #Prints ""In foo function""
</code></pre>
"
"<p>Looking at Haskell's <code>Either</code> Monad, there's a <code>&gt;&gt;=</code> function.</p>

<pre><code>Prelude Map&gt; let add100 = \x -&gt; Right (x+100 :: Int)

Prelude Map&gt; x
Right 5
Prelude Map&gt; x &gt;&gt;= add100
Right 105

Prelude Map&gt; let y = Left ""..."" :: Either String Int
Prelude Map&gt; y &gt;&gt;= add100
Left ""...""
</code></pre>

<p>However, why doesn't Scala's <code>Either[A,B]</code> have a <code>flatMap</code>, i.e. equivalent to <code>&gt;&gt;=</code> function?</p>

<pre><code>scala&gt; e
res5: Either[String,Int] = Right(1)

scala&gt; e.
asInstanceOf   fold           isInstanceOf   isLeft         isRight
joinLeft       joinRight      left           right          swap
toString
</code></pre>

<p>Also, what's the meaning of <code>left</code> and <code>right</code>?</p>

<pre><code>scala&gt; e.left
res6: scala.util.Either.LeftProjection[String,Int] = LeftProjection(Right(1))

scala&gt; e.right
res7: scala.util.Either.RightProjection[String,Int] = RightProjection(Right(1))
</code></pre>
","2988","","<p><code>Either</code> can't have a <code>flatMap</code>, because <code>Either</code> is not a monad. Haskell makes it into a monad by favoring one of the two types over the other, but there really is no justification to do so. <code>Either</code> means ""this can be one of two types"". Period. It does not give any preferential treatment to one of the two types.</p>

<p>If you use <code>Either</code> for error reporting, then it is true that you want it to be biased to one side, but that is only one usecase of many, and hardcoding a single special usecase into a general interface smells of bad design. And for that usecase, you might just as well use <code>Try</code>, which is basically a biased <code>Either</code>.</p>

<p><code>left</code> and <code>right</code> return a projection of the <code>Either</code>, which <em>is</em> biased to one side.</p>

<p>However, note that the design and usability of <code>Either</code> has been debated very often, and it is indeed not exactly a shining beacon of good API design. Which is one of the reasons why <code>Try</code> and ScalaZ <code>\/</code> exist.</p>
"
"<p>I am unable to figure out or find any information on how to push the initialized object pointer to an array accessed from a class level variable. Here is an example.</p>

<pre><code>Class Color
  @@colors = Array.new

  def initialize
   @@colors &lt;&lt; red
  end

  def self.list
    @@colors.each do |color|
      puts color.to_hex
    end
  end
end

red = Color.new
</code></pre>

<p>Thanks guys for your help.</p>
","2988","","<p>I would do it this way:</p>

<pre><code>class Color
  @colors = []

  def self.new(*args, &amp;blk)
    @colors &lt;&lt; super
  end
  def self.list
    puts @colors.map(&amp;:to_hex)
  end
end

red = Color.new

Color.list
</code></pre>

<p>Personally, I feel uncomfortable doing class-level stuff in the instance initializer, it just doesn't feel right. The class is a completely independent object, having the instance know too much about the class smells of bad OO.</p>
"
"<p>I tagged character-encoding and text because I know if you type <code>'and' == 'and'</code> into the rails console, or most any other programming language, you will get <code>true</code>. However, I am having the issue when one of my users pastes his text into my website, I can't spell check it properly or verify it's originality via copyscape because of some issue with the text. (or maybe my understanding of text encoding?)</p>

<p><strong>EXAMPLE:</strong></p>

<p>If you copy and paste the following line into the rails console you will get <code>false</code>.</p>

<pre><code>'аnd' == 'and' #=&gt; false
</code></pre>

<p>If you copy and paste the following line into the rails console you will get <code>true</code> even though they appear exactly the same in the browser.</p>

<pre><code>'and' == 'and' #=&gt; true
</code></pre>

<p>The difference is, in the first example, the first <code>'аnd'</code> is copied and pasted from my user's text that is causing the issues. All the other instances of <code>'and'</code> are typed into the browser.</p>

<p>Is this an encoding issue?
Any ideas on how to fix my issue?</p>

<p>Thanks!</p>
","2988","","<p>The problem is not with encodings. A single file or a single terminal can only have a single encoding. If you copy and paste both strings into the same source file or the same terminal window, they will get inserted with the same encoding.</p>

<p>The problem is also not with normalization or folding.</p>

<p>The first string has 4 octets: <code>0xD0 0xB0 0x6E 0x64</code>. The first two octets are a two-octet UTF-8 encoding of a single Unicode codepoint, the third and fourth octets are one-octet UTF-8 encodings of Unicode code points.</p>

<p>So, the string consists of three Unicode codepoints: <code>U+0430 U+006E U+0064</code>.</p>

<p>These three codepoints resolve to the following three characters:</p>

<ol>
<li>CYRILLIC SMALL LETTER A</li>
<li>LATIN SMALL LETTER N</li>
<li>LATIN SMALL LETTER D</li>
</ol>

<p>The second string has 3 octets: <code>0x61 0x6E 0x64</code>. All three octets are one-octet UTF-8 encodings of Unicode code points.</p>

<p>So, the string consists of three Unicode codepoints: <code>U+0061 U+006E U+0064</code>.</p>

<p>These three codepoints resolve to the following three characters:</p>

<ol>
<li>LATIN SMALL LETTER A</li>
<li>LATIN SMALL LETTER N</li>
<li>LATIN SMALL LETTER D</li>
</ol>

<p>Really, there is no problem <em>at all</em>! The two strings <em>are</em> different. With the font you are using, a cyrillic a looks the same as a latin a, but as far as Unicode is concerned, they are two different characters. (And in a different font, they might even look different!) There's really nothing you can do from an encoding or Unicode perspective, because the problem is not with encodings or Unicode.</p>

<p>This is called a <a href=""https://wikipedia.org/wiki/Homoglyph"" rel=""nofollow"">homoglyph</a>, two characters that are different but have the same (or very similar) glyphs.</p>

<p>What you <em>could</em> try to do is transliterate all strings into Latin (provided that you can guarantee that nobody ever wants to enter non-Latin characters), but really, the questions are:</p>

<ol>
<li>Where does that cyrillic a come from?</li>
<li>Maybe it was <em>meant</em> to be a cyrillic a and really <em>should</em> be treated not-equal to a latin a?</li>
</ol>

<p>And depending on the answers to those questions, you might either want to fix the source, or just do nothing at all.</p>

<p>This is a very hot topic for browser vendors, BTW, because nowadays someone could register the domain <code>google.com</code> (with one of the letters switched out for a homoglpyh) and you wouldn't be able to spot the difference in the address bar. This is called a homograph attack. That's why they always display the Punycode domain in addition to the Unicode domain name.</p>
"
"<p>I upgraded ruby from 1.9.3 to 2.0.0</p>

<p>After upgrading, I cannot run my script anymore because there are so many errors.</p>

<p><strong>UPDATE</strong>
I updated the beginning part of my script. </p>

<p><strong>errors</strong></p>

<pre><code>Bareword found where operator expected at D:\ex\report.rb line 12, near ""$0
  def""
        (Missing operator before def?)
Bareword found where operator expected at D:\ex\report.rb line 18, near ""usage""
        (Missing semicolon on previous line?)
Semicolon seems to be missing at D:\ex\report.rb line 19.
syntax error at D:\ex\report.rb line 5, near ""Encoding::UTF_8 require ""
Execution of D:\jenkins_lab_a\asap.ex\asap-report-apps.rb aborted due to compilation errors.
</code></pre>

<p><strong>script</strong></p>

<pre><code># coding: utf-8
Encoding.default_external = Encoding::UTF_8
Encoding.default_internal = Encoding::UTF_8

require './lib/utils'
require './lib/klocwork'
require './lib/td'
require 'fileutils'
require 'logger'

if __FILE__ == $0
  def usage
    warn 'usage: report.rb [a] [b] [c]'
    warn ""ex) report.rb a b c""
    exit
  end
  puts ""report.rb start""
  usage if ARGV.size &lt; 3   

end
</code></pre>

<p>I can see errors like this all over the script.
But I never changed my script and It is working well in the previous version.</p>

<p>So I think that I missed any environmental settings</p>

<p>Could you let me know what I can check to resolve this issue?</p>
","2988","","<p>Those aren't Ruby error messages. You aren't running your Ruby files with a Ruby interpreter. There's no concept of ""bareword"" in Ruby, and semicolons are entirely optional, so it wouldn't report about them either.</p>
"
"<p>I'm developing a ruby script for solar calculations using sketchup. The script uses a few input files, generates intermediate calculations results that are saved in a number of files and finally provides the final output in a separate set of files.</p>

<p>The workflow is quite straightforward if all the steps are followed in a specific order from start to finish.</p>

<p>The problem arises when different scenarios need to be analysed. In this case I might introduce changes in the input files, in some global variables and of course this will cause different intermediate results and final outputs. There are two main issues:</p>

<p>1 - if I change some of the parameters and I do not complete the whole process because the script crashed or for any other reason, there is no way for me to know whether the results generated correspond to the current 'state' of the input parameters</p>

<p>2 - the calculations are quite complex and might require a few hours. I would like to avoid calculations that do need to be repeated, but to do this I need to be able to identify the state of the intermediate results.</p>

<p>This is a common problem for several commercial simulation software I have used as well. You set up your model, run a simulation and make some changes to test a different set of input parameters. If you do not run the simulation and re-open the model a few days later, there is no way to check whether the results correspond to the current set of inputs.</p>

<p>Some software partially solve the problem by creating a final file that contains all the inputs and outputs so to be able to regenerate the particular scenario.</p>

<p>To reduce the repetitions, I guess that an approach could be the use of a 'dependency graphs' (not sure it is the right definition) that shows the various dependencies and relationships between all the objects involved in the calculations.</p>

<p>My question is if there is a general approach to solve these kind of problems. I have the feeling that I might have to use UML to build this graph, but I thought that it was better to ask first!</p>

<p>Thanks for any advice.</p>

<p>ADDITIONAL EXPLANATION</p>

<p>I am not a professional programmer. I am an engineer and I am developing this software for my own calculations. It has now become much bigger and complex than I expected to and I have started to realize that there are several other issues that are not related to to calculation algorithm itself but are more related to the architecture and the way a potential user can use the software.</p>

<p>For example. I generate an object (InsolationMap) based on a set of inputs (x1, x2, .. xn). This object is then dumped on a file using Marshal. If I run the simulation again, I first check whether the file InsolationMap.marshal exists, if it does then I know that I do not need to perform the simulation again.</p>

<p>The problem arises when I run the simulation with a different set of parameters (y1, y2, ...yn). My code (as it is at the moment) would skip the simulation and this would be of course wrong. This of course happens because the object is not linked to the input parameters.</p>

<p>Now, some kind of dependency graph would help me first to outline all the possible dependencies (my original question). Additionally, I wonder whether I need to code all the checks my self or there are alternative approaches. I was thinking to signing the output file with the input parameters so that I could check whether the new set of inputs actually matches the signature. </p>

<p>I hope this clarifies a bit.</p>

<p>Thanks</p>
","2988","","<p>I'm not sure that I fully understand your question, but the problem of stages which depend on results of previous stages which in turn depend on results from previous stages which themselves depend on result from previous stages, and every one of those stages can fail or take an arbitrary amount of time, is as old as programming itself and has been solved a number of times.</p>

<p>Tools which do this are typically called ""build tools"", because this is a problem that often occurs when building complex software systems, but they are in no way limited to building software. A more fitting term would be ""dependency-oriented programming"". Examples include <code>make</code>, <code>ant</code>, or Ruby's own <code>rake</code>.</p>
"
"<p>In Javascript I can describe a function like so</p>

<pre><code>function showString(){ console.log(""this is a string"") }; 
</code></pre>

<p>Such that in the console there is a strict difference between the function and the executed function </p>

<pre><code>&gt; function showString(){ console.log(""this is a string"") }; 
&gt; showString
function showString(){ console.log(""this is a string"") }
&gt; showString()
this is a string 
</code></pre>

<p>In Scala I am now doing the same thing; </p>

<pre><code>def showname() = println(""this is a string"")
</code></pre>

<p>However, when I run this is in the console, it always seems to execute the function instead of also being able to just pass the function around: </p>

<pre><code>scala&gt; def showname() = println(""this is a string"")
showname: ()Unit
scala&gt; showname // I am expecting a function, not an executed function
this is a string
scala&gt; showname()
this is a string // I am expecting an executed function
</code></pre>

<p>Is Scala handling functions differently? Is my expectation wrong? </p>
","2988","","<p>That's not a function, that's a method. This is a function:</p>

<pre><code>val showname = () =&gt; println(""this is a string"")

showname
// =&gt; res0: () =&gt; Unit = &lt;function0&gt;

showname()
// this is a string
</code></pre>

<p>And as you can see, the function behaves just like you would expect it from a function.</p>
"
"<p>I am reading the book Programming in Scala. In the book, it says that ""A function literal is compiled into a class that when instantiated at runtime is a function value"". And it mentions that ""Function values are objects, so you can store them in variables if you like"".</p>

<p>So I try to check the equality between functions. But I failed.</p>

<ol>
<li><p>If function is object in Scala, then it should behave like other objects in Scala. Maybe check equality of function is meaningless, so it is disabled?</p></li>
<li><p>And will function be compiled into object in Scala?</p></li>
</ol>
","2988","","<p>It's not clear what ""equality"" of functions means. Typically, what people care about is ""do these two functions compute the same result?""</p>

<p>This, however, is a well-known undecidable problem, the <em>Function Problem</em>. The actual proof is more complex, obviously, but a simple intuition is: if you could tell whether two functions were equal, then you could solve the Halting Problem by asking ""is this function equal to <code>while (true) {}</code>?""</p>

<p>So, we cannot decide whether two functions compute the same result. What we <em>could</em> do, is for example, check whether they contain the exact same code. But that is pretty boring. Just some tiny compiler optimization or renaming a single variable will make two functions that intuitively should be equal not equal.</p>

<p>Ergo, we take the easy way out: two functions are equal if they are identical, otherwise they aren't.</p>
"
"<p>What does it mean in Ruby when you see methods or variables with an underscore before them like this in Rails</p>

<pre><code>submit_tag _('Enroll')
:notice =&gt; _('Update card.')
</code></pre>

<p>or </p>

<pre><code>_session_id
</code></pre>

<p>Are most of these just conventions, or do they imply a functional difference in the behavior of the variables/methods?</p>
","2988","","<p>Those two cases are <em>completely</em> different.</p>

<p>The second looks like it is a local variable (although it might be a method call, it's impossible to tell without the context). Local variables that begin with an underscore will not generate an ""unused variable"" warning if they are unused, which is why they are used to indicate a variable that is <em>intentionally</em> not used (as opposed to a typo or pogramming error).</p>

<p>The first is a call to a method named <code>_</code>. What this method does, depends on the class of <code>self</code> at that point, you will have to look at the documentation for that class.</p>

<p>In IRb, <code>_</code> is a method that returns the result of the last expression that was evaluated.</p>
"
"<p>I've got a Scala Trait with a method that returns Option[Boolean]. I'd like to write a Java class that implements this trait. Unfortunately the compiler complains about the following code:</p>

<pre><code>trait WithBoolean {
  def doSth(): Option[Boolean]
}

public class MyClass implements WithBoolean {
  @Override
  public Option&lt;Boolean&gt; doSth() {
    return null;
  }
}
</code></pre>

<p>The compile error is: </p>

<pre><code>doSth() in MyClass cannot implement doSth() in WithBoolean
public Option&lt;Boolean&gt; doSth() {
                       ^
return type Option&lt;Boolean&gt; is not compatible with Option&lt;Object&gt;
</code></pre>

<p>It does compile if i change the code slightly:</p>

<pre><code>public class MyClass implements WithBoolean {
  @Override
  public Option&lt;Object&gt; doSth() {  //return type has been changed to Object
    return null;
  }
}
</code></pre>

<p>But this is obviously not a nice solution. What do I need to change in order to be able to use the correct return type?</p>
","2988","","<p>I can't test this right now, but my best guess is that you have some <code>import</code>s mixed up, and thus try to override <code>Option&lt;scala.Boolean&gt;</code> with <code>Option&lt;java.lang.Boolean&gt;</code>.</p>
"
"<p>I have some recursion code I want to refactor to use tail recursive from <a href=""http://apocalisp.wordpress.com/2010/10/17/scalaz-tutorial-enumeration-based-io-with-iteratees/"" rel=""nofollow"">Enumerator</a>, I can simplify that recursion to look like this, please ignore what functionality this functionality wants to achieve.</p>

<pre><code>@tailrec
def doStuff: List[Int] =&gt; Int = {
      case Nil =&gt; 0
      case x :: xs =&gt; doStuff(xs)
    }
</code></pre>

<p>If I get rid of tailrec annotation, it is working fine, the structure looks like this doStuff(doStuff(doStuff(..))). It will have stackoverflow exception.</p>

<p>So how can I make it tail recursive if it is a function</p>
","2988","","<blockquote>
  <p>So how can I make it tail recursive if it is a function</p>
</blockquote>

<p>You can't. I mean, of course you can write a tail-recursive function in Scala, but it won't help you because it won't get optimized.</p>

<p>Scala only optimizes direct tail-recursive method calls.</p>
"
"<p>I have an array of symbols and I am trying to get one from it, or return nil if its not found</p>

<pre><code>plugins = [:one, :two, :three]
def resolve_plugin(name)
  plugins[:""#{name}_plugin""]
end
</code></pre>

<p>When I call <code>resolve_plugin(:one)</code> I get <code>TypeError: no implicit conversion of Symbol into Integer</code>. What is the proper way of doing this?</p>
","2988","","<p>An <code>Array</code> maps indices to objects, so you access it by index, not by value:</p>

<pre><code>plugins = [:one, :two, :three]

plugins[0] # =&gt; :one
plugins[2] # =&gt; :three
</code></pre>
"
"<p>Can you modify a class when you call a class method? Or is it just for setting attributes, like this example.</p>

<pre><code>class UnitedStatesPresident

  def self.citizenship

     ""United States of America""

 end

end

p UnitedStatesPresident.citizenship
</code></pre>
","2988","","<p>Yes, you can modify a class using a ""class method"". (Note that actually, there is no such thing as a class method. Class methods are just singleton methods like any other singleton method. And in fact, singleton methods don't exist either, they are just regular instance methods of the singleton class. Or, they are just instance methods of the class of a class, which is <code>Class</code> or any of its superclasses (<code>Module</code>, <code>Object</code>, <code>BasicObject</code>).)</p>

<p>In fact, I am surprised that you haven't come across some class methods that modify the class already! Here are some examples:</p>

<ul>
<li><code>Module#private</code> without arguments: sets the default visibility for methods defined after it to <code>private</code></li>
<li><code>Module#protected</code> without arguments: sets the default visibility for methods defined after it to <code>protected</code></li>
<li><code>Module#public</code> without arguments: sets the default visibility for methods defined after it to <code>public</code></li>
<li><code>Module#attr_reader</code> generates a getter method</li>
<li><code>Module#attr_writer</code> generates a setter method</li>
<li><code>Module#attr_accessor</code> generates a getter/setter method pair</li>
<li><code>Module#include</code> mixes a module into the inheritance chain as a superclass</li>
<li><code>Module#prepend</code> mixes a module into the inheritance chain right below</li>
<li><code>Module#alias_method</code> creates a copy of a method</li>
<li><code>Module#const_set</code> sets a constant</li>
<li><code>Module#remove_const</code> removes a constant</li>
<li><code>Module#class_variable_set</code> sets a class variable</li>
<li><code>Module#remove_class_variable</code> removes a class variable</li>
<li><code>Module#define_method</code> defines a method</li>
<li><code>Module#undef_method</code> undefines a method</li>
<li><code>Module#remove_method</code> removes a method</li>
<li><code>Module#refine</code> creates a refinement</li>
<li><code>Module#using</code> activates a refinement</li>
</ul>

<p>I am very surprised that you haven't come across <code>alias_method</code>, <code>private</code> or <code>attr_*</code> yet.</p>
"
"<p>why there is no <code>.gemspec</code> file in some gems, eg. <code>rspec</code> or <code>rspec-rails</code>, if there is no <code>.gemspec</code> file, how did the gem build ?</p>

<p>thanks!</p>
","2988","","<p>The <code>.gemspec</code> is needed to build the gem, but not to use it. Why would it be in the gem? The spec is already contained in the gem's metadata, why duplicate it?</p>

<pre><code>gem spec rspec
# --- !ruby/object:Gem::Specification
# name: rspec
# version: !ruby/object:Gem::Version
#   version: 3.0.0
# platform: ruby
# authors:
# - Steven Baker
# - David Chelimsky
# - Myron Marston
# autorequire: 
# bindir: bin
# cert_chain: []
# date: 2014-06-02 00:00:00.000000000 Z
# dependencies:
# - !ruby/object:Gem::Dependency
#   name: rspec-core
#   requirement: !ruby/object:Gem::Requirement
#     requirements:
#     - - ""~&gt;""
#       - !ruby/object:Gem::Version
#         version: 3.0.0
#   type: :runtime
#   prerelease: false
#   version_requirements: !ruby/object:Gem::Requirement
#     requirements:
#     - - ""~&gt;""
#       - !ruby/object:Gem::Version
#         version: 3.0.0
# - !ruby/object:Gem::Dependency
#   name: rspec-expectations
#   requirement: !ruby/object:Gem::Requirement
#     requirements:
#     - - ""~&gt;""
#       - !ruby/object:Gem::Version
#         version: 3.0.0
#   type: :runtime
#   prerelease: false
#   version_requirements: !ruby/object:Gem::Requirement
#     requirements:
#     - - ""~&gt;""
#       - !ruby/object:Gem::Version
#         version: 3.0.0
# - !ruby/object:Gem::Dependency
#   name: rspec-mocks
#   requirement: !ruby/object:Gem::Requirement
#     requirements:
#     - - ""~&gt;""
#       - !ruby/object:Gem::Version
#         version: 3.0.0
#   type: :runtime
#   prerelease: false
#   version_requirements: !ruby/object:Gem::Requirement
#     requirements:
#     - - ""~&gt;""
#       - !ruby/object:Gem::Version
#         version: 3.0.0
# description: BDD for Ruby
# email: rspec@googlegroups.com
# executables: []
# extensions: []
# extra_rdoc_files: []
# files: []
# homepage: http://github.com/rspec
# licenses: []
# metadata: 
# post_install_message: 
# rdoc_options: []
# require_paths:
# - lib
# required_ruby_version: !ruby/object:Gem::Requirement
#   requirements:
#   - - ""&gt;=""
#     - !ruby/object:Gem::Version
#       version: '0'
# required_rubygems_version: !ruby/object:Gem::Requirement
#   requirements:
#   - - ""&gt;=""
#     - !ruby/object:Gem::Version
#       version: '0'
# requirements: []
# rubyforge_project: rspec
# rubygems_version: 2.2.2
# signing_key: 
# specification_version: 4
# summary: rspec-3.0.0
# test_files: []
# has_rdoc: true
</code></pre>
"
"<p>I'm surprised by a particular bit of syntax-sensitivity in Ruby.  These all work:</p>

<pre><code> var = method arg
 var2 = (var1 = method arg)
 method2(method1 arg)
</code></pre>

<p>But this does not:</p>

<pre><code>method2(var = method1 arg)
</code></pre>

<p>Instead, I have to do either this, with extra parentheses:</p>

<pre><code>method2(var = method1(arg))
</code></pre>

<p>..or this, which I find much more ambiguous than the version that fails:</p>

<pre><code>method2 var = method1(arg)
</code></pre>

<p>I assume that this is either a specific design decision or the side effect of another one, and would appreciate any insight into those decisions.   </p>

<p>Please note that I'm not looking for any opinions about style; I'm not asking what looks better, or what you think should or should not work.  I will even stipulate that this particular construct would be clearer if split into two separate statements entirely. I'm just curious about the actual reasons why Ruby works this way, from anyone who might have that background information.</p>
","2988","","<blockquote>
  <p>I assume that this is either a specific design decision or the side effect of another one, and would appreciate any insight into those decisions.</p>
</blockquote>

<p>Ruby's syntax is ridiculously complex. And since most Ruby implementations use a parser generator like Bison, which however isn't actually powerful enough to parse such a ridiculously complex language, <a href=""https://github.com/ruby/ruby/blob/trunk/parse.y"" rel=""nofollow"">the parsers tend to be even more ridiculously complex</a>. It's much more likely that it's two weird parsing corner cases interacting in an even weirder way than any sort of conscious design decision. </p>
"
"<p>Hi I am studying the scala language and have a question. I am reading a book and one of the example says that 0 to 2 is same as (0).to(2). How can I interpret this syntax?? I mean, I can see that to is a function that takes one integer value as its parameter. But what is ""(0)."" part?? Thanks</p>
","2988","","<blockquote>
  <p>I mean, I can see that <code>to</code> is a function that takes one integer value as its parameter.</p>
</blockquote>

<p>No, it's not a function, it's a method.</p>

<p>Methods are invoked by sending a message to an object:</p>

<pre><code>foo.bar(baz)
</code></pre>

<p>This means ""send the message <code>bar</code> with the object referenced by <code>baz</code> as argument to the object referenced by <code>foo</code>. This will in turn cause the method <code>bar</code> in <code>foo</code>'s class or one of its ancestors to be invoked.</p>

<p>So, <code>to</code> is the message, <code>2</code> is the argument, and <code>0</code> is the receiver of the message.</p>

<p>Scala allows you to use either a <code>.</code> or whitespace for message sending:</p>

<pre><code>foo bar(baz)
// is the same as
foo.bar(baz)
</code></pre>

<p>Also, when using whitespace for message sending, you can leave off the parentheses of the last argument list if it has only a single argument:</p>

<pre><code>foo bar baz
// is the same as
foo bar(baz)
</code></pre>

<p>And lastly, parentheses are not only used for argument lists, they are also used for grouping. (And tuple literals as well.) You can always surround an expression with parentheses to clarify its precedence:</p>

<pre><code>(foo).bar(baz)
// is the same as
foo.bar(baz)
</code></pre>
"
"<p>The object_id of 0 is 1, of 1 is 3, of 2 is 5.</p>

<p>Why is this pattern like this? What is behind the Fixnums that make to create that pattern of object_ids? I would expect that if 0 has id 1, 1 has id 2, 2 has id 3.. And so on.</p>

<p>What am I missing?</p>
","2988","","<p>First things first: the <em>only</em> thing that the Ruby Language Specification guarantees about <code>object_id</code>s is that they are unique <em>in space</em>. That's it. They aren't even unique in time.</p>

<p>So, at any given time there can only be one object with a specific <code>object_id</code> <em>at the same time</em>, however, <em>at different times</em>, <code>object_id</code>s may be reused for different objects.</p>

<p>To be fully precise: what Ruby guarantees is that</p>

<ul>
<li><code>object_id</code> will be an <code>Integer</code></li>
<li>no two objects will have the same <code>object_id</code> at the same time</li>
<li>an object will have the same <code>object_id</code> over its entire lifetime</li>
</ul>

<p>What you are seeing is a side-effect of how <code>object_id</code> and <code>Fixnum</code>s are implemented in YARV. This is a private internal implementation detail of YARV that is not guaranteed in any way. Other Ruby implementations may (and do) implement them differently, so this is not guaranteed to be true across Ruby implementations. It is not even guaranteed to be true across different versions of YARV, or even for the same version on different platforms.</p>

<p>And in fact, it actually <em>did</em> change quite recently, and it <em>is</em> different between 32-bit and 64-bit platforms.</p>

<p>In YARV, <code>object_id</code> is simply implemented as returning the memory address of the object. That's one piece of the puzzle.</p>

<p>Nut, why are the memory addresses of <code>Fixnum</code>s so regular? Well, actually, in <em>this</em> case, they <em>aren't</em> memory addresses! YARV uses a special trick to encode some objects into pointers. There are some pointers which aren't actually being used, and so you can use them to encode certain things.</p>

<p>This is called a <em>tagged pointer</em> representation, and is a pretty common optimization trick used in many different interpreters, VMs and runtime systems for decades. Pretty much every Lisp implementation uses them, many Smalltalk VMs, many Ruby interpreters, and so on.</p>

<p>Usually, in those languages, you always pass around pointers to objects. An object itself consists of an object header, which contains object metadata (like the type of an object, its class(es), maybe access control restrictions or security annotations and so on), and then the actual object data itself. So, a simple integer would be represented as a pointer plus an object consisting of metadata and the actual integer. Even with a very compact representation, that's something like 6 Byte for a simple integer.</p>

<p>Also, you cannot pass such an integer object to the CPU to perform fast integer arithmetic. If you want to add two integers, you <em>really</em> only have two pointers, which point to the beginning of the object headers of the two integer objects you want to add. So, you first need to perform integer arithmetic on the first pointer to add the offset into the object to it where the integer data is stored. Then you have to dereference that address. Do the same again with the second integer. Now you have two integers you can actually ask the CPU to add. Of course, you need to now construct a new integer object to hold the result.</p>

<p>So, in order to perform <em>one</em> integer addition, you actually need to perform <em>three</em> integer additions plus two pointer dererefences plus one object construction. And you take up almost 20 bytes.</p>

<p>However, the trick is that with so-called <em>immutable value types</em> like integers, you usually don't <em>need</em> all the metadata in the object header: you can just leave all that stuff out, and simply synthesize it (which is VM-nerd-speak for ""fake it""), when anyone cares to look. A fixnum will <em>always</em> have class <code>Fixnum</code>, there's no need to separately store that information. If someone uses reflection to figure out the class of a fixnum, you simply reply <code>Fixnum</code> and nobody will ever know that you didn't actually store that information in the object header and that in fact, there <em>isn't</em> even an object header (or an object).</p>

<p>So, the trick is to store the value <em>of</em> the object within the pointer <em>to</em> the object, effectively collapsing the two into one.</p>

<p>There are CPUs which actually have additional space within a pointer (so-called <em>tag bits</em>) that allow you to store extra information about the pointer within the pointer itself. Extra information like ""this isn't actually a pointer, this is an integer"". Examples include the Burroughs B5000, the various Lisp Machines or the AS/400. Unfortunately, most of the current mainstream CPUs don't have that feature.</p>

<p>However, there is a way out: most current mainstream CPUs work significantly slower when addresses aren't aligned on word boundaries. Some even don't support unaligned access at all.</p>

<p>What this means is that in practice, <em>all</em> pointers will be divisible by 4 (on a 32-bit system, 8 on a 64-bit system), which means they will <em>always</em> end with two (three on a 64-bit system) <code>0</code> bits. This allows us to distinguish between <em>real</em> pointers (that end in <code>00</code>) and pointers which are actually integers in disguise (those that end with <code>1</code>). And it still leaves us with all pointers that end in <code>10</code> free to do other stuff. Also, most modern operating systems reserve the very low addresses for themselves, which gives us another area to mess around with (pointers that start with, say, 24 <code>0</code>s and end with <code>00</code>).</p>

<p>So, you can encode a 31-bit (or 63-bit) integer into a pointer, by simply shifting it 1 bit to the left and adding <code>1</code> to it. And you can perform <em>very fast</em> integer arithmetic with those, by simply shifting them appropriately (sometimes not even that is necessary).</p>

<p>What do we do with those other address spaces? Well, typical examples include encoding <code>float</code>s in the other large address space and a number of special objects like <code>true</code>, <code>false</code>, <code>nil</code>, the 127 ASCII characters, some commonly used short strings, the empty list, the empty object, the empty array and so on near the <code>0</code> address.</p>

<p>In YARV, integers are encoded the way I described above, <code>false</code> is encoded as address <code>0</code> (which just so happens <em>also</em> to be the representation of <code>false</code> in C), <code>true</code> as address <code>2</code> (which just so happens to be the C representation of <code>true</code> shifted by one bit) and <code>nil</code> as <code>4</code>.</p>

<p>In <a href=""https://github.com/ruby/ruby/blob/trunk/include/ruby/ruby.h#L391-L397"" rel=""nofollow"">YARV</a>, the following bit patterns are used to encode certain special objects:</p>

<pre><code>xxxx xxxx … xxxx xxx1    Fixnum
xxxx xxxx … xxxx xx10    flonum
0000 0000 … 0000 1100    Symbol
0000 0000 … 0000 0000    false
0000 0000 … 0000 1000    nil
0000 0000 … 0001 0100    true
0000 0000 … 0011 0100    undefined
</code></pre>

<p><code>Fixnum</code>s are 63-bit integers that fit into a single machine word, <code>flonum</code>s are 62-bit <code>Float</code>s that fit into a single machine word. <code>false</code>, <code>nil</code> and <code>true</code> are what you would expect, <code>undefined</code> is a value that is only used inside the implementation but not exposed to the programmer.</p>

<p>Note that on 32-bit platforms, <code>flonum</code>s aren't used (there's no point in using 30-bit <code>Float</code>s), and so the bit patterns are different. <code>nil.object_id</code> is <code>4</code> on 32-bit platforms, not <code>8</code> like on 64-bit platforms, for example.</p>

<p>So, there you have it:</p>

<ul>
<li>certain small integers are encoded as pointers</li>
<li>pointers are used for <code>object_id</code>s</li>
</ul>

<p>Therefore</p>

<ul>
<li>certain small integers have predictable <code>object_id</code>s</li>
</ul>
"
"<p>Is there a built-in method to do this :</p>

<pre><code>value = value.is_a?(String) ? value.to_i : value
</code></pre>

<p>in form of:</p>

<pre><code>value.apply_if!(:to_i, value.is_a?(String))
</code></pre>

<p>?</p>
","2988","","<p>No, unfortunately, this isn't possible. You want to change the binding of a variable by calling a method on the variable, but that's not possible: variables aren't objects, you cannot call methods on them.</p>
"
"<p>I'm a self taught programmer and started off with Ruby. I'm currently trying to learn algorithms and data structures and noticed something called a linked list. It looks like Ruby doesn't have that data structure (maybe in Array?). I'm familiar with arrays and hashes.</p>

<p>How would you describe/explain what a linked list is for someone coming from my background?</p>
","2988","","<p>Linked lists are rather simple: they are lists which are created by linking the elements together. (Kind of obvious, when you think about it, no?)</p>

<p>In its most basic form, a linked list is simply either empty or a pair. The first element of the pair is a value, and the second element of the pair is a linked list representing the rest of the values.</p>

<p>Traditionally, the pair is called a <em>cons cell</em>, the first element is called the <em>head</em> or the <em>car</em> of the list and the second element is called the <em>tail</em> or the <em>cdr</em> of the list. The empty list is called <code>Nil</code> or simply <code>[]</code>.</p>

<p>Here is an extremely simple implementation of a linked list in Ruby, which uses nothing but functions to implement a linked list (and booleans and conditionals, while we're at it):</p>

<pre><code>True   = -&gt;(iff, _) { iff }
False  = -&gt;(_, els) { els }

Pair   = -&gt;(first, rest) { -&gt; x { x.(first, rest) }}
First  = -&gt; list { list.(True ) }
Rest   = -&gt; list { list.(False) }
</code></pre>

<p>Here, we have a simple list with three elements:</p>

<pre><code>List   = Pair.(1, Pair.(2, Pair.(3, nil)))

First.(Rest.(List))
# =&gt; 2
</code></pre>

<p>A more realistic object-oriented encoding of a list looks like this:</p>

<pre><code>class List
  def cons(el) Pair.new(el, self) end

  Empty = new

  class Pair &lt; self
    attr_reader :first, :rest

    def initialize(first, rest=Empty)
      self.first, self.rest = first, rest
    end

    private

    attr_writer :first, :rest
  end
end
</code></pre>

<p>Again, a list with two elements:</p>

<pre><code>list1 = List::Pair.new(1, List::Pair.new(2, List::Pair.new(3, List::Empty)))
# corresponds to the list [1, 2, 3]

list1.rest.first
# =&gt; 2

list2 = List::Empty.cons(6).cons(5).cons(4)
# List[4, 5, 6]

list2.rest.first
# =&gt; 5
</code></pre>

<p>A more complete and Rubyish implementation might look like this:</p>

<pre><code>class List
  include Enumerable

  def self.[](*els) els.reverse_each.inject(Empty, &amp;:cons) end

  def cons(el) Pair[el, self] end

  def prepend(prefix)
    case
    when        empty? then prefix
    when prefix.empty? then self
    else prepend(prefix.rest).cons(prefix.first)
    end
  end

  def to_s; ""List[#{map(&amp;:to_s).join(', ')}]"" end
  def inspect; ""List[#{map(&amp;:inspect).join(', ')}]"" end

  def each; return enum_for(__method__) unless block_given? end

  class &lt;&lt; Empty = new
    def empty?; true end
    alias_method :inspect, def to_s; 'Empty' end

    freeze
  end
  Empty.freeze

  class Pair &lt; self
    def initialize(first, rest=Empty)
      self.first, self.rest = first, rest
      freeze
    end

    def empty?; false end

    def each(&amp;blk)
      return super unless block_given?
      yield first
      rest.each(&amp;blk)
    end

    private
    attr_writer :first, :rest

    protected
    attr_reader :first, :rest

    class &lt;&lt; self; alias_method :[], :new end

    freeze
  end

  freeze
end
</code></pre>

<p>Some examples:</p>

<pre><code>list1 = List::Pair[1, List::Pair[2, List::Pair[3, List::Empty]]]
# =&gt; List[1, 2, 3]

list2 = List::Empty.cons(6).cons(5).cons(4)
# =&gt; List[4, 5, 6]

list3 = List[7, 8, 9]
# =&gt; List[7, 8, 9]

list4 = list3.prepend(list2).prepend(list1)
# =&gt; List[1, 2, 3, 4, 5, 6, 7, 8, 9]

list4.partition(&amp;:odd?)
# =&gt; [[1, 3, 5, 7, 9], [2, 4, 6, 8]]
</code></pre>
"
"<p>In the book Functional Programming in Scala MEAP v10, the author mentions</p>

<blockquote>
  <p>Polymorphic functions are often so constrained by their type that they only have one implementation!</p>
</blockquote>

<p>and gives the example</p>

<pre><code>def partial1[A,B,C](a: A, f: (A,B) =&gt; C): B =&gt; C = (b: B) =&gt; f(a, b)
</code></pre>

<p>What does he mean by this statement? Are polymorphic functions restrictive?</p>
","2988","","<p>Here's a simpler example:</p>

<pre><code>def mysteryMethod[A, B](somePair: (A, B)): B = ???
</code></pre>

<p>What does this method do? It turns out, that there is only <em>one</em> thing this method can do! You don't need the name of the method, you don't need the implementation of the method, you don't need any documentation. The <em>type</em> tells you everything it could possibly do, and it turns out that ""everything"" in this case is exactly <em>one</em> thing.</p>

<p>So, what does it do? It takes a pair <code>(A, B)</code> and returns some value of type <code>B</code>. What value does it return? Can it construct a value of type <code>B</code>? No, it can't, because it doesn't know what <code>B</code> is! Can it return a random value of type <code>B</code>? No, because randomness is a side-effect and thus would have to appear in the type signature. Can it go out in the universe and fetch some <code>B</code>? No, because <em>that</em> would be a side-effect and would have to appear in the type signature!</p>

<p>In fact, the <em>only</em> thing it can do is return the value of type <code>B</code> that was passed into it, the second element of the pair. So, this <code>mysteryMethod</code> is really the <code>second</code> method, and its only sensible implementation is:</p>

<pre><code>def second[A, B](somePair: (A, B)): B = somePair._2
</code></pre>

<p>Note that in reality, since Scala is neither pure nor total, there are in fact a couple of other things the method could do: throw an exception (i.e. return abnormally), go into an infinite loop (i.e. not return at all), use reflection to figure out the actual type of <code>B</code> and reflectively invoke the constructor to fabricate a new value, etc.</p>

<p>However, assuming purity (the return value may only depend on the arguments), totality (the method must return a value normally) and parametricity (it <em>really</em> doesn't know anything about <code>A</code> and <code>B</code>), then there is in fact an awful lot you can tell about a method by <em>only</em> looking at its type.</p>

<p>Here's another example:</p>

<pre><code>def mysteryMethod(someBoolean: Boolean): Boolean = ???
</code></pre>

<p>What could this do? It could always return <code>false</code> and ignore its argument. But then it would be overly constrained: if it always ignores its argument, then it doesn't care that it is a <code>Boolean</code> and its type would rather be</p>

<pre><code>def alwaysFalse[A](something: A): Boolean = false // same for true, obviously
</code></pre>

<p>It could always just return its argument, but again, then it wouldn't actually care about booleans, and its type would rather be</p>

<pre><code>def identity[A](something: A): A = something
</code></pre>

<p>So, really, the only thing it can do is return a <em>different</em> boolean than the one that was passed in, and since there are only two booleans, we know that our mysteryMethod is, in fact, <code>not</code>:</p>

<pre><code>def not(someBoolean: Boolean): Boolean = if (someBoolean) false else true
</code></pre>

<p>So, here, we have an example, where the types don't give us <em>the</em> implementation, but at least, they give as a (small) set of 4 possible implementations, only one of which makes sense.</p>

<p>(By the way: it turns out that there is only one possible implementation of a method which takes an <code>A</code> and returns an <code>A</code>, and it is the identity method shown above.)</p>

<p>So, to recap:</p>

<ul>
<li>purity means that you can only use the building blocks that were handed to you (the arguments)</li>
<li>a strong, strict, static type system means that you can only use those building blocks in such a way that their types line up</li>
<li>totality means that you can't do stupid things (like infinite loops or throwing exceptions)</li>
<li>parametricity means that you cannot make any assumptions at all about your type variables</li>
</ul>

<p>Think about your arguments as parts of a machine and your types as connectors on those machine parts. There will only be a limited number of ways that you can connect those machine parts together in a way that you only plug together compatible connectors and you don't have any leftover parts. Often enough, there will be only one way, or if there are multiple ways, then often one will be obviously the right one.</p>

<p>What this means is that, once you have designed the types of your objects and methods, you won't even have to <em>think</em> about how to implement those methods, because the types will already dictate the only possible way to implement them! Considering how many questions on StackOverflow are basically ""how do I implement this?"", can you imagine how freeing it must be not having to think about that <em>at all</em>, because the types already dictate the one (or one of a few) possible implementation?</p>

<p>Now, look at the signature of the method in your question and try playing around with different ways to combine <code>a</code> and <code>f</code> in such a way that the types line up and you use both <code>a</code> and <code>f</code> and you will indeed see that there is only one way to do that. (As Chris and Paul have shown.)</p>
"
"<p>I often need to get the pure class name of an object, as code below:</p>

<pre><code>class Foo
    class Bar

    end
end
obj = Foo::Bar.new
puts obj.class.name  # It shows ""Foo::Bar"", while what I want is just ""Bar""
</code></pre>

<p>I know it can be done by obj.class.name.split('::').last, but, shouldn't be there a method just return ""Bar"" ?</p>
","2988","","<p>Classes don't really have ""names"" in Ruby. A class is an object like any other object, it gets assigned to variables like any other object. A class doesn't have a name, just like a number or a string doesn't have a name.</p>

<p>Take this example:</p>

<pre><code>foo = Class.new

Bar = foo
Baz = foo

Bar = nil
remove_const :Bar
</code></pre>

<p>What should the ""name"" of the class be in this example?</p>

<p>Well, there <em>is</em> a method called <code>name</code> in the <code>Module</code> class. What it does is the following: <em>if</em> the class object has been assigned to a constant for the first time, the name of that constant (note that even <em>that</em> is a fuzzy concept!) becomes the name of the class, otherwise the name will just be <code>nil</code>.</p>

<p>Expanding on the example above:</p>

<pre><code>foo = Class.new

foo.name
# =&gt; nil

Bar = foo

foo.name
# =&gt; 'Bar'
Bar.name
# =&gt; 'Bar'

Baz = foo

Baz.name
# =&gt; 'Bar'

Bar = nil
remove_const :Bar

foo.name
# =&gt; 'Bar'
</code></pre>

<p>Here's another example:</p>

<pre><code>foo = Class.new
Bar = foo
Baz = foo

class Baz
  class Quux; end

  Xyzzy = Quux
end

foo::Xyzzy.name
# =&gt; 'Bar::Quux'
</code></pre>

<p>Note that even though <code>Quux</code> is defined inside <code>Baz</code> and accessed via <code>foo::Xyzzy</code> it still prints <code>Bar::Quux</code> as its name.</p>

<p>Also, two different classes can have the same name:</p>

<pre><code>Foo = Class.new

Bar = Foo

Foo = nil
remove_const :Foo

Foo = Class.new

Baz = Foo

Foo = nil
remove_const :Foo

Bar.name
# =&gt; Foo

Baz.name
# =&gt; Foo

Bar == Baz
# =&gt; false
</code></pre>

<p>The ""name"" of a class is simply a debugging help for human readers, you should <em>never</em> use it for anything else, and never use it programmatically (or even depend on a specific structure of the string).</p>
"
"<p>In JavaScript you can shoe horn a method onto an object using call, apply or bind methods. I'm curious if there is an equivalent of this kind of thing in Ruby.</p>

<pre><code>var item = {
    color:""green""
};


function getColor(){
    return this.color
};


getColor.call(item);  
</code></pre>
","2988","","<p>You can <code>bind</code> an <code>UnboundMethod</code> to an object, but <em>only</em> if the object is an instance of the <code>owner</code> of the <code>UnboundMethod</code>:</p>

<pre><code>class Super
  def m(arg) ""super #@i #{arg}"" end
end

class Sub &lt; Super
  def m(arg) ""sub #@i #{arg}"" end
  def initialize; @i = 'sub' end
end

class Unrelated
  def m(arg) ""unrelated #@i #{arg}"" end
end

o = Sub.new

um = Super.instance_method(:m)
bm = um.bind(o)
bm.('works')
# =&gt; 'super sub works'

um = Unrelated.instance_method(:m)
bm = um.bind(o)
# TypeError: bind argument must be an instance of Unrelated
</code></pre>
"
"<pre><code>class Foo
end

class_name = 'Foo'
f = eval(class_name).new
#&lt;Foo:0x007fd3e273ed68&gt;
</code></pre>

<p>This example creates the expected instance of Foo.</p>

<p>The class is expected to be defined, but we want to instantiate an object of the class defined in <code>class_name</code>.</p>

<p>The value for <code>class_name</code> is coming from the user, so the above code is a Very Bad Idea&trade;...</p>
","2988","","<p>A class is nothing special. It is just an object assigned to a variable, or in the case of the code you showed, a constant. So, you can use the same metaprogramming methods to retrieve a class from a variable as you would use with any other object: <a href=""http://Ruby-Doc.Org/core-2.2.0.preview1/Object.html#method-i-instance_variable_get"" rel=""nofollow""><code>Object#instance_variable_get</code></a>, <a href=""http://Ruby-Doc.Org/core-2.2.0.preview1/Module.html#method-i-class_variable_get"" rel=""nofollow""><code>Module#class_variable_get</code></a>, <a href=""http://Ruby-Doc.Org/core-2.2.0.preview1/Binding.html#method-i-local_variable_get"" rel=""nofollow""><code>Binding#local_variable_get</code></a>, <a href=""http://Ruby-Doc.Org/core-2.2.0.preview1/Thread.html#method-i-thread_variable_get"" rel=""nofollow""><code>Thread#thread_variable_get</code></a>, or the one which is applicable in this case <a href=""http://Ruby-Doc.Org/core-2.2.0.preview1/Module.html#method-i-const_get"" rel=""nofollow""><code>Module#const_get</code></a>:</p>

<pre><code>class Foo; end

class_name = 'Foo'
foo = Object.const_get(class_name).new
#=&gt; #&lt;Foo:0x007fd3e273ed68&gt;

foo = self.class.const_get(class_name).new
#=&gt; #&lt;Foo:0x007fd3e273ed68&gt;
</code></pre>

<p>Note that the code in the other two answers only works accidentally: they look up <code>Foo</code> in the context of the <code>Module</code> class, which only works because you have <em>actually</em> defined <code>Foo</code> in <code>Object</code> and <code>Module</code> inherits from <code>Object</code>. If you had defined <code>Foo</code> not in an ancestor but in a sibling of <code>Module</code>, then the code in the other two answers wouldn't work:</p>

<pre><code>module Bar; class Foo; end end

Module.const_get(:Foo)
# NameError: uninitialized constant Module::Foo

Bar.const_get(:Foo)
# =&gt; Bar::Foo
</code></pre>

<p>If you want <code>const_get</code> to behave the same way that normal constant lookup would, you need to call it on the class/module you want to actually look it up in, not on some random class.</p>
"
"<p>class variable works like this:</p>

<pre><code>class Hello
  @@x = 0

  def self.counter
   @@x
  end

  def initialize
    @@x += 1
  end  
end

Hello.new
Hello.new
Hello.new
p Hello.counter
#=&gt; 3
</code></pre>

<p>but class instance variable doesn't:</p>

<pre><code>class Goodbye
  @x = 0

  def self.counter
   @x
  end

  def initialize
    @x += 1
  end  
end

Goodbye.new
Goodbye.new
Goodbye.new
Goodbye.new
p Goodbye.counter
#=&gt; Error
</code></pre>

<p>What am I doing wrong ? I was under impression that class instance variables are same as class variables, just without inheritance problem ... but how do you use them (for example, to count instances of specific class like in code I posted here) ?</p>
","2988","","<p>Instance variables belong to objects (instances), that's why they are called that. In lines 2 and 5, <code>@x</code> belongs to the object <code>Goodbye</code>, but in line 9, <code>@x</code> belongs to an instance of <code>Goodbye</code>. You never initialize <em>this</em> instance variable, and uninitialized instance variables evaluate to <code>nil</code>, <code>nil</code> doesn't have a <code>+</code> method, ergo you get a <code>NoMethodError</code>.</p>

<p>Note that <code>Goodbye.counter</code> does <em>not</em> raise an error like you claim, it simply returns <code>0</code>. The error is raised inside <code>initialize</code>.</p>

<p>Here's the trivial fix:</p>

<pre><code>class Goodbye
  @x = 0

  def self.counter
   @x
  end

  def self.new
    @x += 1
    super
  end  
end

Goodbye.new
Goodbye.new
Goodbye.new
Goodbye.new
p Goodbye.counter
#=&gt; 4
</code></pre>
"
"<p>I am writing a simple script program that uses require, but it's not working as I expected.</p>

<p>Schematic is here:</p>

<pre><code>###document_1
-some methods
-require_relative document_2
- print variable defined in document_2
</code></pre>

<p>document_1 can't read a variable defined in document_2</p>

<pre><code>###document_2
a script that calls methods defined in document_1
</code></pre>

<p>But document_2 can't see the methods in document_1</p>

<p>If someone could help with a link to some good resources explaining ruby document scope, or a short explanation that would be really helpful :)</p>
","2988","","<p>Local variables are local to the scope they are defined in. Local variables defined in a block are local to that block. Local variables defined in a method are local to that method. Local variables defined in a class are local to that class. Local variables defined in a module are local to that module. Local variables defined in a script are local to that script.</p>

<p>That's why they are called ""local"" variables, after all!</p>
"
"<p>The code below obviously does not work, but this is what I had in mind. Is there a way to create methods like the two below using <code>item</code>, without repeating the <code>doc.css("".main_entry"").each do |item|</code> over and over?</p>

<pre><code>class Scraper      
.
.
.
  doc.css("".main_entry"").each do |item|
    def artist 
      @artist ||= item.at_css("".list_artist"").text
    end

    def title
      @title ||= item.at_css("".list_album"").text
    end
  end
.
.
.
end

puts scraper.artist
puts scraper.title
</code></pre>
","2988","","<p>You almost have it. However, method scopes don't nest, the only construct in Ruby that creates a nested scope is a block. Thankfully, there is a method for defining methods that takes a block as an argument:</p>

<pre><code>class Scraper      
.
.
.
  doc.css("".main_entry"").each do |item|
    define_method(:artist) do 
      @artist ||= item.at_css("".list_artist"").text
    end

    define_method(:title) do
      @title ||= item.at_css("".list_album"").text
    end
  end
.
.
.
end

puts scraper.artist
puts scraper.title
</code></pre>

<p>However, note that this has the exact same problem that your original code would have had if it had worked: you are simply overwriting the same method over and over and over again.</p>
"
"<p>Let's say I declared variable <code>@counter=0</code> in my <code>initialize</code> method, and in some part of my code, I want to reset it again to its original value. Though I can manually do <code>@counter=0</code>, I want to know if there is any way to reset it to its original assigned value. something like example: <code>@counter.reset</code>  </p>

<pre><code>def initialize
  @counter = 0
  ...
end
def first
  @some_string.each do |f|
    if f == ''
      @counter += 1 
    end
    @counter = 0 # Want to change it here
  end
end
</code></pre>
","2988","","<p>Variables aren't objects in Ruby, you can't tell them to do anything. There are exactly two things you can do with a variable: assign it and dereference it.</p>
"
"<p>When you define a method, it returns a symbol with the same name as the method. Is there a point to this? Or is it just there as validation that you created it?</p>

<p>Like so:</p>

<pre><code>def something
   ...
end
# =&gt; :something
</code></pre>
","2988","","<p>IRb <em>always</em> displays the result of calling <code>inspect</code> on the value of the last expression that was evaluated. It doesn't matter whether that expression is a literal expression, a conditional expression, a message send, a class definition expression or a method definition expression.</p>

<p><em>Everything</em> returns a value in Ruby, i.e. <em>everything</em> is an expression, there is no such thing as a statement in Ruby.</p>

<p>In the past, the return value of a method definition expression was undefined. Most Ruby implementations simply returned <code>nil</code> from a method definition expression, but Rubinius for example returned the <code>CompiledMethod</code> object for the method that was defined.</p>

<p>With Ruby 2.1, <a href=""https://bugs.ruby-lang.org/issues/3753"" rel=""nofollow"">the return value of a method definition expression was standardized to be the <code>Symbol</code> corresponding to the method's name</a>. This allows you to use the method definition expression as an argument in methods that expect the name of a method as an argument.</p>

<p>Some examples:</p>

<pre><code># Before Ruby 2.0:
def foo; end
private :foo

# After Ruby 2.0:
private def foo; end # similar for `protected`, `public`, `module_function`

# Before Ruby 2.0:
def map; end
alias_method :collect, :map

# After Ruby 2.0:
alias_method :collect, def map; end
</code></pre>

<p>On a personal note, I would have preferred a method definition expression to evaluate to an <code>UnboundMethod</code> object corresponding to that method, and methods like <code>public</code>, <code>private</code>, <code>protected</code>, <code>alias_method</code>, <code>module_function</code> etc. should be amended to accept <code>UnboundMethod</code>s in addition to <code>Symbol</code>s and <code>String</code>s.</p>
"
"<p>I'm working on a kata that requires the use of lambdas and procs. In the Ruby docs for .parameter, parameter called on an object returns this example straight from the Docs:</p>

<pre><code>prc = lambda{|x,y=42, *other|}
prc.parameters =&gt; [[:req, :x], [:opt, :y], [:rest, :other]]

:req = required
:opt = optional
:rest = ???
</code></pre>

<p>This may be a dumb question but what :rest stands for doesn't immediately come to mind. What does it mean? Thanks.</p>
","2988","","<blockquote>
  <p>This may be a dumb question but what <code>:rest</code> stands for doesn't immediately come to mind. What does it mean?</p>
</blockquote>

<p>It's a <em>rest</em> parameter, i.e. a parameter which gets bound to an array of all the rest of the arguments that are not bound to required or optional arguments.</p>

<p>Here are all the (currently) possible values for the parameter type tag:</p>

<pre><code>-&gt;(req, opt=:o, *rest, kreq:, k: :k, **krest, &amp;b) {}.parameters
# =&gt; [[:req, :req],       # required parameter
#     [:opt, :opt],       # optional parameter with default argument
#     [:rest, :rest],     # rest parameter (bound to an Array)
#     [:keyreq, :kreq],   # required keyword parameter
#     [:key, :k],         # optional keyword parameter with default argument
#     [:keyrest, :krest], # keyword rest parameter (bound to a Hash)
#     [:block, :b]]       # block parameter (bound to a Proc or nil)
</code></pre>

<p>This example shows all possibilities of Ruby's argument binding semantics:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
          ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk)
  local_variables.map {|var| [var, eval(var.to_s)] }.to_h
end

method(:foo).arity
# =&gt; -5

method(:foo).parameters
# =&gt; [[:req, :m1], [:req, :m2], [:opt, :o1], [:opt, :o2], [:rest, :splat], 
#     [:req, :m3], [:req, :m4], [:keyreq, :mk1], [:keyreq, :mk2], 
#     [:key, :ok1], [:key, :ok2], [:keyrest, :ksplat], [:block, :blk]]

foo(1, 2, 3, 4)
# ArgumentError: missing keywords: mk1, mk2

foo(1, 2, 3, mk1: 4, mk2: 5)
# ArgumentError: wrong number of arguments (3 for 4+)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], m3: 3, m4: 4, 
#      ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: :o2, splat: [], m3: 4, m4: 5, 
#      ok1: :ok1, mk1: 6, mk2: 7, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [], m3: 5, m4: 6, 
#      ok1: :ok1, mk1: 7, mk2: 8, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5], m3: 6, m4: 7, 
#      ok1: :ok1, mk1: 8, mk2: 9, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: :ok1, mk1: 9, mk2: 10, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: #&lt;Proc:0xdeadbeefc00l42@(irb):15&gt; }
</code></pre>
"
"<p>New to scala - How to create a <code>Map[String,String]</code>  from <code>Map[String, Any]</code> 
The values of the <code>Map[String,Any]</code> are strings but I don't know how to cast or otherwise coerce the ""<code>Any</code>"" type to a ""<code>String</code>"" type.</p>
","2988","","<p>As the others have already mentioned, the fact that have an <code>Any</code> in the first place, is a sign that something somewhere has gone wrong. The correct solution would be to figure out what went wrong where and fix it.</p>

<p>However, if you <em>really</em> want to cast all the values to <code>String</code>s (which is circumventing the type system, and thus something you <em>shouldn't</em> do), here's how you do it:</p>

<pre><code>val anyMap: Map[String, Any] = Map(""foo"" -&gt; ""bar"", ""baz"" -&gt; ""qux"")

val stringMap = anyMap.mapValues(_.asInstanceOf[String])
// =&gt; stringMap: Map[String, String] = Map(foo -&gt; bar, baz -&gt; qux)
</code></pre>
"
"<p>How did ruby worked before the development of Rack Web Server Interface?</p>

<p>Specifically for what purpose we are using the Rack Middleware?</p>

<p>Please explain with clear real-time example.</p>
","2988","","<p>Rack is only one of a myriad of webserver interfaces. Before there was Rack, you could still use any of the others: CGI, FCGI, SCGI, for example. Or you could plug a Ruby execution engine directly into a webserver using for example mod_ruby, mod_rubinius or Phusion Passenger for Apache. Or you could do it the other way round and plug a webserver into Ruby using Webrick or Mongrel.</p>

<p>Rack is a standardized interface between a webserver and a web application. But it's not the only such interface, there are others, and before there was Rack, people used those.</p>
"
"<p>I am using linux. What happens if I remove an executive file that is running (I tried and the program is still running)?  What if I remove the linked object files? Does it make a problem?</p>
","2988","","<p>You cannot remove a file in Linux. You can only remove directory entries pointing to the file. The file itself will eventually be removed by the Operating System when there are no more references to the file: no more directory entries pointing to the file, no more open file handles, no more memory mapped regions and so on.</p>

<p>As long as the program is running, there is still a reference to the file, so the file simply won't get removed.</p>

<p>Deleting a library that has already been loaded is the same. The only problems can arise when you delete a library that will only be opened later in the runtime of the program.</p>
"
"<p>First I define <code>!</code> method:</p>

<pre><code>scala&gt; def !() = ""hi""
$bang: ()java.lang.String
</code></pre>

<p>Now I can call it like so:</p>

<pre><code>scala&gt; $bang()
res3: java.lang.String = hi
</code></pre>

<p>But this doesnt' work:</p>

<pre><code>scala&gt; !()
&lt;console&gt;:8: error: value unary_! is not a member of Unit
              !()
</code></pre>

<p>Even this doesn't work:</p>

<pre><code>scala&gt; `!`()
&lt;console&gt;:8: error: value unary_! is not a member of Unit
              `!`()
              ^
</code></pre>

<p>What am I doing wrong here? Why am I allowed to define <code>!()</code> when I can't invoke it?</p>

<p><strong>EDIT1</strong></p>

<p>Adding an object reference gives error:</p>

<pre><code>scala&gt; this.!()
&lt;console&gt;:8: error: value ! is not a member of object $iw
              this.!()
                   ^
</code></pre>
","2988","","<pre><code>!foo
</code></pre>

<p>is interpreted as </p>

<pre><code>foo.unary_!
</code></pre>

<p>If you want to call your method, you must specify an explicit receiver, e.g.</p>

<pre><code>this.!()
</code></pre>

<p>or </p>

<pre><code>this !()
</code></pre>

<p>or </p>

<pre><code>this ! ()
</code></pre>
"
"<p>Here's a snippet of code from the pickaxe book:</p>

<pre><code>def count_frequency(word_list) counts = Hash.new(0)
  for word in word_list
    counts[word] += 1
  end
  counts
end
</code></pre>

<p>The <code>counts</code> at the end sets the return value of the method. The value returned is the value of the last calculation.</p>

<p>However, are there not cases where we don't care what the return value of a method is? For example, I have a pair of nested <code>each</code> loops that draw a checkerboard to console. The values of the calculations are fairly meaningless outside the method. I just want a checkerboard drawn.</p>

<p>Is it bad to leave the return value up to circumstance, or should I always be trying to explicitly design methods that return meaningful values?</p>
","2988","","<p><em>Theoretically</em>, if you document clearly that the return value is meaningless, then you could just incidentally return whatever the last expression in the method happens to evaluate to.</p>

<p><em>Practically</em>, however, nobody reads documentation, so, if your method <em>does</em> return something, then people <em>will</em> come to depend on it. Also, depending on what exactly it is that you are ""accidentally"" returning, you might leak private internal implementation details of your method or you might even break encapsulation of your object by e.g. returning the value of a private instance variable.</p>

<p>Take the <code>defined?</code> unary prefix operator, for example. It is specified as returning either a trueish or a falseish value. However, on MRI, it does not just return any trueish value, it actually returns a <code>String</code> describing the kind of expression that is asked about (e.g. <code>'local-variable'</code>, <code>'method'</code>, etc.) And people have become so dependent on this return value that all other Ruby implementations just <em>have</em> to mimic it, even though it is nowhere documented. Now, it turns out that for MRI this information is trivially available, but for JRuby it is not, and keeping this information around incurs a performance penalty.</p>

<p>The E programming language is a purely expression-based language like Ruby or Lisp. Everything is an expression, there are no statements. Everything returns a value. However, unlike those other languages, the implicit return value of a subroutine is not the value of the last expression evaluated inside the subroutine, it is <code>nil</code>. You <em>must</em> explicitly <code>return</code> a value if you want to return something meaningful. That is because the creator of E believes that it is too dangerous to accidentally return something you didn't want. (E is explicitly designed for security, safety, integrity and reliability.)</p>
"
"<p>I am new to ruby and didn't understand what this statement does.</p>

<pre><code>dependency 'multi_json'
</code></pre>

<p>More info: <a href=""https://github.com/vongrippen/bitbucket/blob/master/lib/bitbucket_rest_api/request/jsonize.rb#L11"" rel=""nofollow"">https://github.com/vongrippen/bitbucket/blob/master/lib/bitbucket_rest_api/request/jsonize.rb#L11</a></p>

<p>Any ruby experts, help please.</p>
","2988","","<p>It sends the message <code>dependency</code> to the implicit receiver <code>self</code> passing the <code>String</code> <code>'multi_json'</code> as the only argument.</p>

<p>By the way: it's not a statement, it's an expression. Everything in Ruby is an expression, there are no statements.</p>
"
"<p>I am getting an <code>unexpected keyword_end</code> error and I don't know why:</p>

<pre><code>def add(meeting)
    if conflict?(meeting)
        puts ""There's conflict with another meeting!""
    else
        if @meetings.empty?
            @meetings.push(meeting)
        else
            i = 0
            @meetings.each do |m|
                if m &gt; meeting
                    @meetings.insert(i, meeting)
                    break
                end
                i++
            end
        end
    end
end
</code></pre>

<p>If I delete the <code>each</code> loop there is no problem. I have tried with a <code>while</code> loop and with an <code>until</code> loop and I am getting the same error in all of them.</p>

<p>Can someone explain what I am doing wrong?</p>
","2988","","<p>In line 14, you are adding two numbers, but you forgot to pass the second number, instead the parser is encountering an <code>end</code>. So, the error message is slightly misleading: it's not that the parser isn't expecting an <code>end</code> there, rather it is expecting to see something <em>before</em> the <code>end</code>.</p>
"
"<p>I have a vague sense of the meaning of this term, usually in the context of data structures and algorithms which happen to rely upon swap variables to shuttle data around containers and what not. But I'd like to hear some richer definitions and nuances to people's knowledge of this term. Taking a shot at it myself I'd say doing something in place (interesting subquestion, what verbs can come before inplace? moving inplace? transferring inplace? copying inplace?) is to transfer elements of container data from one memory location to another without recourse to a second copy of the whole container.</p>
","2988","","<p>""inplace"" usually means ""with O(1) additional space"".</p>
"
"<p>My aim is to implement an addition operator for a mathematical vector. I need ability to add scalars, arrays to MyVector. Also i need the operation to be commutative so i can add numbers to MyVector, and MyVector to number. I followed the recipe here <a href=""http://stackoverflow.com/questions/2799571/in-ruby-how-does-coerce-actually-work?lq=1"">In Ruby, how does coerce() actually work?</a> and a few other internet resources to define the following + operator. </p>

<pre><code>class MyVector
    def initialize(x,y,z)
      @x, @y, @z = x, y, z
    end
    def +(other)
      case other
      when Numeric
        MyVector.new(@x + other, @y + other, @z + other)
      when Array
        MyVector.new(@x + other[0], @y + other[1], @z + other[2])
      end
    end
    def coerce(other)
      p ""coercing #{other.class}""
      [self, other]
    end
end

t = MyVector.new(0, 0, 1)

p t + 1
p 1 + t

p t + [3 , 4 , 5]
p [3 , 4 , 5] + t
</code></pre>

<p>and the output is </p>

<pre><code>#&lt;MyVector:0x007fd3f987d0a0 @x=1, @y=1, @z=2&gt;
""coercing Fixnum""
#&lt;MyVector:0x007fd3f987cd80 @x=1, @y=1, @z=2&gt;
#&lt;MyVector:0x007fd3f987cbf0 @x=3, @y=4, @z=6&gt;
test.rb:26:in `&lt;main&gt;': no implicit conversion of MyVector into Array (TypeError)
</code></pre>

<p>Clearly coerce is doing its job when adding numbers but doesn't seem to work for Arrays. Instead the + method on the Array class seems to get called and it tries to convert MyVector to Array, which fails.  My question is, why does the coerce method for MyVector not get called ? </p>
","2988","","<p><code>coerce</code> does coercions for numeric types. An <code>Array</code> is not a numeric type. <code>Array#+</code> is not addition, it is concatenation, it behaves differently from numeric addition, e.g. <code>[1, 2, 3] + [4, 5, 6]</code> is not the same as <code>[4, 5, 6] + [1, 2, 3]</code>.</p>
"
"<p>This little script is supposed to generate a user-specified amount of random numbers and print them. It's a multithreaded script and I think that's where my trouble lies. I'm not getting any errors, but when run the script just hangs.</p>

<pre><code>num = []

while 0.upto ARGV[0].to_i do
  num &lt;&lt; rand{254}
end

current_index = 0

while current_index &lt; num.size

chunk = num[current_index, 5]
threads = []

chunk.each do |n|
  threads &lt;&lt; Thread.new do
    puts n
  end
end

threads.each do |thread|
  thread.join
end

current_index += chunk.size
end
</code></pre>
","2988","","<p><code>upto</code> returns <code>self</code>, which is a number. Everything which isn't <code>false</code> or <code>nil</code> is trueish in Ruby, including numbers. So, you have a <code>while</code> loop whose condition is always trueish, ergo, will never stop.</p>
"
"<p>I thought that defining a <code>to_s</code> method for a custom class meant that calling the <code>puts</code> method on that class would return an output as specified by <code>to_s</code>. In this program, however, I only get the result I crave if I write <code>puts bingo_board.to_s</code>. What is going on?</p>

<pre><code>class BingoBoard &lt; Array
  @@letters = %w[B I N G O]

  def initialize
    # populates an 5x5 array with numbers 1-100
    # to make this accessible across your methods within this class, I made
    # this an instance variable. @ = instance variable
    @bingo_board = Array.new(5) {Array.new(5)}
    @bingo_board.each_with_index do |column, i|
      rangemin = 15 * i + 1
      @bingo_board[i] = (rangemin..(rangemin+14)).to_a.sample(5)
    end
    @bingo_board[2][2] = ""X"" # the 'free space' in the middle
    @game_over = false
  end

  def game_over?
    @game_over
  end

  def generate_call
    ....
  end

  def compare_call(call)
    @bingo_board[@@letters.index(call[0])].include? call[1]
  end

  def react_to_call(call)
    ...
  end

  def check_board
    ...
  end

  def show_column(num)
    ...
  end

  def to_s
    result = """"
    0.upto(4) do |val|
      result += "" "" + @@letters[val] + "" ""
    end
    result += ""\n\n""
    0.upto(4) do |row|
      0.upto(4) do |col|
        val = @bingo_board[col][row]
        result += "" "" if val.to_i &lt; 10
        result += val.to_s + "" ""
      end
      result += ""\n""
    end
    result
  end
end

my_board = BingoBoard.new
counter = 0
until my_board.game_over?
  puts my_board.to_s # renders the board in accordance with my to_s method
  call = my_board.generate_call
  counter += 1
  puts ""\nThe call \# #{counter} is #{call[0]} #{call[1]}""
  my_board.react_to_call(call)
  gets.chomp
end
puts my_board  # renders bubkes (i.e., nothing)
puts ""\n\n""
puts ""Game over""
</code></pre>
","2988","","<p>If the object is an <code>Array</code> or can be converted to one (i.e. it implements <code>to_ary</code>), then <code>puts</code> will not call <code>to_s</code> on the object, but rather <em>iterate</em> over the object and print each object <em>within</em> by calling <code>to_s</code> on it.</p>

<p>See:</p>

<pre><code>puts [1, 2]
# 1
# 2

[1, 2].to_s
# =&gt; '[1, 2]'
</code></pre>

<p><a href=""http://www.ruby-doc.org/core-2.2.0.preview1/IO.html#method-i-puts"" rel=""nofollow"">This <em>is</em> actually documented</a>, although somewhat implicitly:</p>

<blockquote>
  <p>If called with an array argument, writes each element on a new line.</p>
</blockquote>
"
"<p>What is the size of a boolean data type in Ruby? There was a long discussion on <a href=""https://www.ruby-forum.com/topic/4419629"" rel=""nofollow"">Ruby Forum</a> regarding this, but there was no final answer that I could get from it.</p>

<p>Also, how can I find what size it is.</p>

<p>For example if I stored it in an array, how much memory would it take</p>

<pre><code>a=[true, true]
</code></pre>

<p>vs</p>

<pre><code>a=[1,1]
</code></pre>
","2988","","<p>The Ruby Language Specification does not specify any particular representation for any object. Every Ruby Implementation is free to choose any representation it wants.</p>

<p>Note also that not being able to tell the representation of an object is the <em>defining</em> characteristic of Object-Oriented Data Abstraction. If it <em>were</em> possible to tell the size of a <code>Boolean</code>, Ruby wouldn't be object-oriented!</p>
"
"<p>The following defines a method that has an upcased name, and attempts to call it, but fails:</p>

<pre><code>class Module
  def Foo; puts ""foo"" end
end

class A
  Foo
end
# =&gt; uninitialized constant A::Foo
</code></pre>

<p>I understand that existence of a constant with the same name would take precedence over method look up, but there is no such constant in this case.</p>

<p>If I disambiguate it as a method, then the method is detected:</p>

<pre><code>class A
  Foo()
end
# =&gt; foo
</code></pre>

<p>When the method name is not upcased, look up does not fail.</p>

<pre><code>class Module
  def foo; puts ""foo"" end
end

class A
  foo
end
# =&gt; foo
</code></pre>

<p>Why does method look up fail with ambiguous upcased methods?</p>
","2988","","<p>Ruby has a flexible syntax for message sends. In particular, you can leave off the receiver and you can leave off the argument list. If you do both, then such a receiverless argumentless message send is syntactically indistinguishable from a variable dereference.</p>

<p>So, we need some rules to disambiguate between receiverless argumentless message sends and variable dereferences. And those rules are simple:</p>

<ul>
<li>for instance variables, class variables and global variables, there is no ambiguity</li>
<li>for local variables, such a construct is always interpreted as a message send, unless a local variable is in scope, then it is interpreted as a variable dereference</li>
<li>for constants, it is always interpreted as a variable dereference</li>
</ul>

<p>Since this ambiguity only arises when there is a receiverless argumentless message send, it can easily be resolved by adding either a receiver or an argument list.</p>
"
"<p>In the program below, the method of the child class calls the private method of the parent class.</p>

<pre><code>class Parent  
  private
    def new_name
      'Private Method'
    end
end


class Child &lt; Parent
  def get_parent_name
    puts new_name
  end
end

obj = Child.new
obj.get_parent_name
</code></pre>

<p>Ruby is said to be object oriented language so the line</p>

<pre><code>puts new_name
</code></pre>

<p>accesses the private method of parent class. Internally, how does it call the method? As being a Object Oriented Programming Language, it should call it using an object. But an object cannot access a private method.</p>
","2988","","<p>In Ruby, you can make the receiver implicit, in which case it is implied to be <code>self</code>. This is similar to Self, Java, C#, Scala and many other object-oriented languages, and unlike Smalltalk, which always requires an explicit receiver.</p>

<p>Also, you seem to have no trouble at all understanding how the private <code>puts</code> method inherited from <code>Kernel</code> gets called, but there is no difference between <code>puts</code> and <code>new_name</code>, so why are you having trouble with one but not the other?</p>
"
"<pre><code>@custom_column = CustomColumns.configure :projects do |user, tag|
  columns = ModelName.method_name(user,tag)
end

@custom_column.columns should return [""title"", ""description""]
CustomColumns.projects.columns should return [""title"", ""description""]

@custom_column1 = CustomColumns.configure :groups do |domain|
  columns = ModelName.method_name(domain)
end

@custom_column1.columns should return =&gt; [""desctiption"", ""created_at""]
CustomColumns.groups.columns should return =&gt; [""desctiption"", ""created_at""]
</code></pre>

<p>I tried below code to achieve above results. But I don't know how can I pass different arguments in blocks? Or How can I achieve above results ?</p>

<pre><code>module CustomColumns
  class Rule
      attr_accessor :column_for, :columns
  end

  class &lt;&lt; self
    attr_accessor :rule
  end

  def self.configure(column_for, &amp;block)
    @column_for = column_for
    @columns = block.call
  end

end
</code></pre>
","2988","","<p>What you want is not possible. <code>foo = bar</code> is <em>always</em> interpreted as assigning to a local variable. It will never call the <code>foo=</code> setter. You must provide an explicit receiver.</p>
"
"<p>I have a VPS and usually I write Ruby scripts for daily tasks. Sometimes I want to use the same scripts / methods on my home machine too. How should I share and reuse the already written codes between the too machine? Should I write a gem and install on both machine? Or is there a way to use the ""load"" method to load Ruby modules from a HTTP or maybe NFS share? HTTP would be preferable like in JavaScript / HTML, I think, however the ""load"" method seems to be not working with a HTTP url.</p>
","2988","","<p>Ruby comes with a powerful package management system called <em>RubyGems</em> that was created for <em>exactly</em> this purpose.</p>
"
"<pre><code>def errors_matching(&amp;block)
  m = Module.new
  (class &lt;&lt; m ;self; end).instance_eval do
    define_method(:===, &amp;block)
  end
  m
end
</code></pre>

<p>This allows me to define dynamic rescue clauses in Ruby, for example:</p>

<pre><code>begin
  raise 'hi'
rescue errors_matching { |e| e.class.name.include?('Runtime') } =&gt; e
  puts ""Ignoring #{e.message}""
end
</code></pre>

<p>I don't understand the first piece of code. What's the whole point of m = Module.new and then putting self (which is main in this case) inside a singleton class and doing instance_eval on it?</p>
","2988","","<p>This: </p>

<pre><code>class &lt;&lt; m; self end
</code></pre>

<p>is obviously the same as: </p>

<pre><code>m.singleton_class
</code></pre>

<p>And </p>

<pre><code>m.singleton_class.instance_eval { define_method(:foo) {} }
</code></pre>

<p>is just the same as </p>

<pre><code>m.define_singleton_method(:foo) {}
</code></pre>

<p>So, the whole <code>errors_matching</code> method is just a very convoluted way of saying: </p>

<pre><code>def errors_matching(&amp;block)
  Module.new.tap do |m| m.define_singleton_method(:===, &amp;block) end
end
</code></pre>
"
"<p>I'm getting <code>41: syntax error, unexpected keyword_ensure, expecting keyword_end</code>. I also have the error for line 43. </p>

<p>The catch? My code stops at line 40, and I'm not seeing any extra spaces or tabs in Sublime text... What gives?</p>

<pre><code>&lt;div class=""panel panel-default""&gt;

  &lt;div class=""panel-heading""&gt;
    &lt;div class=""panel-title""&gt;
      &lt;h1&gt;Listing reports&lt;/h1&gt;
    &lt;/div&gt;
  &lt;/div&gt;

      &lt;div class=""panel-body""&gt;
            &lt;table&gt;
              &lt;thead&gt;
                &lt;tr&gt;
                  &lt;th&gt;Summoner Name&lt;/th&gt;
                  &lt;th&gt;User&lt;/th&gt;
                  &lt;th&gt;&lt;/th&gt;
                  &lt;th&gt;&lt;/th&gt;
                  &lt;th&gt;&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody&gt;
                &lt;% @reports.each do |report| %&gt;
                  &lt;tr&gt;
                    &lt;td&gt;&lt;%= report.description %&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;%= report.user.email if report.user %&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;%= link_to 'Show', report %&gt;&lt;/td&gt;
                    &lt;% if report.user == current_user %&gt;
                      &lt;td&gt;&lt;%= link_to 'Edit', edit_report_path(report) %&gt;&lt;/td&gt;
                      &lt;td&gt;&lt;%= link_to 'Destroy', report, method: :delete, data: { confirm: 'Are you sure?' } %&gt;&lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;% end %&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;

            &lt;br&gt;
            &lt;% if user_signed_in? %&gt;
              &lt;%= link_to 'New Report', new_report_path %&gt;
            &lt;% end %&gt;
      &lt;/div&gt;

&lt;/div&gt; 
</code></pre>
","2988","","<p>This is not a Ruby file. It looks like it is some templating language, possibly ERb. Obviously, Ruby doesn't understand ERb, Ruby only understands Ruby. Therefore, the file needs to be converted to Ruby first, and there's no guarantee that this converted file will have the exact same line numbers as the original template file.</p>
"
"<p>I need to search for a ""£"" sign in my text but it keeps coming up with the error: </p>

<pre><code>invalid character property name {`£`}: /\p{`\u00A3`}/ (SyntaxError)
</code></pre>

<p>i have # encoding: utf-8 at the top, the context in which I'm using it is:</p>

<pre><code> original_contents &lt;&lt; line.gsub(/[abc]/, '*')
 .gsub(/\p{£}/, '')
</code></pre>

<p>When I try <code>.gsub(/£/, '')</code> instead, I get</p>

<pre><code>C:/Users...Epub run through.rb:12:in `gsub': incompatible encoding regexp match (UTF-8 regexp with CP850 string) (Encoding::CompatibilityError)
  from C:/Users...Epub run through.rb:12:in `block in &lt;top (required)&gt;'
  from C:/Users...Epub run through.rb:9:in `each_line'
  from C:/Users...Epub run through.rb:9:in `&lt;top (required)&gt;' 
  from -e:1:in `load'
  from -e:1:in `&lt;main&gt;'
</code></pre>
","2988","","<p>The error message says ""invalid character property name"", and that is correct. The valid Unicode character property names are: </p>

<ul>
<li>Alpha</li>
<li>Blank</li>
<li>Cntrl</li>
<li>Digit</li>
<li>Graph</li>
<li>Lower</li>
<li>Print</li>
<li>Punct</li>
<li>Space</li>
<li>Upper</li>
<li>XDigit</li>
<li>Word</li>
<li>Alnum</li>
<li>ASCII</li>
<li>Any</li>
<li>Assigned</li>
<li>C</li>
<li>Cc</li>
<li>Cf</li>
<li>Cn</li>
<li>Co</li>
<li>Cs</li>
<li>L</li>
<li>LC</li>
<li>Ll</li>
<li>Lm</li>
<li>Lo</li>
<li>Lt</li>
<li>Lu</li>
<li>M</li>
<li>Mc</li>
<li>Me</li>
<li>Mn</li>
<li>N</li>
<li>Nd</li>
<li>Nl</li>
<li>No</li>
<li>P</li>
<li>Pc</li>
<li>Pd</li>
<li>Pe</li>
<li>Pf</li>
<li>Pi</li>
<li>Po</li>
<li>Ps</li>
<li>S</li>
<li>Sc</li>
<li>Sk</li>
<li>Sm</li>
<li>So</li>
<li>Z</li>
<li>Zl</li>
<li>Zp</li>
<li>Zs</li>
<li>Arabic</li>
<li>Armenian</li>
<li>Avestan</li>
<li>Balinese</li>
<li>Bamum</li>
<li>Bassa_Vah</li>
<li>Batak</li>
<li>Bengali</li>
<li>Bopomofo</li>
<li>Brahmi</li>
<li>Braille</li>
<li>Buginese</li>
<li>Buhid</li>
<li>Canadian_Aboriginal</li>
<li>Carian</li>
<li>Caucasian_Albanian</li>
<li>Chakma</li>
<li>Cham</li>
<li>Cherokee</li>
<li>Common</li>
<li>Coptic</li>
<li>Cuneiform</li>
<li>Cypriot</li>
<li>Cyrillic</li>
<li>Deseret</li>
<li>Devanagari</li>
<li>Duployan</li>
<li>Egyptian_Hieroglyphs</li>
<li>Elbasan</li>
<li>Ethiopic</li>
<li>Georgian</li>
<li>Glagolitic</li>
<li>Gothic</li>
<li>Grantha</li>
<li>Greek</li>
<li>Gujarati</li>
<li>Gurmukhi</li>
<li>Han</li>
<li>Hangul</li>
<li>Hanunoo</li>
<li>Hebrew</li>
<li>Hiragana</li>
<li>Imperial_Aramaic</li>
<li>Inherited</li>
<li>Inscriptional_Pahlavi</li>
<li>Inscriptional_Parthian</li>
<li>Javanese</li>
<li>Kaithi</li>
<li>Kannada</li>
<li>Katakana</li>
<li>Kayah_Li</li>
<li>Kharoshthi</li>
<li>Khmer</li>
<li>Khojki</li>
<li>Khudawadi</li>
<li>Lao</li>
<li>Latin</li>
<li>Lepcha</li>
<li>Limbu</li>
<li>Linear_A</li>
<li>Linear_B</li>
<li>Lisu</li>
<li>Lycian</li>
<li>Lydian</li>
<li>Mahajani</li>
<li>Malayalam</li>
<li>Mandaic</li>
<li>Manichaean</li>
<li>Meetei_Mayek</li>
<li>Mende_Kikakui</li>
<li>Meroitic_Cursive</li>
<li>Meroitic_Hieroglyphs</li>
<li>Miao</li>
<li>Modi</li>
<li>Mongolian</li>
<li>Mro</li>
<li>Myanmar</li>
<li>Nabataean</li>
<li>New_Tai_Lue</li>
<li>Nko</li>
<li>Ogham</li>
<li>Ol_Chiki</li>
<li>Old_Italic</li>
<li>Old_North_Arabian</li>
<li>Old_Permic</li>
<li>Old_Persian</li>
<li>Old_South_Arabian</li>
<li>Old_Turkic</li>
<li>Oriya</li>
<li>Osmanya</li>
<li>Pahawh_Hmong</li>
<li>Palmyrene</li>
<li>Pau_Cin_Hau</li>
<li>Phags_Pa</li>
<li>Phoenician</li>
<li>Psalter_Pahlavi</li>
<li>Rejang</li>
<li>Runic</li>
<li>Samaritan</li>
<li>Saurashtra</li>
<li>Sharada</li>
<li>Shavian</li>
<li>Siddham</li>
<li>Sinhala</li>
<li>Sora_Sompeng</li>
<li>Sundanese</li>
<li>Syloti_Nagri</li>
<li>Syriac</li>
<li>Tagalog</li>
<li>Tagbanwa</li>
<li>Tai_Le</li>
<li>Tai_Tham</li>
<li>Tai_Viet</li>
<li>Takri</li>
<li>Tamil</li>
<li>Telugu</li>
<li>Thaana</li>
<li>Thai</li>
<li>Tibetan</li>
<li>Tifinagh</li>
<li>Tirhuta</li>
<li>Ugaritic</li>
<li>Unknown</li>
<li>Vai</li>
<li>Warang_Citi</li>
<li>Yi</li>
<li>Alphabetic</li>
<li>Case_Ignorable</li>
<li>Cased</li>
<li>Changes_When_Casefolded</li>
<li>Changes_When_Casemapped</li>
<li>Changes_When_Lowercased</li>
<li>Changes_When_Titlecased</li>
<li>Changes_When_Uppercased</li>
<li>Default_Ignorable_Code_Point</li>
<li>Grapheme_Base</li>
<li>Grapheme_Extend</li>
<li>Grapheme_Link</li>
<li>ID_Continue</li>
<li>ID_Start</li>
<li>Lowercase</li>
<li>Math</li>
<li>Uppercase</li>
<li>XID_Continue</li>
<li>XID_Start</li>
<li>ASCII_Hex_Digit</li>
<li>Bidi_Control</li>
<li>Dash</li>
<li>Deprecated</li>
<li>Diacritic</li>
<li>Extender</li>
<li>Hex_Digit</li>
<li>Hyphen</li>
<li>IDS_Binary_Operator</li>
<li>IDS_Trinary_Operator</li>
<li>Ideographic</li>
<li>Join_Control</li>
<li>Logical_Order_Exception</li>
<li>Noncharacter_Code_Point</li>
<li>Other_Alphabetic</li>
<li>Other_Default_Ignorable_Code_Point</li>
<li>Other_Grapheme_Extend</li>
<li>Other_ID_Continue</li>
<li>Other_ID_Start</li>
<li>Other_Lowercase</li>
<li>Other_Math</li>
<li>Other_Uppercase</li>
<li>Pattern_Syntax</li>
<li>Pattern_White_Space</li>
<li>Quotation_Mark</li>
<li>Radical</li>
<li>STerm</li>
<li>Soft_Dotted</li>
<li>Terminal_Punctuation</li>
<li>Unified_Ideograph</li>
<li>Variation_Selector</li>
<li>White_Space</li>
<li>AHex</li>
<li>Bidi_C</li>
<li>CI</li>
<li>CWCF</li>
<li>CWCM</li>
<li>CWL</li>
<li>CWT</li>
<li>CWU</li>
<li>DI</li>
<li>Dep</li>
<li>Dia</li>
<li>Ext</li>
<li>Gr_Base</li>
<li>Gr_Ext</li>
<li>Gr_Link</li>
<li>Hex</li>
<li>IDC</li>
<li>IDS</li>
<li>IDSB</li>
<li>IDST</li>
<li>Ideo</li>
<li>Join_C</li>
<li>LOE</li>
<li>NChar</li>
<li>OAlpha</li>
<li>ODI</li>
<li>OGr_Ext</li>
<li>OIDC</li>
<li>OIDS</li>
<li>OLower</li>
<li>OMath</li>
<li>OUpper</li>
<li>Pat_Syn</li>
<li>Pat_WS</li>
<li>QMark</li>
<li>SD</li>
<li>Term</li>
<li>UIdeo</li>
<li>VS</li>
<li>WSpace</li>
<li>XIDC</li>
<li>XIDS</li>
<li>Other</li>
<li>Control</li>
<li>Format</li>
<li>Unassigned</li>
<li>Private_Use</li>
<li>Surrogate</li>
<li>Letter</li>
<li>Cased_Letter</li>
<li>Lowercase_Letter</li>
<li>Modifier_Letter</li>
<li>Other_Letter</li>
<li>Titlecase_Letter</li>
<li>Uppercase_Letter</li>
<li>Mark</li>
<li>Combining_Mark</li>
<li>Spacing_Mark</li>
<li>Enclosing_Mark</li>
<li>Nonspacing_Mark</li>
<li>Number</li>
<li>Decimal_Number</li>
<li>Letter_Number</li>
<li>Other_Number</li>
<li>Punctuation</li>
<li>Connector_Punctuation</li>
<li>Dash_Punctuation</li>
<li>Close_Punctuation</li>
<li>Final_Punctuation</li>
<li>Initial_Punctuation</li>
<li>Other_Punctuation</li>
<li>Open_Punctuation</li>
<li>Symbol</li>
<li>Currency_Symbol</li>
<li>Modifier_Symbol</li>
<li>Math_Symbol</li>
<li>Other_Symbol</li>
<li>Separator</li>
<li>Line_Separator</li>
<li>Paragraph_Separator</li>
<li>Space_Separator</li>
<li>Aghb</li>
<li>Arab</li>
<li>Armi</li>
<li>Armn</li>
<li>Avst</li>
<li>Bali</li>
<li>Bamu</li>
<li>Bass</li>
<li>Batk</li>
<li>Beng</li>
<li>Bopo</li>
<li>Brah</li>
<li>Brai</li>
<li>Bugi</li>
<li>Buhd</li>
<li>Cakm</li>
<li>Cans</li>
<li>Cari</li>
<li>Cher</li>
<li>Copt</li>
<li>Qaac</li>
<li>Cprt</li>
<li>Cyrl</li>
<li>Deva</li>
<li>Dsrt</li>
<li>Dupl</li>
<li>Egyp</li>
<li>Elba</li>
<li>Ethi</li>
<li>Geor</li>
<li>Glag</li>
<li>Goth</li>
<li>Gran</li>
<li>Grek</li>
<li>Gujr</li>
<li>Guru</li>
<li>Hang</li>
<li>Hani</li>
<li>Hano</li>
<li>Hebr</li>
<li>Hira</li>
<li>Hmng</li>
<li>Ital</li>
<li>Java</li>
<li>Kali</li>
<li>Kana</li>
<li>Khar</li>
<li>Khmr</li>
<li>Khoj</li>
<li>Knda</li>
<li>Kthi</li>
<li>Lana</li>
<li>Laoo</li>
<li>Latn</li>
<li>Lepc</li>
<li>Limb</li>
<li>Lina</li>
<li>Linb</li>
<li>Lyci</li>
<li>Lydi</li>
<li>Mahj</li>
<li>Mand</li>
<li>Mani</li>
<li>Mend</li>
<li>Merc</li>
<li>Mero</li>
<li>Mlym</li>
<li>Mong</li>
<li>Mroo</li>
<li>Mtei</li>
<li>Mymr</li>
<li>Narb</li>
<li>Nbat</li>
<li>Nkoo</li>
<li>Ogam</li>
<li>Olck</li>
<li>Orkh</li>
<li>Orya</li>
<li>Osma</li>
<li>Palm</li>
<li>Pauc</li>
<li>Perm</li>
<li>Phag</li>
<li>Phli</li>
<li>Phlp</li>
<li>Phnx</li>
<li>Plrd</li>
<li>Prti</li>
<li>Rjng</li>
<li>Runr</li>
<li>Samr</li>
<li>Sarb</li>
<li>Saur</li>
<li>Shaw</li>
<li>Shrd</li>
<li>Sidd</li>
<li>Sind</li>
<li>Sinh</li>
<li>Sora</li>
<li>Sund</li>
<li>Sylo</li>
<li>Syrc</li>
<li>Tagb</li>
<li>Takr</li>
<li>Tale</li>
<li>Talu</li>
<li>Taml</li>
<li>Tavt</li>
<li>Telu</li>
<li>Tfng</li>
<li>Tglg</li>
<li>Thaa</li>
<li>Tibt</li>
<li>Tirh</li>
<li>Ugar</li>
<li>Vaii</li>
<li>Wara</li>
<li>Xpeo</li>
<li>Xsux</li>
<li>Yiii</li>
<li>Zinh</li>
<li>Qaai</li>
<li>Zyyy</li>
<li>Zzzz</li>
<li>Age=1.1</li>
<li>Age=2.0</li>
<li>Age=2.1</li>
<li>Age=3.0</li>
<li>Age=3.1</li>
<li>Age=3.2</li>
<li>Age=4.0</li>
<li>Age=4.1</li>
<li>Age=5.0</li>
<li>Age=5.1</li>
<li>Age=5.2</li>
<li>Age=6.0</li>
<li>Age=6.1</li>
<li>Age=6.2</li>
<li>Age=6.3</li>
<li>Age=7.0</li>
<li>In_Basic_Latin</li>
<li>In_Latin_1_Supplement</li>
<li>In_Latin_Extended_A</li>
<li>In_Latin_Extended_B</li>
<li>In_IPA_Extensions</li>
<li>In_Spacing_Modifier_Letters</li>
<li>In_Combining_Diacritical_Marks</li>
<li>In_Greek_and_Coptic</li>
<li>In_Cyrillic</li>
<li>In_Cyrillic_Supplement</li>
<li>In_Armenian</li>
<li>In_Hebrew</li>
<li>In_Arabic</li>
<li>In_Syriac</li>
<li>In_Arabic_Supplement</li>
<li>In_Thaana</li>
<li>In_NKo</li>
<li>In_Samaritan</li>
<li>In_Mandaic</li>
<li>In_Arabic_Extended_A</li>
<li>In_Devanagari</li>
<li>In_Bengali</li>
<li>In_Gurmukhi</li>
<li>In_Gujarati</li>
<li>In_Oriya</li>
<li>In_Tamil</li>
<li>In_Telugu</li>
<li>In_Kannada</li>
<li>In_Malayalam</li>
<li>In_Sinhala</li>
<li>In_Thai</li>
<li>In_Lao</li>
<li>In_Tibetan</li>
<li>In_Myanmar</li>
<li>In_Georgian</li>
<li>In_Hangul_Jamo</li>
<li>In_Ethiopic</li>
<li>In_Ethiopic_Supplement</li>
<li>In_Cherokee</li>
<li>In_Unified_Canadian_Aboriginal_Syllabics</li>
<li>In_Ogham</li>
<li>In_Runic</li>
<li>In_Tagalog</li>
<li>In_Hanunoo</li>
<li>In_Buhid</li>
<li>In_Tagbanwa</li>
<li>In_Khmer</li>
<li>In_Mongolian</li>
<li>In_Unified_Canadian_Aboriginal_Syllabics_Extended</li>
<li>In_Limbu</li>
<li>In_Tai_Le</li>
<li>In_New_Tai_Lue</li>
<li>In_Khmer_Symbols</li>
<li>In_Buginese</li>
<li>In_Tai_Tham</li>
<li>In_Combining_Diacritical_Marks_Extended</li>
<li>In_Balinese</li>
<li>In_Sundanese</li>
<li>In_Batak</li>
<li>In_Lepcha</li>
<li>In_Ol_Chiki</li>
<li>In_Sundanese_Supplement</li>
<li>In_Vedic_Extensions</li>
<li>In_Phonetic_Extensions</li>
<li>In_Phonetic_Extensions_Supplement</li>
<li>In_Combining_Diacritical_Marks_Supplement</li>
<li>In_Latin_Extended_Additional</li>
<li>In_Greek_Extended</li>
<li>In_General_Punctuation</li>
<li>In_Superscripts_and_Subscripts</li>
<li>In_Currency_Symbols</li>
<li>In_Combining_Diacritical_Marks_for_Symbols</li>
<li>In_Letterlike_Symbols</li>
<li>In_Number_Forms</li>
<li>In_Arrows</li>
<li>In_Mathematical_Operators</li>
<li>In_Miscellaneous_Technical</li>
<li>In_Control_Pictures</li>
<li>In_Optical_Character_Recognition</li>
<li>In_Enclosed_Alphanumerics</li>
<li>In_Box_Drawing</li>
<li>In_Block_Elements</li>
<li>In_Geometric_Shapes</li>
<li>In_Miscellaneous_Symbols</li>
<li>In_Dingbats</li>
<li>In_Miscellaneous_Mathematical_Symbols_A</li>
<li>In_Supplemental_Arrows_A</li>
<li>In_Braille_Patterns</li>
<li>In_Supplemental_Arrows_B</li>
<li>In_Miscellaneous_Mathematical_Symbols_B</li>
<li>In_Supplemental_Mathematical_Operators</li>
<li>In_Miscellaneous_Symbols_and_Arrows</li>
<li>In_Glagolitic</li>
<li>In_Latin_Extended_C</li>
<li>In_Coptic</li>
<li>In_Georgian_Supplement</li>
<li>In_Tifinagh</li>
<li>In_Ethiopic_Extended</li>
<li>In_Cyrillic_Extended_A</li>
<li>In_Supplemental_Punctuation</li>
<li>In_CJK_Radicals_Supplement</li>
<li>In_Kangxi_Radicals</li>
<li>In_Ideographic_Description_Characters</li>
<li>In_CJK_Symbols_and_Punctuation</li>
<li>In_Hiragana</li>
<li>In_Katakana</li>
<li>In_Bopomofo</li>
<li>In_Hangul_Compatibility_Jamo</li>
<li>In_Kanbun</li>
<li>In_Bopomofo_Extended</li>
<li>In_CJK_Strokes</li>
<li>In_Katakana_Phonetic_Extensions</li>
<li>In_Enclosed_CJK_Letters_and_Months</li>
<li>In_CJK_Compatibility</li>
<li>In_CJK_Unified_Ideographs_Extension_A</li>
<li>In_Yijing_Hexagram_Symbols</li>
<li>In_CJK_Unified_Ideographs</li>
<li>In_Yi_Syllables</li>
<li>In_Yi_Radicals</li>
<li>In_Lisu</li>
<li>In_Vai</li>
<li>In_Cyrillic_Extended_B</li>
<li>In_Bamum</li>
<li>In_Modifier_Tone_Letters</li>
<li>In_Latin_Extended_D</li>
<li>In_Syloti_Nagri</li>
<li>In_Common_Indic_Number_Forms</li>
<li>In_Phags_pa</li>
<li>In_Saurashtra</li>
<li>In_Devanagari_Extended</li>
<li>In_Kayah_Li</li>
<li>In_Rejang</li>
<li>In_Hangul_Jamo_Extended_A</li>
<li>In_Javanese</li>
<li>In_Myanmar_Extended_B</li>
<li>In_Cham</li>
<li>In_Myanmar_Extended_A</li>
<li>In_Tai_Viet</li>
<li>In_Meetei_Mayek_Extensions</li>
<li>In_Ethiopic_Extended_A</li>
<li>In_Latin_Extended_E</li>
<li>In_Meetei_Mayek</li>
<li>In_Hangul_Syllables</li>
<li>In_Hangul_Jamo_Extended_B</li>
<li>In_High_Surrogates</li>
<li>In_High_Private_Use_Surrogates</li>
<li>In_Low_Surrogates</li>
<li>In_Private_Use_Area</li>
<li>In_CJK_Compatibility_Ideographs</li>
<li>In_Alphabetic_Presentation_Forms</li>
<li>In_Arabic_Presentation_Forms_A</li>
<li>In_Variation_Selectors</li>
<li>In_Vertical_Forms</li>
<li>In_Combining_Half_Marks</li>
<li>In_CJK_Compatibility_Forms</li>
<li>In_Small_Form_Variants</li>
<li>In_Arabic_Presentation_Forms_B</li>
<li>In_Halfwidth_and_Fullwidth_Forms</li>
<li>In_Specials</li>
<li>In_Linear_B_Syllabary</li>
<li>In_Linear_B_Ideograms</li>
<li>In_Aegean_Numbers</li>
<li>In_Ancient_Greek_Numbers</li>
<li>In_Ancient_Symbols</li>
<li>In_Phaistos_Disc</li>
<li>In_Lycian</li>
<li>In_Carian</li>
<li>In_Coptic_Epact_Numbers</li>
<li>In_Old_Italic</li>
<li>In_Gothic</li>
<li>In_Old_Permic</li>
<li>In_Ugaritic</li>
<li>In_Old_Persian</li>
<li>In_Deseret</li>
<li>In_Shavian</li>
<li>In_Osmanya</li>
<li>In_Elbasan</li>
<li>In_Caucasian_Albanian</li>
<li>In_Linear_A</li>
<li>In_Cypriot_Syllabary</li>
<li>In_Imperial_Aramaic</li>
<li>In_Palmyrene</li>
<li>In_Nabataean</li>
<li>In_Phoenician</li>
<li>In_Lydian</li>
<li>In_Meroitic_Hieroglyphs</li>
<li>In_Meroitic_Cursive</li>
<li>In_Kharoshthi</li>
<li>In_Old_South_Arabian</li>
<li>In_Old_North_Arabian</li>
<li>In_Manichaean</li>
<li>In_Avestan</li>
<li>In_Inscriptional_Parthian</li>
<li>In_Inscriptional_Pahlavi</li>
<li>In_Psalter_Pahlavi</li>
<li>In_Old_Turkic</li>
<li>In_Rumi_Numeral_Symbols</li>
<li>In_Brahmi</li>
<li>In_Kaithi</li>
<li>In_Sora_Sompeng</li>
<li>In_Chakma</li>
<li>In_Mahajani</li>
<li>In_Sharada</li>
<li>In_Sinhala_Archaic_Numbers</li>
<li>In_Khojki</li>
<li>In_Khudawadi</li>
<li>In_Grantha</li>
<li>In_Tirhuta</li>
<li>In_Siddham</li>
<li>In_Modi</li>
<li>In_Takri</li>
<li>In_Warang_Citi</li>
<li>In_Pau_Cin_Hau</li>
<li>In_Cuneiform</li>
<li>In_Cuneiform_Numbers_and_Punctuation</li>
<li>In_Egyptian_Hieroglyphs</li>
<li>In_Bamum_Supplement</li>
<li>In_Mro</li>
<li>In_Bassa_Vah</li>
<li>In_Pahawh_Hmong</li>
<li>In_Miao</li>
<li>In_Kana_Supplement</li>
<li>In_Duployan</li>
<li>In_Shorthand_Format_Controls</li>
<li>In_Byzantine_Musical_Symbols</li>
<li>In_Musical_Symbols</li>
<li>In_Ancient_Greek_Musical_Notation</li>
<li>In_Tai_Xuan_Jing_Symbols</li>
<li>In_Counting_Rod_Numerals</li>
<li>In_Mathematical_Alphanumeric_Symbols</li>
<li>In_Mende_Kikakui</li>
<li>In_Arabic_Mathematical_Alphabetic_Symbols</li>
<li>In_Mahjong_Tiles</li>
<li>In_Domino_Tiles</li>
<li>In_Playing_Cards</li>
<li>In_Enclosed_Alphanumeric_Supplement</li>
<li>In_Enclosed_Ideographic_Supplement</li>
<li>In_Miscellaneous_Symbols_and_Pictographs</li>
<li>In_Emoticons</li>
<li>In_Ornamental_Dingbats</li>
<li>In_Transport_and_Map_Symbols</li>
<li>In_Alchemical_Symbols</li>
<li>In_Geometric_Shapes_Extended</li>
<li>In_Supplemental_Arrows_C</li>
<li>In_CJK_Unified_Ideographs_Extension_B</li>
<li>In_CJK_Unified_Ideographs_Extension_C</li>
<li>In_CJK_Unified_Ideographs_Extension_D</li>
<li>In_CJK_Compatibility_Ideographs_Supplement</li>
<li>In_Tags</li>
<li>In_Variation_Selectors_Supplement</li>
<li>In_Supplementary_Private_Use_Area_A</li>
<li>In_Supplementary_Private_Use_Area_B</li>
<li>In_No_Block</li>
</ul>

<p>As you can see, ""£"" is not a valid Unicode property name.</p>
"
"<p>Make a RECURSIVE ruby function ""double_fact(n)"" defined as follows – 
                 n!! = 1 if n = −1 or n = 0 or n = 1; 
                          n(n − 2)!! otherwise. 
     Outputs the result of double_fact() respecting to a value specified<br>
     from the command line. </p>

<pre><code>      //Hint: Ruby has the usual ""and"", ""or"" and ""not"" operators. You may  
        need ""or"" to test multiple conditions here. Also, doublefact(8) = 384.
</code></pre>
","2988","","<p>The problem statement is very misleading. You don't need any boolean operators at all, you can just translate the mathematical definition 1:1 into Ruby:</p>

<pre><code>def doublefact(n)
  return 1 if (-1..1).include?(n)
  n * doublefact(n-2)
end
</code></pre>
"
"<p>Is there a better method to display a number in hex with leading <code>0</code>? I tried:</p>

<pre><code>i.to_s(16)
</code></pre>

<p>but</p>

<pre><code>2.to_s(16) #=&gt; ""2"" 
</code></pre>

<p>where I expect <code>""02""</code>. I tried the print format:</p>

<pre><code>""%02x"" % i
</code></pre>

<p>which works for <code>2</code>, but</p>

<pre><code>""%02x"" % 256 #=&gt; ""100""
</code></pre>

<p>where I want <code>""0100""</code>. So I came up with this:</p>

<pre><code>class Integer
  def to_hex_string
    (""%0x"" % self).size % 2 == 0 ? ""%0x"" % self : ""%0#{(""%0x"" % self).size+1}x"" % self
  end
end
</code></pre>

<p>It works:</p>

<pre><code>2.to_hex_string #=&gt; ""02""
256.to_hex_string #=&gt; ""0100""
</code></pre>

<p>It works also with class <code>Bignumber</code>, but it looks strange that such an easy request needs a trick like this. Any better idea?</p>
","2988","","<p>You are making this way too complicated. If you want to print an integer in hexadecimal with a leading zero, then it is just </p>

<pre><code>class Integer
  def to_hex_string
    ""0#{to_s(16)}""
  end
end

2.to_hex_string   # =&gt; 02
256.to_hex_string # =&gt; 0100
</code></pre>
"
"<p>I know that <code>self.class.name</code> returns name of the class but how about instance?</p>

<p>For example this code</p>

<pre><code>module Selling
  def sell
    puts ""#{self.class.name} has been sold""
  end
end

class Shop
  include Selling
  def initialize(id)
    @id=id
  end
end

book=Shop.new(1132)
book.sell
</code></pre>

<p>prints <code>Shop</code> and what I need is a <code>book</code></p>
","2988","","<p>Objects don't have names. They may or may not be referenced by one or more variables, but there is no way to know what variables reference an object and what the names of those variables are.</p>

<p>Modules are a special case, their <code>name</code> method indeed returns the name of the first constant that they have been assigned to, but that is interpreter magic.</p>
"
"<p>I am learning Scala and I noticed something about using the return statement.</p>

<p>So, obviously in Scala, if you don't have a return statement, the last value is returned by default. Which is great. But if you use the return statement without specifying the return type, Scala says <code>""error: method testMethod has return statement; needs result type""</code></p>

<p>So this works</p>

<pre><code>  def testMethod(arg: Int) = {
    arg*2
  }
</code></pre>

<p>but this gives the error</p>

<pre><code>  def testMethod(arg: Int) = {
    return arg*2
  }
</code></pre>

<p>This makes me scratch my chin and go</p>

<blockquote>
  <p>Mmmmmmmm... There must be a reason for that.</p>
</blockquote>

<p>Why is the explicit type declaration needed when you use a return statement but not when you let Scala return the last value? I assumed they were exactly the same thing, and that return statements are just for if you want to return a value inside a nested function/conditional, etc. (In other words, that a ""return"" statement is automatically inserted to your last value by the compiler.. if not present anywhere else in the method)</p>

<p>But clearly I was wrong. Surely there must be some other difference in the implementation?</p>

<p>Am I missing something?</p>
","2988","","<p>If you have multiple exit points from your method, it may be impossible for the compiler to infer the return type. The only way you can get multiple exit points from your method, is by using multiple <code>return</code>s. (Or one <code>return</code> plus the implicit return.)</p>

<p>Since the rules, when it works and when it doesn't, are pretty complex, it may look to the user that it sometimes randomly works and sometimes doesn't. Simply forbidding type inference altogether in the presence of an explicit <code>return</code> is a much simpler rule, even if a bit restrictive.</p>
"
"<p>I was trying to comment multiple steps for my calabash Feature file (Ruby) using """""".I'm using # for commenting single lines for my features but cant able to do for multiple lines. Can you please suggest me any ways to comment multiple lines.I'm using latest version of calabash with Ruby v 2.0</p>
","2988","","<p>There are no multiline comments in Gherkin. Just comment every line.</p>
"
"<p>I've been trying something new and I was curious whether a Java program can be tested with cucumber. I know cucumber can be used with Ruby etc but I've never tried it with Java.</p>

<p>I already installed the plugins I could find but I keep on getting : </p>

<pre><code>Output of running [cmd, /C, cucumber, -r, C:\Users\XXX\CucumberTest\src\cucumber\features, C:\Users\XXX\CucumberTest\src\cucumber\features\myfeature.feature, -s] is:
--- START ---

'cucumber' is not recognized as an internal or external command,
operable program or batch file.
--- END ---
</code></pre>

<p>Anybody got experience with Cucumber combined with Java or maybe knows why I get the message above?</p>
","2988","","<p>This has absolutely nothing to do with using Cucumber with Java. The error message you are getting is from the Windows command line and telling you that it couldn't find <code>cucumber</code> anywhere. Either you didn't install it, or you didn't put it in your <code>%PATH%</code>, or its extension is not in <code>%PATHEXT%</code>.</p>

<p>You would be getting the exact same error if you tried using it to test Ruby code. It isn't even found in the first place.</p>
"
"<p>Usually Arrays are implemented as a chunks of memory, sets as hash maps, and sorted sets as skip lists. Is that also the case in Ruby? </p>

<p>I'm trying to evaluate the use of different containers in Ruby in terms of performance and memory footprint </p>
","2988","","<p>Arrays are part of the Ruby core library. Each Ruby implementation has its own implementation of arrays. The Ruby Language Specification only specifies the behavior of Ruby arrays, it does not specify any particular implementation strategy. It doesn't even specify any performance constraints that would force or at least suggest a particular implementation strategy.</p>

<p>However, most Rubyists have some expectation about the performance characteristics of arrays that would force an implementation that doesn't meet them into obscurity, because nobody would actually use it:</p>

<ul>
<li>inserting, prepending or appending as well as deleting an element has a worst-case step-complexity of O(n) and an amortized worst-case step-complexity of O(1)</li>
<li>accessing an element has a worst-case step-complexity of O(1)</li>
<li>iterating over all elements has a worst-case step-complexity of O(n)</li>
</ul>

<p>This means that arrays need to be implemented as dynamic arrays with exponential resizing, otherwise those performance guarantees couldn't be met. You <em>might</em> get away with a very wide and shallow tree, but AFAIK no Ruby implementation does that.</p>

<p>Here's <a href=""https://github.com/rubinius/rubinius/blob/master/vm/builtin/array.cpp#L214-243"" rel=""nofollow"">Rubinius's array implementation</a>, which I personally find the easiest to read of all Ruby implementations. (Note: only the bare essentials are implemented in C++, most of the array methods are implemented in Ruby, e.g. in <a href=""https://github.com/rubinius/rubinius/blob/master/kernel/common/array.rb"" rel=""nofollow""><code>kernel/common/array.rb</code></a>).</p>

<p><code>Set</code> and <code>SortedSet</code> are part of the <code>set</code> library in the stdlib. The stdlib is shared mostly unchanged between Ruby implementations (at least the parts that are actually written in Ruby, obviously the parts written in other languages can't be shared), and since <code>Set</code> is written in Ruby, you can expect it to the same on all Ruby implementations.</p>

<p><code>Set</code> is implemented as a <code>Hash</code>, where only the keys are used, the values are simply always <code>true</code>: see <a href=""https://github.com/ruby/ruby/blob/trunk/lib/set.rb#L289-293"" rel=""nofollow""><code>Set#add</code> in <code>lib/set.rb</code></a>.</p>

<p><code>SortedSet</code> is backed by a Red-Black-Tree that isn't implemented in Ruby.</p>
"
"<p>I was wondering what is happening with my output. When I run this code it will work fine, I pass in my file name (ex15_sample.txt) and then it will print it out. After it is done printing out the file it prints out two additional characters ""PS"". Any idea on why this is?</p>

<p>I'm running Ruby 2.0.0p576 (x64) on a windows 8 64 bit machine.</p>

<p>Here is my code:</p>

<pre><code># Prompts the user for input on the filename
print ""What is the name of the file you would like printed? ""

# Takes a command line argument and assigns it to the variable
filename = gets.chomp

# Declares another variable and initializes it by opening the file stored in the variable filename
txt = open(filename)

# Prints out a string with an interpolated string
puts ""Here's your file #{filename}:""
# Prints out the file stored in the variable txt
print txt.read
# Closes the file
txt.close()
</code></pre>

<p>EDIT: As a side note, if I open the file, read and print it using <code>irb</code> I do not get the extra characters. Only if I use the command <code>ruby ex15.rb</code></p>
","2988","","<p>PS is the PowerShell prompt. It gets printed by PowerShell after every command. This has absolutely nothing whatsoever to do with Ruby. Try running <code>dir</code> and it will also print PS.</p>
"
"<p>I'm sorry in advance i know a straight code dump is not a good way to ask a question but this is my first Ruby script and i can't even try to debug it because i'm getting weird errors. I am running my script using git and it's just straight broken.. What am i not understanding? Am i missing a gem install or something? Even a pointer to relevant reading would be greatly appreciated.</p>

<p>As is the error i recieve:</p>

<pre><code>$ hello.rb
./hello.rb: line 8: class: command not found
./hello.rb: line 10: attr_accessor: command not found
./hello.rb: line 11: syntax error near unexpected token `('
./hello.rb: line 11: `  def initialize(name,cash,zip)'
</code></pre>

<p>and if i move my loop from the bottom to the top:</p>

<pre><code>$ hello.rb
./hello.rb: line 6: syntax error near unexpected token `('
./hello.rb: line 6: `def main()'
</code></pre>

<p>hello.rb:</p>

<pre><code>#
#
#
#
#
 class Person
        #Attribute accessor methods (accessor=writer+reader)
        attr_accessor :name,:cash,:zip,:credit_card
        def initialize(name,cash,zip)
            @name=name
            @cash=cash
            @zip=zip
            @credit_card=nil
        end
    end
    #Ruby class naming convention: FirstLetterCapCamelCase
    class Account
        attr_accessor :account_name
        #No writer attribute method for balance
        attr_reader :balance
        def initialize(Person)
            time=Time.new
            @key=""Kudzu""
            @Person=Person
            @Atm=Atm.new
            #seed the random number generator to get a new random set
            #for each new instance of bank
            srand(time.sec)
            #Ruby naming convention for variables and methods is lowercase this_that
            @name=Person.name
            @balance=nil
            @accounts=nil
            #                                   (#items, initial values)                                                     (ranndom range 100-999)                                          
            @credit_card = {""card_number""=&gt;Array.new(4,1000+rand(9999)),""exp_month""=&gt;time.month,""exp_year""=&gt;time.year+4,""security_code""=&gt;100+rand(999),""zip_code""=&gt;Person.zip, ""pin""=&gt;@pin}
            puts(""Hello I'm glad you came in here's your new card #{@credit_card[card_number]}"")
            while(true)
                puts(""Please enter your pin so that i can initialize your card (1234) &gt;&gt; "")
                temp = gets.chomp
                if(temp.is_a?Numeric&amp;&amp;temp.lenth===4)
                    @pin = temp
                    break
                puts(""Pin must be a 4 digit number"")
            end
            Person.credit_card=@credit_card
            Atm.add_account(Person,credit_card,Base64::encode(key),Account)
            puts(""New account created, thanks for signing up #{account_name}!"")
        end
        def withdraw(amount, Person, key)
            if(Base64::decode(key)===@key)
                if(@balance&gt;=amount)
                    @balance-=amount
                    Person.cash+=amount
                    puts(""Balance after withdraw: $#{this.balance}"")
                    return true
                else
                    puts(""Insufficient Funds ):"")
                    return false
                end
            else
                puts(""Access Denied"")
                return false
            end

        end
        def deposit(amount, Person, key)
            if(Base64::decode(key)===@key)
                if(Person.cash&gt;=amount)
                    #           Negative amount
                    Person.cash+=amount-amount*2
                    @balance+=amount
                    puts(""Balance after deposit: $#{this.balance}"")
                    return true
                else
                    puts(""Show me the money!"")
                    return false
                end
            else
                puts(""Access Denied"")
                return false
            end

        end
        def transfer(ToAccount, ToPerson, FromPerson, amount, key)
            if(Base64::decode(key)===@key)
                if(withdraw(amount,FromPerson))
                    ToAccount.deposit(amount,ToPerson)
                    return ""#{amount} has been transfered from #{account_name}'s account to #{ToAccount.name}'s account. Your remaining balance after this transaction is $#{@balance}""
                end
            else
                puts(""Access Denied"")
                return false
            end

        end
    end

    class Atm
        @people={}
        @accounts
        @card={}
        @Account
        #Encoding is not encryption to do this: gem install encryptor
        #I didn't take the time to learn how to implement encryption but..
        #Neo ""Do you know how to fly this thing?"" Trinity ""Not yet..""
        @key=""Kudzu""
        #Ruby Convention is to use {} for a single line method body
        def add_account(Person,credit_card,key,Account)
            if(Base64::decode(key)===@key)
                @people[credit_card]=Person
                @accounts[credit_card]=Account
                @Account=Account
            else
                puts(""Access Denied"")
                return false
            end
        end
        #Syntactical Sugar
        def get_pin()
            while(true)
                puts(""Ener Your Pin Number or (C)ancel &gt;&gt; "")
                #The method chomp of the object gets returns user input without the trailing /n
                temp=gets.chomp
                if(temp===@card[pin])
                    @Person=@people[card]
                    req_action()
                    break
                end
                if(temp===""C"")
                    break
                end
                puts(""Didn't catch that try again"")
            end
        def start_transaction(card)
            get_pin()
        end

        private
        def deposit()
            puts(""How much would you like to deposit &gt;&gt; "")
            temp=gets.chomp
            if(temp.is_a? Numeric)
                @Account.deposit(temp, @Person, Base64::encode(key))
            else
                puts(""Didn't catch that try again"")
                deposit()
            end 
        end
        def withdraw()
            puts(""How much would you like to withdraw &gt;&gt; "")
            temp=gets.chomp
            if(temp.is_a? Numeric)
                @Account.deposit(temp, @Person, Base64::encode(key))
            else
                puts(""Didn't catch that try again"")
                deposit()
            end 
        end
        def transfer()
            puts(""How much would you like to transfer &gt;&gt; "")
            amount=gets.chomp
            if(temp.is_a? Numeric)
                puts(""Card number of reciever (1234 5678 9123 4567)&gt;&gt; "")
                temp=gets.chomp
                #gsub = replace all  
                #\s+ = one more more white space characters 
                #m = multiline 
                #strip = remove white space from beg &amp; end
                #split will return the values split by given delimiter
                temp=temp.gsub(/\s+/, ' ').strip.split("" "")
                Person=@accounts[temp]
                if(Person)
                    @Account.transfer()
                    deposit(@accounts[temp], @people[temp], @Person, amount, Base64::encode(key))
                else
                    puts(""We can only transfer to clients of the same bank (incorrect card number)"")
                    transfer()
                end
            else
                puts(""Didn't catch that try again"")
            end 
        end
        def req_action()
            puts(""Would you like to (W)ithdraw (D)eposit or (T)ransfer &gt;&gt; "")
            temp=gets.chomp.upcase
            temp=temp.upcase
            #I wonder is it the Ruby convention to not have the when cases indented in the case conditional SublimeText seems to think so
            case temp
            when ""W""
                withdraw()
            when ""D""
                deposit()
            when ""T""
                Transfer()
            else
                puts(""Didn't catch that try again"")
                req_action()
            end
            while(true)
                puts(""Leave Atm (y/n) Another Transaction &gt;&gt; "")
                continue=true
                temp=gets.chomp
                temp=temp.upcase
                case temp
                when ""Y""
                    puts(""Returning Card"")
                    continue=false
                when ""N""
                    req_action()
                else
                    ""Your fingers are too fat please try again""
                end
                if(!continue)break
            end
        end
    end

    while(true)
        #return list of all instances of class Person in array people
        $people=Person.all_offspring
        $atm=Atm.all_offspring[0]
        puts(""would you like to go to the atm (a/r) or register a new account &gt;&gt; "")
        temp=gets.chomp
        temp=temp.upcase
        case temp
        when ""A""
            if(people)
                while(true)
                    contine=true
                    puts(""Who are you? #{people}"")
                    temp=gets.chomp
                    for x in people
                        if(temp===people[x].name)
                            Person=people[x]
                            continue=false
                        end
                    end
                    if(!continue) break
                end
            end
            $atm.start_transaction(Person.credit_card)
        when ""R""
            puts(""What is your name &gt;&gt; "")
            name=gets.chomp
            money=nil
            zip=nil
            loop do
                done=false
                puts(""How much money do you have &gt;&gt; "")
                temp=gets.chomp
                if(temp.is_a?Numeric)
                    money=temp
                    done=true
                    break
                else
                    ""Not a number""
                end
            end
            loop do
                done=false
                puts(""What is your zip code &gt;&gt; "")
                temp=gets.chomp
                if(temp.is_a?Numeric)
                    if(temp.length===5)
                        money=temp
                        done=true
                        break
                    else
                        puts(""invalid length"")
                    end
                else
                    puts(""not a number"")
                end
            end
        else
            ""invalid input""
        end
    end
</code></pre>
","2988","","<p>These are error messages from some shell, not Ruby. What you have there is a Ruby script. You need to run your Ruby script with Ruby. Your shell doesn't understand Ruby, it only understands its own language.</p>
"
"<p>I've been reading a lot of other people's Scala code recently, and one of the things that I have  difficultly with (coming from Java) is a lack of explicit type annotations.</p>

<p>It's certainly convenient when writing code to be able to leave out type annotations -- however when reading code I often find that explicit type annotations help me to understand at a glance what code is doing more easily.</p>

<p>The Scala style guide (<a href=""http://docs.scala-lang.org/style/types.html"" rel=""nofollow"">http://docs.scala-lang.org/style/types.html</a>) doesn't seem to provide any definitive guidance on this, stating:</p>

<blockquote>
  <p>Use type inference where possible, but put clarity first, and favour explicitness in public APIs.</p>
</blockquote>

<p>To my mind, this is a bit contradictory. While it's clearly obvious what type this variable is:</p>

<pre><code>val tokens = new HashMap[String, Int]
</code></pre>

<p>It's not so obvious what type this one is:</p>

<pre><code>val tokens = readTokens()
</code></pre>

<p>So, if I was putting clarity first I would probably annotate all variables where the type is not already declared on the same line.</p>

<p>Do any Scala practitioners have guidance on this? Am I crazy to be considering adding type annotations to my local variables? I'm particularly interested in hearing from folks who spend a lot of time reading scala code (for example, in code reviews), as well as writing it.</p>
","2988","","<blockquote>
  <p>It's not so obvious what type this one is:</p>

<pre><code>val tokens = readTokens()
</code></pre>
</blockquote>

<p>Good names are important: the name is plural, ergo it returns some collection of some kind. The most general collection types in Scala are <code>Traversable</code> and <code>Iterator</code>, and they mostly share a common interface, so it's not really important which one of the two it is. The name also talks about ""reading tokens"", ergo it obviously should return <code>Token</code>s in some fashion. And last but not least, the method call has parentheses, which according to the style guide means it has side-effects, so I wouldn't count on being able to traverse the collection more than once.</p>

<p>Ergo, the return type is something like </p>

<pre><code>Traversable[Token]
</code></pre>

<p>or </p>

<pre><code>Iterator[Token]
</code></pre>

<p>and which of the two it is doesn't really matter because their client interfaces are mostly identical.</p>

<p>Note also that the latter constraint (only traversing the collection once) isn't even captured in the type, even if you <em>were</em> providing an explicit type, you would <em>still</em> have to look at the name and the style!</p>
"
"<p>In Java, a program starts from a class's static main method. But in Scala, it starts from a object's main method.</p>

<p>Does anyone know the rationality of designing like this? </p>

<p>Scala also provide a trait called <code>App</code>, which can replace <code>main</code> method if an object extends this trait. Does anyone have ideas about which one (<code>App</code> or <code>main</code>) is the preferred way?</p>

<p>Thanks!</p>
","2988","","<p>Scala doesn't have static methods. If Scala required starting programs from a static main method, then you could never run a Scala program, because you couldn't write a static main method.</p>
"
"<p>Basically, I want to have my own array-like class with my own methods. </p>

<p>I would like to initialize it by passing an arguement of the length of an array, and it should instantiate a new array with given length and filled with zeros. So I've written something like this:</p>

<pre><code>class Foo &lt; Array
  def initialize(length)
    Array.new(length, 0)
  end
end
</code></pre>

<p>But when I test this out in IRB i get this:</p>

<pre><code>a = Foo.new(5)
=&gt; [] 
</code></pre>

<p>I also tried using for-loop to fill this array with zeros n-times, but to no avail.</p>

<p>What am I doing wrong?</p>
","2988","","<p>The implementation of <code>Class#new</code> looks a bit like this: </p>

<pre><code>class Class
  def new(*args, &amp;block)
    obj = allocate
    obj.initialize(*args, &amp;block)
    obj
  end
end
</code></pre>

<p>[Note: in reality, <code>initialize</code> is <code>private</code>, so it needs to be invoked reflectively, but you get the idea.]</p>

<p>IOW: the return value of <code>initialize</code> is completely ignored.</p>

<p>If you want to change the return value of <code>new</code>, you need to override <code>new</code>. (Kinda obvious, don't you think?) But in this case, it is also possible (and in general a good idea anyway) to simply delegate to the superclass's <code>initialize</code>, as in <a href=""http://stackoverflow.com/a/26842087/"">@spickermann's answer</a>.</p>
"
"<p>I wasn't sure what to title this question, so if you wan't to change it, be my guest.</p>

<p>I am wondering if there is some way to run a block of Ruby code in compliance with a previos version of the ruby language. It would essentially be some sort of 'compatability mode' but only for a block of code.</p>

<p>My idea was to chagne the RUBY_VERSION global variable, and see if Ruby then behaved as it would in that version, but this seems to do nothing. Here is my attempt:</p>

<pre><code>puts RUBY_VERSION

an_object = Time.now

an_object.tap do |o|
  puts 'in tep function'
end # ===&gt; an_object

RUBY_VERSION = 1.7 #potentially change ruby version to an older version to run legacy code

#attempt to run a function that was not available in version 1.7, (just an example)
an_object.tap do |o|
  puts 'in tep function'
end # ===&gt; an_object

puts RUBY_VERSION
</code></pre>

<p>I realize that I could code a conditional, and test the current version of Ruby, and then execute code based on the results of that test, but that doesn't fit my needs, and it would be better to just re-factor all of our unit tests and acceptance tests if it came down to this. </p>
","2988","","<p>Most implementations of Ruby only support a single version of the language. For example, YARV 2.1.4 only supports Ruby 2.1.4, MRI 1.8.7 only supports Ruby 1.8.7, and so on.</p>

<p>JRuby, IronRuby and Rubinius did at one time or another support multiple versions of Ruby (this was during the transitional period from Ruby 1.8 to Ruby 1.9), however most of them have removed this capability.</p>

<p>And even then, they only supported one single version per interpreter instance.</p>
"
"<p>Is there a way to use arguments when including a ruby module? I have a module Assetable which is included across many classes. I want to be able to generate attr_accessor's on the fly.</p>

<pre><code>module Assetable
  extend ActiveSupport::Concern

  included do 
    (argument).times do |i| 
      attr_accessor ""asset_#{i}"".to_sym
      attr_accessible ""asset_#{i}"".to_sym
    end
  end
end 
</code></pre>
","2988","","<p>You can't pass arguments to a module. In fact, you can't pass arguments to anything except a message send.</p>

<p>So, you have to use a message send:</p>

<pre><code>module Kernel
  private def Assetable(num)
    @__assetable_cache__ ||= []
    @__assetable_cache__[num] ||= Module.new do
      num.times do |i|
        attr_accessor   :""asset_#{i}""
        attr_accessible :""asset_#{i}""
      end
    end
  end
end

class Foo
  include Assetable 3
end
</code></pre>

<p>Note: I didn't see why you would need <code>ActiveSupport::Concern</code> here at all, but it's easy to add back in.</p>
"
"<p>I often have to generate SVG files, and I like doing so with Ruby's Nokogiri. The nice thing about Nokogiri is that it lets you create attributes passing a hash to their ""functions"", like so</p>

<pre><code>doc.rect(:x =&gt; 0, :y =&gt; 0, :width =&gt; 100, :height =&gt; 100)
</code></pre>

<p>which is great. There are some attributes that have hyphens: in that case you can just take advantage of Ruby's awesomeness and do something like</p>

<pre><code>doc.rect(:x =&gt; 0, :y =&gt; 0, :width =&gt; 100, :height =&gt; 100, :stroke =&gt; 'black', 'stroke-width' =&gt; 3)
</code></pre>

<p>and all is relatively well. Enter Ruby 2.0 and named parameters. I much prefer this syntax, it's a bit more concise and a bit more smalltalkesque, which I like. However, the only way to create hyphenated attributes now is to mix the two approaches, provided that you place the 'hash' after the named parameters (I assume it has to be this way, but I haven't checked). In any case, it's ugly.</p>

<p>Is there any way you wise people can conjure up to create hyphenated attributes using the named parameters syntax?</p>

<p><strong>EDIT</strong>: To clarify, named parameters look like this:</p>

<pre><code>doc.rect(x: 0, y: 0, width: 100, height: 100)
</code></pre>
","2988","","<p>This is not possible. Hyphens are not legal in an identifier.</p>

<p>Think about it: how would you know whether <code>a-b</code> means the identifier <code>a-b</code> or <code>a</code> minus <code>b</code>?</p>
"
"<p>This is possible in Ruby:</p>

<pre><code>class SomeClass
  def initialize(a, *b, c)
  end
end
</code></pre>

<p>but this is not:</p>

<pre><code>class SomeClass
  def initialize(a, *b, c='anything here')
  end
end
</code></pre>

<p>Why?</p>

<p>Edit: This question does NOT have an answer. In the answer linked, the first answer is:</p>

<blockquote>
  <p>The splat means ""use up all of the remaining arguments"" but then you
  provide an optional argument, so how could the interpreter know if the
  last argument is part of the ""numbers"" splat or the optional
  ""options""?</p>
</blockquote>

<p>Which is NOT a valid answer because according to this logic, Ruby would also not allow mandatory parameters after a splat.</p>
","2988","","<p>Ruby's argument binding semantics are already pretty complex. Consider this method:</p>

<pre><code>def foo(m1, m2, o1=:o1, o2=:o2, *splat, m3, m4, 
          ok1: :ok1, mk1:, mk2:, ok2: :ok2, **ksplat, &amp;blk)
  local_variables.map {|var| [var, eval(var.to_s)] }.to_h
end

method(:foo).arity
# =&gt; -5

method(:foo).parameters
# =&gt; [[:req, :m1], [:req, :m2], [:opt, :o1], [:opt, :o2], [:rest, :splat], 
#     [:req, :m3], [:req, :m4], [:keyreq, :mk1], [:keyreq, :mk2], 
#     [:key, :ok1], [:key, :ok2], [:keyrest, :ksplat], [:block, :blk]]
</code></pre>

<p>Can you tell at first glance what the result of the following invocations will be?</p>

<pre><code>foo(1, 2, 3, 4)

foo(1, 2, 3, mk1: 4, mk2: 5)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
</code></pre>

<p>Now, imagine adding optional parameters with default arguments after the splat parameter to that list. It's not impossible to find sane semantics for that, but it may lead to some non-obvious results.</p>

<p>Can you come up with simple, sane, backwards-compatible, and non-surprising semantics?</p>

<p>BTW: here's the cheatsheet for the method at the top:</p>

<pre><code>foo(1, 2, 3, 4)
# ArgumentError: missing keywords: mk1, mk2

foo(1, 2, 3, mk1: 4, mk2: 5)
# ArgumentError: wrong number of arguments (3 for 4+)

foo(1, 2, 3, 4, mk1: 5, mk2: 6)
# =&gt; { m1: 1, m2: 2, o1: :o1, o2: :o2, splat: [], m3: 3, m4: 4, 
#      ok1: :ok1, mk1: 5, mk2: 6, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, mk1: 6, mk2: 7)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: :o2, splat: [], m3: 4, m4: 5, 
#      ok1: :ok1, mk1: 6, mk2: 7, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, mk1: 7, mk2: 8)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [], m3: 5, m4: 6, 
#      ok1: :ok1, mk1: 7, mk2: 8, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, mk1: 8, mk2: 9)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5], m3: 6, m4: 7, 
#      ok1: :ok1, mk1: 8, mk2: 9, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, mk1: 9, mk2: 10)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: :ok1, mk1: 9, mk2: 10, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: :ok2, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, ok1: 9, mk1: 10, mk2: 11, ok2: 12, k3: 13, k4: 14)
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: nil }

foo(1, 2, 3, 4, 5, 6, 7, 8, 
      ok1: 9, ok2: 10, mk1: 11, mk2: 12, k3: 13, k4: 14) do 15 end
# =&gt; { m1: 1, m2: 2, o1: 3, o2: 4, splat: [5, 6], m3: 7, m4: 8, 
#      ok1: 9, mk1: 10, mk2: 11, ok2: 12, ksplat: {k3: 13, k4: 14}, 
#      blk: #&lt;Proc:0xdeadbeefc00l42@(irb):15&gt; }
</code></pre>
"
"<p>Is it possible to ""sum"" diverse enumerables when they are string mode?
per example like this? (well, I know this doesn't work.)</p>

<pre><code>(( 'a'..'z') + ('A'..'Z')).to_a
</code></pre>

<p>note: 
I am asking about getting an array of string chars from a to z and from A to Z all together.
About string mode I mean that the chars will appears like [""a"", ""b"", ..... , ""Y"", ""Z""]</p>
","2988","","<p>Since you want the elements from the <em>first</em> <code>Range</code> to be at the <em>end</em> of the output <code>Array</code> and the elements of the <em>last</em> <code>Range</code> to be at the <em>beginning</em> of the output <code>Array</code>, but still keep the same order <em>within</em> each <code>Range</code>, I would do it like this (which also generalizes nicely to more than two <code>Enumerable</code>s):</p>

<pre><code>def backwards_concat(*enums)
  enums.reverse.map(&amp;:to_a).inject([], &amp;:concat)
end

backwards_concat('A'..'Z', 'a'..'z')
</code></pre>
"
"<p>I'm doing Ruby exercises for the Odin Project (programming newcomer), and we're tasked with recreating Ruby's #count method. Given an array like:</p>

<pre><code>nil_list = [false, false, nil]
</code></pre>

<p>Observations:</p>

<ul>
<li>nil_list.count == 3, its length.</li>
<li>nil_list.count(nil) == 1, the number of times nil is present in the list.</li>
<li>nil_list given a block behaves as expected.</li>
</ul>

<p>When I try to recreate it, here's what I come up with:</p>

<pre><code>module Enumerable
  def my_count (find = nil)
    result = 0
    for i in self
      if block_given?
        result += 1 if yield(i)
      elsif find != nil
        result += 1 if i == find
      else return self.length
      end
    end
    return result
  end
end
</code></pre>

<p>The problem here is that this doesn't actually count nils if we enter nil in as an argument, since this is the same (according to my code) as there not being an argument.</p>

<p>ie, nil_list.my_count(nil) == 3 instead of 1.</p>

<p>While typing this question I had a slightly different idea:</p>

<pre><code>module Enumerable
  def my_count (find = """")
    result = 0
    for i in self
      if block_given?
        result += 1 if yield(i)
      elsif find != """"
        result += 1 if i == find
      else return self.length
      end
    end
    return result
  end
end
</code></pre>

<p>So this fixes the problem I was having with searches for nil, but now nil_list.count("""") == 0 whereas nil_list.my_count("""") == 3. Same issue, just relocated to """" which I assume doesn't ever get used.</p>

<p>At this point I'm just curious: how does the actual count method prevent this issue from happening?</p>
","2988","","<p>The ugly truth is: in most Ruby implementations, <code>Enumerable#count</code> isn't actually written in Ruby. In MRI, YARV and MRuby, it's written in C, in JRuby and XRuby, it's written in Java, in IronRuby and Ruby.NET, it's written in C#, in MacRuby, it's written in Objective-C, in MagLev, it's written in Smalltalk, in Topaz, it's written in RPython, in Cardinal, it's written in PIR or PASM, and so on. And it not only is not written in Ruby, it's also got privileged access to the internals of the execution engine, in particular, it can access the arguments that were passed, which you cannot do from Ruby.</p>

<p>Such overloaded methods appear all over the core library and standard library, but they can't easily be written in Ruby. The implementers cheat by either writing them in languages that <em>do</em> support overloading (e.g. C# or Java), or they give them privileged access to the internals of the execution engine.</p>

<p>The standard workaround in Ruby is to (ab)use the fact that the default value of an optional parameter is just a normal Ruby expression and that local variables in a default value expression are visible inside the method body:</p>

<pre><code>def my_count(find = (find_passed = false; nil))
  if find_passed # find was passed
    # do something
  else
    # do something else
  end
end
</code></pre>

<p>A second possibility is to use some unforgeable unique token as the default value:</p>

<pre><code>undefined = Object.new
define_method(:my_count) do |find = undefined|
  if undefined.equal?(find) # find was not passed
    # do something
  else
    # do something else
  end
end
</code></pre>
"
"<p><code>send</code> does not work for lambda in Ruby:</p>

<pre><code>&gt;&gt; def mymethod; end
=&gt; :mymethod
&gt;&gt; send('mymethod')
=&gt; nil

&gt;&gt; mylambda = -&gt;{}
=&gt; #&lt;Proc:0x9f2fe28@(pry):136 (lambda)&gt;
&gt;&gt; send('mylambda')
=&gt; NoMethodError: undefined method `mylambda' for main:Object
</code></pre>

<p>How do I dynamically call a lambda via a string?</p>
","2988","","<p>If you have the correct <code>Binding</code> for the context of your local variable, you can use <code>Binding#local_variable_get</code> to get the value of the local variable. And to get a <code>Binding</code> for the current context, you can use <code>Kernel#binding</code>:</p>

<pre><code>binding.local_variable_get(:mylambda).()
</code></pre>
"
"<p>I am testing <a href=""http://ruby-doc.org/core-2.1.4/Thread.html"" rel=""nofollow"">Threads</a> in Ruby at the moment, but don't understand: if they are actually work in MRI or not? By working threads I mean ability to execute them in parallel to speed up application.</p>

<p>Here is my example:</p>

<pre class=""lang-rb prettyprint-override""><code>require 'benchmark'

Benchmark.bm do |x|
  x.report do
    threads = []

    thread_1 = Thread.new { (1..50_000_000).inject { |sum, n| sum + n } }
    thread_2 = Thread.new { (1..100_000_000).inject { |sum, n| sum + n } }

    threads &lt;&lt; thread_1
    threads &lt;&lt; thread_2

    threads.each { |t| t.join }
  end
end


Benchmark.bm do |x|
  x.report do
    (1..50_000_000).inject { |sum, n| sum + n }
    (1..100_000_000).inject { |sum, n| sum + n }
  end
end 
</code></pre>

<p>Benchmark results(computer does have 2 cores):</p>

<pre><code>       user     system      total        real
  14.040000   0.030000  14.070000 ( 14.096566)
       user     system      total        real
  13.970000   0.030000  14.000000 ( 14.023680)
</code></pre>

<p>As you can see, with threads, program execution is even slower. I assume that threads are being executed coherently(by <code>threads.each { |t| t.join }</code> ). Is there a way to run them simultaneously? Or any other way to speed up ruby-script execution on multi-core computer?</p>

<p>I will appreciate any suggestion.</p>
","2988","","<p>The Ruby Language Specification does not guarantee that threads can actually run in parallel. The vast majority of Ruby implementations are indeed capable of running threads in parallel (e.g. Rubinius, JRuby, IronRuby, MacRuby, Ruby.NET), but MRI and YARV can't.</p>

<p>MRI uses green threads, which it schedules itself, but never schedules in parallel. YARV uses native threads which are scheduled by the OS, but protects them with a Giant VM Lock (GVL) to prevent them from being scheduled in parallel. Note that for both MRI and YARV, this only applies to <em>Ruby</em> threads. MRI can run multiple C threads in parallel to its single interpreter thread, and will do so for I/O, for example; also, C extensions can run multiple C threads in parallel. And YARV only prevents its threads from entering the VM, but when they are in the C library or waiting on I/O or running some C code from a C extension, they may run in parallel.</p>

<p>JRuby and IronRuby use JVM threads and CLI threads, respectively. There is nothing within JRuby and IronRuby which prevents them from running in parallel, but it depends on the JVM or CLI implementation you are using. Not all JVMs do support running threads in parallel, although most mainstream ones are capable of that. And, of course, your operating system needs to support it as well, and you need to actually have multiple cores.</p>
"
"<p>I know that to find the source location for a method, you can do something like: </p>

<p><code>Task.method(:completed).source_location</code></p>

<p>How would I do something similarly to find the source location for an instance variable (e.g. ""@task"")?</p>

<p>For example, I'm looking for something like:</p>

<pre><code>instance_variable(@task).source_location
</code></pre>

<p>Is there a way to do so?</p>
","2988","","<p>Instance variables aren't defined like methods, so there is no location for their definition. They magically spring into existence the first time they are assigned, so, really, they have a location in <em>time</em> but not in the <em>source</em>.</p>
"
"<p>I am trying to make a simplistic implementation of AOP in ruby. I was able to implement before and after advices, I got stuck with around advice.</p>

<p>This is the target class that is going to be advised:</p>

<pre><code>class MyClass
  def method
    puts ""running method""
  end
end
</code></pre>

<p>This is the Aspect class to instantiate objects capable of making advices:</p>

<pre><code>class Aspect
  def advise(class_name, method, type, &amp;block)
    class_name.send(:alias_method, :proceed, :method)
    class_name.send(:define_method, :method) do
      case type
      when :before
        yield
        proceed
      when :after
        proceed
        yield
      when :around
        yield(proceed) # * proceed is the old version of the method
      end
    end
  end
end
</code></pre>

<p>(*) Yield should execute the block around MyClass#proceed on the current object when method is invoked.</p>

<p>Creating the target and the aspect:</p>

<pre><code>mc = MyClass.new
a = Aspect.new() 
</code></pre>

<p>Invoking the method without advising it:</p>

<pre><code>puts mc.method
</code></pre>

<p>Advising MyClass#method with around:</p>

<pre><code>a.advise(MyClass, :method, :around) do |proceed|
  puts ""First""
  proceed # this is not working *
  puts ""Last""
end

puts mc.method
</code></pre>

<p>(*) I am not being able to pass something to identify the call of proceed, that is the invocation of the old method without the advice.</p>

<p>The output should be:</p>

<pre><code>First
running method
Last
</code></pre>
","2988","","<p>In Ruby, a method call looks like this:</p>

<pre><code>receiver.method(arguments)
</code></pre>

<p>Or, you can leave off the receiver if the receiver is <code>self</code>.</p>

<p>So, to call a method named <code>proceed</code> on some receiver, you would write</p>

<pre><code>receiver.proceed
</code></pre>

<p>However, in your implementation, you don't keep track of what the receiver should be, so since you don't know the receiver, you simply cannot call the method.</p>

<p>Note that there are lots of other problems with your approach as well. For example, if you advise multiple methods, you will alias them all to the same method, overwriting each other.</p>
"
"<p>I'm looking for the shortest ruby equivalent of this Python snippet</p>

<pre><code>a, b, c, d = map(int, raw_input().split("" "")) 
</code></pre>

<p>is there anything shorter than this?</p>

<pre><code>a, b, c, d = gets.split("" "").map &amp;:to_i
</code></pre>
","2988","","<p>The default value for the <code>split</code> pattern is <code>$;</code>, and the default value for <code>$;</code> is <code>nil</code>. A pattern of <code>nil</code> means ""split on whitespace"", which is not 100% equivalent to what you have (which is ""split on a single space character""), but if you can live with that, then you can shorten your expression to:</p>

<pre><code>a, b, c, d = gets.split.map &amp;:to_i
</code></pre>
"
"<p>How come concatenating to a string does not change its object_id? My understand was that Strings are immutable because Strings are essentally Arrays of Characters, and Arrays cannot be changed in memory since they are contiguous. Yet, as demonstrated below: Instantiating a String than adding characters does not change it's object_id. How does concatenation effect the String in memory?</p>

<pre><code>2.1.2 :131 &gt; t1 = ""Hello ""
 =&gt; ""Hello ""
2.1.2 :132 &gt; t1.object_id
 =&gt; 70282949828720
2.1.2 :133 &gt; t2 = t1
 =&gt; ""Hello ""
2.1.2 :134 &gt; t2.object_id
 =&gt; 70282949828720
2.1.2 :135 &gt; t2 &lt;&lt; ""HEY THERE MATE""
 =&gt; ""Hello HEY THERE MATE""
2.1.2 :136 &gt; t2.object_id
 =&gt; 70282949828720
2.1.2 :137 &gt; t1.object_id
 =&gt; 70282949828720
2.1.2 :138 &gt;
</code></pre>
","2988","","<blockquote>
  <p>How come concatenating to a string does not change its object_id?</p>
</blockquote>

<p>Because it's still the same string it was before.</p>

<blockquote>
  <p>My understand was that Strings are immutable</p>
</blockquote>

<p>No, they are not immutable. In Ruby, strings are mutable.</p>

<blockquote>
  <p>because Strings are essentally Arrays of Characters,</p>
</blockquote>

<p>They are not. In Ruby, strings are mostly a factory for iterators (<code>each_line</code>, <code>each_char</code>, <code>each_codepoint</code>, <code>each_byte</code>). It implements a subset of the <code>Array</code> protocol, but that does not mean that it is an array.</p>

<blockquote>
  <p>and Arrays cannot be changed in memory since they are contiguous.</p>
</blockquote>

<p>Wrong, arrays are mutable in Ruby.</p>

<blockquote>
  <p>Yet, as demonstrated below: Instantiating a String than adding characters does not change it's object_id. How does concatenation effect the String in memory?</p>
</blockquote>

<p>The Ruby Language Specification does not prescribe any particular in-memory representation of strings. Any representation is fine, as long as it supports the semantics specified in the Ruby Language Specification.</p>

<p>Here's a couple of examples from some Ruby implementations:</p>

<ul>
<li>Rubinius:
<ul>
<li><a href=""https://github.com/rubinius/rubinius/blob/master/kernel/common/string.rb"" rel=""nofollow""><code>kernel/common/string.rb</code></a></li>
<li><a href=""https://github.com/rubinius/rubinius/blob/master/kernel/bootstrap/string.rb"" rel=""nofollow""><code>kernel/bootstrap/string.rb</code></a></li>
<li><a href=""https://github.com/rubinius/rubinius/blob/master/vm/builtin/string.cpp"" rel=""nofollow""><code>vm/builtin/string.cpp</code></a></li>
</ul></li>
<li>Topaz:
<ul>
<li><a href=""https://github.com/topazproject/topaz/blob/master/topaz/objects/stringobject.py"" rel=""nofollow""><code>topaz/objects/stringobject.py</code></a></li>
</ul></li>
<li>Cardinal:
<ul>
<li><a href=""https://github.com/parrot/cardinal/blob/master/src/classes/String.pir"" rel=""nofollow""><code>src/classes/String.pir</code></a></li>
</ul></li>
<li>IronRuby:
<ul>
<li><a href=""https://github.com/IronLanguages/main/blob/master/Languages/Ruby/Ruby/Builtins/MutableString.cs"" rel=""nofollow""><code>Ruby/Builtins/MutableString.cs</code></a></li>
</ul></li>
<li>JRuby:
<ul>
<li><a href=""https://github.com/jruby/jruby/blob/master/core/src/main/java/org/jruby/RubyString.java"" rel=""nofollow""><code>core/src/main/java/org/jruby/RubyString.java</code></a></li>
</ul></li>
</ul>
"